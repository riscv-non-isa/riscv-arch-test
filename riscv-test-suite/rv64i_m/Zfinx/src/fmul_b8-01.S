
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Wed Jun 21 10:30:15 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/update/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/update/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fmul.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmul.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fmul_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fmul_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rd != rs1, rs1==x30, rs2==x31, rd==x31,fs1 == 0 and fe1 == 0x7a and fm1 == 0x341568 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x31; dest:x31; op1val:0x3d341568; op2val:0x2d;
   valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x31, x30, x31, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x31, rs2==x29, rd==x30,fs1 == 0 and fe1 == 0x7a and fm1 == 0x341568 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x31; op2:x29; dest:x30; op1val:0x3d341568; op2val:0x2d;
   valaddr_reg:x3; val_offset:2*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x30, x31, x29, dyn, 32, 0, x3, 2*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd != rs2, rs1==x29, rs2==x30, rd==x29,fs1 == 0 and fe1 == 0x7a and fm1 == 0x341568 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x29; op2:x30; dest:x29; op1val:0x3d341568; op2val:0x2d;
   valaddr_reg:x3; val_offset:4*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x29, x29, x30, dyn, 64, 0, x3, 4*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rs2 == rd, rs1==x28, rs2==x28, rd==x28,fs1 == 0 and fe1 == 0x7a and fm1 == 0x341568 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x28; op2:x28; dest:x28; op1val:0x3d341568; op2val:0x3d341568;
   valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x28, x28, x28, dyn, 96, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 != rd, rs1==x26, rs2==x26, rd==x27,fs1 == 0 and fe1 == 0x7a and fm1 == 0x341568 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x26; op2:x26; dest:x27; op1val:0x3d341568; op2val:0x3d341568;
   valaddr_reg:x3; val_offset:8*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x27, x26, x26, dyn, 128, 0, x3, 8*FLEN/8, x4, x1, x2)

inst_5:
// rs1==x27, rs2==x25, rd==x26,fs1 == 0 and fe1 == 0x7e and fm1 == 0x7185d9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x27; op2:x25; dest:x26; op1val:0x3f7185d9; op2val:0x2;
   valaddr_reg:x3; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x26, x27, x25, dyn, 0, 0, x3, 10*FLEN/8, x4, x1, x2)

inst_6:
// rs1==x24, rs2==x27, rd==x25,fs1 == 0 and fe1 == 0x7e and fm1 == 0x7185d9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x24; op2:x27; dest:x25; op1val:0x3f7185d9; op2val:0x2;
   valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x25, x24, x27, dyn, 32, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_7:
// rs1==x25, rs2==x23, rd==x24,fs1 == 0 and fe1 == 0x7e and fm1 == 0x7185d9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x25; op2:x23; dest:x24; op1val:0x3f7185d9; op2val:0x2;
   valaddr_reg:x3; val_offset:14*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x24, x25, x23, dyn, 64, 0, x3, 14*FLEN/8, x4, x1, x2)

inst_8:
// rs1==x22, rs2==x24, rd==x23,fs1 == 0 and fe1 == 0x7e and fm1 == 0x7185d9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x22; op2:x24; dest:x23; op1val:0x3f7185d9; op2val:0x2;
   valaddr_reg:x3; val_offset:16*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x23, x22, x24, dyn, 96, 0, x3, 16*FLEN/8, x4, x1, x2)

inst_9:
// rs1==x23, rs2==x21, rd==x22,fs1 == 0 and fe1 == 0x7e and fm1 == 0x7185d9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x23; op2:x21; dest:x22; op1val:0x3f7185d9; op2val:0x2;
   valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x22, x23, x21, dyn, 128, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_10:
// rs1==x20, rs2==x22, rd==x21,fs1 == 0 and fe1 == 0x7c and fm1 == 0x2872fb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x20; op2:x22; dest:x21; op1val:0x3e2872fb; op2val:0xc;
   valaddr_reg:x3; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x21, x20, x22, dyn, 0, 0, x3, 20*FLEN/8, x4, x1, x2)

inst_11:
// rs1==x21, rs2==x19, rd==x20,fs1 == 0 and fe1 == 0x7c and fm1 == 0x2872fb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x21; op2:x19; dest:x20; op1val:0x3e2872fb; op2val:0xc;
   valaddr_reg:x3; val_offset:22*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x20, x21, x19, dyn, 32, 0, x3, 22*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x18, rs2==x20, rd==x19,fs1 == 0 and fe1 == 0x7c and fm1 == 0x2872fb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x18; op2:x20; dest:x19; op1val:0x3e2872fb; op2val:0xc;
   valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x19, x18, x20, dyn, 64, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x19, rs2==x17, rd==x18,fs1 == 0 and fe1 == 0x7c and fm1 == 0x2872fb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x19; op2:x17; dest:x18; op1val:0x3e2872fb; op2val:0xc;
   valaddr_reg:x3; val_offset:26*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x18, x19, x17, dyn, 96, 0, x3, 26*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x18, rd==x17,fs1 == 0 and fe1 == 0x7c and fm1 == 0x2872fb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x16; op2:x18; dest:x17; op1val:0x3e2872fb; op2val:0xc;
   valaddr_reg:x3; val_offset:28*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x17, x16, x18, dyn, 128, 0, x3, 28*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x17, rs2==x15, rd==x16,fs1 == 0 and fe1 == 0x7d and fm1 == 0x291918 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x17; op2:x15; dest:x16; op1val:0x3ea91918; op2val:0x6;
   valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x16, x17, x15, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rd==x15,fs1 == 0 and fe1 == 0x7d and fm1 == 0x291918 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x14; op2:x16; dest:x15; op1val:0x3ea91918; op2val:0x6;
   valaddr_reg:x3; val_offset:32*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x15, x14, x16, dyn, 32, 0, x3, 32*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x15, rs2==x13, rd==x14,fs1 == 0 and fe1 == 0x7d and fm1 == 0x291918 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x15; op2:x13; dest:x14; op1val:0x3ea91918; op2val:0x6;
   valaddr_reg:x3; val_offset:34*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x14, x15, x13, dyn, 64, 0, x3, 34*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x14, rd==x13,fs1 == 0 and fe1 == 0x7d and fm1 == 0x291918 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x12; op2:x14; dest:x13; op1val:0x3ea91918; op2val:0x6;
   valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x13, x12, x14, dyn, 96, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x13, rs2==x11, rd==x12,fs1 == 0 and fe1 == 0x7d and fm1 == 0x291918 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x13; op2:x11; dest:x12; op1val:0x3ea91918; op2val:0x6;
   valaddr_reg:x3; val_offset:38*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x12, x13, x11, dyn, 128, 0, x3, 38*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x12, rd==x11,fs1 == 0 and fe1 == 0x7d and fm1 == 0x49c1af and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x10; op2:x12; dest:x11; op1val:0x3ec9c1af; op2val:0x5;
   valaddr_reg:x3; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x11, x10, x12, dyn, 0, 0, x3, 40*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x11, rs2==x9, rd==x10,fs1 == 0 and fe1 == 0x7d and fm1 == 0x49c1af and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x11; op2:x9; dest:x10; op1val:0x3ec9c1af; op2val:0x5;
   valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x10, x11, x9, dyn, 32, 0, x3, 42*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x11,test_dataset_1)

inst_22:
// rs1==x8, rs2==x10, rd==x9,fs1 == 0 and fe1 == 0x7d and fm1 == 0x49c1af and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x8; op2:x10; dest:x9; op1val:0x3ec9c1af; op2val:0x5;
   valaddr_reg:x11; val_offset:0*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x9, x8, x10, dyn, 64, 0, x11, 0*FLEN/8, x12, x1, x2)

inst_23:
// rs1==x9, rs2==x7, rd==x8,fs1 == 0 and fe1 == 0x7d and fm1 == 0x49c1af and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x9; op2:x7; dest:x8; op1val:0x3ec9c1af; op2val:0x5;
   valaddr_reg:x11; val_offset:2*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fmul.s, x8, x9, x7, dyn, 96, 0, x11, 2*FLEN/8, x12, x1, x2)

inst_24:
// rs1==x6, rs2==x8, rd==x7,fs1 == 0 and fe1 == 0x7d and fm1 == 0x49c1af and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x6; op2:x8; dest:x7; op1val:0x3ec9c1af; op2val:0x5;
   valaddr_reg:x11; val_offset:4*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x7, x6, x8, dyn, 128, 0, x11, 4*FLEN/8, x12, x1, x9)
RVTEST_SIGBASE(x8,signature_x8_0)

inst_25:
// rs1==x7, rs2==x5, rd==x6,fs1 == 0 and fe1 == 0x7d and fm1 == 0x566c6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x7; op2:x5; dest:x6; op1val:0x3ed66c6d; op2val:0x4;
   valaddr_reg:x11; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x6, x7, x5, dyn, 0, 0, x11, 6*FLEN/8, x12, x8, x9)

inst_26:
// rs1==x4, rs2==x6, rd==x5,fs1 == 0 and fe1 == 0x7d and fm1 == 0x566c6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x4; op2:x6; dest:x5; op1val:0x3ed66c6d; op2val:0x4;
   valaddr_reg:x11; val_offset:8*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x5, x4, x6, dyn, 32, 0, x11, 8*FLEN/8, x12, x8, x9)

inst_27:
// rs1==x5, rs2==x3, rd==x4,fs1 == 0 and fe1 == 0x7d and fm1 == 0x566c6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x5; op2:x3; dest:x4; op1val:0x3ed66c6d; op2val:0x4;
   valaddr_reg:x11; val_offset:10*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x4, x5, x3, dyn, 64, 0, x11, 10*FLEN/8, x12, x8, x9)

inst_28:
// rs1==x2, rs2==x4, rd==x3,fs1 == 0 and fe1 == 0x7d and fm1 == 0x566c6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x2; op2:x4; dest:x3; op1val:0x3ed66c6d; op2val:0x4;
   valaddr_reg:x11; val_offset:12*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x3, x2, x4, dyn, 96, 0, x11, 12*FLEN/8, x12, x8, x9)

inst_29:
// rs1==x3, rs2==x1, rd==x2,fs1 == 0 and fe1 == 0x7d and fm1 == 0x566c6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x3; op2:x1; dest:x2; op1val:0x3ed66c6d; op2val:0x4;
   valaddr_reg:x11; val_offset:14*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x2, x3, x1, dyn, 128, 0, x11, 14*FLEN/8, x12, x8, x9)

inst_30:
// rs1==x0, rs2==x2, rd==x1,fs1 == 0 and fe1 == 0x7e and fm1 == 0x11bfa2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x0; op2:x2; dest:x1; op1val:0x0; op2val:0x3;
   valaddr_reg:x11; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x1, x0, x2, dyn, 0, 0, x11, 16*FLEN/8, x12, x8, x9)

inst_31:
// rs1==x1,fs1 == 0 and fe1 == 0x7e and fm1 == 0x11bfa2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x1; op2:x30; dest:x31; op1val:0x3f11bfa2; op2val:0x3;
   valaddr_reg:x11; val_offset:18*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x1, x30, dyn, 32, 0, x11, 18*FLEN/8, x12, x8, x9)

inst_32:
// rs2==x0,fs1 == 0 and fe1 == 0x7e and fm1 == 0x11bfa2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x0; dest:x31; op1val:0x3f11bfa2; op2val:0x0;
   valaddr_reg:x11; val_offset:20*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x0, dyn, 64, 0, x11, 20*FLEN/8, x12, x8, x9)

inst_33:
// rd==x0,fs1 == 0 and fe1 == 0x7e and fm1 == 0x11bfa2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x31; op2:x30; dest:x0; op1val:0x3f11bfa2; op2val:0x3;
   valaddr_reg:x11; val_offset:22*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x0, x31, x30, dyn, 96, 0, x11, 22*FLEN/8, x12, x8, x9)

inst_34:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x11bfa2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f11bfa2; op2val:0x3;
   valaddr_reg:x11; val_offset:24*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 24*FLEN/8, x12, x8, x9)

inst_35:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0dd15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8dd15c; op2val:0x7;
   valaddr_reg:x11; val_offset:26*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 26*FLEN/8, x12, x8, x9)

inst_36:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0dd15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8dd15c; op2val:0x7;
   valaddr_reg:x11; val_offset:28*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 28*FLEN/8, x12, x8, x9)

inst_37:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0dd15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8dd15c; op2val:0x7;
   valaddr_reg:x11; val_offset:30*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 30*FLEN/8, x12, x8, x9)

inst_38:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0dd15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8dd15c; op2val:0x7;
   valaddr_reg:x11; val_offset:32*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 32*FLEN/8, x12, x8, x9)

inst_39:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0dd15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8dd15c; op2val:0x7;
   valaddr_reg:x11; val_offset:34*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 34*FLEN/8, x12, x8, x9)

inst_40:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4f46b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000027 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d4f46b1; op2val:0x27;
   valaddr_reg:x11; val_offset:36*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 36*FLEN/8, x12, x8, x9)

inst_41:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4f46b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000027 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d4f46b1; op2val:0x27;
   valaddr_reg:x11; val_offset:38*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 38*FLEN/8, x12, x8, x9)

inst_42:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4f46b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000027 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d4f46b1; op2val:0x27;
   valaddr_reg:x11; val_offset:40*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 40*FLEN/8, x12, x8, x9)

inst_43:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4f46b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000027 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d4f46b1; op2val:0x27;
   valaddr_reg:x11; val_offset:42*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 42*FLEN/8, x12, x8, x9)

inst_44:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4f46b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000027 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d4f46b1; op2val:0x27;
   valaddr_reg:x11; val_offset:44*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 44*FLEN/8, x12, x8, x9)

inst_45:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e1e09 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0e1e09; op2val:0x3;
   valaddr_reg:x11; val_offset:46*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 46*FLEN/8, x12, x8, x9)

inst_46:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e1e09 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0e1e09; op2val:0x3;
   valaddr_reg:x11; val_offset:48*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 48*FLEN/8, x12, x8, x9)

inst_47:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e1e09 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0e1e09; op2val:0x3;
   valaddr_reg:x11; val_offset:50*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 50*FLEN/8, x12, x8, x9)

inst_48:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e1e09 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0e1e09; op2val:0x3;
   valaddr_reg:x11; val_offset:52*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 52*FLEN/8, x12, x8, x9)

inst_49:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e1e09 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0e1e09; op2val:0x3;
   valaddr_reg:x11; val_offset:54*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 54*FLEN/8, x12, x8, x9)

inst_50:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76cda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f76cda9; op2val:0x2;
   valaddr_reg:x11; val_offset:56*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 56*FLEN/8, x12, x8, x9)

inst_51:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76cda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f76cda9; op2val:0x2;
   valaddr_reg:x11; val_offset:58*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 58*FLEN/8, x12, x8, x9)

inst_52:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76cda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f76cda9; op2val:0x2;
   valaddr_reg:x11; val_offset:60*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 60*FLEN/8, x12, x8, x9)

inst_53:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76cda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f76cda9; op2val:0x2;
   valaddr_reg:x11; val_offset:62*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 62*FLEN/8, x12, x8, x9)

inst_54:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76cda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f76cda9; op2val:0x2;
   valaddr_reg:x11; val_offset:64*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 64*FLEN/8, x12, x8, x9)

inst_55:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08fcb7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f08fcb7; op2val:0x3;
   valaddr_reg:x11; val_offset:66*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 66*FLEN/8, x12, x8, x9)

inst_56:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08fcb7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f08fcb7; op2val:0x3;
   valaddr_reg:x11; val_offset:68*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 68*FLEN/8, x12, x8, x9)

inst_57:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08fcb7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f08fcb7; op2val:0x3;
   valaddr_reg:x11; val_offset:70*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 70*FLEN/8, x12, x8, x9)

inst_58:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08fcb7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f08fcb7; op2val:0x3;
   valaddr_reg:x11; val_offset:72*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 72*FLEN/8, x12, x8, x9)

inst_59:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08fcb7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f08fcb7; op2val:0x3;
   valaddr_reg:x11; val_offset:74*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 74*FLEN/8, x12, x8, x9)

inst_60:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1eb757 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1eb757; op2val:0x3;
   valaddr_reg:x11; val_offset:76*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 76*FLEN/8, x12, x8, x9)

inst_61:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1eb757 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1eb757; op2val:0x3;
   valaddr_reg:x11; val_offset:78*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 78*FLEN/8, x12, x8, x9)

inst_62:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1eb757 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1eb757; op2val:0x3;
   valaddr_reg:x11; val_offset:80*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 80*FLEN/8, x12, x8, x9)

inst_63:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1eb757 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1eb757; op2val:0x3;
   valaddr_reg:x11; val_offset:82*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 82*FLEN/8, x12, x8, x9)

inst_64:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1eb757 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1eb757; op2val:0x3;
   valaddr_reg:x11; val_offset:84*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 84*FLEN/8, x12, x8, x9)

inst_65:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x72d088 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef2d088; op2val:0x4;
   valaddr_reg:x11; val_offset:86*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 86*FLEN/8, x12, x8, x9)

inst_66:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x72d088 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef2d088; op2val:0x4;
   valaddr_reg:x11; val_offset:88*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 88*FLEN/8, x12, x8, x9)

inst_67:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x72d088 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef2d088; op2val:0x4;
   valaddr_reg:x11; val_offset:90*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 90*FLEN/8, x12, x8, x9)

inst_68:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x72d088 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef2d088; op2val:0x4;
   valaddr_reg:x11; val_offset:92*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 92*FLEN/8, x12, x8, x9)

inst_69:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x72d088 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef2d088; op2val:0x4;
   valaddr_reg:x11; val_offset:94*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 94*FLEN/8, x12, x8, x9)

inst_70:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x438d6a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f438d6a; op2val:0x2;
   valaddr_reg:x11; val_offset:96*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 96*FLEN/8, x12, x8, x9)

inst_71:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x438d6a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f438d6a; op2val:0x2;
   valaddr_reg:x11; val_offset:98*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 98*FLEN/8, x12, x8, x9)

inst_72:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x438d6a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f438d6a; op2val:0x2;
   valaddr_reg:x11; val_offset:100*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 100*FLEN/8, x12, x8, x9)

inst_73:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x438d6a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f438d6a; op2val:0x2;
   valaddr_reg:x11; val_offset:102*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 102*FLEN/8, x12, x8, x9)

inst_74:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x438d6a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f438d6a; op2val:0x2;
   valaddr_reg:x11; val_offset:104*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 104*FLEN/8, x12, x8, x9)

inst_75:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2cc36e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2cc36e; op2val:0x2;
   valaddr_reg:x11; val_offset:106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 106*FLEN/8, x12, x8, x9)

inst_76:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2cc36e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2cc36e; op2val:0x2;
   valaddr_reg:x11; val_offset:108*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 108*FLEN/8, x12, x8, x9)

inst_77:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2cc36e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2cc36e; op2val:0x2;
   valaddr_reg:x11; val_offset:110*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 110*FLEN/8, x12, x8, x9)

inst_78:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2cc36e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2cc36e; op2val:0x2;
   valaddr_reg:x11; val_offset:112*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 112*FLEN/8, x12, x8, x9)

inst_79:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2cc36e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2cc36e; op2val:0x2;
   valaddr_reg:x11; val_offset:114*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 114*FLEN/8, x12, x8, x9)

inst_80:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ac3f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efac3f0; op2val:0x4;
   valaddr_reg:x11; val_offset:116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 116*FLEN/8, x12, x8, x9)

inst_81:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ac3f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efac3f0; op2val:0x4;
   valaddr_reg:x11; val_offset:118*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 118*FLEN/8, x12, x8, x9)

inst_82:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ac3f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efac3f0; op2val:0x4;
   valaddr_reg:x11; val_offset:120*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 120*FLEN/8, x12, x8, x9)

inst_83:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ac3f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efac3f0; op2val:0x4;
   valaddr_reg:x11; val_offset:122*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 122*FLEN/8, x12, x8, x9)

inst_84:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ac3f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efac3f0; op2val:0x4;
   valaddr_reg:x11; val_offset:124*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 124*FLEN/8, x12, x8, x9)

inst_85:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26aa98 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea6aa98; op2val:0x6;
   valaddr_reg:x11; val_offset:126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 126*FLEN/8, x12, x8, x9)

inst_86:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26aa98 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea6aa98; op2val:0x6;
   valaddr_reg:x11; val_offset:128*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 128*FLEN/8, x12, x8, x9)

inst_87:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26aa98 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea6aa98; op2val:0x6;
   valaddr_reg:x11; val_offset:130*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 130*FLEN/8, x12, x8, x9)

inst_88:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26aa98 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea6aa98; op2val:0x6;
   valaddr_reg:x11; val_offset:132*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 132*FLEN/8, x12, x8, x9)

inst_89:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26aa98 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea6aa98; op2val:0x6;
   valaddr_reg:x11; val_offset:134*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 134*FLEN/8, x12, x8, x9)

inst_90:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x59f72a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000012 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd9f72a; op2val:0x12;
   valaddr_reg:x11; val_offset:136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 136*FLEN/8, x12, x8, x9)

inst_91:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x59f72a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000012 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd9f72a; op2val:0x12;
   valaddr_reg:x11; val_offset:138*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 138*FLEN/8, x12, x8, x9)

inst_92:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x59f72a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000012 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd9f72a; op2val:0x12;
   valaddr_reg:x11; val_offset:140*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 140*FLEN/8, x12, x8, x9)

inst_93:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x59f72a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000012 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd9f72a; op2val:0x12;
   valaddr_reg:x11; val_offset:142*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 142*FLEN/8, x12, x8, x9)

inst_94:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x59f72a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000012 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd9f72a; op2val:0x12;
   valaddr_reg:x11; val_offset:144*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 144*FLEN/8, x12, x8, x9)

inst_95:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07fc80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e87fc80; op2val:0x7;
   valaddr_reg:x11; val_offset:146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 146*FLEN/8, x12, x8, x9)

inst_96:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07fc80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e87fc80; op2val:0x7;
   valaddr_reg:x11; val_offset:148*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 148*FLEN/8, x12, x8, x9)

inst_97:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07fc80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e87fc80; op2val:0x7;
   valaddr_reg:x11; val_offset:150*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 150*FLEN/8, x12, x8, x9)

inst_98:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07fc80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e87fc80; op2val:0x7;
   valaddr_reg:x11; val_offset:152*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 152*FLEN/8, x12, x8, x9)

inst_99:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07fc80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e87fc80; op2val:0x7;
   valaddr_reg:x11; val_offset:154*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 154*FLEN/8, x12, x8, x9)

inst_100:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x72ce25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000008 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e72ce25; op2val:0x8;
   valaddr_reg:x11; val_offset:156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 156*FLEN/8, x12, x8, x9)

inst_101:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x72ce25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000008 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e72ce25; op2val:0x8;
   valaddr_reg:x11; val_offset:158*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 158*FLEN/8, x12, x8, x9)

inst_102:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x72ce25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000008 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e72ce25; op2val:0x8;
   valaddr_reg:x11; val_offset:160*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 160*FLEN/8, x12, x8, x9)

inst_103:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x72ce25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000008 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e72ce25; op2val:0x8;
   valaddr_reg:x11; val_offset:162*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 162*FLEN/8, x12, x8, x9)

inst_104:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x72ce25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000008 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e72ce25; op2val:0x8;
   valaddr_reg:x11; val_offset:164*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 164*FLEN/8, x12, x8, x9)

inst_105:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256e37 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f256e37; op2val:0x3;
   valaddr_reg:x11; val_offset:166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 166*FLEN/8, x12, x8, x9)

inst_106:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256e37 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f256e37; op2val:0x3;
   valaddr_reg:x11; val_offset:168*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 168*FLEN/8, x12, x8, x9)

inst_107:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256e37 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f256e37; op2val:0x3;
   valaddr_reg:x11; val_offset:170*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 170*FLEN/8, x12, x8, x9)

inst_108:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256e37 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f256e37; op2val:0x3;
   valaddr_reg:x11; val_offset:172*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 172*FLEN/8, x12, x8, x9)

inst_109:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256e37 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f256e37; op2val:0x3;
   valaddr_reg:x11; val_offset:174*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 174*FLEN/8, x12, x8, x9)

inst_110:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1c0dc3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000034 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1c0dc3; op2val:0x34;
   valaddr_reg:x11; val_offset:176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 176*FLEN/8, x12, x8, x9)

inst_111:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1c0dc3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000034 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1c0dc3; op2val:0x34;
   valaddr_reg:x11; val_offset:178*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 178*FLEN/8, x12, x8, x9)

inst_112:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1c0dc3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000034 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1c0dc3; op2val:0x34;
   valaddr_reg:x11; val_offset:180*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 180*FLEN/8, x12, x8, x9)

inst_113:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1c0dc3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000034 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1c0dc3; op2val:0x34;
   valaddr_reg:x11; val_offset:182*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 182*FLEN/8, x12, x8, x9)

inst_114:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1c0dc3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000034 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1c0dc3; op2val:0x34;
   valaddr_reg:x11; val_offset:184*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 184*FLEN/8, x12, x8, x9)

inst_115:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7be65b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000008 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7be65b; op2val:0x8;
   valaddr_reg:x11; val_offset:186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 186*FLEN/8, x12, x8, x9)

inst_116:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7be65b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000008 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7be65b; op2val:0x8;
   valaddr_reg:x11; val_offset:188*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 188*FLEN/8, x12, x8, x9)

inst_117:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7be65b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000008 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7be65b; op2val:0x8;
   valaddr_reg:x11; val_offset:190*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 190*FLEN/8, x12, x8, x9)

inst_118:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7be65b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000008 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7be65b; op2val:0x8;
   valaddr_reg:x11; val_offset:192*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 192*FLEN/8, x12, x8, x9)

inst_119:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7be65b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000008 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7be65b; op2val:0x8;
   valaddr_reg:x11; val_offset:194*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 194*FLEN/8, x12, x8, x9)

inst_120:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09e140 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f09e140; op2val:0x3;
   valaddr_reg:x11; val_offset:196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 196*FLEN/8, x12, x8, x9)

inst_121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09e140 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f09e140; op2val:0x3;
   valaddr_reg:x11; val_offset:198*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 198*FLEN/8, x12, x8, x9)

inst_122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09e140 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f09e140; op2val:0x3;
   valaddr_reg:x11; val_offset:200*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 200*FLEN/8, x12, x8, x9)

inst_123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09e140 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f09e140; op2val:0x3;
   valaddr_reg:x11; val_offset:202*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 202*FLEN/8, x12, x8, x9)

inst_124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09e140 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f09e140; op2val:0x3;
   valaddr_reg:x11; val_offset:204*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 204*FLEN/8, x12, x8, x9)

inst_125:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x028e72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f028e72; op2val:0x3;
   valaddr_reg:x11; val_offset:206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 206*FLEN/8, x12, x8, x9)

inst_126:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x028e72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f028e72; op2val:0x3;
   valaddr_reg:x11; val_offset:208*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 208*FLEN/8, x12, x8, x9)

inst_127:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x028e72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f028e72; op2val:0x3;
   valaddr_reg:x11; val_offset:210*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 210*FLEN/8, x12, x8, x9)

inst_128:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x028e72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f028e72; op2val:0x3;
   valaddr_reg:x11; val_offset:212*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 212*FLEN/8, x12, x8, x9)

inst_129:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x028e72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f028e72; op2val:0x3;
   valaddr_reg:x11; val_offset:214*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 214*FLEN/8, x12, x8, x9)

inst_130:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f91c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eff91c2; op2val:0x4;
   valaddr_reg:x11; val_offset:216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 216*FLEN/8, x12, x8, x9)

inst_131:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f91c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eff91c2; op2val:0x4;
   valaddr_reg:x11; val_offset:218*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 218*FLEN/8, x12, x8, x9)

inst_132:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f91c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eff91c2; op2val:0x4;
   valaddr_reg:x11; val_offset:220*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 220*FLEN/8, x12, x8, x9)

inst_133:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f91c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eff91c2; op2val:0x4;
   valaddr_reg:x11; val_offset:222*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 222*FLEN/8, x12, x8, x9)

inst_134:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f91c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eff91c2; op2val:0x4;
   valaddr_reg:x11; val_offset:224*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 224*FLEN/8, x12, x8, x9)

inst_135:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256539 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f256539; op2val:0x3;
   valaddr_reg:x11; val_offset:226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 226*FLEN/8, x12, x8, x9)

inst_136:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256539 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f256539; op2val:0x3;
   valaddr_reg:x11; val_offset:228*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 228*FLEN/8, x12, x8, x9)

inst_137:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256539 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f256539; op2val:0x3;
   valaddr_reg:x11; val_offset:230*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 230*FLEN/8, x12, x8, x9)

inst_138:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256539 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f256539; op2val:0x3;
   valaddr_reg:x11; val_offset:232*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 232*FLEN/8, x12, x8, x9)

inst_139:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256539 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f256539; op2val:0x3;
   valaddr_reg:x11; val_offset:234*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 234*FLEN/8, x12, x8, x9)

inst_140:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4d69c7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000013 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dcd69c7; op2val:0x13;
   valaddr_reg:x11; val_offset:236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 236*FLEN/8, x12, x8, x9)

inst_141:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4d69c7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000013 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dcd69c7; op2val:0x13;
   valaddr_reg:x11; val_offset:238*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 238*FLEN/8, x12, x8, x9)

inst_142:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4d69c7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000013 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dcd69c7; op2val:0x13;
   valaddr_reg:x11; val_offset:240*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 240*FLEN/8, x12, x8, x9)

inst_143:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4d69c7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000013 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dcd69c7; op2val:0x13;
   valaddr_reg:x11; val_offset:242*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 242*FLEN/8, x12, x8, x9)

inst_144:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4d69c7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000013 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dcd69c7; op2val:0x13;
   valaddr_reg:x11; val_offset:244*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 244*FLEN/8, x12, x8, x9)

inst_145:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5d55c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3edd55c2; op2val:0x4;
   valaddr_reg:x11; val_offset:246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 246*FLEN/8, x12, x8, x9)

inst_146:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5d55c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3edd55c2; op2val:0x4;
   valaddr_reg:x11; val_offset:248*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 248*FLEN/8, x12, x8, x9)

inst_147:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5d55c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3edd55c2; op2val:0x4;
   valaddr_reg:x11; val_offset:250*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 250*FLEN/8, x12, x8, x9)

inst_148:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5d55c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3edd55c2; op2val:0x4;
   valaddr_reg:x11; val_offset:252*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 252*FLEN/8, x12, x8, x9)

inst_149:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5d55c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3edd55c2; op2val:0x4;
   valaddr_reg:x11; val_offset:254*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 254*FLEN/8, x12, x8, x9)

inst_150:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d6da1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d6da1; op2val:0x7;
   valaddr_reg:x11; val_offset:256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 256*FLEN/8, x12, x8, x9)

inst_151:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d6da1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d6da1; op2val:0x7;
   valaddr_reg:x11; val_offset:258*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 258*FLEN/8, x12, x8, x9)

inst_152:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d6da1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d6da1; op2val:0x7;
   valaddr_reg:x11; val_offset:260*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 260*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_1)

inst_153:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d6da1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d6da1; op2val:0x7;
   valaddr_reg:x11; val_offset:262*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 262*FLEN/8, x12, x8, x9)

inst_154:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d6da1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d6da1; op2val:0x7;
   valaddr_reg:x11; val_offset:264*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 264*FLEN/8, x12, x8, x9)

inst_155:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x473764 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f473764; op2val:0x2;
   valaddr_reg:x11; val_offset:266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 266*FLEN/8, x12, x8, x9)

inst_156:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x473764 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f473764; op2val:0x2;
   valaddr_reg:x11; val_offset:268*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 268*FLEN/8, x12, x8, x9)

inst_157:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x473764 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f473764; op2val:0x2;
   valaddr_reg:x11; val_offset:270*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 270*FLEN/8, x12, x8, x9)

inst_158:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x473764 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f473764; op2val:0x2;
   valaddr_reg:x11; val_offset:272*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 272*FLEN/8, x12, x8, x9)

inst_159:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x473764 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f473764; op2val:0x2;
   valaddr_reg:x11; val_offset:274*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 274*FLEN/8, x12, x8, x9)

inst_160:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x19d1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e99d1bf; op2val:0x6;
   valaddr_reg:x11; val_offset:276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 276*FLEN/8, x12, x8, x9)

inst_161:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x19d1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e99d1bf; op2val:0x6;
   valaddr_reg:x11; val_offset:278*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 278*FLEN/8, x12, x8, x9)

inst_162:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x19d1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e99d1bf; op2val:0x6;
   valaddr_reg:x11; val_offset:280*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 280*FLEN/8, x12, x8, x9)

inst_163:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x19d1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e99d1bf; op2val:0x6;
   valaddr_reg:x11; val_offset:282*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 282*FLEN/8, x12, x8, x9)

inst_164:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x19d1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000006 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e99d1bf; op2val:0x6;
   valaddr_reg:x11; val_offset:284*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 284*FLEN/8, x12, x8, x9)

inst_165:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3c89b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000015 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dbc89b1; op2val:0x15;
   valaddr_reg:x11; val_offset:286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 286*FLEN/8, x12, x8, x9)

inst_166:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3c89b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000015 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dbc89b1; op2val:0x15;
   valaddr_reg:x11; val_offset:288*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 288*FLEN/8, x12, x8, x9)

inst_167:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3c89b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000015 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dbc89b1; op2val:0x15;
   valaddr_reg:x11; val_offset:290*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 290*FLEN/8, x12, x8, x9)

inst_168:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3c89b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000015 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dbc89b1; op2val:0x15;
   valaddr_reg:x11; val_offset:292*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 292*FLEN/8, x12, x8, x9)

inst_169:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3c89b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000015 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dbc89b1; op2val:0x15;
   valaddr_reg:x11; val_offset:294*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 294*FLEN/8, x12, x8, x9)

inst_170:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x357f89 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000016 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3db57f89; op2val:0x16;
   valaddr_reg:x11; val_offset:296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 296*FLEN/8, x12, x8, x9)

inst_171:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x357f89 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000016 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3db57f89; op2val:0x16;
   valaddr_reg:x11; val_offset:298*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 298*FLEN/8, x12, x8, x9)

inst_172:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x357f89 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000016 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3db57f89; op2val:0x16;
   valaddr_reg:x11; val_offset:300*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 300*FLEN/8, x12, x8, x9)

inst_173:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x357f89 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000016 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3db57f89; op2val:0x16;
   valaddr_reg:x11; val_offset:302*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 302*FLEN/8, x12, x8, x9)

inst_174:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x357f89 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000016 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3db57f89; op2val:0x16;
   valaddr_reg:x11; val_offset:304*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 304*FLEN/8, x12, x8, x9)

inst_175:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2ea57c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d2ea57c; op2val:0x2e;
   valaddr_reg:x11; val_offset:306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 306*FLEN/8, x12, x8, x9)

inst_176:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2ea57c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d2ea57c; op2val:0x2e;
   valaddr_reg:x11; val_offset:308*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 308*FLEN/8, x12, x8, x9)

inst_177:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2ea57c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d2ea57c; op2val:0x2e;
   valaddr_reg:x11; val_offset:310*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 310*FLEN/8, x12, x8, x9)

inst_178:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2ea57c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d2ea57c; op2val:0x2e;
   valaddr_reg:x11; val_offset:312*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 312*FLEN/8, x12, x8, x9)

inst_179:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2ea57c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d2ea57c; op2val:0x2e;
   valaddr_reg:x11; val_offset:314*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 314*FLEN/8, x12, x8, x9)

inst_180:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7dd319 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efdd319; op2val:0x4;
   valaddr_reg:x11; val_offset:316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 316*FLEN/8, x12, x8, x9)

inst_181:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7dd319 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efdd319; op2val:0x4;
   valaddr_reg:x11; val_offset:318*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 318*FLEN/8, x12, x8, x9)

inst_182:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7dd319 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efdd319; op2val:0x4;
   valaddr_reg:x11; val_offset:320*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 320*FLEN/8, x12, x8, x9)

inst_183:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7dd319 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efdd319; op2val:0x4;
   valaddr_reg:x11; val_offset:322*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 322*FLEN/8, x12, x8, x9)

inst_184:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7dd319 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efdd319; op2val:0x4;
   valaddr_reg:x11; val_offset:324*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 324*FLEN/8, x12, x8, x9)

inst_185:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3279cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb279cf; op2val:0x5;
   valaddr_reg:x11; val_offset:326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 326*FLEN/8, x12, x8, x9)

inst_186:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3279cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb279cf; op2val:0x5;
   valaddr_reg:x11; val_offset:328*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 328*FLEN/8, x12, x8, x9)

inst_187:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3279cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb279cf; op2val:0x5;
   valaddr_reg:x11; val_offset:330*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 330*FLEN/8, x12, x8, x9)

inst_188:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3279cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb279cf; op2val:0x5;
   valaddr_reg:x11; val_offset:332*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 332*FLEN/8, x12, x8, x9)

inst_189:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3279cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb279cf; op2val:0x5;
   valaddr_reg:x11; val_offset:334*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 334*FLEN/8, x12, x8, x9)

inst_190:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x302af8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f302af8; op2val:0x2;
   valaddr_reg:x11; val_offset:336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 336*FLEN/8, x12, x8, x9)

inst_191:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x302af8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f302af8; op2val:0x2;
   valaddr_reg:x11; val_offset:338*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 338*FLEN/8, x12, x8, x9)

inst_192:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x302af8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f302af8; op2val:0x2;
   valaddr_reg:x11; val_offset:340*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 340*FLEN/8, x12, x8, x9)

inst_193:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x302af8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f302af8; op2val:0x2;
   valaddr_reg:x11; val_offset:342*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 342*FLEN/8, x12, x8, x9)

inst_194:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x302af8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000002 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f302af8; op2val:0x2;
   valaddr_reg:x11; val_offset:344*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 344*FLEN/8, x12, x8, x9)

inst_195:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79e956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef9e956; op2val:0x4;
   valaddr_reg:x11; val_offset:346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 346*FLEN/8, x12, x8, x9)

inst_196:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79e956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef9e956; op2val:0x4;
   valaddr_reg:x11; val_offset:348*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 348*FLEN/8, x12, x8, x9)

inst_197:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79e956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef9e956; op2val:0x4;
   valaddr_reg:x11; val_offset:350*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 350*FLEN/8, x12, x8, x9)

inst_198:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79e956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef9e956; op2val:0x4;
   valaddr_reg:x11; val_offset:352*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 352*FLEN/8, x12, x8, x9)

inst_199:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79e956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000004 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef9e956; op2val:0x4;
   valaddr_reg:x11; val_offset:354*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 354*FLEN/8, x12, x8, x9)

inst_200:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40e366 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec0e366; op2val:0x5;
   valaddr_reg:x11; val_offset:356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 356*FLEN/8, x12, x8, x9)

inst_201:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40e366 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec0e366; op2val:0x5;
   valaddr_reg:x11; val_offset:358*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 358*FLEN/8, x12, x8, x9)

inst_202:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40e366 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec0e366; op2val:0x5;
   valaddr_reg:x11; val_offset:360*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 360*FLEN/8, x12, x8, x9)

inst_203:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40e366 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec0e366; op2val:0x5;
   valaddr_reg:x11; val_offset:362*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 362*FLEN/8, x12, x8, x9)

inst_204:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40e366 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000005 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec0e366; op2val:0x5;
   valaddr_reg:x11; val_offset:364*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 364*FLEN/8, x12, x8, x9)

inst_205:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37e910 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e37e910; op2val:0xb;
   valaddr_reg:x11; val_offset:366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 366*FLEN/8, x12, x8, x9)

inst_206:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37e910 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e37e910; op2val:0xb;
   valaddr_reg:x11; val_offset:368*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 368*FLEN/8, x12, x8, x9)

inst_207:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37e910 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e37e910; op2val:0xb;
   valaddr_reg:x11; val_offset:370*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 370*FLEN/8, x12, x8, x9)

inst_208:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37e910 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e37e910; op2val:0xb;
   valaddr_reg:x11; val_offset:372*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 372*FLEN/8, x12, x8, x9)

inst_209:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37e910 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e37e910; op2val:0xb;
   valaddr_reg:x11; val_offset:374*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 374*FLEN/8, x12, x8, x9)

inst_210:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3d2019 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x2d42bb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dbd2019; op2val:0x22d42bb;
   valaddr_reg:x11; val_offset:376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 376*FLEN/8, x12, x8, x9)

inst_211:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3d2019 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x2d42bb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dbd2019; op2val:0x22d42bb;
   valaddr_reg:x11; val_offset:378*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 378*FLEN/8, x12, x8, x9)

inst_212:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3d2019 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x2d42bb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dbd2019; op2val:0x22d42bb;
   valaddr_reg:x11; val_offset:380*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 380*FLEN/8, x12, x8, x9)

inst_213:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3d2019 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x2d42bb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dbd2019; op2val:0x22d42bb;
   valaddr_reg:x11; val_offset:382*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 382*FLEN/8, x12, x8, x9)

inst_214:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3d2019 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x2d42bb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dbd2019; op2val:0x22d42bb;
   valaddr_reg:x11; val_offset:384*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 384*FLEN/8, x12, x8, x9)

inst_215:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x02abd6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ac444 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e82abd6; op2val:0x17ac444;
   valaddr_reg:x11; val_offset:386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 386*FLEN/8, x12, x8, x9)

inst_216:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x02abd6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ac444 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e82abd6; op2val:0x17ac444;
   valaddr_reg:x11; val_offset:388*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 388*FLEN/8, x12, x8, x9)

inst_217:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x02abd6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ac444 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e82abd6; op2val:0x17ac444;
   valaddr_reg:x11; val_offset:390*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 390*FLEN/8, x12, x8, x9)

inst_218:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x02abd6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ac444 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e82abd6; op2val:0x17ac444;
   valaddr_reg:x11; val_offset:392*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 392*FLEN/8, x12, x8, x9)

inst_219:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x02abd6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ac444 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e82abd6; op2val:0x17ac444;
   valaddr_reg:x11; val_offset:394*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 394*FLEN/8, x12, x8, x9)

inst_220:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x31b5ca and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3863df and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb1b5ca; op2val:0x13863df;
   valaddr_reg:x11; val_offset:396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 396*FLEN/8, x12, x8, x9)

inst_221:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x31b5ca and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3863df and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb1b5ca; op2val:0x13863df;
   valaddr_reg:x11; val_offset:398*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 398*FLEN/8, x12, x8, x9)

inst_222:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x31b5ca and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3863df and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb1b5ca; op2val:0x13863df;
   valaddr_reg:x11; val_offset:400*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 400*FLEN/8, x12, x8, x9)

inst_223:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x31b5ca and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3863df and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb1b5ca; op2val:0x13863df;
   valaddr_reg:x11; val_offset:402*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 402*FLEN/8, x12, x8, x9)

inst_224:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x31b5ca and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3863df and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb1b5ca; op2val:0x13863df;
   valaddr_reg:x11; val_offset:404*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 404*FLEN/8, x12, x8, x9)

inst_225:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45fc75 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2581a8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f45fc75; op2val:0xa581a8;
   valaddr_reg:x11; val_offset:406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 406*FLEN/8, x12, x8, x9)

inst_226:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45fc75 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2581a8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f45fc75; op2val:0xa581a8;
   valaddr_reg:x11; val_offset:408*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 408*FLEN/8, x12, x8, x9)

inst_227:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45fc75 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2581a8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f45fc75; op2val:0xa581a8;
   valaddr_reg:x11; val_offset:410*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 410*FLEN/8, x12, x8, x9)

inst_228:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45fc75 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2581a8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f45fc75; op2val:0xa581a8;
   valaddr_reg:x11; val_offset:412*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 412*FLEN/8, x12, x8, x9)

inst_229:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45fc75 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2581a8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f45fc75; op2val:0xa581a8;
   valaddr_reg:x11; val_offset:414*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 414*FLEN/8, x12, x8, x9)

inst_230:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64cbc0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f3824 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f64cbc0; op2val:0x8f3824;
   valaddr_reg:x11; val_offset:416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 416*FLEN/8, x12, x8, x9)

inst_231:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64cbc0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f3824 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f64cbc0; op2val:0x8f3824;
   valaddr_reg:x11; val_offset:418*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 418*FLEN/8, x12, x8, x9)

inst_232:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64cbc0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f3824 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f64cbc0; op2val:0x8f3824;
   valaddr_reg:x11; val_offset:420*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 420*FLEN/8, x12, x8, x9)

inst_233:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64cbc0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f3824 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f64cbc0; op2val:0x8f3824;
   valaddr_reg:x11; val_offset:422*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 422*FLEN/8, x12, x8, x9)

inst_234:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64cbc0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f3824 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f64cbc0; op2val:0x8f3824;
   valaddr_reg:x11; val_offset:424*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 424*FLEN/8, x12, x8, x9)

inst_235:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x158ff6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5b17ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e158ff6; op2val:0x1db17ae;
   valaddr_reg:x11; val_offset:426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 426*FLEN/8, x12, x8, x9)

inst_236:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x158ff6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5b17ae and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e158ff6; op2val:0x1db17ae;
   valaddr_reg:x11; val_offset:428*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 428*FLEN/8, x12, x8, x9)

inst_237:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x158ff6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5b17ae and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e158ff6; op2val:0x1db17ae;
   valaddr_reg:x11; val_offset:430*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 430*FLEN/8, x12, x8, x9)

inst_238:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x158ff6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5b17ae and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e158ff6; op2val:0x1db17ae;
   valaddr_reg:x11; val_offset:432*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 432*FLEN/8, x12, x8, x9)

inst_239:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x158ff6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5b17ae and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e158ff6; op2val:0x1db17ae;
   valaddr_reg:x11; val_offset:434*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 434*FLEN/8, x12, x8, x9)

inst_240:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a1e0d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x221fa2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4a1e0d; op2val:0xa21fa2;
   valaddr_reg:x11; val_offset:436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 436*FLEN/8, x12, x8, x9)

inst_241:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a1e0d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x221fa2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4a1e0d; op2val:0xa21fa2;
   valaddr_reg:x11; val_offset:438*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 438*FLEN/8, x12, x8, x9)

inst_242:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a1e0d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x221fa2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4a1e0d; op2val:0xa21fa2;
   valaddr_reg:x11; val_offset:440*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 440*FLEN/8, x12, x8, x9)

inst_243:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a1e0d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x221fa2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4a1e0d; op2val:0xa21fa2;
   valaddr_reg:x11; val_offset:442*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 442*FLEN/8, x12, x8, x9)

inst_244:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a1e0d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x221fa2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4a1e0d; op2val:0xa21fa2;
   valaddr_reg:x11; val_offset:444*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 444*FLEN/8, x12, x8, x9)

inst_245:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13bbab and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5dce2d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f13bbab; op2val:0xddce2d;
   valaddr_reg:x11; val_offset:446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 446*FLEN/8, x12, x8, x9)

inst_246:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13bbab and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5dce2d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f13bbab; op2val:0xddce2d;
   valaddr_reg:x11; val_offset:448*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 448*FLEN/8, x12, x8, x9)

inst_247:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13bbab and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5dce2d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f13bbab; op2val:0xddce2d;
   valaddr_reg:x11; val_offset:450*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 450*FLEN/8, x12, x8, x9)

inst_248:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13bbab and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5dce2d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f13bbab; op2val:0xddce2d;
   valaddr_reg:x11; val_offset:452*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 452*FLEN/8, x12, x8, x9)

inst_249:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13bbab and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5dce2d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f13bbab; op2val:0xddce2d;
   valaddr_reg:x11; val_offset:454*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 454*FLEN/8, x12, x8, x9)

inst_250:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77d72a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0436cb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f77d72a; op2val:0x8436cb;
   valaddr_reg:x11; val_offset:456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 456*FLEN/8, x12, x8, x9)

inst_251:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77d72a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0436cb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f77d72a; op2val:0x8436cb;
   valaddr_reg:x11; val_offset:458*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 458*FLEN/8, x12, x8, x9)

inst_252:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77d72a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0436cb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f77d72a; op2val:0x8436cb;
   valaddr_reg:x11; val_offset:460*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 460*FLEN/8, x12, x8, x9)

inst_253:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77d72a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0436cb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f77d72a; op2val:0x8436cb;
   valaddr_reg:x11; val_offset:462*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 462*FLEN/8, x12, x8, x9)

inst_254:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77d72a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0436cb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f77d72a; op2val:0x8436cb;
   valaddr_reg:x11; val_offset:464*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 464*FLEN/8, x12, x8, x9)

inst_255:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53ff9b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1a912e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f53ff9b; op2val:0x9a912e;
   valaddr_reg:x11; val_offset:466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 466*FLEN/8, x12, x8, x9)

inst_256:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53ff9b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1a912e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f53ff9b; op2val:0x9a912e;
   valaddr_reg:x11; val_offset:468*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 468*FLEN/8, x12, x8, x9)

inst_257:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53ff9b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1a912e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f53ff9b; op2val:0x9a912e;
   valaddr_reg:x11; val_offset:470*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 470*FLEN/8, x12, x8, x9)

inst_258:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53ff9b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1a912e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f53ff9b; op2val:0x9a912e;
   valaddr_reg:x11; val_offset:472*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 472*FLEN/8, x12, x8, x9)

inst_259:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53ff9b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1a912e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f53ff9b; op2val:0x9a912e;
   valaddr_reg:x11; val_offset:474*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 474*FLEN/8, x12, x8, x9)

inst_260:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ac6db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b9222 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6ac6db; op2val:0x8b9222;
   valaddr_reg:x11; val_offset:476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 476*FLEN/8, x12, x8, x9)

inst_261:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ac6db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b9222 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6ac6db; op2val:0x8b9222;
   valaddr_reg:x11; val_offset:478*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 478*FLEN/8, x12, x8, x9)

inst_262:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ac6db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b9222 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6ac6db; op2val:0x8b9222;
   valaddr_reg:x11; val_offset:480*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 480*FLEN/8, x12, x8, x9)

inst_263:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ac6db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b9222 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6ac6db; op2val:0x8b9222;
   valaddr_reg:x11; val_offset:482*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 482*FLEN/8, x12, x8, x9)

inst_264:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ac6db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b9222 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6ac6db; op2val:0x8b9222;
   valaddr_reg:x11; val_offset:484*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 484*FLEN/8, x12, x8, x9)

inst_265:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x798302 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x035415 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f798302; op2val:0x835415;
   valaddr_reg:x11; val_offset:486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 486*FLEN/8, x12, x8, x9)

inst_266:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x798302 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x035415 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f798302; op2val:0x835415;
   valaddr_reg:x11; val_offset:488*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 488*FLEN/8, x12, x8, x9)

inst_267:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x798302 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x035415 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f798302; op2val:0x835415;
   valaddr_reg:x11; val_offset:490*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 490*FLEN/8, x12, x8, x9)

inst_268:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x798302 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x035415 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f798302; op2val:0x835415;
   valaddr_reg:x11; val_offset:492*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 492*FLEN/8, x12, x8, x9)

inst_269:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x798302 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x035415 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f798302; op2val:0x835415;
   valaddr_reg:x11; val_offset:494*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 494*FLEN/8, x12, x8, x9)

inst_270:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a963f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x02c3d5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7a963f; op2val:0x82c3d5;
   valaddr_reg:x11; val_offset:496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 496*FLEN/8, x12, x8, x9)

inst_271:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a963f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x02c3d5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7a963f; op2val:0x82c3d5;
   valaddr_reg:x11; val_offset:498*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 498*FLEN/8, x12, x8, x9)

inst_272:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a963f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x02c3d5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7a963f; op2val:0x82c3d5;
   valaddr_reg:x11; val_offset:500*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 500*FLEN/8, x12, x8, x9)

inst_273:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a963f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x02c3d5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7a963f; op2val:0x82c3d5;
   valaddr_reg:x11; val_offset:502*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 502*FLEN/8, x12, x8, x9)

inst_274:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a963f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x02c3d5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7a963f; op2val:0x82c3d5;
   valaddr_reg:x11; val_offset:504*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 504*FLEN/8, x12, x8, x9)

inst_275:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f2007 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2b72a7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e3f2007; op2val:0x1ab72a7;
   valaddr_reg:x11; val_offset:506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 506*FLEN/8, x12, x8, x9)

inst_276:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f2007 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2b72a7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e3f2007; op2val:0x1ab72a7;
   valaddr_reg:x11; val_offset:508*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 508*FLEN/8, x12, x8, x9)

inst_277:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f2007 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2b72a7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e3f2007; op2val:0x1ab72a7;
   valaddr_reg:x11; val_offset:510*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 510*FLEN/8, x12, x8, x9)

inst_278:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f2007 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2b72a7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e3f2007; op2val:0x1ab72a7;
   valaddr_reg:x11; val_offset:512*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 512*FLEN/8, x12, x8, x9)

inst_279:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f2007 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2b72a7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e3f2007; op2val:0x1ab72a7;
   valaddr_reg:x11; val_offset:514*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 514*FLEN/8, x12, x8, x9)

inst_280:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50f67e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1cd000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f50f67e; op2val:0x9cd000;
   valaddr_reg:x11; val_offset:516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 516*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_2)

inst_281:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50f67e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1cd000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f50f67e; op2val:0x9cd000;
   valaddr_reg:x11; val_offset:518*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 518*FLEN/8, x12, x8, x9)

inst_282:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50f67e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1cd000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f50f67e; op2val:0x9cd000;
   valaddr_reg:x11; val_offset:520*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 520*FLEN/8, x12, x8, x9)

inst_283:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50f67e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1cd000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f50f67e; op2val:0x9cd000;
   valaddr_reg:x11; val_offset:522*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 522*FLEN/8, x12, x8, x9)

inst_284:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50f67e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1cd000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f50f67e; op2val:0x9cd000;
   valaddr_reg:x11; val_offset:524*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 524*FLEN/8, x12, x8, x9)

inst_285:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d4b8d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x50525c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1d4b8d; op2val:0xd0525c;
   valaddr_reg:x11; val_offset:526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 526*FLEN/8, x12, x8, x9)

inst_286:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d4b8d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x50525c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1d4b8d; op2val:0xd0525c;
   valaddr_reg:x11; val_offset:528*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 528*FLEN/8, x12, x8, x9)

inst_287:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d4b8d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x50525c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1d4b8d; op2val:0xd0525c;
   valaddr_reg:x11; val_offset:530*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 530*FLEN/8, x12, x8, x9)

inst_288:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d4b8d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x50525c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1d4b8d; op2val:0xd0525c;
   valaddr_reg:x11; val_offset:532*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 532*FLEN/8, x12, x8, x9)

inst_289:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d4b8d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x50525c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1d4b8d; op2val:0xd0525c;
   valaddr_reg:x11; val_offset:534*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 534*FLEN/8, x12, x8, x9)

inst_290:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x23d08e and fs2 == 0 and fe2 == 0x07 and fm2 == 0x4807e7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3c23d08e; op2val:0x3c807e7;
   valaddr_reg:x11; val_offset:536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 536*FLEN/8, x12, x8, x9)

inst_291:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x23d08e and fs2 == 0 and fe2 == 0x07 and fm2 == 0x4807e7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3c23d08e; op2val:0x3c807e7;
   valaddr_reg:x11; val_offset:538*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 538*FLEN/8, x12, x8, x9)

inst_292:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x23d08e and fs2 == 0 and fe2 == 0x07 and fm2 == 0x4807e7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3c23d08e; op2val:0x3c807e7;
   valaddr_reg:x11; val_offset:540*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 540*FLEN/8, x12, x8, x9)

inst_293:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x23d08e and fs2 == 0 and fe2 == 0x07 and fm2 == 0x4807e7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3c23d08e; op2val:0x3c807e7;
   valaddr_reg:x11; val_offset:542*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 542*FLEN/8, x12, x8, x9)

inst_294:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x23d08e and fs2 == 0 and fe2 == 0x07 and fm2 == 0x4807e7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3c23d08e; op2val:0x3c807e7;
   valaddr_reg:x11; val_offset:544*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 544*FLEN/8, x12, x8, x9)

inst_295:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76b713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04d12e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f76b713; op2val:0x84d12e;
   valaddr_reg:x11; val_offset:546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 546*FLEN/8, x12, x8, x9)

inst_296:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76b713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04d12e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f76b713; op2val:0x84d12e;
   valaddr_reg:x11; val_offset:548*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 548*FLEN/8, x12, x8, x9)

inst_297:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76b713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04d12e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f76b713; op2val:0x84d12e;
   valaddr_reg:x11; val_offset:550*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 550*FLEN/8, x12, x8, x9)

inst_298:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76b713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04d12e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f76b713; op2val:0x84d12e;
   valaddr_reg:x11; val_offset:552*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 552*FLEN/8, x12, x8, x9)

inst_299:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76b713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04d12e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f76b713; op2val:0x84d12e;
   valaddr_reg:x11; val_offset:554*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 554*FLEN/8, x12, x8, x9)

inst_300:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x44ff54 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x265652 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec4ff54; op2val:0x1265652;
   valaddr_reg:x11; val_offset:556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 556*FLEN/8, x12, x8, x9)

inst_301:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x44ff54 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x265652 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec4ff54; op2val:0x1265652;
   valaddr_reg:x11; val_offset:558*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 558*FLEN/8, x12, x8, x9)

inst_302:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x44ff54 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x265652 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec4ff54; op2val:0x1265652;
   valaddr_reg:x11; val_offset:560*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 560*FLEN/8, x12, x8, x9)

inst_303:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x44ff54 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x265652 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec4ff54; op2val:0x1265652;
   valaddr_reg:x11; val_offset:562*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 562*FLEN/8, x12, x8, x9)

inst_304:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x44ff54 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x265652 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec4ff54; op2val:0x1265652;
   valaddr_reg:x11; val_offset:564*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 564*FLEN/8, x12, x8, x9)

inst_305:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x630ae6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x105347 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f630ae6; op2val:0x905347;
   valaddr_reg:x11; val_offset:566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 566*FLEN/8, x12, x8, x9)

inst_306:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x630ae6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x105347 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f630ae6; op2val:0x905347;
   valaddr_reg:x11; val_offset:568*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 568*FLEN/8, x12, x8, x9)

inst_307:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x630ae6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x105347 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f630ae6; op2val:0x905347;
   valaddr_reg:x11; val_offset:570*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 570*FLEN/8, x12, x8, x9)

inst_308:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x630ae6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x105347 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f630ae6; op2val:0x905347;
   valaddr_reg:x11; val_offset:572*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 572*FLEN/8, x12, x8, x9)

inst_309:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x630ae6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x105347 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f630ae6; op2val:0x905347;
   valaddr_reg:x11; val_offset:574*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 574*FLEN/8, x12, x8, x9)

inst_310:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x781cc7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0411b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f781cc7; op2val:0x8411b2;
   valaddr_reg:x11; val_offset:576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 576*FLEN/8, x12, x8, x9)

inst_311:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x781cc7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0411b2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f781cc7; op2val:0x8411b2;
   valaddr_reg:x11; val_offset:578*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 578*FLEN/8, x12, x8, x9)

inst_312:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x781cc7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0411b2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f781cc7; op2val:0x8411b2;
   valaddr_reg:x11; val_offset:580*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 580*FLEN/8, x12, x8, x9)

inst_313:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x781cc7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0411b2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f781cc7; op2val:0x8411b2;
   valaddr_reg:x11; val_offset:582*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 582*FLEN/8, x12, x8, x9)

inst_314:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x781cc7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0411b2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f781cc7; op2val:0x8411b2;
   valaddr_reg:x11; val_offset:584*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 584*FLEN/8, x12, x8, x9)

inst_315:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fa593 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x08bc0a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e6fa593; op2val:0x188bc0a;
   valaddr_reg:x11; val_offset:586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 586*FLEN/8, x12, x8, x9)

inst_316:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fa593 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x08bc0a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e6fa593; op2val:0x188bc0a;
   valaddr_reg:x11; val_offset:588*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 588*FLEN/8, x12, x8, x9)

inst_317:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fa593 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x08bc0a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e6fa593; op2val:0x188bc0a;
   valaddr_reg:x11; val_offset:590*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 590*FLEN/8, x12, x8, x9)

inst_318:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fa593 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x08bc0a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e6fa593; op2val:0x188bc0a;
   valaddr_reg:x11; val_offset:592*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 592*FLEN/8, x12, x8, x9)

inst_319:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fa593 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x08bc0a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e6fa593; op2val:0x188bc0a;
   valaddr_reg:x11; val_offset:594*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 594*FLEN/8, x12, x8, x9)

inst_320:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x48a9a7 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x234c82 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc8a9a7; op2val:0x2234c82;
   valaddr_reg:x11; val_offset:596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 596*FLEN/8, x12, x8, x9)

inst_321:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x48a9a7 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x234c82 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc8a9a7; op2val:0x2234c82;
   valaddr_reg:x11; val_offset:598*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 598*FLEN/8, x12, x8, x9)

inst_322:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x48a9a7 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x234c82 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc8a9a7; op2val:0x2234c82;
   valaddr_reg:x11; val_offset:600*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 600*FLEN/8, x12, x8, x9)

inst_323:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x48a9a7 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x234c82 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc8a9a7; op2val:0x2234c82;
   valaddr_reg:x11; val_offset:602*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 602*FLEN/8, x12, x8, x9)

inst_324:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x48a9a7 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x234c82 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc8a9a7; op2val:0x2234c82;
   valaddr_reg:x11; val_offset:604*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 604*FLEN/8, x12, x8, x9)

inst_325:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0cdb03 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x68a2ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0cdb03; op2val:0x1e8a2ae;
   valaddr_reg:x11; val_offset:606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 606*FLEN/8, x12, x8, x9)

inst_326:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0cdb03 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x68a2ae and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0cdb03; op2val:0x1e8a2ae;
   valaddr_reg:x11; val_offset:608*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 608*FLEN/8, x12, x8, x9)

inst_327:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0cdb03 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x68a2ae and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0cdb03; op2val:0x1e8a2ae;
   valaddr_reg:x11; val_offset:610*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 610*FLEN/8, x12, x8, x9)

inst_328:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0cdb03 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x68a2ae and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0cdb03; op2val:0x1e8a2ae;
   valaddr_reg:x11; val_offset:612*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 612*FLEN/8, x12, x8, x9)

inst_329:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0cdb03 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x68a2ae and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0cdb03; op2val:0x1e8a2ae;
   valaddr_reg:x11; val_offset:614*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 614*FLEN/8, x12, x8, x9)

inst_330:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06f7ec and fs2 == 0 and fe2 == 0x01 and fm2 == 0x72c859 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06f7ec; op2val:0xf2c859;
   valaddr_reg:x11; val_offset:616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 616*FLEN/8, x12, x8, x9)

inst_331:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06f7ec and fs2 == 0 and fe2 == 0x01 and fm2 == 0x72c859 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06f7ec; op2val:0xf2c859;
   valaddr_reg:x11; val_offset:618*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 618*FLEN/8, x12, x8, x9)

inst_332:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06f7ec and fs2 == 0 and fe2 == 0x01 and fm2 == 0x72c859 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06f7ec; op2val:0xf2c859;
   valaddr_reg:x11; val_offset:620*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 620*FLEN/8, x12, x8, x9)

inst_333:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06f7ec and fs2 == 0 and fe2 == 0x01 and fm2 == 0x72c859 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06f7ec; op2val:0xf2c859;
   valaddr_reg:x11; val_offset:622*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 622*FLEN/8, x12, x8, x9)

inst_334:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06f7ec and fs2 == 0 and fe2 == 0x01 and fm2 == 0x72c859 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06f7ec; op2val:0xf2c859;
   valaddr_reg:x11; val_offset:624*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 624*FLEN/8, x12, x8, x9)

inst_335:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2da7e3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3cb1ef and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eada7e3; op2val:0x13cb1ef;
   valaddr_reg:x11; val_offset:626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 626*FLEN/8, x12, x8, x9)

inst_336:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2da7e3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3cb1ef and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eada7e3; op2val:0x13cb1ef;
   valaddr_reg:x11; val_offset:628*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 628*FLEN/8, x12, x8, x9)

inst_337:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2da7e3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3cb1ef and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eada7e3; op2val:0x13cb1ef;
   valaddr_reg:x11; val_offset:630*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 630*FLEN/8, x12, x8, x9)

inst_338:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2da7e3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3cb1ef and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eada7e3; op2val:0x13cb1ef;
   valaddr_reg:x11; val_offset:632*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 632*FLEN/8, x12, x8, x9)

inst_339:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2da7e3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3cb1ef and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eada7e3; op2val:0x13cb1ef;
   valaddr_reg:x11; val_offset:634*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 634*FLEN/8, x12, x8, x9)

inst_340:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65e01c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e8bf7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f65e01c; op2val:0x8e8bf7;
   valaddr_reg:x11; val_offset:636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 636*FLEN/8, x12, x8, x9)

inst_341:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65e01c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e8bf7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f65e01c; op2val:0x8e8bf7;
   valaddr_reg:x11; val_offset:638*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 638*FLEN/8, x12, x8, x9)

inst_342:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65e01c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e8bf7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f65e01c; op2val:0x8e8bf7;
   valaddr_reg:x11; val_offset:640*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 640*FLEN/8, x12, x8, x9)

inst_343:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65e01c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e8bf7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f65e01c; op2val:0x8e8bf7;
   valaddr_reg:x11; val_offset:642*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 642*FLEN/8, x12, x8, x9)

inst_344:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65e01c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e8bf7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f65e01c; op2val:0x8e8bf7;
   valaddr_reg:x11; val_offset:644*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 644*FLEN/8, x12, x8, x9)

inst_345:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x003e1e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f83fc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e003e1e; op2val:0x1ff83fc;
   valaddr_reg:x11; val_offset:646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 646*FLEN/8, x12, x8, x9)

inst_346:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x003e1e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f83fc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e003e1e; op2val:0x1ff83fc;
   valaddr_reg:x11; val_offset:648*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 648*FLEN/8, x12, x8, x9)

inst_347:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x003e1e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f83fc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e003e1e; op2val:0x1ff83fc;
   valaddr_reg:x11; val_offset:650*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 650*FLEN/8, x12, x8, x9)

inst_348:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x003e1e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f83fc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e003e1e; op2val:0x1ff83fc;
   valaddr_reg:x11; val_offset:652*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 652*FLEN/8, x12, x8, x9)

inst_349:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x003e1e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f83fc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e003e1e; op2val:0x1ff83fc;
   valaddr_reg:x11; val_offset:654*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 654*FLEN/8, x12, x8, x9)

inst_350:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5480af and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a334b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed480af; op2val:0x11a334b;
   valaddr_reg:x11; val_offset:656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 656*FLEN/8, x12, x8, x9)

inst_351:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5480af and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a334b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed480af; op2val:0x11a334b;
   valaddr_reg:x11; val_offset:658*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 658*FLEN/8, x12, x8, x9)

inst_352:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5480af and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a334b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed480af; op2val:0x11a334b;
   valaddr_reg:x11; val_offset:660*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 660*FLEN/8, x12, x8, x9)

inst_353:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5480af and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a334b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed480af; op2val:0x11a334b;
   valaddr_reg:x11; val_offset:662*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 662*FLEN/8, x12, x8, x9)

inst_354:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5480af and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a334b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed480af; op2val:0x11a334b;
   valaddr_reg:x11; val_offset:664*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 664*FLEN/8, x12, x8, x9)

inst_355:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x786bc7 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03e7b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef86bc7; op2val:0x103e7b2;
   valaddr_reg:x11; val_offset:666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 666*FLEN/8, x12, x8, x9)

inst_356:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x786bc7 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03e7b2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef86bc7; op2val:0x103e7b2;
   valaddr_reg:x11; val_offset:668*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 668*FLEN/8, x12, x8, x9)

inst_357:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x786bc7 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03e7b2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef86bc7; op2val:0x103e7b2;
   valaddr_reg:x11; val_offset:670*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 670*FLEN/8, x12, x8, x9)

inst_358:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x786bc7 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03e7b2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef86bc7; op2val:0x103e7b2;
   valaddr_reg:x11; val_offset:672*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 672*FLEN/8, x12, x8, x9)

inst_359:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x786bc7 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03e7b2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef86bc7; op2val:0x103e7b2;
   valaddr_reg:x11; val_offset:674*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 674*FLEN/8, x12, x8, x9)

inst_360:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x24f0e9 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x46aa34 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d24f0e9; op2val:0x2c6aa34;
   valaddr_reg:x11; val_offset:676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 676*FLEN/8, x12, x8, x9)

inst_361:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x24f0e9 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x46aa34 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d24f0e9; op2val:0x2c6aa34;
   valaddr_reg:x11; val_offset:678*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 678*FLEN/8, x12, x8, x9)

inst_362:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x24f0e9 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x46aa34 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d24f0e9; op2val:0x2c6aa34;
   valaddr_reg:x11; val_offset:680*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 680*FLEN/8, x12, x8, x9)

inst_363:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x24f0e9 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x46aa34 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d24f0e9; op2val:0x2c6aa34;
   valaddr_reg:x11; val_offset:682*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 682*FLEN/8, x12, x8, x9)

inst_364:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x24f0e9 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x46aa34 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d24f0e9; op2val:0x2c6aa34;
   valaddr_reg:x11; val_offset:684*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 684*FLEN/8, x12, x8, x9)

inst_365:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x49b027 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2277f9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec9b027; op2val:0x12277f9;
   valaddr_reg:x11; val_offset:686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 686*FLEN/8, x12, x8, x9)

inst_366:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x49b027 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2277f9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec9b027; op2val:0x12277f9;
   valaddr_reg:x11; val_offset:688*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 688*FLEN/8, x12, x8, x9)

inst_367:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x49b027 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2277f9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec9b027; op2val:0x12277f9;
   valaddr_reg:x11; val_offset:690*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 690*FLEN/8, x12, x8, x9)

inst_368:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x49b027 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2277f9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec9b027; op2val:0x12277f9;
   valaddr_reg:x11; val_offset:692*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 692*FLEN/8, x12, x8, x9)

inst_369:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x49b027 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2277f9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec9b027; op2val:0x12277f9;
   valaddr_reg:x11; val_offset:694*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 694*FLEN/8, x12, x8, x9)

inst_370:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b622c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0259c1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b622c; op2val:0x8259c1;
   valaddr_reg:x11; val_offset:696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 696*FLEN/8, x12, x8, x9)

inst_371:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b622c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0259c1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b622c; op2val:0x8259c1;
   valaddr_reg:x11; val_offset:698*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 698*FLEN/8, x12, x8, x9)

inst_372:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b622c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0259c1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b622c; op2val:0x8259c1;
   valaddr_reg:x11; val_offset:700*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 700*FLEN/8, x12, x8, x9)

inst_373:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b622c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0259c1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b622c; op2val:0x8259c1;
   valaddr_reg:x11; val_offset:702*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 702*FLEN/8, x12, x8, x9)

inst_374:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b622c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0259c1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b622c; op2val:0x8259c1;
   valaddr_reg:x11; val_offset:704*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 704*FLEN/8, x12, x8, x9)

inst_375:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c03a5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x14ef8f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5c03a5; op2val:0x94ef8f;
   valaddr_reg:x11; val_offset:706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 706*FLEN/8, x12, x8, x9)

inst_376:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c03a5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x14ef8f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5c03a5; op2val:0x94ef8f;
   valaddr_reg:x11; val_offset:708*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 708*FLEN/8, x12, x8, x9)

inst_377:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c03a5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x14ef8f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5c03a5; op2val:0x94ef8f;
   valaddr_reg:x11; val_offset:710*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 710*FLEN/8, x12, x8, x9)

inst_378:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c03a5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x14ef8f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5c03a5; op2val:0x94ef8f;
   valaddr_reg:x11; val_offset:712*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 712*FLEN/8, x12, x8, x9)

inst_379:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c03a5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x14ef8f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5c03a5; op2val:0x94ef8f;
   valaddr_reg:x11; val_offset:714*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 714*FLEN/8, x12, x8, x9)

inst_380:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7768db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0471bd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7768db; op2val:0x8471bd;
   valaddr_reg:x11; val_offset:716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 716*FLEN/8, x12, x8, x9)

inst_381:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7768db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0471bd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7768db; op2val:0x8471bd;
   valaddr_reg:x11; val_offset:718*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 718*FLEN/8, x12, x8, x9)

inst_382:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7768db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0471bd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7768db; op2val:0x8471bd;
   valaddr_reg:x11; val_offset:720*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 720*FLEN/8, x12, x8, x9)

inst_383:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7768db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0471bd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7768db; op2val:0x8471bd;
   valaddr_reg:x11; val_offset:722*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 722*FLEN/8, x12, x8, x9)

inst_384:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7768db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0471bd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7768db; op2val:0x8471bd;
   valaddr_reg:x11; val_offset:724*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 724*FLEN/8, x12, x8, x9)

inst_385:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6774ef and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d92a5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6774ef; op2val:0x8d92a5;
   valaddr_reg:x11; val_offset:726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 726*FLEN/8, x12, x8, x9)

inst_386:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6774ef and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d92a5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6774ef; op2val:0x8d92a5;
   valaddr_reg:x11; val_offset:728*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 728*FLEN/8, x12, x8, x9)

inst_387:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6774ef and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d92a5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6774ef; op2val:0x8d92a5;
   valaddr_reg:x11; val_offset:730*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 730*FLEN/8, x12, x8, x9)

inst_388:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6774ef and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d92a5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6774ef; op2val:0x8d92a5;
   valaddr_reg:x11; val_offset:732*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 732*FLEN/8, x12, x8, x9)

inst_389:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6774ef and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d92a5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6774ef; op2val:0x8d92a5;
   valaddr_reg:x11; val_offset:734*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 734*FLEN/8, x12, x8, x9)

inst_390:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7bc573 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x02265b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efbc573; op2val:0x102265b;
   valaddr_reg:x11; val_offset:736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 736*FLEN/8, x12, x8, x9)

inst_391:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7bc573 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x02265b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efbc573; op2val:0x102265b;
   valaddr_reg:x11; val_offset:738*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 738*FLEN/8, x12, x8, x9)

inst_392:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7bc573 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x02265b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efbc573; op2val:0x102265b;
   valaddr_reg:x11; val_offset:740*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 740*FLEN/8, x12, x8, x9)

inst_393:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7bc573 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x02265b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efbc573; op2val:0x102265b;
   valaddr_reg:x11; val_offset:742*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 742*FLEN/8, x12, x8, x9)

inst_394:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7bc573 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x02265b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efbc573; op2val:0x102265b;
   valaddr_reg:x11; val_offset:744*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 744*FLEN/8, x12, x8, x9)

inst_395:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x06e6ae and fs2 == 0 and fe2 == 0x04 and fm2 == 0x72e760 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d86e6ae; op2val:0x272e760;
   valaddr_reg:x11; val_offset:746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 746*FLEN/8, x12, x8, x9)

inst_396:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x06e6ae and fs2 == 0 and fe2 == 0x04 and fm2 == 0x72e760 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d86e6ae; op2val:0x272e760;
   valaddr_reg:x11; val_offset:748*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 748*FLEN/8, x12, x8, x9)

inst_397:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x06e6ae and fs2 == 0 and fe2 == 0x04 and fm2 == 0x72e760 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d86e6ae; op2val:0x272e760;
   valaddr_reg:x11; val_offset:750*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 750*FLEN/8, x12, x8, x9)

inst_398:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x06e6ae and fs2 == 0 and fe2 == 0x04 and fm2 == 0x72e760 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d86e6ae; op2val:0x272e760;
   valaddr_reg:x11; val_offset:752*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 752*FLEN/8, x12, x8, x9)

inst_399:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x06e6ae and fs2 == 0 and fe2 == 0x04 and fm2 == 0x72e760 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d86e6ae; op2val:0x272e760;
   valaddr_reg:x11; val_offset:754*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 754*FLEN/8, x12, x8, x9)

inst_400:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x447c98 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x26c4ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f447c98; op2val:0xa6c4ff;
   valaddr_reg:x11; val_offset:756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 756*FLEN/8, x12, x8, x9)

inst_401:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x447c98 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x26c4ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f447c98; op2val:0xa6c4ff;
   valaddr_reg:x11; val_offset:758*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 758*FLEN/8, x12, x8, x9)

inst_402:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x447c98 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x26c4ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f447c98; op2val:0xa6c4ff;
   valaddr_reg:x11; val_offset:760*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 760*FLEN/8, x12, x8, x9)

inst_403:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x447c98 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x26c4ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f447c98; op2val:0xa6c4ff;
   valaddr_reg:x11; val_offset:762*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 762*FLEN/8, x12, x8, x9)

inst_404:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x447c98 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x26c4ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f447c98; op2val:0xa6c4ff;
   valaddr_reg:x11; val_offset:764*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 764*FLEN/8, x12, x8, x9)

inst_405:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fccd4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ad82f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3fccd4; op2val:0xaad82f;
   valaddr_reg:x11; val_offset:766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 766*FLEN/8, x12, x8, x9)

inst_406:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fccd4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ad82f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3fccd4; op2val:0xaad82f;
   valaddr_reg:x11; val_offset:768*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 768*FLEN/8, x12, x8, x9)

inst_407:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fccd4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ad82f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3fccd4; op2val:0xaad82f;
   valaddr_reg:x11; val_offset:770*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 770*FLEN/8, x12, x8, x9)

inst_408:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fccd4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ad82f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3fccd4; op2val:0xaad82f;
   valaddr_reg:x11; val_offset:772*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 772*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_3)

inst_409:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fccd4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ad82f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3fccd4; op2val:0xaad82f;
   valaddr_reg:x11; val_offset:774*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 774*FLEN/8, x12, x8, x9)

inst_410:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x406d91 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2a497a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec06d91; op2val:0x12a497a;
   valaddr_reg:x11; val_offset:776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 776*FLEN/8, x12, x8, x9)

inst_411:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x406d91 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2a497a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec06d91; op2val:0x12a497a;
   valaddr_reg:x11; val_offset:778*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 778*FLEN/8, x12, x8, x9)

inst_412:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x406d91 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2a497a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec06d91; op2val:0x12a497a;
   valaddr_reg:x11; val_offset:780*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 780*FLEN/8, x12, x8, x9)

inst_413:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x406d91 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2a497a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec06d91; op2val:0x12a497a;
   valaddr_reg:x11; val_offset:782*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 782*FLEN/8, x12, x8, x9)

inst_414:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x406d91 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2a497a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec06d91; op2val:0x12a497a;
   valaddr_reg:x11; val_offset:784*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 784*FLEN/8, x12, x8, x9)

inst_415:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14bca3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5c4ef8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e94bca3; op2val:0x15c4ef8;
   valaddr_reg:x11; val_offset:786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 786*FLEN/8, x12, x8, x9)

inst_416:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14bca3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5c4ef8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e94bca3; op2val:0x15c4ef8;
   valaddr_reg:x11; val_offset:788*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 788*FLEN/8, x12, x8, x9)

inst_417:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14bca3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5c4ef8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e94bca3; op2val:0x15c4ef8;
   valaddr_reg:x11; val_offset:790*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 790*FLEN/8, x12, x8, x9)

inst_418:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14bca3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5c4ef8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e94bca3; op2val:0x15c4ef8;
   valaddr_reg:x11; val_offset:792*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 792*FLEN/8, x12, x8, x9)

inst_419:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14bca3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5c4ef8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e94bca3; op2val:0x15c4ef8;
   valaddr_reg:x11; val_offset:794*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 794*FLEN/8, x12, x8, x9)

inst_420:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13b529 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13e54e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f13b529; op2val:0x93e54e;
   valaddr_reg:x11; val_offset:796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 796*FLEN/8, x12, x8, x9)

inst_421:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13b529 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13e54e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f13b529; op2val:0x93e54e;
   valaddr_reg:x11; val_offset:798*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 798*FLEN/8, x12, x8, x9)

inst_422:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13b529 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13e54e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f13b529; op2val:0x93e54e;
   valaddr_reg:x11; val_offset:800*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 800*FLEN/8, x12, x8, x9)

inst_423:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13b529 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13e54e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f13b529; op2val:0x93e54e;
   valaddr_reg:x11; val_offset:802*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 802*FLEN/8, x12, x8, x9)

inst_424:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13b529 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13e54e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f13b529; op2val:0x93e54e;
   valaddr_reg:x11; val_offset:804*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 804*FLEN/8, x12, x8, x9)

inst_425:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ec3cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x55bf3e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7ec3cd; op2val:0x55bf3e;
   valaddr_reg:x11; val_offset:806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 806*FLEN/8, x12, x8, x9)

inst_426:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ec3cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x55bf3e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7ec3cd; op2val:0x55bf3e;
   valaddr_reg:x11; val_offset:808*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 808*FLEN/8, x12, x8, x9)

inst_427:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ec3cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x55bf3e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7ec3cd; op2val:0x55bf3e;
   valaddr_reg:x11; val_offset:810*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 810*FLEN/8, x12, x8, x9)

inst_428:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ec3cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x55bf3e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7ec3cd; op2val:0x55bf3e;
   valaddr_reg:x11; val_offset:812*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 812*FLEN/8, x12, x8, x9)

inst_429:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ec3cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x55bf3e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7ec3cd; op2val:0x55bf3e;
   valaddr_reg:x11; val_offset:814*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 814*FLEN/8, x12, x8, x9)

inst_430:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x175db4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10523b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f175db4; op2val:0x90523b;
   valaddr_reg:x11; val_offset:816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 816*FLEN/8, x12, x8, x9)

inst_431:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x175db4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10523b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f175db4; op2val:0x90523b;
   valaddr_reg:x11; val_offset:818*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 818*FLEN/8, x12, x8, x9)

inst_432:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x175db4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10523b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f175db4; op2val:0x90523b;
   valaddr_reg:x11; val_offset:820*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 820*FLEN/8, x12, x8, x9)

inst_433:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x175db4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10523b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f175db4; op2val:0x90523b;
   valaddr_reg:x11; val_offset:822*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 822*FLEN/8, x12, x8, x9)

inst_434:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x175db4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10523b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f175db4; op2val:0x90523b;
   valaddr_reg:x11; val_offset:824*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 824*FLEN/8, x12, x8, x9)

inst_435:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d6e0f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a75e1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d6e0f; op2val:0x11a75e1;
   valaddr_reg:x11; val_offset:826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 826*FLEN/8, x12, x8, x9)

inst_436:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d6e0f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a75e1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d6e0f; op2val:0x11a75e1;
   valaddr_reg:x11; val_offset:828*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 828*FLEN/8, x12, x8, x9)

inst_437:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d6e0f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a75e1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d6e0f; op2val:0x11a75e1;
   valaddr_reg:x11; val_offset:830*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 830*FLEN/8, x12, x8, x9)

inst_438:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d6e0f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a75e1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d6e0f; op2val:0x11a75e1;
   valaddr_reg:x11; val_offset:832*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 832*FLEN/8, x12, x8, x9)

inst_439:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d6e0f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a75e1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d6e0f; op2val:0x11a75e1;
   valaddr_reg:x11; val_offset:834*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 834*FLEN/8, x12, x8, x9)

inst_440:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x667545 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5eca79 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f667545; op2val:0x5eca79;
   valaddr_reg:x11; val_offset:836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 836*FLEN/8, x12, x8, x9)

inst_441:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x667545 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5eca79 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f667545; op2val:0x5eca79;
   valaddr_reg:x11; val_offset:838*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 838*FLEN/8, x12, x8, x9)

inst_442:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x667545 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5eca79 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f667545; op2val:0x5eca79;
   valaddr_reg:x11; val_offset:840*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 840*FLEN/8, x12, x8, x9)

inst_443:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x667545 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5eca79 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f667545; op2val:0x5eca79;
   valaddr_reg:x11; val_offset:842*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 842*FLEN/8, x12, x8, x9)

inst_444:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x667545 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5eca79 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f667545; op2val:0x5eca79;
   valaddr_reg:x11; val_offset:844*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 844*FLEN/8, x12, x8, x9)

inst_445:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44babf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6f0ae0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f44babf; op2val:0x6f0ae0;
   valaddr_reg:x11; val_offset:846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 846*FLEN/8, x12, x8, x9)

inst_446:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44babf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6f0ae0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f44babf; op2val:0x6f0ae0;
   valaddr_reg:x11; val_offset:848*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 848*FLEN/8, x12, x8, x9)

inst_447:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44babf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6f0ae0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f44babf; op2val:0x6f0ae0;
   valaddr_reg:x11; val_offset:850*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 850*FLEN/8, x12, x8, x9)

inst_448:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44babf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6f0ae0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f44babf; op2val:0x6f0ae0;
   valaddr_reg:x11; val_offset:852*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 852*FLEN/8, x12, x8, x9)

inst_449:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44babf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6f0ae0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f44babf; op2val:0x6f0ae0;
   valaddr_reg:x11; val_offset:854*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 854*FLEN/8, x12, x8, x9)

inst_450:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75620b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x320d08 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef5620b; op2val:0xb20d08;
   valaddr_reg:x11; val_offset:856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 856*FLEN/8, x12, x8, x9)

inst_451:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75620b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x320d08 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef5620b; op2val:0xb20d08;
   valaddr_reg:x11; val_offset:858*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 858*FLEN/8, x12, x8, x9)

inst_452:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75620b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x320d08 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef5620b; op2val:0xb20d08;
   valaddr_reg:x11; val_offset:860*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 860*FLEN/8, x12, x8, x9)

inst_453:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75620b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x320d08 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef5620b; op2val:0xb20d08;
   valaddr_reg:x11; val_offset:862*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 862*FLEN/8, x12, x8, x9)

inst_454:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75620b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x320d08 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef5620b; op2val:0xb20d08;
   valaddr_reg:x11; val_offset:864*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 864*FLEN/8, x12, x8, x9)

inst_455:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30b5ca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7b9f56 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f30b5ca; op2val:0x7b9f56;
   valaddr_reg:x11; val_offset:866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 866*FLEN/8, x12, x8, x9)

inst_456:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30b5ca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7b9f56 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f30b5ca; op2val:0x7b9f56;
   valaddr_reg:x11; val_offset:868*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 868*FLEN/8, x12, x8, x9)

inst_457:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30b5ca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7b9f56 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f30b5ca; op2val:0x7b9f56;
   valaddr_reg:x11; val_offset:870*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 870*FLEN/8, x12, x8, x9)

inst_458:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30b5ca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7b9f56 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f30b5ca; op2val:0x7b9f56;
   valaddr_reg:x11; val_offset:872*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 872*FLEN/8, x12, x8, x9)

inst_459:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30b5ca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7b9f56 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f30b5ca; op2val:0x7b9f56;
   valaddr_reg:x11; val_offset:874*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 874*FLEN/8, x12, x8, x9)

inst_460:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x499ce4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6c5a55 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f499ce4; op2val:0x6c5a55;
   valaddr_reg:x11; val_offset:876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 876*FLEN/8, x12, x8, x9)

inst_461:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x499ce4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6c5a55 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f499ce4; op2val:0x6c5a55;
   valaddr_reg:x11; val_offset:878*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 878*FLEN/8, x12, x8, x9)

inst_462:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x499ce4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6c5a55 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f499ce4; op2val:0x6c5a55;
   valaddr_reg:x11; val_offset:880*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 880*FLEN/8, x12, x8, x9)

inst_463:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x499ce4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6c5a55 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f499ce4; op2val:0x6c5a55;
   valaddr_reg:x11; val_offset:882*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 882*FLEN/8, x12, x8, x9)

inst_464:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x499ce4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6c5a55 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f499ce4; op2val:0x6c5a55;
   valaddr_reg:x11; val_offset:884*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 884*FLEN/8, x12, x8, x9)

inst_465:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1712fd and fs2 == 0 and fe2 == 0x05 and fm2 == 0x10999c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1712fd; op2val:0x290999c;
   valaddr_reg:x11; val_offset:886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 886*FLEN/8, x12, x8, x9)

inst_466:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1712fd and fs2 == 0 and fe2 == 0x05 and fm2 == 0x10999c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1712fd; op2val:0x290999c;
   valaddr_reg:x11; val_offset:888*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 888*FLEN/8, x12, x8, x9)

inst_467:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1712fd and fs2 == 0 and fe2 == 0x05 and fm2 == 0x10999c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1712fd; op2val:0x290999c;
   valaddr_reg:x11; val_offset:890*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 890*FLEN/8, x12, x8, x9)

inst_468:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1712fd and fs2 == 0 and fe2 == 0x05 and fm2 == 0x10999c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1712fd; op2val:0x290999c;
   valaddr_reg:x11; val_offset:892*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 892*FLEN/8, x12, x8, x9)

inst_469:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1712fd and fs2 == 0 and fe2 == 0x05 and fm2 == 0x10999c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1712fd; op2val:0x290999c;
   valaddr_reg:x11; val_offset:894*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 894*FLEN/8, x12, x8, x9)

inst_470:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10f6d1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x16b1da and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f10f6d1; op2val:0x96b1da;
   valaddr_reg:x11; val_offset:896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 896*FLEN/8, x12, x8, x9)

inst_471:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10f6d1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x16b1da and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f10f6d1; op2val:0x96b1da;
   valaddr_reg:x11; val_offset:898*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 898*FLEN/8, x12, x8, x9)

inst_472:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10f6d1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x16b1da and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f10f6d1; op2val:0x96b1da;
   valaddr_reg:x11; val_offset:900*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 900*FLEN/8, x12, x8, x9)

inst_473:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10f6d1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x16b1da and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f10f6d1; op2val:0x96b1da;
   valaddr_reg:x11; val_offset:902*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 902*FLEN/8, x12, x8, x9)

inst_474:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10f6d1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x16b1da and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f10f6d1; op2val:0x96b1da;
   valaddr_reg:x11; val_offset:904*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 904*FLEN/8, x12, x8, x9)

inst_475:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x567d2a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4bb254 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed67d2a; op2val:0xcbb254;
   valaddr_reg:x11; val_offset:906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 906*FLEN/8, x12, x8, x9)

inst_476:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x567d2a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4bb254 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed67d2a; op2val:0xcbb254;
   valaddr_reg:x11; val_offset:908*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 908*FLEN/8, x12, x8, x9)

inst_477:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x567d2a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4bb254 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed67d2a; op2val:0xcbb254;
   valaddr_reg:x11; val_offset:910*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 910*FLEN/8, x12, x8, x9)

inst_478:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x567d2a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4bb254 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed67d2a; op2val:0xcbb254;
   valaddr_reg:x11; val_offset:912*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 912*FLEN/8, x12, x8, x9)

inst_479:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x567d2a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4bb254 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed67d2a; op2val:0xcbb254;
   valaddr_reg:x11; val_offset:914*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 914*FLEN/8, x12, x8, x9)

inst_480:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x14fce0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x129ffe and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f14fce0; op2val:0x929ffe;
   valaddr_reg:x11; val_offset:916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 916*FLEN/8, x12, x8, x9)

inst_481:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x14fce0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x129ffe and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f14fce0; op2val:0x929ffe;
   valaddr_reg:x11; val_offset:918*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 918*FLEN/8, x12, x8, x9)

inst_482:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x14fce0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x129ffe and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f14fce0; op2val:0x929ffe;
   valaddr_reg:x11; val_offset:920*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 920*FLEN/8, x12, x8, x9)

inst_483:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x14fce0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x129ffe and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f14fce0; op2val:0x929ffe;
   valaddr_reg:x11; val_offset:922*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 922*FLEN/8, x12, x8, x9)

inst_484:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x14fce0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x129ffe and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f14fce0; op2val:0x929ffe;
   valaddr_reg:x11; val_offset:924*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 924*FLEN/8, x12, x8, x9)

inst_485:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x519b3c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x683882 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f519b3c; op2val:0x683882;
   valaddr_reg:x11; val_offset:926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 926*FLEN/8, x12, x8, x9)

inst_486:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x519b3c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x683882 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f519b3c; op2val:0x683882;
   valaddr_reg:x11; val_offset:928*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 928*FLEN/8, x12, x8, x9)

inst_487:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x519b3c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x683882 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f519b3c; op2val:0x683882;
   valaddr_reg:x11; val_offset:930*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 930*FLEN/8, x12, x8, x9)

inst_488:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x519b3c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x683882 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f519b3c; op2val:0x683882;
   valaddr_reg:x11; val_offset:932*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 932*FLEN/8, x12, x8, x9)

inst_489:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x519b3c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x683882 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f519b3c; op2val:0x683882;
   valaddr_reg:x11; val_offset:934*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 934*FLEN/8, x12, x8, x9)

inst_490:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4a14c0 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x583422 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4a14c0; op2val:0x1583422;
   valaddr_reg:x11; val_offset:936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 936*FLEN/8, x12, x8, x9)

inst_491:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4a14c0 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x583422 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4a14c0; op2val:0x1583422;
   valaddr_reg:x11; val_offset:938*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 938*FLEN/8, x12, x8, x9)

inst_492:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4a14c0 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x583422 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4a14c0; op2val:0x1583422;
   valaddr_reg:x11; val_offset:940*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 940*FLEN/8, x12, x8, x9)

inst_493:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4a14c0 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x583422 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4a14c0; op2val:0x1583422;
   valaddr_reg:x11; val_offset:942*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 942*FLEN/8, x12, x8, x9)

inst_494:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4a14c0 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x583422 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4a14c0; op2val:0x1583422;
   valaddr_reg:x11; val_offset:944*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 944*FLEN/8, x12, x8, x9)

inst_495:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x762a25 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x317c4c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef62a25; op2val:0xb17c4c;
   valaddr_reg:x11; val_offset:946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 946*FLEN/8, x12, x8, x9)

inst_496:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x762a25 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x317c4c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef62a25; op2val:0xb17c4c;
   valaddr_reg:x11; val_offset:948*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 948*FLEN/8, x12, x8, x9)

inst_497:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x762a25 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x317c4c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef62a25; op2val:0xb17c4c;
   valaddr_reg:x11; val_offset:950*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 950*FLEN/8, x12, x8, x9)

inst_498:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x762a25 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x317c4c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef62a25; op2val:0xb17c4c;
   valaddr_reg:x11; val_offset:952*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 952*FLEN/8, x12, x8, x9)

inst_499:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x762a25 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x317c4c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef62a25; op2val:0xb17c4c;
   valaddr_reg:x11; val_offset:954*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 954*FLEN/8, x12, x8, x9)

inst_500:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x476b30 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5b1710 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec76b30; op2val:0xdb1710;
   valaddr_reg:x11; val_offset:956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 956*FLEN/8, x12, x8, x9)

inst_501:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x476b30 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5b1710 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec76b30; op2val:0xdb1710;
   valaddr_reg:x11; val_offset:958*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 958*FLEN/8, x12, x8, x9)

inst_502:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x476b30 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5b1710 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec76b30; op2val:0xdb1710;
   valaddr_reg:x11; val_offset:960*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 960*FLEN/8, x12, x8, x9)

inst_503:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x476b30 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5b1710 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec76b30; op2val:0xdb1710;
   valaddr_reg:x11; val_offset:962*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 962*FLEN/8, x12, x8, x9)

inst_504:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x476b30 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5b1710 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec76b30; op2val:0xdb1710;
   valaddr_reg:x11; val_offset:964*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 964*FLEN/8, x12, x8, x9)

inst_505:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x06fed0 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x21d2a5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3c86fed0; op2val:0x321d2a5;
   valaddr_reg:x11; val_offset:966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 966*FLEN/8, x12, x8, x9)

inst_506:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x06fed0 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x21d2a5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3c86fed0; op2val:0x321d2a5;
   valaddr_reg:x11; val_offset:968*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 968*FLEN/8, x12, x8, x9)

inst_507:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x06fed0 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x21d2a5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3c86fed0; op2val:0x321d2a5;
   valaddr_reg:x11; val_offset:970*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 970*FLEN/8, x12, x8, x9)

inst_508:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x06fed0 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x21d2a5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3c86fed0; op2val:0x321d2a5;
   valaddr_reg:x11; val_offset:972*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 972*FLEN/8, x12, x8, x9)

inst_509:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x06fed0 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x21d2a5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3c86fed0; op2val:0x321d2a5;
   valaddr_reg:x11; val_offset:974*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 974*FLEN/8, x12, x8, x9)

inst_510:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b1f34 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x56fdae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b1f34; op2val:0x56fdae;
   valaddr_reg:x11; val_offset:976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 976*FLEN/8, x12, x8, x9)

inst_511:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b1f34 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x56fdae and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b1f34; op2val:0x56fdae;
   valaddr_reg:x11; val_offset:978*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 978*FLEN/8, x12, x8, x9)

inst_512:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b1f34 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x56fdae and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b1f34; op2val:0x56fdae;
   valaddr_reg:x11; val_offset:980*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 980*FLEN/8, x12, x8, x9)

inst_513:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b1f34 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x56fdae and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b1f34; op2val:0x56fdae;
   valaddr_reg:x11; val_offset:982*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 982*FLEN/8, x12, x8, x9)

inst_514:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b1f34 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x56fdae and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b1f34; op2val:0x56fdae;
   valaddr_reg:x11; val_offset:984*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 984*FLEN/8, x12, x8, x9)

inst_515:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x661a41 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5eeff7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f661a41; op2val:0x5eeff7;
   valaddr_reg:x11; val_offset:986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 986*FLEN/8, x12, x8, x9)

inst_516:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x661a41 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5eeff7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f661a41; op2val:0x5eeff7;
   valaddr_reg:x11; val_offset:988*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 988*FLEN/8, x12, x8, x9)

inst_517:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x661a41 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5eeff7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f661a41; op2val:0x5eeff7;
   valaddr_reg:x11; val_offset:990*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 990*FLEN/8, x12, x8, x9)

inst_518:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x661a41 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5eeff7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f661a41; op2val:0x5eeff7;
   valaddr_reg:x11; val_offset:992*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 992*FLEN/8, x12, x8, x9)

inst_519:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x661a41 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5eeff7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f661a41; op2val:0x5eeff7;
   valaddr_reg:x11; val_offset:994*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 994*FLEN/8, x12, x8, x9)

inst_520:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2336b0 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x05d853 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2336b0; op2val:0x185d853;
   valaddr_reg:x11; val_offset:996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 996*FLEN/8, x12, x8, x9)

inst_521:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2336b0 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x05d853 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2336b0; op2val:0x185d853;
   valaddr_reg:x11; val_offset:998*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 998*FLEN/8, x12, x8, x9)

inst_522:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2336b0 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x05d853 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2336b0; op2val:0x185d853;
   valaddr_reg:x11; val_offset:1000*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1000*FLEN/8, x12, x8, x9)

inst_523:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2336b0 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x05d853 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2336b0; op2val:0x185d853;
   valaddr_reg:x11; val_offset:1002*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1002*FLEN/8, x12, x8, x9)

inst_524:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2336b0 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x05d853 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2336b0; op2val:0x185d853;
   valaddr_reg:x11; val_offset:1004*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1004*FLEN/8, x12, x8, x9)

inst_525:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7bf9a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x56b245 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7bf9a3; op2val:0x56b245;
   valaddr_reg:x11; val_offset:1006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1006*FLEN/8, x12, x8, x9)

inst_526:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7bf9a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x56b245 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7bf9a3; op2val:0x56b245;
   valaddr_reg:x11; val_offset:1008*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1008*FLEN/8, x12, x8, x9)

inst_527:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7bf9a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x56b245 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7bf9a3; op2val:0x56b245;
   valaddr_reg:x11; val_offset:1010*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1010*FLEN/8, x12, x8, x9)

inst_528:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7bf9a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x56b245 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7bf9a3; op2val:0x56b245;
   valaddr_reg:x11; val_offset:1012*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1012*FLEN/8, x12, x8, x9)

inst_529:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7bf9a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x56b245 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7bf9a3; op2val:0x56b245;
   valaddr_reg:x11; val_offset:1014*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1014*FLEN/8, x12, x8, x9)

inst_530:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16de0b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10cc5b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f16de0b; op2val:0x90cc5b;
   valaddr_reg:x11; val_offset:1016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1016*FLEN/8, x12, x8, x9)

inst_531:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16de0b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10cc5b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f16de0b; op2val:0x90cc5b;
   valaddr_reg:x11; val_offset:1018*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1018*FLEN/8, x12, x8, x9)

inst_532:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16de0b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10cc5b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f16de0b; op2val:0x90cc5b;
   valaddr_reg:x11; val_offset:1020*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1020*FLEN/8, x12, x8, x9)

inst_533:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16de0b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10cc5b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f16de0b; op2val:0x90cc5b;
   valaddr_reg:x11; val_offset:1022*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1022*FLEN/8, x12, x8, x9)

inst_534:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16de0b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10cc5b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f16de0b; op2val:0x90cc5b;
   valaddr_reg:x11; val_offset:1024*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1024*FLEN/8, x12, x8, x9)

inst_535:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ab054 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6bc717 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ab054; op2val:0x6bc717;
   valaddr_reg:x11; val_offset:1026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1026*FLEN/8, x12, x8, x9)

inst_536:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ab054 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6bc717 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ab054; op2val:0x6bc717;
   valaddr_reg:x11; val_offset:1028*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1028*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_4)

inst_537:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ab054 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6bc717 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ab054; op2val:0x6bc717;
   valaddr_reg:x11; val_offset:1030*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1030*FLEN/8, x12, x8, x9)

inst_538:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ab054 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6bc717 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ab054; op2val:0x6bc717;
   valaddr_reg:x11; val_offset:1032*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1032*FLEN/8, x12, x8, x9)

inst_539:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ab054 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6bc717 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ab054; op2val:0x6bc717;
   valaddr_reg:x11; val_offset:1034*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1034*FLEN/8, x12, x8, x9)

inst_540:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d1c24 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5c21b4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6d1c24; op2val:0x5c21b4;
   valaddr_reg:x11; val_offset:1036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1036*FLEN/8, x12, x8, x9)

inst_541:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d1c24 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5c21b4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6d1c24; op2val:0x5c21b4;
   valaddr_reg:x11; val_offset:1038*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1038*FLEN/8, x12, x8, x9)

inst_542:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d1c24 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5c21b4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6d1c24; op2val:0x5c21b4;
   valaddr_reg:x11; val_offset:1040*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1040*FLEN/8, x12, x8, x9)

inst_543:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d1c24 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5c21b4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6d1c24; op2val:0x5c21b4;
   valaddr_reg:x11; val_offset:1042*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1042*FLEN/8, x12, x8, x9)

inst_544:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d1c24 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5c21b4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6d1c24; op2val:0x5c21b4;
   valaddr_reg:x11; val_offset:1044*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1044*FLEN/8, x12, x8, x9)

inst_545:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20897c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x08139a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f20897c; op2val:0x88139a;
   valaddr_reg:x11; val_offset:1046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1046*FLEN/8, x12, x8, x9)

inst_546:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20897c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x08139a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f20897c; op2val:0x88139a;
   valaddr_reg:x11; val_offset:1048*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1048*FLEN/8, x12, x8, x9)

inst_547:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20897c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x08139a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f20897c; op2val:0x88139a;
   valaddr_reg:x11; val_offset:1050*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1050*FLEN/8, x12, x8, x9)

inst_548:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20897c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x08139a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f20897c; op2val:0x88139a;
   valaddr_reg:x11; val_offset:1052*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1052*FLEN/8, x12, x8, x9)

inst_549:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20897c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x08139a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f20897c; op2val:0x88139a;
   valaddr_reg:x11; val_offset:1054*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1054*FLEN/8, x12, x8, x9)

inst_550:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6c6755 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5c682b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6c6755; op2val:0x5c682b;
   valaddr_reg:x11; val_offset:1056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1056*FLEN/8, x12, x8, x9)

inst_551:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6c6755 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5c682b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6c6755; op2val:0x5c682b;
   valaddr_reg:x11; val_offset:1058*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1058*FLEN/8, x12, x8, x9)

inst_552:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6c6755 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5c682b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6c6755; op2val:0x5c682b;
   valaddr_reg:x11; val_offset:1060*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1060*FLEN/8, x12, x8, x9)

inst_553:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6c6755 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5c682b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6c6755; op2val:0x5c682b;
   valaddr_reg:x11; val_offset:1062*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1062*FLEN/8, x12, x8, x9)

inst_554:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6c6755 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5c682b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6c6755; op2val:0x5c682b;
   valaddr_reg:x11; val_offset:1064*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1064*FLEN/8, x12, x8, x9)

inst_555:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec18d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x69a853 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ec18d; op2val:0x69a853;
   valaddr_reg:x11; val_offset:1066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1066*FLEN/8, x12, x8, x9)

inst_556:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec18d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x69a853 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ec18d; op2val:0x69a853;
   valaddr_reg:x11; val_offset:1068*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1068*FLEN/8, x12, x8, x9)

inst_557:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec18d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x69a853 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ec18d; op2val:0x69a853;
   valaddr_reg:x11; val_offset:1070*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1070*FLEN/8, x12, x8, x9)

inst_558:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec18d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x69a853 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ec18d; op2val:0x69a853;
   valaddr_reg:x11; val_offset:1072*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1072*FLEN/8, x12, x8, x9)

inst_559:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec18d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x69a853 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ec18d; op2val:0x69a853;
   valaddr_reg:x11; val_offset:1074*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1074*FLEN/8, x12, x8, x9)

inst_560:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1bb43e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0c4ce2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1bb43e; op2val:0x8c4ce2;
   valaddr_reg:x11; val_offset:1076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1076*FLEN/8, x12, x8, x9)

inst_561:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1bb43e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0c4ce2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1bb43e; op2val:0x8c4ce2;
   valaddr_reg:x11; val_offset:1078*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1078*FLEN/8, x12, x8, x9)

inst_562:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1bb43e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0c4ce2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1bb43e; op2val:0x8c4ce2;
   valaddr_reg:x11; val_offset:1080*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1080*FLEN/8, x12, x8, x9)

inst_563:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1bb43e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0c4ce2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1bb43e; op2val:0x8c4ce2;
   valaddr_reg:x11; val_offset:1082*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1082*FLEN/8, x12, x8, x9)

inst_564:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1bb43e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0c4ce2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1bb43e; op2val:0x8c4ce2;
   valaddr_reg:x11; val_offset:1084*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1084*FLEN/8, x12, x8, x9)

inst_565:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c5564 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2d257e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7c5564; op2val:0x12d257e;
   valaddr_reg:x11; val_offset:1086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1086*FLEN/8, x12, x8, x9)

inst_566:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c5564 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2d257e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7c5564; op2val:0x12d257e;
   valaddr_reg:x11; val_offset:1088*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1088*FLEN/8, x12, x8, x9)

inst_567:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c5564 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2d257e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7c5564; op2val:0x12d257e;
   valaddr_reg:x11; val_offset:1090*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1090*FLEN/8, x12, x8, x9)

inst_568:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c5564 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2d257e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7c5564; op2val:0x12d257e;
   valaddr_reg:x11; val_offset:1092*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1092*FLEN/8, x12, x8, x9)

inst_569:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c5564 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2d257e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7c5564; op2val:0x12d257e;
   valaddr_reg:x11; val_offset:1094*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1094*FLEN/8, x12, x8, x9)

inst_570:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60d656 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61291f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f60d656; op2val:0x61291f;
   valaddr_reg:x11; val_offset:1096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1096*FLEN/8, x12, x8, x9)

inst_571:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60d656 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61291f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f60d656; op2val:0x61291f;
   valaddr_reg:x11; val_offset:1098*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1098*FLEN/8, x12, x8, x9)

inst_572:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60d656 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61291f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f60d656; op2val:0x61291f;
   valaddr_reg:x11; val_offset:1100*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1100*FLEN/8, x12, x8, x9)

inst_573:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60d656 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61291f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f60d656; op2val:0x61291f;
   valaddr_reg:x11; val_offset:1102*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1102*FLEN/8, x12, x8, x9)

inst_574:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60d656 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61291f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f60d656; op2val:0x61291f;
   valaddr_reg:x11; val_offset:1104*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1104*FLEN/8, x12, x8, x9)

inst_575:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b63a6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cce1d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6b63a6; op2val:0x5cce1d;
   valaddr_reg:x11; val_offset:1106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1106*FLEN/8, x12, x8, x9)

inst_576:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b63a6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cce1d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6b63a6; op2val:0x5cce1d;
   valaddr_reg:x11; val_offset:1108*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1108*FLEN/8, x12, x8, x9)

inst_577:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b63a6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cce1d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6b63a6; op2val:0x5cce1d;
   valaddr_reg:x11; val_offset:1110*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1110*FLEN/8, x12, x8, x9)

inst_578:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b63a6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cce1d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6b63a6; op2val:0x5cce1d;
   valaddr_reg:x11; val_offset:1112*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1112*FLEN/8, x12, x8, x9)

inst_579:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b63a6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cce1d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6b63a6; op2val:0x5cce1d;
   valaddr_reg:x11; val_offset:1114*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1114*FLEN/8, x12, x8, x9)

inst_580:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x37cff3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6db115 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb7cff3; op2val:0xedb115;
   valaddr_reg:x11; val_offset:1116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1116*FLEN/8, x12, x8, x9)

inst_581:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x37cff3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6db115 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb7cff3; op2val:0xedb115;
   valaddr_reg:x11; val_offset:1118*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1118*FLEN/8, x12, x8, x9)

inst_582:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x37cff3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6db115 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb7cff3; op2val:0xedb115;
   valaddr_reg:x11; val_offset:1120*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1120*FLEN/8, x12, x8, x9)

inst_583:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x37cff3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6db115 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb7cff3; op2val:0xedb115;
   valaddr_reg:x11; val_offset:1122*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1122*FLEN/8, x12, x8, x9)

inst_584:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x37cff3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6db115 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb7cff3; op2val:0xedb115;
   valaddr_reg:x11; val_offset:1124*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1124*FLEN/8, x12, x8, x9)

inst_585:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1d5ca5 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0ad27e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e9d5ca5; op2val:0x10ad27e;
   valaddr_reg:x11; val_offset:1126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1126*FLEN/8, x12, x8, x9)

inst_586:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1d5ca5 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0ad27e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e9d5ca5; op2val:0x10ad27e;
   valaddr_reg:x11; val_offset:1128*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1128*FLEN/8, x12, x8, x9)

inst_587:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1d5ca5 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0ad27e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e9d5ca5; op2val:0x10ad27e;
   valaddr_reg:x11; val_offset:1130*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1130*FLEN/8, x12, x8, x9)

inst_588:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1d5ca5 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0ad27e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e9d5ca5; op2val:0x10ad27e;
   valaddr_reg:x11; val_offset:1132*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1132*FLEN/8, x12, x8, x9)

inst_589:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1d5ca5 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0ad27e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e9d5ca5; op2val:0x10ad27e;
   valaddr_reg:x11; val_offset:1134*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1134*FLEN/8, x12, x8, x9)

inst_590:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e829f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7a5c91 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eae829f; op2val:0xfa5c91;
   valaddr_reg:x11; val_offset:1136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1136*FLEN/8, x12, x8, x9)

inst_591:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e829f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7a5c91 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eae829f; op2val:0xfa5c91;
   valaddr_reg:x11; val_offset:1138*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1138*FLEN/8, x12, x8, x9)

inst_592:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e829f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7a5c91 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eae829f; op2val:0xfa5c91;
   valaddr_reg:x11; val_offset:1140*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1140*FLEN/8, x12, x8, x9)

inst_593:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e829f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7a5c91 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eae829f; op2val:0xfa5c91;
   valaddr_reg:x11; val_offset:1142*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1142*FLEN/8, x12, x8, x9)

inst_594:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e829f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7a5c91 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eae829f; op2val:0xfa5c91;
   valaddr_reg:x11; val_offset:1144*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1144*FLEN/8, x12, x8, x9)

inst_595:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d8f03 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a51ed and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d8f03; op2val:0x11a51ed;
   valaddr_reg:x11; val_offset:1146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1146*FLEN/8, x12, x8, x9)

inst_596:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d8f03 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a51ed and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d8f03; op2val:0x11a51ed;
   valaddr_reg:x11; val_offset:1148*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1148*FLEN/8, x12, x8, x9)

inst_597:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d8f03 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a51ed and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d8f03; op2val:0x11a51ed;
   valaddr_reg:x11; val_offset:1150*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1150*FLEN/8, x12, x8, x9)

inst_598:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d8f03 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a51ed and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d8f03; op2val:0x11a51ed;
   valaddr_reg:x11; val_offset:1152*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1152*FLEN/8, x12, x8, x9)

inst_599:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d8f03 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1a51ed and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d8f03; op2val:0x11a51ed;
   valaddr_reg:x11; val_offset:1154*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1154*FLEN/8, x12, x8, x9)

inst_600:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247555 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04d4ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f247555; op2val:0x84d4ff;
   valaddr_reg:x11; val_offset:1156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1156*FLEN/8, x12, x8, x9)

inst_601:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247555 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04d4ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f247555; op2val:0x84d4ff;
   valaddr_reg:x11; val_offset:1158*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1158*FLEN/8, x12, x8, x9)

inst_602:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247555 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04d4ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f247555; op2val:0x84d4ff;
   valaddr_reg:x11; val_offset:1160*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1160*FLEN/8, x12, x8, x9)

inst_603:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247555 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04d4ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f247555; op2val:0x84d4ff;
   valaddr_reg:x11; val_offset:1162*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1162*FLEN/8, x12, x8, x9)

inst_604:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247555 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04d4ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f247555; op2val:0x84d4ff;
   valaddr_reg:x11; val_offset:1164*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1164*FLEN/8, x12, x8, x9)

inst_605:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4e1bcc and fs2 == 0 and fe2 == 0x02 and fm2 == 0x53fa97 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4e1bcc; op2val:0x153fa97;
   valaddr_reg:x11; val_offset:1166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1166*FLEN/8, x12, x8, x9)

inst_606:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4e1bcc and fs2 == 0 and fe2 == 0x02 and fm2 == 0x53fa97 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4e1bcc; op2val:0x153fa97;
   valaddr_reg:x11; val_offset:1168*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1168*FLEN/8, x12, x8, x9)

inst_607:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4e1bcc and fs2 == 0 and fe2 == 0x02 and fm2 == 0x53fa97 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4e1bcc; op2val:0x153fa97;
   valaddr_reg:x11; val_offset:1170*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1170*FLEN/8, x12, x8, x9)

inst_608:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4e1bcc and fs2 == 0 and fe2 == 0x02 and fm2 == 0x53fa97 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4e1bcc; op2val:0x153fa97;
   valaddr_reg:x11; val_offset:1172*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1172*FLEN/8, x12, x8, x9)

inst_609:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4e1bcc and fs2 == 0 and fe2 == 0x02 and fm2 == 0x53fa97 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4e1bcc; op2val:0x153fa97;
   valaddr_reg:x11; val_offset:1174*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1174*FLEN/8, x12, x8, x9)

inst_610:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x728850 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3424c0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef28850; op2val:0xb424c0;
   valaddr_reg:x11; val_offset:1176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1176*FLEN/8, x12, x8, x9)

inst_611:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x728850 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3424c0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef28850; op2val:0xb424c0;
   valaddr_reg:x11; val_offset:1178*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1178*FLEN/8, x12, x8, x9)

inst_612:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x728850 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3424c0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef28850; op2val:0xb424c0;
   valaddr_reg:x11; val_offset:1180*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1180*FLEN/8, x12, x8, x9)

inst_613:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x728850 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3424c0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef28850; op2val:0xb424c0;
   valaddr_reg:x11; val_offset:1182*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1182*FLEN/8, x12, x8, x9)

inst_614:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x728850 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3424c0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef28850; op2val:0xb424c0;
   valaddr_reg:x11; val_offset:1184*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1184*FLEN/8, x12, x8, x9)

inst_615:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x398fcc and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6b736b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d398fcc; op2val:0x26b736b;
   valaddr_reg:x11; val_offset:1186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1186*FLEN/8, x12, x8, x9)

inst_616:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x398fcc and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6b736b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d398fcc; op2val:0x26b736b;
   valaddr_reg:x11; val_offset:1188*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1188*FLEN/8, x12, x8, x9)

inst_617:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x398fcc and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6b736b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d398fcc; op2val:0x26b736b;
   valaddr_reg:x11; val_offset:1190*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1190*FLEN/8, x12, x8, x9)

inst_618:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x398fcc and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6b736b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d398fcc; op2val:0x26b736b;
   valaddr_reg:x11; val_offset:1192*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1192*FLEN/8, x12, x8, x9)

inst_619:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x398fcc and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6b736b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d398fcc; op2val:0x26b736b;
   valaddr_reg:x11; val_offset:1194*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1194*FLEN/8, x12, x8, x9)

inst_620:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0b2758 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x1cfcb1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d8b2758; op2val:0x21cfcb1;
   valaddr_reg:x11; val_offset:1196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1196*FLEN/8, x12, x8, x9)

inst_621:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0b2758 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x1cfcb1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d8b2758; op2val:0x21cfcb1;
   valaddr_reg:x11; val_offset:1198*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1198*FLEN/8, x12, x8, x9)

inst_622:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0b2758 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x1cfcb1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d8b2758; op2val:0x21cfcb1;
   valaddr_reg:x11; val_offset:1200*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1200*FLEN/8, x12, x8, x9)

inst_623:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0b2758 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x1cfcb1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d8b2758; op2val:0x21cfcb1;
   valaddr_reg:x11; val_offset:1202*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1202*FLEN/8, x12, x8, x9)

inst_624:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0b2758 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x1cfcb1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d8b2758; op2val:0x21cfcb1;
   valaddr_reg:x11; val_offset:1204*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1204*FLEN/8, x12, x8, x9)

inst_625:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34074b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7957ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f34074b; op2val:0x7957ff;
   valaddr_reg:x11; val_offset:1206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1206*FLEN/8, x12, x8, x9)

inst_626:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34074b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7957ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f34074b; op2val:0x7957ff;
   valaddr_reg:x11; val_offset:1208*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1208*FLEN/8, x12, x8, x9)

inst_627:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34074b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7957ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f34074b; op2val:0x7957ff;
   valaddr_reg:x11; val_offset:1210*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1210*FLEN/8, x12, x8, x9)

inst_628:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34074b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7957ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f34074b; op2val:0x7957ff;
   valaddr_reg:x11; val_offset:1212*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1212*FLEN/8, x12, x8, x9)

inst_629:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34074b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7957ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f34074b; op2val:0x7957ff;
   valaddr_reg:x11; val_offset:1214*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1214*FLEN/8, x12, x8, x9)

inst_630:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02deb1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7a62d8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f02deb1; op2val:0xfa62d8;
   valaddr_reg:x11; val_offset:1216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1216*FLEN/8, x12, x8, x9)

inst_631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02deb1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7a62d8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f02deb1; op2val:0xfa62d8;
   valaddr_reg:x11; val_offset:1218*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1218*FLEN/8, x12, x8, x9)

inst_632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02deb1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7a62d8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f02deb1; op2val:0xfa62d8;
   valaddr_reg:x11; val_offset:1220*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1220*FLEN/8, x12, x8, x9)

inst_633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02deb1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7a62d8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f02deb1; op2val:0xfa62d8;
   valaddr_reg:x11; val_offset:1222*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1222*FLEN/8, x12, x8, x9)

inst_634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02deb1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7a62d8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f02deb1; op2val:0xfa62d8;
   valaddr_reg:x11; val_offset:1224*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1224*FLEN/8, x12, x8, x9)

inst_635:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x128547 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5fa412 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f128547; op2val:0xdfa412;
   valaddr_reg:x11; val_offset:1226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1226*FLEN/8, x12, x8, x9)

inst_636:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x128547 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5fa412 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f128547; op2val:0xdfa412;
   valaddr_reg:x11; val_offset:1228*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1228*FLEN/8, x12, x8, x9)

inst_637:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x128547 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5fa412 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f128547; op2val:0xdfa412;
   valaddr_reg:x11; val_offset:1230*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1230*FLEN/8, x12, x8, x9)

inst_638:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x128547 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5fa412 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f128547; op2val:0xdfa412;
   valaddr_reg:x11; val_offset:1232*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1232*FLEN/8, x12, x8, x9)

inst_639:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x128547 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5fa412 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f128547; op2val:0xdfa412;
   valaddr_reg:x11; val_offset:1234*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1234*FLEN/8, x12, x8, x9)

inst_640:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x26bf68 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x448332 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3da6bf68; op2val:0x2448332;
   valaddr_reg:x11; val_offset:1236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1236*FLEN/8, x12, x8, x9)

inst_641:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x26bf68 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x448332 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3da6bf68; op2val:0x2448332;
   valaddr_reg:x11; val_offset:1238*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1238*FLEN/8, x12, x8, x9)

inst_642:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x26bf68 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x448332 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3da6bf68; op2val:0x2448332;
   valaddr_reg:x11; val_offset:1240*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1240*FLEN/8, x12, x8, x9)

inst_643:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x26bf68 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x448332 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3da6bf68; op2val:0x2448332;
   valaddr_reg:x11; val_offset:1242*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1242*FLEN/8, x12, x8, x9)

inst_644:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x26bf68 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x448332 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3da6bf68; op2val:0x2448332;
   valaddr_reg:x11; val_offset:1244*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1244*FLEN/8, x12, x8, x9)

inst_645:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3a84ad and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2faebb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e3a84ad; op2val:0x1afaebb;
   valaddr_reg:x11; val_offset:1246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1246*FLEN/8, x12, x8, x9)

inst_646:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3a84ad and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2faebb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e3a84ad; op2val:0x1afaebb;
   valaddr_reg:x11; val_offset:1248*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1248*FLEN/8, x12, x8, x9)

inst_647:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3a84ad and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2faebb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e3a84ad; op2val:0x1afaebb;
   valaddr_reg:x11; val_offset:1250*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1250*FLEN/8, x12, x8, x9)

inst_648:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3a84ad and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2faebb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e3a84ad; op2val:0x1afaebb;
   valaddr_reg:x11; val_offset:1252*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1252*FLEN/8, x12, x8, x9)

inst_649:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3a84ad and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2faebb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e3a84ad; op2val:0x1afaebb;
   valaddr_reg:x11; val_offset:1254*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1254*FLEN/8, x12, x8, x9)

inst_650:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24d96e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x46c684 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f24d96e; op2val:0xc6c684;
   valaddr_reg:x11; val_offset:1256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1256*FLEN/8, x12, x8, x9)

inst_651:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24d96e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x46c684 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f24d96e; op2val:0xc6c684;
   valaddr_reg:x11; val_offset:1258*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1258*FLEN/8, x12, x8, x9)

inst_652:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24d96e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x46c684 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f24d96e; op2val:0xc6c684;
   valaddr_reg:x11; val_offset:1260*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1260*FLEN/8, x12, x8, x9)

inst_653:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24d96e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x46c684 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f24d96e; op2val:0xc6c684;
   valaddr_reg:x11; val_offset:1262*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1262*FLEN/8, x12, x8, x9)

inst_654:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24d96e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x46c684 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f24d96e; op2val:0xc6c684;
   valaddr_reg:x11; val_offset:1264*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1264*FLEN/8, x12, x8, x9)

inst_655:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a7ee8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x15f88d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5a7ee8; op2val:0x95f88d;
   valaddr_reg:x11; val_offset:1266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1266*FLEN/8, x12, x8, x9)

inst_656:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a7ee8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x15f88d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5a7ee8; op2val:0x95f88d;
   valaddr_reg:x11; val_offset:1268*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1268*FLEN/8, x12, x8, x9)

inst_657:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a7ee8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x15f88d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5a7ee8; op2val:0x95f88d;
   valaddr_reg:x11; val_offset:1270*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1270*FLEN/8, x12, x8, x9)

inst_658:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a7ee8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x15f88d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5a7ee8; op2val:0x95f88d;
   valaddr_reg:x11; val_offset:1272*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1272*FLEN/8, x12, x8, x9)

inst_659:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a7ee8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x15f88d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5a7ee8; op2val:0x95f88d;
   valaddr_reg:x11; val_offset:1274*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1274*FLEN/8, x12, x8, x9)

inst_660:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ee39d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x092b13 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6ee39d; op2val:0x892b13;
   valaddr_reg:x11; val_offset:1276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1276*FLEN/8, x12, x8, x9)

inst_661:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ee39d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x092b13 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6ee39d; op2val:0x892b13;
   valaddr_reg:x11; val_offset:1278*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1278*FLEN/8, x12, x8, x9)

inst_662:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ee39d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x092b13 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6ee39d; op2val:0x892b13;
   valaddr_reg:x11; val_offset:1280*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1280*FLEN/8, x12, x8, x9)

inst_663:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ee39d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x092b13 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6ee39d; op2val:0x892b13;
   valaddr_reg:x11; val_offset:1282*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1282*FLEN/8, x12, x8, x9)

inst_664:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ee39d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x092b13 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6ee39d; op2val:0x892b13;
   valaddr_reg:x11; val_offset:1284*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1284*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_5)

inst_665:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5603e9 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x191c4f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd603e9; op2val:0x2191c4f;
   valaddr_reg:x11; val_offset:1286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1286*FLEN/8, x12, x8, x9)

inst_666:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5603e9 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x191c4f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd603e9; op2val:0x2191c4f;
   valaddr_reg:x11; val_offset:1288*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1288*FLEN/8, x12, x8, x9)

inst_667:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5603e9 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x191c4f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd603e9; op2val:0x2191c4f;
   valaddr_reg:x11; val_offset:1290*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1290*FLEN/8, x12, x8, x9)

inst_668:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5603e9 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x191c4f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd603e9; op2val:0x2191c4f;
   valaddr_reg:x11; val_offset:1292*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1292*FLEN/8, x12, x8, x9)

inst_669:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5603e9 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x191c4f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd603e9; op2val:0x2191c4f;
   valaddr_reg:x11; val_offset:1294*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1294*FLEN/8, x12, x8, x9)

inst_670:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x342e95 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x35dc51 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb42e95; op2val:0x135dc51;
   valaddr_reg:x11; val_offset:1296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1296*FLEN/8, x12, x8, x9)

inst_671:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x342e95 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x35dc51 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb42e95; op2val:0x135dc51;
   valaddr_reg:x11; val_offset:1298*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1298*FLEN/8, x12, x8, x9)

inst_672:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x342e95 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x35dc51 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb42e95; op2val:0x135dc51;
   valaddr_reg:x11; val_offset:1300*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1300*FLEN/8, x12, x8, x9)

inst_673:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x342e95 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x35dc51 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb42e95; op2val:0x135dc51;
   valaddr_reg:x11; val_offset:1302*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1302*FLEN/8, x12, x8, x9)

inst_674:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x342e95 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x35dc51 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb42e95; op2val:0x135dc51;
   valaddr_reg:x11; val_offset:1304*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1304*FLEN/8, x12, x8, x9)

inst_675:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x342046 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x35eac4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f342046; op2val:0xb5eac4;
   valaddr_reg:x11; val_offset:1306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1306*FLEN/8, x12, x8, x9)

inst_676:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x342046 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x35eac4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f342046; op2val:0xb5eac4;
   valaddr_reg:x11; val_offset:1308*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1308*FLEN/8, x12, x8, x9)

inst_677:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x342046 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x35eac4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f342046; op2val:0xb5eac4;
   valaddr_reg:x11; val_offset:1310*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1310*FLEN/8, x12, x8, x9)

inst_678:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x342046 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x35eac4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f342046; op2val:0xb5eac4;
   valaddr_reg:x11; val_offset:1312*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1312*FLEN/8, x12, x8, x9)

inst_679:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x342046 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x35eac4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f342046; op2val:0xb5eac4;
   valaddr_reg:x11; val_offset:1314*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1314*FLEN/8, x12, x8, x9)

inst_680:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2895c5 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x425eea and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea895c5; op2val:0x1425eea;
   valaddr_reg:x11; val_offset:1316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1316*FLEN/8, x12, x8, x9)

inst_681:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2895c5 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x425eea and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea895c5; op2val:0x1425eea;
   valaddr_reg:x11; val_offset:1318*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1318*FLEN/8, x12, x8, x9)

inst_682:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2895c5 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x425eea and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea895c5; op2val:0x1425eea;
   valaddr_reg:x11; val_offset:1320*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1320*FLEN/8, x12, x8, x9)

inst_683:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2895c5 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x425eea and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea895c5; op2val:0x1425eea;
   valaddr_reg:x11; val_offset:1322*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1322*FLEN/8, x12, x8, x9)

inst_684:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2895c5 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x425eea and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea895c5; op2val:0x1425eea;
   valaddr_reg:x11; val_offset:1324*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1324*FLEN/8, x12, x8, x9)

inst_685:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0fa7cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6419f2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0fa7cc; op2val:0xe419f2;
   valaddr_reg:x11; val_offset:1326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1326*FLEN/8, x12, x8, x9)

inst_686:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0fa7cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6419f2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0fa7cc; op2val:0xe419f2;
   valaddr_reg:x11; val_offset:1328*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1328*FLEN/8, x12, x8, x9)

inst_687:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0fa7cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6419f2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0fa7cc; op2val:0xe419f2;
   valaddr_reg:x11; val_offset:1330*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1330*FLEN/8, x12, x8, x9)

inst_688:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0fa7cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6419f2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0fa7cc; op2val:0xe419f2;
   valaddr_reg:x11; val_offset:1332*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1332*FLEN/8, x12, x8, x9)

inst_689:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0fa7cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6419f2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0fa7cc; op2val:0xe419f2;
   valaddr_reg:x11; val_offset:1334*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1334*FLEN/8, x12, x8, x9)

inst_690:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634f5c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1027d3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f634f5c; op2val:0x9027d3;
   valaddr_reg:x11; val_offset:1336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1336*FLEN/8, x12, x8, x9)

inst_691:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634f5c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1027d3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f634f5c; op2val:0x9027d3;
   valaddr_reg:x11; val_offset:1338*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1338*FLEN/8, x12, x8, x9)

inst_692:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634f5c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1027d3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f634f5c; op2val:0x9027d3;
   valaddr_reg:x11; val_offset:1340*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1340*FLEN/8, x12, x8, x9)

inst_693:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634f5c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1027d3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f634f5c; op2val:0x9027d3;
   valaddr_reg:x11; val_offset:1342*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1342*FLEN/8, x12, x8, x9)

inst_694:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634f5c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1027d3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f634f5c; op2val:0x9027d3;
   valaddr_reg:x11; val_offset:1344*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1344*FLEN/8, x12, x8, x9)

inst_695:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4d0d0e and fs2 == 0 and fe2 == 0x05 and fm2 == 0x1fcdde and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d4d0d0e; op2val:0x29fcdde;
   valaddr_reg:x11; val_offset:1346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1346*FLEN/8, x12, x8, x9)

inst_696:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4d0d0e and fs2 == 0 and fe2 == 0x05 and fm2 == 0x1fcdde and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d4d0d0e; op2val:0x29fcdde;
   valaddr_reg:x11; val_offset:1348*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1348*FLEN/8, x12, x8, x9)

inst_697:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4d0d0e and fs2 == 0 and fe2 == 0x05 and fm2 == 0x1fcdde and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d4d0d0e; op2val:0x29fcdde;
   valaddr_reg:x11; val_offset:1350*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1350*FLEN/8, x12, x8, x9)

inst_698:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4d0d0e and fs2 == 0 and fe2 == 0x05 and fm2 == 0x1fcdde and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d4d0d0e; op2val:0x29fcdde;
   valaddr_reg:x11; val_offset:1352*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1352*FLEN/8, x12, x8, x9)

inst_699:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4d0d0e and fs2 == 0 and fe2 == 0x05 and fm2 == 0x1fcdde and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d4d0d0e; op2val:0x29fcdde;
   valaddr_reg:x11; val_offset:1354*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1354*FLEN/8, x12, x8, x9)

inst_700:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67626b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d9dfc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f67626b; op2val:0x8d9dfc;
   valaddr_reg:x11; val_offset:1356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1356*FLEN/8, x12, x8, x9)

inst_701:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67626b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d9dfc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f67626b; op2val:0x8d9dfc;
   valaddr_reg:x11; val_offset:1358*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1358*FLEN/8, x12, x8, x9)

inst_702:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67626b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d9dfc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f67626b; op2val:0x8d9dfc;
   valaddr_reg:x11; val_offset:1360*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1360*FLEN/8, x12, x8, x9)

inst_703:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67626b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d9dfc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f67626b; op2val:0x8d9dfc;
   valaddr_reg:x11; val_offset:1362*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1362*FLEN/8, x12, x8, x9)

inst_704:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67626b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d9dfc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f67626b; op2val:0x8d9dfc;
   valaddr_reg:x11; val_offset:1364*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1364*FLEN/8, x12, x8, x9)

inst_705:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11bbb3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x60d968 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e91bbb3; op2val:0x160d968;
   valaddr_reg:x11; val_offset:1366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1366*FLEN/8, x12, x8, x9)

inst_706:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11bbb3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x60d968 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e91bbb3; op2val:0x160d968;
   valaddr_reg:x11; val_offset:1368*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1368*FLEN/8, x12, x8, x9)

inst_707:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11bbb3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x60d968 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e91bbb3; op2val:0x160d968;
   valaddr_reg:x11; val_offset:1370*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1370*FLEN/8, x12, x8, x9)

inst_708:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11bbb3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x60d968 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e91bbb3; op2val:0x160d968;
   valaddr_reg:x11; val_offset:1372*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1372*FLEN/8, x12, x8, x9)

inst_709:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11bbb3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x60d968 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e91bbb3; op2val:0x160d968;
   valaddr_reg:x11; val_offset:1374*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1374*FLEN/8, x12, x8, x9)

inst_710:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x57406c and fs2 == 0 and fe2 == 0x04 and fm2 == 0x183b2b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd7406c; op2val:0x2183b2b;
   valaddr_reg:x11; val_offset:1376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1376*FLEN/8, x12, x8, x9)

inst_711:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x57406c and fs2 == 0 and fe2 == 0x04 and fm2 == 0x183b2b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd7406c; op2val:0x2183b2b;
   valaddr_reg:x11; val_offset:1378*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1378*FLEN/8, x12, x8, x9)

inst_712:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x57406c and fs2 == 0 and fe2 == 0x04 and fm2 == 0x183b2b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd7406c; op2val:0x2183b2b;
   valaddr_reg:x11; val_offset:1380*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1380*FLEN/8, x12, x8, x9)

inst_713:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x57406c and fs2 == 0 and fe2 == 0x04 and fm2 == 0x183b2b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd7406c; op2val:0x2183b2b;
   valaddr_reg:x11; val_offset:1382*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1382*FLEN/8, x12, x8, x9)

inst_714:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x57406c and fs2 == 0 and fe2 == 0x04 and fm2 == 0x183b2b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd7406c; op2val:0x2183b2b;
   valaddr_reg:x11; val_offset:1384*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1384*FLEN/8, x12, x8, x9)

inst_715:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17f214 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x57a7f8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e97f214; op2val:0x157a7f8;
   valaddr_reg:x11; val_offset:1386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1386*FLEN/8, x12, x8, x9)

inst_716:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17f214 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x57a7f8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e97f214; op2val:0x157a7f8;
   valaddr_reg:x11; val_offset:1388*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1388*FLEN/8, x12, x8, x9)

inst_717:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17f214 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x57a7f8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e97f214; op2val:0x157a7f8;
   valaddr_reg:x11; val_offset:1390*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1390*FLEN/8, x12, x8, x9)

inst_718:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17f214 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x57a7f8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e97f214; op2val:0x157a7f8;
   valaddr_reg:x11; val_offset:1392*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1392*FLEN/8, x12, x8, x9)

inst_719:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17f214 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x57a7f8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e97f214; op2val:0x157a7f8;
   valaddr_reg:x11; val_offset:1394*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1394*FLEN/8, x12, x8, x9)

inst_720:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x1f7b0a and fs2 == 0 and fe2 == 0x08 and fm2 == 0x4d778c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3b9f7b0a; op2val:0x44d778c;
   valaddr_reg:x11; val_offset:1396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1396*FLEN/8, x12, x8, x9)

inst_721:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x1f7b0a and fs2 == 0 and fe2 == 0x08 and fm2 == 0x4d778c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3b9f7b0a; op2val:0x44d778c;
   valaddr_reg:x11; val_offset:1398*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1398*FLEN/8, x12, x8, x9)

inst_722:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x1f7b0a and fs2 == 0 and fe2 == 0x08 and fm2 == 0x4d778c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3b9f7b0a; op2val:0x44d778c;
   valaddr_reg:x11; val_offset:1400*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1400*FLEN/8, x12, x8, x9)

inst_723:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x1f7b0a and fs2 == 0 and fe2 == 0x08 and fm2 == 0x4d778c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3b9f7b0a; op2val:0x44d778c;
   valaddr_reg:x11; val_offset:1402*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1402*FLEN/8, x12, x8, x9)

inst_724:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x1f7b0a and fs2 == 0 and fe2 == 0x08 and fm2 == 0x4d778c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3b9f7b0a; op2val:0x44d778c;
   valaddr_reg:x11; val_offset:1404*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1404*FLEN/8, x12, x8, x9)

inst_725:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5a6605 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1609a4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eda6605; op2val:0x11609a4;
   valaddr_reg:x11; val_offset:1406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1406*FLEN/8, x12, x8, x9)

inst_726:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5a6605 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1609a4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eda6605; op2val:0x11609a4;
   valaddr_reg:x11; val_offset:1408*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1408*FLEN/8, x12, x8, x9)

inst_727:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5a6605 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1609a4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eda6605; op2val:0x11609a4;
   valaddr_reg:x11; val_offset:1410*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1410*FLEN/8, x12, x8, x9)

inst_728:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5a6605 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1609a4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eda6605; op2val:0x11609a4;
   valaddr_reg:x11; val_offset:1412*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1412*FLEN/8, x12, x8, x9)

inst_729:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5a6605 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1609a4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eda6605; op2val:0x11609a4;
   valaddr_reg:x11; val_offset:1414*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1414*FLEN/8, x12, x8, x9)

inst_730:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f0e9d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x650e31 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0f0e9d; op2val:0xe50e31;
   valaddr_reg:x11; val_offset:1416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1416*FLEN/8, x12, x8, x9)

inst_731:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f0e9d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x650e31 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0f0e9d; op2val:0xe50e31;
   valaddr_reg:x11; val_offset:1418*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1418*FLEN/8, x12, x8, x9)

inst_732:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f0e9d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x650e31 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0f0e9d; op2val:0xe50e31;
   valaddr_reg:x11; val_offset:1420*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1420*FLEN/8, x12, x8, x9)

inst_733:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f0e9d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x650e31 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0f0e9d; op2val:0xe50e31;
   valaddr_reg:x11; val_offset:1422*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1422*FLEN/8, x12, x8, x9)

inst_734:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f0e9d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x650e31 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0f0e9d; op2val:0xe50e31;
   valaddr_reg:x11; val_offset:1424*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1424*FLEN/8, x12, x8, x9)

inst_735:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f46a4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e16bb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ecf46a4; op2val:0x11e16bb;
   valaddr_reg:x11; val_offset:1426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1426*FLEN/8, x12, x8, x9)

inst_736:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f46a4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e16bb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ecf46a4; op2val:0x11e16bb;
   valaddr_reg:x11; val_offset:1428*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1428*FLEN/8, x12, x8, x9)

inst_737:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f46a4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e16bb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ecf46a4; op2val:0x11e16bb;
   valaddr_reg:x11; val_offset:1430*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1430*FLEN/8, x12, x8, x9)

inst_738:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f46a4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e16bb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ecf46a4; op2val:0x11e16bb;
   valaddr_reg:x11; val_offset:1432*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1432*FLEN/8, x12, x8, x9)

inst_739:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f46a4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e16bb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ecf46a4; op2val:0x11e16bb;
   valaddr_reg:x11; val_offset:1434*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1434*FLEN/8, x12, x8, x9)

inst_740:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51cfb3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1c2dad and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f51cfb3; op2val:0x9c2dad;
   valaddr_reg:x11; val_offset:1436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1436*FLEN/8, x12, x8, x9)

inst_741:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51cfb3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1c2dad and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f51cfb3; op2val:0x9c2dad;
   valaddr_reg:x11; val_offset:1438*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1438*FLEN/8, x12, x8, x9)

inst_742:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51cfb3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1c2dad and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f51cfb3; op2val:0x9c2dad;
   valaddr_reg:x11; val_offset:1440*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1440*FLEN/8, x12, x8, x9)

inst_743:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51cfb3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1c2dad and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f51cfb3; op2val:0x9c2dad;
   valaddr_reg:x11; val_offset:1442*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1442*FLEN/8, x12, x8, x9)

inst_744:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51cfb3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1c2dad and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f51cfb3; op2val:0x9c2dad;
   valaddr_reg:x11; val_offset:1444*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1444*FLEN/8, x12, x8, x9)

inst_745:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x047d9c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7752b7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f047d9c; op2val:0xf752b7;
   valaddr_reg:x11; val_offset:1446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1446*FLEN/8, x12, x8, x9)

inst_746:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x047d9c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7752b7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f047d9c; op2val:0xf752b7;
   valaddr_reg:x11; val_offset:1448*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1448*FLEN/8, x12, x8, x9)

inst_747:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x047d9c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7752b7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f047d9c; op2val:0xf752b7;
   valaddr_reg:x11; val_offset:1450*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1450*FLEN/8, x12, x8, x9)

inst_748:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x047d9c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7752b7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f047d9c; op2val:0xf752b7;
   valaddr_reg:x11; val_offset:1452*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1452*FLEN/8, x12, x8, x9)

inst_749:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x047d9c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7752b7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f047d9c; op2val:0xf752b7;
   valaddr_reg:x11; val_offset:1454*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1454*FLEN/8, x12, x8, x9)

inst_750:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x143e93 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5d0a55 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e943e93; op2val:0x15d0a55;
   valaddr_reg:x11; val_offset:1456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1456*FLEN/8, x12, x8, x9)

inst_751:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x143e93 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5d0a55 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e943e93; op2val:0x15d0a55;
   valaddr_reg:x11; val_offset:1458*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1458*FLEN/8, x12, x8, x9)

inst_752:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x143e93 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5d0a55 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e943e93; op2val:0x15d0a55;
   valaddr_reg:x11; val_offset:1460*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1460*FLEN/8, x12, x8, x9)

inst_753:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x143e93 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5d0a55 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e943e93; op2val:0x15d0a55;
   valaddr_reg:x11; val_offset:1462*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1462*FLEN/8, x12, x8, x9)

inst_754:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x143e93 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5d0a55 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e943e93; op2val:0x15d0a55;
   valaddr_reg:x11; val_offset:1464*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1464*FLEN/8, x12, x8, x9)

inst_755:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16d6ca and fs2 == 0 and fe2 == 0x02 and fm2 == 0x593cfe and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e96d6ca; op2val:0x1593cfe;
   valaddr_reg:x11; val_offset:1466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1466*FLEN/8, x12, x8, x9)

inst_756:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16d6ca and fs2 == 0 and fe2 == 0x02 and fm2 == 0x593cfe and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e96d6ca; op2val:0x1593cfe;
   valaddr_reg:x11; val_offset:1468*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1468*FLEN/8, x12, x8, x9)

inst_757:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16d6ca and fs2 == 0 and fe2 == 0x02 and fm2 == 0x593cfe and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e96d6ca; op2val:0x1593cfe;
   valaddr_reg:x11; val_offset:1470*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1470*FLEN/8, x12, x8, x9)

inst_758:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16d6ca and fs2 == 0 and fe2 == 0x02 and fm2 == 0x593cfe and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e96d6ca; op2val:0x1593cfe;
   valaddr_reg:x11; val_offset:1472*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1472*FLEN/8, x12, x8, x9)

inst_759:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16d6ca and fs2 == 0 and fe2 == 0x02 and fm2 == 0x593cfe and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e96d6ca; op2val:0x1593cfe;
   valaddr_reg:x11; val_offset:1474*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1474*FLEN/8, x12, x8, x9)

inst_760:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1bbd92 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x5266ba and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1bbd92; op2val:0x2d266ba;
   valaddr_reg:x11; val_offset:1476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1476*FLEN/8, x12, x8, x9)

inst_761:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1bbd92 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x5266ba and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1bbd92; op2val:0x2d266ba;
   valaddr_reg:x11; val_offset:1478*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1478*FLEN/8, x12, x8, x9)

inst_762:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1bbd92 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x5266ba and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1bbd92; op2val:0x2d266ba;
   valaddr_reg:x11; val_offset:1480*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1480*FLEN/8, x12, x8, x9)

inst_763:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1bbd92 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x5266ba and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1bbd92; op2val:0x2d266ba;
   valaddr_reg:x11; val_offset:1482*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1482*FLEN/8, x12, x8, x9)

inst_764:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1bbd92 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x5266ba and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d1bbd92; op2val:0x2d266ba;
   valaddr_reg:x11; val_offset:1484*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1484*FLEN/8, x12, x8, x9)

inst_765:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x023f0b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7b95c1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e823f0b; op2val:0x17b95c1;
   valaddr_reg:x11; val_offset:1486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1486*FLEN/8, x12, x8, x9)

inst_766:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x023f0b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7b95c1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e823f0b; op2val:0x17b95c1;
   valaddr_reg:x11; val_offset:1488*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1488*FLEN/8, x12, x8, x9)

inst_767:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x023f0b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7b95c1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e823f0b; op2val:0x17b95c1;
   valaddr_reg:x11; val_offset:1490*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1490*FLEN/8, x12, x8, x9)

inst_768:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x023f0b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7b95c1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e823f0b; op2val:0x17b95c1;
   valaddr_reg:x11; val_offset:1492*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1492*FLEN/8, x12, x8, x9)

inst_769:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x023f0b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7b95c1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e823f0b; op2val:0x17b95c1;
   valaddr_reg:x11; val_offset:1494*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1494*FLEN/8, x12, x8, x9)

inst_770:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x741ccd and fs2 == 0 and fe2 == 0x03 and fm2 == 0x063bb3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e741ccd; op2val:0x1863bb3;
   valaddr_reg:x11; val_offset:1496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1496*FLEN/8, x12, x8, x9)

inst_771:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x741ccd and fs2 == 0 and fe2 == 0x03 and fm2 == 0x063bb3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e741ccd; op2val:0x1863bb3;
   valaddr_reg:x11; val_offset:1498*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1498*FLEN/8, x12, x8, x9)

inst_772:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x741ccd and fs2 == 0 and fe2 == 0x03 and fm2 == 0x063bb3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e741ccd; op2val:0x1863bb3;
   valaddr_reg:x11; val_offset:1500*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1500*FLEN/8, x12, x8, x9)

inst_773:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x741ccd and fs2 == 0 and fe2 == 0x03 and fm2 == 0x063bb3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e741ccd; op2val:0x1863bb3;
   valaddr_reg:x11; val_offset:1502*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1502*FLEN/8, x12, x8, x9)

inst_774:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x741ccd and fs2 == 0 and fe2 == 0x03 and fm2 == 0x063bb3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e741ccd; op2val:0x1863bb3;
   valaddr_reg:x11; val_offset:1504*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1504*FLEN/8, x12, x8, x9)

inst_775:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x466679 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25293c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f466679; op2val:0xa5293c;
   valaddr_reg:x11; val_offset:1506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1506*FLEN/8, x12, x8, x9)

inst_776:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x466679 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25293c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f466679; op2val:0xa5293c;
   valaddr_reg:x11; val_offset:1508*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1508*FLEN/8, x12, x8, x9)

inst_777:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x466679 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25293c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f466679; op2val:0xa5293c;
   valaddr_reg:x11; val_offset:1510*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1510*FLEN/8, x12, x8, x9)

inst_778:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x466679 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25293c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f466679; op2val:0xa5293c;
   valaddr_reg:x11; val_offset:1512*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1512*FLEN/8, x12, x8, x9)

inst_779:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x466679 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25293c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f466679; op2val:0xa5293c;
   valaddr_reg:x11; val_offset:1514*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1514*FLEN/8, x12, x8, x9)

inst_780:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18e716 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x564e67 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f18e716; op2val:0xd64e67;
   valaddr_reg:x11; val_offset:1516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1516*FLEN/8, x12, x8, x9)

inst_781:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18e716 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x564e67 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f18e716; op2val:0xd64e67;
   valaddr_reg:x11; val_offset:1518*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1518*FLEN/8, x12, x8, x9)

inst_782:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18e716 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x564e67 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f18e716; op2val:0xd64e67;
   valaddr_reg:x11; val_offset:1520*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1520*FLEN/8, x12, x8, x9)

inst_783:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18e716 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x564e67 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f18e716; op2val:0xd64e67;
   valaddr_reg:x11; val_offset:1522*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1522*FLEN/8, x12, x8, x9)

inst_784:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18e716 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x564e67 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f18e716; op2val:0xd64e67;
   valaddr_reg:x11; val_offset:1524*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1524*FLEN/8, x12, x8, x9)

inst_785:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x3a7fa0 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x2fb37d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3cba7fa0; op2val:0x32fb37d;
   valaddr_reg:x11; val_offset:1526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1526*FLEN/8, x12, x8, x9)

inst_786:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x3a7fa0 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x2fb37d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3cba7fa0; op2val:0x32fb37d;
   valaddr_reg:x11; val_offset:1528*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1528*FLEN/8, x12, x8, x9)

inst_787:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x3a7fa0 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x2fb37d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3cba7fa0; op2val:0x32fb37d;
   valaddr_reg:x11; val_offset:1530*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1530*FLEN/8, x12, x8, x9)

inst_788:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x3a7fa0 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x2fb37d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3cba7fa0; op2val:0x32fb37d;
   valaddr_reg:x11; val_offset:1532*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1532*FLEN/8, x12, x8, x9)

inst_789:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x3a7fa0 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x2fb37d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3cba7fa0; op2val:0x32fb37d;
   valaddr_reg:x11; val_offset:1534*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1534*FLEN/8, x12, x8, x9)

inst_790:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d0767 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0180c4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7d0767; op2val:0x8180c4;
   valaddr_reg:x11; val_offset:1536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1536*FLEN/8, x12, x8, x9)

inst_791:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d0767 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0180c4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7d0767; op2val:0x8180c4;
   valaddr_reg:x11; val_offset:1538*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1538*FLEN/8, x12, x8, x9)

inst_792:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d0767 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0180c4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7d0767; op2val:0x8180c4;
   valaddr_reg:x11; val_offset:1540*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1540*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_6)

inst_793:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d0767 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0180c4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7d0767; op2val:0x8180c4;
   valaddr_reg:x11; val_offset:1542*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1542*FLEN/8, x12, x8, x9)

inst_794:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d0767 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0180c4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7d0767; op2val:0x8180c4;
   valaddr_reg:x11; val_offset:1544*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1544*FLEN/8, x12, x8, x9)

inst_795:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x13ac3f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5de55c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e93ac3f; op2val:0x15de55c;
   valaddr_reg:x11; val_offset:1546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1546*FLEN/8, x12, x8, x9)

inst_796:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x13ac3f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5de55c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e93ac3f; op2val:0x15de55c;
   valaddr_reg:x11; val_offset:1548*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1548*FLEN/8, x12, x8, x9)

inst_797:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x13ac3f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5de55c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e93ac3f; op2val:0x15de55c;
   valaddr_reg:x11; val_offset:1550*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1550*FLEN/8, x12, x8, x9)

inst_798:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x13ac3f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5de55c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e93ac3f; op2val:0x15de55c;
   valaddr_reg:x11; val_offset:1552*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1552*FLEN/8, x12, x8, x9)

inst_799:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x13ac3f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5de55c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e93ac3f; op2val:0x15de55c;
   valaddr_reg:x11; val_offset:1554*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1554*FLEN/8, x12, x8, x9)

inst_800:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x33280d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x36e6cf and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb3280d; op2val:0x136e6cf;
   valaddr_reg:x11; val_offset:1556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1556*FLEN/8, x12, x8, x9)

inst_801:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x33280d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x36e6cf and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb3280d; op2val:0x136e6cf;
   valaddr_reg:x11; val_offset:1558*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1558*FLEN/8, x12, x8, x9)

inst_802:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x33280d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x36e6cf and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb3280d; op2val:0x136e6cf;
   valaddr_reg:x11; val_offset:1560*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1560*FLEN/8, x12, x8, x9)

inst_803:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x33280d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x36e6cf and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb3280d; op2val:0x136e6cf;
   valaddr_reg:x11; val_offset:1562*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1562*FLEN/8, x12, x8, x9)

inst_804:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x33280d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x36e6cf and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb3280d; op2val:0x136e6cf;
   valaddr_reg:x11; val_offset:1564*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1564*FLEN/8, x12, x8, x9)

inst_805:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b9ce2 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x023b5a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b9ce2; op2val:0x823b5a;
   valaddr_reg:x11; val_offset:1566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1566*FLEN/8, x12, x8, x9)

inst_806:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b9ce2 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x023b5a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b9ce2; op2val:0x823b5a;
   valaddr_reg:x11; val_offset:1568*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1568*FLEN/8, x12, x8, x9)

inst_807:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b9ce2 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x023b5a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b9ce2; op2val:0x823b5a;
   valaddr_reg:x11; val_offset:1570*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1570*FLEN/8, x12, x8, x9)

inst_808:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b9ce2 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x023b5a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b9ce2; op2val:0x823b5a;
   valaddr_reg:x11; val_offset:1572*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1572*FLEN/8, x12, x8, x9)

inst_809:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b9ce2 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x023b5a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7b9ce2; op2val:0x823b5a;
   valaddr_reg:x11; val_offset:1574*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1574*FLEN/8, x12, x8, x9)

inst_810:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a83be and fs2 == 0 and fe2 == 0x02 and fm2 == 0x6c912f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8a83be; op2val:0x16c912f;
   valaddr_reg:x11; val_offset:1576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1576*FLEN/8, x12, x8, x9)

inst_811:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a83be and fs2 == 0 and fe2 == 0x02 and fm2 == 0x6c912f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8a83be; op2val:0x16c912f;
   valaddr_reg:x11; val_offset:1578*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1578*FLEN/8, x12, x8, x9)

inst_812:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a83be and fs2 == 0 and fe2 == 0x02 and fm2 == 0x6c912f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8a83be; op2val:0x16c912f;
   valaddr_reg:x11; val_offset:1580*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1580*FLEN/8, x12, x8, x9)

inst_813:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a83be and fs2 == 0 and fe2 == 0x02 and fm2 == 0x6c912f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8a83be; op2val:0x16c912f;
   valaddr_reg:x11; val_offset:1582*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1582*FLEN/8, x12, x8, x9)

inst_814:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a83be and fs2 == 0 and fe2 == 0x02 and fm2 == 0x6c912f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8a83be; op2val:0x16c912f;
   valaddr_reg:x11; val_offset:1584*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1584*FLEN/8, x12, x8, x9)

inst_815:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41e5ff and fs2 == 0 and fe2 == 0x04 and fm2 == 0x28fee7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc1e5ff; op2val:0x228fee7;
   valaddr_reg:x11; val_offset:1586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1586*FLEN/8, x12, x8, x9)

inst_816:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41e5ff and fs2 == 0 and fe2 == 0x04 and fm2 == 0x28fee7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc1e5ff; op2val:0x228fee7;
   valaddr_reg:x11; val_offset:1588*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1588*FLEN/8, x12, x8, x9)

inst_817:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41e5ff and fs2 == 0 and fe2 == 0x04 and fm2 == 0x28fee7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc1e5ff; op2val:0x228fee7;
   valaddr_reg:x11; val_offset:1590*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1590*FLEN/8, x12, x8, x9)

inst_818:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41e5ff and fs2 == 0 and fe2 == 0x04 and fm2 == 0x28fee7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc1e5ff; op2val:0x228fee7;
   valaddr_reg:x11; val_offset:1592*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1592*FLEN/8, x12, x8, x9)

inst_819:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41e5ff and fs2 == 0 and fe2 == 0x04 and fm2 == 0x28fee7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc1e5ff; op2val:0x228fee7;
   valaddr_reg:x11; val_offset:1594*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1594*FLEN/8, x12, x8, x9)

inst_820:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66486c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e4b68 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f66486c; op2val:0x8e4b68;
   valaddr_reg:x11; val_offset:1596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1596*FLEN/8, x12, x8, x9)

inst_821:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66486c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e4b68 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f66486c; op2val:0x8e4b68;
   valaddr_reg:x11; val_offset:1598*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1598*FLEN/8, x12, x8, x9)

inst_822:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66486c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e4b68 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f66486c; op2val:0x8e4b68;
   valaddr_reg:x11; val_offset:1600*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1600*FLEN/8, x12, x8, x9)

inst_823:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66486c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e4b68 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f66486c; op2val:0x8e4b68;
   valaddr_reg:x11; val_offset:1602*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1602*FLEN/8, x12, x8, x9)

inst_824:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66486c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e4b68 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f66486c; op2val:0x8e4b68;
   valaddr_reg:x11; val_offset:1604*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1604*FLEN/8, x12, x8, x9)

inst_825:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e975b and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0956ea and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e6e975b; op2val:0x18956ea;
   valaddr_reg:x11; val_offset:1606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1606*FLEN/8, x12, x8, x9)

inst_826:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e975b and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0956ea and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e6e975b; op2val:0x18956ea;
   valaddr_reg:x11; val_offset:1608*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1608*FLEN/8, x12, x8, x9)

inst_827:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e975b and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0956ea and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e6e975b; op2val:0x18956ea;
   valaddr_reg:x11; val_offset:1610*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1610*FLEN/8, x12, x8, x9)

inst_828:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e975b and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0956ea and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e6e975b; op2val:0x18956ea;
   valaddr_reg:x11; val_offset:1612*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1612*FLEN/8, x12, x8, x9)

inst_829:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e975b and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0956ea and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e6e975b; op2val:0x18956ea;
   valaddr_reg:x11; val_offset:1614*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1614*FLEN/8, x12, x8, x9)

inst_830:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x02f23a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7a3d7e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e82f23a; op2val:0x17a3d7e;
   valaddr_reg:x11; val_offset:1616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1616*FLEN/8, x12, x8, x9)

inst_831:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x02f23a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7a3d7e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e82f23a; op2val:0x17a3d7e;
   valaddr_reg:x11; val_offset:1618*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1618*FLEN/8, x12, x8, x9)

inst_832:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x02f23a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7a3d7e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e82f23a; op2val:0x17a3d7e;
   valaddr_reg:x11; val_offset:1620*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1620*FLEN/8, x12, x8, x9)

inst_833:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x02f23a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7a3d7e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e82f23a; op2val:0x17a3d7e;
   valaddr_reg:x11; val_offset:1622*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1622*FLEN/8, x12, x8, x9)

inst_834:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x02f23a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7a3d7e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e82f23a; op2val:0x17a3d7e;
   valaddr_reg:x11; val_offset:1624*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1624*FLEN/8, x12, x8, x9)

inst_835:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4efa38 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1e511a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4efa38; op2val:0x9e511a;
   valaddr_reg:x11; val_offset:1626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1626*FLEN/8, x12, x8, x9)

inst_836:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4efa38 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1e511a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4efa38; op2val:0x9e511a;
   valaddr_reg:x11; val_offset:1628*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1628*FLEN/8, x12, x8, x9)

inst_837:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4efa38 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1e511a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4efa38; op2val:0x9e511a;
   valaddr_reg:x11; val_offset:1630*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1630*FLEN/8, x12, x8, x9)

inst_838:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4efa38 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1e511a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4efa38; op2val:0x9e511a;
   valaddr_reg:x11; val_offset:1632*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1632*FLEN/8, x12, x8, x9)

inst_839:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4efa38 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1e511a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4efa38; op2val:0x9e511a;
   valaddr_reg:x11; val_offset:1634*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1634*FLEN/8, x12, x8, x9)

inst_840:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cb458 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1aa801 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5cb458; op2val:0x9aa801;
   valaddr_reg:x11; val_offset:1636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1636*FLEN/8, x12, x8, x9)

inst_841:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cb458 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1aa801 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5cb458; op2val:0x9aa801;
   valaddr_reg:x11; val_offset:1638*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1638*FLEN/8, x12, x8, x9)

inst_842:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cb458 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1aa801 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5cb458; op2val:0x9aa801;
   valaddr_reg:x11; val_offset:1640*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1640*FLEN/8, x12, x8, x9)

inst_843:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cb458 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1aa801 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5cb458; op2val:0x9aa801;
   valaddr_reg:x11; val_offset:1642*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1642*FLEN/8, x12, x8, x9)

inst_844:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cb458 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1aa801 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5cb458; op2val:0x9aa801;
   valaddr_reg:x11; val_offset:1644*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1644*FLEN/8, x12, x8, x9)

inst_845:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10cb4b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6bbcac and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f10cb4b; op2val:0xebbcac;
   valaddr_reg:x11; val_offset:1646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1646*FLEN/8, x12, x8, x9)

inst_846:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10cb4b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6bbcac and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f10cb4b; op2val:0xebbcac;
   valaddr_reg:x11; val_offset:1648*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1648*FLEN/8, x12, x8, x9)

inst_847:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10cb4b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6bbcac and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f10cb4b; op2val:0xebbcac;
   valaddr_reg:x11; val_offset:1650*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1650*FLEN/8, x12, x8, x9)

inst_848:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10cb4b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6bbcac and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f10cb4b; op2val:0xebbcac;
   valaddr_reg:x11; val_offset:1652*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1652*FLEN/8, x12, x8, x9)

inst_849:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10cb4b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6bbcac and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f10cb4b; op2val:0xebbcac;
   valaddr_reg:x11; val_offset:1654*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1654*FLEN/8, x12, x8, x9)

inst_850:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e28d8 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x19a4b0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ede28d8; op2val:0x119a4b0;
   valaddr_reg:x11; val_offset:1656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1656*FLEN/8, x12, x8, x9)

inst_851:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e28d8 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x19a4b0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ede28d8; op2val:0x119a4b0;
   valaddr_reg:x11; val_offset:1658*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1658*FLEN/8, x12, x8, x9)

inst_852:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e28d8 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x19a4b0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ede28d8; op2val:0x119a4b0;
   valaddr_reg:x11; val_offset:1660*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1660*FLEN/8, x12, x8, x9)

inst_853:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e28d8 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x19a4b0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ede28d8; op2val:0x119a4b0;
   valaddr_reg:x11; val_offset:1662*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1662*FLEN/8, x12, x8, x9)

inst_854:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e28d8 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x19a4b0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ede28d8; op2val:0x119a4b0;
   valaddr_reg:x11; val_offset:1664*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1664*FLEN/8, x12, x8, x9)

inst_855:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b8548 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x27b6df and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4b8548; op2val:0xa7b6df;
   valaddr_reg:x11; val_offset:1666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1666*FLEN/8, x12, x8, x9)

inst_856:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b8548 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x27b6df and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4b8548; op2val:0xa7b6df;
   valaddr_reg:x11; val_offset:1668*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1668*FLEN/8, x12, x8, x9)

inst_857:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b8548 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x27b6df and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4b8548; op2val:0xa7b6df;
   valaddr_reg:x11; val_offset:1670*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1670*FLEN/8, x12, x8, x9)

inst_858:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b8548 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x27b6df and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4b8548; op2val:0xa7b6df;
   valaddr_reg:x11; val_offset:1672*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1672*FLEN/8, x12, x8, x9)

inst_859:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b8548 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x27b6df and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4b8548; op2val:0xa7b6df;
   valaddr_reg:x11; val_offset:1674*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1674*FLEN/8, x12, x8, x9)

inst_860:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d5b51 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0fce59 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6d5b51; op2val:0x8fce59;
   valaddr_reg:x11; val_offset:1676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1676*FLEN/8, x12, x8, x9)

inst_861:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d5b51 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0fce59 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6d5b51; op2val:0x8fce59;
   valaddr_reg:x11; val_offset:1678*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1678*FLEN/8, x12, x8, x9)

inst_862:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d5b51 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0fce59 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6d5b51; op2val:0x8fce59;
   valaddr_reg:x11; val_offset:1680*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1680*FLEN/8, x12, x8, x9)

inst_863:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d5b51 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0fce59 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6d5b51; op2val:0x8fce59;
   valaddr_reg:x11; val_offset:1682*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1682*FLEN/8, x12, x8, x9)

inst_864:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d5b51 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0fce59 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6d5b51; op2val:0x8fce59;
   valaddr_reg:x11; val_offset:1684*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1684*FLEN/8, x12, x8, x9)

inst_865:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03bb4f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x018e68 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f03bb4f; op2val:0x1018e68;
   valaddr_reg:x11; val_offset:1686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1686*FLEN/8, x12, x8, x9)

inst_866:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03bb4f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x018e68 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f03bb4f; op2val:0x1018e68;
   valaddr_reg:x11; val_offset:1688*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1688*FLEN/8, x12, x8, x9)

inst_867:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03bb4f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x018e68 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f03bb4f; op2val:0x1018e68;
   valaddr_reg:x11; val_offset:1690*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1690*FLEN/8, x12, x8, x9)

inst_868:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03bb4f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x018e68 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f03bb4f; op2val:0x1018e68;
   valaddr_reg:x11; val_offset:1692*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1692*FLEN/8, x12, x8, x9)

inst_869:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03bb4f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x018e68 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f03bb4f; op2val:0x1018e68;
   valaddr_reg:x11; val_offset:1694*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1694*FLEN/8, x12, x8, x9)

inst_870:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ee5ec and fs2 == 0 and fe2 == 0x02 and fm2 == 0x432944 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eaee5ec; op2val:0x1432944;
   valaddr_reg:x11; val_offset:1696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1696*FLEN/8, x12, x8, x9)

inst_871:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ee5ec and fs2 == 0 and fe2 == 0x02 and fm2 == 0x432944 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eaee5ec; op2val:0x1432944;
   valaddr_reg:x11; val_offset:1698*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1698*FLEN/8, x12, x8, x9)

inst_872:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ee5ec and fs2 == 0 and fe2 == 0x02 and fm2 == 0x432944 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eaee5ec; op2val:0x1432944;
   valaddr_reg:x11; val_offset:1700*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1700*FLEN/8, x12, x8, x9)

inst_873:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ee5ec and fs2 == 0 and fe2 == 0x02 and fm2 == 0x432944 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eaee5ec; op2val:0x1432944;
   valaddr_reg:x11; val_offset:1702*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1702*FLEN/8, x12, x8, x9)

inst_874:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ee5ec and fs2 == 0 and fe2 == 0x02 and fm2 == 0x432944 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eaee5ec; op2val:0x1432944;
   valaddr_reg:x11; val_offset:1704*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1704*FLEN/8, x12, x8, x9)

inst_875:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d702 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x017330 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f03d702; op2val:0x1017330;
   valaddr_reg:x11; val_offset:1706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1706*FLEN/8, x12, x8, x9)

inst_876:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d702 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x017330 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f03d702; op2val:0x1017330;
   valaddr_reg:x11; val_offset:1708*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1708*FLEN/8, x12, x8, x9)

inst_877:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d702 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x017330 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f03d702; op2val:0x1017330;
   valaddr_reg:x11; val_offset:1710*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1710*FLEN/8, x12, x8, x9)

inst_878:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d702 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x017330 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f03d702; op2val:0x1017330;
   valaddr_reg:x11; val_offset:1712*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1712*FLEN/8, x12, x8, x9)

inst_879:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d702 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x017330 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f03d702; op2val:0x1017330;
   valaddr_reg:x11; val_offset:1714*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1714*FLEN/8, x12, x8, x9)

inst_880:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2a449b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4877e1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2a449b; op2val:0xc877e1;
   valaddr_reg:x11; val_offset:1716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1716*FLEN/8, x12, x8, x9)

inst_881:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2a449b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4877e1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2a449b; op2val:0xc877e1;
   valaddr_reg:x11; val_offset:1718*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1718*FLEN/8, x12, x8, x9)

inst_882:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2a449b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4877e1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2a449b; op2val:0xc877e1;
   valaddr_reg:x11; val_offset:1720*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1720*FLEN/8, x12, x8, x9)

inst_883:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2a449b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4877e1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2a449b; op2val:0xc877e1;
   valaddr_reg:x11; val_offset:1722*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1722*FLEN/8, x12, x8, x9)

inst_884:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2a449b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4877e1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2a449b; op2val:0xc877e1;
   valaddr_reg:x11; val_offset:1724*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1724*FLEN/8, x12, x8, x9)

inst_885:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e83cc and fs2 == 0 and fe2 == 0x02 and fm2 == 0x061c82 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efe83cc; op2val:0x1061c82;
   valaddr_reg:x11; val_offset:1726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1726*FLEN/8, x12, x8, x9)

inst_886:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e83cc and fs2 == 0 and fe2 == 0x02 and fm2 == 0x061c82 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efe83cc; op2val:0x1061c82;
   valaddr_reg:x11; val_offset:1728*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1728*FLEN/8, x12, x8, x9)

inst_887:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e83cc and fs2 == 0 and fe2 == 0x02 and fm2 == 0x061c82 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efe83cc; op2val:0x1061c82;
   valaddr_reg:x11; val_offset:1730*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1730*FLEN/8, x12, x8, x9)

inst_888:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e83cc and fs2 == 0 and fe2 == 0x02 and fm2 == 0x061c82 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efe83cc; op2val:0x1061c82;
   valaddr_reg:x11; val_offset:1732*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1732*FLEN/8, x12, x8, x9)

inst_889:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e83cc and fs2 == 0 and fe2 == 0x02 and fm2 == 0x061c82 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3efe83cc; op2val:0x1061c82;
   valaddr_reg:x11; val_offset:1734*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1734*FLEN/8, x12, x8, x9)

inst_890:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b91aa and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10e5bb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6b91aa; op2val:0x90e5bb;
   valaddr_reg:x11; val_offset:1736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1736*FLEN/8, x12, x8, x9)

inst_891:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b91aa and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10e5bb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6b91aa; op2val:0x90e5bb;
   valaddr_reg:x11; val_offset:1738*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1738*FLEN/8, x12, x8, x9)

inst_892:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b91aa and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10e5bb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6b91aa; op2val:0x90e5bb;
   valaddr_reg:x11; val_offset:1740*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1740*FLEN/8, x12, x8, x9)

inst_893:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b91aa and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10e5bb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6b91aa; op2val:0x90e5bb;
   valaddr_reg:x11; val_offset:1742*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1742*FLEN/8, x12, x8, x9)

inst_894:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b91aa and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10e5bb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f6b91aa; op2val:0x90e5bb;
   valaddr_reg:x11; val_offset:1744*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1744*FLEN/8, x12, x8, x9)

inst_895:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53886b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x215ca0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f53886b; op2val:0xa15ca0;
   valaddr_reg:x11; val_offset:1746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1746*FLEN/8, x12, x8, x9)

inst_896:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53886b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x215ca0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f53886b; op2val:0xa15ca0;
   valaddr_reg:x11; val_offset:1748*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1748*FLEN/8, x12, x8, x9)

inst_897:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53886b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x215ca0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f53886b; op2val:0xa15ca0;
   valaddr_reg:x11; val_offset:1750*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1750*FLEN/8, x12, x8, x9)

inst_898:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53886b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x215ca0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f53886b; op2val:0xa15ca0;
   valaddr_reg:x11; val_offset:1752*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1752*FLEN/8, x12, x8, x9)

inst_899:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53886b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x215ca0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f53886b; op2val:0xa15ca0;
   valaddr_reg:x11; val_offset:1754*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1754*FLEN/8, x12, x8, x9)

inst_900:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ccc8b and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1a970f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e5ccc8b; op2val:0x19a970f;
   valaddr_reg:x11; val_offset:1756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1756*FLEN/8, x12, x8, x9)

inst_901:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ccc8b and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1a970f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e5ccc8b; op2val:0x19a970f;
   valaddr_reg:x11; val_offset:1758*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1758*FLEN/8, x12, x8, x9)

inst_902:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ccc8b and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1a970f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e5ccc8b; op2val:0x19a970f;
   valaddr_reg:x11; val_offset:1760*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1760*FLEN/8, x12, x8, x9)

inst_903:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ccc8b and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1a970f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e5ccc8b; op2val:0x19a970f;
   valaddr_reg:x11; val_offset:1762*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1762*FLEN/8, x12, x8, x9)

inst_904:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ccc8b and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1a970f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e5ccc8b; op2val:0x19a970f;
   valaddr_reg:x11; val_offset:1764*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1764*FLEN/8, x12, x8, x9)

inst_905:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26674b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x4d1fb8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea6674b; op2val:0x14d1fb8;
   valaddr_reg:x11; val_offset:1766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1766*FLEN/8, x12, x8, x9)

inst_906:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26674b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x4d1fb8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea6674b; op2val:0x14d1fb8;
   valaddr_reg:x11; val_offset:1768*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1768*FLEN/8, x12, x8, x9)

inst_907:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26674b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x4d1fb8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea6674b; op2val:0x14d1fb8;
   valaddr_reg:x11; val_offset:1770*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1770*FLEN/8, x12, x8, x9)

inst_908:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26674b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x4d1fb8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea6674b; op2val:0x14d1fb8;
   valaddr_reg:x11; val_offset:1772*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1772*FLEN/8, x12, x8, x9)

inst_909:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26674b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x4d1fb8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea6674b; op2val:0x14d1fb8;
   valaddr_reg:x11; val_offset:1774*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1774*FLEN/8, x12, x8, x9)

inst_910:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0b3d44 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x752437 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0b3d44; op2val:0x1f52437;
   valaddr_reg:x11; val_offset:1776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1776*FLEN/8, x12, x8, x9)

inst_911:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0b3d44 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x752437 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0b3d44; op2val:0x1f52437;
   valaddr_reg:x11; val_offset:1778*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1778*FLEN/8, x12, x8, x9)

inst_912:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0b3d44 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x752437 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0b3d44; op2val:0x1f52437;
   valaddr_reg:x11; val_offset:1780*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1780*FLEN/8, x12, x8, x9)

inst_913:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0b3d44 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x752437 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0b3d44; op2val:0x1f52437;
   valaddr_reg:x11; val_offset:1782*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1782*FLEN/8, x12, x8, x9)

inst_914:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0b3d44 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x752437 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0b3d44; op2val:0x1f52437;
   valaddr_reg:x11; val_offset:1784*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1784*FLEN/8, x12, x8, x9)

inst_915:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5661cd and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1f37a1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5661cd; op2val:0x9f37a1;
   valaddr_reg:x11; val_offset:1786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1786*FLEN/8, x12, x8, x9)

inst_916:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5661cd and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1f37a1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5661cd; op2val:0x9f37a1;
   valaddr_reg:x11; val_offset:1788*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1788*FLEN/8, x12, x8, x9)

inst_917:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5661cd and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1f37a1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5661cd; op2val:0x9f37a1;
   valaddr_reg:x11; val_offset:1790*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1790*FLEN/8, x12, x8, x9)

inst_918:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5661cd and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1f37a1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5661cd; op2val:0x9f37a1;
   valaddr_reg:x11; val_offset:1792*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1792*FLEN/8, x12, x8, x9)

inst_919:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5661cd and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1f37a1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5661cd; op2val:0x9f37a1;
   valaddr_reg:x11; val_offset:1794*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1794*FLEN/8, x12, x8, x9)

inst_920:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x090c42 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x790fb5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f090c42; op2val:0xf90fb5;
   valaddr_reg:x11; val_offset:1796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1796*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_7)

inst_921:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x090c42 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x790fb5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f090c42; op2val:0xf90fb5;
   valaddr_reg:x11; val_offset:1798*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1798*FLEN/8, x12, x8, x9)

inst_922:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x090c42 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x790fb5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f090c42; op2val:0xf90fb5;
   valaddr_reg:x11; val_offset:1800*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1800*FLEN/8, x12, x8, x9)

inst_923:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x090c42 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x790fb5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f090c42; op2val:0xf90fb5;
   valaddr_reg:x11; val_offset:1802*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1802*FLEN/8, x12, x8, x9)

inst_924:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x090c42 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x790fb5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f090c42; op2val:0xf90fb5;
   valaddr_reg:x11; val_offset:1804*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1804*FLEN/8, x12, x8, x9)

inst_925:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d5668 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06bc0e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7d5668; op2val:0x86bc0e;
   valaddr_reg:x11; val_offset:1806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1806*FLEN/8, x12, x8, x9)

inst_926:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d5668 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06bc0e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7d5668; op2val:0x86bc0e;
   valaddr_reg:x11; val_offset:1808*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1808*FLEN/8, x12, x8, x9)

inst_927:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d5668 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06bc0e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7d5668; op2val:0x86bc0e;
   valaddr_reg:x11; val_offset:1810*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1810*FLEN/8, x12, x8, x9)

inst_928:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d5668 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06bc0e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7d5668; op2val:0x86bc0e;
   valaddr_reg:x11; val_offset:1812*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1812*FLEN/8, x12, x8, x9)

inst_929:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d5668 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06bc0e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7d5668; op2val:0x86bc0e;
   valaddr_reg:x11; val_offset:1814*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1814*FLEN/8, x12, x8, x9)

inst_930:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x07856f and fs2 == 0 and fe2 == 0x05 and fm2 == 0x7bddf5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d07856f; op2val:0x2fbddf5;
   valaddr_reg:x11; val_offset:1816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1816*FLEN/8, x12, x8, x9)

inst_931:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x07856f and fs2 == 0 and fe2 == 0x05 and fm2 == 0x7bddf5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d07856f; op2val:0x2fbddf5;
   valaddr_reg:x11; val_offset:1818*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1818*FLEN/8, x12, x8, x9)

inst_932:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x07856f and fs2 == 0 and fe2 == 0x05 and fm2 == 0x7bddf5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d07856f; op2val:0x2fbddf5;
   valaddr_reg:x11; val_offset:1820*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1820*FLEN/8, x12, x8, x9)

inst_933:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x07856f and fs2 == 0 and fe2 == 0x05 and fm2 == 0x7bddf5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d07856f; op2val:0x2fbddf5;
   valaddr_reg:x11; val_offset:1822*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1822*FLEN/8, x12, x8, x9)

inst_934:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x07856f and fs2 == 0 and fe2 == 0x05 and fm2 == 0x7bddf5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d07856f; op2val:0x2fbddf5;
   valaddr_reg:x11; val_offset:1824*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1824*FLEN/8, x12, x8, x9)

inst_935:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c8b57 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x104cca and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eec8b57; op2val:0x1104cca;
   valaddr_reg:x11; val_offset:1826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1826*FLEN/8, x12, x8, x9)

inst_936:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c8b57 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x104cca and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eec8b57; op2val:0x1104cca;
   valaddr_reg:x11; val_offset:1828*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1828*FLEN/8, x12, x8, x9)

inst_937:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c8b57 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x104cca and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eec8b57; op2val:0x1104cca;
   valaddr_reg:x11; val_offset:1830*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1830*FLEN/8, x12, x8, x9)

inst_938:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c8b57 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x104cca and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eec8b57; op2val:0x1104cca;
   valaddr_reg:x11; val_offset:1832*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1832*FLEN/8, x12, x8, x9)

inst_939:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c8b57 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x104cca and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eec8b57; op2val:0x1104cca;
   valaddr_reg:x11; val_offset:1834*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1834*FLEN/8, x12, x8, x9)

inst_940:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ea4a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6f4ab9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ea4a0; op2val:0xef4ab9;
   valaddr_reg:x11; val_offset:1836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1836*FLEN/8, x12, x8, x9)

inst_941:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ea4a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6f4ab9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ea4a0; op2val:0xef4ab9;
   valaddr_reg:x11; val_offset:1838*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1838*FLEN/8, x12, x8, x9)

inst_942:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ea4a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6f4ab9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ea4a0; op2val:0xef4ab9;
   valaddr_reg:x11; val_offset:1840*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1840*FLEN/8, x12, x8, x9)

inst_943:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ea4a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6f4ab9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ea4a0; op2val:0xef4ab9;
   valaddr_reg:x11; val_offset:1842*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1842*FLEN/8, x12, x8, x9)

inst_944:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ea4a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6f4ab9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ea4a0; op2val:0xef4ab9;
   valaddr_reg:x11; val_offset:1844*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1844*FLEN/8, x12, x8, x9)

inst_945:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x310ab3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x40cc53 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f310ab3; op2val:0xc0cc53;
   valaddr_reg:x11; val_offset:1846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1846*FLEN/8, x12, x8, x9)

inst_946:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x310ab3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x40cc53 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f310ab3; op2val:0xc0cc53;
   valaddr_reg:x11; val_offset:1848*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1848*FLEN/8, x12, x8, x9)

inst_947:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x310ab3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x40cc53 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f310ab3; op2val:0xc0cc53;
   valaddr_reg:x11; val_offset:1850*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1850*FLEN/8, x12, x8, x9)

inst_948:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x310ab3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x40cc53 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f310ab3; op2val:0xc0cc53;
   valaddr_reg:x11; val_offset:1852*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1852*FLEN/8, x12, x8, x9)

inst_949:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x310ab3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x40cc53 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f310ab3; op2val:0xc0cc53;
   valaddr_reg:x11; val_offset:1854*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1854*FLEN/8, x12, x8, x9)

inst_950:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042690 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x012542 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f042690; op2val:0x1012542;
   valaddr_reg:x11; val_offset:1856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1856*FLEN/8, x12, x8, x9)

inst_951:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042690 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x012542 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f042690; op2val:0x1012542;
   valaddr_reg:x11; val_offset:1858*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1858*FLEN/8, x12, x8, x9)

inst_952:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042690 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x012542 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f042690; op2val:0x1012542;
   valaddr_reg:x11; val_offset:1860*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1860*FLEN/8, x12, x8, x9)

inst_953:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042690 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x012542 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f042690; op2val:0x1012542;
   valaddr_reg:x11; val_offset:1862*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1862*FLEN/8, x12, x8, x9)

inst_954:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042690 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x012542 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f042690; op2val:0x1012542;
   valaddr_reg:x11; val_offset:1864*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1864*FLEN/8, x12, x8, x9)

inst_955:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2eb020 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x43655f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3daeb020; op2val:0x243655f;
   valaddr_reg:x11; val_offset:1866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1866*FLEN/8, x12, x8, x9)

inst_956:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2eb020 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x43655f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3daeb020; op2val:0x243655f;
   valaddr_reg:x11; val_offset:1868*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1868*FLEN/8, x12, x8, x9)

inst_957:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2eb020 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x43655f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3daeb020; op2val:0x243655f;
   valaddr_reg:x11; val_offset:1870*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1870*FLEN/8, x12, x8, x9)

inst_958:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2eb020 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x43655f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3daeb020; op2val:0x243655f;
   valaddr_reg:x11; val_offset:1872*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1872*FLEN/8, x12, x8, x9)

inst_959:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2eb020 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x43655f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3daeb020; op2val:0x243655f;
   valaddr_reg:x11; val_offset:1874*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1874*FLEN/8, x12, x8, x9)

inst_960:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x33d83c and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3dcb1c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e33d83c; op2val:0x1bdcb1c;
   valaddr_reg:x11; val_offset:1876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1876*FLEN/8, x12, x8, x9)

inst_961:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x33d83c and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3dcb1c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e33d83c; op2val:0x1bdcb1c;
   valaddr_reg:x11; val_offset:1878*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1878*FLEN/8, x12, x8, x9)

inst_962:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x33d83c and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3dcb1c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e33d83c; op2val:0x1bdcb1c;
   valaddr_reg:x11; val_offset:1880*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1880*FLEN/8, x12, x8, x9)

inst_963:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x33d83c and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3dcb1c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e33d83c; op2val:0x1bdcb1c;
   valaddr_reg:x11; val_offset:1882*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1882*FLEN/8, x12, x8, x9)

inst_964:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x33d83c and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3dcb1c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e33d83c; op2val:0x1bdcb1c;
   valaddr_reg:x11; val_offset:1884*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1884*FLEN/8, x12, x8, x9)

inst_965:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x351715 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3c7cf1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb51715; op2val:0x13c7cf1;
   valaddr_reg:x11; val_offset:1886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1886*FLEN/8, x12, x8, x9)

inst_966:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x351715 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3c7cf1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb51715; op2val:0x13c7cf1;
   valaddr_reg:x11; val_offset:1888*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1888*FLEN/8, x12, x8, x9)

inst_967:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x351715 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3c7cf1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb51715; op2val:0x13c7cf1;
   valaddr_reg:x11; val_offset:1890*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1890*FLEN/8, x12, x8, x9)

inst_968:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x351715 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3c7cf1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb51715; op2val:0x13c7cf1;
   valaddr_reg:x11; val_offset:1892*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1892*FLEN/8, x12, x8, x9)

inst_969:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x351715 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3c7cf1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb51715; op2val:0x13c7cf1;
   valaddr_reg:x11; val_offset:1894*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1894*FLEN/8, x12, x8, x9)

inst_970:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x317451 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x405994 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb17451; op2val:0x1405994;
   valaddr_reg:x11; val_offset:1896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1896*FLEN/8, x12, x8, x9)

inst_971:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x317451 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x405994 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb17451; op2val:0x1405994;
   valaddr_reg:x11; val_offset:1898*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1898*FLEN/8, x12, x8, x9)

inst_972:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x317451 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x405994 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb17451; op2val:0x1405994;
   valaddr_reg:x11; val_offset:1900*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1900*FLEN/8, x12, x8, x9)

inst_973:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x317451 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x405994 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb17451; op2val:0x1405994;
   valaddr_reg:x11; val_offset:1902*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1902*FLEN/8, x12, x8, x9)

inst_974:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x317451 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x405994 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eb17451; op2val:0x1405994;
   valaddr_reg:x11; val_offset:1904*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1904*FLEN/8, x12, x8, x9)

inst_975:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x231e4a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x51414b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e231e4a; op2val:0x1d1414b;
   valaddr_reg:x11; val_offset:1906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1906*FLEN/8, x12, x8, x9)

inst_976:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x231e4a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x51414b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e231e4a; op2val:0x1d1414b;
   valaddr_reg:x11; val_offset:1908*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1908*FLEN/8, x12, x8, x9)

inst_977:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x231e4a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x51414b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e231e4a; op2val:0x1d1414b;
   valaddr_reg:x11; val_offset:1910*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1910*FLEN/8, x12, x8, x9)

inst_978:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x231e4a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x51414b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e231e4a; op2val:0x1d1414b;
   valaddr_reg:x11; val_offset:1912*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1912*FLEN/8, x12, x8, x9)

inst_979:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x231e4a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x51414b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e231e4a; op2val:0x1d1414b;
   valaddr_reg:x11; val_offset:1914*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1914*FLEN/8, x12, x8, x9)

inst_980:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3bbe36 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x35cf0c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ebbbe36; op2val:0x135cf0c;
   valaddr_reg:x11; val_offset:1916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1916*FLEN/8, x12, x8, x9)

inst_981:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3bbe36 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x35cf0c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ebbbe36; op2val:0x135cf0c;
   valaddr_reg:x11; val_offset:1918*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1918*FLEN/8, x12, x8, x9)

inst_982:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3bbe36 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x35cf0c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ebbbe36; op2val:0x135cf0c;
   valaddr_reg:x11; val_offset:1920*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1920*FLEN/8, x12, x8, x9)

inst_983:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3bbe36 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x35cf0c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ebbbe36; op2val:0x135cf0c;
   valaddr_reg:x11; val_offset:1922*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1922*FLEN/8, x12, x8, x9)

inst_984:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3bbe36 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x35cf0c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ebbbe36; op2val:0x135cf0c;
   valaddr_reg:x11; val_offset:1924*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1924*FLEN/8, x12, x8, x9)

inst_985:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7066c3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0dfc18 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef066c3; op2val:0x10dfc18;
   valaddr_reg:x11; val_offset:1926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1926*FLEN/8, x12, x8, x9)

inst_986:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7066c3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0dfc18 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef066c3; op2val:0x10dfc18;
   valaddr_reg:x11; val_offset:1928*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1928*FLEN/8, x12, x8, x9)

inst_987:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7066c3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0dfc18 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef066c3; op2val:0x10dfc18;
   valaddr_reg:x11; val_offset:1930*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1930*FLEN/8, x12, x8, x9)

inst_988:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7066c3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0dfc18 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef066c3; op2val:0x10dfc18;
   valaddr_reg:x11; val_offset:1932*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1932*FLEN/8, x12, x8, x9)

inst_989:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7066c3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0dfc18 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef066c3; op2val:0x10dfc18;
   valaddr_reg:x11; val_offset:1934*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1934*FLEN/8, x12, x8, x9)

inst_990:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4efc82 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x24e7fc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4efc82; op2val:0x1a4e7fc;
   valaddr_reg:x11; val_offset:1936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1936*FLEN/8, x12, x8, x9)

inst_991:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4efc82 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x24e7fc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4efc82; op2val:0x1a4e7fc;
   valaddr_reg:x11; val_offset:1938*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1938*FLEN/8, x12, x8, x9)

inst_992:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4efc82 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x24e7fc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4efc82; op2val:0x1a4e7fc;
   valaddr_reg:x11; val_offset:1940*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1940*FLEN/8, x12, x8, x9)

inst_993:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4efc82 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x24e7fc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4efc82; op2val:0x1a4e7fc;
   valaddr_reg:x11; val_offset:1942*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1942*FLEN/8, x12, x8, x9)

inst_994:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4efc82 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x24e7fc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e4efc82; op2val:0x1a4e7fc;
   valaddr_reg:x11; val_offset:1944*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1944*FLEN/8, x12, x8, x9)

inst_995:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3121b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x40b346 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3121b7; op2val:0xc0b346;
   valaddr_reg:x11; val_offset:1946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1946*FLEN/8, x12, x8, x9)

inst_996:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3121b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x40b346 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3121b7; op2val:0xc0b346;
   valaddr_reg:x11; val_offset:1948*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1948*FLEN/8, x12, x8, x9)

inst_997:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3121b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x40b346 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3121b7; op2val:0xc0b346;
   valaddr_reg:x11; val_offset:1950*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1950*FLEN/8, x12, x8, x9)

inst_998:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3121b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x40b346 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3121b7; op2val:0xc0b346;
   valaddr_reg:x11; val_offset:1952*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1952*FLEN/8, x12, x8, x9)

inst_999:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3121b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x40b346 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3121b7; op2val:0xc0b346;
   valaddr_reg:x11; val_offset:1954*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1954*FLEN/8, x12, x8, x9)

inst_1000:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0adec6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x75cb04 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0adec6; op2val:0xf5cb04;
   valaddr_reg:x11; val_offset:1956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1956*FLEN/8, x12, x8, x9)

inst_1001:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0adec6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x75cb04 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0adec6; op2val:0xf5cb04;
   valaddr_reg:x11; val_offset:1958*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1958*FLEN/8, x12, x8, x9)

inst_1002:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0adec6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x75cb04 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0adec6; op2val:0xf5cb04;
   valaddr_reg:x11; val_offset:1960*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1960*FLEN/8, x12, x8, x9)

inst_1003:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0adec6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x75cb04 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0adec6; op2val:0xf5cb04;
   valaddr_reg:x11; val_offset:1962*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1962*FLEN/8, x12, x8, x9)

inst_1004:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0adec6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x75cb04 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0adec6; op2val:0xf5cb04;
   valaddr_reg:x11; val_offset:1964*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1964*FLEN/8, x12, x8, x9)

inst_1005:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38f6a4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x388a7c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f38f6a4; op2val:0xb88a7c;
   valaddr_reg:x11; val_offset:1966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1966*FLEN/8, x12, x8, x9)

inst_1006:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38f6a4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x388a7c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f38f6a4; op2val:0xb88a7c;
   valaddr_reg:x11; val_offset:1968*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1968*FLEN/8, x12, x8, x9)

inst_1007:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38f6a4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x388a7c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f38f6a4; op2val:0xb88a7c;
   valaddr_reg:x11; val_offset:1970*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1970*FLEN/8, x12, x8, x9)

inst_1008:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38f6a4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x388a7c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f38f6a4; op2val:0xb88a7c;
   valaddr_reg:x11; val_offset:1972*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1972*FLEN/8, x12, x8, x9)

inst_1009:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38f6a4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x388a7c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f38f6a4; op2val:0xb88a7c;
   valaddr_reg:x11; val_offset:1974*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1974*FLEN/8, x12, x8, x9)

inst_1010:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x635631 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1624f8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f635631; op2val:0x9624f8;
   valaddr_reg:x11; val_offset:1976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1976*FLEN/8, x12, x8, x9)

inst_1011:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x635631 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1624f8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f635631; op2val:0x9624f8;
   valaddr_reg:x11; val_offset:1978*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1978*FLEN/8, x12, x8, x9)

inst_1012:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x635631 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1624f8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f635631; op2val:0x9624f8;
   valaddr_reg:x11; val_offset:1980*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1980*FLEN/8, x12, x8, x9)

inst_1013:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x635631 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1624f8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f635631; op2val:0x9624f8;
   valaddr_reg:x11; val_offset:1982*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1982*FLEN/8, x12, x8, x9)

inst_1014:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x635631 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1624f8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f635631; op2val:0x9624f8;
   valaddr_reg:x11; val_offset:1984*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1984*FLEN/8, x12, x8, x9)

inst_1015:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1eebd3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x56c811 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1eebd3; op2val:0xd6c811;
   valaddr_reg:x11; val_offset:1986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1986*FLEN/8, x12, x8, x9)

inst_1016:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1eebd3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x56c811 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1eebd3; op2val:0xd6c811;
   valaddr_reg:x11; val_offset:1988*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1988*FLEN/8, x12, x8, x9)

inst_1017:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1eebd3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x56c811 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1eebd3; op2val:0xd6c811;
   valaddr_reg:x11; val_offset:1990*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 1990*FLEN/8, x12, x8, x9)

inst_1018:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1eebd3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x56c811 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1eebd3; op2val:0xd6c811;
   valaddr_reg:x11; val_offset:1992*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 1992*FLEN/8, x12, x8, x9)

inst_1019:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1eebd3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x56c811 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1eebd3; op2val:0xd6c811;
   valaddr_reg:x11; val_offset:1994*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 1994*FLEN/8, x12, x8, x9)

inst_1020:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e7de4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x439d9f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2e7de4; op2val:0xc39d9f;
   valaddr_reg:x11; val_offset:1996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 1996*FLEN/8, x12, x8, x9)

inst_1021:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e7de4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x439d9f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2e7de4; op2val:0xc39d9f;
   valaddr_reg:x11; val_offset:1998*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 1998*FLEN/8, x12, x8, x9)

inst_1022:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e7de4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x439d9f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2e7de4; op2val:0xc39d9f;
   valaddr_reg:x11; val_offset:2000*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2000*FLEN/8, x12, x8, x9)

inst_1023:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e7de4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x439d9f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2e7de4; op2val:0xc39d9f;
   valaddr_reg:x11; val_offset:2002*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2002*FLEN/8, x12, x8, x9)

inst_1024:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e7de4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x439d9f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2e7de4; op2val:0xc39d9f;
   valaddr_reg:x11; val_offset:2004*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2004*FLEN/8, x12, x8, x9)

inst_1025:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ae921 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x75b8b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ae921; op2val:0xf5b8b2;
   valaddr_reg:x11; val_offset:2006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2006*FLEN/8, x12, x8, x9)

inst_1026:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ae921 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x75b8b2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ae921; op2val:0xf5b8b2;
   valaddr_reg:x11; val_offset:2008*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2008*FLEN/8, x12, x8, x9)

inst_1027:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ae921 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x75b8b2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ae921; op2val:0xf5b8b2;
   valaddr_reg:x11; val_offset:2010*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2010*FLEN/8, x12, x8, x9)

inst_1028:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ae921 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x75b8b2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ae921; op2val:0xf5b8b2;
   valaddr_reg:x11; val_offset:2012*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2012*FLEN/8, x12, x8, x9)

inst_1029:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ae921 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x75b8b2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ae921; op2val:0xf5b8b2;
   valaddr_reg:x11; val_offset:2014*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2014*FLEN/8, x12, x8, x9)

inst_1030:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ed880 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6ef3d5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ed880; op2val:0xeef3d5;
   valaddr_reg:x11; val_offset:2016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2016*FLEN/8, x12, x8, x9)

inst_1031:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ed880 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6ef3d5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ed880; op2val:0xeef3d5;
   valaddr_reg:x11; val_offset:2018*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2018*FLEN/8, x12, x8, x9)

inst_1032:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ed880 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6ef3d5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ed880; op2val:0xeef3d5;
   valaddr_reg:x11; val_offset:2020*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2020*FLEN/8, x12, x8, x9)

inst_1033:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ed880 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6ef3d5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ed880; op2val:0xeef3d5;
   valaddr_reg:x11; val_offset:2022*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2022*FLEN/8, x12, x8, x9)

inst_1034:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ed880 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6ef3d5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ed880; op2val:0xeef3d5;
   valaddr_reg:x11; val_offset:2024*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2024*FLEN/8, x12, x8, x9)

inst_1035:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x57ea00 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x1e166b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd7ea00; op2val:0x21e166b;
   valaddr_reg:x11; val_offset:2026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2026*FLEN/8, x12, x8, x9)

inst_1036:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x57ea00 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x1e166b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd7ea00; op2val:0x21e166b;
   valaddr_reg:x11; val_offset:2028*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2028*FLEN/8, x12, x8, x9)

inst_1037:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x57ea00 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x1e166b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd7ea00; op2val:0x21e166b;
   valaddr_reg:x11; val_offset:2030*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2030*FLEN/8, x12, x8, x9)

inst_1038:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x57ea00 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x1e166b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd7ea00; op2val:0x21e166b;
   valaddr_reg:x11; val_offset:2032*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2032*FLEN/8, x12, x8, x9)

inst_1039:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x57ea00 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x1e166b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dd7ea00; op2val:0x21e166b;
   valaddr_reg:x11; val_offset:2034*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2034*FLEN/8, x12, x8, x9)

inst_1040:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ed951 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6ef276 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ed951; op2val:0xeef276;
   valaddr_reg:x11; val_offset:2036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2036*FLEN/8, x12, x8, x9)

inst_1041:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ed951 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6ef276 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ed951; op2val:0xeef276;
   valaddr_reg:x11; val_offset:2038*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2038*FLEN/8, x12, x8, x9)

inst_1042:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ed951 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6ef276 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ed951; op2val:0xeef276;
   valaddr_reg:x11; val_offset:2040*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2040*FLEN/8, x12, x8, x9)

inst_1043:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ed951 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6ef276 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ed951; op2val:0xeef276;
   valaddr_reg:x11; val_offset:2042*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2042*FLEN/8, x12, x8, x9)

inst_1044:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ed951 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6ef276 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ed951; op2val:0xeef276;
   valaddr_reg:x11; val_offset:2044*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2044*FLEN/8, x12, x8, x9)

inst_1045:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1017be and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6ce26b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d9017be; op2val:0x26ce26b;
   valaddr_reg:x11; val_offset:2046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2046*FLEN/8, x12, x8, x9)

inst_1046:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1017be and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6ce26b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d9017be; op2val:0x26ce26b;
   valaddr_reg:x11; val_offset:2048*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2048*FLEN/8, x12, x8, x9)

inst_1047:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1017be and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6ce26b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d9017be; op2val:0x26ce26b;
   valaddr_reg:x11; val_offset:2050*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2050*FLEN/8, x12, x8, x9)

inst_1048:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1017be and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6ce26b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d9017be; op2val:0x26ce26b;
   valaddr_reg:x11; val_offset:2052*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2052*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_8)

inst_1049:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1017be and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6ce26b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d9017be; op2val:0x26ce26b;
   valaddr_reg:x11; val_offset:2054*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2054*FLEN/8, x12, x8, x9)

inst_1050:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66839a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x19ff70 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f66839a; op2val:0x99ff70;
   valaddr_reg:x11; val_offset:2056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2056*FLEN/8, x12, x8, x9)

inst_1051:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66839a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x19ff70 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f66839a; op2val:0x99ff70;
   valaddr_reg:x11; val_offset:2058*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2058*FLEN/8, x12, x8, x9)

inst_1052:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66839a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x19ff70 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f66839a; op2val:0x99ff70;
   valaddr_reg:x11; val_offset:2060*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2060*FLEN/8, x12, x8, x9)

inst_1053:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66839a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x19ff70 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f66839a; op2val:0x99ff70;
   valaddr_reg:x11; val_offset:2062*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2062*FLEN/8, x12, x8, x9)

inst_1054:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66839a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x19ff70 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f66839a; op2val:0x99ff70;
   valaddr_reg:x11; val_offset:2064*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2064*FLEN/8, x12, x8, x9)

inst_1055:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f79e6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b18f8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4f79e6; op2val:0xab18f8;
   valaddr_reg:x11; val_offset:2066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2066*FLEN/8, x12, x8, x9)

inst_1056:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f79e6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b18f8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4f79e6; op2val:0xab18f8;
   valaddr_reg:x11; val_offset:2068*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2068*FLEN/8, x12, x8, x9)

inst_1057:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f79e6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b18f8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4f79e6; op2val:0xab18f8;
   valaddr_reg:x11; val_offset:2070*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2070*FLEN/8, x12, x8, x9)

inst_1058:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f79e6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b18f8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4f79e6; op2val:0xab18f8;
   valaddr_reg:x11; val_offset:2072*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2072*FLEN/8, x12, x8, x9)

inst_1059:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f79e6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b18f8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4f79e6; op2val:0xab18f8;
   valaddr_reg:x11; val_offset:2074*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2074*FLEN/8, x12, x8, x9)

inst_1060:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x204f68 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5d6ff6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f204f68; op2val:0xdd6ff6;
   valaddr_reg:x11; val_offset:2076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2076*FLEN/8, x12, x8, x9)

inst_1061:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x204f68 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5d6ff6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f204f68; op2val:0xdd6ff6;
   valaddr_reg:x11; val_offset:2078*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2078*FLEN/8, x12, x8, x9)

inst_1062:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x204f68 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5d6ff6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f204f68; op2val:0xdd6ff6;
   valaddr_reg:x11; val_offset:2080*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2080*FLEN/8, x12, x8, x9)

inst_1063:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x204f68 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5d6ff6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f204f68; op2val:0xdd6ff6;
   valaddr_reg:x11; val_offset:2082*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2082*FLEN/8, x12, x8, x9)

inst_1064:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x204f68 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5d6ff6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f204f68; op2val:0xdd6ff6;
   valaddr_reg:x11; val_offset:2084*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2084*FLEN/8, x12, x8, x9)

inst_1065:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51d1ec and fs2 == 0 and fe2 == 0x03 and fm2 == 0x292fae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e51d1ec; op2val:0x1a92fae;
   valaddr_reg:x11; val_offset:2086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2086*FLEN/8, x12, x8, x9)

inst_1066:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51d1ec and fs2 == 0 and fe2 == 0x03 and fm2 == 0x292fae and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e51d1ec; op2val:0x1a92fae;
   valaddr_reg:x11; val_offset:2088*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2088*FLEN/8, x12, x8, x9)

inst_1067:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51d1ec and fs2 == 0 and fe2 == 0x03 and fm2 == 0x292fae and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e51d1ec; op2val:0x1a92fae;
   valaddr_reg:x11; val_offset:2090*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2090*FLEN/8, x12, x8, x9)

inst_1068:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51d1ec and fs2 == 0 and fe2 == 0x03 and fm2 == 0x292fae and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e51d1ec; op2val:0x1a92fae;
   valaddr_reg:x11; val_offset:2092*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2092*FLEN/8, x12, x8, x9)

inst_1069:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51d1ec and fs2 == 0 and fe2 == 0x03 and fm2 == 0x292fae and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e51d1ec; op2val:0x1a92fae;
   valaddr_reg:x11; val_offset:2094*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2094*FLEN/8, x12, x8, x9)

inst_1070:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x440f0a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x350fb5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e440f0a; op2val:0x1b50fb5;
   valaddr_reg:x11; val_offset:2096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2096*FLEN/8, x12, x8, x9)

inst_1071:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x440f0a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x350fb5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e440f0a; op2val:0x1b50fb5;
   valaddr_reg:x11; val_offset:2098*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2098*FLEN/8, x12, x8, x9)

inst_1072:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x440f0a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x350fb5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e440f0a; op2val:0x1b50fb5;
   valaddr_reg:x11; val_offset:2100*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2100*FLEN/8, x12, x8, x9)

inst_1073:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x440f0a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x350fb5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e440f0a; op2val:0x1b50fb5;
   valaddr_reg:x11; val_offset:2102*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2102*FLEN/8, x12, x8, x9)

inst_1074:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x440f0a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x350fb5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e440f0a; op2val:0x1b50fb5;
   valaddr_reg:x11; val_offset:2104*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2104*FLEN/8, x12, x8, x9)

inst_1075:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19888d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x67361a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f19888d; op2val:0xe7361a;
   valaddr_reg:x11; val_offset:2106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2106*FLEN/8, x12, x8, x9)

inst_1076:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19888d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x67361a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f19888d; op2val:0xe7361a;
   valaddr_reg:x11; val_offset:2108*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2108*FLEN/8, x12, x8, x9)

inst_1077:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19888d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x67361a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f19888d; op2val:0xe7361a;
   valaddr_reg:x11; val_offset:2110*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2110*FLEN/8, x12, x8, x9)

inst_1078:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19888d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x67361a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f19888d; op2val:0xe7361a;
   valaddr_reg:x11; val_offset:2112*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2112*FLEN/8, x12, x8, x9)

inst_1079:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19888d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x67361a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f19888d; op2val:0xe7361a;
   valaddr_reg:x11; val_offset:2114*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2114*FLEN/8, x12, x8, x9)

inst_1080:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x286217 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x52d21c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f286217; op2val:0xd2d21c;
   valaddr_reg:x11; val_offset:2116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2116*FLEN/8, x12, x8, x9)

inst_1081:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x286217 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x52d21c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f286217; op2val:0xd2d21c;
   valaddr_reg:x11; val_offset:2118*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2118*FLEN/8, x12, x8, x9)

inst_1082:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x286217 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x52d21c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f286217; op2val:0xd2d21c;
   valaddr_reg:x11; val_offset:2120*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2120*FLEN/8, x12, x8, x9)

inst_1083:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x286217 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x52d21c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f286217; op2val:0xd2d21c;
   valaddr_reg:x11; val_offset:2122*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2122*FLEN/8, x12, x8, x9)

inst_1084:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x286217 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x52d21c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f286217; op2val:0xd2d21c;
   valaddr_reg:x11; val_offset:2124*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2124*FLEN/8, x12, x8, x9)

inst_1085:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x17b426 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x69fffe and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d97b426; op2val:0x269fffe;
   valaddr_reg:x11; val_offset:2126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2126*FLEN/8, x12, x8, x9)

inst_1086:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x17b426 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x69fffe and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d97b426; op2val:0x269fffe;
   valaddr_reg:x11; val_offset:2128*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2128*FLEN/8, x12, x8, x9)

inst_1087:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x17b426 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x69fffe and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d97b426; op2val:0x269fffe;
   valaddr_reg:x11; val_offset:2130*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2130*FLEN/8, x12, x8, x9)

inst_1088:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x17b426 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x69fffe and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d97b426; op2val:0x269fffe;
   valaddr_reg:x11; val_offset:2132*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2132*FLEN/8, x12, x8, x9)

inst_1089:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x17b426 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x69fffe and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d97b426; op2val:0x269fffe;
   valaddr_reg:x11; val_offset:2134*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2134*FLEN/8, x12, x8, x9)

inst_1090:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1eba82 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5fa4d4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e9eba82; op2val:0x15fa4d4;
   valaddr_reg:x11; val_offset:2136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2136*FLEN/8, x12, x8, x9)

inst_1091:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1eba82 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5fa4d4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e9eba82; op2val:0x15fa4d4;
   valaddr_reg:x11; val_offset:2138*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2138*FLEN/8, x12, x8, x9)

inst_1092:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1eba82 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5fa4d4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e9eba82; op2val:0x15fa4d4;
   valaddr_reg:x11; val_offset:2140*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2140*FLEN/8, x12, x8, x9)

inst_1093:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1eba82 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5fa4d4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e9eba82; op2val:0x15fa4d4;
   valaddr_reg:x11; val_offset:2142*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2142*FLEN/8, x12, x8, x9)

inst_1094:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1eba82 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x5fa4d4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e9eba82; op2val:0x15fa4d4;
   valaddr_reg:x11; val_offset:2144*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2144*FLEN/8, x12, x8, x9)

inst_1095:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x03cf30 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x06a8be and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e83cf30; op2val:0x186a8be;
   valaddr_reg:x11; val_offset:2146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2146*FLEN/8, x12, x8, x9)

inst_1096:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x03cf30 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x06a8be and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e83cf30; op2val:0x186a8be;
   valaddr_reg:x11; val_offset:2148*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2148*FLEN/8, x12, x8, x9)

inst_1097:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x03cf30 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x06a8be and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e83cf30; op2val:0x186a8be;
   valaddr_reg:x11; val_offset:2150*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2150*FLEN/8, x12, x8, x9)

inst_1098:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x03cf30 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x06a8be and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e83cf30; op2val:0x186a8be;
   valaddr_reg:x11; val_offset:2152*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2152*FLEN/8, x12, x8, x9)

inst_1099:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x03cf30 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x06a8be and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e83cf30; op2val:0x186a8be;
   valaddr_reg:x11; val_offset:2154*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2154*FLEN/8, x12, x8, x9)

inst_1100:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d38f and fs2 == 0 and fe2 == 0x04 and fm2 == 0x04a128 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e05d38f; op2val:0x204a128;
   valaddr_reg:x11; val_offset:2156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2156*FLEN/8, x12, x8, x9)

inst_1101:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d38f and fs2 == 0 and fe2 == 0x04 and fm2 == 0x04a128 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e05d38f; op2val:0x204a128;
   valaddr_reg:x11; val_offset:2158*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2158*FLEN/8, x12, x8, x9)

inst_1102:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d38f and fs2 == 0 and fe2 == 0x04 and fm2 == 0x04a128 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e05d38f; op2val:0x204a128;
   valaddr_reg:x11; val_offset:2160*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2160*FLEN/8, x12, x8, x9)

inst_1103:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d38f and fs2 == 0 and fe2 == 0x04 and fm2 == 0x04a128 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e05d38f; op2val:0x204a128;
   valaddr_reg:x11; val_offset:2162*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2162*FLEN/8, x12, x8, x9)

inst_1104:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d38f and fs2 == 0 and fe2 == 0x04 and fm2 == 0x04a128 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e05d38f; op2val:0x204a128;
   valaddr_reg:x11; val_offset:2164*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2164*FLEN/8, x12, x8, x9)

inst_1105:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c6180 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0ca7b7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7c6180; op2val:0x18ca7b7;
   valaddr_reg:x11; val_offset:2166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2166*FLEN/8, x12, x8, x9)

inst_1106:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c6180 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0ca7b7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7c6180; op2val:0x18ca7b7;
   valaddr_reg:x11; val_offset:2168*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2168*FLEN/8, x12, x8, x9)

inst_1107:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c6180 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0ca7b7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7c6180; op2val:0x18ca7b7;
   valaddr_reg:x11; val_offset:2170*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2170*FLEN/8, x12, x8, x9)

inst_1108:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c6180 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0ca7b7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7c6180; op2val:0x18ca7b7;
   valaddr_reg:x11; val_offset:2172*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2172*FLEN/8, x12, x8, x9)

inst_1109:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c6180 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0ca7b7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e7c6180; op2val:0x18ca7b7;
   valaddr_reg:x11; val_offset:2174*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2174*FLEN/8, x12, x8, x9)

inst_1110:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35594f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x43bf78 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f35594f; op2val:0xc3bf78;
   valaddr_reg:x11; val_offset:2176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2176*FLEN/8, x12, x8, x9)

inst_1111:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35594f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x43bf78 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f35594f; op2val:0xc3bf78;
   valaddr_reg:x11; val_offset:2178*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2178*FLEN/8, x12, x8, x9)

inst_1112:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35594f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x43bf78 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f35594f; op2val:0xc3bf78;
   valaddr_reg:x11; val_offset:2180*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2180*FLEN/8, x12, x8, x9)

inst_1113:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35594f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x43bf78 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f35594f; op2val:0xc3bf78;
   valaddr_reg:x11; val_offset:2182*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2182*FLEN/8, x12, x8, x9)

inst_1114:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35594f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x43bf78 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f35594f; op2val:0xc3bf78;
   valaddr_reg:x11; val_offset:2184*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2184*FLEN/8, x12, x8, x9)

inst_1115:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x289f85 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x52854e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea89f85; op2val:0x152854e;
   valaddr_reg:x11; val_offset:2186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2186*FLEN/8, x12, x8, x9)

inst_1116:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x289f85 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x52854e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea89f85; op2val:0x152854e;
   valaddr_reg:x11; val_offset:2188*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2188*FLEN/8, x12, x8, x9)

inst_1117:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x289f85 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x52854e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea89f85; op2val:0x152854e;
   valaddr_reg:x11; val_offset:2190*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2190*FLEN/8, x12, x8, x9)

inst_1118:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x289f85 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x52854e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea89f85; op2val:0x152854e;
   valaddr_reg:x11; val_offset:2192*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2192*FLEN/8, x12, x8, x9)

inst_1119:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x289f85 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x52854e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ea89f85; op2val:0x152854e;
   valaddr_reg:x11; val_offset:2194*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2194*FLEN/8, x12, x8, x9)

inst_1120:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ad5a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6544b9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1ad5a0; op2val:0xe544b9;
   valaddr_reg:x11; val_offset:2196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2196*FLEN/8, x12, x8, x9)

inst_1121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ad5a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6544b9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1ad5a0; op2val:0xe544b9;
   valaddr_reg:x11; val_offset:2198*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2198*FLEN/8, x12, x8, x9)

inst_1122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ad5a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6544b9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1ad5a0; op2val:0xe544b9;
   valaddr_reg:x11; val_offset:2200*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2200*FLEN/8, x12, x8, x9)

inst_1123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ad5a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6544b9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1ad5a0; op2val:0xe544b9;
   valaddr_reg:x11; val_offset:2202*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2202*FLEN/8, x12, x8, x9)

inst_1124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ad5a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6544b9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1ad5a0; op2val:0xe544b9;
   valaddr_reg:x11; val_offset:2204*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2204*FLEN/8, x12, x8, x9)

inst_1125:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d35de and fs2 == 0 and fe2 == 0x05 and fm2 == 0x4cf200 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d2d35de; op2val:0x2ccf200;
   valaddr_reg:x11; val_offset:2206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2206*FLEN/8, x12, x8, x9)

inst_1126:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d35de and fs2 == 0 and fe2 == 0x05 and fm2 == 0x4cf200 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d2d35de; op2val:0x2ccf200;
   valaddr_reg:x11; val_offset:2208*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2208*FLEN/8, x12, x8, x9)

inst_1127:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d35de and fs2 == 0 and fe2 == 0x05 and fm2 == 0x4cf200 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d2d35de; op2val:0x2ccf200;
   valaddr_reg:x11; val_offset:2210*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2210*FLEN/8, x12, x8, x9)

inst_1128:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d35de and fs2 == 0 and fe2 == 0x05 and fm2 == 0x4cf200 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d2d35de; op2val:0x2ccf200;
   valaddr_reg:x11; val_offset:2212*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2212*FLEN/8, x12, x8, x9)

inst_1129:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d35de and fs2 == 0 and fe2 == 0x05 and fm2 == 0x4cf200 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d2d35de; op2val:0x2ccf200;
   valaddr_reg:x11; val_offset:2214*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2214*FLEN/8, x12, x8, x9)

inst_1130:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05fb50 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0479ce and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f05fb50; op2val:0x10479ce;
   valaddr_reg:x11; val_offset:2216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2216*FLEN/8, x12, x8, x9)

inst_1131:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05fb50 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0479ce and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f05fb50; op2val:0x10479ce;
   valaddr_reg:x11; val_offset:2218*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2218*FLEN/8, x12, x8, x9)

inst_1132:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05fb50 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0479ce and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f05fb50; op2val:0x10479ce;
   valaddr_reg:x11; val_offset:2220*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2220*FLEN/8, x12, x8, x9)

inst_1133:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05fb50 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0479ce and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f05fb50; op2val:0x10479ce;
   valaddr_reg:x11; val_offset:2222*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2222*FLEN/8, x12, x8, x9)

inst_1134:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05fb50 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0479ce and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f05fb50; op2val:0x10479ce;
   valaddr_reg:x11; val_offset:2224*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2224*FLEN/8, x12, x8, x9)

inst_1135:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5044ce and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2a7247 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5044ce; op2val:0xaa7247;
   valaddr_reg:x11; val_offset:2226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2226*FLEN/8, x12, x8, x9)

inst_1136:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5044ce and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2a7247 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5044ce; op2val:0xaa7247;
   valaddr_reg:x11; val_offset:2228*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2228*FLEN/8, x12, x8, x9)

inst_1137:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5044ce and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2a7247 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5044ce; op2val:0xaa7247;
   valaddr_reg:x11; val_offset:2230*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2230*FLEN/8, x12, x8, x9)

inst_1138:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5044ce and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2a7247 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5044ce; op2val:0xaa7247;
   valaddr_reg:x11; val_offset:2232*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2232*FLEN/8, x12, x8, x9)

inst_1139:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5044ce and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2a7247 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5044ce; op2val:0xaa7247;
   valaddr_reg:x11; val_offset:2234*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2234*FLEN/8, x12, x8, x9)

inst_1140:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7946 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1ed971 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5f7946; op2val:0x9ed971;
   valaddr_reg:x11; val_offset:2236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2236*FLEN/8, x12, x8, x9)

inst_1141:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7946 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1ed971 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5f7946; op2val:0x9ed971;
   valaddr_reg:x11; val_offset:2238*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2238*FLEN/8, x12, x8, x9)

inst_1142:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7946 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1ed971 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5f7946; op2val:0x9ed971;
   valaddr_reg:x11; val_offset:2240*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2240*FLEN/8, x12, x8, x9)

inst_1143:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7946 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1ed971 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5f7946; op2val:0x9ed971;
   valaddr_reg:x11; val_offset:2242*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2242*FLEN/8, x12, x8, x9)

inst_1144:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7946 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1ed971 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5f7946; op2val:0x9ed971;
   valaddr_reg:x11; val_offset:2244*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2244*FLEN/8, x12, x8, x9)

inst_1145:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x263348 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5596f2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f263348; op2val:0xd596f2;
   valaddr_reg:x11; val_offset:2246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2246*FLEN/8, x12, x8, x9)

inst_1146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x263348 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5596f2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f263348; op2val:0xd596f2;
   valaddr_reg:x11; val_offset:2248*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2248*FLEN/8, x12, x8, x9)

inst_1147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x263348 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5596f2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f263348; op2val:0xd596f2;
   valaddr_reg:x11; val_offset:2250*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2250*FLEN/8, x12, x8, x9)

inst_1148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x263348 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5596f2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f263348; op2val:0xd596f2;
   valaddr_reg:x11; val_offset:2252*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2252*FLEN/8, x12, x8, x9)

inst_1149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x263348 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5596f2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f263348; op2val:0xd596f2;
   valaddr_reg:x11; val_offset:2254*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2254*FLEN/8, x12, x8, x9)

inst_1150:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x28aa18 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x52781c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3da8aa18; op2val:0x252781c;
   valaddr_reg:x11; val_offset:2256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2256*FLEN/8, x12, x8, x9)

inst_1151:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x28aa18 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x52781c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3da8aa18; op2val:0x252781c;
   valaddr_reg:x11; val_offset:2258*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2258*FLEN/8, x12, x8, x9)

inst_1152:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x28aa18 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x52781c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3da8aa18; op2val:0x252781c;
   valaddr_reg:x11; val_offset:2260*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2260*FLEN/8, x12, x8, x9)

inst_1153:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x28aa18 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x52781c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3da8aa18; op2val:0x252781c;
   valaddr_reg:x11; val_offset:2262*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2262*FLEN/8, x12, x8, x9)

inst_1154:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x28aa18 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x52781c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3da8aa18; op2val:0x252781c;
   valaddr_reg:x11; val_offset:2264*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2264*FLEN/8, x12, x8, x9)

inst_1155:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x74295e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1163d9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e74295e; op2val:0x19163d9;
   valaddr_reg:x11; val_offset:2266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2266*FLEN/8, x12, x8, x9)

inst_1156:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x74295e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1163d9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e74295e; op2val:0x19163d9;
   valaddr_reg:x11; val_offset:2268*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2268*FLEN/8, x12, x8, x9)

inst_1157:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x74295e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1163d9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e74295e; op2val:0x19163d9;
   valaddr_reg:x11; val_offset:2270*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2270*FLEN/8, x12, x8, x9)

inst_1158:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x74295e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1163d9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e74295e; op2val:0x19163d9;
   valaddr_reg:x11; val_offset:2272*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2272*FLEN/8, x12, x8, x9)

inst_1159:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x74295e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1163d9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e74295e; op2val:0x19163d9;
   valaddr_reg:x11; val_offset:2274*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2274*FLEN/8, x12, x8, x9)

inst_1160:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6a2501 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x179c2b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eea2501; op2val:0x1179c2b;
   valaddr_reg:x11; val_offset:2276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2276*FLEN/8, x12, x8, x9)

inst_1161:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6a2501 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x179c2b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eea2501; op2val:0x1179c2b;
   valaddr_reg:x11; val_offset:2278*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2278*FLEN/8, x12, x8, x9)

inst_1162:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6a2501 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x179c2b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eea2501; op2val:0x1179c2b;
   valaddr_reg:x11; val_offset:2280*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2280*FLEN/8, x12, x8, x9)

inst_1163:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6a2501 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x179c2b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eea2501; op2val:0x1179c2b;
   valaddr_reg:x11; val_offset:2282*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2282*FLEN/8, x12, x8, x9)

inst_1164:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6a2501 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x179c2b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eea2501; op2val:0x1179c2b;
   valaddr_reg:x11; val_offset:2284*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2284*FLEN/8, x12, x8, x9)

inst_1165:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a7731 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x503ece and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2a7731; op2val:0x1d03ece;
   valaddr_reg:x11; val_offset:2286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2286*FLEN/8, x12, x8, x9)

inst_1166:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a7731 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x503ece and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2a7731; op2val:0x1d03ece;
   valaddr_reg:x11; val_offset:2288*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2288*FLEN/8, x12, x8, x9)

inst_1167:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a7731 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x503ece and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2a7731; op2val:0x1d03ece;
   valaddr_reg:x11; val_offset:2290*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2290*FLEN/8, x12, x8, x9)

inst_1168:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a7731 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x503ece and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2a7731; op2val:0x1d03ece;
   valaddr_reg:x11; val_offset:2292*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2292*FLEN/8, x12, x8, x9)

inst_1169:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a7731 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x503ece and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2a7731; op2val:0x1d03ece;
   valaddr_reg:x11; val_offset:2294*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2294*FLEN/8, x12, x8, x9)

inst_1170:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3720f5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x41d86c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3720f5; op2val:0xc1d86c;
   valaddr_reg:x11; val_offset:2296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2296*FLEN/8, x12, x8, x9)

inst_1171:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3720f5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x41d86c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3720f5; op2val:0xc1d86c;
   valaddr_reg:x11; val_offset:2298*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2298*FLEN/8, x12, x8, x9)

inst_1172:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3720f5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x41d86c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3720f5; op2val:0xc1d86c;
   valaddr_reg:x11; val_offset:2300*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2300*FLEN/8, x12, x8, x9)

inst_1173:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3720f5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x41d86c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3720f5; op2val:0xc1d86c;
   valaddr_reg:x11; val_offset:2302*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2302*FLEN/8, x12, x8, x9)

inst_1174:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3720f5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x41d86c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3720f5; op2val:0xc1d86c;
   valaddr_reg:x11; val_offset:2304*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2304*FLEN/8, x12, x8, x9)

inst_1175:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5973ae and fs2 == 0 and fe2 == 0x01 and fm2 == 0x233f95 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5973ae; op2val:0xa33f95;
   valaddr_reg:x11; val_offset:2306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2306*FLEN/8, x12, x8, x9)

inst_1176:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5973ae and fs2 == 0 and fe2 == 0x01 and fm2 == 0x233f95 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5973ae; op2val:0xa33f95;
   valaddr_reg:x11; val_offset:2308*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2308*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_9)

inst_1177:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5973ae and fs2 == 0 and fe2 == 0x01 and fm2 == 0x233f95 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5973ae; op2val:0xa33f95;
   valaddr_reg:x11; val_offset:2310*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2310*FLEN/8, x12, x8, x9)

inst_1178:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5973ae and fs2 == 0 and fe2 == 0x01 and fm2 == 0x233f95 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5973ae; op2val:0xa33f95;
   valaddr_reg:x11; val_offset:2312*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2312*FLEN/8, x12, x8, x9)

inst_1179:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5973ae and fs2 == 0 and fe2 == 0x01 and fm2 == 0x233f95 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5973ae; op2val:0xa33f95;
   valaddr_reg:x11; val_offset:2314*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2314*FLEN/8, x12, x8, x9)

inst_1180:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x17303b and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6acc2b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d97303b; op2val:0x26acc2b;
   valaddr_reg:x11; val_offset:2316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2316*FLEN/8, x12, x8, x9)

inst_1181:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x17303b and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6acc2b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d97303b; op2val:0x26acc2b;
   valaddr_reg:x11; val_offset:2318*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2318*FLEN/8, x12, x8, x9)

inst_1182:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x17303b and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6acc2b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d97303b; op2val:0x26acc2b;
   valaddr_reg:x11; val_offset:2320*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2320*FLEN/8, x12, x8, x9)

inst_1183:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x17303b and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6acc2b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d97303b; op2val:0x26acc2b;
   valaddr_reg:x11; val_offset:2322*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2322*FLEN/8, x12, x8, x9)

inst_1184:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x17303b and fs2 == 0 and fe2 == 0x04 and fm2 == 0x6acc2b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d97303b; op2val:0x26acc2b;
   valaddr_reg:x11; val_offset:2324*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2324*FLEN/8, x12, x8, x9)

inst_1185:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b98c8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a761 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5b98c8; op2val:0xa1a761;
   valaddr_reg:x11; val_offset:2326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2326*FLEN/8, x12, x8, x9)

inst_1186:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b98c8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a761 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5b98c8; op2val:0xa1a761;
   valaddr_reg:x11; val_offset:2328*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2328*FLEN/8, x12, x8, x9)

inst_1187:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b98c8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a761 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5b98c8; op2val:0xa1a761;
   valaddr_reg:x11; val_offset:2330*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2330*FLEN/8, x12, x8, x9)

inst_1188:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b98c8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a761 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5b98c8; op2val:0xa1a761;
   valaddr_reg:x11; val_offset:2332*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2332*FLEN/8, x12, x8, x9)

inst_1189:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b98c8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a761 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5b98c8; op2val:0xa1a761;
   valaddr_reg:x11; val_offset:2334*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2334*FLEN/8, x12, x8, x9)

inst_1190:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fbfc5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x39217b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3fbfc5; op2val:0xb9217b;
   valaddr_reg:x11; val_offset:2336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2336*FLEN/8, x12, x8, x9)

inst_1191:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fbfc5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x39217b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3fbfc5; op2val:0xb9217b;
   valaddr_reg:x11; val_offset:2338*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2338*FLEN/8, x12, x8, x9)

inst_1192:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fbfc5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x39217b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3fbfc5; op2val:0xb9217b;
   valaddr_reg:x11; val_offset:2340*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2340*FLEN/8, x12, x8, x9)

inst_1193:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fbfc5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x39217b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3fbfc5; op2val:0xb9217b;
   valaddr_reg:x11; val_offset:2342*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2342*FLEN/8, x12, x8, x9)

inst_1194:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fbfc5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x39217b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3fbfc5; op2val:0xb9217b;
   valaddr_reg:x11; val_offset:2344*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2344*FLEN/8, x12, x8, x9)

inst_1195:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ff473 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x38eead and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3ff473; op2val:0xb8eead;
   valaddr_reg:x11; val_offset:2346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2346*FLEN/8, x12, x8, x9)

inst_1196:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ff473 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x38eead and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3ff473; op2val:0xb8eead;
   valaddr_reg:x11; val_offset:2348*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2348*FLEN/8, x12, x8, x9)

inst_1197:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ff473 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x38eead and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3ff473; op2val:0xb8eead;
   valaddr_reg:x11; val_offset:2350*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2350*FLEN/8, x12, x8, x9)

inst_1198:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ff473 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x38eead and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3ff473; op2val:0xb8eead;
   valaddr_reg:x11; val_offset:2352*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2352*FLEN/8, x12, x8, x9)

inst_1199:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ff473 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x38eead and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3ff473; op2val:0xb8eead;
   valaddr_reg:x11; val_offset:2354*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2354*FLEN/8, x12, x8, x9)

inst_1200:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x40e698 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x380688 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f40e698; op2val:0xb80688;
   valaddr_reg:x11; val_offset:2356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2356*FLEN/8, x12, x8, x9)

inst_1201:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x40e698 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x380688 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f40e698; op2val:0xb80688;
   valaddr_reg:x11; val_offset:2358*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2358*FLEN/8, x12, x8, x9)

inst_1202:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x40e698 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x380688 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f40e698; op2val:0xb80688;
   valaddr_reg:x11; val_offset:2360*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2360*FLEN/8, x12, x8, x9)

inst_1203:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x40e698 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x380688 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f40e698; op2val:0xb80688;
   valaddr_reg:x11; val_offset:2362*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2362*FLEN/8, x12, x8, x9)

inst_1204:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x40e698 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x380688 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f40e698; op2val:0xb80688;
   valaddr_reg:x11; val_offset:2364*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2364*FLEN/8, x12, x8, x9)

inst_1205:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x475ed0 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x320dca and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec75ed0; op2val:0x1320dca;
   valaddr_reg:x11; val_offset:2366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2366*FLEN/8, x12, x8, x9)

inst_1206:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x475ed0 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x320dca and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec75ed0; op2val:0x1320dca;
   valaddr_reg:x11; val_offset:2368*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2368*FLEN/8, x12, x8, x9)

inst_1207:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x475ed0 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x320dca and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec75ed0; op2val:0x1320dca;
   valaddr_reg:x11; val_offset:2370*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2370*FLEN/8, x12, x8, x9)

inst_1208:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x475ed0 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x320dca and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec75ed0; op2val:0x1320dca;
   valaddr_reg:x11; val_offset:2372*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2372*FLEN/8, x12, x8, x9)

inst_1209:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x475ed0 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x320dca and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec75ed0; op2val:0x1320dca;
   valaddr_reg:x11; val_offset:2374*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2374*FLEN/8, x12, x8, x9)

inst_1210:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2090e5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5d15a5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2090e5; op2val:0xdd15a5;
   valaddr_reg:x11; val_offset:2376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2376*FLEN/8, x12, x8, x9)

inst_1211:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2090e5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5d15a5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2090e5; op2val:0xdd15a5;
   valaddr_reg:x11; val_offset:2378*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2378*FLEN/8, x12, x8, x9)

inst_1212:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2090e5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5d15a5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2090e5; op2val:0xdd15a5;
   valaddr_reg:x11; val_offset:2380*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2380*FLEN/8, x12, x8, x9)

inst_1213:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2090e5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5d15a5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2090e5; op2val:0xdd15a5;
   valaddr_reg:x11; val_offset:2382*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2382*FLEN/8, x12, x8, x9)

inst_1214:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2090e5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5d15a5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2090e5; op2val:0xdd15a5;
   valaddr_reg:x11; val_offset:2384*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2384*FLEN/8, x12, x8, x9)

inst_1215:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x703531 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13c87d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f703531; op2val:0x93c87d;
   valaddr_reg:x11; val_offset:2386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2386*FLEN/8, x12, x8, x9)

inst_1216:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x703531 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13c87d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f703531; op2val:0x93c87d;
   valaddr_reg:x11; val_offset:2388*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2388*FLEN/8, x12, x8, x9)

inst_1217:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x703531 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13c87d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f703531; op2val:0x93c87d;
   valaddr_reg:x11; val_offset:2390*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2390*FLEN/8, x12, x8, x9)

inst_1218:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x703531 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13c87d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f703531; op2val:0x93c87d;
   valaddr_reg:x11; val_offset:2392*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2392*FLEN/8, x12, x8, x9)

inst_1219:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x703531 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13c87d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f703531; op2val:0x93c87d;
   valaddr_reg:x11; val_offset:2394*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2394*FLEN/8, x12, x8, x9)

inst_1220:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x18c1b2 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x686316 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e18c1b2; op2val:0x1e86316;
   valaddr_reg:x11; val_offset:2396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2396*FLEN/8, x12, x8, x9)

inst_1221:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x18c1b2 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x686316 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e18c1b2; op2val:0x1e86316;
   valaddr_reg:x11; val_offset:2398*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2398*FLEN/8, x12, x8, x9)

inst_1222:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x18c1b2 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x686316 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e18c1b2; op2val:0x1e86316;
   valaddr_reg:x11; val_offset:2400*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2400*FLEN/8, x12, x8, x9)

inst_1223:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x18c1b2 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x686316 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e18c1b2; op2val:0x1e86316;
   valaddr_reg:x11; val_offset:2402*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2402*FLEN/8, x12, x8, x9)

inst_1224:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x18c1b2 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x686316 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e18c1b2; op2val:0x1e86316;
   valaddr_reg:x11; val_offset:2404*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2404*FLEN/8, x12, x8, x9)

inst_1225:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x628155 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1cb930 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e628155; op2val:0x19cb930;
   valaddr_reg:x11; val_offset:2406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2406*FLEN/8, x12, x8, x9)

inst_1226:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x628155 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1cb930 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e628155; op2val:0x19cb930;
   valaddr_reg:x11; val_offset:2408*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2408*FLEN/8, x12, x8, x9)

inst_1227:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x628155 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1cb930 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e628155; op2val:0x19cb930;
   valaddr_reg:x11; val_offset:2410*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2410*FLEN/8, x12, x8, x9)

inst_1228:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x628155 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1cb930 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e628155; op2val:0x19cb930;
   valaddr_reg:x11; val_offset:2412*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2412*FLEN/8, x12, x8, x9)

inst_1229:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x628155 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1cb930 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e628155; op2val:0x19cb930;
   valaddr_reg:x11; val_offset:2414*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2414*FLEN/8, x12, x8, x9)

inst_1230:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x743aa4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x115991 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef43aa4; op2val:0x1115991;
   valaddr_reg:x11; val_offset:2416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2416*FLEN/8, x12, x8, x9)

inst_1231:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x743aa4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x115991 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef43aa4; op2val:0x1115991;
   valaddr_reg:x11; val_offset:2418*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2418*FLEN/8, x12, x8, x9)

inst_1232:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x743aa4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x115991 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef43aa4; op2val:0x1115991;
   valaddr_reg:x11; val_offset:2420*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2420*FLEN/8, x12, x8, x9)

inst_1233:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x743aa4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x115991 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef43aa4; op2val:0x1115991;
   valaddr_reg:x11; val_offset:2422*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2422*FLEN/8, x12, x8, x9)

inst_1234:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x743aa4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x115991 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ef43aa4; op2val:0x1115991;
   valaddr_reg:x11; val_offset:2424*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2424*FLEN/8, x12, x8, x9)

inst_1235:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297618 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x517abe and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f297618; op2val:0xd17abe;
   valaddr_reg:x11; val_offset:2426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2426*FLEN/8, x12, x8, x9)

inst_1236:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297618 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x517abe and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f297618; op2val:0xd17abe;
   valaddr_reg:x11; val_offset:2428*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2428*FLEN/8, x12, x8, x9)

inst_1237:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297618 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x517abe and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f297618; op2val:0xd17abe;
   valaddr_reg:x11; val_offset:2430*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2430*FLEN/8, x12, x8, x9)

inst_1238:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297618 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x517abe and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f297618; op2val:0xd17abe;
   valaddr_reg:x11; val_offset:2432*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2432*FLEN/8, x12, x8, x9)

inst_1239:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297618 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x517abe and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f297618; op2val:0xd17abe;
   valaddr_reg:x11; val_offset:2434*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2434*FLEN/8, x12, x8, x9)

inst_1240:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x477cc9 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x31f309 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec77cc9; op2val:0x131f309;
   valaddr_reg:x11; val_offset:2436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2436*FLEN/8, x12, x8, x9)

inst_1241:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x477cc9 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x31f309 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec77cc9; op2val:0x131f309;
   valaddr_reg:x11; val_offset:2438*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2438*FLEN/8, x12, x8, x9)

inst_1242:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x477cc9 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x31f309 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec77cc9; op2val:0x131f309;
   valaddr_reg:x11; val_offset:2440*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2440*FLEN/8, x12, x8, x9)

inst_1243:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x477cc9 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x31f309 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec77cc9; op2val:0x131f309;
   valaddr_reg:x11; val_offset:2442*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2442*FLEN/8, x12, x8, x9)

inst_1244:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x477cc9 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x31f309 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec77cc9; op2val:0x131f309;
   valaddr_reg:x11; val_offset:2444*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2444*FLEN/8, x12, x8, x9)

inst_1245:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d96fe and fs2 == 0 and fe2 == 0x09 and fm2 == 0x4c7f55 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3b2d96fe; op2val:0x4cc7f55;
   valaddr_reg:x11; val_offset:2446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2446*FLEN/8, x12, x8, x9)

inst_1246:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d96fe and fs2 == 0 and fe2 == 0x09 and fm2 == 0x4c7f55 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3b2d96fe; op2val:0x4cc7f55;
   valaddr_reg:x11; val_offset:2448*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2448*FLEN/8, x12, x8, x9)

inst_1247:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d96fe and fs2 == 0 and fe2 == 0x09 and fm2 == 0x4c7f55 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3b2d96fe; op2val:0x4cc7f55;
   valaddr_reg:x11; val_offset:2450*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2450*FLEN/8, x12, x8, x9)

inst_1248:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d96fe and fs2 == 0 and fe2 == 0x09 and fm2 == 0x4c7f55 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3b2d96fe; op2val:0x4cc7f55;
   valaddr_reg:x11; val_offset:2452*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2452*FLEN/8, x12, x8, x9)

inst_1249:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d96fe and fs2 == 0 and fe2 == 0x09 and fm2 == 0x4c7f55 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3b2d96fe; op2val:0x4cc7f55;
   valaddr_reg:x11; val_offset:2454*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2454*FLEN/8, x12, x8, x9)

inst_1250:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06b57a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03c2ba and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06b57a; op2val:0x103c2ba;
   valaddr_reg:x11; val_offset:2456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2456*FLEN/8, x12, x8, x9)

inst_1251:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06b57a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03c2ba and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06b57a; op2val:0x103c2ba;
   valaddr_reg:x11; val_offset:2458*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2458*FLEN/8, x12, x8, x9)

inst_1252:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06b57a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03c2ba and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06b57a; op2val:0x103c2ba;
   valaddr_reg:x11; val_offset:2460*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2460*FLEN/8, x12, x8, x9)

inst_1253:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06b57a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03c2ba and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06b57a; op2val:0x103c2ba;
   valaddr_reg:x11; val_offset:2462*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2462*FLEN/8, x12, x8, x9)

inst_1254:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06b57a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03c2ba and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06b57a; op2val:0x103c2ba;
   valaddr_reg:x11; val_offset:2464*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2464*FLEN/8, x12, x8, x9)

inst_1255:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee3a7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4afa5b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2ee3a7; op2val:0xcafa5b;
   valaddr_reg:x11; val_offset:2466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2466*FLEN/8, x12, x8, x9)

inst_1256:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee3a7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4afa5b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2ee3a7; op2val:0xcafa5b;
   valaddr_reg:x11; val_offset:2468*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2468*FLEN/8, x12, x8, x9)

inst_1257:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee3a7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4afa5b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2ee3a7; op2val:0xcafa5b;
   valaddr_reg:x11; val_offset:2470*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2470*FLEN/8, x12, x8, x9)

inst_1258:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee3a7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4afa5b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2ee3a7; op2val:0xcafa5b;
   valaddr_reg:x11; val_offset:2472*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2472*FLEN/8, x12, x8, x9)

inst_1259:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee3a7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4afa5b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2ee3a7; op2val:0xcafa5b;
   valaddr_reg:x11; val_offset:2474*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2474*FLEN/8, x12, x8, x9)

inst_1260:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x18f81f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x563688 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5498f81f; op2val:0x3fd63688;
   valaddr_reg:x11; val_offset:2476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2476*FLEN/8, x12, x8, x9)

inst_1261:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x18f81f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x563688 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5498f81f; op2val:0x3fd63688;
   valaddr_reg:x11; val_offset:2478*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2478*FLEN/8, x12, x8, x9)

inst_1262:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x18f81f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x563688 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5498f81f; op2val:0x3fd63688;
   valaddr_reg:x11; val_offset:2480*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2480*FLEN/8, x12, x8, x9)

inst_1263:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x18f81f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x563688 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5498f81f; op2val:0x3fd63688;
   valaddr_reg:x11; val_offset:2482*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2482*FLEN/8, x12, x8, x9)

inst_1264:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x18f81f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x563688 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5498f81f; op2val:0x3fd63688;
   valaddr_reg:x11; val_offset:2484*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2484*FLEN/8, x12, x8, x9)

inst_1265:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x09e0cc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6da8bf and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5489e0cc; op2val:0x3feda8bf;
   valaddr_reg:x11; val_offset:2486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2486*FLEN/8, x12, x8, x9)

inst_1266:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x09e0cc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6da8bf and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5489e0cc; op2val:0x3feda8bf;
   valaddr_reg:x11; val_offset:2488*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2488*FLEN/8, x12, x8, x9)

inst_1267:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x09e0cc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6da8bf and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5489e0cc; op2val:0x3feda8bf;
   valaddr_reg:x11; val_offset:2490*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2490*FLEN/8, x12, x8, x9)

inst_1268:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x09e0cc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6da8bf and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5489e0cc; op2val:0x3feda8bf;
   valaddr_reg:x11; val_offset:2492*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2492*FLEN/8, x12, x8, x9)

inst_1269:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x09e0cc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6da8bf and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5489e0cc; op2val:0x3feda8bf;
   valaddr_reg:x11; val_offset:2494*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2494*FLEN/8, x12, x8, x9)

inst_1270:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7d2a86 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016ecc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54fd2a86; op2val:0x3f816ecc;
   valaddr_reg:x11; val_offset:2496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2496*FLEN/8, x12, x8, x9)

inst_1271:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7d2a86 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016ecc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54fd2a86; op2val:0x3f816ecc;
   valaddr_reg:x11; val_offset:2498*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2498*FLEN/8, x12, x8, x9)

inst_1272:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7d2a86 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016ecc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54fd2a86; op2val:0x3f816ecc;
   valaddr_reg:x11; val_offset:2500*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2500*FLEN/8, x12, x8, x9)

inst_1273:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7d2a86 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016ecc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54fd2a86; op2val:0x3f816ecc;
   valaddr_reg:x11; val_offset:2502*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2502*FLEN/8, x12, x8, x9)

inst_1274:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7d2a86 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016ecc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54fd2a86; op2val:0x3f816ecc;
   valaddr_reg:x11; val_offset:2504*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2504*FLEN/8, x12, x8, x9)

inst_1275:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x68be36 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0cca5c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5468be36; op2val:0x400cca5c;
   valaddr_reg:x11; val_offset:2506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2506*FLEN/8, x12, x8, x9)

inst_1276:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x68be36 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0cca5c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5468be36; op2val:0x400cca5c;
   valaddr_reg:x11; val_offset:2508*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2508*FLEN/8, x12, x8, x9)

inst_1277:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x68be36 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0cca5c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5468be36; op2val:0x400cca5c;
   valaddr_reg:x11; val_offset:2510*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2510*FLEN/8, x12, x8, x9)

inst_1278:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x68be36 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0cca5c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5468be36; op2val:0x400cca5c;
   valaddr_reg:x11; val_offset:2512*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2512*FLEN/8, x12, x8, x9)

inst_1279:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x68be36 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0cca5c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5468be36; op2val:0x400cca5c;
   valaddr_reg:x11; val_offset:2514*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2514*FLEN/8, x12, x8, x9)

inst_1280:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x06571e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x73eaf9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5486571e; op2val:0x3ff3eaf9;
   valaddr_reg:x11; val_offset:2516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2516*FLEN/8, x12, x8, x9)

inst_1281:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x06571e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x73eaf9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5486571e; op2val:0x3ff3eaf9;
   valaddr_reg:x11; val_offset:2518*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2518*FLEN/8, x12, x8, x9)

inst_1282:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x06571e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x73eaf9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5486571e; op2val:0x3ff3eaf9;
   valaddr_reg:x11; val_offset:2520*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2520*FLEN/8, x12, x8, x9)

inst_1283:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x06571e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x73eaf9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5486571e; op2val:0x3ff3eaf9;
   valaddr_reg:x11; val_offset:2522*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2522*FLEN/8, x12, x8, x9)

inst_1284:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x06571e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x73eaf9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5486571e; op2val:0x3ff3eaf9;
   valaddr_reg:x11; val_offset:2524*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2524*FLEN/8, x12, x8, x9)

inst_1285:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5db472 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x13ccd2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x535db472; op2val:0x4113ccd2;
   valaddr_reg:x11; val_offset:2526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2526*FLEN/8, x12, x8, x9)

inst_1286:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5db472 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x13ccd2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x535db472; op2val:0x4113ccd2;
   valaddr_reg:x11; val_offset:2528*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2528*FLEN/8, x12, x8, x9)

inst_1287:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5db472 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x13ccd2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x535db472; op2val:0x4113ccd2;
   valaddr_reg:x11; val_offset:2530*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2530*FLEN/8, x12, x8, x9)

inst_1288:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5db472 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x13ccd2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x535db472; op2val:0x4113ccd2;
   valaddr_reg:x11; val_offset:2532*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2532*FLEN/8, x12, x8, x9)

inst_1289:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5db472 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x13ccd2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x535db472; op2val:0x4113ccd2;
   valaddr_reg:x11; val_offset:2534*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2534*FLEN/8, x12, x8, x9)

inst_1290:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x03499e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7996ea and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5383499e; op2val:0x40f996ea;
   valaddr_reg:x11; val_offset:2536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2536*FLEN/8, x12, x8, x9)

inst_1291:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x03499e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7996ea and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5383499e; op2val:0x40f996ea;
   valaddr_reg:x11; val_offset:2538*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2538*FLEN/8, x12, x8, x9)

inst_1292:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x03499e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7996ea and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5383499e; op2val:0x40f996ea;
   valaddr_reg:x11; val_offset:2540*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2540*FLEN/8, x12, x8, x9)

inst_1293:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x03499e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7996ea and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5383499e; op2val:0x40f996ea;
   valaddr_reg:x11; val_offset:2542*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2542*FLEN/8, x12, x8, x9)

inst_1294:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x03499e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7996ea and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5383499e; op2val:0x40f996ea;
   valaddr_reg:x11; val_offset:2544*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2544*FLEN/8, x12, x8, x9)

inst_1295:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2e02bb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3c4f6f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ae02bb; op2val:0x3fbc4f6f;
   valaddr_reg:x11; val_offset:2546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2546*FLEN/8, x12, x8, x9)

inst_1296:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2e02bb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3c4f6f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ae02bb; op2val:0x3fbc4f6f;
   valaddr_reg:x11; val_offset:2548*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2548*FLEN/8, x12, x8, x9)

inst_1297:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2e02bb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3c4f6f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ae02bb; op2val:0x3fbc4f6f;
   valaddr_reg:x11; val_offset:2550*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2550*FLEN/8, x12, x8, x9)

inst_1298:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2e02bb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3c4f6f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ae02bb; op2val:0x3fbc4f6f;
   valaddr_reg:x11; val_offset:2552*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2552*FLEN/8, x12, x8, x9)

inst_1299:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2e02bb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3c4f6f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ae02bb; op2val:0x3fbc4f6f;
   valaddr_reg:x11; val_offset:2554*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2554*FLEN/8, x12, x8, x9)

inst_1300:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x1e6299 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4ee359 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x531e6299; op2val:0x414ee359;
   valaddr_reg:x11; val_offset:2556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2556*FLEN/8, x12, x8, x9)

inst_1301:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x1e6299 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4ee359 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x531e6299; op2val:0x414ee359;
   valaddr_reg:x11; val_offset:2558*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2558*FLEN/8, x12, x8, x9)

inst_1302:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x1e6299 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4ee359 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x531e6299; op2val:0x414ee359;
   valaddr_reg:x11; val_offset:2560*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2560*FLEN/8, x12, x8, x9)

inst_1303:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x1e6299 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4ee359 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x531e6299; op2val:0x414ee359;
   valaddr_reg:x11; val_offset:2562*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2562*FLEN/8, x12, x8, x9)

inst_1304:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x1e6299 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4ee359 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x531e6299; op2val:0x414ee359;
   valaddr_reg:x11; val_offset:2564*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2564*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_10)

inst_1305:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4c44fe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x206a60 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54cc44fe; op2val:0x3fa06a60;
   valaddr_reg:x11; val_offset:2566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2566*FLEN/8, x12, x8, x9)

inst_1306:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4c44fe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x206a60 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54cc44fe; op2val:0x3fa06a60;
   valaddr_reg:x11; val_offset:2568*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2568*FLEN/8, x12, x8, x9)

inst_1307:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4c44fe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x206a60 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54cc44fe; op2val:0x3fa06a60;
   valaddr_reg:x11; val_offset:2570*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2570*FLEN/8, x12, x8, x9)

inst_1308:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4c44fe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x206a60 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54cc44fe; op2val:0x3fa06a60;
   valaddr_reg:x11; val_offset:2572*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2572*FLEN/8, x12, x8, x9)

inst_1309:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4c44fe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x206a60 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54cc44fe; op2val:0x3fa06a60;
   valaddr_reg:x11; val_offset:2574*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2574*FLEN/8, x12, x8, x9)

inst_1310:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x59018c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17001a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5359018c; op2val:0x4117001a;
   valaddr_reg:x11; val_offset:2576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2576*FLEN/8, x12, x8, x9)

inst_1311:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x59018c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17001a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5359018c; op2val:0x4117001a;
   valaddr_reg:x11; val_offset:2578*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2578*FLEN/8, x12, x8, x9)

inst_1312:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x59018c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17001a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5359018c; op2val:0x4117001a;
   valaddr_reg:x11; val_offset:2580*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2580*FLEN/8, x12, x8, x9)

inst_1313:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x59018c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17001a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5359018c; op2val:0x4117001a;
   valaddr_reg:x11; val_offset:2582*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2582*FLEN/8, x12, x8, x9)

inst_1314:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x59018c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17001a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5359018c; op2val:0x4117001a;
   valaddr_reg:x11; val_offset:2584*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2584*FLEN/8, x12, x8, x9)

inst_1315:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x314b26 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x38d2cb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53b14b26; op2val:0x40b8d2cb;
   valaddr_reg:x11; val_offset:2586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2586*FLEN/8, x12, x8, x9)

inst_1316:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x314b26 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x38d2cb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53b14b26; op2val:0x40b8d2cb;
   valaddr_reg:x11; val_offset:2588*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2588*FLEN/8, x12, x8, x9)

inst_1317:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x314b26 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x38d2cb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53b14b26; op2val:0x40b8d2cb;
   valaddr_reg:x11; val_offset:2590*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2590*FLEN/8, x12, x8, x9)

inst_1318:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x314b26 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x38d2cb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53b14b26; op2val:0x40b8d2cb;
   valaddr_reg:x11; val_offset:2592*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2592*FLEN/8, x12, x8, x9)

inst_1319:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x314b26 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x38d2cb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53b14b26; op2val:0x40b8d2cb;
   valaddr_reg:x11; val_offset:2594*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2594*FLEN/8, x12, x8, x9)

inst_1320:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2b75ad and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f1cab and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ab75ad; op2val:0x3fbf1cab;
   valaddr_reg:x11; val_offset:2596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2596*FLEN/8, x12, x8, x9)

inst_1321:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2b75ad and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f1cab and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ab75ad; op2val:0x3fbf1cab;
   valaddr_reg:x11; val_offset:2598*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2598*FLEN/8, x12, x8, x9)

inst_1322:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2b75ad and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f1cab and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ab75ad; op2val:0x3fbf1cab;
   valaddr_reg:x11; val_offset:2600*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2600*FLEN/8, x12, x8, x9)

inst_1323:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2b75ad and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f1cab and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ab75ad; op2val:0x3fbf1cab;
   valaddr_reg:x11; val_offset:2602*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2602*FLEN/8, x12, x8, x9)

inst_1324:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2b75ad and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f1cab and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ab75ad; op2val:0x3fbf1cab;
   valaddr_reg:x11; val_offset:2604*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2604*FLEN/8, x12, x8, x9)

inst_1325:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x78b483 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03c122 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54f8b483; op2val:0x3f83c122;
   valaddr_reg:x11; val_offset:2606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2606*FLEN/8, x12, x8, x9)

inst_1326:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x78b483 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03c122 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54f8b483; op2val:0x3f83c122;
   valaddr_reg:x11; val_offset:2608*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2608*FLEN/8, x12, x8, x9)

inst_1327:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x78b483 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03c122 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54f8b483; op2val:0x3f83c122;
   valaddr_reg:x11; val_offset:2610*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2610*FLEN/8, x12, x8, x9)

inst_1328:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x78b483 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03c122 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54f8b483; op2val:0x3f83c122;
   valaddr_reg:x11; val_offset:2612*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2612*FLEN/8, x12, x8, x9)

inst_1329:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x78b483 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03c122 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54f8b483; op2val:0x3f83c122;
   valaddr_reg:x11; val_offset:2614*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2614*FLEN/8, x12, x8, x9)

inst_1330:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x4bd817 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x20c012 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x52cbd817; op2val:0x41a0c012;
   valaddr_reg:x11; val_offset:2616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2616*FLEN/8, x12, x8, x9)

inst_1331:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x4bd817 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x20c012 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x52cbd817; op2val:0x41a0c012;
   valaddr_reg:x11; val_offset:2618*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2618*FLEN/8, x12, x8, x9)

inst_1332:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x4bd817 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x20c012 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x52cbd817; op2val:0x41a0c012;
   valaddr_reg:x11; val_offset:2620*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2620*FLEN/8, x12, x8, x9)

inst_1333:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x4bd817 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x20c012 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x52cbd817; op2val:0x41a0c012;
   valaddr_reg:x11; val_offset:2622*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2622*FLEN/8, x12, x8, x9)

inst_1334:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x4bd817 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x20c012 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x52cbd817; op2val:0x41a0c012;
   valaddr_reg:x11; val_offset:2624*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2624*FLEN/8, x12, x8, x9)

inst_1335:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7752bb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x047d99 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53f752bb; op2val:0x40847d99;
   valaddr_reg:x11; val_offset:2626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2626*FLEN/8, x12, x8, x9)

inst_1336:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7752bb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x047d99 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53f752bb; op2val:0x40847d99;
   valaddr_reg:x11; val_offset:2628*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2628*FLEN/8, x12, x8, x9)

inst_1337:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7752bb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x047d99 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53f752bb; op2val:0x40847d99;
   valaddr_reg:x11; val_offset:2630*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2630*FLEN/8, x12, x8, x9)

inst_1338:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7752bb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x047d99 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53f752bb; op2val:0x40847d99;
   valaddr_reg:x11; val_offset:2632*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2632*FLEN/8, x12, x8, x9)

inst_1339:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7752bb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x047d99 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53f752bb; op2val:0x40847d99;
   valaddr_reg:x11; val_offset:2634*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2634*FLEN/8, x12, x8, x9)

inst_1340:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0f0b53 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x651373 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x548f0b53; op2val:0x3fe51373;
   valaddr_reg:x11; val_offset:2636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2636*FLEN/8, x12, x8, x9)

inst_1341:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0f0b53 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x651373 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x548f0b53; op2val:0x3fe51373;
   valaddr_reg:x11; val_offset:2638*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2638*FLEN/8, x12, x8, x9)

inst_1342:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0f0b53 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x651373 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x548f0b53; op2val:0x3fe51373;
   valaddr_reg:x11; val_offset:2640*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2640*FLEN/8, x12, x8, x9)

inst_1343:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0f0b53 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x651373 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x548f0b53; op2val:0x3fe51373;
   valaddr_reg:x11; val_offset:2642*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2642*FLEN/8, x12, x8, x9)

inst_1344:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0f0b53 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x651373 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x548f0b53; op2val:0x3fe51373;
   valaddr_reg:x11; val_offset:2644*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2644*FLEN/8, x12, x8, x9)

inst_1345:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x008d7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ee63e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54808d7c; op2val:0x3ffee63e;
   valaddr_reg:x11; val_offset:2646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2646*FLEN/8, x12, x8, x9)

inst_1346:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x008d7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ee63e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54808d7c; op2val:0x3ffee63e;
   valaddr_reg:x11; val_offset:2648*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2648*FLEN/8, x12, x8, x9)

inst_1347:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x008d7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ee63e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54808d7c; op2val:0x3ffee63e;
   valaddr_reg:x11; val_offset:2650*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2650*FLEN/8, x12, x8, x9)

inst_1348:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x008d7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ee63e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54808d7c; op2val:0x3ffee63e;
   valaddr_reg:x11; val_offset:2652*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2652*FLEN/8, x12, x8, x9)

inst_1349:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x008d7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ee63e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54808d7c; op2val:0x3ffee63e;
   valaddr_reg:x11; val_offset:2654*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2654*FLEN/8, x12, x8, x9)

inst_1350:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4c65ca and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2050a2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53cc65ca; op2val:0x40a050a2;
   valaddr_reg:x11; val_offset:2656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2656*FLEN/8, x12, x8, x9)

inst_1351:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4c65ca and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2050a2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53cc65ca; op2val:0x40a050a2;
   valaddr_reg:x11; val_offset:2658*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2658*FLEN/8, x12, x8, x9)

inst_1352:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4c65ca and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2050a2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53cc65ca; op2val:0x40a050a2;
   valaddr_reg:x11; val_offset:2660*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2660*FLEN/8, x12, x8, x9)

inst_1353:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4c65ca and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2050a2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53cc65ca; op2val:0x40a050a2;
   valaddr_reg:x11; val_offset:2662*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2662*FLEN/8, x12, x8, x9)

inst_1354:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4c65ca and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2050a2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53cc65ca; op2val:0x40a050a2;
   valaddr_reg:x11; val_offset:2664*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2664*FLEN/8, x12, x8, x9)

inst_1355:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5271c7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1bb564 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54d271c7; op2val:0x3f9bb564;
   valaddr_reg:x11; val_offset:2666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2666*FLEN/8, x12, x8, x9)

inst_1356:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5271c7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1bb564 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54d271c7; op2val:0x3f9bb564;
   valaddr_reg:x11; val_offset:2668*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2668*FLEN/8, x12, x8, x9)

inst_1357:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5271c7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1bb564 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54d271c7; op2val:0x3f9bb564;
   valaddr_reg:x11; val_offset:2670*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2670*FLEN/8, x12, x8, x9)

inst_1358:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5271c7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1bb564 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54d271c7; op2val:0x3f9bb564;
   valaddr_reg:x11; val_offset:2672*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2672*FLEN/8, x12, x8, x9)

inst_1359:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5271c7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1bb564 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54d271c7; op2val:0x3f9bb564;
   valaddr_reg:x11; val_offset:2674*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2674*FLEN/8, x12, x8, x9)

inst_1360:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2e8d71 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3bb9ca and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ae8d71; op2val:0x3fbbb9ca;
   valaddr_reg:x11; val_offset:2676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2676*FLEN/8, x12, x8, x9)

inst_1361:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2e8d71 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3bb9ca and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ae8d71; op2val:0x3fbbb9ca;
   valaddr_reg:x11; val_offset:2678*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2678*FLEN/8, x12, x8, x9)

inst_1362:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2e8d71 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3bb9ca and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ae8d71; op2val:0x3fbbb9ca;
   valaddr_reg:x11; val_offset:2680*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2680*FLEN/8, x12, x8, x9)

inst_1363:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2e8d71 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3bb9ca and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ae8d71; op2val:0x3fbbb9ca;
   valaddr_reg:x11; val_offset:2682*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2682*FLEN/8, x12, x8, x9)

inst_1364:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2e8d71 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3bb9ca and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54ae8d71; op2val:0x3fbbb9ca;
   valaddr_reg:x11; val_offset:2684*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2684*FLEN/8, x12, x8, x9)

inst_1365:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x0f534d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x64a06a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x538f534d; op2val:0x40e4a06a;
   valaddr_reg:x11; val_offset:2686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2686*FLEN/8, x12, x8, x9)

inst_1366:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x0f534d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x64a06a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x538f534d; op2val:0x40e4a06a;
   valaddr_reg:x11; val_offset:2688*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2688*FLEN/8, x12, x8, x9)

inst_1367:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x0f534d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x64a06a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x538f534d; op2val:0x40e4a06a;
   valaddr_reg:x11; val_offset:2690*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2690*FLEN/8, x12, x8, x9)

inst_1368:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x0f534d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x64a06a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x538f534d; op2val:0x40e4a06a;
   valaddr_reg:x11; val_offset:2692*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2692*FLEN/8, x12, x8, x9)

inst_1369:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x0f534d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x64a06a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x538f534d; op2val:0x40e4a06a;
   valaddr_reg:x11; val_offset:2694*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2694*FLEN/8, x12, x8, x9)

inst_1370:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x06ed04 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x72dbfc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5386ed04; op2val:0x40f2dbfc;
   valaddr_reg:x11; val_offset:2696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2696*FLEN/8, x12, x8, x9)

inst_1371:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x06ed04 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x72dbfc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5386ed04; op2val:0x40f2dbfc;
   valaddr_reg:x11; val_offset:2698*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2698*FLEN/8, x12, x8, x9)

inst_1372:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x06ed04 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x72dbfc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5386ed04; op2val:0x40f2dbfc;
   valaddr_reg:x11; val_offset:2700*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2700*FLEN/8, x12, x8, x9)

inst_1373:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x06ed04 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x72dbfc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5386ed04; op2val:0x40f2dbfc;
   valaddr_reg:x11; val_offset:2702*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2702*FLEN/8, x12, x8, x9)

inst_1374:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x06ed04 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x72dbfc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5386ed04; op2val:0x40f2dbfc;
   valaddr_reg:x11; val_offset:2704*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2704*FLEN/8, x12, x8, x9)

inst_1375:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5daa8d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x13d36c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x535daa8d; op2val:0x4113d36c;
   valaddr_reg:x11; val_offset:2706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2706*FLEN/8, x12, x8, x9)

inst_1376:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5daa8d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x13d36c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x535daa8d; op2val:0x4113d36c;
   valaddr_reg:x11; val_offset:2708*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2708*FLEN/8, x12, x8, x9)

inst_1377:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5daa8d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x13d36c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x535daa8d; op2val:0x4113d36c;
   valaddr_reg:x11; val_offset:2710*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2710*FLEN/8, x12, x8, x9)

inst_1378:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5daa8d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x13d36c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x535daa8d; op2val:0x4113d36c;
   valaddr_reg:x11; val_offset:2712*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2712*FLEN/8, x12, x8, x9)

inst_1379:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5daa8d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x13d36c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x535daa8d; op2val:0x4113d36c;
   valaddr_reg:x11; val_offset:2714*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2714*FLEN/8, x12, x8, x9)

inst_1380:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x59bab5 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x167fb0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x52d9bab5; op2val:0x41967fb0;
   valaddr_reg:x11; val_offset:2716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2716*FLEN/8, x12, x8, x9)

inst_1381:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x59bab5 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x167fb0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x52d9bab5; op2val:0x41967fb0;
   valaddr_reg:x11; val_offset:2718*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2718*FLEN/8, x12, x8, x9)

inst_1382:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x59bab5 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x167fb0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x52d9bab5; op2val:0x41967fb0;
   valaddr_reg:x11; val_offset:2720*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2720*FLEN/8, x12, x8, x9)

inst_1383:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x59bab5 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x167fb0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x52d9bab5; op2val:0x41967fb0;
   valaddr_reg:x11; val_offset:2722*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2722*FLEN/8, x12, x8, x9)

inst_1384:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x59bab5 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x167fb0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x52d9bab5; op2val:0x41967fb0;
   valaddr_reg:x11; val_offset:2724*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2724*FLEN/8, x12, x8, x9)

inst_1385:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x421d8c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28ce89 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54421d8c; op2val:0x4028ce89;
   valaddr_reg:x11; val_offset:2726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2726*FLEN/8, x12, x8, x9)

inst_1386:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x421d8c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28ce89 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54421d8c; op2val:0x4028ce89;
   valaddr_reg:x11; val_offset:2728*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2728*FLEN/8, x12, x8, x9)

inst_1387:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x421d8c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28ce89 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54421d8c; op2val:0x4028ce89;
   valaddr_reg:x11; val_offset:2730*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2730*FLEN/8, x12, x8, x9)

inst_1388:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x421d8c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28ce89 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54421d8c; op2val:0x4028ce89;
   valaddr_reg:x11; val_offset:2732*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2732*FLEN/8, x12, x8, x9)

inst_1389:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x421d8c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28ce89 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54421d8c; op2val:0x4028ce89;
   valaddr_reg:x11; val_offset:2734*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2734*FLEN/8, x12, x8, x9)

inst_1390:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5bcd96 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151433 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54dbcd96; op2val:0x3f951433;
   valaddr_reg:x11; val_offset:2736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2736*FLEN/8, x12, x8, x9)

inst_1391:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5bcd96 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151433 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54dbcd96; op2val:0x3f951433;
   valaddr_reg:x11; val_offset:2738*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2738*FLEN/8, x12, x8, x9)

inst_1392:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5bcd96 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151433 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54dbcd96; op2val:0x3f951433;
   valaddr_reg:x11; val_offset:2740*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2740*FLEN/8, x12, x8, x9)

inst_1393:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5bcd96 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151433 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54dbcd96; op2val:0x3f951433;
   valaddr_reg:x11; val_offset:2742*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2742*FLEN/8, x12, x8, x9)

inst_1394:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5bcd96 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151433 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54dbcd96; op2val:0x3f951433;
   valaddr_reg:x11; val_offset:2744*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2744*FLEN/8, x12, x8, x9)

inst_1395:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x37b3a3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x32604a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54b7b3a3; op2val:0x3fb2604a;
   valaddr_reg:x11; val_offset:2746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2746*FLEN/8, x12, x8, x9)

inst_1396:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x37b3a3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x32604a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54b7b3a3; op2val:0x3fb2604a;
   valaddr_reg:x11; val_offset:2748*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2748*FLEN/8, x12, x8, x9)

inst_1397:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x37b3a3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x32604a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54b7b3a3; op2val:0x3fb2604a;
   valaddr_reg:x11; val_offset:2750*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2750*FLEN/8, x12, x8, x9)

inst_1398:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x37b3a3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x32604a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54b7b3a3; op2val:0x3fb2604a;
   valaddr_reg:x11; val_offset:2752*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2752*FLEN/8, x12, x8, x9)

inst_1399:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x37b3a3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x32604a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54b7b3a3; op2val:0x3fb2604a;
   valaddr_reg:x11; val_offset:2754*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2754*FLEN/8, x12, x8, x9)

inst_1400:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6abfaf and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0b9668 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54eabfaf; op2val:0x3f8b9668;
   valaddr_reg:x11; val_offset:2756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2756*FLEN/8, x12, x8, x9)

inst_1401:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6abfaf and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0b9668 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54eabfaf; op2val:0x3f8b9668;
   valaddr_reg:x11; val_offset:2758*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2758*FLEN/8, x12, x8, x9)

inst_1402:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6abfaf and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0b9668 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54eabfaf; op2val:0x3f8b9668;
   valaddr_reg:x11; val_offset:2760*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2760*FLEN/8, x12, x8, x9)

inst_1403:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6abfaf and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0b9668 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54eabfaf; op2val:0x3f8b9668;
   valaddr_reg:x11; val_offset:2762*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2762*FLEN/8, x12, x8, x9)

inst_1404:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6abfaf and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0b9668 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54eabfaf; op2val:0x3f8b9668;
   valaddr_reg:x11; val_offset:2764*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2764*FLEN/8, x12, x8, x9)

inst_1405:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x57f3c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17bcbb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5357f3c8; op2val:0x4117bcbb;
   valaddr_reg:x11; val_offset:2766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2766*FLEN/8, x12, x8, x9)

inst_1406:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x57f3c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17bcbb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5357f3c8; op2val:0x4117bcbb;
   valaddr_reg:x11; val_offset:2768*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2768*FLEN/8, x12, x8, x9)

inst_1407:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x57f3c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17bcbb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5357f3c8; op2val:0x4117bcbb;
   valaddr_reg:x11; val_offset:2770*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2770*FLEN/8, x12, x8, x9)

inst_1408:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x57f3c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17bcbb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5357f3c8; op2val:0x4117bcbb;
   valaddr_reg:x11; val_offset:2772*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2772*FLEN/8, x12, x8, x9)

inst_1409:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x57f3c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17bcbb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x5357f3c8; op2val:0x4117bcbb;
   valaddr_reg:x11; val_offset:2774*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2774*FLEN/8, x12, x8, x9)

inst_1410:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x208bb5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c1a94 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54a08bb5; op2val:0x3fcc1a94;
   valaddr_reg:x11; val_offset:2776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2776*FLEN/8, x12, x8, x9)

inst_1411:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x208bb5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c1a94 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54a08bb5; op2val:0x3fcc1a94;
   valaddr_reg:x11; val_offset:2778*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2778*FLEN/8, x12, x8, x9)

inst_1412:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x208bb5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c1a94 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54a08bb5; op2val:0x3fcc1a94;
   valaddr_reg:x11; val_offset:2780*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2780*FLEN/8, x12, x8, x9)

inst_1413:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x208bb5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c1a94 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54a08bb5; op2val:0x3fcc1a94;
   valaddr_reg:x11; val_offset:2782*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2782*FLEN/8, x12, x8, x9)

inst_1414:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x208bb5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c1a94 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54a08bb5; op2val:0x3fcc1a94;
   valaddr_reg:x11; val_offset:2784*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2784*FLEN/8, x12, x8, x9)

inst_1415:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x412d7d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29a04f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54412d7d; op2val:0x4029a04f;
   valaddr_reg:x11; val_offset:2786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2786*FLEN/8, x12, x8, x9)

inst_1416:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x412d7d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29a04f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54412d7d; op2val:0x4029a04f;
   valaddr_reg:x11; val_offset:2788*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2788*FLEN/8, x12, x8, x9)

inst_1417:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x412d7d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29a04f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54412d7d; op2val:0x4029a04f;
   valaddr_reg:x11; val_offset:2790*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2790*FLEN/8, x12, x8, x9)

inst_1418:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x412d7d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29a04f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54412d7d; op2val:0x4029a04f;
   valaddr_reg:x11; val_offset:2792*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2792*FLEN/8, x12, x8, x9)

inst_1419:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x412d7d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29a04f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54412d7d; op2val:0x4029a04f;
   valaddr_reg:x11; val_offset:2794*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2794*FLEN/8, x12, x8, x9)

inst_1420:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5c9a1e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1489fa and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x545c9a1e; op2val:0x401489fa;
   valaddr_reg:x11; val_offset:2796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2796*FLEN/8, x12, x8, x9)

inst_1421:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5c9a1e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1489fa and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x545c9a1e; op2val:0x401489fa;
   valaddr_reg:x11; val_offset:2798*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2798*FLEN/8, x12, x8, x9)

inst_1422:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5c9a1e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1489fa and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x545c9a1e; op2val:0x401489fa;
   valaddr_reg:x11; val_offset:2800*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2800*FLEN/8, x12, x8, x9)

inst_1423:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5c9a1e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1489fa and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x545c9a1e; op2val:0x401489fa;
   valaddr_reg:x11; val_offset:2802*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2802*FLEN/8, x12, x8, x9)

inst_1424:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5c9a1e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1489fa and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x545c9a1e; op2val:0x401489fa;
   valaddr_reg:x11; val_offset:2804*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2804*FLEN/8, x12, x8, x9)

inst_1425:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4bdb15 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x20bdb7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x544bdb15; op2val:0x4020bdb7;
   valaddr_reg:x11; val_offset:2806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2806*FLEN/8, x12, x8, x9)

inst_1426:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4bdb15 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x20bdb7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x544bdb15; op2val:0x4020bdb7;
   valaddr_reg:x11; val_offset:2808*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2808*FLEN/8, x12, x8, x9)

inst_1427:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4bdb15 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x20bdb7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x544bdb15; op2val:0x4020bdb7;
   valaddr_reg:x11; val_offset:2810*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2810*FLEN/8, x12, x8, x9)

inst_1428:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4bdb15 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x20bdb7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x544bdb15; op2val:0x4020bdb7;
   valaddr_reg:x11; val_offset:2812*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2812*FLEN/8, x12, x8, x9)

inst_1429:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4bdb15 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x20bdb7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x544bdb15; op2val:0x4020bdb7;
   valaddr_reg:x11; val_offset:2814*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2814*FLEN/8, x12, x8, x9)

inst_1430:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4fbec8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dbb4d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54cfbec8; op2val:0x3f9dbb4d;
   valaddr_reg:x11; val_offset:2816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2816*FLEN/8, x12, x8, x9)

inst_1431:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4fbec8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dbb4d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54cfbec8; op2val:0x3f9dbb4d;
   valaddr_reg:x11; val_offset:2818*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2818*FLEN/8, x12, x8, x9)

inst_1432:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4fbec8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dbb4d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54cfbec8; op2val:0x3f9dbb4d;
   valaddr_reg:x11; val_offset:2820*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2820*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_11)

inst_1433:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4fbec8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dbb4d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54cfbec8; op2val:0x3f9dbb4d;
   valaddr_reg:x11; val_offset:2822*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2822*FLEN/8, x12, x8, x9)

inst_1434:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4fbec8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dbb4d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54cfbec8; op2val:0x3f9dbb4d;
   valaddr_reg:x11; val_offset:2824*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2824*FLEN/8, x12, x8, x9)

inst_1435:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x721035 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x075e9a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54721035; op2val:0x40075e9a;
   valaddr_reg:x11; val_offset:2826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2826*FLEN/8, x12, x8, x9)

inst_1436:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x721035 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x075e9a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54721035; op2val:0x40075e9a;
   valaddr_reg:x11; val_offset:2828*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2828*FLEN/8, x12, x8, x9)

inst_1437:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x721035 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x075e9a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54721035; op2val:0x40075e9a;
   valaddr_reg:x11; val_offset:2830*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2830*FLEN/8, x12, x8, x9)

inst_1438:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x721035 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x075e9a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54721035; op2val:0x40075e9a;
   valaddr_reg:x11; val_offset:2832*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2832*FLEN/8, x12, x8, x9)

inst_1439:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x721035 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x075e9a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54721035; op2val:0x40075e9a;
   valaddr_reg:x11; val_offset:2834*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2834*FLEN/8, x12, x8, x9)

inst_1440:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x43ee46 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x273e25 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54c3ee46; op2val:0x3fa73e25;
   valaddr_reg:x11; val_offset:2836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2836*FLEN/8, x12, x8, x9)

inst_1441:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x43ee46 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x273e25 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54c3ee46; op2val:0x3fa73e25;
   valaddr_reg:x11; val_offset:2838*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2838*FLEN/8, x12, x8, x9)

inst_1442:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x43ee46 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x273e25 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54c3ee46; op2val:0x3fa73e25;
   valaddr_reg:x11; val_offset:2840*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2840*FLEN/8, x12, x8, x9)

inst_1443:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x43ee46 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x273e25 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54c3ee46; op2val:0x3fa73e25;
   valaddr_reg:x11; val_offset:2842*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2842*FLEN/8, x12, x8, x9)

inst_1444:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x43ee46 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x273e25 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54c3ee46; op2val:0x3fa73e25;
   valaddr_reg:x11; val_offset:2844*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2844*FLEN/8, x12, x8, x9)

inst_1445:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6a99f9 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bacd8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53ea99f9; op2val:0x408bacd8;
   valaddr_reg:x11; val_offset:2846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2846*FLEN/8, x12, x8, x9)

inst_1446:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6a99f9 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bacd8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53ea99f9; op2val:0x408bacd8;
   valaddr_reg:x11; val_offset:2848*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2848*FLEN/8, x12, x8, x9)

inst_1447:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6a99f9 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bacd8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53ea99f9; op2val:0x408bacd8;
   valaddr_reg:x11; val_offset:2850*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2850*FLEN/8, x12, x8, x9)

inst_1448:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6a99f9 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bacd8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53ea99f9; op2val:0x408bacd8;
   valaddr_reg:x11; val_offset:2852*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2852*FLEN/8, x12, x8, x9)

inst_1449:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6a99f9 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bacd8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53ea99f9; op2val:0x408bacd8;
   valaddr_reg:x11; val_offset:2854*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2854*FLEN/8, x12, x8, x9)

inst_1450:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x32f555 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x371aa5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54b2f555; op2val:0x3fb71aa5;
   valaddr_reg:x11; val_offset:2856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2856*FLEN/8, x12, x8, x9)

inst_1451:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x32f555 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x371aa5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54b2f555; op2val:0x3fb71aa5;
   valaddr_reg:x11; val_offset:2858*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2858*FLEN/8, x12, x8, x9)

inst_1452:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x32f555 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x371aa5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54b2f555; op2val:0x3fb71aa5;
   valaddr_reg:x11; val_offset:2860*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2860*FLEN/8, x12, x8, x9)

inst_1453:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x32f555 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x371aa5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54b2f555; op2val:0x3fb71aa5;
   valaddr_reg:x11; val_offset:2862*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2862*FLEN/8, x12, x8, x9)

inst_1454:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x32f555 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x371aa5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54b2f555; op2val:0x3fb71aa5;
   valaddr_reg:x11; val_offset:2864*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2864*FLEN/8, x12, x8, x9)

inst_1455:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x7acc83 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x02a78d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x527acc83; op2val:0x4202a78d;
   valaddr_reg:x11; val_offset:2866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2866*FLEN/8, x12, x8, x9)

inst_1456:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x7acc83 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x02a78d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x527acc83; op2val:0x4202a78d;
   valaddr_reg:x11; val_offset:2868*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2868*FLEN/8, x12, x8, x9)

inst_1457:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x7acc83 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x02a78d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x527acc83; op2val:0x4202a78d;
   valaddr_reg:x11; val_offset:2870*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2870*FLEN/8, x12, x8, x9)

inst_1458:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x7acc83 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x02a78d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x527acc83; op2val:0x4202a78d;
   valaddr_reg:x11; val_offset:2872*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2872*FLEN/8, x12, x8, x9)

inst_1459:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x7acc83 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x02a78d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x527acc83; op2val:0x4202a78d;
   valaddr_reg:x11; val_offset:2874*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2874*FLEN/8, x12, x8, x9)

inst_1460:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4edc9f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1e67c0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53cedc9f; op2val:0x409e67c0;
   valaddr_reg:x11; val_offset:2876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2876*FLEN/8, x12, x8, x9)

inst_1461:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4edc9f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1e67c0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53cedc9f; op2val:0x409e67c0;
   valaddr_reg:x11; val_offset:2878*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2878*FLEN/8, x12, x8, x9)

inst_1462:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4edc9f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1e67c0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53cedc9f; op2val:0x409e67c0;
   valaddr_reg:x11; val_offset:2880*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2880*FLEN/8, x12, x8, x9)

inst_1463:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4edc9f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1e67c0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53cedc9f; op2val:0x409e67c0;
   valaddr_reg:x11; val_offset:2882*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2882*FLEN/8, x12, x8, x9)

inst_1464:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4edc9f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1e67c0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x53cedc9f; op2val:0x409e67c0;
   valaddr_reg:x11; val_offset:2884*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2884*FLEN/8, x12, x8, x9)

inst_1465:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x146ca7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5cc5b4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54946ca7; op2val:0x3fdcc5b4;
   valaddr_reg:x11; val_offset:2886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2886*FLEN/8, x12, x8, x9)

inst_1466:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x146ca7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5cc5b4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54946ca7; op2val:0x3fdcc5b4;
   valaddr_reg:x11; val_offset:2888*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2888*FLEN/8, x12, x8, x9)

inst_1467:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x146ca7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5cc5b4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54946ca7; op2val:0x3fdcc5b4;
   valaddr_reg:x11; val_offset:2890*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2890*FLEN/8, x12, x8, x9)

inst_1468:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x146ca7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5cc5b4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54946ca7; op2val:0x3fdcc5b4;
   valaddr_reg:x11; val_offset:2892*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2892*FLEN/8, x12, x8, x9)

inst_1469:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x146ca7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5cc5b4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x54946ca7; op2val:0x3fdcc5b4;
   valaddr_reg:x11; val_offset:2894*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2894*FLEN/8, x12, x8, x9)

inst_1470:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3fc751 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x2add1c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ebfc751; op2val:0x2aaadd1c;
   valaddr_reg:x11; val_offset:2896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2896*FLEN/8, x12, x8, x9)

inst_1471:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3fc751 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x2add1c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ebfc751; op2val:0x2aaadd1c;
   valaddr_reg:x11; val_offset:2898*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2898*FLEN/8, x12, x8, x9)

inst_1472:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3fc751 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x2add1c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ebfc751; op2val:0x2aaadd1c;
   valaddr_reg:x11; val_offset:2900*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2900*FLEN/8, x12, x8, x9)

inst_1473:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3fc751 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x2add1c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ebfc751; op2val:0x2aaadd1c;
   valaddr_reg:x11; val_offset:2902*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2902*FLEN/8, x12, x8, x9)

inst_1474:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3fc751 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x2add1c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ebfc751; op2val:0x2aaadd1c;
   valaddr_reg:x11; val_offset:2904*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2904*FLEN/8, x12, x8, x9)

inst_1475:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x183f18 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x573ade and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e983f18; op2val:0x2ad73ade;
   valaddr_reg:x11; val_offset:2906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2906*FLEN/8, x12, x8, x9)

inst_1476:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x183f18 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x573ade and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e983f18; op2val:0x2ad73ade;
   valaddr_reg:x11; val_offset:2908*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2908*FLEN/8, x12, x8, x9)

inst_1477:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x183f18 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x573ade and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e983f18; op2val:0x2ad73ade;
   valaddr_reg:x11; val_offset:2910*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2910*FLEN/8, x12, x8, x9)

inst_1478:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x183f18 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x573ade and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e983f18; op2val:0x2ad73ade;
   valaddr_reg:x11; val_offset:2912*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2912*FLEN/8, x12, x8, x9)

inst_1479:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x183f18 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x573ade and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e983f18; op2val:0x2ad73ade;
   valaddr_reg:x11; val_offset:2914*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2914*FLEN/8, x12, x8, x9)

inst_1480:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x73c3ee and fs2 == 0 and fe2 == 0x54 and fm2 == 0x066ca2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f73c3ee; op2val:0x2a066ca2;
   valaddr_reg:x11; val_offset:2916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2916*FLEN/8, x12, x8, x9)

inst_1481:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x73c3ee and fs2 == 0 and fe2 == 0x54 and fm2 == 0x066ca2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f73c3ee; op2val:0x2a066ca2;
   valaddr_reg:x11; val_offset:2918*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2918*FLEN/8, x12, x8, x9)

inst_1482:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x73c3ee and fs2 == 0 and fe2 == 0x54 and fm2 == 0x066ca2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f73c3ee; op2val:0x2a066ca2;
   valaddr_reg:x11; val_offset:2920*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2920*FLEN/8, x12, x8, x9)

inst_1483:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x73c3ee and fs2 == 0 and fe2 == 0x54 and fm2 == 0x066ca2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f73c3ee; op2val:0x2a066ca2;
   valaddr_reg:x11; val_offset:2922*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2922*FLEN/8, x12, x8, x9)

inst_1484:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x73c3ee and fs2 == 0 and fe2 == 0x54 and fm2 == 0x066ca2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f73c3ee; op2val:0x2a066ca2;
   valaddr_reg:x11; val_offset:2924*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2924*FLEN/8, x12, x8, x9)

inst_1485:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x352a0a and fs2 == 0 and fe2 == 0x56 and fm2 == 0x34dfe3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e352a0a; op2val:0x2b34dfe3;
   valaddr_reg:x11; val_offset:2926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2926*FLEN/8, x12, x8, x9)

inst_1486:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x352a0a and fs2 == 0 and fe2 == 0x56 and fm2 == 0x34dfe3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e352a0a; op2val:0x2b34dfe3;
   valaddr_reg:x11; val_offset:2928*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2928*FLEN/8, x12, x8, x9)

inst_1487:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x352a0a and fs2 == 0 and fe2 == 0x56 and fm2 == 0x34dfe3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e352a0a; op2val:0x2b34dfe3;
   valaddr_reg:x11; val_offset:2930*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2930*FLEN/8, x12, x8, x9)

inst_1488:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x352a0a and fs2 == 0 and fe2 == 0x56 and fm2 == 0x34dfe3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e352a0a; op2val:0x2b34dfe3;
   valaddr_reg:x11; val_offset:2932*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2932*FLEN/8, x12, x8, x9)

inst_1489:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x352a0a and fs2 == 0 and fe2 == 0x56 and fm2 == 0x34dfe3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e352a0a; op2val:0x2b34dfe3;
   valaddr_reg:x11; val_offset:2934*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2934*FLEN/8, x12, x8, x9)

inst_1490:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4dc621 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x1f3e21 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ecdc621; op2val:0x2a9f3e21;
   valaddr_reg:x11; val_offset:2936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2936*FLEN/8, x12, x8, x9)

inst_1491:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4dc621 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x1f3e21 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ecdc621; op2val:0x2a9f3e21;
   valaddr_reg:x11; val_offset:2938*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2938*FLEN/8, x12, x8, x9)

inst_1492:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4dc621 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x1f3e21 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ecdc621; op2val:0x2a9f3e21;
   valaddr_reg:x11; val_offset:2940*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2940*FLEN/8, x12, x8, x9)

inst_1493:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4dc621 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x1f3e21 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ecdc621; op2val:0x2a9f3e21;
   valaddr_reg:x11; val_offset:2942*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2942*FLEN/8, x12, x8, x9)

inst_1494:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4dc621 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x1f3e21 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ecdc621; op2val:0x2a9f3e21;
   valaddr_reg:x11; val_offset:2944*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2944*FLEN/8, x12, x8, x9)

inst_1495:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4dda80 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1f2e60 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4dda80; op2val:0x2a1f2e60;
   valaddr_reg:x11; val_offset:2946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2946*FLEN/8, x12, x8, x9)

inst_1496:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4dda80 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1f2e60 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4dda80; op2val:0x2a1f2e60;
   valaddr_reg:x11; val_offset:2948*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2948*FLEN/8, x12, x8, x9)

inst_1497:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4dda80 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1f2e60 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4dda80; op2val:0x2a1f2e60;
   valaddr_reg:x11; val_offset:2950*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2950*FLEN/8, x12, x8, x9)

inst_1498:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4dda80 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1f2e60 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4dda80; op2val:0x2a1f2e60;
   valaddr_reg:x11; val_offset:2952*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2952*FLEN/8, x12, x8, x9)

inst_1499:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4dda80 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1f2e60 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4dda80; op2val:0x2a1f2e60;
   valaddr_reg:x11; val_offset:2954*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2954*FLEN/8, x12, x8, x9)

inst_1500:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a7361 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x2fbf06 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eba7361; op2val:0x2aafbf06;
   valaddr_reg:x11; val_offset:2956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2956*FLEN/8, x12, x8, x9)

inst_1501:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a7361 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x2fbf06 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eba7361; op2val:0x2aafbf06;
   valaddr_reg:x11; val_offset:2958*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2958*FLEN/8, x12, x8, x9)

inst_1502:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a7361 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x2fbf06 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eba7361; op2val:0x2aafbf06;
   valaddr_reg:x11; val_offset:2960*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2960*FLEN/8, x12, x8, x9)

inst_1503:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a7361 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x2fbf06 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eba7361; op2val:0x2aafbf06;
   valaddr_reg:x11; val_offset:2962*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2962*FLEN/8, x12, x8, x9)

inst_1504:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a7361 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x2fbf06 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eba7361; op2val:0x2aafbf06;
   valaddr_reg:x11; val_offset:2964*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2964*FLEN/8, x12, x8, x9)

inst_1505:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x504313 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1d571b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f504313; op2val:0x2a1d571b;
   valaddr_reg:x11; val_offset:2966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2966*FLEN/8, x12, x8, x9)

inst_1506:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x504313 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1d571b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f504313; op2val:0x2a1d571b;
   valaddr_reg:x11; val_offset:2968*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2968*FLEN/8, x12, x8, x9)

inst_1507:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x504313 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1d571b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f504313; op2val:0x2a1d571b;
   valaddr_reg:x11; val_offset:2970*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2970*FLEN/8, x12, x8, x9)

inst_1508:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x504313 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1d571b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f504313; op2val:0x2a1d571b;
   valaddr_reg:x11; val_offset:2972*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2972*FLEN/8, x12, x8, x9)

inst_1509:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x504313 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1d571b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f504313; op2val:0x2a1d571b;
   valaddr_reg:x11; val_offset:2974*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2974*FLEN/8, x12, x8, x9)

inst_1510:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x346b39 and fs2 == 0 and fe2 == 0x59 and fm2 == 0x359f30 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3cb46b39; op2val:0x2cb59f30;
   valaddr_reg:x11; val_offset:2976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2976*FLEN/8, x12, x8, x9)

inst_1511:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x346b39 and fs2 == 0 and fe2 == 0x59 and fm2 == 0x359f30 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3cb46b39; op2val:0x2cb59f30;
   valaddr_reg:x11; val_offset:2978*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2978*FLEN/8, x12, x8, x9)

inst_1512:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x346b39 and fs2 == 0 and fe2 == 0x59 and fm2 == 0x359f30 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3cb46b39; op2val:0x2cb59f30;
   valaddr_reg:x11; val_offset:2980*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2980*FLEN/8, x12, x8, x9)

inst_1513:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x346b39 and fs2 == 0 and fe2 == 0x59 and fm2 == 0x359f30 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3cb46b39; op2val:0x2cb59f30;
   valaddr_reg:x11; val_offset:2982*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2982*FLEN/8, x12, x8, x9)

inst_1514:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x346b39 and fs2 == 0 and fe2 == 0x59 and fm2 == 0x359f30 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3cb46b39; op2val:0x2cb59f30;
   valaddr_reg:x11; val_offset:2984*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2984*FLEN/8, x12, x8, x9)

inst_1515:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x093f10 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x6ec0d0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f093f10; op2val:0x2a6ec0d0;
   valaddr_reg:x11; val_offset:2986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2986*FLEN/8, x12, x8, x9)

inst_1516:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x093f10 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x6ec0d0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f093f10; op2val:0x2a6ec0d0;
   valaddr_reg:x11; val_offset:2988*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2988*FLEN/8, x12, x8, x9)

inst_1517:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x093f10 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x6ec0d0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f093f10; op2val:0x2a6ec0d0;
   valaddr_reg:x11; val_offset:2990*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 2990*FLEN/8, x12, x8, x9)

inst_1518:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x093f10 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x6ec0d0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f093f10; op2val:0x2a6ec0d0;
   valaddr_reg:x11; val_offset:2992*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 2992*FLEN/8, x12, x8, x9)

inst_1519:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x093f10 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x6ec0d0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f093f10; op2val:0x2a6ec0d0;
   valaddr_reg:x11; val_offset:2994*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 2994*FLEN/8, x12, x8, x9)

inst_1520:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a87c3 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x21cb05 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4a87c3; op2val:0x2a21cb05;
   valaddr_reg:x11; val_offset:2996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 2996*FLEN/8, x12, x8, x9)

inst_1521:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a87c3 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x21cb05 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4a87c3; op2val:0x2a21cb05;
   valaddr_reg:x11; val_offset:2998*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 2998*FLEN/8, x12, x8, x9)

inst_1522:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a87c3 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x21cb05 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4a87c3; op2val:0x2a21cb05;
   valaddr_reg:x11; val_offset:3000*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3000*FLEN/8, x12, x8, x9)

inst_1523:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a87c3 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x21cb05 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4a87c3; op2val:0x2a21cb05;
   valaddr_reg:x11; val_offset:3002*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3002*FLEN/8, x12, x8, x9)

inst_1524:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a87c3 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x21cb05 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4a87c3; op2val:0x2a21cb05;
   valaddr_reg:x11; val_offset:3004*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3004*FLEN/8, x12, x8, x9)

inst_1525:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x191efd and fs2 == 0 and fe2 == 0x55 and fm2 == 0x560029 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e991efd; op2val:0x2ad60029;
   valaddr_reg:x11; val_offset:3006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3006*FLEN/8, x12, x8, x9)

inst_1526:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x191efd and fs2 == 0 and fe2 == 0x55 and fm2 == 0x560029 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e991efd; op2val:0x2ad60029;
   valaddr_reg:x11; val_offset:3008*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3008*FLEN/8, x12, x8, x9)

inst_1527:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x191efd and fs2 == 0 and fe2 == 0x55 and fm2 == 0x560029 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e991efd; op2val:0x2ad60029;
   valaddr_reg:x11; val_offset:3010*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3010*FLEN/8, x12, x8, x9)

inst_1528:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x191efd and fs2 == 0 and fe2 == 0x55 and fm2 == 0x560029 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e991efd; op2val:0x2ad60029;
   valaddr_reg:x11; val_offset:3012*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3012*FLEN/8, x12, x8, x9)

inst_1529:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x191efd and fs2 == 0 and fe2 == 0x55 and fm2 == 0x560029 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e991efd; op2val:0x2ad60029;
   valaddr_reg:x11; val_offset:3014*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3014*FLEN/8, x12, x8, x9)

inst_1530:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x47c417 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x24082d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc7c417; op2val:0x2ba4082d;
   valaddr_reg:x11; val_offset:3016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3016*FLEN/8, x12, x8, x9)

inst_1531:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x47c417 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x24082d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc7c417; op2val:0x2ba4082d;
   valaddr_reg:x11; val_offset:3018*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3018*FLEN/8, x12, x8, x9)

inst_1532:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x47c417 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x24082d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc7c417; op2val:0x2ba4082d;
   valaddr_reg:x11; val_offset:3020*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3020*FLEN/8, x12, x8, x9)

inst_1533:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x47c417 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x24082d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc7c417; op2val:0x2ba4082d;
   valaddr_reg:x11; val_offset:3022*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3022*FLEN/8, x12, x8, x9)

inst_1534:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x47c417 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x24082d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3dc7c417; op2val:0x2ba4082d;
   valaddr_reg:x11; val_offset:3024*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3024*FLEN/8, x12, x8, x9)

inst_1535:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x165a29 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x59f10e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f165a29; op2val:0x2a59f10e;
   valaddr_reg:x11; val_offset:3026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3026*FLEN/8, x12, x8, x9)

inst_1536:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x165a29 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x59f10e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f165a29; op2val:0x2a59f10e;
   valaddr_reg:x11; val_offset:3028*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3028*FLEN/8, x12, x8, x9)

inst_1537:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x165a29 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x59f10e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f165a29; op2val:0x2a59f10e;
   valaddr_reg:x11; val_offset:3030*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3030*FLEN/8, x12, x8, x9)

inst_1538:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x165a29 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x59f10e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f165a29; op2val:0x2a59f10e;
   valaddr_reg:x11; val_offset:3032*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3032*FLEN/8, x12, x8, x9)

inst_1539:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x165a29 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x59f10e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f165a29; op2val:0x2a59f10e;
   valaddr_reg:x11; val_offset:3034*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3034*FLEN/8, x12, x8, x9)

inst_1540:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0f1fd0 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x64f2a7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8f1fd0; op2val:0x2ae4f2a7;
   valaddr_reg:x11; val_offset:3036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3036*FLEN/8, x12, x8, x9)

inst_1541:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0f1fd0 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x64f2a7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8f1fd0; op2val:0x2ae4f2a7;
   valaddr_reg:x11; val_offset:3038*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3038*FLEN/8, x12, x8, x9)

inst_1542:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0f1fd0 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x64f2a7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8f1fd0; op2val:0x2ae4f2a7;
   valaddr_reg:x11; val_offset:3040*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3040*FLEN/8, x12, x8, x9)

inst_1543:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0f1fd0 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x64f2a7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8f1fd0; op2val:0x2ae4f2a7;
   valaddr_reg:x11; val_offset:3042*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3042*FLEN/8, x12, x8, x9)

inst_1544:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0f1fd0 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x64f2a7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8f1fd0; op2val:0x2ae4f2a7;
   valaddr_reg:x11; val_offset:3044*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3044*FLEN/8, x12, x8, x9)

inst_1545:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e7621 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x3bd2e0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eae7621; op2val:0x2abbd2e0;
   valaddr_reg:x11; val_offset:3046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3046*FLEN/8, x12, x8, x9)

inst_1546:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e7621 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x3bd2e0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eae7621; op2val:0x2abbd2e0;
   valaddr_reg:x11; val_offset:3048*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3048*FLEN/8, x12, x8, x9)

inst_1547:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e7621 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x3bd2e0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eae7621; op2val:0x2abbd2e0;
   valaddr_reg:x11; val_offset:3050*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3050*FLEN/8, x12, x8, x9)

inst_1548:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e7621 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x3bd2e0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eae7621; op2val:0x2abbd2e0;
   valaddr_reg:x11; val_offset:3052*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3052*FLEN/8, x12, x8, x9)

inst_1549:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e7621 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x3bd2e0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eae7621; op2val:0x2abbd2e0;
   valaddr_reg:x11; val_offset:3054*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3054*FLEN/8, x12, x8, x9)

inst_1550:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186a27 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x56fe0f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e986a27; op2val:0x2ad6fe0f;
   valaddr_reg:x11; val_offset:3056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3056*FLEN/8, x12, x8, x9)

inst_1551:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186a27 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x56fe0f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e986a27; op2val:0x2ad6fe0f;
   valaddr_reg:x11; val_offset:3058*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3058*FLEN/8, x12, x8, x9)

inst_1552:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186a27 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x56fe0f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e986a27; op2val:0x2ad6fe0f;
   valaddr_reg:x11; val_offset:3060*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3060*FLEN/8, x12, x8, x9)

inst_1553:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186a27 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x56fe0f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e986a27; op2val:0x2ad6fe0f;
   valaddr_reg:x11; val_offset:3062*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3062*FLEN/8, x12, x8, x9)

inst_1554:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186a27 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x56fe0f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e986a27; op2val:0x2ad6fe0f;
   valaddr_reg:x11; val_offset:3064*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3064*FLEN/8, x12, x8, x9)

inst_1555:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x375440 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x32bd18 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3db75440; op2val:0x2bb2bd18;
   valaddr_reg:x11; val_offset:3066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3066*FLEN/8, x12, x8, x9)

inst_1556:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x375440 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x32bd18 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3db75440; op2val:0x2bb2bd18;
   valaddr_reg:x11; val_offset:3068*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3068*FLEN/8, x12, x8, x9)

inst_1557:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x375440 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x32bd18 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3db75440; op2val:0x2bb2bd18;
   valaddr_reg:x11; val_offset:3070*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3070*FLEN/8, x12, x8, x9)

inst_1558:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x375440 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x32bd18 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3db75440; op2val:0x2bb2bd18;
   valaddr_reg:x11; val_offset:3072*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3072*FLEN/8, x12, x8, x9)

inst_1559:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x375440 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x32bd18 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3db75440; op2val:0x2bb2bd18;
   valaddr_reg:x11; val_offset:3074*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3074*FLEN/8, x12, x8, x9)

inst_1560:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ab210 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x3ff7ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2ab210; op2val:0x2a3ff7ae;
   valaddr_reg:x11; val_offset:3076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3076*FLEN/8, x12, x8, x9)
RVTEST_SIGBASE(x8,signature_x8_12)

inst_1561:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ab210 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x3ff7ae and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2ab210; op2val:0x2a3ff7ae;
   valaddr_reg:x11; val_offset:3078*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3078*FLEN/8, x12, x8, x9)

inst_1562:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ab210 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x3ff7ae and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2ab210; op2val:0x2a3ff7ae;
   valaddr_reg:x11; val_offset:3080*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3080*FLEN/8, x12, x8, x9)

inst_1563:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ab210 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x3ff7ae and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2ab210; op2val:0x2a3ff7ae;
   valaddr_reg:x11; val_offset:3082*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3082*FLEN/8, x12, x8, x9)

inst_1564:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ab210 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x3ff7ae and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2ab210; op2val:0x2a3ff7ae;
   valaddr_reg:x11; val_offset:3084*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3084*FLEN/8, x12, x8, x9)

inst_1565:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b8b86 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x52aa6c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1b8b86; op2val:0x2a52aa6c;
   valaddr_reg:x11; val_offset:3086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3086*FLEN/8, x12, x8, x9)

inst_1566:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b8b86 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x52aa6c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1b8b86; op2val:0x2a52aa6c;
   valaddr_reg:x11; val_offset:3088*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3088*FLEN/8, x12, x8, x9)

inst_1567:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b8b86 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x52aa6c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1b8b86; op2val:0x2a52aa6c;
   valaddr_reg:x11; val_offset:3090*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3090*FLEN/8, x12, x8, x9)

inst_1568:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b8b86 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x52aa6c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1b8b86; op2val:0x2a52aa6c;
   valaddr_reg:x11; val_offset:3092*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3092*FLEN/8, x12, x8, x9)

inst_1569:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b8b86 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x52aa6c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f1b8b86; op2val:0x2a52aa6c;
   valaddr_reg:x11; val_offset:3094*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3094*FLEN/8, x12, x8, x9)

inst_1570:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1c0b42 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x51fdf9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d9c0b42; op2val:0x2bd1fdf9;
   valaddr_reg:x11; val_offset:3096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3096*FLEN/8, x12, x8, x9)

inst_1571:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1c0b42 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x51fdf9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d9c0b42; op2val:0x2bd1fdf9;
   valaddr_reg:x11; val_offset:3098*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3098*FLEN/8, x12, x8, x9)

inst_1572:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1c0b42 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x51fdf9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d9c0b42; op2val:0x2bd1fdf9;
   valaddr_reg:x11; val_offset:3100*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3100*FLEN/8, x12, x8, x9)

inst_1573:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1c0b42 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x51fdf9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d9c0b42; op2val:0x2bd1fdf9;
   valaddr_reg:x11; val_offset:3102*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3102*FLEN/8, x12, x8, x9)

inst_1574:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1c0b42 and fs2 == 0 and fe2 == 0x57 and fm2 == 0x51fdf9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d9c0b42; op2val:0x2bd1fdf9;
   valaddr_reg:x11; val_offset:3104*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3104*FLEN/8, x12, x8, x9)

inst_1575:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x694947 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x0c766f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e694947; op2val:0x2b0c766f;
   valaddr_reg:x11; val_offset:3106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3106*FLEN/8, x12, x8, x9)

inst_1576:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x694947 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x0c766f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e694947; op2val:0x2b0c766f;
   valaddr_reg:x11; val_offset:3108*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3108*FLEN/8, x12, x8, x9)

inst_1577:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x694947 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x0c766f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e694947; op2val:0x2b0c766f;
   valaddr_reg:x11; val_offset:3110*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3110*FLEN/8, x12, x8, x9)

inst_1578:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x694947 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x0c766f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e694947; op2val:0x2b0c766f;
   valaddr_reg:x11; val_offset:3112*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3112*FLEN/8, x12, x8, x9)

inst_1579:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x694947 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x0c766f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e694947; op2val:0x2b0c766f;
   valaddr_reg:x11; val_offset:3114*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3114*FLEN/8, x12, x8, x9)

inst_1580:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ae4c4 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x15b2c3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e5ae4c4; op2val:0x2b15b2c3;
   valaddr_reg:x11; val_offset:3116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3116*FLEN/8, x12, x8, x9)

inst_1581:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ae4c4 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x15b2c3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e5ae4c4; op2val:0x2b15b2c3;
   valaddr_reg:x11; val_offset:3118*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3118*FLEN/8, x12, x8, x9)

inst_1582:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ae4c4 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x15b2c3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e5ae4c4; op2val:0x2b15b2c3;
   valaddr_reg:x11; val_offset:3120*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3120*FLEN/8, x12, x8, x9)

inst_1583:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ae4c4 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x15b2c3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e5ae4c4; op2val:0x2b15b2c3;
   valaddr_reg:x11; val_offset:3122*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3122*FLEN/8, x12, x8, x9)

inst_1584:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ae4c4 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x15b2c3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e5ae4c4; op2val:0x2b15b2c3;
   valaddr_reg:x11; val_offset:3124*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3124*FLEN/8, x12, x8, x9)

inst_1585:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ba4ec and fs2 == 0 and fe2 == 0x54 and fm2 == 0x6aa747 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ba4ec; op2val:0x2a6aa747;
   valaddr_reg:x11; val_offset:3126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3126*FLEN/8, x12, x8, x9)

inst_1586:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ba4ec and fs2 == 0 and fe2 == 0x54 and fm2 == 0x6aa747 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ba4ec; op2val:0x2a6aa747;
   valaddr_reg:x11; val_offset:3128*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3128*FLEN/8, x12, x8, x9)

inst_1587:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ba4ec and fs2 == 0 and fe2 == 0x54 and fm2 == 0x6aa747 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ba4ec; op2val:0x2a6aa747;
   valaddr_reg:x11; val_offset:3130*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3130*FLEN/8, x12, x8, x9)

inst_1588:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ba4ec and fs2 == 0 and fe2 == 0x54 and fm2 == 0x6aa747 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ba4ec; op2val:0x2a6aa747;
   valaddr_reg:x11; val_offset:3132*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3132*FLEN/8, x12, x8, x9)

inst_1589:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ba4ec and fs2 == 0 and fe2 == 0x54 and fm2 == 0x6aa747 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0ba4ec; op2val:0x2a6aa747;
   valaddr_reg:x11; val_offset:3134*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3134*FLEN/8, x12, x8, x9)

inst_1590:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06d993 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x72ff00 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06d993; op2val:0x2a72ff00;
   valaddr_reg:x11; val_offset:3136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3136*FLEN/8, x12, x8, x9)

inst_1591:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06d993 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x72ff00 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06d993; op2val:0x2a72ff00;
   valaddr_reg:x11; val_offset:3138*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3138*FLEN/8, x12, x8, x9)

inst_1592:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06d993 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x72ff00 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06d993; op2val:0x2a72ff00;
   valaddr_reg:x11; val_offset:3140*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3140*FLEN/8, x12, x8, x9)

inst_1593:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06d993 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x72ff00 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06d993; op2val:0x2a72ff00;
   valaddr_reg:x11; val_offset:3142*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3142*FLEN/8, x12, x8, x9)

inst_1594:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06d993 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x72ff00 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f06d993; op2val:0x2a72ff00;
   valaddr_reg:x11; val_offset:3144*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3144*FLEN/8, x12, x8, x9)

inst_1595:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f24a5 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1e30ac and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4f24a5; op2val:0x2a1e30ac;
   valaddr_reg:x11; val_offset:3146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3146*FLEN/8, x12, x8, x9)

inst_1596:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f24a5 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1e30ac and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4f24a5; op2val:0x2a1e30ac;
   valaddr_reg:x11; val_offset:3148*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3148*FLEN/8, x12, x8, x9)

inst_1597:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f24a5 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1e30ac and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4f24a5; op2val:0x2a1e30ac;
   valaddr_reg:x11; val_offset:3150*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3150*FLEN/8, x12, x8, x9)

inst_1598:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f24a5 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1e30ac and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4f24a5; op2val:0x2a1e30ac;
   valaddr_reg:x11; val_offset:3152*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3152*FLEN/8, x12, x8, x9)

inst_1599:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f24a5 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1e30ac and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4f24a5; op2val:0x2a1e30ac;
   valaddr_reg:x11; val_offset:3154*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3154*FLEN/8, x12, x8, x9)

inst_1600:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ed08b and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1e7100 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ed08b; op2val:0x2a1e7100;
   valaddr_reg:x11; val_offset:3156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3156*FLEN/8, x12, x8, x9)

inst_1601:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ed08b and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1e7100 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ed08b; op2val:0x2a1e7100;
   valaddr_reg:x11; val_offset:3158*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3158*FLEN/8, x12, x8, x9)

inst_1602:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ed08b and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1e7100 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ed08b; op2val:0x2a1e7100;
   valaddr_reg:x11; val_offset:3160*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3160*FLEN/8, x12, x8, x9)

inst_1603:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ed08b and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1e7100 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ed08b; op2val:0x2a1e7100;
   valaddr_reg:x11; val_offset:3162*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3162*FLEN/8, x12, x8, x9)

inst_1604:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ed08b and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1e7100 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4ed08b; op2val:0x2a1e7100;
   valaddr_reg:x11; val_offset:3164*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3164*FLEN/8, x12, x8, x9)

inst_1605:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5a775d and fs2 == 0 and fe2 == 0x55 and fm2 == 0x15fdba and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eda775d; op2val:0x2a95fdba;
   valaddr_reg:x11; val_offset:3166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3166*FLEN/8, x12, x8, x9)

inst_1606:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5a775d and fs2 == 0 and fe2 == 0x55 and fm2 == 0x15fdba and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eda775d; op2val:0x2a95fdba;
   valaddr_reg:x11; val_offset:3168*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3168*FLEN/8, x12, x8, x9)

inst_1607:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5a775d and fs2 == 0 and fe2 == 0x55 and fm2 == 0x15fdba and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eda775d; op2val:0x2a95fdba;
   valaddr_reg:x11; val_offset:3170*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3170*FLEN/8, x12, x8, x9)

inst_1608:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5a775d and fs2 == 0 and fe2 == 0x55 and fm2 == 0x15fdba and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eda775d; op2val:0x2a95fdba;
   valaddr_reg:x11; val_offset:3172*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3172*FLEN/8, x12, x8, x9)

inst_1609:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5a775d and fs2 == 0 and fe2 == 0x55 and fm2 == 0x15fdba and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3eda775d; op2val:0x2a95fdba;
   valaddr_reg:x11; val_offset:3174*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3174*FLEN/8, x12, x8, x9)

inst_1610:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x545f09 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1a4bbc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f545f09; op2val:0x2a1a4bbc;
   valaddr_reg:x11; val_offset:3176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3176*FLEN/8, x12, x8, x9)

inst_1611:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x545f09 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1a4bbc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f545f09; op2val:0x2a1a4bbc;
   valaddr_reg:x11; val_offset:3178*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3178*FLEN/8, x12, x8, x9)

inst_1612:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x545f09 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1a4bbc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f545f09; op2val:0x2a1a4bbc;
   valaddr_reg:x11; val_offset:3180*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3180*FLEN/8, x12, x8, x9)

inst_1613:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x545f09 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1a4bbc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f545f09; op2val:0x2a1a4bbc;
   valaddr_reg:x11; val_offset:3182*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3182*FLEN/8, x12, x8, x9)

inst_1614:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x545f09 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1a4bbc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f545f09; op2val:0x2a1a4bbc;
   valaddr_reg:x11; val_offset:3184*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3184*FLEN/8, x12, x8, x9)

inst_1615:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f2d8c and fs2 == 0 and fe2 == 0x56 and fm2 == 0x64dcb2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0f2d8c; op2val:0x2b64dcb2;
   valaddr_reg:x11; val_offset:3186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3186*FLEN/8, x12, x8, x9)

inst_1616:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f2d8c and fs2 == 0 and fe2 == 0x56 and fm2 == 0x64dcb2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0f2d8c; op2val:0x2b64dcb2;
   valaddr_reg:x11; val_offset:3188*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3188*FLEN/8, x12, x8, x9)

inst_1617:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f2d8c and fs2 == 0 and fe2 == 0x56 and fm2 == 0x64dcb2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0f2d8c; op2val:0x2b64dcb2;
   valaddr_reg:x11; val_offset:3190*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3190*FLEN/8, x12, x8, x9)

inst_1618:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f2d8c and fs2 == 0 and fe2 == 0x56 and fm2 == 0x64dcb2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0f2d8c; op2val:0x2b64dcb2;
   valaddr_reg:x11; val_offset:3192*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3192*FLEN/8, x12, x8, x9)

inst_1619:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f2d8c and fs2 == 0 and fe2 == 0x56 and fm2 == 0x64dcb2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e0f2d8c; op2val:0x2b64dcb2;
   valaddr_reg:x11; val_offset:3194*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3194*FLEN/8, x12, x8, x9)

inst_1620:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x44c472 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x26881b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec4c472; op2val:0x2aa6881b;
   valaddr_reg:x11; val_offset:3196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3196*FLEN/8, x12, x8, x9)

inst_1621:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x44c472 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x26881b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec4c472; op2val:0x2aa6881b;
   valaddr_reg:x11; val_offset:3198*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3198*FLEN/8, x12, x8, x9)

inst_1622:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x44c472 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x26881b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec4c472; op2val:0x2aa6881b;
   valaddr_reg:x11; val_offset:3200*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3200*FLEN/8, x12, x8, x9)

inst_1623:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x44c472 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x26881b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec4c472; op2val:0x2aa6881b;
   valaddr_reg:x11; val_offset:3202*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3202*FLEN/8, x12, x8, x9)

inst_1624:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x44c472 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x26881b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ec4c472; op2val:0x2aa6881b;
   valaddr_reg:x11; val_offset:3204*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3204*FLEN/8, x12, x8, x9)

inst_1625:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6bd6be and fs2 == 0 and fe2 == 0x57 and fm2 == 0x0af13c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3debd6be; op2val:0x2b8af13c;
   valaddr_reg:x11; val_offset:3206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3206*FLEN/8, x12, x8, x9)

inst_1626:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6bd6be and fs2 == 0 and fe2 == 0x57 and fm2 == 0x0af13c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3debd6be; op2val:0x2b8af13c;
   valaddr_reg:x11; val_offset:3208*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3208*FLEN/8, x12, x8, x9)

inst_1627:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6bd6be and fs2 == 0 and fe2 == 0x57 and fm2 == 0x0af13c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3debd6be; op2val:0x2b8af13c;
   valaddr_reg:x11; val_offset:3210*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3210*FLEN/8, x12, x8, x9)

inst_1628:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6bd6be and fs2 == 0 and fe2 == 0x57 and fm2 == 0x0af13c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3debd6be; op2val:0x2b8af13c;
   valaddr_reg:x11; val_offset:3212*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3212*FLEN/8, x12, x8, x9)

inst_1629:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6bd6be and fs2 == 0 and fe2 == 0x57 and fm2 == 0x0af13c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3debd6be; op2val:0x2b8af13c;
   valaddr_reg:x11; val_offset:3214*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3214*FLEN/8, x12, x8, x9)

inst_1630:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3132a8 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x38ec56 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3132a8; op2val:0x2a38ec56;
   valaddr_reg:x11; val_offset:3216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3216*FLEN/8, x12, x8, x9)

inst_1631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3132a8 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x38ec56 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3132a8; op2val:0x2a38ec56;
   valaddr_reg:x11; val_offset:3218*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3218*FLEN/8, x12, x8, x9)

inst_1632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3132a8 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x38ec56 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3132a8; op2val:0x2a38ec56;
   valaddr_reg:x11; val_offset:3220*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3220*FLEN/8, x12, x8, x9)

inst_1633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3132a8 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x38ec56 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3132a8; op2val:0x2a38ec56;
   valaddr_reg:x11; val_offset:3222*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3222*FLEN/8, x12, x8, x9)

inst_1634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3132a8 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x38ec56 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f3132a8; op2val:0x2a38ec56;
   valaddr_reg:x11; val_offset:3224*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3224*FLEN/8, x12, x8, x9)

inst_1635:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x270d73 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x442763 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e270d73; op2val:0x2b442763;
   valaddr_reg:x11; val_offset:3226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3226*FLEN/8, x12, x8, x9)

inst_1636:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x270d73 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x442763 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e270d73; op2val:0x2b442763;
   valaddr_reg:x11; val_offset:3228*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3228*FLEN/8, x12, x8, x9)

inst_1637:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x270d73 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x442763 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e270d73; op2val:0x2b442763;
   valaddr_reg:x11; val_offset:3230*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3230*FLEN/8, x12, x8, x9)

inst_1638:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x270d73 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x442763 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e270d73; op2val:0x2b442763;
   valaddr_reg:x11; val_offset:3232*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3232*FLEN/8, x12, x8, x9)

inst_1639:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x270d73 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x442763 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e270d73; op2val:0x2b442763;
   valaddr_reg:x11; val_offset:3234*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3234*FLEN/8, x12, x8, x9)

inst_1640:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cc491 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x01a301 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7cc491; op2val:0x2a01a301;
   valaddr_reg:x11; val_offset:3236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3236*FLEN/8, x12, x8, x9)

inst_1641:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cc491 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x01a301 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7cc491; op2val:0x2a01a301;
   valaddr_reg:x11; val_offset:3238*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3238*FLEN/8, x12, x8, x9)

inst_1642:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cc491 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x01a301 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7cc491; op2val:0x2a01a301;
   valaddr_reg:x11; val_offset:3240*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3240*FLEN/8, x12, x8, x9)

inst_1643:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cc491 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x01a301 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7cc491; op2val:0x2a01a301;
   valaddr_reg:x11; val_offset:3242*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3242*FLEN/8, x12, x8, x9)

inst_1644:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cc491 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x01a301 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f7cc491; op2val:0x2a01a301;
   valaddr_reg:x11; val_offset:3244*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3244*FLEN/8, x12, x8, x9)

inst_1645:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d55ff and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1f9518 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4d55ff; op2val:0x2a1f9518;
   valaddr_reg:x11; val_offset:3246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3246*FLEN/8, x12, x8, x9)

inst_1646:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d55ff and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1f9518 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4d55ff; op2val:0x2a1f9518;
   valaddr_reg:x11; val_offset:3248*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3248*FLEN/8, x12, x8, x9)

inst_1647:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d55ff and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1f9518 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4d55ff; op2val:0x2a1f9518;
   valaddr_reg:x11; val_offset:3250*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3250*FLEN/8, x12, x8, x9)

inst_1648:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d55ff and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1f9518 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4d55ff; op2val:0x2a1f9518;
   valaddr_reg:x11; val_offset:3252*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3252*FLEN/8, x12, x8, x9)

inst_1649:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d55ff and fs2 == 0 and fe2 == 0x54 and fm2 == 0x1f9518 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f4d55ff; op2val:0x2a1f9518;
   valaddr_reg:x11; val_offset:3254*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3254*FLEN/8, x12, x8, x9)

inst_1650:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e5a35 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x3bf0f5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2e5a35; op2val:0x2a3bf0f5;
   valaddr_reg:x11; val_offset:3256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3256*FLEN/8, x12, x8, x9)

inst_1651:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e5a35 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x3bf0f5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2e5a35; op2val:0x2a3bf0f5;
   valaddr_reg:x11; val_offset:3258*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3258*FLEN/8, x12, x8, x9)

inst_1652:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e5a35 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x3bf0f5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2e5a35; op2val:0x2a3bf0f5;
   valaddr_reg:x11; val_offset:3260*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3260*FLEN/8, x12, x8, x9)

inst_1653:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e5a35 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x3bf0f5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2e5a35; op2val:0x2a3bf0f5;
   valaddr_reg:x11; val_offset:3262*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3262*FLEN/8, x12, x8, x9)

inst_1654:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e5a35 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x3bf0f5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f2e5a35; op2val:0x2a3bf0f5;
   valaddr_reg:x11; val_offset:3264*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3264*FLEN/8, x12, x8, x9)

inst_1655:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3d14 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x68012b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d3d14; op2val:0x2ae8012b;
   valaddr_reg:x11; val_offset:3266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3266*FLEN/8, x12, x8, x9)

inst_1656:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3d14 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x68012b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d3d14; op2val:0x2ae8012b;
   valaddr_reg:x11; val_offset:3268*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3268*FLEN/8, x12, x8, x9)

inst_1657:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3d14 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x68012b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d3d14; op2val:0x2ae8012b;
   valaddr_reg:x11; val_offset:3270*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3270*FLEN/8, x12, x8, x9)

inst_1658:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3d14 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x68012b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d3d14; op2val:0x2ae8012b;
   valaddr_reg:x11; val_offset:3272*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3272*FLEN/8, x12, x8, x9)

inst_1659:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3d14 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x68012b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e8d3d14; op2val:0x2ae8012b;
   valaddr_reg:x11; val_offset:3274*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3274*FLEN/8, x12, x8, x9)

inst_1660:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f36d0 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x64cde3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0f36d0; op2val:0x2a64cde3;
   valaddr_reg:x11; val_offset:3276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3276*FLEN/8, x12, x8, x9)

inst_1661:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f36d0 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x64cde3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0f36d0; op2val:0x2a64cde3;
   valaddr_reg:x11; val_offset:3278*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3278*FLEN/8, x12, x8, x9)

inst_1662:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f36d0 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x64cde3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0f36d0; op2val:0x2a64cde3;
   valaddr_reg:x11; val_offset:3280*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3280*FLEN/8, x12, x8, x9)

inst_1663:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f36d0 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x64cde3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0f36d0; op2val:0x2a64cde3;
   valaddr_reg:x11; val_offset:3282*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3282*FLEN/8, x12, x8, x9)

inst_1664:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f36d0 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x64cde3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f0f36d0; op2val:0x2a64cde3;
   valaddr_reg:x11; val_offset:3284*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3284*FLEN/8, x12, x8, x9)

inst_1665:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a8133 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x402eb1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2a8133; op2val:0x2b402eb1;
   valaddr_reg:x11; val_offset:3286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3286*FLEN/8, x12, x8, x9)

inst_1666:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a8133 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x402eb1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2a8133; op2val:0x2b402eb1;
   valaddr_reg:x11; val_offset:3288*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3288*FLEN/8, x12, x8, x9)

inst_1667:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a8133 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x402eb1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2a8133; op2val:0x2b402eb1;
   valaddr_reg:x11; val_offset:3290*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3290*FLEN/8, x12, x8, x9)

inst_1668:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a8133 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x402eb1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2a8133; op2val:0x2b402eb1;
   valaddr_reg:x11; val_offset:3292*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3292*FLEN/8, x12, x8, x9)

inst_1669:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a8133 and fs2 == 0 and fe2 == 0x56 and fm2 == 0x402eb1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3e2a8133; op2val:0x2b402eb1;
   valaddr_reg:x11; val_offset:3294*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3294*FLEN/8, x12, x8, x9)

inst_1670:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5724e5 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x184ea5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed724e5; op2val:0x2a984ea5;
   valaddr_reg:x11; val_offset:3296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3296*FLEN/8, x12, x8, x9)

inst_1671:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5724e5 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x184ea5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed724e5; op2val:0x2a984ea5;
   valaddr_reg:x11; val_offset:3298*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3298*FLEN/8, x12, x8, x9)

inst_1672:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5724e5 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x184ea5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed724e5; op2val:0x2a984ea5;
   valaddr_reg:x11; val_offset:3300*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3300*FLEN/8, x12, x8, x9)

inst_1673:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5724e5 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x184ea5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed724e5; op2val:0x2a984ea5;
   valaddr_reg:x11; val_offset:3302*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3302*FLEN/8, x12, x8, x9)

inst_1674:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5724e5 and fs2 == 0 and fe2 == 0x55 and fm2 == 0x184ea5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3ed724e5; op2val:0x2a984ea5;
   valaddr_reg:x11; val_offset:3304*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3304*FLEN/8, x12, x8, x9)

inst_1675:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5976c2 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x16aeb7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5976c2; op2val:0x2a16aeb7;
   valaddr_reg:x11; val_offset:3306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3306*FLEN/8, x12, x8, x9)

inst_1676:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5976c2 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x16aeb7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5976c2; op2val:0x2a16aeb7;
   valaddr_reg:x11; val_offset:3308*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 32, 0, x11, 3308*FLEN/8, x12, x8, x9)

inst_1677:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5976c2 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x16aeb7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5976c2; op2val:0x2a16aeb7;
   valaddr_reg:x11; val_offset:3310*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3310*FLEN/8, x12, x8, x9)

inst_1678:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5976c2 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x16aeb7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5976c2; op2val:0x2a16aeb7;
   valaddr_reg:x11; val_offset:3312*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3312*FLEN/8, x12, x8, x9)

inst_1679:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5976c2 and fs2 == 0 and fe2 == 0x54 and fm2 == 0x16aeb7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f5976c2; op2val:0x2a16aeb7;
   valaddr_reg:x11; val_offset:3314*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3314*FLEN/8, x12, x8, x9)

inst_1680:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x341568 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d341568; op2val:0x2d;
   valaddr_reg:x11; val_offset:3316*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3316*FLEN/8, x12, x8, x9)

inst_1681:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x341568 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00002d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3d341568; op2val:0x2d;
   valaddr_reg:x11; val_offset:3318*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 128, 0, x11, 3318*FLEN/8, x12, x8, x9)

inst_1682:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x11bfa2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f11bfa2; op2val:0x3;
   valaddr_reg:x11; val_offset:3320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 0, 0, x11, 3320*FLEN/8, x12, x8, x9)

inst_1683:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x11bfa2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f11bfa2; op2val:0x3;
   valaddr_reg:x11; val_offset:3322*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 64, 0, x11, 3322*FLEN/8, x12, x8, x9)

inst_1684:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x11bfa2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fmul.s ; op1:x30; op2:x29; dest:x31; op1val:0x3f11bfa2; op2val:0x3;
   valaddr_reg:x11; val_offset:3324*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fmul.s, x31, x30, x29, dyn, 96, 0, x11, 3324*FLEN/8, x12, x8, x9)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(1026823528,64,FLEN)
NAN_BOXED(45,64,FLEN)
NAN_BOXED(1026823528,64,FLEN)
NAN_BOXED(45,64,FLEN)
NAN_BOXED(1026823528,64,FLEN)
NAN_BOXED(45,64,FLEN)
NAN_BOXED(1026823528,64,FLEN)
NAN_BOXED(1026823528,64,FLEN)
NAN_BOXED(1026823528,64,FLEN)
NAN_BOXED(1026823528,64,FLEN)
NAN_BOXED(1064404441,64,FLEN)
NAN_BOXED(2,64,FLEN)
NAN_BOXED(1064404441,64,FLEN)
NAN_BOXED(2,64,FLEN)
NAN_BOXED(1064404441,64,FLEN)
NAN_BOXED(2,64,FLEN)
NAN_BOXED(1064404441,64,FLEN)
NAN_BOXED(2,64,FLEN)
NAN_BOXED(1064404441,64,FLEN)
NAN_BOXED(2,64,FLEN)
NAN_BOXED(1042838267,64,FLEN)
NAN_BOXED(12,64,FLEN)
NAN_BOXED(1042838267,64,FLEN)
NAN_BOXED(12,64,FLEN)
NAN_BOXED(1042838267,64,FLEN)
NAN_BOXED(12,64,FLEN)
NAN_BOXED(1042838267,64,FLEN)
NAN_BOXED(12,64,FLEN)
NAN_BOXED(1042838267,64,FLEN)
NAN_BOXED(12,64,FLEN)
NAN_BOXED(1051269400,64,FLEN)
NAN_BOXED(6,64,FLEN)
NAN_BOXED(1051269400,64,FLEN)
NAN_BOXED(6,64,FLEN)
NAN_BOXED(1051269400,64,FLEN)
NAN_BOXED(6,64,FLEN)
NAN_BOXED(1051269400,64,FLEN)
NAN_BOXED(6,64,FLEN)
NAN_BOXED(1051269400,64,FLEN)
NAN_BOXED(6,64,FLEN)
NAN_BOXED(1053409711,64,FLEN)
NAN_BOXED(5,64,FLEN)
NAN_BOXED(1053409711,64,FLEN)
NAN_BOXED(5,64,FLEN)
test_dataset_1:
NAN_BOXED(1053409711,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1053409711,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1053409711,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1054239853,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1054239853,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1054239853,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1054239853,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1054239853,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1058127778,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1058127778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1058127778,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1058127778,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1049481564,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049481564,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049481564,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049481564,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049481564,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1028605617,32,FLEN)
NAN_BOXED(39,32,FLEN)
NAN_BOXED(1028605617,32,FLEN)
NAN_BOXED(39,32,FLEN)
NAN_BOXED(1028605617,32,FLEN)
NAN_BOXED(39,32,FLEN)
NAN_BOXED(1028605617,32,FLEN)
NAN_BOXED(39,32,FLEN)
NAN_BOXED(1028605617,32,FLEN)
NAN_BOXED(39,32,FLEN)
NAN_BOXED(1057889801,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057889801,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057889801,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057889801,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057889801,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1064750505,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1064750505,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1064750505,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1064750505,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1064750505,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1057553591,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057553591,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057553591,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057553591,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057553591,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1058977623,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1058977623,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1058977623,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1058977623,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1058977623,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1056100488,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056100488,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056100488,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056100488,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056100488,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1061391722,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1061391722,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1061391722,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1061391722,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1061391722,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1059898222,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1059898222,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1059898222,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1059898222,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1059898222,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1056621552,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056621552,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056621552,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056621552,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056621552,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1051110040,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(1051110040,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(1051110040,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(1051110040,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(1051110040,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(1037694762,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(1037694762,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(1037694762,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(1037694762,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(1037694762,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(1049099392,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049099392,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049099392,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049099392,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049099392,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1047711269,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(1047711269,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(1047711269,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(1047711269,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(1047711269,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(1059417655,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1059417655,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1059417655,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1059417655,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1059417655,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1025248707,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(1025248707,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(1025248707,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(1025248707,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(1025248707,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(1048307291,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(1048307291,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(1048307291,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(1048307291,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(1048307291,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(1057612096,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057612096,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057612096,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057612096,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057612096,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057132146,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057132146,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057132146,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057132146,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1057132146,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1056936386,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056936386,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056936386,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056936386,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056936386,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1059415353,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1059415353,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1059415353,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1059415353,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1059415353,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1036872135,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(1036872135,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(1036872135,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(1036872135,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(1036872135,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(1054692802,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1054692802,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1054692802,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1054692802,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1054692802,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1049456033,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049456033,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049456033,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049456033,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1049456033,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1061631844,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1061631844,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1061631844,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1061631844,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1061631844,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1050268095,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(1050268095,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(1050268095,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(1050268095,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(1050268095,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(1035766193,32,FLEN)
NAN_BOXED(21,32,FLEN)
NAN_BOXED(1035766193,32,FLEN)
NAN_BOXED(21,32,FLEN)
NAN_BOXED(1035766193,32,FLEN)
NAN_BOXED(21,32,FLEN)
NAN_BOXED(1035766193,32,FLEN)
NAN_BOXED(21,32,FLEN)
NAN_BOXED(1035766193,32,FLEN)
NAN_BOXED(21,32,FLEN)
NAN_BOXED(1035304841,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(1035304841,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(1035304841,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(1035304841,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(1035304841,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(1026467196,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(1026467196,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(1026467196,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(1026467196,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(1026467196,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(1056822041,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056822041,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056822041,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056822041,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056822041,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1051883983,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1051883983,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1051883983,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1051883983,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1051883983,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1060121336,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1060121336,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1060121336,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1060121336,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1060121336,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(1056565590,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056565590,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056565590,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056565590,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1056565590,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1052828518,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1052828518,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1052828518,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1052828518,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1052828518,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1043851536,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(1043851536,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(1043851536,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(1043851536,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(1043851536,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(1035804697,32,FLEN)
NAN_BOXED(36520635,32,FLEN)
NAN_BOXED(1035804697,32,FLEN)
NAN_BOXED(36520635,32,FLEN)
NAN_BOXED(1035804697,32,FLEN)
NAN_BOXED(36520635,32,FLEN)
NAN_BOXED(1035804697,32,FLEN)
NAN_BOXED(36520635,32,FLEN)
NAN_BOXED(1035804697,32,FLEN)
NAN_BOXED(36520635,32,FLEN)
NAN_BOXED(1048751062,32,FLEN)
NAN_BOXED(24822852,32,FLEN)
NAN_BOXED(1048751062,32,FLEN)
NAN_BOXED(24822852,32,FLEN)
NAN_BOXED(1048751062,32,FLEN)
NAN_BOXED(24822852,32,FLEN)
NAN_BOXED(1048751062,32,FLEN)
NAN_BOXED(24822852,32,FLEN)
NAN_BOXED(1048751062,32,FLEN)
NAN_BOXED(24822852,32,FLEN)
NAN_BOXED(1051833802,32,FLEN)
NAN_BOXED(20472799,32,FLEN)
NAN_BOXED(1051833802,32,FLEN)
NAN_BOXED(20472799,32,FLEN)
NAN_BOXED(1051833802,32,FLEN)
NAN_BOXED(20472799,32,FLEN)
NAN_BOXED(1051833802,32,FLEN)
NAN_BOXED(20472799,32,FLEN)
NAN_BOXED(1051833802,32,FLEN)
NAN_BOXED(20472799,32,FLEN)
NAN_BOXED(1061551221,32,FLEN)
NAN_BOXED(10846632,32,FLEN)
NAN_BOXED(1061551221,32,FLEN)
NAN_BOXED(10846632,32,FLEN)
NAN_BOXED(1061551221,32,FLEN)
NAN_BOXED(10846632,32,FLEN)
NAN_BOXED(1061551221,32,FLEN)
NAN_BOXED(10846632,32,FLEN)
NAN_BOXED(1061551221,32,FLEN)
NAN_BOXED(10846632,32,FLEN)
NAN_BOXED(1063570368,32,FLEN)
NAN_BOXED(9386020,32,FLEN)
NAN_BOXED(1063570368,32,FLEN)
NAN_BOXED(9386020,32,FLEN)
NAN_BOXED(1063570368,32,FLEN)
NAN_BOXED(9386020,32,FLEN)
NAN_BOXED(1063570368,32,FLEN)
NAN_BOXED(9386020,32,FLEN)
NAN_BOXED(1063570368,32,FLEN)
NAN_BOXED(9386020,32,FLEN)
NAN_BOXED(1041600502,32,FLEN)
NAN_BOXED(31135662,32,FLEN)
NAN_BOXED(1041600502,32,FLEN)
NAN_BOXED(31135662,32,FLEN)
NAN_BOXED(1041600502,32,FLEN)
NAN_BOXED(31135662,32,FLEN)
NAN_BOXED(1041600502,32,FLEN)
NAN_BOXED(31135662,32,FLEN)
NAN_BOXED(1041600502,32,FLEN)
NAN_BOXED(31135662,32,FLEN)
NAN_BOXED(1061821965,32,FLEN)
NAN_BOXED(10624930,32,FLEN)
NAN_BOXED(1061821965,32,FLEN)
NAN_BOXED(10624930,32,FLEN)
NAN_BOXED(1061821965,32,FLEN)
NAN_BOXED(10624930,32,FLEN)
NAN_BOXED(1061821965,32,FLEN)
NAN_BOXED(10624930,32,FLEN)
NAN_BOXED(1061821965,32,FLEN)
NAN_BOXED(10624930,32,FLEN)
NAN_BOXED(1058257835,32,FLEN)
NAN_BOXED(14536237,32,FLEN)
NAN_BOXED(1058257835,32,FLEN)
NAN_BOXED(14536237,32,FLEN)
NAN_BOXED(1058257835,32,FLEN)
NAN_BOXED(14536237,32,FLEN)
NAN_BOXED(1058257835,32,FLEN)
NAN_BOXED(14536237,32,FLEN)
NAN_BOXED(1058257835,32,FLEN)
NAN_BOXED(14536237,32,FLEN)
NAN_BOXED(1064818474,32,FLEN)
NAN_BOXED(8664779,32,FLEN)
NAN_BOXED(1064818474,32,FLEN)
NAN_BOXED(8664779,32,FLEN)
NAN_BOXED(1064818474,32,FLEN)
NAN_BOXED(8664779,32,FLEN)
NAN_BOXED(1064818474,32,FLEN)
NAN_BOXED(8664779,32,FLEN)
NAN_BOXED(1064818474,32,FLEN)
NAN_BOXED(8664779,32,FLEN)
NAN_BOXED(1062469531,32,FLEN)
NAN_BOXED(10129710,32,FLEN)
NAN_BOXED(1062469531,32,FLEN)
NAN_BOXED(10129710,32,FLEN)
NAN_BOXED(1062469531,32,FLEN)
NAN_BOXED(10129710,32,FLEN)
NAN_BOXED(1062469531,32,FLEN)
NAN_BOXED(10129710,32,FLEN)
NAN_BOXED(1062469531,32,FLEN)
NAN_BOXED(10129710,32,FLEN)
NAN_BOXED(1063962331,32,FLEN)
NAN_BOXED(9146914,32,FLEN)
NAN_BOXED(1063962331,32,FLEN)
NAN_BOXED(9146914,32,FLEN)
NAN_BOXED(1063962331,32,FLEN)
NAN_BOXED(9146914,32,FLEN)
NAN_BOXED(1063962331,32,FLEN)
NAN_BOXED(9146914,32,FLEN)
NAN_BOXED(1063962331,32,FLEN)
NAN_BOXED(9146914,32,FLEN)
NAN_BOXED(1064928002,32,FLEN)
NAN_BOXED(8606741,32,FLEN)
NAN_BOXED(1064928002,32,FLEN)
NAN_BOXED(8606741,32,FLEN)
NAN_BOXED(1064928002,32,FLEN)
NAN_BOXED(8606741,32,FLEN)
NAN_BOXED(1064928002,32,FLEN)
NAN_BOXED(8606741,32,FLEN)
NAN_BOXED(1064928002,32,FLEN)
NAN_BOXED(8606741,32,FLEN)
NAN_BOXED(1064998463,32,FLEN)
NAN_BOXED(8569813,32,FLEN)
NAN_BOXED(1064998463,32,FLEN)
NAN_BOXED(8569813,32,FLEN)
NAN_BOXED(1064998463,32,FLEN)
NAN_BOXED(8569813,32,FLEN)
NAN_BOXED(1064998463,32,FLEN)
NAN_BOXED(8569813,32,FLEN)
NAN_BOXED(1064998463,32,FLEN)
NAN_BOXED(8569813,32,FLEN)
NAN_BOXED(1044324359,32,FLEN)
NAN_BOXED(28013223,32,FLEN)
NAN_BOXED(1044324359,32,FLEN)
NAN_BOXED(28013223,32,FLEN)
NAN_BOXED(1044324359,32,FLEN)
NAN_BOXED(28013223,32,FLEN)
NAN_BOXED(1044324359,32,FLEN)
NAN_BOXED(28013223,32,FLEN)
NAN_BOXED(1044324359,32,FLEN)
NAN_BOXED(28013223,32,FLEN)
NAN_BOXED(1062270590,32,FLEN)
NAN_BOXED(10276864,32,FLEN)
NAN_BOXED(1062270590,32,FLEN)
NAN_BOXED(10276864,32,FLEN)
NAN_BOXED(1062270590,32,FLEN)
NAN_BOXED(10276864,32,FLEN)
NAN_BOXED(1062270590,32,FLEN)
NAN_BOXED(10276864,32,FLEN)
NAN_BOXED(1062270590,32,FLEN)
NAN_BOXED(10276864,32,FLEN)
NAN_BOXED(1058884493,32,FLEN)
NAN_BOXED(13652572,32,FLEN)
NAN_BOXED(1058884493,32,FLEN)
NAN_BOXED(13652572,32,FLEN)
NAN_BOXED(1058884493,32,FLEN)
NAN_BOXED(13652572,32,FLEN)
NAN_BOXED(1058884493,32,FLEN)
NAN_BOXED(13652572,32,FLEN)
NAN_BOXED(1058884493,32,FLEN)
NAN_BOXED(13652572,32,FLEN)
NAN_BOXED(1008980110,32,FLEN)
NAN_BOXED(63440871,32,FLEN)
NAN_BOXED(1008980110,32,FLEN)
NAN_BOXED(63440871,32,FLEN)
NAN_BOXED(1008980110,32,FLEN)
NAN_BOXED(63440871,32,FLEN)
NAN_BOXED(1008980110,32,FLEN)
NAN_BOXED(63440871,32,FLEN)
NAN_BOXED(1008980110,32,FLEN)
NAN_BOXED(63440871,32,FLEN)
NAN_BOXED(1064744723,32,FLEN)
NAN_BOXED(8704302,32,FLEN)
NAN_BOXED(1064744723,32,FLEN)
NAN_BOXED(8704302,32,FLEN)
NAN_BOXED(1064744723,32,FLEN)
NAN_BOXED(8704302,32,FLEN)
NAN_BOXED(1064744723,32,FLEN)
NAN_BOXED(8704302,32,FLEN)
NAN_BOXED(1064744723,32,FLEN)
NAN_BOXED(8704302,32,FLEN)
NAN_BOXED(1053097812,32,FLEN)
NAN_BOXED(19289682,32,FLEN)
NAN_BOXED(1053097812,32,FLEN)
NAN_BOXED(19289682,32,FLEN)
NAN_BOXED(1053097812,32,FLEN)
NAN_BOXED(19289682,32,FLEN)
NAN_BOXED(1053097812,32,FLEN)
NAN_BOXED(19289682,32,FLEN)
NAN_BOXED(1053097812,32,FLEN)
NAN_BOXED(19289682,32,FLEN)
NAN_BOXED(1063455462,32,FLEN)
NAN_BOXED(9458503,32,FLEN)
NAN_BOXED(1063455462,32,FLEN)
NAN_BOXED(9458503,32,FLEN)
NAN_BOXED(1063455462,32,FLEN)
NAN_BOXED(9458503,32,FLEN)
NAN_BOXED(1063455462,32,FLEN)
NAN_BOXED(9458503,32,FLEN)
NAN_BOXED(1063455462,32,FLEN)
NAN_BOXED(9458503,32,FLEN)
NAN_BOXED(1064836295,32,FLEN)
NAN_BOXED(8655282,32,FLEN)
NAN_BOXED(1064836295,32,FLEN)
NAN_BOXED(8655282,32,FLEN)
NAN_BOXED(1064836295,32,FLEN)
NAN_BOXED(8655282,32,FLEN)
NAN_BOXED(1064836295,32,FLEN)
NAN_BOXED(8655282,32,FLEN)
NAN_BOXED(1064836295,32,FLEN)
NAN_BOXED(8655282,32,FLEN)
NAN_BOXED(1047504275,32,FLEN)
NAN_BOXED(25738250,32,FLEN)
NAN_BOXED(1047504275,32,FLEN)
NAN_BOXED(25738250,32,FLEN)
NAN_BOXED(1047504275,32,FLEN)
NAN_BOXED(25738250,32,FLEN)
NAN_BOXED(1047504275,32,FLEN)
NAN_BOXED(25738250,32,FLEN)
NAN_BOXED(1047504275,32,FLEN)
NAN_BOXED(25738250,32,FLEN)
NAN_BOXED(1036560807,32,FLEN)
NAN_BOXED(35867778,32,FLEN)
NAN_BOXED(1036560807,32,FLEN)
NAN_BOXED(35867778,32,FLEN)
NAN_BOXED(1036560807,32,FLEN)
NAN_BOXED(35867778,32,FLEN)
NAN_BOXED(1036560807,32,FLEN)
NAN_BOXED(35867778,32,FLEN)
NAN_BOXED(1036560807,32,FLEN)
NAN_BOXED(35867778,32,FLEN)
NAN_BOXED(1041029891,32,FLEN)
NAN_BOXED(32023214,32,FLEN)
NAN_BOXED(1041029891,32,FLEN)
NAN_BOXED(32023214,32,FLEN)
NAN_BOXED(1041029891,32,FLEN)
NAN_BOXED(32023214,32,FLEN)
NAN_BOXED(1041029891,32,FLEN)
NAN_BOXED(32023214,32,FLEN)
NAN_BOXED(1041029891,32,FLEN)
NAN_BOXED(32023214,32,FLEN)
NAN_BOXED(1057421292,32,FLEN)
NAN_BOXED(15911001,32,FLEN)
NAN_BOXED(1057421292,32,FLEN)
NAN_BOXED(15911001,32,FLEN)
NAN_BOXED(1057421292,32,FLEN)
NAN_BOXED(15911001,32,FLEN)
NAN_BOXED(1057421292,32,FLEN)
NAN_BOXED(15911001,32,FLEN)
NAN_BOXED(1057421292,32,FLEN)
NAN_BOXED(15911001,32,FLEN)
NAN_BOXED(1051568099,32,FLEN)
NAN_BOXED(20754927,32,FLEN)
NAN_BOXED(1051568099,32,FLEN)
NAN_BOXED(20754927,32,FLEN)
NAN_BOXED(1051568099,32,FLEN)
NAN_BOXED(20754927,32,FLEN)
NAN_BOXED(1051568099,32,FLEN)
NAN_BOXED(20754927,32,FLEN)
NAN_BOXED(1051568099,32,FLEN)
NAN_BOXED(20754927,32,FLEN)
NAN_BOXED(1063641116,32,FLEN)
NAN_BOXED(9341943,32,FLEN)
NAN_BOXED(1063641116,32,FLEN)
NAN_BOXED(9341943,32,FLEN)
NAN_BOXED(1063641116,32,FLEN)
NAN_BOXED(9341943,32,FLEN)
NAN_BOXED(1063641116,32,FLEN)
NAN_BOXED(9341943,32,FLEN)
NAN_BOXED(1063641116,32,FLEN)
NAN_BOXED(9341943,32,FLEN)
NAN_BOXED(1040203294,32,FLEN)
NAN_BOXED(33522684,32,FLEN)
NAN_BOXED(1040203294,32,FLEN)
NAN_BOXED(33522684,32,FLEN)
NAN_BOXED(1040203294,32,FLEN)
NAN_BOXED(33522684,32,FLEN)
NAN_BOXED(1040203294,32,FLEN)
NAN_BOXED(33522684,32,FLEN)
NAN_BOXED(1040203294,32,FLEN)
NAN_BOXED(33522684,32,FLEN)
NAN_BOXED(1054113967,32,FLEN)
NAN_BOXED(18494283,32,FLEN)
NAN_BOXED(1054113967,32,FLEN)
NAN_BOXED(18494283,32,FLEN)
NAN_BOXED(1054113967,32,FLEN)
NAN_BOXED(18494283,32,FLEN)
NAN_BOXED(1054113967,32,FLEN)
NAN_BOXED(18494283,32,FLEN)
NAN_BOXED(1054113967,32,FLEN)
NAN_BOXED(18494283,32,FLEN)
NAN_BOXED(1056467911,32,FLEN)
NAN_BOXED(17033138,32,FLEN)
NAN_BOXED(1056467911,32,FLEN)
NAN_BOXED(17033138,32,FLEN)
NAN_BOXED(1056467911,32,FLEN)
NAN_BOXED(17033138,32,FLEN)
NAN_BOXED(1056467911,32,FLEN)
NAN_BOXED(17033138,32,FLEN)
NAN_BOXED(1056467911,32,FLEN)
NAN_BOXED(17033138,32,FLEN)
NAN_BOXED(1025831145,32,FLEN)
NAN_BOXED(46574132,32,FLEN)
NAN_BOXED(1025831145,32,FLEN)
NAN_BOXED(46574132,32,FLEN)
NAN_BOXED(1025831145,32,FLEN)
NAN_BOXED(46574132,32,FLEN)
NAN_BOXED(1025831145,32,FLEN)
NAN_BOXED(46574132,32,FLEN)
NAN_BOXED(1025831145,32,FLEN)
NAN_BOXED(46574132,32,FLEN)
NAN_BOXED(1053405223,32,FLEN)
NAN_BOXED(19036153,32,FLEN)
NAN_BOXED(1053405223,32,FLEN)
NAN_BOXED(19036153,32,FLEN)
NAN_BOXED(1053405223,32,FLEN)
NAN_BOXED(19036153,32,FLEN)
NAN_BOXED(1053405223,32,FLEN)
NAN_BOXED(19036153,32,FLEN)
NAN_BOXED(1053405223,32,FLEN)
NAN_BOXED(19036153,32,FLEN)
NAN_BOXED(1065050668,32,FLEN)
NAN_BOXED(8542657,32,FLEN)
NAN_BOXED(1065050668,32,FLEN)
NAN_BOXED(8542657,32,FLEN)
NAN_BOXED(1065050668,32,FLEN)
NAN_BOXED(8542657,32,FLEN)
NAN_BOXED(1065050668,32,FLEN)
NAN_BOXED(8542657,32,FLEN)
NAN_BOXED(1065050668,32,FLEN)
NAN_BOXED(8542657,32,FLEN)
NAN_BOXED(1062994853,32,FLEN)
NAN_BOXED(9760655,32,FLEN)
NAN_BOXED(1062994853,32,FLEN)
NAN_BOXED(9760655,32,FLEN)
NAN_BOXED(1062994853,32,FLEN)
NAN_BOXED(9760655,32,FLEN)
NAN_BOXED(1062994853,32,FLEN)
NAN_BOXED(9760655,32,FLEN)
NAN_BOXED(1062994853,32,FLEN)
NAN_BOXED(9760655,32,FLEN)
NAN_BOXED(1064790235,32,FLEN)
NAN_BOXED(8679869,32,FLEN)
NAN_BOXED(1064790235,32,FLEN)
NAN_BOXED(8679869,32,FLEN)
NAN_BOXED(1064790235,32,FLEN)
NAN_BOXED(8679869,32,FLEN)
NAN_BOXED(1064790235,32,FLEN)
NAN_BOXED(8679869,32,FLEN)
NAN_BOXED(1064790235,32,FLEN)
NAN_BOXED(8679869,32,FLEN)
NAN_BOXED(1063744751,32,FLEN)
NAN_BOXED(9278117,32,FLEN)
NAN_BOXED(1063744751,32,FLEN)
NAN_BOXED(9278117,32,FLEN)
NAN_BOXED(1063744751,32,FLEN)
NAN_BOXED(9278117,32,FLEN)
NAN_BOXED(1063744751,32,FLEN)
NAN_BOXED(9278117,32,FLEN)
NAN_BOXED(1063744751,32,FLEN)
NAN_BOXED(9278117,32,FLEN)
NAN_BOXED(1056687475,32,FLEN)
NAN_BOXED(16918107,32,FLEN)
NAN_BOXED(1056687475,32,FLEN)
NAN_BOXED(16918107,32,FLEN)
NAN_BOXED(1056687475,32,FLEN)
NAN_BOXED(16918107,32,FLEN)
NAN_BOXED(1056687475,32,FLEN)
NAN_BOXED(16918107,32,FLEN)
NAN_BOXED(1056687475,32,FLEN)
NAN_BOXED(16918107,32,FLEN)
NAN_BOXED(1032251054,32,FLEN)
NAN_BOXED(41084768,32,FLEN)
NAN_BOXED(1032251054,32,FLEN)
NAN_BOXED(41084768,32,FLEN)
NAN_BOXED(1032251054,32,FLEN)
NAN_BOXED(41084768,32,FLEN)
NAN_BOXED(1032251054,32,FLEN)
NAN_BOXED(41084768,32,FLEN)
NAN_BOXED(1032251054,32,FLEN)
NAN_BOXED(41084768,32,FLEN)
NAN_BOXED(1061452952,32,FLEN)
NAN_BOXED(10929407,32,FLEN)
NAN_BOXED(1061452952,32,FLEN)
NAN_BOXED(10929407,32,FLEN)
NAN_BOXED(1061452952,32,FLEN)
NAN_BOXED(10929407,32,FLEN)
NAN_BOXED(1061452952,32,FLEN)
NAN_BOXED(10929407,32,FLEN)
NAN_BOXED(1061452952,32,FLEN)
NAN_BOXED(10929407,32,FLEN)
NAN_BOXED(1061145812,32,FLEN)
NAN_BOXED(11196463,32,FLEN)
NAN_BOXED(1061145812,32,FLEN)
NAN_BOXED(11196463,32,FLEN)
NAN_BOXED(1061145812,32,FLEN)
NAN_BOXED(11196463,32,FLEN)
NAN_BOXED(1061145812,32,FLEN)
NAN_BOXED(11196463,32,FLEN)
NAN_BOXED(1061145812,32,FLEN)
NAN_BOXED(11196463,32,FLEN)
NAN_BOXED(1052798353,32,FLEN)
NAN_BOXED(19548538,32,FLEN)
NAN_BOXED(1052798353,32,FLEN)
NAN_BOXED(19548538,32,FLEN)
NAN_BOXED(1052798353,32,FLEN)
NAN_BOXED(19548538,32,FLEN)
NAN_BOXED(1052798353,32,FLEN)
NAN_BOXED(19548538,32,FLEN)
NAN_BOXED(1052798353,32,FLEN)
NAN_BOXED(19548538,32,FLEN)
NAN_BOXED(1049935011,32,FLEN)
NAN_BOXED(22826744,32,FLEN)
NAN_BOXED(1049935011,32,FLEN)
NAN_BOXED(22826744,32,FLEN)
NAN_BOXED(1049935011,32,FLEN)
NAN_BOXED(22826744,32,FLEN)
NAN_BOXED(1049935011,32,FLEN)
NAN_BOXED(22826744,32,FLEN)
NAN_BOXED(1049935011,32,FLEN)
NAN_BOXED(22826744,32,FLEN)
NAN_BOXED(1058256169,32,FLEN)
NAN_BOXED(9692494,32,FLEN)
NAN_BOXED(1058256169,32,FLEN)
NAN_BOXED(9692494,32,FLEN)
NAN_BOXED(1058256169,32,FLEN)
NAN_BOXED(9692494,32,FLEN)
NAN_BOXED(1058256169,32,FLEN)
NAN_BOXED(9692494,32,FLEN)
NAN_BOXED(1058256169,32,FLEN)
NAN_BOXED(9692494,32,FLEN)
NAN_BOXED(1065272269,32,FLEN)
NAN_BOXED(5619518,32,FLEN)
NAN_BOXED(1065272269,32,FLEN)
NAN_BOXED(5619518,32,FLEN)
NAN_BOXED(1065272269,32,FLEN)
NAN_BOXED(5619518,32,FLEN)
NAN_BOXED(1065272269,32,FLEN)
NAN_BOXED(5619518,32,FLEN)
NAN_BOXED(1065272269,32,FLEN)
NAN_BOXED(5619518,32,FLEN)
NAN_BOXED(1058495924,32,FLEN)
NAN_BOXED(9458235,32,FLEN)
NAN_BOXED(1058495924,32,FLEN)
NAN_BOXED(9458235,32,FLEN)
NAN_BOXED(1058495924,32,FLEN)
NAN_BOXED(9458235,32,FLEN)
NAN_BOXED(1058495924,32,FLEN)
NAN_BOXED(9458235,32,FLEN)
NAN_BOXED(1058495924,32,FLEN)
NAN_BOXED(9458235,32,FLEN)
NAN_BOXED(1049456143,32,FLEN)
NAN_BOXED(18511329,32,FLEN)
NAN_BOXED(1049456143,32,FLEN)
NAN_BOXED(18511329,32,FLEN)
NAN_BOXED(1049456143,32,FLEN)
NAN_BOXED(18511329,32,FLEN)
NAN_BOXED(1049456143,32,FLEN)
NAN_BOXED(18511329,32,FLEN)
NAN_BOXED(1049456143,32,FLEN)
NAN_BOXED(18511329,32,FLEN)
NAN_BOXED(1063679301,32,FLEN)
NAN_BOXED(6212217,32,FLEN)
NAN_BOXED(1063679301,32,FLEN)
NAN_BOXED(6212217,32,FLEN)
NAN_BOXED(1063679301,32,FLEN)
NAN_BOXED(6212217,32,FLEN)
NAN_BOXED(1063679301,32,FLEN)
NAN_BOXED(6212217,32,FLEN)
NAN_BOXED(1063679301,32,FLEN)
NAN_BOXED(6212217,32,FLEN)
NAN_BOXED(1061468863,32,FLEN)
NAN_BOXED(7277280,32,FLEN)
NAN_BOXED(1061468863,32,FLEN)
NAN_BOXED(7277280,32,FLEN)
NAN_BOXED(1061468863,32,FLEN)
NAN_BOXED(7277280,32,FLEN)
NAN_BOXED(1061468863,32,FLEN)
NAN_BOXED(7277280,32,FLEN)
NAN_BOXED(1061468863,32,FLEN)
NAN_BOXED(7277280,32,FLEN)
NAN_BOXED(1056268811,32,FLEN)
NAN_BOXED(11668744,32,FLEN)
NAN_BOXED(1056268811,32,FLEN)
NAN_BOXED(11668744,32,FLEN)
NAN_BOXED(1056268811,32,FLEN)
NAN_BOXED(11668744,32,FLEN)
NAN_BOXED(1056268811,32,FLEN)
NAN_BOXED(11668744,32,FLEN)
NAN_BOXED(1056268811,32,FLEN)
NAN_BOXED(11668744,32,FLEN)
NAN_BOXED(1060156874,32,FLEN)
NAN_BOXED(8101718,32,FLEN)
NAN_BOXED(1060156874,32,FLEN)
NAN_BOXED(8101718,32,FLEN)
NAN_BOXED(1060156874,32,FLEN)
NAN_BOXED(8101718,32,FLEN)
NAN_BOXED(1060156874,32,FLEN)
NAN_BOXED(8101718,32,FLEN)
NAN_BOXED(1060156874,32,FLEN)
NAN_BOXED(8101718,32,FLEN)
NAN_BOXED(1061788900,32,FLEN)
NAN_BOXED(7101013,32,FLEN)
NAN_BOXED(1061788900,32,FLEN)
NAN_BOXED(7101013,32,FLEN)
NAN_BOXED(1061788900,32,FLEN)
NAN_BOXED(7101013,32,FLEN)
NAN_BOXED(1061788900,32,FLEN)
NAN_BOXED(7101013,32,FLEN)
NAN_BOXED(1061788900,32,FLEN)
NAN_BOXED(7101013,32,FLEN)
NAN_BOXED(1024922365,32,FLEN)
NAN_BOXED(43030940,32,FLEN)
NAN_BOXED(1024922365,32,FLEN)
NAN_BOXED(43030940,32,FLEN)
NAN_BOXED(1024922365,32,FLEN)
NAN_BOXED(43030940,32,FLEN)
NAN_BOXED(1024922365,32,FLEN)
NAN_BOXED(43030940,32,FLEN)
NAN_BOXED(1024922365,32,FLEN)
NAN_BOXED(43030940,32,FLEN)
NAN_BOXED(1058076369,32,FLEN)
NAN_BOXED(9875930,32,FLEN)
NAN_BOXED(1058076369,32,FLEN)
NAN_BOXED(9875930,32,FLEN)
NAN_BOXED(1058076369,32,FLEN)
NAN_BOXED(9875930,32,FLEN)
NAN_BOXED(1058076369,32,FLEN)
NAN_BOXED(9875930,32,FLEN)
NAN_BOXED(1058076369,32,FLEN)
NAN_BOXED(9875930,32,FLEN)
NAN_BOXED(1054244138,32,FLEN)
NAN_BOXED(13349460,32,FLEN)
NAN_BOXED(1054244138,32,FLEN)
NAN_BOXED(13349460,32,FLEN)
NAN_BOXED(1054244138,32,FLEN)
NAN_BOXED(13349460,32,FLEN)
NAN_BOXED(1054244138,32,FLEN)
NAN_BOXED(13349460,32,FLEN)
NAN_BOXED(1054244138,32,FLEN)
NAN_BOXED(13349460,32,FLEN)
NAN_BOXED(1058340064,32,FLEN)
NAN_BOXED(9609214,32,FLEN)
NAN_BOXED(1058340064,32,FLEN)
NAN_BOXED(9609214,32,FLEN)
NAN_BOXED(1058340064,32,FLEN)
NAN_BOXED(9609214,32,FLEN)
NAN_BOXED(1058340064,32,FLEN)
NAN_BOXED(9609214,32,FLEN)
NAN_BOXED(1058340064,32,FLEN)
NAN_BOXED(9609214,32,FLEN)
NAN_BOXED(1062312764,32,FLEN)
NAN_BOXED(6830210,32,FLEN)
NAN_BOXED(1062312764,32,FLEN)
NAN_BOXED(6830210,32,FLEN)
NAN_BOXED(1062312764,32,FLEN)
NAN_BOXED(6830210,32,FLEN)
NAN_BOXED(1062312764,32,FLEN)
NAN_BOXED(6830210,32,FLEN)
NAN_BOXED(1062312764,32,FLEN)
NAN_BOXED(6830210,32,FLEN)
NAN_BOXED(1045042368,32,FLEN)
NAN_BOXED(22557730,32,FLEN)
NAN_BOXED(1045042368,32,FLEN)
NAN_BOXED(22557730,32,FLEN)
NAN_BOXED(1045042368,32,FLEN)
NAN_BOXED(22557730,32,FLEN)
NAN_BOXED(1045042368,32,FLEN)
NAN_BOXED(22557730,32,FLEN)
NAN_BOXED(1045042368,32,FLEN)
NAN_BOXED(22557730,32,FLEN)
NAN_BOXED(1056320037,32,FLEN)
NAN_BOXED(11631692,32,FLEN)
NAN_BOXED(1056320037,32,FLEN)
NAN_BOXED(11631692,32,FLEN)
NAN_BOXED(1056320037,32,FLEN)
NAN_BOXED(11631692,32,FLEN)
NAN_BOXED(1056320037,32,FLEN)
NAN_BOXED(11631692,32,FLEN)
NAN_BOXED(1056320037,32,FLEN)
NAN_BOXED(11631692,32,FLEN)
NAN_BOXED(1053256496,32,FLEN)
NAN_BOXED(14358288,32,FLEN)
NAN_BOXED(1053256496,32,FLEN)
NAN_BOXED(14358288,32,FLEN)
NAN_BOXED(1053256496,32,FLEN)
NAN_BOXED(14358288,32,FLEN)
NAN_BOXED(1053256496,32,FLEN)
NAN_BOXED(14358288,32,FLEN)
NAN_BOXED(1053256496,32,FLEN)
NAN_BOXED(14358288,32,FLEN)
NAN_BOXED(1015480016,32,FLEN)
NAN_BOXED(52548261,32,FLEN)
NAN_BOXED(1015480016,32,FLEN)
NAN_BOXED(52548261,32,FLEN)
NAN_BOXED(1015480016,32,FLEN)
NAN_BOXED(52548261,32,FLEN)
NAN_BOXED(1015480016,32,FLEN)
NAN_BOXED(52548261,32,FLEN)
NAN_BOXED(1015480016,32,FLEN)
NAN_BOXED(52548261,32,FLEN)
NAN_BOXED(1065033524,32,FLEN)
NAN_BOXED(5701038,32,FLEN)
NAN_BOXED(1065033524,32,FLEN)
NAN_BOXED(5701038,32,FLEN)
NAN_BOXED(1065033524,32,FLEN)
NAN_BOXED(5701038,32,FLEN)
NAN_BOXED(1065033524,32,FLEN)
NAN_BOXED(5701038,32,FLEN)
NAN_BOXED(1065033524,32,FLEN)
NAN_BOXED(5701038,32,FLEN)
NAN_BOXED(1063656001,32,FLEN)
NAN_BOXED(6221815,32,FLEN)
NAN_BOXED(1063656001,32,FLEN)
NAN_BOXED(6221815,32,FLEN)
NAN_BOXED(1063656001,32,FLEN)
NAN_BOXED(6221815,32,FLEN)
NAN_BOXED(1063656001,32,FLEN)
NAN_BOXED(6221815,32,FLEN)
NAN_BOXED(1063656001,32,FLEN)
NAN_BOXED(6221815,32,FLEN)
NAN_BOXED(1042495152,32,FLEN)
NAN_BOXED(25548883,32,FLEN)
NAN_BOXED(1042495152,32,FLEN)
NAN_BOXED(25548883,32,FLEN)
NAN_BOXED(1042495152,32,FLEN)
NAN_BOXED(25548883,32,FLEN)
NAN_BOXED(1042495152,32,FLEN)
NAN_BOXED(25548883,32,FLEN)
NAN_BOXED(1042495152,32,FLEN)
NAN_BOXED(25548883,32,FLEN)
NAN_BOXED(1065089443,32,FLEN)
NAN_BOXED(5681733,32,FLEN)
NAN_BOXED(1065089443,32,FLEN)
NAN_BOXED(5681733,32,FLEN)
NAN_BOXED(1065089443,32,FLEN)
NAN_BOXED(5681733,32,FLEN)
NAN_BOXED(1065089443,32,FLEN)
NAN_BOXED(5681733,32,FLEN)
NAN_BOXED(1065089443,32,FLEN)
NAN_BOXED(5681733,32,FLEN)
NAN_BOXED(1058463243,32,FLEN)
NAN_BOXED(9489499,32,FLEN)
NAN_BOXED(1058463243,32,FLEN)
NAN_BOXED(9489499,32,FLEN)
NAN_BOXED(1058463243,32,FLEN)
NAN_BOXED(9489499,32,FLEN)
NAN_BOXED(1058463243,32,FLEN)
NAN_BOXED(9489499,32,FLEN)
NAN_BOXED(1058463243,32,FLEN)
NAN_BOXED(9489499,32,FLEN)
NAN_BOXED(1061859412,32,FLEN)
NAN_BOXED(7063319,32,FLEN)
NAN_BOXED(1061859412,32,FLEN)
NAN_BOXED(7063319,32,FLEN)
NAN_BOXED(1061859412,32,FLEN)
NAN_BOXED(7063319,32,FLEN)
NAN_BOXED(1061859412,32,FLEN)
NAN_BOXED(7063319,32,FLEN)
NAN_BOXED(1061859412,32,FLEN)
NAN_BOXED(7063319,32,FLEN)
NAN_BOXED(1064115236,32,FLEN)
NAN_BOXED(6037940,32,FLEN)
NAN_BOXED(1064115236,32,FLEN)
NAN_BOXED(6037940,32,FLEN)
NAN_BOXED(1064115236,32,FLEN)
NAN_BOXED(6037940,32,FLEN)
NAN_BOXED(1064115236,32,FLEN)
NAN_BOXED(6037940,32,FLEN)
NAN_BOXED(1064115236,32,FLEN)
NAN_BOXED(6037940,32,FLEN)
NAN_BOXED(1059096956,32,FLEN)
NAN_BOXED(8917914,32,FLEN)
NAN_BOXED(1059096956,32,FLEN)
NAN_BOXED(8917914,32,FLEN)
NAN_BOXED(1059096956,32,FLEN)
NAN_BOXED(8917914,32,FLEN)
NAN_BOXED(1059096956,32,FLEN)
NAN_BOXED(8917914,32,FLEN)
NAN_BOXED(1059096956,32,FLEN)
NAN_BOXED(8917914,32,FLEN)
NAN_BOXED(1064068949,32,FLEN)
NAN_BOXED(6055979,32,FLEN)
NAN_BOXED(1064068949,32,FLEN)
NAN_BOXED(6055979,32,FLEN)
NAN_BOXED(1064068949,32,FLEN)
NAN_BOXED(6055979,32,FLEN)
NAN_BOXED(1064068949,32,FLEN)
NAN_BOXED(6055979,32,FLEN)
NAN_BOXED(1064068949,32,FLEN)
NAN_BOXED(6055979,32,FLEN)
NAN_BOXED(1062125965,32,FLEN)
NAN_BOXED(6924371,32,FLEN)
NAN_BOXED(1062125965,32,FLEN)
NAN_BOXED(6924371,32,FLEN)
NAN_BOXED(1062125965,32,FLEN)
NAN_BOXED(6924371,32,FLEN)
NAN_BOXED(1062125965,32,FLEN)
NAN_BOXED(6924371,32,FLEN)
NAN_BOXED(1062125965,32,FLEN)
NAN_BOXED(6924371,32,FLEN)
NAN_BOXED(1058780222,32,FLEN)
NAN_BOXED(9194722,32,FLEN)
NAN_BOXED(1058780222,32,FLEN)
NAN_BOXED(9194722,32,FLEN)
NAN_BOXED(1058780222,32,FLEN)
NAN_BOXED(9194722,32,FLEN)
NAN_BOXED(1058780222,32,FLEN)
NAN_BOXED(9194722,32,FLEN)
NAN_BOXED(1058780222,32,FLEN)
NAN_BOXED(9194722,32,FLEN)
NAN_BOXED(1048335716,32,FLEN)
NAN_BOXED(19735934,32,FLEN)
NAN_BOXED(1048335716,32,FLEN)
NAN_BOXED(19735934,32,FLEN)
NAN_BOXED(1048335716,32,FLEN)
NAN_BOXED(19735934,32,FLEN)
NAN_BOXED(1048335716,32,FLEN)
NAN_BOXED(19735934,32,FLEN)
NAN_BOXED(1048335716,32,FLEN)
NAN_BOXED(19735934,32,FLEN)
NAN_BOXED(1063310934,32,FLEN)
NAN_BOXED(6367519,32,FLEN)
NAN_BOXED(1063310934,32,FLEN)
NAN_BOXED(6367519,32,FLEN)
NAN_BOXED(1063310934,32,FLEN)
NAN_BOXED(6367519,32,FLEN)
NAN_BOXED(1063310934,32,FLEN)
NAN_BOXED(6367519,32,FLEN)
NAN_BOXED(1063310934,32,FLEN)
NAN_BOXED(6367519,32,FLEN)
NAN_BOXED(1064002470,32,FLEN)
NAN_BOXED(6082077,32,FLEN)
NAN_BOXED(1064002470,32,FLEN)
NAN_BOXED(6082077,32,FLEN)
NAN_BOXED(1064002470,32,FLEN)
NAN_BOXED(6082077,32,FLEN)
NAN_BOXED(1064002470,32,FLEN)
NAN_BOXED(6082077,32,FLEN)
NAN_BOXED(1064002470,32,FLEN)
NAN_BOXED(6082077,32,FLEN)
NAN_BOXED(1052233715,32,FLEN)
NAN_BOXED(15577365,32,FLEN)
NAN_BOXED(1052233715,32,FLEN)
NAN_BOXED(15577365,32,FLEN)
NAN_BOXED(1052233715,32,FLEN)
NAN_BOXED(15577365,32,FLEN)
NAN_BOXED(1052233715,32,FLEN)
NAN_BOXED(15577365,32,FLEN)
NAN_BOXED(1052233715,32,FLEN)
NAN_BOXED(15577365,32,FLEN)
NAN_BOXED(1050500261,32,FLEN)
NAN_BOXED(17486462,32,FLEN)
NAN_BOXED(1050500261,32,FLEN)
NAN_BOXED(17486462,32,FLEN)
NAN_BOXED(1050500261,32,FLEN)
NAN_BOXED(17486462,32,FLEN)
NAN_BOXED(1050500261,32,FLEN)
NAN_BOXED(17486462,32,FLEN)
NAN_BOXED(1050500261,32,FLEN)
NAN_BOXED(17486462,32,FLEN)
NAN_BOXED(1051624095,32,FLEN)
NAN_BOXED(16407697,32,FLEN)
NAN_BOXED(1051624095,32,FLEN)
NAN_BOXED(16407697,32,FLEN)
NAN_BOXED(1051624095,32,FLEN)
NAN_BOXED(16407697,32,FLEN)
NAN_BOXED(1051624095,32,FLEN)
NAN_BOXED(16407697,32,FLEN)
NAN_BOXED(1051624095,32,FLEN)
NAN_BOXED(16407697,32,FLEN)
NAN_BOXED(1049464579,32,FLEN)
NAN_BOXED(18502125,32,FLEN)
NAN_BOXED(1049464579,32,FLEN)
NAN_BOXED(18502125,32,FLEN)
NAN_BOXED(1049464579,32,FLEN)
NAN_BOXED(18502125,32,FLEN)
NAN_BOXED(1049464579,32,FLEN)
NAN_BOXED(18502125,32,FLEN)
NAN_BOXED(1049464579,32,FLEN)
NAN_BOXED(18502125,32,FLEN)
NAN_BOXED(1059353941,32,FLEN)
NAN_BOXED(8705279,32,FLEN)
NAN_BOXED(1059353941,32,FLEN)
NAN_BOXED(8705279,32,FLEN)
NAN_BOXED(1059353941,32,FLEN)
NAN_BOXED(8705279,32,FLEN)
NAN_BOXED(1059353941,32,FLEN)
NAN_BOXED(8705279,32,FLEN)
NAN_BOXED(1059353941,32,FLEN)
NAN_BOXED(8705279,32,FLEN)
NAN_BOXED(1045306316,32,FLEN)
NAN_BOXED(22280855,32,FLEN)
NAN_BOXED(1045306316,32,FLEN)
NAN_BOXED(22280855,32,FLEN)
NAN_BOXED(1045306316,32,FLEN)
NAN_BOXED(22280855,32,FLEN)
NAN_BOXED(1045306316,32,FLEN)
NAN_BOXED(22280855,32,FLEN)
NAN_BOXED(1045306316,32,FLEN)
NAN_BOXED(22280855,32,FLEN)
NAN_BOXED(1056082000,32,FLEN)
NAN_BOXED(11805888,32,FLEN)
NAN_BOXED(1056082000,32,FLEN)
NAN_BOXED(11805888,32,FLEN)
NAN_BOXED(1056082000,32,FLEN)
NAN_BOXED(11805888,32,FLEN)
NAN_BOXED(1056082000,32,FLEN)
NAN_BOXED(11805888,32,FLEN)
NAN_BOXED(1056082000,32,FLEN)
NAN_BOXED(11805888,32,FLEN)
NAN_BOXED(1027182540,32,FLEN)
NAN_BOXED(40596331,32,FLEN)
NAN_BOXED(1027182540,32,FLEN)
NAN_BOXED(40596331,32,FLEN)
NAN_BOXED(1027182540,32,FLEN)
NAN_BOXED(40596331,32,FLEN)
NAN_BOXED(1027182540,32,FLEN)
NAN_BOXED(40596331,32,FLEN)
NAN_BOXED(1027182540,32,FLEN)
NAN_BOXED(40596331,32,FLEN)
NAN_BOXED(1032529752,32,FLEN)
NAN_BOXED(35454129,32,FLEN)
NAN_BOXED(1032529752,32,FLEN)
NAN_BOXED(35454129,32,FLEN)
NAN_BOXED(1032529752,32,FLEN)
NAN_BOXED(35454129,32,FLEN)
NAN_BOXED(1032529752,32,FLEN)
NAN_BOXED(35454129,32,FLEN)
NAN_BOXED(1032529752,32,FLEN)
NAN_BOXED(35454129,32,FLEN)
NAN_BOXED(1060374347,32,FLEN)
NAN_BOXED(7952383,32,FLEN)
NAN_BOXED(1060374347,32,FLEN)
NAN_BOXED(7952383,32,FLEN)
NAN_BOXED(1060374347,32,FLEN)
NAN_BOXED(7952383,32,FLEN)
NAN_BOXED(1060374347,32,FLEN)
NAN_BOXED(7952383,32,FLEN)
NAN_BOXED(1060374347,32,FLEN)
NAN_BOXED(7952383,32,FLEN)
NAN_BOXED(1057152689,32,FLEN)
NAN_BOXED(16409304,32,FLEN)
NAN_BOXED(1057152689,32,FLEN)
NAN_BOXED(16409304,32,FLEN)
NAN_BOXED(1057152689,32,FLEN)
NAN_BOXED(16409304,32,FLEN)
NAN_BOXED(1057152689,32,FLEN)
NAN_BOXED(16409304,32,FLEN)
NAN_BOXED(1057152689,32,FLEN)
NAN_BOXED(16409304,32,FLEN)
NAN_BOXED(1058178375,32,FLEN)
NAN_BOXED(14656530,32,FLEN)
NAN_BOXED(1058178375,32,FLEN)
NAN_BOXED(14656530,32,FLEN)
NAN_BOXED(1058178375,32,FLEN)
NAN_BOXED(14656530,32,FLEN)
NAN_BOXED(1058178375,32,FLEN)
NAN_BOXED(14656530,32,FLEN)
NAN_BOXED(1058178375,32,FLEN)
NAN_BOXED(14656530,32,FLEN)
NAN_BOXED(1034338152,32,FLEN)
NAN_BOXED(38044466,32,FLEN)
NAN_BOXED(1034338152,32,FLEN)
NAN_BOXED(38044466,32,FLEN)
NAN_BOXED(1034338152,32,FLEN)
NAN_BOXED(38044466,32,FLEN)
NAN_BOXED(1034338152,32,FLEN)
NAN_BOXED(38044466,32,FLEN)
NAN_BOXED(1034338152,32,FLEN)
NAN_BOXED(38044466,32,FLEN)
NAN_BOXED(1044022445,32,FLEN)
NAN_BOXED(28290747,32,FLEN)
NAN_BOXED(1044022445,32,FLEN)
NAN_BOXED(28290747,32,FLEN)
NAN_BOXED(1044022445,32,FLEN)
NAN_BOXED(28290747,32,FLEN)
NAN_BOXED(1044022445,32,FLEN)
NAN_BOXED(28290747,32,FLEN)
NAN_BOXED(1044022445,32,FLEN)
NAN_BOXED(28290747,32,FLEN)
NAN_BOXED(1059379566,32,FLEN)
NAN_BOXED(13026948,32,FLEN)
NAN_BOXED(1059379566,32,FLEN)
NAN_BOXED(13026948,32,FLEN)
NAN_BOXED(1059379566,32,FLEN)
NAN_BOXED(13026948,32,FLEN)
NAN_BOXED(1059379566,32,FLEN)
NAN_BOXED(13026948,32,FLEN)
NAN_BOXED(1059379566,32,FLEN)
NAN_BOXED(13026948,32,FLEN)
NAN_BOXED(1062895336,32,FLEN)
NAN_BOXED(9828493,32,FLEN)
NAN_BOXED(1062895336,32,FLEN)
NAN_BOXED(9828493,32,FLEN)
NAN_BOXED(1062895336,32,FLEN)
NAN_BOXED(9828493,32,FLEN)
NAN_BOXED(1062895336,32,FLEN)
NAN_BOXED(9828493,32,FLEN)
NAN_BOXED(1062895336,32,FLEN)
NAN_BOXED(9828493,32,FLEN)
NAN_BOXED(1064231837,32,FLEN)
NAN_BOXED(8989459,32,FLEN)
NAN_BOXED(1064231837,32,FLEN)
NAN_BOXED(8989459,32,FLEN)
NAN_BOXED(1064231837,32,FLEN)
NAN_BOXED(8989459,32,FLEN)
NAN_BOXED(1064231837,32,FLEN)
NAN_BOXED(8989459,32,FLEN)
NAN_BOXED(1064231837,32,FLEN)
NAN_BOXED(8989459,32,FLEN)
NAN_BOXED(1037435881,32,FLEN)
NAN_BOXED(35200079,32,FLEN)
NAN_BOXED(1037435881,32,FLEN)
NAN_BOXED(35200079,32,FLEN)
NAN_BOXED(1037435881,32,FLEN)
NAN_BOXED(35200079,32,FLEN)
NAN_BOXED(1037435881,32,FLEN)
NAN_BOXED(35200079,32,FLEN)
NAN_BOXED(1037435881,32,FLEN)
NAN_BOXED(35200079,32,FLEN)
NAN_BOXED(1051995797,32,FLEN)
NAN_BOXED(20307025,32,FLEN)
NAN_BOXED(1051995797,32,FLEN)
NAN_BOXED(20307025,32,FLEN)
NAN_BOXED(1051995797,32,FLEN)
NAN_BOXED(20307025,32,FLEN)
NAN_BOXED(1051995797,32,FLEN)
NAN_BOXED(20307025,32,FLEN)
NAN_BOXED(1051995797,32,FLEN)
NAN_BOXED(20307025,32,FLEN)
NAN_BOXED(1060380742,32,FLEN)
NAN_BOXED(11922116,32,FLEN)
NAN_BOXED(1060380742,32,FLEN)
NAN_BOXED(11922116,32,FLEN)
NAN_BOXED(1060380742,32,FLEN)
NAN_BOXED(11922116,32,FLEN)
NAN_BOXED(1060380742,32,FLEN)
NAN_BOXED(11922116,32,FLEN)
NAN_BOXED(1060380742,32,FLEN)
NAN_BOXED(11922116,32,FLEN)
NAN_BOXED(1051235781,32,FLEN)
NAN_BOXED(21126890,32,FLEN)
NAN_BOXED(1051235781,32,FLEN)
NAN_BOXED(21126890,32,FLEN)
NAN_BOXED(1051235781,32,FLEN)
NAN_BOXED(21126890,32,FLEN)
NAN_BOXED(1051235781,32,FLEN)
NAN_BOXED(21126890,32,FLEN)
NAN_BOXED(1051235781,32,FLEN)
NAN_BOXED(21126890,32,FLEN)
NAN_BOXED(1057990604,32,FLEN)
NAN_BOXED(14948850,32,FLEN)
NAN_BOXED(1057990604,32,FLEN)
NAN_BOXED(14948850,32,FLEN)
NAN_BOXED(1057990604,32,FLEN)
NAN_BOXED(14948850,32,FLEN)
NAN_BOXED(1057990604,32,FLEN)
NAN_BOXED(14948850,32,FLEN)
NAN_BOXED(1057990604,32,FLEN)
NAN_BOXED(14948850,32,FLEN)
NAN_BOXED(1063472988,32,FLEN)
NAN_BOXED(9447379,32,FLEN)
NAN_BOXED(1063472988,32,FLEN)
NAN_BOXED(9447379,32,FLEN)
NAN_BOXED(1063472988,32,FLEN)
NAN_BOXED(9447379,32,FLEN)
NAN_BOXED(1063472988,32,FLEN)
NAN_BOXED(9447379,32,FLEN)
NAN_BOXED(1063472988,32,FLEN)
NAN_BOXED(9447379,32,FLEN)
NAN_BOXED(1028459790,32,FLEN)
NAN_BOXED(44027358,32,FLEN)
NAN_BOXED(1028459790,32,FLEN)
NAN_BOXED(44027358,32,FLEN)
NAN_BOXED(1028459790,32,FLEN)
NAN_BOXED(44027358,32,FLEN)
NAN_BOXED(1028459790,32,FLEN)
NAN_BOXED(44027358,32,FLEN)
NAN_BOXED(1028459790,32,FLEN)
NAN_BOXED(44027358,32,FLEN)
NAN_BOXED(1063740011,32,FLEN)
NAN_BOXED(9281020,32,FLEN)
NAN_BOXED(1063740011,32,FLEN)
NAN_BOXED(9281020,32,FLEN)
NAN_BOXED(1063740011,32,FLEN)
NAN_BOXED(9281020,32,FLEN)
NAN_BOXED(1063740011,32,FLEN)
NAN_BOXED(9281020,32,FLEN)
NAN_BOXED(1063740011,32,FLEN)
NAN_BOXED(9281020,32,FLEN)
NAN_BOXED(1049738163,32,FLEN)
NAN_BOXED(23124328,32,FLEN)
NAN_BOXED(1049738163,32,FLEN)
NAN_BOXED(23124328,32,FLEN)
NAN_BOXED(1049738163,32,FLEN)
NAN_BOXED(23124328,32,FLEN)
NAN_BOXED(1049738163,32,FLEN)
NAN_BOXED(23124328,32,FLEN)
NAN_BOXED(1049738163,32,FLEN)
NAN_BOXED(23124328,32,FLEN)
NAN_BOXED(1037516908,32,FLEN)
NAN_BOXED(35142443,32,FLEN)
NAN_BOXED(1037516908,32,FLEN)
NAN_BOXED(35142443,32,FLEN)
NAN_BOXED(1037516908,32,FLEN)
NAN_BOXED(35142443,32,FLEN)
NAN_BOXED(1037516908,32,FLEN)
NAN_BOXED(35142443,32,FLEN)
NAN_BOXED(1037516908,32,FLEN)
NAN_BOXED(35142443,32,FLEN)
NAN_BOXED(1050145300,32,FLEN)
NAN_BOXED(22521848,32,FLEN)
NAN_BOXED(1050145300,32,FLEN)
NAN_BOXED(22521848,32,FLEN)
NAN_BOXED(1050145300,32,FLEN)
NAN_BOXED(22521848,32,FLEN)
NAN_BOXED(1050145300,32,FLEN)
NAN_BOXED(22521848,32,FLEN)
NAN_BOXED(1050145300,32,FLEN)
NAN_BOXED(22521848,32,FLEN)
NAN_BOXED(1000307466,32,FLEN)
NAN_BOXED(72185740,32,FLEN)
NAN_BOXED(1000307466,32,FLEN)
NAN_BOXED(72185740,32,FLEN)
NAN_BOXED(1000307466,32,FLEN)
NAN_BOXED(72185740,32,FLEN)
NAN_BOXED(1000307466,32,FLEN)
NAN_BOXED(72185740,32,FLEN)
NAN_BOXED(1000307466,32,FLEN)
NAN_BOXED(72185740,32,FLEN)
NAN_BOXED(1054500357,32,FLEN)
NAN_BOXED(18221476,32,FLEN)
NAN_BOXED(1054500357,32,FLEN)
NAN_BOXED(18221476,32,FLEN)
NAN_BOXED(1054500357,32,FLEN)
NAN_BOXED(18221476,32,FLEN)
NAN_BOXED(1054500357,32,FLEN)
NAN_BOXED(18221476,32,FLEN)
NAN_BOXED(1054500357,32,FLEN)
NAN_BOXED(18221476,32,FLEN)
NAN_BOXED(1057951389,32,FLEN)
NAN_BOXED(15011377,32,FLEN)
NAN_BOXED(1057951389,32,FLEN)
NAN_BOXED(15011377,32,FLEN)
NAN_BOXED(1057951389,32,FLEN)
NAN_BOXED(15011377,32,FLEN)
NAN_BOXED(1057951389,32,FLEN)
NAN_BOXED(15011377,32,FLEN)
NAN_BOXED(1057951389,32,FLEN)
NAN_BOXED(15011377,32,FLEN)
NAN_BOXED(1053771428,32,FLEN)
NAN_BOXED(18749115,32,FLEN)
NAN_BOXED(1053771428,32,FLEN)
NAN_BOXED(18749115,32,FLEN)
NAN_BOXED(1053771428,32,FLEN)
NAN_BOXED(18749115,32,FLEN)
NAN_BOXED(1053771428,32,FLEN)
NAN_BOXED(18749115,32,FLEN)
NAN_BOXED(1053771428,32,FLEN)
NAN_BOXED(18749115,32,FLEN)
NAN_BOXED(1062326195,32,FLEN)
NAN_BOXED(10235309,32,FLEN)
NAN_BOXED(1062326195,32,FLEN)
NAN_BOXED(10235309,32,FLEN)
NAN_BOXED(1062326195,32,FLEN)
NAN_BOXED(10235309,32,FLEN)
NAN_BOXED(1062326195,32,FLEN)
NAN_BOXED(10235309,32,FLEN)
NAN_BOXED(1062326195,32,FLEN)
NAN_BOXED(10235309,32,FLEN)
NAN_BOXED(1057258908,32,FLEN)
NAN_BOXED(16208567,32,FLEN)
NAN_BOXED(1057258908,32,FLEN)
NAN_BOXED(16208567,32,FLEN)
NAN_BOXED(1057258908,32,FLEN)
NAN_BOXED(16208567,32,FLEN)
NAN_BOXED(1057258908,32,FLEN)
NAN_BOXED(16208567,32,FLEN)
NAN_BOXED(1057258908,32,FLEN)
NAN_BOXED(16208567,32,FLEN)
NAN_BOXED(1049902739,32,FLEN)
NAN_BOXED(22874709,32,FLEN)
NAN_BOXED(1049902739,32,FLEN)
NAN_BOXED(22874709,32,FLEN)
NAN_BOXED(1049902739,32,FLEN)
NAN_BOXED(22874709,32,FLEN)
NAN_BOXED(1049902739,32,FLEN)
NAN_BOXED(22874709,32,FLEN)
NAN_BOXED(1049902739,32,FLEN)
NAN_BOXED(22874709,32,FLEN)
NAN_BOXED(1050072778,32,FLEN)
NAN_BOXED(22625534,32,FLEN)
NAN_BOXED(1050072778,32,FLEN)
NAN_BOXED(22625534,32,FLEN)
NAN_BOXED(1050072778,32,FLEN)
NAN_BOXED(22625534,32,FLEN)
NAN_BOXED(1050072778,32,FLEN)
NAN_BOXED(22625534,32,FLEN)
NAN_BOXED(1050072778,32,FLEN)
NAN_BOXED(22625534,32,FLEN)
NAN_BOXED(1025228178,32,FLEN)
NAN_BOXED(47343290,32,FLEN)
NAN_BOXED(1025228178,32,FLEN)
NAN_BOXED(47343290,32,FLEN)
NAN_BOXED(1025228178,32,FLEN)
NAN_BOXED(47343290,32,FLEN)
NAN_BOXED(1025228178,32,FLEN)
NAN_BOXED(47343290,32,FLEN)
NAN_BOXED(1025228178,32,FLEN)
NAN_BOXED(47343290,32,FLEN)
NAN_BOXED(1048723211,32,FLEN)
NAN_BOXED(24876481,32,FLEN)
NAN_BOXED(1048723211,32,FLEN)
NAN_BOXED(24876481,32,FLEN)
NAN_BOXED(1048723211,32,FLEN)
NAN_BOXED(24876481,32,FLEN)
NAN_BOXED(1048723211,32,FLEN)
NAN_BOXED(24876481,32,FLEN)
NAN_BOXED(1048723211,32,FLEN)
NAN_BOXED(24876481,32,FLEN)
NAN_BOXED(1047796941,32,FLEN)
NAN_BOXED(25574323,32,FLEN)
NAN_BOXED(1047796941,32,FLEN)
NAN_BOXED(25574323,32,FLEN)
NAN_BOXED(1047796941,32,FLEN)
NAN_BOXED(25574323,32,FLEN)
NAN_BOXED(1047796941,32,FLEN)
NAN_BOXED(25574323,32,FLEN)
NAN_BOXED(1047796941,32,FLEN)
NAN_BOXED(25574323,32,FLEN)
NAN_BOXED(1061578361,32,FLEN)
NAN_BOXED(10823996,32,FLEN)
NAN_BOXED(1061578361,32,FLEN)
NAN_BOXED(10823996,32,FLEN)
NAN_BOXED(1061578361,32,FLEN)
NAN_BOXED(10823996,32,FLEN)
NAN_BOXED(1061578361,32,FLEN)
NAN_BOXED(10823996,32,FLEN)
NAN_BOXED(1061578361,32,FLEN)
NAN_BOXED(10823996,32,FLEN)
NAN_BOXED(1058596630,32,FLEN)
NAN_BOXED(14044775,32,FLEN)
NAN_BOXED(1058596630,32,FLEN)
NAN_BOXED(14044775,32,FLEN)
NAN_BOXED(1058596630,32,FLEN)
NAN_BOXED(14044775,32,FLEN)
NAN_BOXED(1058596630,32,FLEN)
NAN_BOXED(14044775,32,FLEN)
NAN_BOXED(1058596630,32,FLEN)
NAN_BOXED(14044775,32,FLEN)
NAN_BOXED(1018855328,32,FLEN)
NAN_BOXED(53457789,32,FLEN)
NAN_BOXED(1018855328,32,FLEN)
NAN_BOXED(53457789,32,FLEN)
NAN_BOXED(1018855328,32,FLEN)
NAN_BOXED(53457789,32,FLEN)
NAN_BOXED(1018855328,32,FLEN)
NAN_BOXED(53457789,32,FLEN)
NAN_BOXED(1018855328,32,FLEN)
NAN_BOXED(53457789,32,FLEN)
NAN_BOXED(1065158503,32,FLEN)
NAN_BOXED(8487108,32,FLEN)
NAN_BOXED(1065158503,32,FLEN)
NAN_BOXED(8487108,32,FLEN)
NAN_BOXED(1065158503,32,FLEN)
NAN_BOXED(8487108,32,FLEN)
NAN_BOXED(1065158503,32,FLEN)
NAN_BOXED(8487108,32,FLEN)
NAN_BOXED(1065158503,32,FLEN)
NAN_BOXED(8487108,32,FLEN)
NAN_BOXED(1049865279,32,FLEN)
NAN_BOXED(22930780,32,FLEN)
NAN_BOXED(1049865279,32,FLEN)
NAN_BOXED(22930780,32,FLEN)
NAN_BOXED(1049865279,32,FLEN)
NAN_BOXED(22930780,32,FLEN)
NAN_BOXED(1049865279,32,FLEN)
NAN_BOXED(22930780,32,FLEN)
NAN_BOXED(1049865279,32,FLEN)
NAN_BOXED(22930780,32,FLEN)
NAN_BOXED(1051928589,32,FLEN)
NAN_BOXED(20375247,32,FLEN)
NAN_BOXED(1051928589,32,FLEN)
NAN_BOXED(20375247,32,FLEN)
NAN_BOXED(1051928589,32,FLEN)
NAN_BOXED(20375247,32,FLEN)
NAN_BOXED(1051928589,32,FLEN)
NAN_BOXED(20375247,32,FLEN)
NAN_BOXED(1051928589,32,FLEN)
NAN_BOXED(20375247,32,FLEN)
NAN_BOXED(1065065698,32,FLEN)
NAN_BOXED(8534874,32,FLEN)
NAN_BOXED(1065065698,32,FLEN)
NAN_BOXED(8534874,32,FLEN)
NAN_BOXED(1065065698,32,FLEN)
NAN_BOXED(8534874,32,FLEN)
NAN_BOXED(1065065698,32,FLEN)
NAN_BOXED(8534874,32,FLEN)
NAN_BOXED(1065065698,32,FLEN)
NAN_BOXED(8534874,32,FLEN)
NAN_BOXED(1049265086,32,FLEN)
NAN_BOXED(23892271,32,FLEN)
NAN_BOXED(1049265086,32,FLEN)
NAN_BOXED(23892271,32,FLEN)
NAN_BOXED(1049265086,32,FLEN)
NAN_BOXED(23892271,32,FLEN)
NAN_BOXED(1049265086,32,FLEN)
NAN_BOXED(23892271,32,FLEN)
NAN_BOXED(1049265086,32,FLEN)
NAN_BOXED(23892271,32,FLEN)
NAN_BOXED(1036117503,32,FLEN)
NAN_BOXED(36241127,32,FLEN)
NAN_BOXED(1036117503,32,FLEN)
NAN_BOXED(36241127,32,FLEN)
NAN_BOXED(1036117503,32,FLEN)
NAN_BOXED(36241127,32,FLEN)
NAN_BOXED(1036117503,32,FLEN)
NAN_BOXED(36241127,32,FLEN)
NAN_BOXED(1036117503,32,FLEN)
NAN_BOXED(36241127,32,FLEN)
NAN_BOXED(1063667820,32,FLEN)
NAN_BOXED(9325416,32,FLEN)
NAN_BOXED(1063667820,32,FLEN)
NAN_BOXED(9325416,32,FLEN)
NAN_BOXED(1063667820,32,FLEN)
NAN_BOXED(9325416,32,FLEN)
NAN_BOXED(1063667820,32,FLEN)
NAN_BOXED(9325416,32,FLEN)
NAN_BOXED(1063667820,32,FLEN)
NAN_BOXED(9325416,32,FLEN)
NAN_BOXED(1047435099,32,FLEN)
NAN_BOXED(25777898,32,FLEN)
NAN_BOXED(1047435099,32,FLEN)
NAN_BOXED(25777898,32,FLEN)
NAN_BOXED(1047435099,32,FLEN)
NAN_BOXED(25777898,32,FLEN)
NAN_BOXED(1047435099,32,FLEN)
NAN_BOXED(25777898,32,FLEN)
NAN_BOXED(1047435099,32,FLEN)
NAN_BOXED(25777898,32,FLEN)
NAN_BOXED(1048769082,32,FLEN)
NAN_BOXED(24788350,32,FLEN)
NAN_BOXED(1048769082,32,FLEN)
NAN_BOXED(24788350,32,FLEN)
NAN_BOXED(1048769082,32,FLEN)
NAN_BOXED(24788350,32,FLEN)
NAN_BOXED(1048769082,32,FLEN)
NAN_BOXED(24788350,32,FLEN)
NAN_BOXED(1048769082,32,FLEN)
NAN_BOXED(24788350,32,FLEN)
NAN_BOXED(1062140472,32,FLEN)
NAN_BOXED(10375450,32,FLEN)
NAN_BOXED(1062140472,32,FLEN)
NAN_BOXED(10375450,32,FLEN)
NAN_BOXED(1062140472,32,FLEN)
NAN_BOXED(10375450,32,FLEN)
NAN_BOXED(1062140472,32,FLEN)
NAN_BOXED(10375450,32,FLEN)
NAN_BOXED(1062140472,32,FLEN)
NAN_BOXED(10375450,32,FLEN)
NAN_BOXED(1063040088,32,FLEN)
NAN_BOXED(10135553,32,FLEN)
NAN_BOXED(1063040088,32,FLEN)
NAN_BOXED(10135553,32,FLEN)
NAN_BOXED(1063040088,32,FLEN)
NAN_BOXED(10135553,32,FLEN)
NAN_BOXED(1063040088,32,FLEN)
NAN_BOXED(10135553,32,FLEN)
NAN_BOXED(1063040088,32,FLEN)
NAN_BOXED(10135553,32,FLEN)
NAN_BOXED(1058065227,32,FLEN)
NAN_BOXED(15449260,32,FLEN)
NAN_BOXED(1058065227,32,FLEN)
NAN_BOXED(15449260,32,FLEN)
NAN_BOXED(1058065227,32,FLEN)
NAN_BOXED(15449260,32,FLEN)
NAN_BOXED(1058065227,32,FLEN)
NAN_BOXED(15449260,32,FLEN)
NAN_BOXED(1058065227,32,FLEN)
NAN_BOXED(15449260,32,FLEN)
NAN_BOXED(1054746840,32,FLEN)
NAN_BOXED(18457776,32,FLEN)
NAN_BOXED(1054746840,32,FLEN)
NAN_BOXED(18457776,32,FLEN)
NAN_BOXED(1054746840,32,FLEN)
NAN_BOXED(18457776,32,FLEN)
NAN_BOXED(1054746840,32,FLEN)
NAN_BOXED(18457776,32,FLEN)
NAN_BOXED(1054746840,32,FLEN)
NAN_BOXED(18457776,32,FLEN)
NAN_BOXED(1061913928,32,FLEN)
NAN_BOXED(10991327,32,FLEN)
NAN_BOXED(1061913928,32,FLEN)
NAN_BOXED(10991327,32,FLEN)
NAN_BOXED(1061913928,32,FLEN)
NAN_BOXED(10991327,32,FLEN)
NAN_BOXED(1061913928,32,FLEN)
NAN_BOXED(10991327,32,FLEN)
NAN_BOXED(1061913928,32,FLEN)
NAN_BOXED(10991327,32,FLEN)
NAN_BOXED(1064131409,32,FLEN)
NAN_BOXED(9424473,32,FLEN)
NAN_BOXED(1064131409,32,FLEN)
NAN_BOXED(9424473,32,FLEN)
NAN_BOXED(1064131409,32,FLEN)
NAN_BOXED(9424473,32,FLEN)
NAN_BOXED(1064131409,32,FLEN)
NAN_BOXED(9424473,32,FLEN)
NAN_BOXED(1064131409,32,FLEN)
NAN_BOXED(9424473,32,FLEN)
NAN_BOXED(1057209167,32,FLEN)
NAN_BOXED(16879208,32,FLEN)
NAN_BOXED(1057209167,32,FLEN)
NAN_BOXED(16879208,32,FLEN)
NAN_BOXED(1057209167,32,FLEN)
NAN_BOXED(16879208,32,FLEN)
NAN_BOXED(1057209167,32,FLEN)
NAN_BOXED(16879208,32,FLEN)
NAN_BOXED(1057209167,32,FLEN)
NAN_BOXED(16879208,32,FLEN)
NAN_BOXED(1051649516,32,FLEN)
NAN_BOXED(21178692,32,FLEN)
NAN_BOXED(1051649516,32,FLEN)
NAN_BOXED(21178692,32,FLEN)
NAN_BOXED(1051649516,32,FLEN)
NAN_BOXED(21178692,32,FLEN)
NAN_BOXED(1051649516,32,FLEN)
NAN_BOXED(21178692,32,FLEN)
NAN_BOXED(1051649516,32,FLEN)
NAN_BOXED(21178692,32,FLEN)
NAN_BOXED(1057216258,32,FLEN)
NAN_BOXED(16872240,32,FLEN)
NAN_BOXED(1057216258,32,FLEN)
NAN_BOXED(16872240,32,FLEN)
NAN_BOXED(1057216258,32,FLEN)
NAN_BOXED(16872240,32,FLEN)
NAN_BOXED(1057216258,32,FLEN)
NAN_BOXED(16872240,32,FLEN)
NAN_BOXED(1057216258,32,FLEN)
NAN_BOXED(16872240,32,FLEN)
NAN_BOXED(1059734683,32,FLEN)
NAN_BOXED(13137889,32,FLEN)
NAN_BOXED(1059734683,32,FLEN)
NAN_BOXED(13137889,32,FLEN)
NAN_BOXED(1059734683,32,FLEN)
NAN_BOXED(13137889,32,FLEN)
NAN_BOXED(1059734683,32,FLEN)
NAN_BOXED(13137889,32,FLEN)
NAN_BOXED(1059734683,32,FLEN)
NAN_BOXED(13137889,32,FLEN)
NAN_BOXED(1056867276,32,FLEN)
NAN_BOXED(17177730,32,FLEN)
NAN_BOXED(1056867276,32,FLEN)
NAN_BOXED(17177730,32,FLEN)
NAN_BOXED(1056867276,32,FLEN)
NAN_BOXED(17177730,32,FLEN)
NAN_BOXED(1056867276,32,FLEN)
NAN_BOXED(17177730,32,FLEN)
NAN_BOXED(1056867276,32,FLEN)
NAN_BOXED(17177730,32,FLEN)
NAN_BOXED(1064014250,32,FLEN)
NAN_BOXED(9495995,32,FLEN)
NAN_BOXED(1064014250,32,FLEN)
NAN_BOXED(9495995,32,FLEN)
NAN_BOXED(1064014250,32,FLEN)
NAN_BOXED(9495995,32,FLEN)
NAN_BOXED(1064014250,32,FLEN)
NAN_BOXED(9495995,32,FLEN)
NAN_BOXED(1064014250,32,FLEN)
NAN_BOXED(9495995,32,FLEN)
NAN_BOXED(1062439019,32,FLEN)
NAN_BOXED(10575008,32,FLEN)
NAN_BOXED(1062439019,32,FLEN)
NAN_BOXED(10575008,32,FLEN)
NAN_BOXED(1062439019,32,FLEN)
NAN_BOXED(10575008,32,FLEN)
NAN_BOXED(1062439019,32,FLEN)
NAN_BOXED(10575008,32,FLEN)
NAN_BOXED(1062439019,32,FLEN)
NAN_BOXED(10575008,32,FLEN)
NAN_BOXED(1046269067,32,FLEN)
NAN_BOXED(26908431,32,FLEN)
NAN_BOXED(1046269067,32,FLEN)
NAN_BOXED(26908431,32,FLEN)
NAN_BOXED(1046269067,32,FLEN)
NAN_BOXED(26908431,32,FLEN)
NAN_BOXED(1046269067,32,FLEN)
NAN_BOXED(26908431,32,FLEN)
NAN_BOXED(1046269067,32,FLEN)
NAN_BOXED(26908431,32,FLEN)
NAN_BOXED(1051092811,32,FLEN)
NAN_BOXED(21831608,32,FLEN)
NAN_BOXED(1051092811,32,FLEN)
NAN_BOXED(21831608,32,FLEN)
NAN_BOXED(1051092811,32,FLEN)
NAN_BOXED(21831608,32,FLEN)
NAN_BOXED(1051092811,32,FLEN)
NAN_BOXED(21831608,32,FLEN)
NAN_BOXED(1051092811,32,FLEN)
NAN_BOXED(21831608,32,FLEN)
NAN_BOXED(1040923972,32,FLEN)
NAN_BOXED(32842807,32,FLEN)
NAN_BOXED(1040923972,32,FLEN)
NAN_BOXED(32842807,32,FLEN)
NAN_BOXED(1040923972,32,FLEN)
NAN_BOXED(32842807,32,FLEN)
NAN_BOXED(1040923972,32,FLEN)
NAN_BOXED(32842807,32,FLEN)
NAN_BOXED(1040923972,32,FLEN)
NAN_BOXED(32842807,32,FLEN)
NAN_BOXED(1062625741,32,FLEN)
NAN_BOXED(10434465,32,FLEN)
NAN_BOXED(1062625741,32,FLEN)
NAN_BOXED(10434465,32,FLEN)
NAN_BOXED(1062625741,32,FLEN)
NAN_BOXED(10434465,32,FLEN)
NAN_BOXED(1062625741,32,FLEN)
NAN_BOXED(10434465,32,FLEN)
NAN_BOXED(1062625741,32,FLEN)
NAN_BOXED(10434465,32,FLEN)
NAN_BOXED(1057557570,32,FLEN)
NAN_BOXED(16322485,32,FLEN)
NAN_BOXED(1057557570,32,FLEN)
NAN_BOXED(16322485,32,FLEN)
NAN_BOXED(1057557570,32,FLEN)
NAN_BOXED(16322485,32,FLEN)
NAN_BOXED(1057557570,32,FLEN)
NAN_BOXED(16322485,32,FLEN)
NAN_BOXED(1057557570,32,FLEN)
NAN_BOXED(16322485,32,FLEN)
NAN_BOXED(1065178728,32,FLEN)
NAN_BOXED(8829966,32,FLEN)
NAN_BOXED(1065178728,32,FLEN)
NAN_BOXED(8829966,32,FLEN)
NAN_BOXED(1065178728,32,FLEN)
NAN_BOXED(8829966,32,FLEN)
NAN_BOXED(1065178728,32,FLEN)
NAN_BOXED(8829966,32,FLEN)
NAN_BOXED(1065178728,32,FLEN)
NAN_BOXED(8829966,32,FLEN)
NAN_BOXED(1023903087,32,FLEN)
NAN_BOXED(50060789,32,FLEN)
NAN_BOXED(1023903087,32,FLEN)
NAN_BOXED(50060789,32,FLEN)
NAN_BOXED(1023903087,32,FLEN)
NAN_BOXED(50060789,32,FLEN)
NAN_BOXED(1023903087,32,FLEN)
NAN_BOXED(50060789,32,FLEN)
NAN_BOXED(1023903087,32,FLEN)
NAN_BOXED(50060789,32,FLEN)
NAN_BOXED(1055689559,32,FLEN)
NAN_BOXED(17845450,32,FLEN)
NAN_BOXED(1055689559,32,FLEN)
NAN_BOXED(17845450,32,FLEN)
NAN_BOXED(1055689559,32,FLEN)
NAN_BOXED(17845450,32,FLEN)
NAN_BOXED(1055689559,32,FLEN)
NAN_BOXED(17845450,32,FLEN)
NAN_BOXED(1055689559,32,FLEN)
NAN_BOXED(17845450,32,FLEN)
NAN_BOXED(1057924256,32,FLEN)
NAN_BOXED(15682233,32,FLEN)
NAN_BOXED(1057924256,32,FLEN)
NAN_BOXED(15682233,32,FLEN)
NAN_BOXED(1057924256,32,FLEN)
NAN_BOXED(15682233,32,FLEN)
NAN_BOXED(1057924256,32,FLEN)
NAN_BOXED(15682233,32,FLEN)
NAN_BOXED(1057924256,32,FLEN)
NAN_BOXED(15682233,32,FLEN)
NAN_BOXED(1060178611,32,FLEN)
NAN_BOXED(12635219,32,FLEN)
NAN_BOXED(1060178611,32,FLEN)
NAN_BOXED(12635219,32,FLEN)
NAN_BOXED(1060178611,32,FLEN)
NAN_BOXED(12635219,32,FLEN)
NAN_BOXED(1060178611,32,FLEN)
NAN_BOXED(12635219,32,FLEN)
NAN_BOXED(1060178611,32,FLEN)
NAN_BOXED(12635219,32,FLEN)
NAN_BOXED(1057236624,32,FLEN)
NAN_BOXED(16852290,32,FLEN)
NAN_BOXED(1057236624,32,FLEN)
NAN_BOXED(16852290,32,FLEN)
NAN_BOXED(1057236624,32,FLEN)
NAN_BOXED(16852290,32,FLEN)
NAN_BOXED(1057236624,32,FLEN)
NAN_BOXED(16852290,32,FLEN)
NAN_BOXED(1057236624,32,FLEN)
NAN_BOXED(16852290,32,FLEN)
NAN_BOXED(1034858528,32,FLEN)
NAN_BOXED(37971295,32,FLEN)
NAN_BOXED(1034858528,32,FLEN)
NAN_BOXED(37971295,32,FLEN)
NAN_BOXED(1034858528,32,FLEN)
NAN_BOXED(37971295,32,FLEN)
NAN_BOXED(1034858528,32,FLEN)
NAN_BOXED(37971295,32,FLEN)
NAN_BOXED(1034858528,32,FLEN)
NAN_BOXED(37971295,32,FLEN)
NAN_BOXED(1043585084,32,FLEN)
NAN_BOXED(29215516,32,FLEN)
NAN_BOXED(1043585084,32,FLEN)
NAN_BOXED(29215516,32,FLEN)
NAN_BOXED(1043585084,32,FLEN)
NAN_BOXED(29215516,32,FLEN)
NAN_BOXED(1043585084,32,FLEN)
NAN_BOXED(29215516,32,FLEN)
NAN_BOXED(1043585084,32,FLEN)
NAN_BOXED(29215516,32,FLEN)
NAN_BOXED(1052055317,32,FLEN)
NAN_BOXED(20741361,32,FLEN)
NAN_BOXED(1052055317,32,FLEN)
NAN_BOXED(20741361,32,FLEN)
NAN_BOXED(1052055317,32,FLEN)
NAN_BOXED(20741361,32,FLEN)
NAN_BOXED(1052055317,32,FLEN)
NAN_BOXED(20741361,32,FLEN)
NAN_BOXED(1052055317,32,FLEN)
NAN_BOXED(20741361,32,FLEN)
NAN_BOXED(1051817041,32,FLEN)
NAN_BOXED(20994452,32,FLEN)
NAN_BOXED(1051817041,32,FLEN)
NAN_BOXED(20994452,32,FLEN)
NAN_BOXED(1051817041,32,FLEN)
NAN_BOXED(20994452,32,FLEN)
NAN_BOXED(1051817041,32,FLEN)
NAN_BOXED(20994452,32,FLEN)
NAN_BOXED(1051817041,32,FLEN)
NAN_BOXED(20994452,32,FLEN)
NAN_BOXED(1042488906,32,FLEN)
NAN_BOXED(30490955,32,FLEN)
NAN_BOXED(1042488906,32,FLEN)
NAN_BOXED(30490955,32,FLEN)
NAN_BOXED(1042488906,32,FLEN)
NAN_BOXED(30490955,32,FLEN)
NAN_BOXED(1042488906,32,FLEN)
NAN_BOXED(30490955,32,FLEN)
NAN_BOXED(1042488906,32,FLEN)
NAN_BOXED(30490955,32,FLEN)
NAN_BOXED(1052491318,32,FLEN)
NAN_BOXED(20303628,32,FLEN)
NAN_BOXED(1052491318,32,FLEN)
NAN_BOXED(20303628,32,FLEN)
NAN_BOXED(1052491318,32,FLEN)
NAN_BOXED(20303628,32,FLEN)
NAN_BOXED(1052491318,32,FLEN)
NAN_BOXED(20303628,32,FLEN)
NAN_BOXED(1052491318,32,FLEN)
NAN_BOXED(20303628,32,FLEN)
NAN_BOXED(1055942339,32,FLEN)
NAN_BOXED(17693720,32,FLEN)
NAN_BOXED(1055942339,32,FLEN)
NAN_BOXED(17693720,32,FLEN)
NAN_BOXED(1055942339,32,FLEN)
NAN_BOXED(17693720,32,FLEN)
NAN_BOXED(1055942339,32,FLEN)
NAN_BOXED(17693720,32,FLEN)
NAN_BOXED(1055942339,32,FLEN)
NAN_BOXED(17693720,32,FLEN)
NAN_BOXED(1045363842,32,FLEN)
NAN_BOXED(27584508,32,FLEN)
NAN_BOXED(1045363842,32,FLEN)
NAN_BOXED(27584508,32,FLEN)
NAN_BOXED(1045363842,32,FLEN)
NAN_BOXED(27584508,32,FLEN)
NAN_BOXED(1045363842,32,FLEN)
NAN_BOXED(27584508,32,FLEN)
NAN_BOXED(1045363842,32,FLEN)
NAN_BOXED(27584508,32,FLEN)
NAN_BOXED(1060184503,32,FLEN)
NAN_BOXED(12628806,32,FLEN)
NAN_BOXED(1060184503,32,FLEN)
NAN_BOXED(12628806,32,FLEN)
NAN_BOXED(1060184503,32,FLEN)
NAN_BOXED(12628806,32,FLEN)
NAN_BOXED(1060184503,32,FLEN)
NAN_BOXED(12628806,32,FLEN)
NAN_BOXED(1060184503,32,FLEN)
NAN_BOXED(12628806,32,FLEN)
NAN_BOXED(1057676998,32,FLEN)
NAN_BOXED(16108292,32,FLEN)
NAN_BOXED(1057676998,32,FLEN)
NAN_BOXED(16108292,32,FLEN)
NAN_BOXED(1057676998,32,FLEN)
NAN_BOXED(16108292,32,FLEN)
NAN_BOXED(1057676998,32,FLEN)
NAN_BOXED(16108292,32,FLEN)
NAN_BOXED(1057676998,32,FLEN)
NAN_BOXED(16108292,32,FLEN)
NAN_BOXED(1060697764,32,FLEN)
NAN_BOXED(12094076,32,FLEN)
NAN_BOXED(1060697764,32,FLEN)
NAN_BOXED(12094076,32,FLEN)
NAN_BOXED(1060697764,32,FLEN)
NAN_BOXED(12094076,32,FLEN)
NAN_BOXED(1060697764,32,FLEN)
NAN_BOXED(12094076,32,FLEN)
NAN_BOXED(1060697764,32,FLEN)
NAN_BOXED(12094076,32,FLEN)
NAN_BOXED(1063474737,32,FLEN)
NAN_BOXED(9839864,32,FLEN)
NAN_BOXED(1063474737,32,FLEN)
NAN_BOXED(9839864,32,FLEN)
NAN_BOXED(1063474737,32,FLEN)
NAN_BOXED(9839864,32,FLEN)
NAN_BOXED(1063474737,32,FLEN)
NAN_BOXED(9839864,32,FLEN)
NAN_BOXED(1063474737,32,FLEN)
NAN_BOXED(9839864,32,FLEN)
NAN_BOXED(1058991059,32,FLEN)
NAN_BOXED(14075921,32,FLEN)
NAN_BOXED(1058991059,32,FLEN)
NAN_BOXED(14075921,32,FLEN)
NAN_BOXED(1058991059,32,FLEN)
NAN_BOXED(14075921,32,FLEN)
NAN_BOXED(1058991059,32,FLEN)
NAN_BOXED(14075921,32,FLEN)
NAN_BOXED(1058991059,32,FLEN)
NAN_BOXED(14075921,32,FLEN)
NAN_BOXED(1060011492,32,FLEN)
NAN_BOXED(12819871,32,FLEN)
NAN_BOXED(1060011492,32,FLEN)
NAN_BOXED(12819871,32,FLEN)
NAN_BOXED(1060011492,32,FLEN)
NAN_BOXED(12819871,32,FLEN)
NAN_BOXED(1060011492,32,FLEN)
NAN_BOXED(12819871,32,FLEN)
NAN_BOXED(1060011492,32,FLEN)
NAN_BOXED(12819871,32,FLEN)
NAN_BOXED(1057679649,32,FLEN)
NAN_BOXED(16103602,32,FLEN)
NAN_BOXED(1057679649,32,FLEN)
NAN_BOXED(16103602,32,FLEN)
NAN_BOXED(1057679649,32,FLEN)
NAN_BOXED(16103602,32,FLEN)
NAN_BOXED(1057679649,32,FLEN)
NAN_BOXED(16103602,32,FLEN)
NAN_BOXED(1057679649,32,FLEN)
NAN_BOXED(16103602,32,FLEN)
NAN_BOXED(1057937536,32,FLEN)
NAN_BOXED(15659989,32,FLEN)
NAN_BOXED(1057937536,32,FLEN)
NAN_BOXED(15659989,32,FLEN)
NAN_BOXED(1057937536,32,FLEN)
NAN_BOXED(15659989,32,FLEN)
NAN_BOXED(1057937536,32,FLEN)
NAN_BOXED(15659989,32,FLEN)
NAN_BOXED(1057937536,32,FLEN)
NAN_BOXED(15659989,32,FLEN)
NAN_BOXED(1037560320,32,FLEN)
NAN_BOXED(35526251,32,FLEN)
NAN_BOXED(1037560320,32,FLEN)
NAN_BOXED(35526251,32,FLEN)
NAN_BOXED(1037560320,32,FLEN)
NAN_BOXED(35526251,32,FLEN)
NAN_BOXED(1037560320,32,FLEN)
NAN_BOXED(35526251,32,FLEN)
NAN_BOXED(1037560320,32,FLEN)
NAN_BOXED(35526251,32,FLEN)
NAN_BOXED(1057937745,32,FLEN)
NAN_BOXED(15659638,32,FLEN)
NAN_BOXED(1057937745,32,FLEN)
NAN_BOXED(15659638,32,FLEN)
NAN_BOXED(1057937745,32,FLEN)
NAN_BOXED(15659638,32,FLEN)
NAN_BOXED(1057937745,32,FLEN)
NAN_BOXED(15659638,32,FLEN)
NAN_BOXED(1057937745,32,FLEN)
NAN_BOXED(15659638,32,FLEN)
NAN_BOXED(1032853438,32,FLEN)
NAN_BOXED(40690283,32,FLEN)
NAN_BOXED(1032853438,32,FLEN)
NAN_BOXED(40690283,32,FLEN)
NAN_BOXED(1032853438,32,FLEN)
NAN_BOXED(40690283,32,FLEN)
NAN_BOXED(1032853438,32,FLEN)
NAN_BOXED(40690283,32,FLEN)
NAN_BOXED(1032853438,32,FLEN)
NAN_BOXED(40690283,32,FLEN)
NAN_BOXED(1063682970,32,FLEN)
NAN_BOXED(10092400,32,FLEN)
NAN_BOXED(1063682970,32,FLEN)
NAN_BOXED(10092400,32,FLEN)
NAN_BOXED(1063682970,32,FLEN)
NAN_BOXED(10092400,32,FLEN)
NAN_BOXED(1063682970,32,FLEN)
NAN_BOXED(10092400,32,FLEN)
NAN_BOXED(1063682970,32,FLEN)
NAN_BOXED(10092400,32,FLEN)
NAN_BOXED(1062173158,32,FLEN)
NAN_BOXED(11213048,32,FLEN)
NAN_BOXED(1062173158,32,FLEN)
NAN_BOXED(11213048,32,FLEN)
NAN_BOXED(1062173158,32,FLEN)
NAN_BOXED(11213048,32,FLEN)
NAN_BOXED(1062173158,32,FLEN)
NAN_BOXED(11213048,32,FLEN)
NAN_BOXED(1062173158,32,FLEN)
NAN_BOXED(11213048,32,FLEN)
NAN_BOXED(1059082088,32,FLEN)
NAN_BOXED(14512118,32,FLEN)
NAN_BOXED(1059082088,32,FLEN)
NAN_BOXED(14512118,32,FLEN)
NAN_BOXED(1059082088,32,FLEN)
NAN_BOXED(14512118,32,FLEN)
NAN_BOXED(1059082088,32,FLEN)
NAN_BOXED(14512118,32,FLEN)
NAN_BOXED(1059082088,32,FLEN)
NAN_BOXED(14512118,32,FLEN)
NAN_BOXED(1045549548,32,FLEN)
NAN_BOXED(27865006,32,FLEN)
NAN_BOXED(1045549548,32,FLEN)
NAN_BOXED(27865006,32,FLEN)
NAN_BOXED(1045549548,32,FLEN)
NAN_BOXED(27865006,32,FLEN)
NAN_BOXED(1045549548,32,FLEN)
NAN_BOXED(27865006,32,FLEN)
NAN_BOXED(1045549548,32,FLEN)
NAN_BOXED(27865006,32,FLEN)
NAN_BOXED(1044647690,32,FLEN)
NAN_BOXED(28643253,32,FLEN)
NAN_BOXED(1044647690,32,FLEN)
NAN_BOXED(28643253,32,FLEN)
NAN_BOXED(1044647690,32,FLEN)
NAN_BOXED(28643253,32,FLEN)
NAN_BOXED(1044647690,32,FLEN)
NAN_BOXED(28643253,32,FLEN)
NAN_BOXED(1044647690,32,FLEN)
NAN_BOXED(28643253,32,FLEN)
NAN_BOXED(1058637965,32,FLEN)
NAN_BOXED(15152666,32,FLEN)
NAN_BOXED(1058637965,32,FLEN)
NAN_BOXED(15152666,32,FLEN)
NAN_BOXED(1058637965,32,FLEN)
NAN_BOXED(15152666,32,FLEN)
NAN_BOXED(1058637965,32,FLEN)
NAN_BOXED(15152666,32,FLEN)
NAN_BOXED(1058637965,32,FLEN)
NAN_BOXED(15152666,32,FLEN)
NAN_BOXED(1059611159,32,FLEN)
NAN_BOXED(13816348,32,FLEN)
NAN_BOXED(1059611159,32,FLEN)
NAN_BOXED(13816348,32,FLEN)
NAN_BOXED(1059611159,32,FLEN)
NAN_BOXED(13816348,32,FLEN)
NAN_BOXED(1059611159,32,FLEN)
NAN_BOXED(13816348,32,FLEN)
NAN_BOXED(1059611159,32,FLEN)
NAN_BOXED(13816348,32,FLEN)
NAN_BOXED(1033352230,32,FLEN)
NAN_BOXED(40501246,32,FLEN)
NAN_BOXED(1033352230,32,FLEN)
NAN_BOXED(40501246,32,FLEN)
NAN_BOXED(1033352230,32,FLEN)
NAN_BOXED(40501246,32,FLEN)
NAN_BOXED(1033352230,32,FLEN)
NAN_BOXED(40501246,32,FLEN)
NAN_BOXED(1033352230,32,FLEN)
NAN_BOXED(40501246,32,FLEN)
NAN_BOXED(1050589826,32,FLEN)
NAN_BOXED(23045332,32,FLEN)
NAN_BOXED(1050589826,32,FLEN)
NAN_BOXED(23045332,32,FLEN)
NAN_BOXED(1050589826,32,FLEN)
NAN_BOXED(23045332,32,FLEN)
NAN_BOXED(1050589826,32,FLEN)
NAN_BOXED(23045332,32,FLEN)
NAN_BOXED(1050589826,32,FLEN)
NAN_BOXED(23045332,32,FLEN)
NAN_BOXED(1048825648,32,FLEN)
NAN_BOXED(25602238,32,FLEN)
NAN_BOXED(1048825648,32,FLEN)
NAN_BOXED(25602238,32,FLEN)
NAN_BOXED(1048825648,32,FLEN)
NAN_BOXED(25602238,32,FLEN)
NAN_BOXED(1048825648,32,FLEN)
NAN_BOXED(25602238,32,FLEN)
NAN_BOXED(1048825648,32,FLEN)
NAN_BOXED(25602238,32,FLEN)
NAN_BOXED(1040569231,32,FLEN)
NAN_BOXED(33857832,32,FLEN)
NAN_BOXED(1040569231,32,FLEN)
NAN_BOXED(33857832,32,FLEN)
NAN_BOXED(1040569231,32,FLEN)
NAN_BOXED(33857832,32,FLEN)
NAN_BOXED(1040569231,32,FLEN)
NAN_BOXED(33857832,32,FLEN)
NAN_BOXED(1040569231,32,FLEN)
NAN_BOXED(33857832,32,FLEN)
NAN_BOXED(1048338816,32,FLEN)
NAN_BOXED(25995191,32,FLEN)
NAN_BOXED(1048338816,32,FLEN)
NAN_BOXED(25995191,32,FLEN)
NAN_BOXED(1048338816,32,FLEN)
NAN_BOXED(25995191,32,FLEN)
NAN_BOXED(1048338816,32,FLEN)
NAN_BOXED(25995191,32,FLEN)
NAN_BOXED(1048338816,32,FLEN)
NAN_BOXED(25995191,32,FLEN)
NAN_BOXED(1060460879,32,FLEN)
NAN_BOXED(12828536,32,FLEN)
NAN_BOXED(1060460879,32,FLEN)
NAN_BOXED(12828536,32,FLEN)
NAN_BOXED(1060460879,32,FLEN)
NAN_BOXED(12828536,32,FLEN)
NAN_BOXED(1060460879,32,FLEN)
NAN_BOXED(12828536,32,FLEN)
NAN_BOXED(1060460879,32,FLEN)
NAN_BOXED(12828536,32,FLEN)
NAN_BOXED(1051238277,32,FLEN)
NAN_BOXED(22185294,32,FLEN)
NAN_BOXED(1051238277,32,FLEN)
NAN_BOXED(22185294,32,FLEN)
NAN_BOXED(1051238277,32,FLEN)
NAN_BOXED(22185294,32,FLEN)
NAN_BOXED(1051238277,32,FLEN)
NAN_BOXED(22185294,32,FLEN)
NAN_BOXED(1051238277,32,FLEN)
NAN_BOXED(22185294,32,FLEN)
NAN_BOXED(1058723232,32,FLEN)
NAN_BOXED(15025337,32,FLEN)
NAN_BOXED(1058723232,32,FLEN)
NAN_BOXED(15025337,32,FLEN)
NAN_BOXED(1058723232,32,FLEN)
NAN_BOXED(15025337,32,FLEN)
NAN_BOXED(1058723232,32,FLEN)
NAN_BOXED(15025337,32,FLEN)
NAN_BOXED(1058723232,32,FLEN)
NAN_BOXED(15025337,32,FLEN)
NAN_BOXED(1026373086,32,FLEN)
NAN_BOXED(46985728,32,FLEN)
NAN_BOXED(1026373086,32,FLEN)
NAN_BOXED(46985728,32,FLEN)
NAN_BOXED(1026373086,32,FLEN)
NAN_BOXED(46985728,32,FLEN)
NAN_BOXED(1026373086,32,FLEN)
NAN_BOXED(46985728,32,FLEN)
NAN_BOXED(1026373086,32,FLEN)
NAN_BOXED(46985728,32,FLEN)
NAN_BOXED(1057356624,32,FLEN)
NAN_BOXED(17070542,32,FLEN)
NAN_BOXED(1057356624,32,FLEN)
NAN_BOXED(17070542,32,FLEN)
NAN_BOXED(1057356624,32,FLEN)
NAN_BOXED(17070542,32,FLEN)
NAN_BOXED(1057356624,32,FLEN)
NAN_BOXED(17070542,32,FLEN)
NAN_BOXED(1057356624,32,FLEN)
NAN_BOXED(17070542,32,FLEN)
NAN_BOXED(1062225102,32,FLEN)
NAN_BOXED(11170375,32,FLEN)
NAN_BOXED(1062225102,32,FLEN)
NAN_BOXED(11170375,32,FLEN)
NAN_BOXED(1062225102,32,FLEN)
NAN_BOXED(11170375,32,FLEN)
NAN_BOXED(1062225102,32,FLEN)
NAN_BOXED(11170375,32,FLEN)
NAN_BOXED(1062225102,32,FLEN)
NAN_BOXED(11170375,32,FLEN)
NAN_BOXED(1063221574,32,FLEN)
NAN_BOXED(10410353,32,FLEN)
NAN_BOXED(1063221574,32,FLEN)
NAN_BOXED(10410353,32,FLEN)
NAN_BOXED(1063221574,32,FLEN)
NAN_BOXED(10410353,32,FLEN)
NAN_BOXED(1063221574,32,FLEN)
NAN_BOXED(10410353,32,FLEN)
NAN_BOXED(1063221574,32,FLEN)
NAN_BOXED(10410353,32,FLEN)
NAN_BOXED(1059468104,32,FLEN)
NAN_BOXED(13997810,32,FLEN)
NAN_BOXED(1059468104,32,FLEN)
NAN_BOXED(13997810,32,FLEN)
NAN_BOXED(1059468104,32,FLEN)
NAN_BOXED(13997810,32,FLEN)
NAN_BOXED(1059468104,32,FLEN)
NAN_BOXED(13997810,32,FLEN)
NAN_BOXED(1059468104,32,FLEN)
NAN_BOXED(13997810,32,FLEN)
NAN_BOXED(1034463768,32,FLEN)
NAN_BOXED(38959132,32,FLEN)
NAN_BOXED(1034463768,32,FLEN)
NAN_BOXED(38959132,32,FLEN)
NAN_BOXED(1034463768,32,FLEN)
NAN_BOXED(38959132,32,FLEN)
NAN_BOXED(1034463768,32,FLEN)
NAN_BOXED(38959132,32,FLEN)
NAN_BOXED(1034463768,32,FLEN)
NAN_BOXED(38959132,32,FLEN)
NAN_BOXED(1047800158,32,FLEN)
NAN_BOXED(26305497,32,FLEN)
NAN_BOXED(1047800158,32,FLEN)
NAN_BOXED(26305497,32,FLEN)
NAN_BOXED(1047800158,32,FLEN)
NAN_BOXED(26305497,32,FLEN)
NAN_BOXED(1047800158,32,FLEN)
NAN_BOXED(26305497,32,FLEN)
NAN_BOXED(1047800158,32,FLEN)
NAN_BOXED(26305497,32,FLEN)
NAN_BOXED(1055532289,32,FLEN)
NAN_BOXED(18324523,32,FLEN)
NAN_BOXED(1055532289,32,FLEN)
NAN_BOXED(18324523,32,FLEN)
NAN_BOXED(1055532289,32,FLEN)
NAN_BOXED(18324523,32,FLEN)
NAN_BOXED(1055532289,32,FLEN)
NAN_BOXED(18324523,32,FLEN)
NAN_BOXED(1055532289,32,FLEN)
NAN_BOXED(18324523,32,FLEN)
NAN_BOXED(1042970417,32,FLEN)
NAN_BOXED(30424782,32,FLEN)
NAN_BOXED(1042970417,32,FLEN)
NAN_BOXED(30424782,32,FLEN)
NAN_BOXED(1042970417,32,FLEN)
NAN_BOXED(30424782,32,FLEN)
NAN_BOXED(1042970417,32,FLEN)
NAN_BOXED(30424782,32,FLEN)
NAN_BOXED(1042970417,32,FLEN)
NAN_BOXED(30424782,32,FLEN)
NAN_BOXED(1060577525,32,FLEN)
NAN_BOXED(12703852,32,FLEN)
NAN_BOXED(1060577525,32,FLEN)
NAN_BOXED(12703852,32,FLEN)
NAN_BOXED(1060577525,32,FLEN)
NAN_BOXED(12703852,32,FLEN)
NAN_BOXED(1060577525,32,FLEN)
NAN_BOXED(12703852,32,FLEN)
NAN_BOXED(1060577525,32,FLEN)
NAN_BOXED(12703852,32,FLEN)
NAN_BOXED(1062826926,32,FLEN)
NAN_BOXED(10698645,32,FLEN)
NAN_BOXED(1062826926,32,FLEN)
NAN_BOXED(10698645,32,FLEN)
NAN_BOXED(1062826926,32,FLEN)
NAN_BOXED(10698645,32,FLEN)
NAN_BOXED(1062826926,32,FLEN)
NAN_BOXED(10698645,32,FLEN)
NAN_BOXED(1062826926,32,FLEN)
NAN_BOXED(10698645,32,FLEN)
NAN_BOXED(1033318459,32,FLEN)
NAN_BOXED(40553515,32,FLEN)
NAN_BOXED(1033318459,32,FLEN)
NAN_BOXED(40553515,32,FLEN)
NAN_BOXED(1033318459,32,FLEN)
NAN_BOXED(40553515,32,FLEN)
NAN_BOXED(1033318459,32,FLEN)
NAN_BOXED(40553515,32,FLEN)
NAN_BOXED(1033318459,32,FLEN)
NAN_BOXED(40553515,32,FLEN)
NAN_BOXED(1062967496,32,FLEN)
NAN_BOXED(10594145,32,FLEN)
NAN_BOXED(1062967496,32,FLEN)
NAN_BOXED(10594145,32,FLEN)
NAN_BOXED(1062967496,32,FLEN)
NAN_BOXED(10594145,32,FLEN)
NAN_BOXED(1062967496,32,FLEN)
NAN_BOXED(10594145,32,FLEN)
NAN_BOXED(1062967496,32,FLEN)
NAN_BOXED(10594145,32,FLEN)
NAN_BOXED(1061142469,32,FLEN)
NAN_BOXED(12132731,32,FLEN)
NAN_BOXED(1061142469,32,FLEN)
NAN_BOXED(12132731,32,FLEN)
NAN_BOXED(1061142469,32,FLEN)
NAN_BOXED(12132731,32,FLEN)
NAN_BOXED(1061142469,32,FLEN)
NAN_BOXED(12132731,32,FLEN)
NAN_BOXED(1061142469,32,FLEN)
NAN_BOXED(12132731,32,FLEN)
NAN_BOXED(1061155955,32,FLEN)
NAN_BOXED(12119725,32,FLEN)
NAN_BOXED(1061155955,32,FLEN)
NAN_BOXED(12119725,32,FLEN)
NAN_BOXED(1061155955,32,FLEN)
NAN_BOXED(12119725,32,FLEN)
NAN_BOXED(1061155955,32,FLEN)
NAN_BOXED(12119725,32,FLEN)
NAN_BOXED(1061155955,32,FLEN)
NAN_BOXED(12119725,32,FLEN)
NAN_BOXED(1061217944,32,FLEN)
NAN_BOXED(12060296,32,FLEN)
NAN_BOXED(1061217944,32,FLEN)
NAN_BOXED(12060296,32,FLEN)
NAN_BOXED(1061217944,32,FLEN)
NAN_BOXED(12060296,32,FLEN)
NAN_BOXED(1061217944,32,FLEN)
NAN_BOXED(12060296,32,FLEN)
NAN_BOXED(1061217944,32,FLEN)
NAN_BOXED(12060296,32,FLEN)
NAN_BOXED(1053253328,32,FLEN)
NAN_BOXED(20057546,32,FLEN)
NAN_BOXED(1053253328,32,FLEN)
NAN_BOXED(20057546,32,FLEN)
NAN_BOXED(1053253328,32,FLEN)
NAN_BOXED(20057546,32,FLEN)
NAN_BOXED(1053253328,32,FLEN)
NAN_BOXED(20057546,32,FLEN)
NAN_BOXED(1053253328,32,FLEN)
NAN_BOXED(20057546,32,FLEN)
NAN_BOXED(1059098853,32,FLEN)
NAN_BOXED(14488997,32,FLEN)
NAN_BOXED(1059098853,32,FLEN)
NAN_BOXED(14488997,32,FLEN)
NAN_BOXED(1059098853,32,FLEN)
NAN_BOXED(14488997,32,FLEN)
NAN_BOXED(1059098853,32,FLEN)
NAN_BOXED(14488997,32,FLEN)
NAN_BOXED(1059098853,32,FLEN)
NAN_BOXED(14488997,32,FLEN)
NAN_BOXED(1064318257,32,FLEN)
NAN_BOXED(9685117,32,FLEN)
NAN_BOXED(1064318257,32,FLEN)
NAN_BOXED(9685117,32,FLEN)
NAN_BOXED(1064318257,32,FLEN)
NAN_BOXED(9685117,32,FLEN)
NAN_BOXED(1064318257,32,FLEN)
NAN_BOXED(9685117,32,FLEN)
NAN_BOXED(1064318257,32,FLEN)
NAN_BOXED(9685117,32,FLEN)
NAN_BOXED(1041809842,32,FLEN)
NAN_BOXED(32006934,32,FLEN)
NAN_BOXED(1041809842,32,FLEN)
NAN_BOXED(32006934,32,FLEN)
NAN_BOXED(1041809842,32,FLEN)
NAN_BOXED(32006934,32,FLEN)
NAN_BOXED(1041809842,32,FLEN)
NAN_BOXED(32006934,32,FLEN)
NAN_BOXED(1041809842,32,FLEN)
NAN_BOXED(32006934,32,FLEN)
NAN_BOXED(1046643029,32,FLEN)
NAN_BOXED(27048240,32,FLEN)
NAN_BOXED(1046643029,32,FLEN)
NAN_BOXED(27048240,32,FLEN)
NAN_BOXED(1046643029,32,FLEN)
NAN_BOXED(27048240,32,FLEN)
NAN_BOXED(1046643029,32,FLEN)
NAN_BOXED(27048240,32,FLEN)
NAN_BOXED(1046643029,32,FLEN)
NAN_BOXED(27048240,32,FLEN)
NAN_BOXED(1056193188,32,FLEN)
NAN_BOXED(17914257,32,FLEN)
NAN_BOXED(1056193188,32,FLEN)
NAN_BOXED(17914257,32,FLEN)
NAN_BOXED(1056193188,32,FLEN)
NAN_BOXED(17914257,32,FLEN)
NAN_BOXED(1056193188,32,FLEN)
NAN_BOXED(17914257,32,FLEN)
NAN_BOXED(1056193188,32,FLEN)
NAN_BOXED(17914257,32,FLEN)
NAN_BOXED(1059681816,32,FLEN)
NAN_BOXED(13728446,32,FLEN)
NAN_BOXED(1059681816,32,FLEN)
NAN_BOXED(13728446,32,FLEN)
NAN_BOXED(1059681816,32,FLEN)
NAN_BOXED(13728446,32,FLEN)
NAN_BOXED(1059681816,32,FLEN)
NAN_BOXED(13728446,32,FLEN)
NAN_BOXED(1059681816,32,FLEN)
NAN_BOXED(13728446,32,FLEN)
NAN_BOXED(1053261001,32,FLEN)
NAN_BOXED(20050697,32,FLEN)
NAN_BOXED(1053261001,32,FLEN)
NAN_BOXED(20050697,32,FLEN)
NAN_BOXED(1053261001,32,FLEN)
NAN_BOXED(20050697,32,FLEN)
NAN_BOXED(1053261001,32,FLEN)
NAN_BOXED(20050697,32,FLEN)
NAN_BOXED(1053261001,32,FLEN)
NAN_BOXED(20050697,32,FLEN)
NAN_BOXED(992843518,32,FLEN)
NAN_BOXED(80510805,32,FLEN)
NAN_BOXED(992843518,32,FLEN)
NAN_BOXED(80510805,32,FLEN)
NAN_BOXED(992843518,32,FLEN)
NAN_BOXED(80510805,32,FLEN)
NAN_BOXED(992843518,32,FLEN)
NAN_BOXED(80510805,32,FLEN)
NAN_BOXED(992843518,32,FLEN)
NAN_BOXED(80510805,32,FLEN)
NAN_BOXED(1057404282,32,FLEN)
NAN_BOXED(17023674,32,FLEN)
NAN_BOXED(1057404282,32,FLEN)
NAN_BOXED(17023674,32,FLEN)
NAN_BOXED(1057404282,32,FLEN)
NAN_BOXED(17023674,32,FLEN)
NAN_BOXED(1057404282,32,FLEN)
NAN_BOXED(17023674,32,FLEN)
NAN_BOXED(1057404282,32,FLEN)
NAN_BOXED(17023674,32,FLEN)
NAN_BOXED(1060037543,32,FLEN)
NAN_BOXED(13302363,32,FLEN)
NAN_BOXED(1060037543,32,FLEN)
NAN_BOXED(13302363,32,FLEN)
NAN_BOXED(1060037543,32,FLEN)
NAN_BOXED(13302363,32,FLEN)
NAN_BOXED(1060037543,32,FLEN)
NAN_BOXED(13302363,32,FLEN)
NAN_BOXED(1060037543,32,FLEN)
NAN_BOXED(13302363,32,FLEN)
NAN_BOXED(1419311135,32,FLEN)
NAN_BOXED(1071003272,32,FLEN)
NAN_BOXED(1419311135,32,FLEN)
NAN_BOXED(1071003272,32,FLEN)
NAN_BOXED(1419311135,32,FLEN)
NAN_BOXED(1071003272,32,FLEN)
NAN_BOXED(1419311135,32,FLEN)
NAN_BOXED(1071003272,32,FLEN)
NAN_BOXED(1419311135,32,FLEN)
NAN_BOXED(1071003272,32,FLEN)
NAN_BOXED(1418322124,32,FLEN)
NAN_BOXED(1072539839,32,FLEN)
NAN_BOXED(1418322124,32,FLEN)
NAN_BOXED(1072539839,32,FLEN)
NAN_BOXED(1418322124,32,FLEN)
NAN_BOXED(1072539839,32,FLEN)
NAN_BOXED(1418322124,32,FLEN)
NAN_BOXED(1072539839,32,FLEN)
NAN_BOXED(1418322124,32,FLEN)
NAN_BOXED(1072539839,32,FLEN)
NAN_BOXED(1425877638,32,FLEN)
NAN_BOXED(1065447116,32,FLEN)
NAN_BOXED(1425877638,32,FLEN)
NAN_BOXED(1065447116,32,FLEN)
NAN_BOXED(1425877638,32,FLEN)
NAN_BOXED(1065447116,32,FLEN)
NAN_BOXED(1425877638,32,FLEN)
NAN_BOXED(1065447116,32,FLEN)
NAN_BOXED(1425877638,32,FLEN)
NAN_BOXED(1065447116,32,FLEN)
NAN_BOXED(1416150582,32,FLEN)
NAN_BOXED(1074580060,32,FLEN)
NAN_BOXED(1416150582,32,FLEN)
NAN_BOXED(1074580060,32,FLEN)
NAN_BOXED(1416150582,32,FLEN)
NAN_BOXED(1074580060,32,FLEN)
NAN_BOXED(1416150582,32,FLEN)
NAN_BOXED(1074580060,32,FLEN)
NAN_BOXED(1416150582,32,FLEN)
NAN_BOXED(1074580060,32,FLEN)
NAN_BOXED(1418090270,32,FLEN)
NAN_BOXED(1072950009,32,FLEN)
NAN_BOXED(1418090270,32,FLEN)
NAN_BOXED(1072950009,32,FLEN)
NAN_BOXED(1418090270,32,FLEN)
NAN_BOXED(1072950009,32,FLEN)
NAN_BOXED(1418090270,32,FLEN)
NAN_BOXED(1072950009,32,FLEN)
NAN_BOXED(1418090270,32,FLEN)
NAN_BOXED(1072950009,32,FLEN)
NAN_BOXED(1398649970,32,FLEN)
NAN_BOXED(1091816658,32,FLEN)
NAN_BOXED(1398649970,32,FLEN)
NAN_BOXED(1091816658,32,FLEN)
NAN_BOXED(1398649970,32,FLEN)
NAN_BOXED(1091816658,32,FLEN)
NAN_BOXED(1398649970,32,FLEN)
NAN_BOXED(1091816658,32,FLEN)
NAN_BOXED(1398649970,32,FLEN)
NAN_BOXED(1091816658,32,FLEN)
NAN_BOXED(1401112990,32,FLEN)
NAN_BOXED(1090098922,32,FLEN)
NAN_BOXED(1401112990,32,FLEN)
NAN_BOXED(1090098922,32,FLEN)
NAN_BOXED(1401112990,32,FLEN)
NAN_BOXED(1090098922,32,FLEN)
NAN_BOXED(1401112990,32,FLEN)
NAN_BOXED(1090098922,32,FLEN)
NAN_BOXED(1401112990,32,FLEN)
NAN_BOXED(1090098922,32,FLEN)
NAN_BOXED(1420690107,32,FLEN)
NAN_BOXED(1069305711,32,FLEN)
NAN_BOXED(1420690107,32,FLEN)
NAN_BOXED(1069305711,32,FLEN)
NAN_BOXED(1420690107,32,FLEN)
NAN_BOXED(1069305711,32,FLEN)
NAN_BOXED(1420690107,32,FLEN)
NAN_BOXED(1069305711,32,FLEN)
NAN_BOXED(1420690107,32,FLEN)
NAN_BOXED(1069305711,32,FLEN)
NAN_BOXED(1394500249,32,FLEN)
NAN_BOXED(1095689049,32,FLEN)
NAN_BOXED(1394500249,32,FLEN)
NAN_BOXED(1095689049,32,FLEN)
NAN_BOXED(1394500249,32,FLEN)
NAN_BOXED(1095689049,32,FLEN)
NAN_BOXED(1394500249,32,FLEN)
NAN_BOXED(1095689049,32,FLEN)
NAN_BOXED(1394500249,32,FLEN)
NAN_BOXED(1095689049,32,FLEN)
NAN_BOXED(1422673150,32,FLEN)
NAN_BOXED(1067477600,32,FLEN)
NAN_BOXED(1422673150,32,FLEN)
NAN_BOXED(1067477600,32,FLEN)
NAN_BOXED(1422673150,32,FLEN)
NAN_BOXED(1067477600,32,FLEN)
NAN_BOXED(1422673150,32,FLEN)
NAN_BOXED(1067477600,32,FLEN)
NAN_BOXED(1422673150,32,FLEN)
NAN_BOXED(1067477600,32,FLEN)
NAN_BOXED(1398342028,32,FLEN)
NAN_BOXED(1092026394,32,FLEN)
NAN_BOXED(1398342028,32,FLEN)
NAN_BOXED(1092026394,32,FLEN)
NAN_BOXED(1398342028,32,FLEN)
NAN_BOXED(1092026394,32,FLEN)
NAN_BOXED(1398342028,32,FLEN)
NAN_BOXED(1092026394,32,FLEN)
NAN_BOXED(1398342028,32,FLEN)
NAN_BOXED(1092026394,32,FLEN)
NAN_BOXED(1404128038,32,FLEN)
NAN_BOXED(1085854411,32,FLEN)
NAN_BOXED(1404128038,32,FLEN)
NAN_BOXED(1085854411,32,FLEN)
NAN_BOXED(1404128038,32,FLEN)
NAN_BOXED(1085854411,32,FLEN)
NAN_BOXED(1404128038,32,FLEN)
NAN_BOXED(1085854411,32,FLEN)
NAN_BOXED(1404128038,32,FLEN)
NAN_BOXED(1085854411,32,FLEN)
NAN_BOXED(1420522925,32,FLEN)
NAN_BOXED(1069489323,32,FLEN)
NAN_BOXED(1420522925,32,FLEN)
NAN_BOXED(1069489323,32,FLEN)
NAN_BOXED(1420522925,32,FLEN)
NAN_BOXED(1069489323,32,FLEN)
NAN_BOXED(1420522925,32,FLEN)
NAN_BOXED(1069489323,32,FLEN)
NAN_BOXED(1420522925,32,FLEN)
NAN_BOXED(1069489323,32,FLEN)
NAN_BOXED(1425585283,32,FLEN)
NAN_BOXED(1065599266,32,FLEN)
NAN_BOXED(1425585283,32,FLEN)
NAN_BOXED(1065599266,32,FLEN)
NAN_BOXED(1425585283,32,FLEN)
NAN_BOXED(1065599266,32,FLEN)
NAN_BOXED(1425585283,32,FLEN)
NAN_BOXED(1065599266,32,FLEN)
NAN_BOXED(1425585283,32,FLEN)
NAN_BOXED(1065599266,32,FLEN)
NAN_BOXED(1389090839,32,FLEN)
NAN_BOXED(1101053970,32,FLEN)
NAN_BOXED(1389090839,32,FLEN)
NAN_BOXED(1101053970,32,FLEN)
NAN_BOXED(1389090839,32,FLEN)
NAN_BOXED(1101053970,32,FLEN)
NAN_BOXED(1389090839,32,FLEN)
NAN_BOXED(1101053970,32,FLEN)
NAN_BOXED(1389090839,32,FLEN)
NAN_BOXED(1101053970,32,FLEN)
NAN_BOXED(1408717499,32,FLEN)
NAN_BOXED(1082424729,32,FLEN)
NAN_BOXED(1408717499,32,FLEN)
NAN_BOXED(1082424729,32,FLEN)
NAN_BOXED(1408717499,32,FLEN)
NAN_BOXED(1082424729,32,FLEN)
NAN_BOXED(1408717499,32,FLEN)
NAN_BOXED(1082424729,32,FLEN)
NAN_BOXED(1408717499,32,FLEN)
NAN_BOXED(1082424729,32,FLEN)
NAN_BOXED(1418660691,32,FLEN)
NAN_BOXED(1071977331,32,FLEN)
NAN_BOXED(1418660691,32,FLEN)
NAN_BOXED(1071977331,32,FLEN)
NAN_BOXED(1418660691,32,FLEN)
NAN_BOXED(1071977331,32,FLEN)
NAN_BOXED(1418660691,32,FLEN)
NAN_BOXED(1071977331,32,FLEN)
NAN_BOXED(1418660691,32,FLEN)
NAN_BOXED(1071977331,32,FLEN)
NAN_BOXED(1417710972,32,FLEN)
NAN_BOXED(1073669694,32,FLEN)
NAN_BOXED(1417710972,32,FLEN)
NAN_BOXED(1073669694,32,FLEN)
NAN_BOXED(1417710972,32,FLEN)
NAN_BOXED(1073669694,32,FLEN)
NAN_BOXED(1417710972,32,FLEN)
NAN_BOXED(1073669694,32,FLEN)
NAN_BOXED(1417710972,32,FLEN)
NAN_BOXED(1073669694,32,FLEN)
NAN_BOXED(1405904330,32,FLEN)
NAN_BOXED(1084248226,32,FLEN)
NAN_BOXED(1405904330,32,FLEN)
NAN_BOXED(1084248226,32,FLEN)
NAN_BOXED(1405904330,32,FLEN)
NAN_BOXED(1084248226,32,FLEN)
NAN_BOXED(1405904330,32,FLEN)
NAN_BOXED(1084248226,32,FLEN)
NAN_BOXED(1405904330,32,FLEN)
NAN_BOXED(1084248226,32,FLEN)
NAN_BOXED(1423077831,32,FLEN)
NAN_BOXED(1067169124,32,FLEN)
NAN_BOXED(1423077831,32,FLEN)
NAN_BOXED(1067169124,32,FLEN)
NAN_BOXED(1423077831,32,FLEN)
NAN_BOXED(1067169124,32,FLEN)
NAN_BOXED(1423077831,32,FLEN)
NAN_BOXED(1067169124,32,FLEN)
NAN_BOXED(1423077831,32,FLEN)
NAN_BOXED(1067169124,32,FLEN)
NAN_BOXED(1420725617,32,FLEN)
NAN_BOXED(1069267402,32,FLEN)
NAN_BOXED(1420725617,32,FLEN)
NAN_BOXED(1069267402,32,FLEN)
NAN_BOXED(1420725617,32,FLEN)
NAN_BOXED(1069267402,32,FLEN)
NAN_BOXED(1420725617,32,FLEN)
NAN_BOXED(1069267402,32,FLEN)
NAN_BOXED(1420725617,32,FLEN)
NAN_BOXED(1069267402,32,FLEN)
NAN_BOXED(1401901901,32,FLEN)
NAN_BOXED(1088725098,32,FLEN)
NAN_BOXED(1401901901,32,FLEN)
NAN_BOXED(1088725098,32,FLEN)
NAN_BOXED(1401901901,32,FLEN)
NAN_BOXED(1088725098,32,FLEN)
NAN_BOXED(1401901901,32,FLEN)
NAN_BOXED(1088725098,32,FLEN)
NAN_BOXED(1401901901,32,FLEN)
NAN_BOXED(1088725098,32,FLEN)
NAN_BOXED(1401351428,32,FLEN)
NAN_BOXED(1089657852,32,FLEN)
NAN_BOXED(1401351428,32,FLEN)
NAN_BOXED(1089657852,32,FLEN)
NAN_BOXED(1401351428,32,FLEN)
NAN_BOXED(1089657852,32,FLEN)
NAN_BOXED(1401351428,32,FLEN)
NAN_BOXED(1089657852,32,FLEN)
NAN_BOXED(1401351428,32,FLEN)
NAN_BOXED(1089657852,32,FLEN)
NAN_BOXED(1398647437,32,FLEN)
NAN_BOXED(1091818348,32,FLEN)
NAN_BOXED(1398647437,32,FLEN)
NAN_BOXED(1091818348,32,FLEN)
NAN_BOXED(1398647437,32,FLEN)
NAN_BOXED(1091818348,32,FLEN)
NAN_BOXED(1398647437,32,FLEN)
NAN_BOXED(1091818348,32,FLEN)
NAN_BOXED(1398647437,32,FLEN)
NAN_BOXED(1091818348,32,FLEN)
NAN_BOXED(1390000821,32,FLEN)
NAN_BOXED(1100382128,32,FLEN)
NAN_BOXED(1390000821,32,FLEN)
NAN_BOXED(1100382128,32,FLEN)
NAN_BOXED(1390000821,32,FLEN)
NAN_BOXED(1100382128,32,FLEN)
NAN_BOXED(1390000821,32,FLEN)
NAN_BOXED(1100382128,32,FLEN)
NAN_BOXED(1390000821,32,FLEN)
NAN_BOXED(1100382128,32,FLEN)
NAN_BOXED(1413619084,32,FLEN)
NAN_BOXED(1076416137,32,FLEN)
NAN_BOXED(1413619084,32,FLEN)
NAN_BOXED(1076416137,32,FLEN)
NAN_BOXED(1413619084,32,FLEN)
NAN_BOXED(1076416137,32,FLEN)
NAN_BOXED(1413619084,32,FLEN)
NAN_BOXED(1076416137,32,FLEN)
NAN_BOXED(1413619084,32,FLEN)
NAN_BOXED(1076416137,32,FLEN)
NAN_BOXED(1423691158,32,FLEN)
NAN_BOXED(1066734643,32,FLEN)
NAN_BOXED(1423691158,32,FLEN)
NAN_BOXED(1066734643,32,FLEN)
NAN_BOXED(1423691158,32,FLEN)
NAN_BOXED(1066734643,32,FLEN)
NAN_BOXED(1423691158,32,FLEN)
NAN_BOXED(1066734643,32,FLEN)
NAN_BOXED(1423691158,32,FLEN)
NAN_BOXED(1066734643,32,FLEN)
NAN_BOXED(1421325219,32,FLEN)
NAN_BOXED(1068654666,32,FLEN)
NAN_BOXED(1421325219,32,FLEN)
NAN_BOXED(1068654666,32,FLEN)
NAN_BOXED(1421325219,32,FLEN)
NAN_BOXED(1068654666,32,FLEN)
NAN_BOXED(1421325219,32,FLEN)
NAN_BOXED(1068654666,32,FLEN)
NAN_BOXED(1421325219,32,FLEN)
NAN_BOXED(1068654666,32,FLEN)
NAN_BOXED(1424670639,32,FLEN)
NAN_BOXED(1066112616,32,FLEN)
NAN_BOXED(1424670639,32,FLEN)
NAN_BOXED(1066112616,32,FLEN)
NAN_BOXED(1424670639,32,FLEN)
NAN_BOXED(1066112616,32,FLEN)
NAN_BOXED(1424670639,32,FLEN)
NAN_BOXED(1066112616,32,FLEN)
NAN_BOXED(1424670639,32,FLEN)
NAN_BOXED(1066112616,32,FLEN)
NAN_BOXED(1398272968,32,FLEN)
NAN_BOXED(1092074683,32,FLEN)
NAN_BOXED(1398272968,32,FLEN)
NAN_BOXED(1092074683,32,FLEN)
NAN_BOXED(1398272968,32,FLEN)
NAN_BOXED(1092074683,32,FLEN)
NAN_BOXED(1398272968,32,FLEN)
NAN_BOXED(1092074683,32,FLEN)
NAN_BOXED(1398272968,32,FLEN)
NAN_BOXED(1092074683,32,FLEN)
NAN_BOXED(1419807669,32,FLEN)
NAN_BOXED(1070340756,32,FLEN)
NAN_BOXED(1419807669,32,FLEN)
NAN_BOXED(1070340756,32,FLEN)
NAN_BOXED(1419807669,32,FLEN)
NAN_BOXED(1070340756,32,FLEN)
NAN_BOXED(1419807669,32,FLEN)
NAN_BOXED(1070340756,32,FLEN)
NAN_BOXED(1419807669,32,FLEN)
NAN_BOXED(1070340756,32,FLEN)
NAN_BOXED(1413557629,32,FLEN)
NAN_BOXED(1076469839,32,FLEN)
NAN_BOXED(1413557629,32,FLEN)
NAN_BOXED(1076469839,32,FLEN)
NAN_BOXED(1413557629,32,FLEN)
NAN_BOXED(1076469839,32,FLEN)
NAN_BOXED(1413557629,32,FLEN)
NAN_BOXED(1076469839,32,FLEN)
NAN_BOXED(1413557629,32,FLEN)
NAN_BOXED(1076469839,32,FLEN)
NAN_BOXED(1415354910,32,FLEN)
NAN_BOXED(1075087866,32,FLEN)
NAN_BOXED(1415354910,32,FLEN)
NAN_BOXED(1075087866,32,FLEN)
NAN_BOXED(1415354910,32,FLEN)
NAN_BOXED(1075087866,32,FLEN)
NAN_BOXED(1415354910,32,FLEN)
NAN_BOXED(1075087866,32,FLEN)
NAN_BOXED(1415354910,32,FLEN)
NAN_BOXED(1075087866,32,FLEN)
NAN_BOXED(1414257429,32,FLEN)
NAN_BOXED(1075887543,32,FLEN)
NAN_BOXED(1414257429,32,FLEN)
NAN_BOXED(1075887543,32,FLEN)
NAN_BOXED(1414257429,32,FLEN)
NAN_BOXED(1075887543,32,FLEN)
NAN_BOXED(1414257429,32,FLEN)
NAN_BOXED(1075887543,32,FLEN)
NAN_BOXED(1414257429,32,FLEN)
NAN_BOXED(1075887543,32,FLEN)
NAN_BOXED(1422900936,32,FLEN)
NAN_BOXED(1067301709,32,FLEN)
NAN_BOXED(1422900936,32,FLEN)
NAN_BOXED(1067301709,32,FLEN)
NAN_BOXED(1422900936,32,FLEN)
NAN_BOXED(1067301709,32,FLEN)
NAN_BOXED(1422900936,32,FLEN)
NAN_BOXED(1067301709,32,FLEN)
NAN_BOXED(1422900936,32,FLEN)
NAN_BOXED(1067301709,32,FLEN)
NAN_BOXED(1416761397,32,FLEN)
NAN_BOXED(1074224794,32,FLEN)
NAN_BOXED(1416761397,32,FLEN)
NAN_BOXED(1074224794,32,FLEN)
NAN_BOXED(1416761397,32,FLEN)
NAN_BOXED(1074224794,32,FLEN)
NAN_BOXED(1416761397,32,FLEN)
NAN_BOXED(1074224794,32,FLEN)
NAN_BOXED(1416761397,32,FLEN)
NAN_BOXED(1074224794,32,FLEN)
NAN_BOXED(1422126662,32,FLEN)
NAN_BOXED(1067925029,32,FLEN)
NAN_BOXED(1422126662,32,FLEN)
NAN_BOXED(1067925029,32,FLEN)
NAN_BOXED(1422126662,32,FLEN)
NAN_BOXED(1067925029,32,FLEN)
NAN_BOXED(1422126662,32,FLEN)
NAN_BOXED(1067925029,32,FLEN)
NAN_BOXED(1422126662,32,FLEN)
NAN_BOXED(1067925029,32,FLEN)
NAN_BOXED(1407883769,32,FLEN)
NAN_BOXED(1082895576,32,FLEN)
NAN_BOXED(1407883769,32,FLEN)
NAN_BOXED(1082895576,32,FLEN)
NAN_BOXED(1407883769,32,FLEN)
NAN_BOXED(1082895576,32,FLEN)
NAN_BOXED(1407883769,32,FLEN)
NAN_BOXED(1082895576,32,FLEN)
NAN_BOXED(1407883769,32,FLEN)
NAN_BOXED(1082895576,32,FLEN)
NAN_BOXED(1421014357,32,FLEN)
NAN_BOXED(1068964517,32,FLEN)
NAN_BOXED(1421014357,32,FLEN)
NAN_BOXED(1068964517,32,FLEN)
NAN_BOXED(1421014357,32,FLEN)
NAN_BOXED(1068964517,32,FLEN)
NAN_BOXED(1421014357,32,FLEN)
NAN_BOXED(1068964517,32,FLEN)
NAN_BOXED(1421014357,32,FLEN)
NAN_BOXED(1068964517,32,FLEN)
NAN_BOXED(1383779459,32,FLEN)
NAN_BOXED(1107470221,32,FLEN)
NAN_BOXED(1383779459,32,FLEN)
NAN_BOXED(1107470221,32,FLEN)
NAN_BOXED(1383779459,32,FLEN)
NAN_BOXED(1107470221,32,FLEN)
NAN_BOXED(1383779459,32,FLEN)
NAN_BOXED(1107470221,32,FLEN)
NAN_BOXED(1383779459,32,FLEN)
NAN_BOXED(1107470221,32,FLEN)
NAN_BOXED(1406065823,32,FLEN)
NAN_BOXED(1084123072,32,FLEN)
NAN_BOXED(1406065823,32,FLEN)
NAN_BOXED(1084123072,32,FLEN)
NAN_BOXED(1406065823,32,FLEN)
NAN_BOXED(1084123072,32,FLEN)
NAN_BOXED(1406065823,32,FLEN)
NAN_BOXED(1084123072,32,FLEN)
NAN_BOXED(1406065823,32,FLEN)
NAN_BOXED(1084123072,32,FLEN)
NAN_BOXED(1419013287,32,FLEN)
NAN_BOXED(1071433140,32,FLEN)
NAN_BOXED(1419013287,32,FLEN)
NAN_BOXED(1071433140,32,FLEN)
NAN_BOXED(1419013287,32,FLEN)
NAN_BOXED(1071433140,32,FLEN)
NAN_BOXED(1419013287,32,FLEN)
NAN_BOXED(1071433140,32,FLEN)
NAN_BOXED(1419013287,32,FLEN)
NAN_BOXED(1071433140,32,FLEN)
NAN_BOXED(1052755793,32,FLEN)
NAN_BOXED(715840796,32,FLEN)
NAN_BOXED(1052755793,32,FLEN)
NAN_BOXED(715840796,32,FLEN)
NAN_BOXED(1052755793,32,FLEN)
NAN_BOXED(715840796,32,FLEN)
NAN_BOXED(1052755793,32,FLEN)
NAN_BOXED(715840796,32,FLEN)
NAN_BOXED(1052755793,32,FLEN)
NAN_BOXED(715840796,32,FLEN)
NAN_BOXED(1050165016,32,FLEN)
NAN_BOXED(718748382,32,FLEN)
NAN_BOXED(1050165016,32,FLEN)
NAN_BOXED(718748382,32,FLEN)
NAN_BOXED(1050165016,32,FLEN)
NAN_BOXED(718748382,32,FLEN)
NAN_BOXED(1050165016,32,FLEN)
NAN_BOXED(718748382,32,FLEN)
NAN_BOXED(1050165016,32,FLEN)
NAN_BOXED(718748382,32,FLEN)
NAN_BOXED(1064551406,32,FLEN)
NAN_BOXED(705064098,32,FLEN)
NAN_BOXED(1064551406,32,FLEN)
NAN_BOXED(705064098,32,FLEN)
NAN_BOXED(1064551406,32,FLEN)
NAN_BOXED(705064098,32,FLEN)
NAN_BOXED(1064551406,32,FLEN)
NAN_BOXED(705064098,32,FLEN)
NAN_BOXED(1064551406,32,FLEN)
NAN_BOXED(705064098,32,FLEN)
NAN_BOXED(1043671562,32,FLEN)
NAN_BOXED(724885475,32,FLEN)
NAN_BOXED(1043671562,32,FLEN)
NAN_BOXED(724885475,32,FLEN)
NAN_BOXED(1043671562,32,FLEN)
NAN_BOXED(724885475,32,FLEN)
NAN_BOXED(1043671562,32,FLEN)
NAN_BOXED(724885475,32,FLEN)
NAN_BOXED(1043671562,32,FLEN)
NAN_BOXED(724885475,32,FLEN)
NAN_BOXED(1053672993,32,FLEN)
NAN_BOXED(715079201,32,FLEN)
NAN_BOXED(1053672993,32,FLEN)
NAN_BOXED(715079201,32,FLEN)
NAN_BOXED(1053672993,32,FLEN)
NAN_BOXED(715079201,32,FLEN)
NAN_BOXED(1053672993,32,FLEN)
NAN_BOXED(715079201,32,FLEN)
NAN_BOXED(1053672993,32,FLEN)
NAN_BOXED(715079201,32,FLEN)
NAN_BOXED(1062066816,32,FLEN)
NAN_BOXED(706686560,32,FLEN)
NAN_BOXED(1062066816,32,FLEN)
NAN_BOXED(706686560,32,FLEN)
NAN_BOXED(1062066816,32,FLEN)
NAN_BOXED(706686560,32,FLEN)
NAN_BOXED(1062066816,32,FLEN)
NAN_BOXED(706686560,32,FLEN)
NAN_BOXED(1062066816,32,FLEN)
NAN_BOXED(706686560,32,FLEN)
NAN_BOXED(1052406625,32,FLEN)
NAN_BOXED(716160774,32,FLEN)
NAN_BOXED(1052406625,32,FLEN)
NAN_BOXED(716160774,32,FLEN)
NAN_BOXED(1052406625,32,FLEN)
NAN_BOXED(716160774,32,FLEN)
NAN_BOXED(1052406625,32,FLEN)
NAN_BOXED(716160774,32,FLEN)
NAN_BOXED(1052406625,32,FLEN)
NAN_BOXED(716160774,32,FLEN)
NAN_BOXED(1062224659,32,FLEN)
NAN_BOXED(706565915,32,FLEN)
NAN_BOXED(1062224659,32,FLEN)
NAN_BOXED(706565915,32,FLEN)
NAN_BOXED(1062224659,32,FLEN)
NAN_BOXED(706565915,32,FLEN)
NAN_BOXED(1062224659,32,FLEN)
NAN_BOXED(706565915,32,FLEN)
NAN_BOXED(1062224659,32,FLEN)
NAN_BOXED(706565915,32,FLEN)
NAN_BOXED(1018456889,32,FLEN)
NAN_BOXED(750100272,32,FLEN)
NAN_BOXED(1018456889,32,FLEN)
NAN_BOXED(750100272,32,FLEN)
NAN_BOXED(1018456889,32,FLEN)
NAN_BOXED(750100272,32,FLEN)
NAN_BOXED(1018456889,32,FLEN)
NAN_BOXED(750100272,32,FLEN)
NAN_BOXED(1018456889,32,FLEN)
NAN_BOXED(750100272,32,FLEN)
NAN_BOXED(1057570576,32,FLEN)
NAN_BOXED(711901392,32,FLEN)
NAN_BOXED(1057570576,32,FLEN)
NAN_BOXED(711901392,32,FLEN)
NAN_BOXED(1057570576,32,FLEN)
NAN_BOXED(711901392,32,FLEN)
NAN_BOXED(1057570576,32,FLEN)
NAN_BOXED(711901392,32,FLEN)
NAN_BOXED(1057570576,32,FLEN)
NAN_BOXED(711901392,32,FLEN)
NAN_BOXED(1061849027,32,FLEN)
NAN_BOXED(706857733,32,FLEN)
NAN_BOXED(1061849027,32,FLEN)
NAN_BOXED(706857733,32,FLEN)
NAN_BOXED(1061849027,32,FLEN)
NAN_BOXED(706857733,32,FLEN)
NAN_BOXED(1061849027,32,FLEN)
NAN_BOXED(706857733,32,FLEN)
NAN_BOXED(1061849027,32,FLEN)
NAN_BOXED(706857733,32,FLEN)
NAN_BOXED(1050222333,32,FLEN)
NAN_BOXED(718667817,32,FLEN)
NAN_BOXED(1050222333,32,FLEN)
NAN_BOXED(718667817,32,FLEN)
NAN_BOXED(1050222333,32,FLEN)
NAN_BOXED(718667817,32,FLEN)
NAN_BOXED(1050222333,32,FLEN)
NAN_BOXED(718667817,32,FLEN)
NAN_BOXED(1050222333,32,FLEN)
NAN_BOXED(718667817,32,FLEN)
NAN_BOXED(1036502039,32,FLEN)
NAN_BOXED(732170285,32,FLEN)
NAN_BOXED(1036502039,32,FLEN)
NAN_BOXED(732170285,32,FLEN)
NAN_BOXED(1036502039,32,FLEN)
NAN_BOXED(732170285,32,FLEN)
NAN_BOXED(1036502039,32,FLEN)
NAN_BOXED(732170285,32,FLEN)
NAN_BOXED(1036502039,32,FLEN)
NAN_BOXED(732170285,32,FLEN)
NAN_BOXED(1058429481,32,FLEN)
NAN_BOXED(710537486,32,FLEN)
NAN_BOXED(1058429481,32,FLEN)
NAN_BOXED(710537486,32,FLEN)
NAN_BOXED(1058429481,32,FLEN)
NAN_BOXED(710537486,32,FLEN)
NAN_BOXED(1058429481,32,FLEN)
NAN_BOXED(710537486,32,FLEN)
NAN_BOXED(1058429481,32,FLEN)
NAN_BOXED(710537486,32,FLEN)
NAN_BOXED(1049567184,32,FLEN)
NAN_BOXED(719647399,32,FLEN)
NAN_BOXED(1049567184,32,FLEN)
NAN_BOXED(719647399,32,FLEN)
NAN_BOXED(1049567184,32,FLEN)
NAN_BOXED(719647399,32,FLEN)
NAN_BOXED(1049567184,32,FLEN)
NAN_BOXED(719647399,32,FLEN)
NAN_BOXED(1049567184,32,FLEN)
NAN_BOXED(719647399,32,FLEN)
NAN_BOXED(1051620897,32,FLEN)
NAN_BOXED(716952288,32,FLEN)
NAN_BOXED(1051620897,32,FLEN)
NAN_BOXED(716952288,32,FLEN)
NAN_BOXED(1051620897,32,FLEN)
NAN_BOXED(716952288,32,FLEN)
NAN_BOXED(1051620897,32,FLEN)
NAN_BOXED(716952288,32,FLEN)
NAN_BOXED(1051620897,32,FLEN)
NAN_BOXED(716952288,32,FLEN)
NAN_BOXED(1050176039,32,FLEN)
NAN_BOXED(718732815,32,FLEN)
NAN_BOXED(1050176039,32,FLEN)
NAN_BOXED(718732815,32,FLEN)
NAN_BOXED(1050176039,32,FLEN)
NAN_BOXED(718732815,32,FLEN)
NAN_BOXED(1050176039,32,FLEN)
NAN_BOXED(718732815,32,FLEN)
NAN_BOXED(1050176039,32,FLEN)
NAN_BOXED(718732815,32,FLEN)
NAN_BOXED(1035424832,32,FLEN)
NAN_BOXED(733134104,32,FLEN)
NAN_BOXED(1035424832,32,FLEN)
NAN_BOXED(733134104,32,FLEN)
NAN_BOXED(1035424832,32,FLEN)
NAN_BOXED(733134104,32,FLEN)
NAN_BOXED(1035424832,32,FLEN)
NAN_BOXED(733134104,32,FLEN)
NAN_BOXED(1035424832,32,FLEN)
NAN_BOXED(733134104,32,FLEN)
NAN_BOXED(1059762704,32,FLEN)
NAN_BOXED(708835246,32,FLEN)
NAN_BOXED(1059762704,32,FLEN)
NAN_BOXED(708835246,32,FLEN)
NAN_BOXED(1059762704,32,FLEN)
NAN_BOXED(708835246,32,FLEN)
NAN_BOXED(1059762704,32,FLEN)
NAN_BOXED(708835246,32,FLEN)
NAN_BOXED(1059762704,32,FLEN)
NAN_BOXED(708835246,32,FLEN)
NAN_BOXED(1058769798,32,FLEN)
NAN_BOXED(710060652,32,FLEN)
NAN_BOXED(1058769798,32,FLEN)
NAN_BOXED(710060652,32,FLEN)
NAN_BOXED(1058769798,32,FLEN)
NAN_BOXED(710060652,32,FLEN)
NAN_BOXED(1058769798,32,FLEN)
NAN_BOXED(710060652,32,FLEN)
NAN_BOXED(1058769798,32,FLEN)
NAN_BOXED(710060652,32,FLEN)
NAN_BOXED(1033636674,32,FLEN)
NAN_BOXED(735182329,32,FLEN)
NAN_BOXED(1033636674,32,FLEN)
NAN_BOXED(735182329,32,FLEN)
NAN_BOXED(1033636674,32,FLEN)
NAN_BOXED(735182329,32,FLEN)
NAN_BOXED(1033636674,32,FLEN)
NAN_BOXED(735182329,32,FLEN)
NAN_BOXED(1033636674,32,FLEN)
NAN_BOXED(735182329,32,FLEN)
NAN_BOXED(1047087431,32,FLEN)
NAN_BOXED(722237039,32,FLEN)
NAN_BOXED(1047087431,32,FLEN)
NAN_BOXED(722237039,32,FLEN)
NAN_BOXED(1047087431,32,FLEN)
NAN_BOXED(722237039,32,FLEN)
NAN_BOXED(1047087431,32,FLEN)
NAN_BOXED(722237039,32,FLEN)
NAN_BOXED(1047087431,32,FLEN)
NAN_BOXED(722237039,32,FLEN)
NAN_BOXED(1046144196,32,FLEN)
NAN_BOXED(722842307,32,FLEN)
NAN_BOXED(1046144196,32,FLEN)
NAN_BOXED(722842307,32,FLEN)
NAN_BOXED(1046144196,32,FLEN)
NAN_BOXED(722842307,32,FLEN)
NAN_BOXED(1046144196,32,FLEN)
NAN_BOXED(722842307,32,FLEN)
NAN_BOXED(1046144196,32,FLEN)
NAN_BOXED(722842307,32,FLEN)
NAN_BOXED(1057727724,32,FLEN)
NAN_BOXED(711632711,32,FLEN)
NAN_BOXED(1057727724,32,FLEN)
NAN_BOXED(711632711,32,FLEN)
NAN_BOXED(1057727724,32,FLEN)
NAN_BOXED(711632711,32,FLEN)
NAN_BOXED(1057727724,32,FLEN)
NAN_BOXED(711632711,32,FLEN)
NAN_BOXED(1057727724,32,FLEN)
NAN_BOXED(711632711,32,FLEN)
NAN_BOXED(1057413523,32,FLEN)
NAN_BOXED(712179456,32,FLEN)
NAN_BOXED(1057413523,32,FLEN)
NAN_BOXED(712179456,32,FLEN)
NAN_BOXED(1057413523,32,FLEN)
NAN_BOXED(712179456,32,FLEN)
NAN_BOXED(1057413523,32,FLEN)
NAN_BOXED(712179456,32,FLEN)
NAN_BOXED(1057413523,32,FLEN)
NAN_BOXED(712179456,32,FLEN)
NAN_BOXED(1062151333,32,FLEN)
NAN_BOXED(706621612,32,FLEN)
NAN_BOXED(1062151333,32,FLEN)
NAN_BOXED(706621612,32,FLEN)
NAN_BOXED(1062151333,32,FLEN)
NAN_BOXED(706621612,32,FLEN)
NAN_BOXED(1062151333,32,FLEN)
NAN_BOXED(706621612,32,FLEN)
NAN_BOXED(1062151333,32,FLEN)
NAN_BOXED(706621612,32,FLEN)
NAN_BOXED(1062129803,32,FLEN)
NAN_BOXED(706638080,32,FLEN)
NAN_BOXED(1062129803,32,FLEN)
NAN_BOXED(706638080,32,FLEN)
NAN_BOXED(1062129803,32,FLEN)
NAN_BOXED(706638080,32,FLEN)
NAN_BOXED(1062129803,32,FLEN)
NAN_BOXED(706638080,32,FLEN)
NAN_BOXED(1062129803,32,FLEN)
NAN_BOXED(706638080,32,FLEN)
NAN_BOXED(1054504797,32,FLEN)
NAN_BOXED(714472890,32,FLEN)
NAN_BOXED(1054504797,32,FLEN)
NAN_BOXED(714472890,32,FLEN)
NAN_BOXED(1054504797,32,FLEN)
NAN_BOXED(714472890,32,FLEN)
NAN_BOXED(1054504797,32,FLEN)
NAN_BOXED(714472890,32,FLEN)
NAN_BOXED(1054504797,32,FLEN)
NAN_BOXED(714472890,32,FLEN)
NAN_BOXED(1062493961,32,FLEN)
NAN_BOXED(706366396,32,FLEN)
NAN_BOXED(1062493961,32,FLEN)
NAN_BOXED(706366396,32,FLEN)
NAN_BOXED(1062493961,32,FLEN)
NAN_BOXED(706366396,32,FLEN)
NAN_BOXED(1062493961,32,FLEN)
NAN_BOXED(706366396,32,FLEN)
NAN_BOXED(1062493961,32,FLEN)
NAN_BOXED(706366396,32,FLEN)
NAN_BOXED(1041182092,32,FLEN)
NAN_BOXED(728030386,32,FLEN)
NAN_BOXED(1041182092,32,FLEN)
NAN_BOXED(728030386,32,FLEN)
NAN_BOXED(1041182092,32,FLEN)
NAN_BOXED(728030386,32,FLEN)
NAN_BOXED(1041182092,32,FLEN)
NAN_BOXED(728030386,32,FLEN)
NAN_BOXED(1041182092,32,FLEN)
NAN_BOXED(728030386,32,FLEN)
NAN_BOXED(1053082738,32,FLEN)
NAN_BOXED(715556891,32,FLEN)
NAN_BOXED(1053082738,32,FLEN)
NAN_BOXED(715556891,32,FLEN)
NAN_BOXED(1053082738,32,FLEN)
NAN_BOXED(715556891,32,FLEN)
NAN_BOXED(1053082738,32,FLEN)
NAN_BOXED(715556891,32,FLEN)
NAN_BOXED(1053082738,32,FLEN)
NAN_BOXED(715556891,32,FLEN)
NAN_BOXED(1038866110,32,FLEN)
NAN_BOXED(730526012,32,FLEN)
NAN_BOXED(1038866110,32,FLEN)
NAN_BOXED(730526012,32,FLEN)
NAN_BOXED(1038866110,32,FLEN)
NAN_BOXED(730526012,32,FLEN)
NAN_BOXED(1038866110,32,FLEN)
NAN_BOXED(730526012,32,FLEN)
NAN_BOXED(1038866110,32,FLEN)
NAN_BOXED(730526012,32,FLEN)
NAN_BOXED(1060188840,32,FLEN)
NAN_BOXED(708373590,32,FLEN)
NAN_BOXED(1060188840,32,FLEN)
NAN_BOXED(708373590,32,FLEN)
NAN_BOXED(1060188840,32,FLEN)
NAN_BOXED(708373590,32,FLEN)
NAN_BOXED(1060188840,32,FLEN)
NAN_BOXED(708373590,32,FLEN)
NAN_BOXED(1060188840,32,FLEN)
NAN_BOXED(708373590,32,FLEN)
NAN_BOXED(1042746739,32,FLEN)
NAN_BOXED(725886819,32,FLEN)
NAN_BOXED(1042746739,32,FLEN)
NAN_BOXED(725886819,32,FLEN)
NAN_BOXED(1042746739,32,FLEN)
NAN_BOXED(725886819,32,FLEN)
NAN_BOXED(1042746739,32,FLEN)
NAN_BOXED(725886819,32,FLEN)
NAN_BOXED(1042746739,32,FLEN)
NAN_BOXED(725886819,32,FLEN)
NAN_BOXED(1065141393,32,FLEN)
NAN_BOXED(704750337,32,FLEN)
NAN_BOXED(1065141393,32,FLEN)
NAN_BOXED(704750337,32,FLEN)
NAN_BOXED(1065141393,32,FLEN)
NAN_BOXED(704750337,32,FLEN)
NAN_BOXED(1065141393,32,FLEN)
NAN_BOXED(704750337,32,FLEN)
NAN_BOXED(1065141393,32,FLEN)
NAN_BOXED(704750337,32,FLEN)
NAN_BOXED(1062032895,32,FLEN)
NAN_BOXED(706712856,32,FLEN)
NAN_BOXED(1062032895,32,FLEN)
NAN_BOXED(706712856,32,FLEN)
NAN_BOXED(1062032895,32,FLEN)
NAN_BOXED(706712856,32,FLEN)
NAN_BOXED(1062032895,32,FLEN)
NAN_BOXED(706712856,32,FLEN)
NAN_BOXED(1062032895,32,FLEN)
NAN_BOXED(706712856,32,FLEN)
NAN_BOXED(1060002357,32,FLEN)
NAN_BOXED(708571381,32,FLEN)
NAN_BOXED(1060002357,32,FLEN)
NAN_BOXED(708571381,32,FLEN)
NAN_BOXED(1060002357,32,FLEN)
NAN_BOXED(708571381,32,FLEN)
NAN_BOXED(1060002357,32,FLEN)
NAN_BOXED(708571381,32,FLEN)
NAN_BOXED(1060002357,32,FLEN)
NAN_BOXED(708571381,32,FLEN)
NAN_BOXED(1049443604,32,FLEN)
NAN_BOXED(719847723,32,FLEN)
NAN_BOXED(1049443604,32,FLEN)
NAN_BOXED(719847723,32,FLEN)
NAN_BOXED(1049443604,32,FLEN)
NAN_BOXED(719847723,32,FLEN)
NAN_BOXED(1049443604,32,FLEN)
NAN_BOXED(719847723,32,FLEN)
NAN_BOXED(1049443604,32,FLEN)
NAN_BOXED(719847723,32,FLEN)
NAN_BOXED(1057961680,32,FLEN)
NAN_BOXED(711249379,32,FLEN)
NAN_BOXED(1057961680,32,FLEN)
NAN_BOXED(711249379,32,FLEN)
NAN_BOXED(1057961680,32,FLEN)
NAN_BOXED(711249379,32,FLEN)
NAN_BOXED(1057961680,32,FLEN)
NAN_BOXED(711249379,32,FLEN)
NAN_BOXED(1057961680,32,FLEN)
NAN_BOXED(711249379,32,FLEN)
NAN_BOXED(1042972979,32,FLEN)
NAN_BOXED(725626545,32,FLEN)
NAN_BOXED(1042972979,32,FLEN)
NAN_BOXED(725626545,32,FLEN)
NAN_BOXED(1042972979,32,FLEN)
NAN_BOXED(725626545,32,FLEN)
NAN_BOXED(1042972979,32,FLEN)
NAN_BOXED(725626545,32,FLEN)
NAN_BOXED(1042972979,32,FLEN)
NAN_BOXED(725626545,32,FLEN)
NAN_BOXED(1054287077,32,FLEN)
NAN_BOXED(714624677,32,FLEN)
NAN_BOXED(1054287077,32,FLEN)
NAN_BOXED(714624677,32,FLEN)
NAN_BOXED(1054287077,32,FLEN)
NAN_BOXED(714624677,32,FLEN)
NAN_BOXED(1054287077,32,FLEN)
NAN_BOXED(714624677,32,FLEN)
NAN_BOXED(1054287077,32,FLEN)
NAN_BOXED(714624677,32,FLEN)
NAN_BOXED(1062827714,32,FLEN)
NAN_BOXED(706129591,32,FLEN)
NAN_BOXED(1062827714,32,FLEN)
NAN_BOXED(706129591,32,FLEN)
NAN_BOXED(1062827714,32,FLEN)
NAN_BOXED(706129591,32,FLEN)
NAN_BOXED(1062827714,32,FLEN)
NAN_BOXED(706129591,32,FLEN)
NAN_BOXED(1062827714,32,FLEN)
NAN_BOXED(706129591,32,FLEN)
NAN_BOXED(1026823528,32,FLEN)
NAN_BOXED(45,32,FLEN)
NAN_BOXED(1026823528,32,FLEN)
NAN_BOXED(45,32,FLEN)
NAN_BOXED(1058127778,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1058127778,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1058127778,32,FLEN)
NAN_BOXED(3,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 50*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_12:
    .fill 248*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
