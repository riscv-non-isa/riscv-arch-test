
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 07:30:48 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fnmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fnmadd_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fnmadd_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x30, rs2==x31, rs3==x29, rd==x31,fs1 == 0 and fe1 == 0x7c and fm1 == 0x539ea8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c8df0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3651ad and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x31; op3:x29; dest:x31; op1val:0x3e539ea8; op2val:0x3f5c8df0;
op3val:0x3e3651ad; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x31, x29, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x29, rs2==x29, rs3==x31, rd==x30,fs1 == 0 and fe1 == 0x7c and fm1 == 0x539ea8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c8df0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3651ad and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x29; op2:x29; op3:x31; dest:x30; op1val:0x3e539ea8; op2val:0x3e539ea8;
op3val:0x3e3651ad; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x30, x29, x29, x31, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x28, rs2==x28, rs3==x30, rd==x28,fs1 == 0 and fe1 == 0x7c and fm1 == 0x539ea8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c8df0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3651ad and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x28; op2:x28; op3:x30; dest:x28; op1val:0x3e539ea8; op2val:0x3e539ea8;
op3val:0x3e3651ad; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x28, x28, x28, x30, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==x27, rs2==x30, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0x7c and fm1 == 0x539ea8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c8df0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3651ad and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x27; op2:x30; op3:x27; dest:x27; op1val:0x3e539ea8; op2val:0x3f5c8df0;
op3val:0x3e539ea8; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x27, x27, x30, x27, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x26, rs2==x27, rs3==x28, rd==x26,fs1 == 0 and fe1 == 0x7c and fm1 == 0x539ea8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c8df0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3651ad and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x26; op2:x27; op3:x28; dest:x26; op1val:0x3e539ea8; op2val:0x3f5c8df0;
op3val:0x3e3651ad; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x26, x26, x27, x28, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==x25, rs2==x25, rs3==x25, rd==x29,fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d4c5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37881a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d065f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x25; op2:x25; op3:x25; dest:x29; op1val:0x3f03d4c5; op2val:0x3f03d4c5;
op3val:0x3f03d4c5; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x29, x25, x25, x25, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==x31, rs2==x24, rs3==x24, rd==x24,fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d4c5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37881a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d065f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x31; op2:x24; op3:x24; dest:x24; op1val:0x3f03d4c5; op2val:0x3fb7881a;
op3val:0x3fb7881a; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x24, x31, x24, x24, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x24, rs2==x26, rs3==x26, rd==x25,fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d4c5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37881a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d065f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x24; op2:x26; op3:x26; dest:x25; op1val:0x3f03d4c5; op2val:0x3fb7881a;
op3val:0x3fb7881a; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x25, x24, x26, x26, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x22, rs2==x21, rs3==x20, rd==x23,fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d4c5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37881a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d065f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x22; op2:x21; op3:x20; dest:x23; op1val:0x3f03d4c5; op2val:0x3fb7881a;
op3val:0x3f3d065f; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x23, x22, x21, x20, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d4c5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37881a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d065f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0x3f03d4c5; op2val:0x3f03d4c5;
op3val:0x3f03d4c5; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x19, x19, x19, x19, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x23, rs2==x20, rs3==x22, rd==x22,fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe265 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb704 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2ca30b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x23; op2:x20; op3:x22; dest:x22; op1val:0x3f7fe265; op2val:0x3eacb704;
op3val:0x3eaca30b; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x22, x23, x20, x22, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x18, rs2==x23, rs3==x18, rd==x21,fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe265 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb704 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2ca30b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x18; op2:x23; op3:x18; dest:x21; op1val:0x3f7fe265; op2val:0x3eacb704;
op3val:0x3f7fe265; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x21, x18, x23, x18, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x21, rs2==x22, rs3==x23, rd==x20,fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe265 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb704 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2ca30b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x21; op2:x22; op3:x23; dest:x20; op1val:0x3f7fe265; op2val:0x3eacb704;
op3val:0x3eaca30b; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x20, x21, x22, x23, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x20, rs2==x17, rs3==x21, rd==x18,fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe265 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb704 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2ca30b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x20; op2:x17; op3:x21; dest:x18; op1val:0x3f7fe265; op2val:0x3eacb704;
op3val:0x3eaca30b; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x18, x20, x17, x21, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x18, rs3==x15, rd==x17,fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe265 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb704 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2ca30b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x16; op2:x18; op3:x15; dest:x17; op1val:0x3f7fe265; op2val:0x3eacb704;
op3val:0x3eaca30b; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x17, x16, x18, x15, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x17, rs2==x15, rs3==x14, rd==x16,fs1 == 0 and fe1 == 0x7e and fm1 == 0x079d6a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x68387e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x76092c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x17; op2:x15; op3:x14; dest:x16; op1val:0x3f079d6a; op2val:0x3ee8387e;
op3val:0x3e76092c; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x16, x17, x15, x14, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rs3==x17, rd==x15,fs1 == 0 and fe1 == 0x7e and fm1 == 0x079d6a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x68387e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x76092c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x14; op2:x16; op3:x17; dest:x15; op1val:0x3f079d6a; op2val:0x3ee8387e;
op3val:0x3e76092c; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x15, x14, x16, x17, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x15, rs2==x13, rs3==x16, rd==x14,fs1 == 0 and fe1 == 0x7e and fm1 == 0x079d6a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x68387e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x76092c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x15; op2:x13; op3:x16; dest:x14; op1val:0x3f079d6a; op2val:0x3ee8387e;
op3val:0x3e76092c; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x14, x15, x13, x16, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x14, rs3==x11, rd==x13,fs1 == 0 and fe1 == 0x7e and fm1 == 0x079d6a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x68387e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x76092c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x12; op2:x14; op3:x11; dest:x13; op1val:0x3f079d6a; op2val:0x3ee8387e;
op3val:0x3e76092c; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x13, x12, x14, x11, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x13, rs2==x11, rs3==x10, rd==x12,fs1 == 0 and fe1 == 0x7e and fm1 == 0x079d6a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x68387e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x76092c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x13; op2:x11; op3:x10; dest:x12; op1val:0x3f079d6a; op2val:0x3ee8387e;
op3val:0x3e76092c; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x12, x13, x11, x10, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x12, rs3==x13, rd==x11,fs1 == 0 and fe1 == 0x7e and fm1 == 0x20788f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3bbfb3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6b6076 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x10; op2:x12; op3:x13; dest:x11; op1val:0x3f20788f; op2val:0x3ebbbfb3;
op3val:0x3e6b6076; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x11, x10, x12, x13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x12,test_dataset_1)

inst_21:
// rs1==x11, rs2==x9, rs3==x12, rd==x10,fs1 == 0 and fe1 == 0x7e and fm1 == 0x20788f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3bbfb3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6b6076 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x11; op2:x9; op3:x12; dest:x10; op1val:0x3f20788f; op2val:0x3ebbbfb3;
op3val:0x3e6b6076; valaddr_reg:x12; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x10, x11, x9, x12, dyn, 32, 0, x12, 0*FLEN/8, x13, x1, x2)

inst_22:
// rs1==x8, rs2==x10, rs3==x7, rd==x9,fs1 == 0 and fe1 == 0x7e and fm1 == 0x20788f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3bbfb3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6b6076 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x8; op2:x10; op3:x7; dest:x9; op1val:0x3f20788f; op2val:0x3ebbbfb3;
op3val:0x3e6b6076; valaddr_reg:x12; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x9, x8, x10, x7, dyn, 64, 0, x12, 3*FLEN/8, x13, x1, x2)

inst_23:
// rs1==x9, rs2==x7, rs3==x6, rd==x8,fs1 == 0 and fe1 == 0x7e and fm1 == 0x20788f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3bbfb3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6b6076 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x9; op2:x7; op3:x6; dest:x8; op1val:0x3f20788f; op2val:0x3ebbbfb3;
op3val:0x3e6b6076; valaddr_reg:x12; val_offset:6*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x8, x9, x7, x6, dyn, 96, 0, x12, 6*FLEN/8, x13, x1, x10)
RVTEST_SIGBASE(x9,signature_x9_0)

inst_24:
// rs1==x6, rs2==x8, rs3==x9, rd==x7,fs1 == 0 and fe1 == 0x7e and fm1 == 0x20788f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3bbfb3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6b6076 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x6; op2:x8; op3:x9; dest:x7; op1val:0x3f20788f; op2val:0x3ebbbfb3;
op3val:0x3e6b6076; valaddr_reg:x12; val_offset:9*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x7, x6, x8, x9, dyn, 128, 0, x12, 9*FLEN/8, x13, x9, x10)

inst_25:
// rs1==x7, rs2==x5, rs3==x8, rd==x6,fs1 == 0 and fe1 == 0x7e and fm1 == 0x3a3075 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7226 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4ad6aa and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x7; op2:x5; op3:x8; dest:x6; op1val:0x3f3a3075; op2val:0x3e8b7226;
op3val:0x3e4ad6aa; valaddr_reg:x12; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x6, x7, x5, x8, dyn, 0, 0, x12, 12*FLEN/8, x13, x9, x10)

inst_26:
// rs1==x4, rs2==x6, rs3==x3, rd==x5,fs1 == 0 and fe1 == 0x7e and fm1 == 0x3a3075 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7226 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4ad6aa and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x4; op2:x6; op3:x3; dest:x5; op1val:0x3f3a3075; op2val:0x3e8b7226;
op3val:0x3e4ad6aa; valaddr_reg:x12; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x5, x4, x6, x3, dyn, 32, 0, x12, 15*FLEN/8, x13, x9, x10)

inst_27:
// rs1==x5, rs2==x3, rs3==x2, rd==x4,fs1 == 0 and fe1 == 0x7e and fm1 == 0x3a3075 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7226 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4ad6aa and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x5; op2:x3; op3:x2; dest:x4; op1val:0x3f3a3075; op2val:0x3e8b7226;
op3val:0x3e4ad6aa; valaddr_reg:x12; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x4, x5, x3, x2, dyn, 64, 0, x12, 18*FLEN/8, x13, x9, x10)

inst_28:
// rs1==x2, rs2==x4, rs3==x5, rd==x3,fs1 == 0 and fe1 == 0x7e and fm1 == 0x3a3075 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7226 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4ad6aa and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x2; op2:x4; op3:x5; dest:x3; op1val:0x3f3a3075; op2val:0x3e8b7226;
op3val:0x3e4ad6aa; valaddr_reg:x12; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x3, x2, x4, x5, dyn, 96, 0, x12, 21*FLEN/8, x13, x9, x10)

inst_29:
// rs1==x3, rs2==x1, rs3==x4, rd==x2,fs1 == 0 and fe1 == 0x7e and fm1 == 0x3a3075 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7226 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4ad6aa and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x3; op2:x1; op3:x4; dest:x2; op1val:0x3f3a3075; op2val:0x3e8b7226;
op3val:0x3e4ad6aa; valaddr_reg:x12; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x2, x3, x1, x4, dyn, 128, 0, x12, 24*FLEN/8, x13, x9, x10)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a5466 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0acfe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1603ac and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x3e8a5466; op2val:0x400acfe7;
op3val:0x3f1603ac; valaddr_reg:x12; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x1, x30, x29, dyn, 0, 0, x12, 27*FLEN/8, x13, x9, x10)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a5466 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0acfe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1603ac and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0x400acfe7;
op3val:0x3f1603ac; valaddr_reg:x12; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x0, x30, x29, dyn, 32, 0, x12, 30*FLEN/8, x13, x9, x10)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a5466 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0acfe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1603ac and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x3e8a5466; op2val:0x400acfe7;
op3val:0x3f1603ac; valaddr_reg:x12; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x2, x29, dyn, 64, 0, x12, 33*FLEN/8, x13, x9, x10)

inst_33:
// rs2==x0,fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a5466 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0acfe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1603ac and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x3e8a5466; op2val:0x0;
op3val:0x3f1603ac; valaddr_reg:x12; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x0, x29, dyn, 96, 0, x12, 36*FLEN/8, x13, x9, x10)

inst_34:
// rs3==x1,fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a5466 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0acfe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1603ac and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x3e8a5466; op2val:0x400acfe7;
op3val:0x3f1603ac; valaddr_reg:x12; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x1, dyn, 128, 0, x12, 39*FLEN/8, x13, x9, x10)

inst_35:
// rs3==x0,fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c6342 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x304bab and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22ca1d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x0; dest:x31; op1val:0x3eec6342; op2val:0x3f304bab;
op3val:0x0; valaddr_reg:x12; val_offset:42*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x0, dyn, 0, 0, x12, 42*FLEN/8, x13, x9, x10)

inst_36:
// rd==x1,fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c6342 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x304bab and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22ca1d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x3eec6342; op2val:0x3f304bab;
op3val:0x3ea2ca1d; valaddr_reg:x12; val_offset:45*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x1, x31, x30, x29, dyn, 32, 0, x12, 45*FLEN/8, x13, x9, x10)

inst_37:
// rd==x0,fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c6342 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x304bab and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22ca1d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x3eec6342; op2val:0x3f304bab;
op3val:0x3ea2ca1d; valaddr_reg:x12; val_offset:48*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x0, x31, x30, x29, dyn, 64, 0, x12, 48*FLEN/8, x13, x9, x10)

inst_38:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c6342 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x304bab and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22ca1d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eec6342; op2val:0x3f304bab;
op3val:0x3ea2ca1d; valaddr_reg:x12; val_offset:51*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 51*FLEN/8, x13, x9, x10)

inst_39:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c6342 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x304bab and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22ca1d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eec6342; op2val:0x3f304bab;
op3val:0x3ea2ca1d; valaddr_reg:x12; val_offset:54*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 54*FLEN/8, x13, x9, x10)

inst_40:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e988b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d99f9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x648c8d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e988b; op2val:0x3f0d99f9;
op3val:0x3ee48c8d; valaddr_reg:x12; val_offset:57*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57*FLEN/8, x13, x9, x10)

inst_41:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e988b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d99f9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x648c8d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e988b; op2val:0x3f0d99f9;
op3val:0x3ee48c8d; valaddr_reg:x12; val_offset:60*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 60*FLEN/8, x13, x9, x10)

inst_42:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e988b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d99f9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x648c8d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e988b; op2val:0x3f0d99f9;
op3val:0x3ee48c8d; valaddr_reg:x12; val_offset:63*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 63*FLEN/8, x13, x9, x10)

inst_43:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e988b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d99f9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x648c8d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e988b; op2val:0x3f0d99f9;
op3val:0x3ee48c8d; valaddr_reg:x12; val_offset:66*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 66*FLEN/8, x13, x9, x10)

inst_44:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e988b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d99f9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x648c8d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e988b; op2val:0x3f0d99f9;
op3val:0x3ee48c8d; valaddr_reg:x12; val_offset:69*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 69*FLEN/8, x13, x9, x10)

inst_45:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x478d8f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x713694 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c06cf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e478d8f; op2val:0x40713694;
op3val:0x3f3c06cf; valaddr_reg:x12; val_offset:72*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 72*FLEN/8, x13, x9, x10)

inst_46:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x478d8f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x713694 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c06cf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e478d8f; op2val:0x40713694;
op3val:0x3f3c06cf; valaddr_reg:x12; val_offset:75*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 75*FLEN/8, x13, x9, x10)

inst_47:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x478d8f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x713694 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c06cf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e478d8f; op2val:0x40713694;
op3val:0x3f3c06cf; valaddr_reg:x12; val_offset:78*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 78*FLEN/8, x13, x9, x10)

inst_48:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x478d8f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x713694 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c06cf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e478d8f; op2val:0x40713694;
op3val:0x3f3c06cf; valaddr_reg:x12; val_offset:81*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 81*FLEN/8, x13, x9, x10)

inst_49:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x478d8f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x713694 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c06cf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e478d8f; op2val:0x40713694;
op3val:0x3f3c06cf; valaddr_reg:x12; val_offset:84*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 84*FLEN/8, x13, x9, x10)

inst_50:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x495a9a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c99e8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ed41 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e495a9a; op2val:0x3fcc99e8;
op3val:0x3ea0ed41; valaddr_reg:x12; val_offset:87*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 87*FLEN/8, x13, x9, x10)

inst_51:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x495a9a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c99e8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ed41 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e495a9a; op2val:0x3fcc99e8;
op3val:0x3ea0ed41; valaddr_reg:x12; val_offset:90*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 90*FLEN/8, x13, x9, x10)

inst_52:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x495a9a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c99e8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ed41 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e495a9a; op2val:0x3fcc99e8;
op3val:0x3ea0ed41; valaddr_reg:x12; val_offset:93*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 93*FLEN/8, x13, x9, x10)

inst_53:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x495a9a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c99e8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ed41 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e495a9a; op2val:0x3fcc99e8;
op3val:0x3ea0ed41; valaddr_reg:x12; val_offset:96*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 96*FLEN/8, x13, x9, x10)

inst_54:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x495a9a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c99e8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ed41 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e495a9a; op2val:0x3fcc99e8;
op3val:0x3ea0ed41; valaddr_reg:x12; val_offset:99*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 99*FLEN/8, x13, x9, x10)

inst_55:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1f7474 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0889b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a174c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1f7474; op2val:0x408889b8;
op3val:0x3f2a174c; valaddr_reg:x12; val_offset:102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 102*FLEN/8, x13, x9, x10)

inst_56:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1f7474 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0889b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a174c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1f7474; op2val:0x408889b8;
op3val:0x3f2a174c; valaddr_reg:x12; val_offset:105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 105*FLEN/8, x13, x9, x10)

inst_57:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1f7474 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0889b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a174c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1f7474; op2val:0x408889b8;
op3val:0x3f2a174c; valaddr_reg:x12; val_offset:108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 108*FLEN/8, x13, x9, x10)

inst_58:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1f7474 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0889b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a174c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1f7474; op2val:0x408889b8;
op3val:0x3f2a174c; valaddr_reg:x12; val_offset:111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 111*FLEN/8, x13, x9, x10)

inst_59:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1f7474 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0889b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a174c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1f7474; op2val:0x408889b8;
op3val:0x3f2a174c; valaddr_reg:x12; val_offset:114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 114*FLEN/8, x13, x9, x10)

inst_60:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x682854 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x61837c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c82af and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f682854; op2val:0x3e61837c;
op3val:0x3e4c82af; valaddr_reg:x12; val_offset:117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 117*FLEN/8, x13, x9, x10)

inst_61:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x682854 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x61837c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c82af and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f682854; op2val:0x3e61837c;
op3val:0x3e4c82af; valaddr_reg:x12; val_offset:120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 120*FLEN/8, x13, x9, x10)

inst_62:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x682854 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x61837c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c82af and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f682854; op2val:0x3e61837c;
op3val:0x3e4c82af; valaddr_reg:x12; val_offset:123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 123*FLEN/8, x13, x9, x10)

inst_63:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x682854 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x61837c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c82af and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f682854; op2val:0x3e61837c;
op3val:0x3e4c82af; valaddr_reg:x12; val_offset:126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 126*FLEN/8, x13, x9, x10)

inst_64:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x682854 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x61837c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c82af and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f682854; op2val:0x3e61837c;
op3val:0x3e4c82af; valaddr_reg:x12; val_offset:129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 129*FLEN/8, x13, x9, x10)

inst_65:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x47e75a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x35e15e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e068f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e47e75a; op2val:0x4035e15e;
op3val:0x3f0e068f; valaddr_reg:x12; val_offset:132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 132*FLEN/8, x13, x9, x10)

inst_66:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x47e75a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x35e15e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e068f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e47e75a; op2val:0x4035e15e;
op3val:0x3f0e068f; valaddr_reg:x12; val_offset:135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 135*FLEN/8, x13, x9, x10)

inst_67:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x47e75a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x35e15e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e068f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e47e75a; op2val:0x4035e15e;
op3val:0x3f0e068f; valaddr_reg:x12; val_offset:138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 138*FLEN/8, x13, x9, x10)

inst_68:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x47e75a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x35e15e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e068f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e47e75a; op2val:0x4035e15e;
op3val:0x3f0e068f; valaddr_reg:x12; val_offset:141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 141*FLEN/8, x13, x9, x10)

inst_69:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x47e75a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x35e15e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e068f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e47e75a; op2val:0x4035e15e;
op3val:0x3f0e068f; valaddr_reg:x12; val_offset:144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 144*FLEN/8, x13, x9, x10)

inst_70:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67fe02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x62cba4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d86c9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67fe02; op2val:0x3f62cba4;
op3val:0x3f4d86c9; valaddr_reg:x12; val_offset:147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 147*FLEN/8, x13, x9, x10)

inst_71:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67fe02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x62cba4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d86c9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67fe02; op2val:0x3f62cba4;
op3val:0x3f4d86c9; valaddr_reg:x12; val_offset:150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 150*FLEN/8, x13, x9, x10)

inst_72:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67fe02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x62cba4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d86c9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67fe02; op2val:0x3f62cba4;
op3val:0x3f4d86c9; valaddr_reg:x12; val_offset:153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 153*FLEN/8, x13, x9, x10)

inst_73:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67fe02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x62cba4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d86c9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67fe02; op2val:0x3f62cba4;
op3val:0x3f4d86c9; valaddr_reg:x12; val_offset:156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 156*FLEN/8, x13, x9, x10)

inst_74:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67fe02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x62cba4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d86c9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67fe02; op2val:0x3f62cba4;
op3val:0x3f4d86c9; valaddr_reg:x12; val_offset:159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 159*FLEN/8, x13, x9, x10)

inst_75:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3aebea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x788418 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3574fe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebaebea; op2val:0x3ff88418;
op3val:0x3f3574fe; valaddr_reg:x12; val_offset:162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 162*FLEN/8, x13, x9, x10)

inst_76:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3aebea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x788418 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3574fe and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebaebea; op2val:0x3ff88418;
op3val:0x3f3574fe; valaddr_reg:x12; val_offset:165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 165*FLEN/8, x13, x9, x10)

inst_77:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3aebea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x788418 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3574fe and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebaebea; op2val:0x3ff88418;
op3val:0x3f3574fe; valaddr_reg:x12; val_offset:168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 168*FLEN/8, x13, x9, x10)

inst_78:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3aebea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x788418 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3574fe and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebaebea; op2val:0x3ff88418;
op3val:0x3f3574fe; valaddr_reg:x12; val_offset:171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 171*FLEN/8, x13, x9, x10)

inst_79:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3aebea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x788418 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3574fe and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebaebea; op2val:0x3ff88418;
op3val:0x3f3574fe; valaddr_reg:x12; val_offset:174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 174*FLEN/8, x13, x9, x10)

inst_80:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x472d19 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x076004 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x52a6fa and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d472d19; op2val:0x41076004;
op3val:0x3ed2a6fa; valaddr_reg:x12; val_offset:177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 177*FLEN/8, x13, x9, x10)

inst_81:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x472d19 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x076004 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x52a6fa and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d472d19; op2val:0x41076004;
op3val:0x3ed2a6fa; valaddr_reg:x12; val_offset:180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 180*FLEN/8, x13, x9, x10)

inst_82:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x472d19 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x076004 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x52a6fa and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d472d19; op2val:0x41076004;
op3val:0x3ed2a6fa; valaddr_reg:x12; val_offset:183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 183*FLEN/8, x13, x9, x10)

inst_83:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x472d19 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x076004 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x52a6fa and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d472d19; op2val:0x41076004;
op3val:0x3ed2a6fa; valaddr_reg:x12; val_offset:186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 186*FLEN/8, x13, x9, x10)

inst_84:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x472d19 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x076004 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x52a6fa and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d472d19; op2val:0x41076004;
op3val:0x3ed2a6fa; valaddr_reg:x12; val_offset:189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 189*FLEN/8, x13, x9, x10)

inst_85:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c9380 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5cc861 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x306ee3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c9380; op2val:0x3edcc861;
op3val:0x3eb06ee3; valaddr_reg:x12; val_offset:192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 192*FLEN/8, x13, x9, x10)

inst_86:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c9380 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5cc861 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x306ee3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c9380; op2val:0x3edcc861;
op3val:0x3eb06ee3; valaddr_reg:x12; val_offset:195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 195*FLEN/8, x13, x9, x10)

inst_87:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c9380 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5cc861 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x306ee3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c9380; op2val:0x3edcc861;
op3val:0x3eb06ee3; valaddr_reg:x12; val_offset:198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 198*FLEN/8, x13, x9, x10)

inst_88:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c9380 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5cc861 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x306ee3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c9380; op2val:0x3edcc861;
op3val:0x3eb06ee3; valaddr_reg:x12; val_offset:201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 201*FLEN/8, x13, x9, x10)

inst_89:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c9380 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5cc861 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x306ee3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c9380; op2val:0x3edcc861;
op3val:0x3eb06ee3; valaddr_reg:x12; val_offset:204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 204*FLEN/8, x13, x9, x10)

inst_90:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23be2a and fs2 == 0 and fe2 == 0x7b and fm2 == 0x575e5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x09c112 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23be2a; op2val:0x3dd75e5f;
op3val:0x3d89c112; valaddr_reg:x12; val_offset:207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 207*FLEN/8, x13, x9, x10)

inst_91:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23be2a and fs2 == 0 and fe2 == 0x7b and fm2 == 0x575e5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x09c112 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23be2a; op2val:0x3dd75e5f;
op3val:0x3d89c112; valaddr_reg:x12; val_offset:210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 210*FLEN/8, x13, x9, x10)

inst_92:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23be2a and fs2 == 0 and fe2 == 0x7b and fm2 == 0x575e5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x09c112 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23be2a; op2val:0x3dd75e5f;
op3val:0x3d89c112; valaddr_reg:x12; val_offset:213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 213*FLEN/8, x13, x9, x10)

inst_93:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23be2a and fs2 == 0 and fe2 == 0x7b and fm2 == 0x575e5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x09c112 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23be2a; op2val:0x3dd75e5f;
op3val:0x3d89c112; valaddr_reg:x12; val_offset:216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 216*FLEN/8, x13, x9, x10)

inst_94:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23be2a and fs2 == 0 and fe2 == 0x7b and fm2 == 0x575e5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x09c112 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23be2a; op2val:0x3dd75e5f;
op3val:0x3d89c112; valaddr_reg:x12; val_offset:219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 219*FLEN/8, x13, x9, x10)

inst_95:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x395230 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2ba2e4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x787fa4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db95230; op2val:0x40aba2e4;
op3val:0x3ef87fa4; valaddr_reg:x12; val_offset:222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 222*FLEN/8, x13, x9, x10)

inst_96:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x395230 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2ba2e4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x787fa4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db95230; op2val:0x40aba2e4;
op3val:0x3ef87fa4; valaddr_reg:x12; val_offset:225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 225*FLEN/8, x13, x9, x10)

inst_97:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x395230 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2ba2e4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x787fa4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db95230; op2val:0x40aba2e4;
op3val:0x3ef87fa4; valaddr_reg:x12; val_offset:228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 228*FLEN/8, x13, x9, x10)

inst_98:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x395230 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2ba2e4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x787fa4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db95230; op2val:0x40aba2e4;
op3val:0x3ef87fa4; valaddr_reg:x12; val_offset:231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 231*FLEN/8, x13, x9, x10)

inst_99:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x395230 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2ba2e4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x787fa4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db95230; op2val:0x40aba2e4;
op3val:0x3ef87fa4; valaddr_reg:x12; val_offset:234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 234*FLEN/8, x13, x9, x10)

inst_100:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35faaf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x59951d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1aab7e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5faaf; op2val:0x3f59951d;
op3val:0x3e9aab7e; valaddr_reg:x12; val_offset:237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 237*FLEN/8, x13, x9, x10)

inst_101:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35faaf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x59951d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1aab7e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5faaf; op2val:0x3f59951d;
op3val:0x3e9aab7e; valaddr_reg:x12; val_offset:240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 240*FLEN/8, x13, x9, x10)

inst_102:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35faaf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x59951d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1aab7e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5faaf; op2val:0x3f59951d;
op3val:0x3e9aab7e; valaddr_reg:x12; val_offset:243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 243*FLEN/8, x13, x9, x10)

inst_103:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35faaf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x59951d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1aab7e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5faaf; op2val:0x3f59951d;
op3val:0x3e9aab7e; valaddr_reg:x12; val_offset:246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 246*FLEN/8, x13, x9, x10)

inst_104:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35faaf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x59951d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1aab7e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5faaf; op2val:0x3f59951d;
op3val:0x3e9aab7e; valaddr_reg:x12; val_offset:249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 249*FLEN/8, x13, x9, x10)

inst_105:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4729b7 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x78c464 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x418934 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4729b7; op2val:0x3df8c464;
op3val:0x3cc18934; valaddr_reg:x12; val_offset:252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 252*FLEN/8, x13, x9, x10)

inst_106:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4729b7 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x78c464 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x418934 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4729b7; op2val:0x3df8c464;
op3val:0x3cc18934; valaddr_reg:x12; val_offset:255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 255*FLEN/8, x13, x9, x10)

inst_107:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4729b7 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x78c464 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x418934 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4729b7; op2val:0x3df8c464;
op3val:0x3cc18934; valaddr_reg:x12; val_offset:258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 258*FLEN/8, x13, x9, x10)

inst_108:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4729b7 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x78c464 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x418934 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4729b7; op2val:0x3df8c464;
op3val:0x3cc18934; valaddr_reg:x12; val_offset:261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 261*FLEN/8, x13, x9, x10)

inst_109:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4729b7 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x78c464 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x418934 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4729b7; op2val:0x3df8c464;
op3val:0x3cc18934; valaddr_reg:x12; val_offset:264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 264*FLEN/8, x13, x9, x10)

inst_110:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78b956 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28452c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237cd5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78b956; op2val:0x3f28452c;
op3val:0x3f237cd5; valaddr_reg:x12; val_offset:267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 267*FLEN/8, x13, x9, x10)

inst_111:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78b956 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28452c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237cd5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78b956; op2val:0x3f28452c;
op3val:0x3f237cd5; valaddr_reg:x12; val_offset:270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 270*FLEN/8, x13, x9, x10)

inst_112:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78b956 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28452c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237cd5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78b956; op2val:0x3f28452c;
op3val:0x3f237cd5; valaddr_reg:x12; val_offset:273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 273*FLEN/8, x13, x9, x10)

inst_113:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78b956 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28452c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237cd5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78b956; op2val:0x3f28452c;
op3val:0x3f237cd5; valaddr_reg:x12; val_offset:276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 276*FLEN/8, x13, x9, x10)

inst_114:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78b956 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28452c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237cd5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78b956; op2val:0x3f28452c;
op3val:0x3f237cd5; valaddr_reg:x12; val_offset:279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 279*FLEN/8, x13, x9, x10)

inst_115:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4be7c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5f97c6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3217cb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecbe7c9; op2val:0x3fdf97c6;
op3val:0x3f3217cb; valaddr_reg:x12; val_offset:282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 282*FLEN/8, x13, x9, x10)

inst_116:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4be7c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5f97c6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3217cb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecbe7c9; op2val:0x3fdf97c6;
op3val:0x3f3217cb; valaddr_reg:x12; val_offset:285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 285*FLEN/8, x13, x9, x10)

inst_117:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4be7c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5f97c6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3217cb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecbe7c9; op2val:0x3fdf97c6;
op3val:0x3f3217cb; valaddr_reg:x12; val_offset:288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 288*FLEN/8, x13, x9, x10)

inst_118:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4be7c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5f97c6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3217cb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecbe7c9; op2val:0x3fdf97c6;
op3val:0x3f3217cb; valaddr_reg:x12; val_offset:291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 291*FLEN/8, x13, x9, x10)

inst_119:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4be7c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5f97c6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3217cb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecbe7c9; op2val:0x3fdf97c6;
op3val:0x3f3217cb; valaddr_reg:x12; val_offset:294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 294*FLEN/8, x13, x9, x10)

inst_120:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x525a0c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0dce50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x690a3e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed25a0c; op2val:0x400dce50;
op3val:0x3f690a3e; valaddr_reg:x12; val_offset:297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 297*FLEN/8, x13, x9, x10)

inst_121:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x525a0c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0dce50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x690a3e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed25a0c; op2val:0x400dce50;
op3val:0x3f690a3e; valaddr_reg:x12; val_offset:300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 300*FLEN/8, x13, x9, x10)

inst_122:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x525a0c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0dce50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x690a3e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed25a0c; op2val:0x400dce50;
op3val:0x3f690a3e; valaddr_reg:x12; val_offset:303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 303*FLEN/8, x13, x9, x10)

inst_123:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x525a0c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0dce50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x690a3e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed25a0c; op2val:0x400dce50;
op3val:0x3f690a3e; valaddr_reg:x12; val_offset:306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 306*FLEN/8, x13, x9, x10)

inst_124:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x525a0c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0dce50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x690a3e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed25a0c; op2val:0x400dce50;
op3val:0x3f690a3e; valaddr_reg:x12; val_offset:309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 309*FLEN/8, x13, x9, x10)

inst_125:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x759939 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7d5c03 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7310b4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df59939; op2val:0x407d5c03;
op3val:0x3ef310b4; valaddr_reg:x12; val_offset:312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 312*FLEN/8, x13, x9, x10)

inst_126:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x759939 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7d5c03 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7310b4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df59939; op2val:0x407d5c03;
op3val:0x3ef310b4; valaddr_reg:x12; val_offset:315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 315*FLEN/8, x13, x9, x10)

inst_127:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x759939 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7d5c03 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7310b4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df59939; op2val:0x407d5c03;
op3val:0x3ef310b4; valaddr_reg:x12; val_offset:318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 318*FLEN/8, x13, x9, x10)

inst_128:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x759939 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7d5c03 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7310b4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df59939; op2val:0x407d5c03;
op3val:0x3ef310b4; valaddr_reg:x12; val_offset:321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 321*FLEN/8, x13, x9, x10)

inst_129:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x759939 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7d5c03 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7310b4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df59939; op2val:0x407d5c03;
op3val:0x3ef310b4; valaddr_reg:x12; val_offset:324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 324*FLEN/8, x13, x9, x10)

inst_130:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6217cb and fs2 == 0 and fe2 == 0x7d and fm2 == 0x43848c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cad30 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6217cb; op2val:0x3ec3848c;
op3val:0x3eacad30; valaddr_reg:x12; val_offset:327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 327*FLEN/8, x13, x9, x10)

inst_131:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6217cb and fs2 == 0 and fe2 == 0x7d and fm2 == 0x43848c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cad30 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6217cb; op2val:0x3ec3848c;
op3val:0x3eacad30; valaddr_reg:x12; val_offset:330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 330*FLEN/8, x13, x9, x10)

inst_132:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6217cb and fs2 == 0 and fe2 == 0x7d and fm2 == 0x43848c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cad30 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6217cb; op2val:0x3ec3848c;
op3val:0x3eacad30; valaddr_reg:x12; val_offset:333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 333*FLEN/8, x13, x9, x10)

inst_133:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6217cb and fs2 == 0 and fe2 == 0x7d and fm2 == 0x43848c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cad30 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6217cb; op2val:0x3ec3848c;
op3val:0x3eacad30; valaddr_reg:x12; val_offset:336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 336*FLEN/8, x13, x9, x10)

inst_134:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6217cb and fs2 == 0 and fe2 == 0x7d and fm2 == 0x43848c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cad30 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6217cb; op2val:0x3ec3848c;
op3val:0x3eacad30; valaddr_reg:x12; val_offset:339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 339*FLEN/8, x13, x9, x10)

inst_135:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x300e5f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1599c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4dc441 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f300e5f; op2val:0x3f9599c9;
op3val:0x3f4dc441; valaddr_reg:x12; val_offset:342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 342*FLEN/8, x13, x9, x10)

inst_136:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x300e5f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1599c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4dc441 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f300e5f; op2val:0x3f9599c9;
op3val:0x3f4dc441; valaddr_reg:x12; val_offset:345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 345*FLEN/8, x13, x9, x10)

inst_137:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x300e5f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1599c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4dc441 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f300e5f; op2val:0x3f9599c9;
op3val:0x3f4dc441; valaddr_reg:x12; val_offset:348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 348*FLEN/8, x13, x9, x10)

inst_138:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x300e5f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1599c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4dc441 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f300e5f; op2val:0x3f9599c9;
op3val:0x3f4dc441; valaddr_reg:x12; val_offset:351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 351*FLEN/8, x13, x9, x10)

inst_139:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x300e5f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1599c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4dc441 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f300e5f; op2val:0x3f9599c9;
op3val:0x3f4dc441; valaddr_reg:x12; val_offset:354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 354*FLEN/8, x13, x9, x10)

inst_140:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55b286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ca51d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f042955; op2val:0x3fd5b286;
op3val:0x3f5ca51d; valaddr_reg:x12; val_offset:357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 357*FLEN/8, x13, x9, x10)

inst_141:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55b286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ca51d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f042955; op2val:0x3fd5b286;
op3val:0x3f5ca51d; valaddr_reg:x12; val_offset:360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 360*FLEN/8, x13, x9, x10)

inst_142:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55b286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ca51d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f042955; op2val:0x3fd5b286;
op3val:0x3f5ca51d; valaddr_reg:x12; val_offset:363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 363*FLEN/8, x13, x9, x10)

inst_143:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55b286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ca51d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f042955; op2val:0x3fd5b286;
op3val:0x3f5ca51d; valaddr_reg:x12; val_offset:366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 366*FLEN/8, x13, x9, x10)

inst_144:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55b286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ca51d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f042955; op2val:0x3fd5b286;
op3val:0x3f5ca51d; valaddr_reg:x12; val_offset:369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 369*FLEN/8, x13, x9, x10)

inst_145:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a44f5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x2e435c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x09b017 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a44f5; op2val:0x3e2e435c;
op3val:0x3e09b017; valaddr_reg:x12; val_offset:372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 372*FLEN/8, x13, x9, x10)

inst_146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a44f5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x2e435c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x09b017 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a44f5; op2val:0x3e2e435c;
op3val:0x3e09b017; valaddr_reg:x12; val_offset:375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 375*FLEN/8, x13, x9, x10)

inst_147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a44f5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x2e435c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x09b017 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a44f5; op2val:0x3e2e435c;
op3val:0x3e09b017; valaddr_reg:x12; val_offset:378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 378*FLEN/8, x13, x9, x10)

inst_148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a44f5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x2e435c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x09b017 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a44f5; op2val:0x3e2e435c;
op3val:0x3e09b017; valaddr_reg:x12; val_offset:381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 381*FLEN/8, x13, x9, x10)

inst_149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a44f5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x2e435c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x09b017 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a44f5; op2val:0x3e2e435c;
op3val:0x3e09b017; valaddr_reg:x12; val_offset:384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 384*FLEN/8, x13, x9, x10)

inst_150:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a826a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x516bff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ccb4f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9a826a; op2val:0x40516bff;
op3val:0x3f7ccb4f; valaddr_reg:x12; val_offset:387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 387*FLEN/8, x13, x9, x10)

inst_151:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a826a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x516bff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ccb4f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9a826a; op2val:0x40516bff;
op3val:0x3f7ccb4f; valaddr_reg:x12; val_offset:390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 390*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_1)

inst_152:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a826a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x516bff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ccb4f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9a826a; op2val:0x40516bff;
op3val:0x3f7ccb4f; valaddr_reg:x12; val_offset:393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 393*FLEN/8, x13, x9, x10)

inst_153:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a826a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x516bff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ccb4f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9a826a; op2val:0x40516bff;
op3val:0x3f7ccb4f; valaddr_reg:x12; val_offset:396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 396*FLEN/8, x13, x9, x10)

inst_154:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a826a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x516bff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ccb4f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9a826a; op2val:0x40516bff;
op3val:0x3f7ccb4f; valaddr_reg:x12; val_offset:399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 399*FLEN/8, x13, x9, x10)

inst_155:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6344e4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0db8d0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ba209 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6344e4; op2val:0x408db8d0;
op3val:0x3f7ba209; valaddr_reg:x12; val_offset:402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 402*FLEN/8, x13, x9, x10)

inst_156:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6344e4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0db8d0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ba209 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6344e4; op2val:0x408db8d0;
op3val:0x3f7ba209; valaddr_reg:x12; val_offset:405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 405*FLEN/8, x13, x9, x10)

inst_157:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6344e4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0db8d0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ba209 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6344e4; op2val:0x408db8d0;
op3val:0x3f7ba209; valaddr_reg:x12; val_offset:408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 408*FLEN/8, x13, x9, x10)

inst_158:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6344e4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0db8d0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ba209 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6344e4; op2val:0x408db8d0;
op3val:0x3f7ba209; valaddr_reg:x12; val_offset:411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 411*FLEN/8, x13, x9, x10)

inst_159:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6344e4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0db8d0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ba209 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6344e4; op2val:0x408db8d0;
op3val:0x3f7ba209; valaddr_reg:x12; val_offset:414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 414*FLEN/8, x13, x9, x10)

inst_160:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ac646 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x12b0d5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x43b616 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ac646; op2val:0x3e12b0d5;
op3val:0x3dc3b616; valaddr_reg:x12; val_offset:417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 417*FLEN/8, x13, x9, x10)

inst_161:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ac646 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x12b0d5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x43b616 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ac646; op2val:0x3e12b0d5;
op3val:0x3dc3b616; valaddr_reg:x12; val_offset:420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 420*FLEN/8, x13, x9, x10)

inst_162:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ac646 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x12b0d5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x43b616 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ac646; op2val:0x3e12b0d5;
op3val:0x3dc3b616; valaddr_reg:x12; val_offset:423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 423*FLEN/8, x13, x9, x10)

inst_163:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ac646 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x12b0d5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x43b616 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ac646; op2val:0x3e12b0d5;
op3val:0x3dc3b616; valaddr_reg:x12; val_offset:426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 426*FLEN/8, x13, x9, x10)

inst_164:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ac646 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x12b0d5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x43b616 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ac646; op2val:0x3e12b0d5;
op3val:0x3dc3b616; valaddr_reg:x12; val_offset:429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 429*FLEN/8, x13, x9, x10)

inst_165:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x426c97 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x69e3c6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31a1d2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec26c97; op2val:0x3fe9e3c6;
op3val:0x3f31a1d2; valaddr_reg:x12; val_offset:432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 432*FLEN/8, x13, x9, x10)

inst_166:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x426c97 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x69e3c6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31a1d2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec26c97; op2val:0x3fe9e3c6;
op3val:0x3f31a1d2; valaddr_reg:x12; val_offset:435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 435*FLEN/8, x13, x9, x10)

inst_167:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x426c97 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x69e3c6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31a1d2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec26c97; op2val:0x3fe9e3c6;
op3val:0x3f31a1d2; valaddr_reg:x12; val_offset:438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 438*FLEN/8, x13, x9, x10)

inst_168:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x426c97 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x69e3c6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31a1d2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec26c97; op2val:0x3fe9e3c6;
op3val:0x3f31a1d2; valaddr_reg:x12; val_offset:441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 441*FLEN/8, x13, x9, x10)

inst_169:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x426c97 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x69e3c6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31a1d2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec26c97; op2val:0x3fe9e3c6;
op3val:0x3f31a1d2; valaddr_reg:x12; val_offset:444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 444*FLEN/8, x13, x9, x10)

inst_170:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6266 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b2a07 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c5fa4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f6266; op2val:0x3f7b2a07;
op3val:0x3f1c5fa4; valaddr_reg:x12; val_offset:447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 447*FLEN/8, x13, x9, x10)

inst_171:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6266 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b2a07 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c5fa4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f6266; op2val:0x3f7b2a07;
op3val:0x3f1c5fa4; valaddr_reg:x12; val_offset:450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 450*FLEN/8, x13, x9, x10)

inst_172:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6266 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b2a07 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c5fa4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f6266; op2val:0x3f7b2a07;
op3val:0x3f1c5fa4; valaddr_reg:x12; val_offset:453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 453*FLEN/8, x13, x9, x10)

inst_173:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6266 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b2a07 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c5fa4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f6266; op2val:0x3f7b2a07;
op3val:0x3f1c5fa4; valaddr_reg:x12; val_offset:456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 456*FLEN/8, x13, x9, x10)

inst_174:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6266 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b2a07 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c5fa4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f6266; op2val:0x3f7b2a07;
op3val:0x3f1c5fa4; valaddr_reg:x12; val_offset:459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 459*FLEN/8, x13, x9, x10)

inst_175:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f87c2 and fs2 == 0 and fe2 == 0x72 and fm2 == 0x11cadb and fs3 == 0 and fe3 == 0x71 and fm3 == 0x7e9a0b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f87c2; op2val:0x3911cadb;
op3val:0x38fe9a0b; valaddr_reg:x12; val_offset:462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 462*FLEN/8, x13, x9, x10)

inst_176:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f87c2 and fs2 == 0 and fe2 == 0x72 and fm2 == 0x11cadb and fs3 == 0 and fe3 == 0x71 and fm3 == 0x7e9a0b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f87c2; op2val:0x3911cadb;
op3val:0x38fe9a0b; valaddr_reg:x12; val_offset:465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 465*FLEN/8, x13, x9, x10)

inst_177:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f87c2 and fs2 == 0 and fe2 == 0x72 and fm2 == 0x11cadb and fs3 == 0 and fe3 == 0x71 and fm3 == 0x7e9a0b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f87c2; op2val:0x3911cadb;
op3val:0x38fe9a0b; valaddr_reg:x12; val_offset:468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 468*FLEN/8, x13, x9, x10)

inst_178:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f87c2 and fs2 == 0 and fe2 == 0x72 and fm2 == 0x11cadb and fs3 == 0 and fe3 == 0x71 and fm3 == 0x7e9a0b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f87c2; op2val:0x3911cadb;
op3val:0x38fe9a0b; valaddr_reg:x12; val_offset:471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 471*FLEN/8, x13, x9, x10)

inst_179:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f87c2 and fs2 == 0 and fe2 == 0x72 and fm2 == 0x11cadb and fs3 == 0 and fe3 == 0x71 and fm3 == 0x7e9a0b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f87c2; op2val:0x3911cadb;
op3val:0x38fe9a0b; valaddr_reg:x12; val_offset:474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 474*FLEN/8, x13, x9, x10)

inst_180:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7238b6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1c2500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x13bd91 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7238b6; op2val:0x3f1c2500;
op3val:0x3f13bd91; valaddr_reg:x12; val_offset:477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 477*FLEN/8, x13, x9, x10)

inst_181:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7238b6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1c2500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x13bd91 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7238b6; op2val:0x3f1c2500;
op3val:0x3f13bd91; valaddr_reg:x12; val_offset:480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 480*FLEN/8, x13, x9, x10)

inst_182:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7238b6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1c2500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x13bd91 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7238b6; op2val:0x3f1c2500;
op3val:0x3f13bd91; valaddr_reg:x12; val_offset:483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 483*FLEN/8, x13, x9, x10)

inst_183:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7238b6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1c2500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x13bd91 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7238b6; op2val:0x3f1c2500;
op3val:0x3f13bd91; valaddr_reg:x12; val_offset:486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 486*FLEN/8, x13, x9, x10)

inst_184:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7238b6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1c2500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x13bd91 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7238b6; op2val:0x3f1c2500;
op3val:0x3f13bd91; valaddr_reg:x12; val_offset:489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 489*FLEN/8, x13, x9, x10)

inst_185:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01e342 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17ee82 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1a2c1e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81e342; op2val:0x4017ee82;
op3val:0x3f1a2c1e; valaddr_reg:x12; val_offset:492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 492*FLEN/8, x13, x9, x10)

inst_186:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01e342 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17ee82 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1a2c1e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81e342; op2val:0x4017ee82;
op3val:0x3f1a2c1e; valaddr_reg:x12; val_offset:495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 495*FLEN/8, x13, x9, x10)

inst_187:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01e342 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17ee82 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1a2c1e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81e342; op2val:0x4017ee82;
op3val:0x3f1a2c1e; valaddr_reg:x12; val_offset:498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 498*FLEN/8, x13, x9, x10)

inst_188:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01e342 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17ee82 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1a2c1e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81e342; op2val:0x4017ee82;
op3val:0x3f1a2c1e; valaddr_reg:x12; val_offset:501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 501*FLEN/8, x13, x9, x10)

inst_189:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01e342 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17ee82 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1a2c1e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81e342; op2val:0x4017ee82;
op3val:0x3f1a2c1e; valaddr_reg:x12; val_offset:504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 504*FLEN/8, x13, x9, x10)

inst_190:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bdd66 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x1ea92d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x41334b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9bdd66; op2val:0x421ea92d;
op3val:0x3f41334b; valaddr_reg:x12; val_offset:507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 507*FLEN/8, x13, x9, x10)

inst_191:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bdd66 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x1ea92d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x41334b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9bdd66; op2val:0x421ea92d;
op3val:0x3f41334b; valaddr_reg:x12; val_offset:510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 510*FLEN/8, x13, x9, x10)

inst_192:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bdd66 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x1ea92d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x41334b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9bdd66; op2val:0x421ea92d;
op3val:0x3f41334b; valaddr_reg:x12; val_offset:513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 513*FLEN/8, x13, x9, x10)

inst_193:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bdd66 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x1ea92d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x41334b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9bdd66; op2val:0x421ea92d;
op3val:0x3f41334b; valaddr_reg:x12; val_offset:516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 516*FLEN/8, x13, x9, x10)

inst_194:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bdd66 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x1ea92d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x41334b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9bdd66; op2val:0x421ea92d;
op3val:0x3f41334b; valaddr_reg:x12; val_offset:519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 519*FLEN/8, x13, x9, x10)

inst_195:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x29ef3f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2634cb and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ca85d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca9ef3f; op2val:0x40a634cb;
op3val:0x3ddca85d; valaddr_reg:x12; val_offset:522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 522*FLEN/8, x13, x9, x10)

inst_196:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x29ef3f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2634cb and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ca85d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca9ef3f; op2val:0x40a634cb;
op3val:0x3ddca85d; valaddr_reg:x12; val_offset:525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 525*FLEN/8, x13, x9, x10)

inst_197:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x29ef3f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2634cb and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ca85d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca9ef3f; op2val:0x40a634cb;
op3val:0x3ddca85d; valaddr_reg:x12; val_offset:528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 528*FLEN/8, x13, x9, x10)

inst_198:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x29ef3f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2634cb and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ca85d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca9ef3f; op2val:0x40a634cb;
op3val:0x3ddca85d; valaddr_reg:x12; val_offset:531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 531*FLEN/8, x13, x9, x10)

inst_199:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x29ef3f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2634cb and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ca85d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca9ef3f; op2val:0x40a634cb;
op3val:0x3ddca85d; valaddr_reg:x12; val_offset:534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 534*FLEN/8, x13, x9, x10)

inst_200:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x28d94d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2b892a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x62473e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea8d94d; op2val:0x3eab892a;
op3val:0x3de2473e; valaddr_reg:x12; val_offset:537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 537*FLEN/8, x13, x9, x10)

inst_201:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x28d94d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2b892a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x62473e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea8d94d; op2val:0x3eab892a;
op3val:0x3de2473e; valaddr_reg:x12; val_offset:540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 540*FLEN/8, x13, x9, x10)

inst_202:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x28d94d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2b892a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x62473e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea8d94d; op2val:0x3eab892a;
op3val:0x3de2473e; valaddr_reg:x12; val_offset:543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 543*FLEN/8, x13, x9, x10)

inst_203:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x28d94d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2b892a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x62473e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea8d94d; op2val:0x3eab892a;
op3val:0x3de2473e; valaddr_reg:x12; val_offset:546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 546*FLEN/8, x13, x9, x10)

inst_204:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x28d94d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2b892a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x62473e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea8d94d; op2val:0x3eab892a;
op3val:0x3de2473e; valaddr_reg:x12; val_offset:549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 549*FLEN/8, x13, x9, x10)

inst_205:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d84ae and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1c48e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cca4e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0d84ae; op2val:0x3e9c48e6;
op3val:0x3e2cca4e; valaddr_reg:x12; val_offset:552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 552*FLEN/8, x13, x9, x10)

inst_206:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d84ae and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1c48e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cca4e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0d84ae; op2val:0x3e9c48e6;
op3val:0x3e2cca4e; valaddr_reg:x12; val_offset:555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 555*FLEN/8, x13, x9, x10)

inst_207:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d84ae and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1c48e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cca4e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0d84ae; op2val:0x3e9c48e6;
op3val:0x3e2cca4e; valaddr_reg:x12; val_offset:558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 558*FLEN/8, x13, x9, x10)

inst_208:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d84ae and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1c48e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cca4e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0d84ae; op2val:0x3e9c48e6;
op3val:0x3e2cca4e; valaddr_reg:x12; val_offset:561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 561*FLEN/8, x13, x9, x10)

inst_209:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d84ae and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1c48e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cca4e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0d84ae; op2val:0x3e9c48e6;
op3val:0x3e2cca4e; valaddr_reg:x12; val_offset:564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 564*FLEN/8, x13, x9, x10)

inst_210:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x50cb77 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17b382 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7774d8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e50cb77; op2val:0x4017b382;
op3val:0x3ef774d8; valaddr_reg:x12; val_offset:567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 567*FLEN/8, x13, x9, x10)

inst_211:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x50cb77 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17b382 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7774d8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e50cb77; op2val:0x4017b382;
op3val:0x3ef774d8; valaddr_reg:x12; val_offset:570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 570*FLEN/8, x13, x9, x10)

inst_212:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x50cb77 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17b382 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7774d8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e50cb77; op2val:0x4017b382;
op3val:0x3ef774d8; valaddr_reg:x12; val_offset:573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 573*FLEN/8, x13, x9, x10)

inst_213:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x50cb77 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17b382 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7774d8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e50cb77; op2val:0x4017b382;
op3val:0x3ef774d8; valaddr_reg:x12; val_offset:576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 576*FLEN/8, x13, x9, x10)

inst_214:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x50cb77 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17b382 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7774d8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e50cb77; op2val:0x4017b382;
op3val:0x3ef774d8; valaddr_reg:x12; val_offset:579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 579*FLEN/8, x13, x9, x10)

inst_215:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x077124 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0e6a54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x16b208 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f077124; op2val:0x3f0e6a54;
op3val:0x3e96b208; valaddr_reg:x12; val_offset:582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 582*FLEN/8, x13, x9, x10)

inst_216:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x077124 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0e6a54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x16b208 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f077124; op2val:0x3f0e6a54;
op3val:0x3e96b208; valaddr_reg:x12; val_offset:585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 585*FLEN/8, x13, x9, x10)

inst_217:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x077124 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0e6a54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x16b208 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f077124; op2val:0x3f0e6a54;
op3val:0x3e96b208; valaddr_reg:x12; val_offset:588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 588*FLEN/8, x13, x9, x10)

inst_218:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x077124 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0e6a54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x16b208 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f077124; op2val:0x3f0e6a54;
op3val:0x3e96b208; valaddr_reg:x12; val_offset:591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 591*FLEN/8, x13, x9, x10)

inst_219:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x077124 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0e6a54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x16b208 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f077124; op2val:0x3f0e6a54;
op3val:0x3e96b208; valaddr_reg:x12; val_offset:594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 594*FLEN/8, x13, x9, x10)

inst_220:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x174798 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x45fe09 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a006f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f174798; op2val:0x3fc5fe09;
op3val:0x3f6a006f; valaddr_reg:x12; val_offset:597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 597*FLEN/8, x13, x9, x10)

inst_221:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x174798 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x45fe09 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a006f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f174798; op2val:0x3fc5fe09;
op3val:0x3f6a006f; valaddr_reg:x12; val_offset:600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 600*FLEN/8, x13, x9, x10)

inst_222:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x174798 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x45fe09 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a006f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f174798; op2val:0x3fc5fe09;
op3val:0x3f6a006f; valaddr_reg:x12; val_offset:603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 603*FLEN/8, x13, x9, x10)

inst_223:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x174798 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x45fe09 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a006f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f174798; op2val:0x3fc5fe09;
op3val:0x3f6a006f; valaddr_reg:x12; val_offset:606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 606*FLEN/8, x13, x9, x10)

inst_224:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x174798 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x45fe09 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a006f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f174798; op2val:0x3fc5fe09;
op3val:0x3f6a006f; valaddr_reg:x12; val_offset:609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 609*FLEN/8, x13, x9, x10)

inst_225:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01c8ab and fs2 == 0 and fe2 == 0x80 and fm2 == 0x395de6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bf33d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81c8ab; op2val:0x40395de6;
op3val:0x3f3bf33d; valaddr_reg:x12; val_offset:612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 612*FLEN/8, x13, x9, x10)

inst_226:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01c8ab and fs2 == 0 and fe2 == 0x80 and fm2 == 0x395de6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bf33d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81c8ab; op2val:0x40395de6;
op3val:0x3f3bf33d; valaddr_reg:x12; val_offset:615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 615*FLEN/8, x13, x9, x10)

inst_227:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01c8ab and fs2 == 0 and fe2 == 0x80 and fm2 == 0x395de6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bf33d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81c8ab; op2val:0x40395de6;
op3val:0x3f3bf33d; valaddr_reg:x12; val_offset:618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 618*FLEN/8, x13, x9, x10)

inst_228:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01c8ab and fs2 == 0 and fe2 == 0x80 and fm2 == 0x395de6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bf33d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81c8ab; op2val:0x40395de6;
op3val:0x3f3bf33d; valaddr_reg:x12; val_offset:621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 621*FLEN/8, x13, x9, x10)

inst_229:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01c8ab and fs2 == 0 and fe2 == 0x80 and fm2 == 0x395de6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bf33d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81c8ab; op2val:0x40395de6;
op3val:0x3f3bf33d; valaddr_reg:x12; val_offset:624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 624*FLEN/8, x13, x9, x10)

inst_230:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x032873 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x57d43e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5d276e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f032873; op2val:0x3ed7d43e;
op3val:0x3e5d276e; valaddr_reg:x12; val_offset:627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 627*FLEN/8, x13, x9, x10)

inst_231:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x032873 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x57d43e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5d276e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f032873; op2val:0x3ed7d43e;
op3val:0x3e5d276e; valaddr_reg:x12; val_offset:630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 630*FLEN/8, x13, x9, x10)

inst_232:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x032873 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x57d43e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5d276e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f032873; op2val:0x3ed7d43e;
op3val:0x3e5d276e; valaddr_reg:x12; val_offset:633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 633*FLEN/8, x13, x9, x10)

inst_233:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x032873 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x57d43e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5d276e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f032873; op2val:0x3ed7d43e;
op3val:0x3e5d276e; valaddr_reg:x12; val_offset:636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 636*FLEN/8, x13, x9, x10)

inst_234:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x032873 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x57d43e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5d276e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f032873; op2val:0x3ed7d43e;
op3val:0x3e5d276e; valaddr_reg:x12; val_offset:639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 639*FLEN/8, x13, x9, x10)

inst_235:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53ef69 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x173b3b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a6681 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f53ef69; op2val:0x3f973b3b;
op3val:0x3f7a6681; valaddr_reg:x12; val_offset:642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 642*FLEN/8, x13, x9, x10)

inst_236:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53ef69 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x173b3b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a6681 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f53ef69; op2val:0x3f973b3b;
op3val:0x3f7a6681; valaddr_reg:x12; val_offset:645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 645*FLEN/8, x13, x9, x10)

inst_237:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53ef69 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x173b3b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a6681 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f53ef69; op2val:0x3f973b3b;
op3val:0x3f7a6681; valaddr_reg:x12; val_offset:648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 648*FLEN/8, x13, x9, x10)

inst_238:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53ef69 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x173b3b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a6681 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f53ef69; op2val:0x3f973b3b;
op3val:0x3f7a6681; valaddr_reg:x12; val_offset:651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 651*FLEN/8, x13, x9, x10)

inst_239:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53ef69 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x173b3b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a6681 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f53ef69; op2val:0x3f973b3b;
op3val:0x3f7a6681; valaddr_reg:x12; val_offset:654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 654*FLEN/8, x13, x9, x10)

inst_240:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60629c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6fd68e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x52381f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60629c; op2val:0x3eefd68e;
op3val:0x3ed2381f; valaddr_reg:x12; val_offset:657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 657*FLEN/8, x13, x9, x10)

inst_241:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60629c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6fd68e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x52381f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60629c; op2val:0x3eefd68e;
op3val:0x3ed2381f; valaddr_reg:x12; val_offset:660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 660*FLEN/8, x13, x9, x10)

inst_242:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60629c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6fd68e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x52381f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60629c; op2val:0x3eefd68e;
op3val:0x3ed2381f; valaddr_reg:x12; val_offset:663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 663*FLEN/8, x13, x9, x10)

inst_243:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60629c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6fd68e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x52381f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60629c; op2val:0x3eefd68e;
op3val:0x3ed2381f; valaddr_reg:x12; val_offset:666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 666*FLEN/8, x13, x9, x10)

inst_244:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60629c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6fd68e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x52381f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60629c; op2val:0x3eefd68e;
op3val:0x3ed2381f; valaddr_reg:x12; val_offset:669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 669*FLEN/8, x13, x9, x10)

inst_245:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x239248 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14fb55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3e6252 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f239248; op2val:0x3f94fb55;
op3val:0x3f3e6252; valaddr_reg:x12; val_offset:672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 672*FLEN/8, x13, x9, x10)

inst_246:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x239248 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14fb55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3e6252 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f239248; op2val:0x3f94fb55;
op3val:0x3f3e6252; valaddr_reg:x12; val_offset:675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 675*FLEN/8, x13, x9, x10)

inst_247:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x239248 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14fb55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3e6252 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f239248; op2val:0x3f94fb55;
op3val:0x3f3e6252; valaddr_reg:x12; val_offset:678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 678*FLEN/8, x13, x9, x10)

inst_248:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x239248 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14fb55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3e6252 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f239248; op2val:0x3f94fb55;
op3val:0x3f3e6252; valaddr_reg:x12; val_offset:681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 681*FLEN/8, x13, x9, x10)

inst_249:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x239248 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14fb55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3e6252 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f239248; op2val:0x3f94fb55;
op3val:0x3f3e6252; valaddr_reg:x12; val_offset:684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 684*FLEN/8, x13, x9, x10)

inst_250:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c6851 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x072d87 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1447f7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c6851; op2val:0x3e072d87;
op3val:0x3d9447f7; valaddr_reg:x12; val_offset:687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 687*FLEN/8, x13, x9, x10)

inst_251:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c6851 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x072d87 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1447f7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c6851; op2val:0x3e072d87;
op3val:0x3d9447f7; valaddr_reg:x12; val_offset:690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 690*FLEN/8, x13, x9, x10)

inst_252:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c6851 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x072d87 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1447f7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c6851; op2val:0x3e072d87;
op3val:0x3d9447f7; valaddr_reg:x12; val_offset:693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 693*FLEN/8, x13, x9, x10)

inst_253:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c6851 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x072d87 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1447f7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c6851; op2val:0x3e072d87;
op3val:0x3d9447f7; valaddr_reg:x12; val_offset:696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 696*FLEN/8, x13, x9, x10)

inst_254:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c6851 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x072d87 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1447f7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c6851; op2val:0x3e072d87;
op3val:0x3d9447f7; valaddr_reg:x12; val_offset:699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 699*FLEN/8, x13, x9, x10)

inst_255:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ec7d3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a7a3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x16e4c7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ec7d3; op2val:0x3f4a7a3f;
op3val:0x3f16e4c7; valaddr_reg:x12; val_offset:702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 702*FLEN/8, x13, x9, x10)

inst_256:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ec7d3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a7a3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x16e4c7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ec7d3; op2val:0x3f4a7a3f;
op3val:0x3f16e4c7; valaddr_reg:x12; val_offset:705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 705*FLEN/8, x13, x9, x10)

inst_257:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ec7d3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a7a3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x16e4c7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ec7d3; op2val:0x3f4a7a3f;
op3val:0x3f16e4c7; valaddr_reg:x12; val_offset:708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 708*FLEN/8, x13, x9, x10)

inst_258:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ec7d3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a7a3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x16e4c7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ec7d3; op2val:0x3f4a7a3f;
op3val:0x3f16e4c7; valaddr_reg:x12; val_offset:711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 711*FLEN/8, x13, x9, x10)

inst_259:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ec7d3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a7a3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x16e4c7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ec7d3; op2val:0x3f4a7a3f;
op3val:0x3f16e4c7; valaddr_reg:x12; val_offset:714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 714*FLEN/8, x13, x9, x10)

inst_260:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7734c7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4da0fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4690b7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df734c7; op2val:0x404da0fa;
op3val:0x3ec690b7; valaddr_reg:x12; val_offset:717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 717*FLEN/8, x13, x9, x10)

inst_261:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7734c7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4da0fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4690b7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df734c7; op2val:0x404da0fa;
op3val:0x3ec690b7; valaddr_reg:x12; val_offset:720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 720*FLEN/8, x13, x9, x10)

inst_262:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7734c7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4da0fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4690b7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df734c7; op2val:0x404da0fa;
op3val:0x3ec690b7; valaddr_reg:x12; val_offset:723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 723*FLEN/8, x13, x9, x10)

inst_263:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7734c7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4da0fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4690b7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df734c7; op2val:0x404da0fa;
op3val:0x3ec690b7; valaddr_reg:x12; val_offset:726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 726*FLEN/8, x13, x9, x10)

inst_264:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7734c7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4da0fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4690b7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df734c7; op2val:0x404da0fa;
op3val:0x3ec690b7; valaddr_reg:x12; val_offset:729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 729*FLEN/8, x13, x9, x10)

inst_265:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b6872 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x37b152 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067979 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b6872; op2val:0x3f37b152;
op3val:0x3f067979; valaddr_reg:x12; val_offset:732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 732*FLEN/8, x13, x9, x10)

inst_266:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b6872 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x37b152 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067979 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b6872; op2val:0x3f37b152;
op3val:0x3f067979; valaddr_reg:x12; val_offset:735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 735*FLEN/8, x13, x9, x10)

inst_267:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b6872 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x37b152 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067979 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b6872; op2val:0x3f37b152;
op3val:0x3f067979; valaddr_reg:x12; val_offset:738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 738*FLEN/8, x13, x9, x10)

inst_268:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b6872 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x37b152 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067979 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b6872; op2val:0x3f37b152;
op3val:0x3f067979; valaddr_reg:x12; val_offset:741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 741*FLEN/8, x13, x9, x10)

inst_269:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b6872 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x37b152 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067979 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b6872; op2val:0x3f37b152;
op3val:0x3f067979; valaddr_reg:x12; val_offset:744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 744*FLEN/8, x13, x9, x10)

inst_270:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x057e78 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x529017 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b99c3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f057e78; op2val:0x3fd29017;
op3val:0x3f5b99c3; valaddr_reg:x12; val_offset:747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 747*FLEN/8, x13, x9, x10)

inst_271:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x057e78 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x529017 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b99c3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f057e78; op2val:0x3fd29017;
op3val:0x3f5b99c3; valaddr_reg:x12; val_offset:750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 750*FLEN/8, x13, x9, x10)

inst_272:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x057e78 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x529017 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b99c3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f057e78; op2val:0x3fd29017;
op3val:0x3f5b99c3; valaddr_reg:x12; val_offset:753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 753*FLEN/8, x13, x9, x10)

inst_273:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x057e78 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x529017 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b99c3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f057e78; op2val:0x3fd29017;
op3val:0x3f5b99c3; valaddr_reg:x12; val_offset:756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 756*FLEN/8, x13, x9, x10)

inst_274:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x057e78 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x529017 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b99c3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f057e78; op2val:0x3fd29017;
op3val:0x3f5b99c3; valaddr_reg:x12; val_offset:759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 759*FLEN/8, x13, x9, x10)

inst_275:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f5d98 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ec39d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31bf61 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f5d98; op2val:0x3f8ec39d;
op3val:0x3f31bf61; valaddr_reg:x12; val_offset:762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 762*FLEN/8, x13, x9, x10)

inst_276:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f5d98 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ec39d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31bf61 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f5d98; op2val:0x3f8ec39d;
op3val:0x3f31bf61; valaddr_reg:x12; val_offset:765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 765*FLEN/8, x13, x9, x10)

inst_277:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f5d98 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ec39d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31bf61 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f5d98; op2val:0x3f8ec39d;
op3val:0x3f31bf61; valaddr_reg:x12; val_offset:768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 768*FLEN/8, x13, x9, x10)

inst_278:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f5d98 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ec39d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31bf61 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f5d98; op2val:0x3f8ec39d;
op3val:0x3f31bf61; valaddr_reg:x12; val_offset:771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 771*FLEN/8, x13, x9, x10)

inst_279:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f5d98 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ec39d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31bf61 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f5d98; op2val:0x3f8ec39d;
op3val:0x3f31bf61; valaddr_reg:x12; val_offset:774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 774*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_2)

inst_280:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x47f1fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5dc5af and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d364b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e47f1fa; op2val:0x405dc5af;
op3val:0x3f2d364b; valaddr_reg:x12; val_offset:777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 777*FLEN/8, x13, x9, x10)

inst_281:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x47f1fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5dc5af and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d364b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e47f1fa; op2val:0x405dc5af;
op3val:0x3f2d364b; valaddr_reg:x12; val_offset:780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 780*FLEN/8, x13, x9, x10)

inst_282:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x47f1fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5dc5af and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d364b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e47f1fa; op2val:0x405dc5af;
op3val:0x3f2d364b; valaddr_reg:x12; val_offset:783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 783*FLEN/8, x13, x9, x10)

inst_283:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x47f1fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5dc5af and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d364b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e47f1fa; op2val:0x405dc5af;
op3val:0x3f2d364b; valaddr_reg:x12; val_offset:786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 786*FLEN/8, x13, x9, x10)

inst_284:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x47f1fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5dc5af and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d364b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e47f1fa; op2val:0x405dc5af;
op3val:0x3f2d364b; valaddr_reg:x12; val_offset:789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 789*FLEN/8, x13, x9, x10)

inst_285:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e77ae and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2fb343 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6f7bf8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eae77ae; op2val:0x3dafb343;
op3val:0x3cef7bf8; valaddr_reg:x12; val_offset:792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 792*FLEN/8, x13, x9, x10)

inst_286:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e77ae and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2fb343 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6f7bf8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eae77ae; op2val:0x3dafb343;
op3val:0x3cef7bf8; valaddr_reg:x12; val_offset:795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 795*FLEN/8, x13, x9, x10)

inst_287:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e77ae and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2fb343 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6f7bf8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eae77ae; op2val:0x3dafb343;
op3val:0x3cef7bf8; valaddr_reg:x12; val_offset:798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 798*FLEN/8, x13, x9, x10)

inst_288:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e77ae and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2fb343 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6f7bf8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eae77ae; op2val:0x3dafb343;
op3val:0x3cef7bf8; valaddr_reg:x12; val_offset:801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 801*FLEN/8, x13, x9, x10)

inst_289:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e77ae and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2fb343 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6f7bf8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eae77ae; op2val:0x3dafb343;
op3val:0x3cef7bf8; valaddr_reg:x12; val_offset:804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 804*FLEN/8, x13, x9, x10)

inst_290:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1d8915 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x01c919 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1fbba8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9d8915; op2val:0x4101c919;
op3val:0x3f1fbba8; valaddr_reg:x12; val_offset:807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 807*FLEN/8, x13, x9, x10)

inst_291:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1d8915 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x01c919 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1fbba8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9d8915; op2val:0x4101c919;
op3val:0x3f1fbba8; valaddr_reg:x12; val_offset:810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 810*FLEN/8, x13, x9, x10)

inst_292:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1d8915 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x01c919 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1fbba8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9d8915; op2val:0x4101c919;
op3val:0x3f1fbba8; valaddr_reg:x12; val_offset:813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 813*FLEN/8, x13, x9, x10)

inst_293:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1d8915 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x01c919 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1fbba8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9d8915; op2val:0x4101c919;
op3val:0x3f1fbba8; valaddr_reg:x12; val_offset:816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 816*FLEN/8, x13, x9, x10)

inst_294:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1d8915 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x01c919 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1fbba8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9d8915; op2val:0x4101c919;
op3val:0x3f1fbba8; valaddr_reg:x12; val_offset:819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 819*FLEN/8, x13, x9, x10)

inst_295:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b3f77 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5b39a9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e0d12 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecb3f77; op2val:0x3fdb39a9;
op3val:0x3f2e0d12; valaddr_reg:x12; val_offset:822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 822*FLEN/8, x13, x9, x10)

inst_296:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b3f77 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5b39a9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e0d12 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecb3f77; op2val:0x3fdb39a9;
op3val:0x3f2e0d12; valaddr_reg:x12; val_offset:825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 825*FLEN/8, x13, x9, x10)

inst_297:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b3f77 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5b39a9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e0d12 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecb3f77; op2val:0x3fdb39a9;
op3val:0x3f2e0d12; valaddr_reg:x12; val_offset:828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 828*FLEN/8, x13, x9, x10)

inst_298:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b3f77 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5b39a9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e0d12 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecb3f77; op2val:0x3fdb39a9;
op3val:0x3f2e0d12; valaddr_reg:x12; val_offset:831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 831*FLEN/8, x13, x9, x10)

inst_299:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b3f77 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5b39a9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e0d12 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecb3f77; op2val:0x3fdb39a9;
op3val:0x3f2e0d12; valaddr_reg:x12; val_offset:834*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 834*FLEN/8, x13, x9, x10)

inst_300:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a0a38 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x59d47a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x031283 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a0a38; op2val:0x3f59d47a;
op3val:0x3f031283; valaddr_reg:x12; val_offset:837*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 837*FLEN/8, x13, x9, x10)

inst_301:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a0a38 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x59d47a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x031283 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a0a38; op2val:0x3f59d47a;
op3val:0x3f031283; valaddr_reg:x12; val_offset:840*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 840*FLEN/8, x13, x9, x10)

inst_302:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a0a38 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x59d47a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x031283 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a0a38; op2val:0x3f59d47a;
op3val:0x3f031283; valaddr_reg:x12; val_offset:843*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 843*FLEN/8, x13, x9, x10)

inst_303:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a0a38 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x59d47a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x031283 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a0a38; op2val:0x3f59d47a;
op3val:0x3f031283; valaddr_reg:x12; val_offset:846*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 846*FLEN/8, x13, x9, x10)

inst_304:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a0a38 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x59d47a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x031283 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a0a38; op2val:0x3f59d47a;
op3val:0x3f031283; valaddr_reg:x12; val_offset:849*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 849*FLEN/8, x13, x9, x10)

inst_305:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5384b9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1d1e3b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x01d160 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5384b9; op2val:0x3e9d1e3b;
op3val:0x3d81d160; valaddr_reg:x12; val_offset:852*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 852*FLEN/8, x13, x9, x10)

inst_306:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5384b9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1d1e3b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x01d160 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5384b9; op2val:0x3e9d1e3b;
op3val:0x3d81d160; valaddr_reg:x12; val_offset:855*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 855*FLEN/8, x13, x9, x10)

inst_307:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5384b9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1d1e3b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x01d160 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5384b9; op2val:0x3e9d1e3b;
op3val:0x3d81d160; valaddr_reg:x12; val_offset:858*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 858*FLEN/8, x13, x9, x10)

inst_308:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5384b9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1d1e3b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x01d160 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5384b9; op2val:0x3e9d1e3b;
op3val:0x3d81d160; valaddr_reg:x12; val_offset:861*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 861*FLEN/8, x13, x9, x10)

inst_309:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5384b9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1d1e3b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x01d160 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5384b9; op2val:0x3e9d1e3b;
op3val:0x3d81d160; valaddr_reg:x12; val_offset:864*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 864*FLEN/8, x13, x9, x10)

inst_310:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x358ecd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x335d66 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e6a2e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f358ecd; op2val:0x3fb35d66;
op3val:0x3f7e6a2e; valaddr_reg:x12; val_offset:867*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 867*FLEN/8, x13, x9, x10)

inst_311:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x358ecd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x335d66 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e6a2e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f358ecd; op2val:0x3fb35d66;
op3val:0x3f7e6a2e; valaddr_reg:x12; val_offset:870*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 870*FLEN/8, x13, x9, x10)

inst_312:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x358ecd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x335d66 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e6a2e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f358ecd; op2val:0x3fb35d66;
op3val:0x3f7e6a2e; valaddr_reg:x12; val_offset:873*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 873*FLEN/8, x13, x9, x10)

inst_313:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x358ecd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x335d66 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e6a2e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f358ecd; op2val:0x3fb35d66;
op3val:0x3f7e6a2e; valaddr_reg:x12; val_offset:876*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 876*FLEN/8, x13, x9, x10)

inst_314:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x358ecd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x335d66 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e6a2e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f358ecd; op2val:0x3fb35d66;
op3val:0x3f7e6a2e; valaddr_reg:x12; val_offset:879*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 879*FLEN/8, x13, x9, x10)

inst_315:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0cf6eb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5b2e65 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716190 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0cf6eb; op2val:0x3fdb2e65;
op3val:0x3f716190; valaddr_reg:x12; val_offset:882*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 882*FLEN/8, x13, x9, x10)

inst_316:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0cf6eb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5b2e65 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716190 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0cf6eb; op2val:0x3fdb2e65;
op3val:0x3f716190; valaddr_reg:x12; val_offset:885*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 885*FLEN/8, x13, x9, x10)

inst_317:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0cf6eb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5b2e65 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716190 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0cf6eb; op2val:0x3fdb2e65;
op3val:0x3f716190; valaddr_reg:x12; val_offset:888*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 888*FLEN/8, x13, x9, x10)

inst_318:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0cf6eb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5b2e65 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716190 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0cf6eb; op2val:0x3fdb2e65;
op3val:0x3f716190; valaddr_reg:x12; val_offset:891*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 891*FLEN/8, x13, x9, x10)

inst_319:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0cf6eb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5b2e65 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716190 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0cf6eb; op2val:0x3fdb2e65;
op3val:0x3f716190; valaddr_reg:x12; val_offset:894*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 894*FLEN/8, x13, x9, x10)

inst_320:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x784a89 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f0f62 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x67dc82 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f784a89; op2val:0x3e6f0f62;
op3val:0x3e67dc82; valaddr_reg:x12; val_offset:897*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 897*FLEN/8, x13, x9, x10)

inst_321:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x784a89 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f0f62 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x67dc82 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f784a89; op2val:0x3e6f0f62;
op3val:0x3e67dc82; valaddr_reg:x12; val_offset:900*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 900*FLEN/8, x13, x9, x10)

inst_322:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x784a89 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f0f62 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x67dc82 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f784a89; op2val:0x3e6f0f62;
op3val:0x3e67dc82; valaddr_reg:x12; val_offset:903*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 903*FLEN/8, x13, x9, x10)

inst_323:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x784a89 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f0f62 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x67dc82 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f784a89; op2val:0x3e6f0f62;
op3val:0x3e67dc82; valaddr_reg:x12; val_offset:906*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 906*FLEN/8, x13, x9, x10)

inst_324:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x784a89 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f0f62 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x67dc82 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f784a89; op2val:0x3e6f0f62;
op3val:0x3e67dc82; valaddr_reg:x12; val_offset:909*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 909*FLEN/8, x13, x9, x10)

inst_325:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634aaf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2253fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x101fd3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f634aaf; op2val:0x3ea253fb;
op3val:0x3e901fd3; valaddr_reg:x12; val_offset:912*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 912*FLEN/8, x13, x9, x10)

inst_326:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634aaf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2253fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x101fd3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f634aaf; op2val:0x3ea253fb;
op3val:0x3e901fd3; valaddr_reg:x12; val_offset:915*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 915*FLEN/8, x13, x9, x10)

inst_327:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634aaf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2253fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x101fd3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f634aaf; op2val:0x3ea253fb;
op3val:0x3e901fd3; valaddr_reg:x12; val_offset:918*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 918*FLEN/8, x13, x9, x10)

inst_328:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634aaf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2253fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x101fd3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f634aaf; op2val:0x3ea253fb;
op3val:0x3e901fd3; valaddr_reg:x12; val_offset:921*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 921*FLEN/8, x13, x9, x10)

inst_329:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634aaf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2253fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x101fd3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f634aaf; op2val:0x3ea253fb;
op3val:0x3e901fd3; valaddr_reg:x12; val_offset:924*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 924*FLEN/8, x13, x9, x10)

inst_330:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x235339 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x459c8f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7c25db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f235339; op2val:0x3dc59c8f;
op3val:0x3d7c25db; valaddr_reg:x12; val_offset:927*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 927*FLEN/8, x13, x9, x10)

inst_331:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x235339 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x459c8f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7c25db and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f235339; op2val:0x3dc59c8f;
op3val:0x3d7c25db; valaddr_reg:x12; val_offset:930*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 930*FLEN/8, x13, x9, x10)

inst_332:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x235339 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x459c8f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7c25db and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f235339; op2val:0x3dc59c8f;
op3val:0x3d7c25db; valaddr_reg:x12; val_offset:933*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 933*FLEN/8, x13, x9, x10)

inst_333:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x235339 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x459c8f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7c25db and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f235339; op2val:0x3dc59c8f;
op3val:0x3d7c25db; valaddr_reg:x12; val_offset:936*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 936*FLEN/8, x13, x9, x10)

inst_334:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x235339 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x459c8f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7c25db and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f235339; op2val:0x3dc59c8f;
op3val:0x3d7c25db; valaddr_reg:x12; val_offset:939*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 939*FLEN/8, x13, x9, x10)

inst_335:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x16064a and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4cd0cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x700ec1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e16064a; op2val:0x40ccd0cd;
op3val:0x3f700ec1; valaddr_reg:x12; val_offset:942*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 942*FLEN/8, x13, x9, x10)

inst_336:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x16064a and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4cd0cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x700ec1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e16064a; op2val:0x40ccd0cd;
op3val:0x3f700ec1; valaddr_reg:x12; val_offset:945*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 945*FLEN/8, x13, x9, x10)

inst_337:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x16064a and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4cd0cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x700ec1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e16064a; op2val:0x40ccd0cd;
op3val:0x3f700ec1; valaddr_reg:x12; val_offset:948*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 948*FLEN/8, x13, x9, x10)

inst_338:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x16064a and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4cd0cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x700ec1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e16064a; op2val:0x40ccd0cd;
op3val:0x3f700ec1; valaddr_reg:x12; val_offset:951*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 951*FLEN/8, x13, x9, x10)

inst_339:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x16064a and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4cd0cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x700ec1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e16064a; op2val:0x40ccd0cd;
op3val:0x3f700ec1; valaddr_reg:x12; val_offset:954*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 954*FLEN/8, x13, x9, x10)

inst_340:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4eafb1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0572eb and fs3 == 0 and fe3 == 0x7a and fm3 == 0x577c1f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4eafb1; op2val:0x3d8572eb;
op3val:0x3d577c1f; valaddr_reg:x12; val_offset:957*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 957*FLEN/8, x13, x9, x10)

inst_341:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4eafb1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0572eb and fs3 == 0 and fe3 == 0x7a and fm3 == 0x577c1f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4eafb1; op2val:0x3d8572eb;
op3val:0x3d577c1f; valaddr_reg:x12; val_offset:960*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 960*FLEN/8, x13, x9, x10)

inst_342:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4eafb1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0572eb and fs3 == 0 and fe3 == 0x7a and fm3 == 0x577c1f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4eafb1; op2val:0x3d8572eb;
op3val:0x3d577c1f; valaddr_reg:x12; val_offset:963*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 963*FLEN/8, x13, x9, x10)

inst_343:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4eafb1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0572eb and fs3 == 0 and fe3 == 0x7a and fm3 == 0x577c1f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4eafb1; op2val:0x3d8572eb;
op3val:0x3d577c1f; valaddr_reg:x12; val_offset:966*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 966*FLEN/8, x13, x9, x10)

inst_344:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4eafb1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0572eb and fs3 == 0 and fe3 == 0x7a and fm3 == 0x577c1f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4eafb1; op2val:0x3d8572eb;
op3val:0x3d577c1f; valaddr_reg:x12; val_offset:969*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 969*FLEN/8, x13, x9, x10)

inst_345:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45ec2e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f599b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x13f07e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5ec2e; op2val:0x3fbf599b;
op3val:0x3f13f07e; valaddr_reg:x12; val_offset:972*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 972*FLEN/8, x13, x9, x10)

inst_346:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45ec2e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f599b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x13f07e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5ec2e; op2val:0x3fbf599b;
op3val:0x3f13f07e; valaddr_reg:x12; val_offset:975*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 975*FLEN/8, x13, x9, x10)

inst_347:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45ec2e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f599b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x13f07e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5ec2e; op2val:0x3fbf599b;
op3val:0x3f13f07e; valaddr_reg:x12; val_offset:978*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 978*FLEN/8, x13, x9, x10)

inst_348:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45ec2e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f599b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x13f07e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5ec2e; op2val:0x3fbf599b;
op3val:0x3f13f07e; valaddr_reg:x12; val_offset:981*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 981*FLEN/8, x13, x9, x10)

inst_349:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45ec2e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f599b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x13f07e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5ec2e; op2val:0x3fbf599b;
op3val:0x3f13f07e; valaddr_reg:x12; val_offset:984*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 984*FLEN/8, x13, x9, x10)

inst_350:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5eef03 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5b4938 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ef63b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5eef03; op2val:0x3f5b4938;
op3val:0x3e3ef63b; valaddr_reg:x12; val_offset:987*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 987*FLEN/8, x13, x9, x10)

inst_351:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5eef03 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5b4938 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ef63b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5eef03; op2val:0x3f5b4938;
op3val:0x3e3ef63b; valaddr_reg:x12; val_offset:990*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 990*FLEN/8, x13, x9, x10)

inst_352:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5eef03 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5b4938 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ef63b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5eef03; op2val:0x3f5b4938;
op3val:0x3e3ef63b; valaddr_reg:x12; val_offset:993*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 993*FLEN/8, x13, x9, x10)

inst_353:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5eef03 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5b4938 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ef63b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5eef03; op2val:0x3f5b4938;
op3val:0x3e3ef63b; valaddr_reg:x12; val_offset:996*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 996*FLEN/8, x13, x9, x10)

inst_354:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5eef03 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5b4938 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ef63b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5eef03; op2val:0x3f5b4938;
op3val:0x3e3ef63b; valaddr_reg:x12; val_offset:999*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 999*FLEN/8, x13, x9, x10)

inst_355:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x022057 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x05bd79 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07f63a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f022057; op2val:0x3f85bd79;
op3val:0x3f07f63a; valaddr_reg:x12; val_offset:1002*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1002*FLEN/8, x13, x9, x10)

inst_356:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x022057 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x05bd79 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07f63a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f022057; op2val:0x3f85bd79;
op3val:0x3f07f63a; valaddr_reg:x12; val_offset:1005*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1005*FLEN/8, x13, x9, x10)

inst_357:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x022057 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x05bd79 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07f63a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f022057; op2val:0x3f85bd79;
op3val:0x3f07f63a; valaddr_reg:x12; val_offset:1008*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1008*FLEN/8, x13, x9, x10)

inst_358:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x022057 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x05bd79 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07f63a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f022057; op2val:0x3f85bd79;
op3val:0x3f07f63a; valaddr_reg:x12; val_offset:1011*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1011*FLEN/8, x13, x9, x10)

inst_359:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x022057 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x05bd79 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07f63a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f022057; op2val:0x3f85bd79;
op3val:0x3f07f63a; valaddr_reg:x12; val_offset:1014*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1014*FLEN/8, x13, x9, x10)

inst_360:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x665c3d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3583c8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2355cd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f665c3d; op2val:0x3f3583c8;
op3val:0x3f2355cd; valaddr_reg:x12; val_offset:1017*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1017*FLEN/8, x13, x9, x10)

inst_361:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x665c3d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3583c8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2355cd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f665c3d; op2val:0x3f3583c8;
op3val:0x3f2355cd; valaddr_reg:x12; val_offset:1020*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1020*FLEN/8, x13, x9, x10)

inst_362:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x665c3d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3583c8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2355cd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f665c3d; op2val:0x3f3583c8;
op3val:0x3f2355cd; valaddr_reg:x12; val_offset:1023*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1023*FLEN/8, x13, x9, x10)

inst_363:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x665c3d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3583c8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2355cd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f665c3d; op2val:0x3f3583c8;
op3val:0x3f2355cd; valaddr_reg:x12; val_offset:1026*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1026*FLEN/8, x13, x9, x10)

inst_364:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x665c3d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3583c8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2355cd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f665c3d; op2val:0x3f3583c8;
op3val:0x3f2355cd; valaddr_reg:x12; val_offset:1029*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1029*FLEN/8, x13, x9, x10)

inst_365:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ae3fd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6031f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3fb233 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ae3fd; op2val:0x3ee031f2;
op3val:0x3ebfb233; valaddr_reg:x12; val_offset:1032*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1032*FLEN/8, x13, x9, x10)

inst_366:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ae3fd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6031f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3fb233 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ae3fd; op2val:0x3ee031f2;
op3val:0x3ebfb233; valaddr_reg:x12; val_offset:1035*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1035*FLEN/8, x13, x9, x10)

inst_367:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ae3fd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6031f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3fb233 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ae3fd; op2val:0x3ee031f2;
op3val:0x3ebfb233; valaddr_reg:x12; val_offset:1038*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1038*FLEN/8, x13, x9, x10)

inst_368:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ae3fd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6031f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3fb233 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ae3fd; op2val:0x3ee031f2;
op3val:0x3ebfb233; valaddr_reg:x12; val_offset:1041*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1041*FLEN/8, x13, x9, x10)

inst_369:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ae3fd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6031f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3fb233 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ae3fd; op2val:0x3ee031f2;
op3val:0x3ebfb233; valaddr_reg:x12; val_offset:1044*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1044*FLEN/8, x13, x9, x10)

inst_370:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x496e53 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0b34ae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b10b5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec96e53; op2val:0x400b34ae;
op3val:0x3f5b10b5; valaddr_reg:x12; val_offset:1047*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1047*FLEN/8, x13, x9, x10)

inst_371:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x496e53 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0b34ae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b10b5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec96e53; op2val:0x400b34ae;
op3val:0x3f5b10b5; valaddr_reg:x12; val_offset:1050*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1050*FLEN/8, x13, x9, x10)

inst_372:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x496e53 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0b34ae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b10b5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec96e53; op2val:0x400b34ae;
op3val:0x3f5b10b5; valaddr_reg:x12; val_offset:1053*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1053*FLEN/8, x13, x9, x10)

inst_373:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x496e53 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0b34ae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b10b5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec96e53; op2val:0x400b34ae;
op3val:0x3f5b10b5; valaddr_reg:x12; val_offset:1056*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1056*FLEN/8, x13, x9, x10)

inst_374:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x496e53 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0b34ae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b10b5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec96e53; op2val:0x400b34ae;
op3val:0x3f5b10b5; valaddr_reg:x12; val_offset:1059*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1059*FLEN/8, x13, x9, x10)

inst_375:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e75d0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b4d70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6715e4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe75d0; op2val:0x401b4d70;
op3val:0x3f6715e4; valaddr_reg:x12; val_offset:1062*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1062*FLEN/8, x13, x9, x10)

inst_376:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e75d0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b4d70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6715e4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe75d0; op2val:0x401b4d70;
op3val:0x3f6715e4; valaddr_reg:x12; val_offset:1065*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1065*FLEN/8, x13, x9, x10)

inst_377:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e75d0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b4d70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6715e4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe75d0; op2val:0x401b4d70;
op3val:0x3f6715e4; valaddr_reg:x12; val_offset:1068*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1068*FLEN/8, x13, x9, x10)

inst_378:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e75d0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b4d70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6715e4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe75d0; op2val:0x401b4d70;
op3val:0x3f6715e4; valaddr_reg:x12; val_offset:1071*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1071*FLEN/8, x13, x9, x10)

inst_379:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e75d0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b4d70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6715e4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe75d0; op2val:0x401b4d70;
op3val:0x3f6715e4; valaddr_reg:x12; val_offset:1074*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1074*FLEN/8, x13, x9, x10)

inst_380:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x650271 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4adafc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3577d3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f650271; op2val:0x3ecadafc;
op3val:0x3eb577d3; valaddr_reg:x12; val_offset:1077*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1077*FLEN/8, x13, x9, x10)

inst_381:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x650271 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4adafc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3577d3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f650271; op2val:0x3ecadafc;
op3val:0x3eb577d3; valaddr_reg:x12; val_offset:1080*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1080*FLEN/8, x13, x9, x10)

inst_382:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x650271 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4adafc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3577d3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f650271; op2val:0x3ecadafc;
op3val:0x3eb577d3; valaddr_reg:x12; val_offset:1083*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1083*FLEN/8, x13, x9, x10)

inst_383:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x650271 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4adafc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3577d3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f650271; op2val:0x3ecadafc;
op3val:0x3eb577d3; valaddr_reg:x12; val_offset:1086*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1086*FLEN/8, x13, x9, x10)

inst_384:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x650271 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4adafc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3577d3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f650271; op2val:0x3ecadafc;
op3val:0x3eb577d3; valaddr_reg:x12; val_offset:1089*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1089*FLEN/8, x13, x9, x10)

inst_385:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098b9f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3f609f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x4da62a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f098b9f; op2val:0x3e3f609f;
op3val:0x3dcda62a; valaddr_reg:x12; val_offset:1092*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1092*FLEN/8, x13, x9, x10)

inst_386:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098b9f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3f609f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x4da62a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f098b9f; op2val:0x3e3f609f;
op3val:0x3dcda62a; valaddr_reg:x12; val_offset:1095*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1095*FLEN/8, x13, x9, x10)

inst_387:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098b9f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3f609f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x4da62a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f098b9f; op2val:0x3e3f609f;
op3val:0x3dcda62a; valaddr_reg:x12; val_offset:1098*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1098*FLEN/8, x13, x9, x10)

inst_388:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098b9f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3f609f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x4da62a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f098b9f; op2val:0x3e3f609f;
op3val:0x3dcda62a; valaddr_reg:x12; val_offset:1101*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1101*FLEN/8, x13, x9, x10)

inst_389:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098b9f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3f609f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x4da62a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f098b9f; op2val:0x3e3f609f;
op3val:0x3dcda62a; valaddr_reg:x12; val_offset:1104*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1104*FLEN/8, x13, x9, x10)

inst_390:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd9d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e2c0f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18e5f8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdd9d7; op2val:0x3f4e2c0f;
op3val:0x3e98e5f8; valaddr_reg:x12; val_offset:1107*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1107*FLEN/8, x13, x9, x10)

inst_391:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd9d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e2c0f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18e5f8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdd9d7; op2val:0x3f4e2c0f;
op3val:0x3e98e5f8; valaddr_reg:x12; val_offset:1110*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1110*FLEN/8, x13, x9, x10)

inst_392:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd9d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e2c0f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18e5f8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdd9d7; op2val:0x3f4e2c0f;
op3val:0x3e98e5f8; valaddr_reg:x12; val_offset:1113*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1113*FLEN/8, x13, x9, x10)

inst_393:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd9d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e2c0f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18e5f8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdd9d7; op2val:0x3f4e2c0f;
op3val:0x3e98e5f8; valaddr_reg:x12; val_offset:1116*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1116*FLEN/8, x13, x9, x10)

inst_394:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd9d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e2c0f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18e5f8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdd9d7; op2val:0x3f4e2c0f;
op3val:0x3e98e5f8; valaddr_reg:x12; val_offset:1119*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1119*FLEN/8, x13, x9, x10)

inst_395:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7c7e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x444826 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b5a4d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f7c7e; op2val:0x3e444826;
op3val:0x3e2b5a4d; valaddr_reg:x12; val_offset:1122*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1122*FLEN/8, x13, x9, x10)

inst_396:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7c7e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x444826 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b5a4d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f7c7e; op2val:0x3e444826;
op3val:0x3e2b5a4d; valaddr_reg:x12; val_offset:1125*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1125*FLEN/8, x13, x9, x10)

inst_397:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7c7e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x444826 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b5a4d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f7c7e; op2val:0x3e444826;
op3val:0x3e2b5a4d; valaddr_reg:x12; val_offset:1128*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1128*FLEN/8, x13, x9, x10)

inst_398:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7c7e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x444826 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b5a4d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f7c7e; op2val:0x3e444826;
op3val:0x3e2b5a4d; valaddr_reg:x12; val_offset:1131*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1131*FLEN/8, x13, x9, x10)

inst_399:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7c7e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x444826 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b5a4d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f7c7e; op2val:0x3e444826;
op3val:0x3e2b5a4d; valaddr_reg:x12; val_offset:1134*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1134*FLEN/8, x13, x9, x10)

inst_400:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a9ce3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x555866 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43858c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a9ce3; op2val:0x3ed55866;
op3val:0x3ec3858c; valaddr_reg:x12; val_offset:1137*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1137*FLEN/8, x13, x9, x10)

inst_401:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a9ce3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x555866 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43858c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a9ce3; op2val:0x3ed55866;
op3val:0x3ec3858c; valaddr_reg:x12; val_offset:1140*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1140*FLEN/8, x13, x9, x10)

inst_402:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a9ce3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x555866 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43858c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a9ce3; op2val:0x3ed55866;
op3val:0x3ec3858c; valaddr_reg:x12; val_offset:1143*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1143*FLEN/8, x13, x9, x10)

inst_403:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a9ce3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x555866 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43858c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a9ce3; op2val:0x3ed55866;
op3val:0x3ec3858c; valaddr_reg:x12; val_offset:1146*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1146*FLEN/8, x13, x9, x10)

inst_404:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a9ce3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x555866 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43858c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a9ce3; op2val:0x3ed55866;
op3val:0x3ec3858c; valaddr_reg:x12; val_offset:1149*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1149*FLEN/8, x13, x9, x10)

inst_405:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3574c8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x054ce6 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3cf85d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db574c8; op2val:0x3f854ce6;
op3val:0x3dbcf85d; valaddr_reg:x12; val_offset:1152*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1152*FLEN/8, x13, x9, x10)

inst_406:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3574c8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x054ce6 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3cf85d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db574c8; op2val:0x3f854ce6;
op3val:0x3dbcf85d; valaddr_reg:x12; val_offset:1155*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1155*FLEN/8, x13, x9, x10)

inst_407:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3574c8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x054ce6 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3cf85d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db574c8; op2val:0x3f854ce6;
op3val:0x3dbcf85d; valaddr_reg:x12; val_offset:1158*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1158*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_3)

inst_408:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3574c8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x054ce6 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3cf85d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db574c8; op2val:0x3f854ce6;
op3val:0x3dbcf85d; valaddr_reg:x12; val_offset:1161*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1161*FLEN/8, x13, x9, x10)

inst_409:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3574c8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x054ce6 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3cf85d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db574c8; op2val:0x3f854ce6;
op3val:0x3dbcf85d; valaddr_reg:x12; val_offset:1164*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1164*FLEN/8, x13, x9, x10)

inst_410:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a8857 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x245860 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0c4ac9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dda8857; op2val:0x40a45860;
op3val:0x3f0c4ac9; valaddr_reg:x12; val_offset:1167*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1167*FLEN/8, x13, x9, x10)

inst_411:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a8857 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x245860 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0c4ac9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dda8857; op2val:0x40a45860;
op3val:0x3f0c4ac9; valaddr_reg:x12; val_offset:1170*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1170*FLEN/8, x13, x9, x10)

inst_412:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a8857 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x245860 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0c4ac9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dda8857; op2val:0x40a45860;
op3val:0x3f0c4ac9; valaddr_reg:x12; val_offset:1173*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1173*FLEN/8, x13, x9, x10)

inst_413:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a8857 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x245860 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0c4ac9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dda8857; op2val:0x40a45860;
op3val:0x3f0c4ac9; valaddr_reg:x12; val_offset:1176*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1176*FLEN/8, x13, x9, x10)

inst_414:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a8857 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x245860 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0c4ac9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dda8857; op2val:0x40a45860;
op3val:0x3f0c4ac9; valaddr_reg:x12; val_offset:1179*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1179*FLEN/8, x13, x9, x10)

inst_415:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1cc631 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2e752c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x55acf0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9cc631; op2val:0x3f2e752c;
op3val:0x3e55acf0; valaddr_reg:x12; val_offset:1182*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1182*FLEN/8, x13, x9, x10)

inst_416:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1cc631 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2e752c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x55acf0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9cc631; op2val:0x3f2e752c;
op3val:0x3e55acf0; valaddr_reg:x12; val_offset:1185*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1185*FLEN/8, x13, x9, x10)

inst_417:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1cc631 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2e752c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x55acf0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9cc631; op2val:0x3f2e752c;
op3val:0x3e55acf0; valaddr_reg:x12; val_offset:1188*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1188*FLEN/8, x13, x9, x10)

inst_418:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1cc631 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2e752c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x55acf0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9cc631; op2val:0x3f2e752c;
op3val:0x3e55acf0; valaddr_reg:x12; val_offset:1191*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1191*FLEN/8, x13, x9, x10)

inst_419:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1cc631 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2e752c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x55acf0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9cc631; op2val:0x3f2e752c;
op3val:0x3e55acf0; valaddr_reg:x12; val_offset:1194*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1194*FLEN/8, x13, x9, x10)

inst_420:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ce8d9 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x065347 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x67d37d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ce8d9; op2val:0x3d865347;
op3val:0x3d67d37d; valaddr_reg:x12; val_offset:1197*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1197*FLEN/8, x13, x9, x10)

inst_421:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ce8d9 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x065347 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x67d37d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ce8d9; op2val:0x3d865347;
op3val:0x3d67d37d; valaddr_reg:x12; val_offset:1200*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1200*FLEN/8, x13, x9, x10)

inst_422:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ce8d9 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x065347 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x67d37d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ce8d9; op2val:0x3d865347;
op3val:0x3d67d37d; valaddr_reg:x12; val_offset:1203*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1203*FLEN/8, x13, x9, x10)

inst_423:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ce8d9 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x065347 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x67d37d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ce8d9; op2val:0x3d865347;
op3val:0x3d67d37d; valaddr_reg:x12; val_offset:1206*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1206*FLEN/8, x13, x9, x10)

inst_424:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ce8d9 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x065347 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x67d37d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ce8d9; op2val:0x3d865347;
op3val:0x3d67d37d; valaddr_reg:x12; val_offset:1209*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1209*FLEN/8, x13, x9, x10)

inst_425:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3ad486 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x441ffb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f220d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dbad486; op2val:0x40c41ffb;
op3val:0x3f0f220d; valaddr_reg:x12; val_offset:1212*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1212*FLEN/8, x13, x9, x10)

inst_426:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3ad486 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x441ffb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f220d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dbad486; op2val:0x40c41ffb;
op3val:0x3f0f220d; valaddr_reg:x12; val_offset:1215*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1215*FLEN/8, x13, x9, x10)

inst_427:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3ad486 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x441ffb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f220d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dbad486; op2val:0x40c41ffb;
op3val:0x3f0f220d; valaddr_reg:x12; val_offset:1218*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1218*FLEN/8, x13, x9, x10)

inst_428:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3ad486 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x441ffb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f220d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dbad486; op2val:0x40c41ffb;
op3val:0x3f0f220d; valaddr_reg:x12; val_offset:1221*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1221*FLEN/8, x13, x9, x10)

inst_429:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3ad486 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x441ffb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f220d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dbad486; op2val:0x40c41ffb;
op3val:0x3f0f220d; valaddr_reg:x12; val_offset:1224*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1224*FLEN/8, x13, x9, x10)

inst_430:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x62d16a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1fc256 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d8c40 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e62d16a; op2val:0x401fc256;
op3val:0x3f0d8c40; valaddr_reg:x12; val_offset:1227*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1227*FLEN/8, x13, x9, x10)

inst_431:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x62d16a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1fc256 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d8c40 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e62d16a; op2val:0x401fc256;
op3val:0x3f0d8c40; valaddr_reg:x12; val_offset:1230*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1230*FLEN/8, x13, x9, x10)

inst_432:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x62d16a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1fc256 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d8c40 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e62d16a; op2val:0x401fc256;
op3val:0x3f0d8c40; valaddr_reg:x12; val_offset:1233*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1233*FLEN/8, x13, x9, x10)

inst_433:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x62d16a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1fc256 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d8c40 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e62d16a; op2val:0x401fc256;
op3val:0x3f0d8c40; valaddr_reg:x12; val_offset:1236*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1236*FLEN/8, x13, x9, x10)

inst_434:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x62d16a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1fc256 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d8c40 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e62d16a; op2val:0x401fc256;
op3val:0x3f0d8c40; valaddr_reg:x12; val_offset:1239*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1239*FLEN/8, x13, x9, x10)

inst_435:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x393d62 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4b71bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1335f9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f393d62; op2val:0x3ecb71bc;
op3val:0x3e9335f9; valaddr_reg:x12; val_offset:1242*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1242*FLEN/8, x13, x9, x10)

inst_436:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x393d62 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4b71bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1335f9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f393d62; op2val:0x3ecb71bc;
op3val:0x3e9335f9; valaddr_reg:x12; val_offset:1245*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1245*FLEN/8, x13, x9, x10)

inst_437:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x393d62 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4b71bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1335f9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f393d62; op2val:0x3ecb71bc;
op3val:0x3e9335f9; valaddr_reg:x12; val_offset:1248*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1248*FLEN/8, x13, x9, x10)

inst_438:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x393d62 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4b71bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1335f9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f393d62; op2val:0x3ecb71bc;
op3val:0x3e9335f9; valaddr_reg:x12; val_offset:1251*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1251*FLEN/8, x13, x9, x10)

inst_439:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x393d62 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4b71bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1335f9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f393d62; op2val:0x3ecb71bc;
op3val:0x3e9335f9; valaddr_reg:x12; val_offset:1254*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1254*FLEN/8, x13, x9, x10)

inst_440:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fb350 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5a824b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c98b2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6fb350; op2val:0x3e5a824b;
op3val:0x3e4c98b2; valaddr_reg:x12; val_offset:1257*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1257*FLEN/8, x13, x9, x10)

inst_441:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fb350 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5a824b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c98b2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6fb350; op2val:0x3e5a824b;
op3val:0x3e4c98b2; valaddr_reg:x12; val_offset:1260*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1260*FLEN/8, x13, x9, x10)

inst_442:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fb350 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5a824b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c98b2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6fb350; op2val:0x3e5a824b;
op3val:0x3e4c98b2; valaddr_reg:x12; val_offset:1263*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1263*FLEN/8, x13, x9, x10)

inst_443:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fb350 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5a824b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c98b2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6fb350; op2val:0x3e5a824b;
op3val:0x3e4c98b2; valaddr_reg:x12; val_offset:1266*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1266*FLEN/8, x13, x9, x10)

inst_444:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fb350 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5a824b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c98b2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6fb350; op2val:0x3e5a824b;
op3val:0x3e4c98b2; valaddr_reg:x12; val_offset:1269*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1269*FLEN/8, x13, x9, x10)

inst_445:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x339806 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x0242c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36c412 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cb39806; op2val:0x420242c2;
op3val:0x3f36c412; valaddr_reg:x12; val_offset:1272*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1272*FLEN/8, x13, x9, x10)

inst_446:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x339806 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x0242c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36c412 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cb39806; op2val:0x420242c2;
op3val:0x3f36c412; valaddr_reg:x12; val_offset:1275*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1275*FLEN/8, x13, x9, x10)

inst_447:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x339806 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x0242c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36c412 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cb39806; op2val:0x420242c2;
op3val:0x3f36c412; valaddr_reg:x12; val_offset:1278*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1278*FLEN/8, x13, x9, x10)

inst_448:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x339806 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x0242c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36c412 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cb39806; op2val:0x420242c2;
op3val:0x3f36c412; valaddr_reg:x12; val_offset:1281*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1281*FLEN/8, x13, x9, x10)

inst_449:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x339806 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x0242c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36c412 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cb39806; op2val:0x420242c2;
op3val:0x3f36c412; valaddr_reg:x12; val_offset:1284*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1284*FLEN/8, x13, x9, x10)

inst_450:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x771b27 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x73053c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a93d5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d771b27; op2val:0x4173053c;
op3val:0x3f6a93d5; valaddr_reg:x12; val_offset:1287*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1287*FLEN/8, x13, x9, x10)

inst_451:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x771b27 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x73053c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a93d5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d771b27; op2val:0x4173053c;
op3val:0x3f6a93d5; valaddr_reg:x12; val_offset:1290*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1290*FLEN/8, x13, x9, x10)

inst_452:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x771b27 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x73053c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a93d5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d771b27; op2val:0x4173053c;
op3val:0x3f6a93d5; valaddr_reg:x12; val_offset:1293*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1293*FLEN/8, x13, x9, x10)

inst_453:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x771b27 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x73053c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a93d5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d771b27; op2val:0x4173053c;
op3val:0x3f6a93d5; valaddr_reg:x12; val_offset:1296*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1296*FLEN/8, x13, x9, x10)

inst_454:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x771b27 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x73053c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a93d5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d771b27; op2val:0x4173053c;
op3val:0x3f6a93d5; valaddr_reg:x12; val_offset:1299*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1299*FLEN/8, x13, x9, x10)

inst_455:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1153cb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x22630c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x385e82 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1153cb; op2val:0x40a2630c;
op3val:0x3f385e82; valaddr_reg:x12; val_offset:1302*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1302*FLEN/8, x13, x9, x10)

inst_456:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1153cb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x22630c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x385e82 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1153cb; op2val:0x40a2630c;
op3val:0x3f385e82; valaddr_reg:x12; val_offset:1305*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1305*FLEN/8, x13, x9, x10)

inst_457:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1153cb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x22630c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x385e82 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1153cb; op2val:0x40a2630c;
op3val:0x3f385e82; valaddr_reg:x12; val_offset:1308*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1308*FLEN/8, x13, x9, x10)

inst_458:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1153cb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x22630c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x385e82 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1153cb; op2val:0x40a2630c;
op3val:0x3f385e82; valaddr_reg:x12; val_offset:1311*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1311*FLEN/8, x13, x9, x10)

inst_459:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1153cb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x22630c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x385e82 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1153cb; op2val:0x40a2630c;
op3val:0x3f385e82; valaddr_reg:x12; val_offset:1314*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1314*FLEN/8, x13, x9, x10)

inst_460:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0a5c4f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x06d40f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11bddc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0a5c4f; op2val:0x4186d40f;
op3val:0x3f11bddc; valaddr_reg:x12; val_offset:1317*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1317*FLEN/8, x13, x9, x10)

inst_461:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0a5c4f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x06d40f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11bddc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0a5c4f; op2val:0x4186d40f;
op3val:0x3f11bddc; valaddr_reg:x12; val_offset:1320*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1320*FLEN/8, x13, x9, x10)

inst_462:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0a5c4f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x06d40f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11bddc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0a5c4f; op2val:0x4186d40f;
op3val:0x3f11bddc; valaddr_reg:x12; val_offset:1323*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1323*FLEN/8, x13, x9, x10)

inst_463:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0a5c4f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x06d40f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11bddc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0a5c4f; op2val:0x4186d40f;
op3val:0x3f11bddc; valaddr_reg:x12; val_offset:1326*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1326*FLEN/8, x13, x9, x10)

inst_464:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0a5c4f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x06d40f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11bddc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0a5c4f; op2val:0x4186d40f;
op3val:0x3f11bddc; valaddr_reg:x12; val_offset:1329*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1329*FLEN/8, x13, x9, x10)

inst_465:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1f6900 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x46ff6f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77d48a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9f6900; op2val:0x4146ff6f;
op3val:0x3f77d48a; valaddr_reg:x12; val_offset:1332*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1332*FLEN/8, x13, x9, x10)

inst_466:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1f6900 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x46ff6f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77d48a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9f6900; op2val:0x4146ff6f;
op3val:0x3f77d48a; valaddr_reg:x12; val_offset:1335*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1335*FLEN/8, x13, x9, x10)

inst_467:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1f6900 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x46ff6f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77d48a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9f6900; op2val:0x4146ff6f;
op3val:0x3f77d48a; valaddr_reg:x12; val_offset:1338*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1338*FLEN/8, x13, x9, x10)

inst_468:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1f6900 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x46ff6f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77d48a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9f6900; op2val:0x4146ff6f;
op3val:0x3f77d48a; valaddr_reg:x12; val_offset:1341*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1341*FLEN/8, x13, x9, x10)

inst_469:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1f6900 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x46ff6f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77d48a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9f6900; op2val:0x4146ff6f;
op3val:0x3f77d48a; valaddr_reg:x12; val_offset:1344*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1344*FLEN/8, x13, x9, x10)

inst_470:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a1345 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4da5d9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c0914 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a1345; op2val:0x3e4da5d9;
op3val:0x3e3c0914; valaddr_reg:x12; val_offset:1347*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1347*FLEN/8, x13, x9, x10)

inst_471:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a1345 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4da5d9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c0914 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a1345; op2val:0x3e4da5d9;
op3val:0x3e3c0914; valaddr_reg:x12; val_offset:1350*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1350*FLEN/8, x13, x9, x10)

inst_472:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a1345 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4da5d9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c0914 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a1345; op2val:0x3e4da5d9;
op3val:0x3e3c0914; valaddr_reg:x12; val_offset:1353*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1353*FLEN/8, x13, x9, x10)

inst_473:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a1345 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4da5d9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c0914 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a1345; op2val:0x3e4da5d9;
op3val:0x3e3c0914; valaddr_reg:x12; val_offset:1356*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1356*FLEN/8, x13, x9, x10)

inst_474:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a1345 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4da5d9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c0914 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a1345; op2val:0x3e4da5d9;
op3val:0x3e3c0914; valaddr_reg:x12; val_offset:1359*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1359*FLEN/8, x13, x9, x10)

inst_475:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x390d01 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2480bf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6dd2cc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb90d01; op2val:0x3fa480bf;
op3val:0x3eedd2cc; valaddr_reg:x12; val_offset:1362*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1362*FLEN/8, x13, x9, x10)

inst_476:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x390d01 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2480bf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6dd2cc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb90d01; op2val:0x3fa480bf;
op3val:0x3eedd2cc; valaddr_reg:x12; val_offset:1365*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1365*FLEN/8, x13, x9, x10)

inst_477:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x390d01 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2480bf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6dd2cc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb90d01; op2val:0x3fa480bf;
op3val:0x3eedd2cc; valaddr_reg:x12; val_offset:1368*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1368*FLEN/8, x13, x9, x10)

inst_478:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x390d01 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2480bf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6dd2cc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb90d01; op2val:0x3fa480bf;
op3val:0x3eedd2cc; valaddr_reg:x12; val_offset:1371*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1371*FLEN/8, x13, x9, x10)

inst_479:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x390d01 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2480bf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6dd2cc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb90d01; op2val:0x3fa480bf;
op3val:0x3eedd2cc; valaddr_reg:x12; val_offset:1374*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1374*FLEN/8, x13, x9, x10)

inst_480:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77a023 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5acb58 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x53a30f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77a023; op2val:0x3f5acb58;
op3val:0x3f53a30f; valaddr_reg:x12; val_offset:1377*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1377*FLEN/8, x13, x9, x10)

inst_481:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77a023 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5acb58 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x53a30f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77a023; op2val:0x3f5acb58;
op3val:0x3f53a30f; valaddr_reg:x12; val_offset:1380*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1380*FLEN/8, x13, x9, x10)

inst_482:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77a023 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5acb58 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x53a30f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77a023; op2val:0x3f5acb58;
op3val:0x3f53a30f; valaddr_reg:x12; val_offset:1383*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1383*FLEN/8, x13, x9, x10)

inst_483:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77a023 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5acb58 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x53a30f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77a023; op2val:0x3f5acb58;
op3val:0x3f53a30f; valaddr_reg:x12; val_offset:1386*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1386*FLEN/8, x13, x9, x10)

inst_484:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77a023 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5acb58 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x53a30f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77a023; op2val:0x3f5acb58;
op3val:0x3f53a30f; valaddr_reg:x12; val_offset:1389*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1389*FLEN/8, x13, x9, x10)

inst_485:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2127a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x40bee2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72abcf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2127a7; op2val:0x3fc0bee2;
op3val:0x3f72abcf; valaddr_reg:x12; val_offset:1392*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1392*FLEN/8, x13, x9, x10)

inst_486:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2127a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x40bee2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72abcf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2127a7; op2val:0x3fc0bee2;
op3val:0x3f72abcf; valaddr_reg:x12; val_offset:1395*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1395*FLEN/8, x13, x9, x10)

inst_487:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2127a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x40bee2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72abcf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2127a7; op2val:0x3fc0bee2;
op3val:0x3f72abcf; valaddr_reg:x12; val_offset:1398*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1398*FLEN/8, x13, x9, x10)

inst_488:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2127a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x40bee2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72abcf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2127a7; op2val:0x3fc0bee2;
op3val:0x3f72abcf; valaddr_reg:x12; val_offset:1401*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1401*FLEN/8, x13, x9, x10)

inst_489:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2127a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x40bee2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72abcf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2127a7; op2val:0x3fc0bee2;
op3val:0x3f72abcf; valaddr_reg:x12; val_offset:1404*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1404*FLEN/8, x13, x9, x10)

inst_490:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x640fa4 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x06f240 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x707001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3be40fa4; op2val:0x4206f240;
op3val:0x3e707001; valaddr_reg:x12; val_offset:1407*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1407*FLEN/8, x13, x9, x10)

inst_491:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x640fa4 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x06f240 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x707001 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3be40fa4; op2val:0x4206f240;
op3val:0x3e707001; valaddr_reg:x12; val_offset:1410*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1410*FLEN/8, x13, x9, x10)

inst_492:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x640fa4 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x06f240 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x707001 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3be40fa4; op2val:0x4206f240;
op3val:0x3e707001; valaddr_reg:x12; val_offset:1413*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1413*FLEN/8, x13, x9, x10)

inst_493:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x640fa4 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x06f240 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x707001 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3be40fa4; op2val:0x4206f240;
op3val:0x3e707001; valaddr_reg:x12; val_offset:1416*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1416*FLEN/8, x13, x9, x10)

inst_494:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x640fa4 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x06f240 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x707001 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3be40fa4; op2val:0x4206f240;
op3val:0x3e707001; valaddr_reg:x12; val_offset:1419*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1419*FLEN/8, x13, x9, x10)

inst_495:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4da1b7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3ec93d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x193fab and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d4da1b7; op2val:0x40bec93d;
op3val:0x3e993fab; valaddr_reg:x12; val_offset:1422*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1422*FLEN/8, x13, x9, x10)

inst_496:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4da1b7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3ec93d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x193fab and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d4da1b7; op2val:0x40bec93d;
op3val:0x3e993fab; valaddr_reg:x12; val_offset:1425*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1425*FLEN/8, x13, x9, x10)

inst_497:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4da1b7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3ec93d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x193fab and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d4da1b7; op2val:0x40bec93d;
op3val:0x3e993fab; valaddr_reg:x12; val_offset:1428*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1428*FLEN/8, x13, x9, x10)

inst_498:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4da1b7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3ec93d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x193fab and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d4da1b7; op2val:0x40bec93d;
op3val:0x3e993fab; valaddr_reg:x12; val_offset:1431*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1431*FLEN/8, x13, x9, x10)

inst_499:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x4da1b7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3ec93d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x193fab and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d4da1b7; op2val:0x40bec93d;
op3val:0x3e993fab; valaddr_reg:x12; val_offset:1434*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1434*FLEN/8, x13, x9, x10)

inst_500:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2811d1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33d6a3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c22bf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2811d1; op2val:0x3fb3d6a3;
op3val:0x3f6c22bf; valaddr_reg:x12; val_offset:1437*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1437*FLEN/8, x13, x9, x10)

inst_501:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2811d1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33d6a3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c22bf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2811d1; op2val:0x3fb3d6a3;
op3val:0x3f6c22bf; valaddr_reg:x12; val_offset:1440*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1440*FLEN/8, x13, x9, x10)

inst_502:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2811d1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33d6a3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c22bf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2811d1; op2val:0x3fb3d6a3;
op3val:0x3f6c22bf; valaddr_reg:x12; val_offset:1443*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1443*FLEN/8, x13, x9, x10)

inst_503:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2811d1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33d6a3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c22bf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2811d1; op2val:0x3fb3d6a3;
op3val:0x3f6c22bf; valaddr_reg:x12; val_offset:1446*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1446*FLEN/8, x13, x9, x10)

inst_504:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2811d1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33d6a3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c22bf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2811d1; op2val:0x3fb3d6a3;
op3val:0x3f6c22bf; valaddr_reg:x12; val_offset:1449*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1449*FLEN/8, x13, x9, x10)

inst_505:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09763a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x533203 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62ce99 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e89763a; op2val:0x40533203;
op3val:0x3f62ce99; valaddr_reg:x12; val_offset:1452*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1452*FLEN/8, x13, x9, x10)

inst_506:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09763a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x533203 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62ce99 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e89763a; op2val:0x40533203;
op3val:0x3f62ce99; valaddr_reg:x12; val_offset:1455*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1455*FLEN/8, x13, x9, x10)

inst_507:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09763a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x533203 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62ce99 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e89763a; op2val:0x40533203;
op3val:0x3f62ce99; valaddr_reg:x12; val_offset:1458*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1458*FLEN/8, x13, x9, x10)

inst_508:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09763a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x533203 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62ce99 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e89763a; op2val:0x40533203;
op3val:0x3f62ce99; valaddr_reg:x12; val_offset:1461*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1461*FLEN/8, x13, x9, x10)

inst_509:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09763a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x533203 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62ce99 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e89763a; op2val:0x40533203;
op3val:0x3f62ce99; valaddr_reg:x12; val_offset:1464*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1464*FLEN/8, x13, x9, x10)

inst_510:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67df29 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x177ae7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0933f3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7df29; op2val:0x3f977ae7;
op3val:0x3f0933f3; valaddr_reg:x12; val_offset:1467*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1467*FLEN/8, x13, x9, x10)

inst_511:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67df29 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x177ae7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0933f3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7df29; op2val:0x3f977ae7;
op3val:0x3f0933f3; valaddr_reg:x12; val_offset:1470*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1470*FLEN/8, x13, x9, x10)

inst_512:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67df29 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x177ae7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0933f3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7df29; op2val:0x3f977ae7;
op3val:0x3f0933f3; valaddr_reg:x12; val_offset:1473*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1473*FLEN/8, x13, x9, x10)

inst_513:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67df29 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x177ae7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0933f3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7df29; op2val:0x3f977ae7;
op3val:0x3f0933f3; valaddr_reg:x12; val_offset:1476*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1476*FLEN/8, x13, x9, x10)

inst_514:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67df29 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x177ae7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0933f3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7df29; op2val:0x3f977ae7;
op3val:0x3f0933f3; valaddr_reg:x12; val_offset:1479*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1479*FLEN/8, x13, x9, x10)

inst_515:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x01666e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6a311b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6cc0e7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f01666e; op2val:0x3fea311b;
op3val:0x3f6cc0e7; valaddr_reg:x12; val_offset:1482*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1482*FLEN/8, x13, x9, x10)

inst_516:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x01666e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6a311b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6cc0e7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f01666e; op2val:0x3fea311b;
op3val:0x3f6cc0e7; valaddr_reg:x12; val_offset:1485*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1485*FLEN/8, x13, x9, x10)

inst_517:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x01666e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6a311b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6cc0e7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f01666e; op2val:0x3fea311b;
op3val:0x3f6cc0e7; valaddr_reg:x12; val_offset:1488*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1488*FLEN/8, x13, x9, x10)

inst_518:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x01666e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6a311b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6cc0e7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f01666e; op2val:0x3fea311b;
op3val:0x3f6cc0e7; valaddr_reg:x12; val_offset:1491*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1491*FLEN/8, x13, x9, x10)

inst_519:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x01666e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6a311b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6cc0e7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f01666e; op2val:0x3fea311b;
op3val:0x3f6cc0e7; valaddr_reg:x12; val_offset:1494*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1494*FLEN/8, x13, x9, x10)

inst_520:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d103b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x049f33 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x759f96 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d103b; op2val:0x3f049f33;
op3val:0x3ef59f96; valaddr_reg:x12; val_offset:1497*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1497*FLEN/8, x13, x9, x10)

inst_521:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d103b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x049f33 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x759f96 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d103b; op2val:0x3f049f33;
op3val:0x3ef59f96; valaddr_reg:x12; val_offset:1500*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1500*FLEN/8, x13, x9, x10)

inst_522:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d103b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x049f33 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x759f96 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d103b; op2val:0x3f049f33;
op3val:0x3ef59f96; valaddr_reg:x12; val_offset:1503*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1503*FLEN/8, x13, x9, x10)

inst_523:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d103b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x049f33 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x759f96 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d103b; op2val:0x3f049f33;
op3val:0x3ef59f96; valaddr_reg:x12; val_offset:1506*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1506*FLEN/8, x13, x9, x10)

inst_524:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d103b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x049f33 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x759f96 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d103b; op2val:0x3f049f33;
op3val:0x3ef59f96; valaddr_reg:x12; val_offset:1509*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1509*FLEN/8, x13, x9, x10)

inst_525:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7832be and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7a9f0b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72fbc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7832be; op2val:0x3efa9f0b;
op3val:0x3ef2fbc0; valaddr_reg:x12; val_offset:1512*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1512*FLEN/8, x13, x9, x10)

inst_526:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7832be and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7a9f0b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72fbc0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7832be; op2val:0x3efa9f0b;
op3val:0x3ef2fbc0; valaddr_reg:x12; val_offset:1515*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1515*FLEN/8, x13, x9, x10)

inst_527:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7832be and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7a9f0b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72fbc0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7832be; op2val:0x3efa9f0b;
op3val:0x3ef2fbc0; valaddr_reg:x12; val_offset:1518*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1518*FLEN/8, x13, x9, x10)

inst_528:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7832be and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7a9f0b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72fbc0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7832be; op2val:0x3efa9f0b;
op3val:0x3ef2fbc0; valaddr_reg:x12; val_offset:1521*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1521*FLEN/8, x13, x9, x10)

inst_529:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7832be and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7a9f0b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72fbc0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7832be; op2val:0x3efa9f0b;
op3val:0x3ef2fbc0; valaddr_reg:x12; val_offset:1524*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1524*FLEN/8, x13, x9, x10)

inst_530:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5985e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5868e3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x37e21c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5985e9; op2val:0x3f5868e3;
op3val:0x3f37e21c; valaddr_reg:x12; val_offset:1527*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1527*FLEN/8, x13, x9, x10)

inst_531:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5985e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5868e3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x37e21c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5985e9; op2val:0x3f5868e3;
op3val:0x3f37e21c; valaddr_reg:x12; val_offset:1530*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1530*FLEN/8, x13, x9, x10)

inst_532:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5985e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5868e3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x37e21c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5985e9; op2val:0x3f5868e3;
op3val:0x3f37e21c; valaddr_reg:x12; val_offset:1533*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1533*FLEN/8, x13, x9, x10)

inst_533:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5985e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5868e3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x37e21c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5985e9; op2val:0x3f5868e3;
op3val:0x3f37e21c; valaddr_reg:x12; val_offset:1536*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1536*FLEN/8, x13, x9, x10)

inst_534:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5985e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5868e3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x37e21c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5985e9; op2val:0x3f5868e3;
op3val:0x3f37e21c; valaddr_reg:x12; val_offset:1539*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1539*FLEN/8, x13, x9, x10)

inst_535:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5957f3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x022149 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5cf5d9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5957f3; op2val:0x3f022149;
op3val:0x3edcf5d9; valaddr_reg:x12; val_offset:1542*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1542*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_4)

inst_536:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5957f3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x022149 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5cf5d9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5957f3; op2val:0x3f022149;
op3val:0x3edcf5d9; valaddr_reg:x12; val_offset:1545*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1545*FLEN/8, x13, x9, x10)

inst_537:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5957f3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x022149 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5cf5d9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5957f3; op2val:0x3f022149;
op3val:0x3edcf5d9; valaddr_reg:x12; val_offset:1548*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1548*FLEN/8, x13, x9, x10)

inst_538:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5957f3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x022149 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5cf5d9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5957f3; op2val:0x3f022149;
op3val:0x3edcf5d9; valaddr_reg:x12; val_offset:1551*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1551*FLEN/8, x13, x9, x10)

inst_539:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5957f3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x022149 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5cf5d9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5957f3; op2val:0x3f022149;
op3val:0x3edcf5d9; valaddr_reg:x12; val_offset:1554*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1554*FLEN/8, x13, x9, x10)

inst_540:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c97c4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x229322 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46e415 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1c97c4; op2val:0x3fa29322;
op3val:0x3f46e415; valaddr_reg:x12; val_offset:1557*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1557*FLEN/8, x13, x9, x10)

inst_541:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c97c4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x229322 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46e415 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1c97c4; op2val:0x3fa29322;
op3val:0x3f46e415; valaddr_reg:x12; val_offset:1560*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1560*FLEN/8, x13, x9, x10)

inst_542:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c97c4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x229322 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46e415 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1c97c4; op2val:0x3fa29322;
op3val:0x3f46e415; valaddr_reg:x12; val_offset:1563*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1563*FLEN/8, x13, x9, x10)

inst_543:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c97c4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x229322 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46e415 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1c97c4; op2val:0x3fa29322;
op3val:0x3f46e415; valaddr_reg:x12; val_offset:1566*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1566*FLEN/8, x13, x9, x10)

inst_544:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c97c4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x229322 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46e415 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1c97c4; op2val:0x3fa29322;
op3val:0x3f46e415; valaddr_reg:x12; val_offset:1569*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1569*FLEN/8, x13, x9, x10)

inst_545:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47457f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f5f3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f33e5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47457f; op2val:0x3f0f5f3a;
op3val:0x3edf33e5; valaddr_reg:x12; val_offset:1572*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1572*FLEN/8, x13, x9, x10)

inst_546:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47457f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f5f3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f33e5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47457f; op2val:0x3f0f5f3a;
op3val:0x3edf33e5; valaddr_reg:x12; val_offset:1575*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1575*FLEN/8, x13, x9, x10)

inst_547:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47457f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f5f3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f33e5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47457f; op2val:0x3f0f5f3a;
op3val:0x3edf33e5; valaddr_reg:x12; val_offset:1578*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1578*FLEN/8, x13, x9, x10)

inst_548:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47457f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f5f3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f33e5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47457f; op2val:0x3f0f5f3a;
op3val:0x3edf33e5; valaddr_reg:x12; val_offset:1581*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1581*FLEN/8, x13, x9, x10)

inst_549:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47457f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f5f3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f33e5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47457f; op2val:0x3f0f5f3a;
op3val:0x3edf33e5; valaddr_reg:x12; val_offset:1584*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1584*FLEN/8, x13, x9, x10)

inst_550:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3721a1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4fdf25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b3d3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db721a1; op2val:0x40cfdf25;
op3val:0x3f14b3d3; valaddr_reg:x12; val_offset:1587*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1587*FLEN/8, x13, x9, x10)

inst_551:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3721a1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4fdf25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b3d3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db721a1; op2val:0x40cfdf25;
op3val:0x3f14b3d3; valaddr_reg:x12; val_offset:1590*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1590*FLEN/8, x13, x9, x10)

inst_552:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3721a1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4fdf25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b3d3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db721a1; op2val:0x40cfdf25;
op3val:0x3f14b3d3; valaddr_reg:x12; val_offset:1593*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1593*FLEN/8, x13, x9, x10)

inst_553:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3721a1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4fdf25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b3d3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db721a1; op2val:0x40cfdf25;
op3val:0x3f14b3d3; valaddr_reg:x12; val_offset:1596*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1596*FLEN/8, x13, x9, x10)

inst_554:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3721a1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4fdf25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b3d3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db721a1; op2val:0x40cfdf25;
op3val:0x3f14b3d3; valaddr_reg:x12; val_offset:1599*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1599*FLEN/8, x13, x9, x10)

inst_555:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x563994 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x511902 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ef9ef and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f563994; op2val:0x3f511902;
op3val:0x3f2ef9ef; valaddr_reg:x12; val_offset:1602*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1602*FLEN/8, x13, x9, x10)

inst_556:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x563994 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x511902 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ef9ef and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f563994; op2val:0x3f511902;
op3val:0x3f2ef9ef; valaddr_reg:x12; val_offset:1605*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1605*FLEN/8, x13, x9, x10)

inst_557:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x563994 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x511902 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ef9ef and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f563994; op2val:0x3f511902;
op3val:0x3f2ef9ef; valaddr_reg:x12; val_offset:1608*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1608*FLEN/8, x13, x9, x10)

inst_558:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x563994 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x511902 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ef9ef and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f563994; op2val:0x3f511902;
op3val:0x3f2ef9ef; valaddr_reg:x12; val_offset:1611*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1611*FLEN/8, x13, x9, x10)

inst_559:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x563994 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x511902 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ef9ef and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f563994; op2val:0x3f511902;
op3val:0x3f2ef9ef; valaddr_reg:x12; val_offset:1614*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1614*FLEN/8, x13, x9, x10)

inst_560:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x42797f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x101bfb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5af333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f42797f; op2val:0x3f101bfb;
op3val:0x3edaf333; valaddr_reg:x12; val_offset:1617*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1617*FLEN/8, x13, x9, x10)

inst_561:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x42797f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x101bfb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5af333 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f42797f; op2val:0x3f101bfb;
op3val:0x3edaf333; valaddr_reg:x12; val_offset:1620*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1620*FLEN/8, x13, x9, x10)

inst_562:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x42797f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x101bfb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5af333 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f42797f; op2val:0x3f101bfb;
op3val:0x3edaf333; valaddr_reg:x12; val_offset:1623*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1623*FLEN/8, x13, x9, x10)

inst_563:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x42797f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x101bfb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5af333 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f42797f; op2val:0x3f101bfb;
op3val:0x3edaf333; valaddr_reg:x12; val_offset:1626*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1626*FLEN/8, x13, x9, x10)

inst_564:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x42797f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x101bfb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5af333 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f42797f; op2val:0x3f101bfb;
op3val:0x3edaf333; valaddr_reg:x12; val_offset:1629*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1629*FLEN/8, x13, x9, x10)

inst_565:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ab532 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x012cc7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5cb720 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ab532; op2val:0x40012cc7;
op3val:0x3edcb720; valaddr_reg:x12; val_offset:1632*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1632*FLEN/8, x13, x9, x10)

inst_566:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ab532 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x012cc7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5cb720 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ab532; op2val:0x40012cc7;
op3val:0x3edcb720; valaddr_reg:x12; val_offset:1635*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1635*FLEN/8, x13, x9, x10)

inst_567:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ab532 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x012cc7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5cb720 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ab532; op2val:0x40012cc7;
op3val:0x3edcb720; valaddr_reg:x12; val_offset:1638*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1638*FLEN/8, x13, x9, x10)

inst_568:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ab532 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x012cc7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5cb720 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ab532; op2val:0x40012cc7;
op3val:0x3edcb720; valaddr_reg:x12; val_offset:1641*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1641*FLEN/8, x13, x9, x10)

inst_569:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ab532 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x012cc7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5cb720 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ab532; op2val:0x40012cc7;
op3val:0x3edcb720; valaddr_reg:x12; val_offset:1644*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1644*FLEN/8, x13, x9, x10)

inst_570:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4fd5a6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x54c363 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2cbb8e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4fd5a6; op2val:0x3f54c363;
op3val:0x3f2cbb8e; valaddr_reg:x12; val_offset:1647*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1647*FLEN/8, x13, x9, x10)

inst_571:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4fd5a6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x54c363 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2cbb8e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4fd5a6; op2val:0x3f54c363;
op3val:0x3f2cbb8e; valaddr_reg:x12; val_offset:1650*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1650*FLEN/8, x13, x9, x10)

inst_572:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4fd5a6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x54c363 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2cbb8e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4fd5a6; op2val:0x3f54c363;
op3val:0x3f2cbb8e; valaddr_reg:x12; val_offset:1653*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1653*FLEN/8, x13, x9, x10)

inst_573:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4fd5a6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x54c363 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2cbb8e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4fd5a6; op2val:0x3f54c363;
op3val:0x3f2cbb8e; valaddr_reg:x12; val_offset:1656*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1656*FLEN/8, x13, x9, x10)

inst_574:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4fd5a6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x54c363 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2cbb8e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4fd5a6; op2val:0x3f54c363;
op3val:0x3f2cbb8e; valaddr_reg:x12; val_offset:1659*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1659*FLEN/8, x13, x9, x10)

inst_575:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1e7179 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x673d4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f1e54 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1e7179; op2val:0x3f673d4b;
op3val:0x3f0f1e54; valaddr_reg:x12; val_offset:1662*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1662*FLEN/8, x13, x9, x10)

inst_576:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1e7179 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x673d4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f1e54 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1e7179; op2val:0x3f673d4b;
op3val:0x3f0f1e54; valaddr_reg:x12; val_offset:1665*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1665*FLEN/8, x13, x9, x10)

inst_577:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1e7179 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x673d4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f1e54 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1e7179; op2val:0x3f673d4b;
op3val:0x3f0f1e54; valaddr_reg:x12; val_offset:1668*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1668*FLEN/8, x13, x9, x10)

inst_578:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1e7179 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x673d4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f1e54 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1e7179; op2val:0x3f673d4b;
op3val:0x3f0f1e54; valaddr_reg:x12; val_offset:1671*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1671*FLEN/8, x13, x9, x10)

inst_579:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1e7179 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x673d4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f1e54 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1e7179; op2val:0x3f673d4b;
op3val:0x3f0f1e54; valaddr_reg:x12; val_offset:1674*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1674*FLEN/8, x13, x9, x10)

inst_580:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a3cb4 and fs2 == 0 and fe2 == 0x77 and fm2 == 0x06da44 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x227e8f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a3cb4; op2val:0x3b86da44;
op3val:0x3b227e8f; valaddr_reg:x12; val_offset:1677*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1677*FLEN/8, x13, x9, x10)

inst_581:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a3cb4 and fs2 == 0 and fe2 == 0x77 and fm2 == 0x06da44 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x227e8f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a3cb4; op2val:0x3b86da44;
op3val:0x3b227e8f; valaddr_reg:x12; val_offset:1680*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1680*FLEN/8, x13, x9, x10)

inst_582:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a3cb4 and fs2 == 0 and fe2 == 0x77 and fm2 == 0x06da44 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x227e8f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a3cb4; op2val:0x3b86da44;
op3val:0x3b227e8f; valaddr_reg:x12; val_offset:1683*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1683*FLEN/8, x13, x9, x10)

inst_583:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a3cb4 and fs2 == 0 and fe2 == 0x77 and fm2 == 0x06da44 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x227e8f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a3cb4; op2val:0x3b86da44;
op3val:0x3b227e8f; valaddr_reg:x12; val_offset:1686*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1686*FLEN/8, x13, x9, x10)

inst_584:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a3cb4 and fs2 == 0 and fe2 == 0x77 and fm2 == 0x06da44 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x227e8f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a3cb4; op2val:0x3b86da44;
op3val:0x3b227e8f; valaddr_reg:x12; val_offset:1689*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1689*FLEN/8, x13, x9, x10)

inst_585:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x65db9d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x40b1f3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d047d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee5db9d; op2val:0x3f40b1f3;
op3val:0x3ead047d; valaddr_reg:x12; val_offset:1692*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1692*FLEN/8, x13, x9, x10)

inst_586:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x65db9d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x40b1f3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d047d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee5db9d; op2val:0x3f40b1f3;
op3val:0x3ead047d; valaddr_reg:x12; val_offset:1695*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1695*FLEN/8, x13, x9, x10)

inst_587:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x65db9d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x40b1f3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d047d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee5db9d; op2val:0x3f40b1f3;
op3val:0x3ead047d; valaddr_reg:x12; val_offset:1698*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1698*FLEN/8, x13, x9, x10)

inst_588:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x65db9d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x40b1f3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d047d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee5db9d; op2val:0x3f40b1f3;
op3val:0x3ead047d; valaddr_reg:x12; val_offset:1701*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1701*FLEN/8, x13, x9, x10)

inst_589:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x65db9d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x40b1f3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d047d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee5db9d; op2val:0x3f40b1f3;
op3val:0x3ead047d; valaddr_reg:x12; val_offset:1704*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1704*FLEN/8, x13, x9, x10)

inst_590:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1137a2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x202537 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x35afc3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9137a2; op2val:0x3fa02537;
op3val:0x3eb5afc3; valaddr_reg:x12; val_offset:1707*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1707*FLEN/8, x13, x9, x10)

inst_591:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1137a2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x202537 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x35afc3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9137a2; op2val:0x3fa02537;
op3val:0x3eb5afc3; valaddr_reg:x12; val_offset:1710*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1710*FLEN/8, x13, x9, x10)

inst_592:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1137a2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x202537 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x35afc3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9137a2; op2val:0x3fa02537;
op3val:0x3eb5afc3; valaddr_reg:x12; val_offset:1713*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1713*FLEN/8, x13, x9, x10)

inst_593:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1137a2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x202537 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x35afc3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9137a2; op2val:0x3fa02537;
op3val:0x3eb5afc3; valaddr_reg:x12; val_offset:1716*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1716*FLEN/8, x13, x9, x10)

inst_594:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1137a2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x202537 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x35afc3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9137a2; op2val:0x3fa02537;
op3val:0x3eb5afc3; valaddr_reg:x12; val_offset:1719*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1719*FLEN/8, x13, x9, x10)

inst_595:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x476a7d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4e4fe4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20b5ec and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e476a7d; op2val:0x404e4fe4;
op3val:0x3f20b5ec; valaddr_reg:x12; val_offset:1722*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1722*FLEN/8, x13, x9, x10)

inst_596:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x476a7d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4e4fe4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20b5ec and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e476a7d; op2val:0x404e4fe4;
op3val:0x3f20b5ec; valaddr_reg:x12; val_offset:1725*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1725*FLEN/8, x13, x9, x10)

inst_597:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x476a7d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4e4fe4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20b5ec and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e476a7d; op2val:0x404e4fe4;
op3val:0x3f20b5ec; valaddr_reg:x12; val_offset:1728*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1728*FLEN/8, x13, x9, x10)

inst_598:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x476a7d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4e4fe4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20b5ec and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e476a7d; op2val:0x404e4fe4;
op3val:0x3f20b5ec; valaddr_reg:x12; val_offset:1731*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1731*FLEN/8, x13, x9, x10)

inst_599:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x476a7d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4e4fe4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20b5ec and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e476a7d; op2val:0x404e4fe4;
op3val:0x3f20b5ec; valaddr_reg:x12; val_offset:1734*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1734*FLEN/8, x13, x9, x10)

inst_600:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ab8bb and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2865b3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x609a1b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eaab8bb; op2val:0x3da865b3;
op3val:0x3ce09a1b; valaddr_reg:x12; val_offset:1737*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1737*FLEN/8, x13, x9, x10)

inst_601:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ab8bb and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2865b3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x609a1b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eaab8bb; op2val:0x3da865b3;
op3val:0x3ce09a1b; valaddr_reg:x12; val_offset:1740*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1740*FLEN/8, x13, x9, x10)

inst_602:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ab8bb and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2865b3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x609a1b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eaab8bb; op2val:0x3da865b3;
op3val:0x3ce09a1b; valaddr_reg:x12; val_offset:1743*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1743*FLEN/8, x13, x9, x10)

inst_603:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ab8bb and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2865b3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x609a1b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eaab8bb; op2val:0x3da865b3;
op3val:0x3ce09a1b; valaddr_reg:x12; val_offset:1746*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1746*FLEN/8, x13, x9, x10)

inst_604:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ab8bb and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2865b3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x609a1b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eaab8bb; op2val:0x3da865b3;
op3val:0x3ce09a1b; valaddr_reg:x12; val_offset:1749*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1749*FLEN/8, x13, x9, x10)

inst_605:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x55fbab and fs2 == 0 and fe2 == 0x7d and fm2 == 0x656a77 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3fc31e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f55fbab; op2val:0x3ee56a77;
op3val:0x3ebfc31e; valaddr_reg:x12; val_offset:1752*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1752*FLEN/8, x13, x9, x10)

inst_606:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x55fbab and fs2 == 0 and fe2 == 0x7d and fm2 == 0x656a77 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3fc31e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f55fbab; op2val:0x3ee56a77;
op3val:0x3ebfc31e; valaddr_reg:x12; val_offset:1755*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1755*FLEN/8, x13, x9, x10)

inst_607:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x55fbab and fs2 == 0 and fe2 == 0x7d and fm2 == 0x656a77 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3fc31e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f55fbab; op2val:0x3ee56a77;
op3val:0x3ebfc31e; valaddr_reg:x12; val_offset:1758*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1758*FLEN/8, x13, x9, x10)

inst_608:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x55fbab and fs2 == 0 and fe2 == 0x7d and fm2 == 0x656a77 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3fc31e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f55fbab; op2val:0x3ee56a77;
op3val:0x3ebfc31e; valaddr_reg:x12; val_offset:1761*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1761*FLEN/8, x13, x9, x10)

inst_609:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x55fbab and fs2 == 0 and fe2 == 0x7d and fm2 == 0x656a77 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3fc31e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f55fbab; op2val:0x3ee56a77;
op3val:0x3ebfc31e; valaddr_reg:x12; val_offset:1764*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1764*FLEN/8, x13, x9, x10)

inst_610:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d8461 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x435310 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x705de5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d8461; op2val:0x3fc35310;
op3val:0x3f705de5; valaddr_reg:x12; val_offset:1767*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1767*FLEN/8, x13, x9, x10)

inst_611:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d8461 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x435310 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x705de5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d8461; op2val:0x3fc35310;
op3val:0x3f705de5; valaddr_reg:x12; val_offset:1770*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1770*FLEN/8, x13, x9, x10)

inst_612:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d8461 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x435310 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x705de5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d8461; op2val:0x3fc35310;
op3val:0x3f705de5; valaddr_reg:x12; val_offset:1773*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1773*FLEN/8, x13, x9, x10)

inst_613:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d8461 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x435310 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x705de5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d8461; op2val:0x3fc35310;
op3val:0x3f705de5; valaddr_reg:x12; val_offset:1776*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1776*FLEN/8, x13, x9, x10)

inst_614:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d8461 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x435310 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x705de5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d8461; op2val:0x3fc35310;
op3val:0x3f705de5; valaddr_reg:x12; val_offset:1779*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1779*FLEN/8, x13, x9, x10)

inst_615:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75cafc and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0088d2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x76d1b8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f75cafc; op2val:0x3e8088d2;
op3val:0x3e76d1b8; valaddr_reg:x12; val_offset:1782*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1782*FLEN/8, x13, x9, x10)

inst_616:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75cafc and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0088d2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x76d1b8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f75cafc; op2val:0x3e8088d2;
op3val:0x3e76d1b8; valaddr_reg:x12; val_offset:1785*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1785*FLEN/8, x13, x9, x10)

inst_617:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75cafc and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0088d2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x76d1b8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f75cafc; op2val:0x3e8088d2;
op3val:0x3e76d1b8; valaddr_reg:x12; val_offset:1788*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1788*FLEN/8, x13, x9, x10)

inst_618:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75cafc and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0088d2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x76d1b8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f75cafc; op2val:0x3e8088d2;
op3val:0x3e76d1b8; valaddr_reg:x12; val_offset:1791*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1791*FLEN/8, x13, x9, x10)

inst_619:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75cafc and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0088d2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x76d1b8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f75cafc; op2val:0x3e8088d2;
op3val:0x3e76d1b8; valaddr_reg:x12; val_offset:1794*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1794*FLEN/8, x13, x9, x10)

inst_620:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x62aa14 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2717b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x13f1ed and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f62aa14; op2val:0x3ea717b0;
op3val:0x3e93f1ed; valaddr_reg:x12; val_offset:1797*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1797*FLEN/8, x13, x9, x10)

inst_621:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x62aa14 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2717b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x13f1ed and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f62aa14; op2val:0x3ea717b0;
op3val:0x3e93f1ed; valaddr_reg:x12; val_offset:1800*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1800*FLEN/8, x13, x9, x10)

inst_622:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x62aa14 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2717b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x13f1ed and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f62aa14; op2val:0x3ea717b0;
op3val:0x3e93f1ed; valaddr_reg:x12; val_offset:1803*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1803*FLEN/8, x13, x9, x10)

inst_623:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x62aa14 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2717b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x13f1ed and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f62aa14; op2val:0x3ea717b0;
op3val:0x3e93f1ed; valaddr_reg:x12; val_offset:1806*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1806*FLEN/8, x13, x9, x10)

inst_624:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x62aa14 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2717b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x13f1ed and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f62aa14; op2val:0x3ea717b0;
op3val:0x3e93f1ed; valaddr_reg:x12; val_offset:1809*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1809*FLEN/8, x13, x9, x10)

inst_625:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x665cd0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33e853 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21e3f5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f665cd0; op2val:0x3f33e853;
op3val:0x3f21e3f5; valaddr_reg:x12; val_offset:1812*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1812*FLEN/8, x13, x9, x10)

inst_626:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x665cd0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33e853 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21e3f5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f665cd0; op2val:0x3f33e853;
op3val:0x3f21e3f5; valaddr_reg:x12; val_offset:1815*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1815*FLEN/8, x13, x9, x10)

inst_627:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x665cd0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33e853 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21e3f5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f665cd0; op2val:0x3f33e853;
op3val:0x3f21e3f5; valaddr_reg:x12; val_offset:1818*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1818*FLEN/8, x13, x9, x10)

inst_628:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x665cd0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33e853 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21e3f5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f665cd0; op2val:0x3f33e853;
op3val:0x3f21e3f5; valaddr_reg:x12; val_offset:1821*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1821*FLEN/8, x13, x9, x10)

inst_629:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x665cd0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33e853 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21e3f5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f665cd0; op2val:0x3f33e853;
op3val:0x3f21e3f5; valaddr_reg:x12; val_offset:1824*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1824*FLEN/8, x13, x9, x10)

inst_630:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c2fe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x71e4b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6a1be5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77c2fe; op2val:0x3ef1e4b0;
op3val:0x3eea1be5; valaddr_reg:x12; val_offset:1827*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1827*FLEN/8, x13, x9, x10)

inst_631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c2fe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x71e4b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6a1be5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77c2fe; op2val:0x3ef1e4b0;
op3val:0x3eea1be5; valaddr_reg:x12; val_offset:1830*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1830*FLEN/8, x13, x9, x10)

inst_632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c2fe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x71e4b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6a1be5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77c2fe; op2val:0x3ef1e4b0;
op3val:0x3eea1be5; valaddr_reg:x12; val_offset:1833*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1833*FLEN/8, x13, x9, x10)

inst_633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c2fe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x71e4b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6a1be5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77c2fe; op2val:0x3ef1e4b0;
op3val:0x3eea1be5; valaddr_reg:x12; val_offset:1836*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1836*FLEN/8, x13, x9, x10)

inst_634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c2fe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x71e4b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6a1be5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77c2fe; op2val:0x3ef1e4b0;
op3val:0x3eea1be5; valaddr_reg:x12; val_offset:1839*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1839*FLEN/8, x13, x9, x10)

inst_635:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ab7ea and fs2 == 0 and fe2 == 0x80 and fm2 == 0x680b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x464080 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ab7ea; op2val:0x40680b80;
op3val:0x3f464080; valaddr_reg:x12; val_offset:1842*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1842*FLEN/8, x13, x9, x10)

inst_636:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ab7ea and fs2 == 0 and fe2 == 0x80 and fm2 == 0x680b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x464080 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ab7ea; op2val:0x40680b80;
op3val:0x3f464080; valaddr_reg:x12; val_offset:1845*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1845*FLEN/8, x13, x9, x10)

inst_637:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ab7ea and fs2 == 0 and fe2 == 0x80 and fm2 == 0x680b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x464080 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ab7ea; op2val:0x40680b80;
op3val:0x3f464080; valaddr_reg:x12; val_offset:1848*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1848*FLEN/8, x13, x9, x10)

inst_638:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ab7ea and fs2 == 0 and fe2 == 0x80 and fm2 == 0x680b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x464080 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ab7ea; op2val:0x40680b80;
op3val:0x3f464080; valaddr_reg:x12; val_offset:1851*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1851*FLEN/8, x13, x9, x10)

inst_639:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ab7ea and fs2 == 0 and fe2 == 0x80 and fm2 == 0x680b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x464080 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ab7ea; op2val:0x40680b80;
op3val:0x3f464080; valaddr_reg:x12; val_offset:1854*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1854*FLEN/8, x13, x9, x10)

inst_640:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e9022 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x37161f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f2c45 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ede9022; op2val:0x3e37161f;
op3val:0x3d9f2c45; valaddr_reg:x12; val_offset:1857*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1857*FLEN/8, x13, x9, x10)

inst_641:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e9022 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x37161f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f2c45 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ede9022; op2val:0x3e37161f;
op3val:0x3d9f2c45; valaddr_reg:x12; val_offset:1860*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1860*FLEN/8, x13, x9, x10)

inst_642:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e9022 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x37161f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f2c45 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ede9022; op2val:0x3e37161f;
op3val:0x3d9f2c45; valaddr_reg:x12; val_offset:1863*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1863*FLEN/8, x13, x9, x10)

inst_643:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e9022 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x37161f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f2c45 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ede9022; op2val:0x3e37161f;
op3val:0x3d9f2c45; valaddr_reg:x12; val_offset:1866*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1866*FLEN/8, x13, x9, x10)

inst_644:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e9022 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x37161f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f2c45 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ede9022; op2val:0x3e37161f;
op3val:0x3d9f2c45; valaddr_reg:x12; val_offset:1869*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1869*FLEN/8, x13, x9, x10)

inst_645:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34dd4e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3faa2b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x076957 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f34dd4e; op2val:0x3f3faa2b;
op3val:0x3f076957; valaddr_reg:x12; val_offset:1872*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1872*FLEN/8, x13, x9, x10)

inst_646:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34dd4e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3faa2b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x076957 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f34dd4e; op2val:0x3f3faa2b;
op3val:0x3f076957; valaddr_reg:x12; val_offset:1875*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1875*FLEN/8, x13, x9, x10)

inst_647:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34dd4e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3faa2b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x076957 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f34dd4e; op2val:0x3f3faa2b;
op3val:0x3f076957; valaddr_reg:x12; val_offset:1878*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1878*FLEN/8, x13, x9, x10)

inst_648:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34dd4e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3faa2b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x076957 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f34dd4e; op2val:0x3f3faa2b;
op3val:0x3f076957; valaddr_reg:x12; val_offset:1881*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1881*FLEN/8, x13, x9, x10)

inst_649:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34dd4e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3faa2b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x076957 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f34dd4e; op2val:0x3f3faa2b;
op3val:0x3f076957; valaddr_reg:x12; val_offset:1884*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1884*FLEN/8, x13, x9, x10)

inst_650:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3c6e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7c02fe and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0b0923 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8d3c6e; op2val:0x3efc02fe;
op3val:0x3e0b0923; valaddr_reg:x12; val_offset:1887*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1887*FLEN/8, x13, x9, x10)

inst_651:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3c6e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7c02fe and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0b0923 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8d3c6e; op2val:0x3efc02fe;
op3val:0x3e0b0923; valaddr_reg:x12; val_offset:1890*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1890*FLEN/8, x13, x9, x10)

inst_652:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3c6e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7c02fe and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0b0923 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8d3c6e; op2val:0x3efc02fe;
op3val:0x3e0b0923; valaddr_reg:x12; val_offset:1893*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1893*FLEN/8, x13, x9, x10)

inst_653:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3c6e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7c02fe and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0b0923 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8d3c6e; op2val:0x3efc02fe;
op3val:0x3e0b0923; valaddr_reg:x12; val_offset:1896*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1896*FLEN/8, x13, x9, x10)

inst_654:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3c6e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7c02fe and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0b0923 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8d3c6e; op2val:0x3efc02fe;
op3val:0x3e0b0923; valaddr_reg:x12; val_offset:1899*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1899*FLEN/8, x13, x9, x10)

inst_655:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54d5d7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x508c56 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d626b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f54d5d7; op2val:0x3ed08c56;
op3val:0x3ead626b; valaddr_reg:x12; val_offset:1902*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1902*FLEN/8, x13, x9, x10)

inst_656:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54d5d7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x508c56 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d626b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f54d5d7; op2val:0x3ed08c56;
op3val:0x3ead626b; valaddr_reg:x12; val_offset:1905*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1905*FLEN/8, x13, x9, x10)

inst_657:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54d5d7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x508c56 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d626b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f54d5d7; op2val:0x3ed08c56;
op3val:0x3ead626b; valaddr_reg:x12; val_offset:1908*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1908*FLEN/8, x13, x9, x10)

inst_658:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54d5d7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x508c56 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d626b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f54d5d7; op2val:0x3ed08c56;
op3val:0x3ead626b; valaddr_reg:x12; val_offset:1911*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1911*FLEN/8, x13, x9, x10)

inst_659:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54d5d7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x508c56 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d626b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f54d5d7; op2val:0x3ed08c56;
op3val:0x3ead626b; valaddr_reg:x12; val_offset:1914*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1914*FLEN/8, x13, x9, x10)

inst_660:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6143da and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0123c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x63454f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6143da; op2val:0x3f8123c1;
op3val:0x3f63454f; valaddr_reg:x12; val_offset:1917*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1917*FLEN/8, x13, x9, x10)

inst_661:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6143da and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0123c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x63454f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6143da; op2val:0x3f8123c1;
op3val:0x3f63454f; valaddr_reg:x12; val_offset:1920*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1920*FLEN/8, x13, x9, x10)

inst_662:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6143da and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0123c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x63454f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6143da; op2val:0x3f8123c1;
op3val:0x3f63454f; valaddr_reg:x12; val_offset:1923*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1923*FLEN/8, x13, x9, x10)

inst_663:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6143da and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0123c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x63454f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6143da; op2val:0x3f8123c1;
op3val:0x3f63454f; valaddr_reg:x12; val_offset:1926*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1926*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_5)

inst_664:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6143da and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0123c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x63454f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6143da; op2val:0x3f8123c1;
op3val:0x3f63454f; valaddr_reg:x12; val_offset:1929*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1929*FLEN/8, x13, x9, x10)

inst_665:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x0939f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x62d870 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x73325c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c8939f3; op2val:0x4262d870;
op3val:0x3f73325c; valaddr_reg:x12; val_offset:1932*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1932*FLEN/8, x13, x9, x10)

inst_666:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x0939f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x62d870 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x73325c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c8939f3; op2val:0x4262d870;
op3val:0x3f73325c; valaddr_reg:x12; val_offset:1935*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1935*FLEN/8, x13, x9, x10)

inst_667:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x0939f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x62d870 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x73325c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c8939f3; op2val:0x4262d870;
op3val:0x3f73325c; valaddr_reg:x12; val_offset:1938*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1938*FLEN/8, x13, x9, x10)

inst_668:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x0939f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x62d870 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x73325c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c8939f3; op2val:0x4262d870;
op3val:0x3f73325c; valaddr_reg:x12; val_offset:1941*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1941*FLEN/8, x13, x9, x10)

inst_669:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x0939f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x62d870 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x73325c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c8939f3; op2val:0x4262d870;
op3val:0x3f73325c; valaddr_reg:x12; val_offset:1944*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1944*FLEN/8, x13, x9, x10)

inst_670:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x243f76 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4769b5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7fe24f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da43f76; op2val:0x404769b5;
op3val:0x3e7fe24f; valaddr_reg:x12; val_offset:1947*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1947*FLEN/8, x13, x9, x10)

inst_671:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x243f76 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4769b5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7fe24f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da43f76; op2val:0x404769b5;
op3val:0x3e7fe24f; valaddr_reg:x12; val_offset:1950*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1950*FLEN/8, x13, x9, x10)

inst_672:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x243f76 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4769b5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7fe24f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da43f76; op2val:0x404769b5;
op3val:0x3e7fe24f; valaddr_reg:x12; val_offset:1953*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1953*FLEN/8, x13, x9, x10)

inst_673:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x243f76 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4769b5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7fe24f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da43f76; op2val:0x404769b5;
op3val:0x3e7fe24f; valaddr_reg:x12; val_offset:1956*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1956*FLEN/8, x13, x9, x10)

inst_674:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x243f76 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4769b5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7fe24f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da43f76; op2val:0x404769b5;
op3val:0x3e7fe24f; valaddr_reg:x12; val_offset:1959*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1959*FLEN/8, x13, x9, x10)

inst_675:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25eb9a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x55bbed and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a86d4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea5eb9a; op2val:0x3f55bbed;
op3val:0x3e8a86d4; valaddr_reg:x12; val_offset:1962*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1962*FLEN/8, x13, x9, x10)

inst_676:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25eb9a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x55bbed and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a86d4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea5eb9a; op2val:0x3f55bbed;
op3val:0x3e8a86d4; valaddr_reg:x12; val_offset:1965*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1965*FLEN/8, x13, x9, x10)

inst_677:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25eb9a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x55bbed and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a86d4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea5eb9a; op2val:0x3f55bbed;
op3val:0x3e8a86d4; valaddr_reg:x12; val_offset:1968*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1968*FLEN/8, x13, x9, x10)

inst_678:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25eb9a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x55bbed and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a86d4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea5eb9a; op2val:0x3f55bbed;
op3val:0x3e8a86d4; valaddr_reg:x12; val_offset:1971*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1971*FLEN/8, x13, x9, x10)

inst_679:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25eb9a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x55bbed and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a86d4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea5eb9a; op2val:0x3f55bbed;
op3val:0x3e8a86d4; valaddr_reg:x12; val_offset:1974*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1974*FLEN/8, x13, x9, x10)

inst_680:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x32b4c2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x02bb8d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36856f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb2b4c2; op2val:0x4002bb8d;
op3val:0x3f36856f; valaddr_reg:x12; val_offset:1977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1977*FLEN/8, x13, x9, x10)

inst_681:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x32b4c2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x02bb8d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36856f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb2b4c2; op2val:0x4002bb8d;
op3val:0x3f36856f; valaddr_reg:x12; val_offset:1980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1980*FLEN/8, x13, x9, x10)

inst_682:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x32b4c2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x02bb8d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36856f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb2b4c2; op2val:0x4002bb8d;
op3val:0x3f36856f; valaddr_reg:x12; val_offset:1983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1983*FLEN/8, x13, x9, x10)

inst_683:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x32b4c2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x02bb8d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36856f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb2b4c2; op2val:0x4002bb8d;
op3val:0x3f36856f; valaddr_reg:x12; val_offset:1986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1986*FLEN/8, x13, x9, x10)

inst_684:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x32b4c2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x02bb8d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36856f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb2b4c2; op2val:0x4002bb8d;
op3val:0x3f36856f; valaddr_reg:x12; val_offset:1989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1989*FLEN/8, x13, x9, x10)

inst_685:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e7f24 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3778f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c4071 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e7f24; op2val:0x3fb778f7;
op3val:0x3f4c4071; valaddr_reg:x12; val_offset:1992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1992*FLEN/8, x13, x9, x10)

inst_686:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e7f24 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3778f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c4071 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e7f24; op2val:0x3fb778f7;
op3val:0x3f4c4071; valaddr_reg:x12; val_offset:1995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1995*FLEN/8, x13, x9, x10)

inst_687:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e7f24 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3778f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c4071 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e7f24; op2val:0x3fb778f7;
op3val:0x3f4c4071; valaddr_reg:x12; val_offset:1998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1998*FLEN/8, x13, x9, x10)

inst_688:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e7f24 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3778f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c4071 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e7f24; op2val:0x3fb778f7;
op3val:0x3f4c4071; valaddr_reg:x12; val_offset:2001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2001*FLEN/8, x13, x9, x10)

inst_689:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e7f24 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3778f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c4071 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e7f24; op2val:0x3fb778f7;
op3val:0x3f4c4071; valaddr_reg:x12; val_offset:2004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2004*FLEN/8, x13, x9, x10)

inst_690:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x101b8c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x492e4a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x627f5f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e101b8c; op2val:0x3fc92e4a;
op3val:0x3e627f5f; valaddr_reg:x12; val_offset:2007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2007*FLEN/8, x13, x9, x10)

inst_691:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x101b8c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x492e4a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x627f5f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e101b8c; op2val:0x3fc92e4a;
op3val:0x3e627f5f; valaddr_reg:x12; val_offset:2010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2010*FLEN/8, x13, x9, x10)

inst_692:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x101b8c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x492e4a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x627f5f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e101b8c; op2val:0x3fc92e4a;
op3val:0x3e627f5f; valaddr_reg:x12; val_offset:2013*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2013*FLEN/8, x13, x9, x10)

inst_693:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x101b8c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x492e4a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x627f5f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e101b8c; op2val:0x3fc92e4a;
op3val:0x3e627f5f; valaddr_reg:x12; val_offset:2016*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2016*FLEN/8, x13, x9, x10)

inst_694:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x101b8c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x492e4a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x627f5f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e101b8c; op2val:0x3fc92e4a;
op3val:0x3e627f5f; valaddr_reg:x12; val_offset:2019*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2019*FLEN/8, x13, x9, x10)

inst_695:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x598e4a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6cc90b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x493a07 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e598e4a; op2val:0x406cc90b;
op3val:0x3f493a07; valaddr_reg:x12; val_offset:2022*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2022*FLEN/8, x13, x9, x10)

inst_696:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x598e4a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6cc90b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x493a07 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e598e4a; op2val:0x406cc90b;
op3val:0x3f493a07; valaddr_reg:x12; val_offset:2025*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2025*FLEN/8, x13, x9, x10)

inst_697:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x598e4a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6cc90b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x493a07 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e598e4a; op2val:0x406cc90b;
op3val:0x3f493a07; valaddr_reg:x12; val_offset:2028*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2028*FLEN/8, x13, x9, x10)

inst_698:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x598e4a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6cc90b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x493a07 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e598e4a; op2val:0x406cc90b;
op3val:0x3f493a07; valaddr_reg:x12; val_offset:2031*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2031*FLEN/8, x13, x9, x10)

inst_699:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x598e4a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6cc90b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x493a07 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e598e4a; op2val:0x406cc90b;
op3val:0x3f493a07; valaddr_reg:x12; val_offset:2034*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2034*FLEN/8, x13, x9, x10)

inst_700:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x50c9b2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x69dd45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebc09 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed0c9b2; op2val:0x3fe9dd45;
op3val:0x3f3ebc09; valaddr_reg:x12; val_offset:2037*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2037*FLEN/8, x13, x9, x10)

inst_701:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x50c9b2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x69dd45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebc09 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed0c9b2; op2val:0x3fe9dd45;
op3val:0x3f3ebc09; valaddr_reg:x12; val_offset:2040*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2040*FLEN/8, x13, x9, x10)

inst_702:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x50c9b2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x69dd45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebc09 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed0c9b2; op2val:0x3fe9dd45;
op3val:0x3f3ebc09; valaddr_reg:x12; val_offset:2043*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2043*FLEN/8, x13, x9, x10)

inst_703:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x50c9b2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x69dd45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebc09 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed0c9b2; op2val:0x3fe9dd45;
op3val:0x3f3ebc09; valaddr_reg:x12; val_offset:2046*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2046*FLEN/8, x13, x9, x10)

inst_704:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x50c9b2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x69dd45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebc09 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed0c9b2; op2val:0x3fe9dd45;
op3val:0x3f3ebc09; valaddr_reg:x12; val_offset:2049*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2049*FLEN/8, x13, x9, x10)

inst_705:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x567df5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1bf696 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x02acde and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e567df5; op2val:0x3f9bf696;
op3val:0x3e82acde; valaddr_reg:x12; val_offset:2052*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2052*FLEN/8, x13, x9, x10)

inst_706:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x567df5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1bf696 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x02acde and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e567df5; op2val:0x3f9bf696;
op3val:0x3e82acde; valaddr_reg:x12; val_offset:2055*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2055*FLEN/8, x13, x9, x10)

inst_707:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x567df5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1bf696 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x02acde and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e567df5; op2val:0x3f9bf696;
op3val:0x3e82acde; valaddr_reg:x12; val_offset:2058*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2058*FLEN/8, x13, x9, x10)

inst_708:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x567df5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1bf696 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x02acde and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e567df5; op2val:0x3f9bf696;
op3val:0x3e82acde; valaddr_reg:x12; val_offset:2061*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2061*FLEN/8, x13, x9, x10)

inst_709:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x567df5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1bf696 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x02acde and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e567df5; op2val:0x3f9bf696;
op3val:0x3e82acde; valaddr_reg:x12; val_offset:2064*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2064*FLEN/8, x13, x9, x10)

inst_710:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x2021b0 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x6ed9c5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x15678a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ba021b0; op2val:0x426ed9c5;
op3val:0x3e95678a; valaddr_reg:x12; val_offset:2067*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2067*FLEN/8, x13, x9, x10)

inst_711:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x2021b0 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x6ed9c5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x15678a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ba021b0; op2val:0x426ed9c5;
op3val:0x3e95678a; valaddr_reg:x12; val_offset:2070*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2070*FLEN/8, x13, x9, x10)

inst_712:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x2021b0 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x6ed9c5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x15678a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ba021b0; op2val:0x426ed9c5;
op3val:0x3e95678a; valaddr_reg:x12; val_offset:2073*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2073*FLEN/8, x13, x9, x10)

inst_713:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x2021b0 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x6ed9c5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x15678a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ba021b0; op2val:0x426ed9c5;
op3val:0x3e95678a; valaddr_reg:x12; val_offset:2076*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2076*FLEN/8, x13, x9, x10)

inst_714:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x2021b0 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x6ed9c5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x15678a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ba021b0; op2val:0x426ed9c5;
op3val:0x3e95678a; valaddr_reg:x12; val_offset:2079*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2079*FLEN/8, x13, x9, x10)

inst_715:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21d95d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3494de and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6455e8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea1d95d; op2val:0x3f3494de;
op3val:0x3e6455e8; valaddr_reg:x12; val_offset:2082*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2082*FLEN/8, x13, x9, x10)

inst_716:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21d95d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3494de and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6455e8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea1d95d; op2val:0x3f3494de;
op3val:0x3e6455e8; valaddr_reg:x12; val_offset:2085*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2085*FLEN/8, x13, x9, x10)

inst_717:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21d95d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3494de and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6455e8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea1d95d; op2val:0x3f3494de;
op3val:0x3e6455e8; valaddr_reg:x12; val_offset:2088*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2088*FLEN/8, x13, x9, x10)

inst_718:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21d95d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3494de and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6455e8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea1d95d; op2val:0x3f3494de;
op3val:0x3e6455e8; valaddr_reg:x12; val_offset:2091*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2091*FLEN/8, x13, x9, x10)

inst_719:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21d95d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3494de and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6455e8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea1d95d; op2val:0x3f3494de;
op3val:0x3e6455e8; valaddr_reg:x12; val_offset:2094*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2094*FLEN/8, x13, x9, x10)

inst_720:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6804a9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x649651 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4f2c63 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6804a9; op2val:0x3ee49651;
op3val:0x3ecf2c63; valaddr_reg:x12; val_offset:2097*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2097*FLEN/8, x13, x9, x10)

inst_721:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6804a9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x649651 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4f2c63 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6804a9; op2val:0x3ee49651;
op3val:0x3ecf2c63; valaddr_reg:x12; val_offset:2100*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2100*FLEN/8, x13, x9, x10)

inst_722:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6804a9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x649651 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4f2c63 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6804a9; op2val:0x3ee49651;
op3val:0x3ecf2c63; valaddr_reg:x12; val_offset:2103*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2103*FLEN/8, x13, x9, x10)

inst_723:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6804a9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x649651 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4f2c63 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6804a9; op2val:0x3ee49651;
op3val:0x3ecf2c63; valaddr_reg:x12; val_offset:2106*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2106*FLEN/8, x13, x9, x10)

inst_724:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6804a9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x649651 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4f2c63 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6804a9; op2val:0x3ee49651;
op3val:0x3ecf2c63; valaddr_reg:x12; val_offset:2109*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2109*FLEN/8, x13, x9, x10)

inst_725:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779e46 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x277efd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x220315 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f779e46; op2val:0x3f277efd;
op3val:0x3f220315; valaddr_reg:x12; val_offset:2112*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2112*FLEN/8, x13, x9, x10)

inst_726:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779e46 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x277efd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x220315 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f779e46; op2val:0x3f277efd;
op3val:0x3f220315; valaddr_reg:x12; val_offset:2115*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2115*FLEN/8, x13, x9, x10)

inst_727:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779e46 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x277efd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x220315 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f779e46; op2val:0x3f277efd;
op3val:0x3f220315; valaddr_reg:x12; val_offset:2118*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2118*FLEN/8, x13, x9, x10)

inst_728:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779e46 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x277efd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x220315 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f779e46; op2val:0x3f277efd;
op3val:0x3f220315; valaddr_reg:x12; val_offset:2121*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2121*FLEN/8, x13, x9, x10)

inst_729:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779e46 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x277efd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x220315 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f779e46; op2val:0x3f277efd;
op3val:0x3f220315; valaddr_reg:x12; val_offset:2124*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2124*FLEN/8, x13, x9, x10)

inst_730:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620477 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x6f0e8f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x530f06 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f620477; op2val:0x3d6f0e8f;
op3val:0x3d530f06; valaddr_reg:x12; val_offset:2127*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2127*FLEN/8, x13, x9, x10)

inst_731:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620477 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x6f0e8f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x530f06 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f620477; op2val:0x3d6f0e8f;
op3val:0x3d530f06; valaddr_reg:x12; val_offset:2130*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2130*FLEN/8, x13, x9, x10)

inst_732:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620477 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x6f0e8f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x530f06 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f620477; op2val:0x3d6f0e8f;
op3val:0x3d530f06; valaddr_reg:x12; val_offset:2133*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2133*FLEN/8, x13, x9, x10)

inst_733:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620477 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x6f0e8f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x530f06 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f620477; op2val:0x3d6f0e8f;
op3val:0x3d530f06; valaddr_reg:x12; val_offset:2136*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2136*FLEN/8, x13, x9, x10)

inst_734:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620477 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x6f0e8f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x530f06 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f620477; op2val:0x3d6f0e8f;
op3val:0x3d530f06; valaddr_reg:x12; val_offset:2139*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2139*FLEN/8, x13, x9, x10)

inst_735:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78d41d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x25c9a1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2124b2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78d41d; op2val:0x3da5c9a1;
op3val:0x3da124b2; valaddr_reg:x12; val_offset:2142*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2142*FLEN/8, x13, x9, x10)

inst_736:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78d41d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x25c9a1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2124b2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78d41d; op2val:0x3da5c9a1;
op3val:0x3da124b2; valaddr_reg:x12; val_offset:2145*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2145*FLEN/8, x13, x9, x10)

inst_737:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78d41d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x25c9a1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2124b2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78d41d; op2val:0x3da5c9a1;
op3val:0x3da124b2; valaddr_reg:x12; val_offset:2148*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2148*FLEN/8, x13, x9, x10)

inst_738:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78d41d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x25c9a1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2124b2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78d41d; op2val:0x3da5c9a1;
op3val:0x3da124b2; valaddr_reg:x12; val_offset:2151*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2151*FLEN/8, x13, x9, x10)

inst_739:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78d41d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x25c9a1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2124b2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78d41d; op2val:0x3da5c9a1;
op3val:0x3da124b2; valaddr_reg:x12; val_offset:2154*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2154*FLEN/8, x13, x9, x10)

inst_740:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x55785d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2d4394 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107ab1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d55785d; op2val:0x412d4394;
op3val:0x3f107ab1; valaddr_reg:x12; val_offset:2157*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2157*FLEN/8, x13, x9, x10)

inst_741:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x55785d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2d4394 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107ab1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d55785d; op2val:0x412d4394;
op3val:0x3f107ab1; valaddr_reg:x12; val_offset:2160*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2160*FLEN/8, x13, x9, x10)

inst_742:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x55785d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2d4394 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107ab1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d55785d; op2val:0x412d4394;
op3val:0x3f107ab1; valaddr_reg:x12; val_offset:2163*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2163*FLEN/8, x13, x9, x10)

inst_743:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x55785d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2d4394 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107ab1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d55785d; op2val:0x412d4394;
op3val:0x3f107ab1; valaddr_reg:x12; val_offset:2166*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2166*FLEN/8, x13, x9, x10)

inst_744:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x55785d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2d4394 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107ab1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d55785d; op2val:0x412d4394;
op3val:0x3f107ab1; valaddr_reg:x12; val_offset:2169*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2169*FLEN/8, x13, x9, x10)

inst_745:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2b8e5e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x351eb8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72c07d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2b8e5e; op2val:0x40b51eb8;
op3val:0x3f72c07d; valaddr_reg:x12; val_offset:2172*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2172*FLEN/8, x13, x9, x10)

inst_746:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2b8e5e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x351eb8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72c07d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2b8e5e; op2val:0x40b51eb8;
op3val:0x3f72c07d; valaddr_reg:x12; val_offset:2175*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2175*FLEN/8, x13, x9, x10)

inst_747:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2b8e5e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x351eb8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72c07d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2b8e5e; op2val:0x40b51eb8;
op3val:0x3f72c07d; valaddr_reg:x12; val_offset:2178*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2178*FLEN/8, x13, x9, x10)

inst_748:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2b8e5e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x351eb8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72c07d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2b8e5e; op2val:0x40b51eb8;
op3val:0x3f72c07d; valaddr_reg:x12; val_offset:2181*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2181*FLEN/8, x13, x9, x10)

inst_749:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2b8e5e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x351eb8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72c07d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2b8e5e; op2val:0x40b51eb8;
op3val:0x3f72c07d; valaddr_reg:x12; val_offset:2184*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2184*FLEN/8, x13, x9, x10)

inst_750:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c5053 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x134583 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d7be5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5c5053; op2val:0x3f934583;
op3val:0x3f7d7be5; valaddr_reg:x12; val_offset:2187*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2187*FLEN/8, x13, x9, x10)

inst_751:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c5053 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x134583 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d7be5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5c5053; op2val:0x3f934583;
op3val:0x3f7d7be5; valaddr_reg:x12; val_offset:2190*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2190*FLEN/8, x13, x9, x10)

inst_752:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c5053 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x134583 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d7be5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5c5053; op2val:0x3f934583;
op3val:0x3f7d7be5; valaddr_reg:x12; val_offset:2193*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2193*FLEN/8, x13, x9, x10)

inst_753:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c5053 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x134583 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d7be5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5c5053; op2val:0x3f934583;
op3val:0x3f7d7be5; valaddr_reg:x12; val_offset:2196*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2196*FLEN/8, x13, x9, x10)

inst_754:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c5053 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x134583 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d7be5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5c5053; op2val:0x3f934583;
op3val:0x3f7d7be5; valaddr_reg:x12; val_offset:2199*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2199*FLEN/8, x13, x9, x10)

inst_755:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e91cd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x08ff60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f56e5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6e91cd; op2val:0x3f88ff60;
op3val:0x3f7f56e5; valaddr_reg:x12; val_offset:2202*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2202*FLEN/8, x13, x9, x10)

inst_756:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e91cd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x08ff60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f56e5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6e91cd; op2val:0x3f88ff60;
op3val:0x3f7f56e5; valaddr_reg:x12; val_offset:2205*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2205*FLEN/8, x13, x9, x10)

inst_757:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e91cd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x08ff60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f56e5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6e91cd; op2val:0x3f88ff60;
op3val:0x3f7f56e5; valaddr_reg:x12; val_offset:2208*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2208*FLEN/8, x13, x9, x10)

inst_758:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e91cd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x08ff60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f56e5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6e91cd; op2val:0x3f88ff60;
op3val:0x3f7f56e5; valaddr_reg:x12; val_offset:2211*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2211*FLEN/8, x13, x9, x10)

inst_759:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e91cd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x08ff60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f56e5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6e91cd; op2val:0x3f88ff60;
op3val:0x3f7f56e5; valaddr_reg:x12; val_offset:2214*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2214*FLEN/8, x13, x9, x10)

inst_760:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fc9ed and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2a1752 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x699836 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2fc9ed; op2val:0x40aa1752;
op3val:0x3f699836; valaddr_reg:x12; val_offset:2217*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2217*FLEN/8, x13, x9, x10)

inst_761:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fc9ed and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2a1752 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x699836 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2fc9ed; op2val:0x40aa1752;
op3val:0x3f699836; valaddr_reg:x12; val_offset:2220*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2220*FLEN/8, x13, x9, x10)

inst_762:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fc9ed and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2a1752 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x699836 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2fc9ed; op2val:0x40aa1752;
op3val:0x3f699836; valaddr_reg:x12; val_offset:2223*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2223*FLEN/8, x13, x9, x10)

inst_763:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fc9ed and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2a1752 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x699836 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2fc9ed; op2val:0x40aa1752;
op3val:0x3f699836; valaddr_reg:x12; val_offset:2226*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2226*FLEN/8, x13, x9, x10)

inst_764:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fc9ed and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2a1752 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x699836 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2fc9ed; op2val:0x40aa1752;
op3val:0x3f699836; valaddr_reg:x12; val_offset:2229*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2229*FLEN/8, x13, x9, x10)

inst_765:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x518b35 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x634d38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a0da6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed18b35; op2val:0x3fe34d38;
op3val:0x3f3a0da6; valaddr_reg:x12; val_offset:2232*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2232*FLEN/8, x13, x9, x10)

inst_766:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x518b35 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x634d38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a0da6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed18b35; op2val:0x3fe34d38;
op3val:0x3f3a0da6; valaddr_reg:x12; val_offset:2235*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2235*FLEN/8, x13, x9, x10)

inst_767:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x518b35 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x634d38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a0da6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed18b35; op2val:0x3fe34d38;
op3val:0x3f3a0da6; valaddr_reg:x12; val_offset:2238*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2238*FLEN/8, x13, x9, x10)

inst_768:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x518b35 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x634d38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a0da6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed18b35; op2val:0x3fe34d38;
op3val:0x3f3a0da6; valaddr_reg:x12; val_offset:2241*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2241*FLEN/8, x13, x9, x10)

inst_769:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x518b35 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x634d38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a0da6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed18b35; op2val:0x3fe34d38;
op3val:0x3f3a0da6; valaddr_reg:x12; val_offset:2244*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2244*FLEN/8, x13, x9, x10)

inst_770:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e1c59 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2b5db0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14ae39 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5e1c59; op2val:0x3f2b5db0;
op3val:0x3f14ae39; valaddr_reg:x12; val_offset:2247*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2247*FLEN/8, x13, x9, x10)

inst_771:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e1c59 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2b5db0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14ae39 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5e1c59; op2val:0x3f2b5db0;
op3val:0x3f14ae39; valaddr_reg:x12; val_offset:2250*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2250*FLEN/8, x13, x9, x10)

inst_772:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e1c59 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2b5db0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14ae39 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5e1c59; op2val:0x3f2b5db0;
op3val:0x3f14ae39; valaddr_reg:x12; val_offset:2253*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2253*FLEN/8, x13, x9, x10)

inst_773:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e1c59 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2b5db0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14ae39 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5e1c59; op2val:0x3f2b5db0;
op3val:0x3f14ae39; valaddr_reg:x12; val_offset:2256*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2256*FLEN/8, x13, x9, x10)

inst_774:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e1c59 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2b5db0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14ae39 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5e1c59; op2val:0x3f2b5db0;
op3val:0x3f14ae39; valaddr_reg:x12; val_offset:2259*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2259*FLEN/8, x13, x9, x10)

inst_775:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5172bf and fs2 == 0 and fe2 == 0x79 and fm2 == 0x6475a8 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3aea75 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5172bf; op2val:0x3ce475a8;
op3val:0x3cbaea75; valaddr_reg:x12; val_offset:2262*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2262*FLEN/8, x13, x9, x10)

inst_776:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5172bf and fs2 == 0 and fe2 == 0x79 and fm2 == 0x6475a8 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3aea75 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5172bf; op2val:0x3ce475a8;
op3val:0x3cbaea75; valaddr_reg:x12; val_offset:2265*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2265*FLEN/8, x13, x9, x10)

inst_777:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5172bf and fs2 == 0 and fe2 == 0x79 and fm2 == 0x6475a8 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3aea75 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5172bf; op2val:0x3ce475a8;
op3val:0x3cbaea75; valaddr_reg:x12; val_offset:2268*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2268*FLEN/8, x13, x9, x10)

inst_778:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5172bf and fs2 == 0 and fe2 == 0x79 and fm2 == 0x6475a8 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3aea75 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5172bf; op2val:0x3ce475a8;
op3val:0x3cbaea75; valaddr_reg:x12; val_offset:2271*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2271*FLEN/8, x13, x9, x10)

inst_779:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5172bf and fs2 == 0 and fe2 == 0x79 and fm2 == 0x6475a8 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3aea75 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5172bf; op2val:0x3ce475a8;
op3val:0x3cbaea75; valaddr_reg:x12; val_offset:2274*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2274*FLEN/8, x13, x9, x10)

inst_780:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1db874 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28c6b2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff6ee and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1db874; op2val:0x3f28c6b2;
op3val:0x3ecff6ee; valaddr_reg:x12; val_offset:2277*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2277*FLEN/8, x13, x9, x10)

inst_781:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1db874 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28c6b2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff6ee and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1db874; op2val:0x3f28c6b2;
op3val:0x3ecff6ee; valaddr_reg:x12; val_offset:2280*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2280*FLEN/8, x13, x9, x10)

inst_782:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1db874 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28c6b2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff6ee and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1db874; op2val:0x3f28c6b2;
op3val:0x3ecff6ee; valaddr_reg:x12; val_offset:2283*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2283*FLEN/8, x13, x9, x10)

inst_783:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1db874 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28c6b2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff6ee and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1db874; op2val:0x3f28c6b2;
op3val:0x3ecff6ee; valaddr_reg:x12; val_offset:2286*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2286*FLEN/8, x13, x9, x10)

inst_784:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1db874 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28c6b2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff6ee and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1db874; op2val:0x3f28c6b2;
op3val:0x3ecff6ee; valaddr_reg:x12; val_offset:2289*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2289*FLEN/8, x13, x9, x10)

inst_785:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5f772c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5adb58 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3f0af3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edf772c; op2val:0x3f5adb58;
op3val:0x3ebf0af3; valaddr_reg:x12; val_offset:2292*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2292*FLEN/8, x13, x9, x10)

inst_786:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5f772c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5adb58 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3f0af3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edf772c; op2val:0x3f5adb58;
op3val:0x3ebf0af3; valaddr_reg:x12; val_offset:2295*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2295*FLEN/8, x13, x9, x10)

inst_787:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5f772c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5adb58 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3f0af3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edf772c; op2val:0x3f5adb58;
op3val:0x3ebf0af3; valaddr_reg:x12; val_offset:2298*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2298*FLEN/8, x13, x9, x10)

inst_788:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5f772c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5adb58 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3f0af3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edf772c; op2val:0x3f5adb58;
op3val:0x3ebf0af3; valaddr_reg:x12; val_offset:2301*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2301*FLEN/8, x13, x9, x10)

inst_789:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5f772c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5adb58 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3f0af3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edf772c; op2val:0x3f5adb58;
op3val:0x3ebf0af3; valaddr_reg:x12; val_offset:2304*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2304*FLEN/8, x13, x9, x10)

inst_790:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05022f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33ce2c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ad74c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f05022f; op2val:0x3fb3ce2c;
op3val:0x3f3ad74c; valaddr_reg:x12; val_offset:2307*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2307*FLEN/8, x13, x9, x10)

inst_791:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05022f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33ce2c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ad74c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f05022f; op2val:0x3fb3ce2c;
op3val:0x3f3ad74c; valaddr_reg:x12; val_offset:2310*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2310*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_6)

inst_792:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05022f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33ce2c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ad74c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f05022f; op2val:0x3fb3ce2c;
op3val:0x3f3ad74c; valaddr_reg:x12; val_offset:2313*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2313*FLEN/8, x13, x9, x10)

inst_793:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05022f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33ce2c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ad74c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f05022f; op2val:0x3fb3ce2c;
op3val:0x3f3ad74c; valaddr_reg:x12; val_offset:2316*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2316*FLEN/8, x13, x9, x10)

inst_794:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05022f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33ce2c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ad74c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f05022f; op2val:0x3fb3ce2c;
op3val:0x3f3ad74c; valaddr_reg:x12; val_offset:2319*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2319*FLEN/8, x13, x9, x10)

inst_795:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfc6e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x04cd66 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6546ef and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cfc6e; op2val:0x3e04cd66;
op3val:0x3de546ef; valaddr_reg:x12; val_offset:2322*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2322*FLEN/8, x13, x9, x10)

inst_796:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfc6e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x04cd66 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6546ef and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cfc6e; op2val:0x3e04cd66;
op3val:0x3de546ef; valaddr_reg:x12; val_offset:2325*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2325*FLEN/8, x13, x9, x10)

inst_797:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfc6e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x04cd66 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6546ef and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cfc6e; op2val:0x3e04cd66;
op3val:0x3de546ef; valaddr_reg:x12; val_offset:2328*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2328*FLEN/8, x13, x9, x10)

inst_798:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfc6e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x04cd66 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6546ef and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cfc6e; op2val:0x3e04cd66;
op3val:0x3de546ef; valaddr_reg:x12; val_offset:2331*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2331*FLEN/8, x13, x9, x10)

inst_799:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfc6e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x04cd66 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6546ef and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cfc6e; op2val:0x3e04cd66;
op3val:0x3de546ef; valaddr_reg:x12; val_offset:2334*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2334*FLEN/8, x13, x9, x10)

inst_800:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4eb642 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2edf82 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d345b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4eb642; op2val:0x3f2edf82;
op3val:0x3f0d345b; valaddr_reg:x12; val_offset:2337*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2337*FLEN/8, x13, x9, x10)

inst_801:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4eb642 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2edf82 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d345b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4eb642; op2val:0x3f2edf82;
op3val:0x3f0d345b; valaddr_reg:x12; val_offset:2340*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2340*FLEN/8, x13, x9, x10)

inst_802:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4eb642 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2edf82 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d345b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4eb642; op2val:0x3f2edf82;
op3val:0x3f0d345b; valaddr_reg:x12; val_offset:2343*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2343*FLEN/8, x13, x9, x10)

inst_803:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4eb642 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2edf82 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d345b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4eb642; op2val:0x3f2edf82;
op3val:0x3f0d345b; valaddr_reg:x12; val_offset:2346*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2346*FLEN/8, x13, x9, x10)

inst_804:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4eb642 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2edf82 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d345b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4eb642; op2val:0x3f2edf82;
op3val:0x3f0d345b; valaddr_reg:x12; val_offset:2349*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2349*FLEN/8, x13, x9, x10)

inst_805:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x443a84 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0d9646 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x590ed6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e443a84; op2val:0x400d9646;
op3val:0x3ed90ed6; valaddr_reg:x12; val_offset:2352*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2352*FLEN/8, x13, x9, x10)

inst_806:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x443a84 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0d9646 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x590ed6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e443a84; op2val:0x400d9646;
op3val:0x3ed90ed6; valaddr_reg:x12; val_offset:2355*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2355*FLEN/8, x13, x9, x10)

inst_807:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x443a84 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0d9646 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x590ed6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e443a84; op2val:0x400d9646;
op3val:0x3ed90ed6; valaddr_reg:x12; val_offset:2358*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2358*FLEN/8, x13, x9, x10)

inst_808:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x443a84 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0d9646 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x590ed6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e443a84; op2val:0x400d9646;
op3val:0x3ed90ed6; valaddr_reg:x12; val_offset:2361*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2361*FLEN/8, x13, x9, x10)

inst_809:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x443a84 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0d9646 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x590ed6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e443a84; op2val:0x400d9646;
op3val:0x3ed90ed6; valaddr_reg:x12; val_offset:2364*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2364*FLEN/8, x13, x9, x10)

inst_810:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x54ae74 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6ac39a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4309f7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d54ae74; op2val:0x406ac39a;
op3val:0x3e4309f7; valaddr_reg:x12; val_offset:2367*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2367*FLEN/8, x13, x9, x10)

inst_811:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x54ae74 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6ac39a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4309f7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d54ae74; op2val:0x406ac39a;
op3val:0x3e4309f7; valaddr_reg:x12; val_offset:2370*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2370*FLEN/8, x13, x9, x10)

inst_812:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x54ae74 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6ac39a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4309f7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d54ae74; op2val:0x406ac39a;
op3val:0x3e4309f7; valaddr_reg:x12; val_offset:2373*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2373*FLEN/8, x13, x9, x10)

inst_813:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x54ae74 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6ac39a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4309f7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d54ae74; op2val:0x406ac39a;
op3val:0x3e4309f7; valaddr_reg:x12; val_offset:2376*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2376*FLEN/8, x13, x9, x10)

inst_814:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x54ae74 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6ac39a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4309f7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d54ae74; op2val:0x406ac39a;
op3val:0x3e4309f7; valaddr_reg:x12; val_offset:2379*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2379*FLEN/8, x13, x9, x10)

inst_815:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x790d95 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x679647 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x614d75 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef90d95; op2val:0x3fe79647;
op3val:0x3f614d75; valaddr_reg:x12; val_offset:2382*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2382*FLEN/8, x13, x9, x10)

inst_816:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x790d95 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x679647 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x614d75 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef90d95; op2val:0x3fe79647;
op3val:0x3f614d75; valaddr_reg:x12; val_offset:2385*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2385*FLEN/8, x13, x9, x10)

inst_817:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x790d95 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x679647 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x614d75 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef90d95; op2val:0x3fe79647;
op3val:0x3f614d75; valaddr_reg:x12; val_offset:2388*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2388*FLEN/8, x13, x9, x10)

inst_818:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x790d95 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x679647 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x614d75 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef90d95; op2val:0x3fe79647;
op3val:0x3f614d75; valaddr_reg:x12; val_offset:2391*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2391*FLEN/8, x13, x9, x10)

inst_819:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x790d95 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x679647 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x614d75 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef90d95; op2val:0x3fe79647;
op3val:0x3f614d75; valaddr_reg:x12; val_offset:2394*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2394*FLEN/8, x13, x9, x10)

inst_820:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x508a14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2565c3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06bbe5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed08a14; op2val:0x3fa565c3;
op3val:0x3f06bbe5; valaddr_reg:x12; val_offset:2397*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2397*FLEN/8, x13, x9, x10)

inst_821:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x508a14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2565c3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06bbe5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed08a14; op2val:0x3fa565c3;
op3val:0x3f06bbe5; valaddr_reg:x12; val_offset:2400*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2400*FLEN/8, x13, x9, x10)

inst_822:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x508a14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2565c3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06bbe5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed08a14; op2val:0x3fa565c3;
op3val:0x3f06bbe5; valaddr_reg:x12; val_offset:2403*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2403*FLEN/8, x13, x9, x10)

inst_823:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x508a14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2565c3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06bbe5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed08a14; op2val:0x3fa565c3;
op3val:0x3f06bbe5; valaddr_reg:x12; val_offset:2406*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2406*FLEN/8, x13, x9, x10)

inst_824:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x508a14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2565c3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06bbe5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed08a14; op2val:0x3fa565c3;
op3val:0x3f06bbe5; valaddr_reg:x12; val_offset:2409*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2409*FLEN/8, x13, x9, x10)

inst_825:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0d8fa5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x59380a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x703b80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0d8fa5; op2val:0x4059380a;
op3val:0x3ef03b80; valaddr_reg:x12; val_offset:2412*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2412*FLEN/8, x13, x9, x10)

inst_826:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0d8fa5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x59380a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x703b80 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0d8fa5; op2val:0x4059380a;
op3val:0x3ef03b80; valaddr_reg:x12; val_offset:2415*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2415*FLEN/8, x13, x9, x10)

inst_827:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0d8fa5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x59380a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x703b80 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0d8fa5; op2val:0x4059380a;
op3val:0x3ef03b80; valaddr_reg:x12; val_offset:2418*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2418*FLEN/8, x13, x9, x10)

inst_828:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0d8fa5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x59380a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x703b80 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0d8fa5; op2val:0x4059380a;
op3val:0x3ef03b80; valaddr_reg:x12; val_offset:2421*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2421*FLEN/8, x13, x9, x10)

inst_829:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0d8fa5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x59380a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x703b80 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0d8fa5; op2val:0x4059380a;
op3val:0x3ef03b80; valaddr_reg:x12; val_offset:2424*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2424*FLEN/8, x13, x9, x10)

inst_830:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c89ed and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1dbc78 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x40e7ab and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9c89ed; op2val:0x3f1dbc78;
op3val:0x3e40e7ab; valaddr_reg:x12; val_offset:2427*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2427*FLEN/8, x13, x9, x10)

inst_831:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c89ed and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1dbc78 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x40e7ab and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9c89ed; op2val:0x3f1dbc78;
op3val:0x3e40e7ab; valaddr_reg:x12; val_offset:2430*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2430*FLEN/8, x13, x9, x10)

inst_832:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c89ed and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1dbc78 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x40e7ab and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9c89ed; op2val:0x3f1dbc78;
op3val:0x3e40e7ab; valaddr_reg:x12; val_offset:2433*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2433*FLEN/8, x13, x9, x10)

inst_833:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c89ed and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1dbc78 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x40e7ab and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9c89ed; op2val:0x3f1dbc78;
op3val:0x3e40e7ab; valaddr_reg:x12; val_offset:2436*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2436*FLEN/8, x13, x9, x10)

inst_834:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c89ed and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1dbc78 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x40e7ab and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9c89ed; op2val:0x3f1dbc78;
op3val:0x3e40e7ab; valaddr_reg:x12; val_offset:2439*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2439*FLEN/8, x13, x9, x10)

inst_835:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0790e0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x18dd1f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x21e63c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0790e0; op2val:0x3e98dd1f;
op3val:0x3e21e63c; valaddr_reg:x12; val_offset:2442*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2442*FLEN/8, x13, x9, x10)

inst_836:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0790e0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x18dd1f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x21e63c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0790e0; op2val:0x3e98dd1f;
op3val:0x3e21e63c; valaddr_reg:x12; val_offset:2445*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2445*FLEN/8, x13, x9, x10)

inst_837:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0790e0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x18dd1f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x21e63c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0790e0; op2val:0x3e98dd1f;
op3val:0x3e21e63c; valaddr_reg:x12; val_offset:2448*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2448*FLEN/8, x13, x9, x10)

inst_838:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0790e0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x18dd1f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x21e63c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0790e0; op2val:0x3e98dd1f;
op3val:0x3e21e63c; valaddr_reg:x12; val_offset:2451*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2451*FLEN/8, x13, x9, x10)

inst_839:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0790e0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x18dd1f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x21e63c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0790e0; op2val:0x3e98dd1f;
op3val:0x3e21e63c; valaddr_reg:x12; val_offset:2454*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2454*FLEN/8, x13, x9, x10)

inst_840:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4e21ec and fs2 == 0 and fe2 == 0x82 and fm2 == 0x066de8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587c82 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dce21ec; op2val:0x41066de8;
op3val:0x3f587c82; valaddr_reg:x12; val_offset:2457*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2457*FLEN/8, x13, x9, x10)

inst_841:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4e21ec and fs2 == 0 and fe2 == 0x82 and fm2 == 0x066de8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587c82 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dce21ec; op2val:0x41066de8;
op3val:0x3f587c82; valaddr_reg:x12; val_offset:2460*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2460*FLEN/8, x13, x9, x10)

inst_842:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4e21ec and fs2 == 0 and fe2 == 0x82 and fm2 == 0x066de8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587c82 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dce21ec; op2val:0x41066de8;
op3val:0x3f587c82; valaddr_reg:x12; val_offset:2463*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2463*FLEN/8, x13, x9, x10)

inst_843:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4e21ec and fs2 == 0 and fe2 == 0x82 and fm2 == 0x066de8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587c82 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dce21ec; op2val:0x41066de8;
op3val:0x3f587c82; valaddr_reg:x12; val_offset:2466*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2466*FLEN/8, x13, x9, x10)

inst_844:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4e21ec and fs2 == 0 and fe2 == 0x82 and fm2 == 0x066de8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587c82 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dce21ec; op2val:0x41066de8;
op3val:0x3f587c82; valaddr_reg:x12; val_offset:2469*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2469*FLEN/8, x13, x9, x10)

inst_845:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2594e5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e37b1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0561d6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da594e5; op2val:0x3fce37b1;
op3val:0x3e0561d6; valaddr_reg:x12; val_offset:2472*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2472*FLEN/8, x13, x9, x10)

inst_846:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2594e5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e37b1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0561d6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da594e5; op2val:0x3fce37b1;
op3val:0x3e0561d6; valaddr_reg:x12; val_offset:2475*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2475*FLEN/8, x13, x9, x10)

inst_847:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2594e5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e37b1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0561d6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da594e5; op2val:0x3fce37b1;
op3val:0x3e0561d6; valaddr_reg:x12; val_offset:2478*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2478*FLEN/8, x13, x9, x10)

inst_848:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2594e5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e37b1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0561d6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da594e5; op2val:0x3fce37b1;
op3val:0x3e0561d6; valaddr_reg:x12; val_offset:2481*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2481*FLEN/8, x13, x9, x10)

inst_849:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2594e5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e37b1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0561d6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da594e5; op2val:0x3fce37b1;
op3val:0x3e0561d6; valaddr_reg:x12; val_offset:2484*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2484*FLEN/8, x13, x9, x10)

inst_850:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x147bc6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x12252e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x298850 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e147bc6; op2val:0x4092252e;
op3val:0x3f298850; valaddr_reg:x12; val_offset:2487*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2487*FLEN/8, x13, x9, x10)

inst_851:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x147bc6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x12252e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x298850 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e147bc6; op2val:0x4092252e;
op3val:0x3f298850; valaddr_reg:x12; val_offset:2490*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2490*FLEN/8, x13, x9, x10)

inst_852:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x147bc6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x12252e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x298850 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e147bc6; op2val:0x4092252e;
op3val:0x3f298850; valaddr_reg:x12; val_offset:2493*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2493*FLEN/8, x13, x9, x10)

inst_853:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x147bc6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x12252e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x298850 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e147bc6; op2val:0x4092252e;
op3val:0x3f298850; valaddr_reg:x12; val_offset:2496*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2496*FLEN/8, x13, x9, x10)

inst_854:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x147bc6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x12252e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x298850 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e147bc6; op2val:0x4092252e;
op3val:0x3f298850; valaddr_reg:x12; val_offset:2499*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2499*FLEN/8, x13, x9, x10)

inst_855:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f888d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x145b7f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dfecd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f888d; op2val:0x3f945b7f;
op3val:0x3f5dfecd; valaddr_reg:x12; val_offset:2502*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2502*FLEN/8, x13, x9, x10)

inst_856:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f888d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x145b7f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dfecd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f888d; op2val:0x3f945b7f;
op3val:0x3f5dfecd; valaddr_reg:x12; val_offset:2505*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2505*FLEN/8, x13, x9, x10)

inst_857:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f888d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x145b7f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dfecd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f888d; op2val:0x3f945b7f;
op3val:0x3f5dfecd; valaddr_reg:x12; val_offset:2508*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2508*FLEN/8, x13, x9, x10)

inst_858:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f888d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x145b7f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dfecd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f888d; op2val:0x3f945b7f;
op3val:0x3f5dfecd; valaddr_reg:x12; val_offset:2511*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2511*FLEN/8, x13, x9, x10)

inst_859:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f888d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x145b7f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dfecd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f888d; op2val:0x3f945b7f;
op3val:0x3f5dfecd; valaddr_reg:x12; val_offset:2514*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2514*FLEN/8, x13, x9, x10)

inst_860:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2106ee and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6c018c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14735d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2106ee; op2val:0x3e6c018c;
op3val:0x3e14735d; valaddr_reg:x12; val_offset:2517*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2517*FLEN/8, x13, x9, x10)

inst_861:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2106ee and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6c018c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14735d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2106ee; op2val:0x3e6c018c;
op3val:0x3e14735d; valaddr_reg:x12; val_offset:2520*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2520*FLEN/8, x13, x9, x10)

inst_862:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2106ee and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6c018c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14735d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2106ee; op2val:0x3e6c018c;
op3val:0x3e14735d; valaddr_reg:x12; val_offset:2523*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2523*FLEN/8, x13, x9, x10)

inst_863:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2106ee and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6c018c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14735d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2106ee; op2val:0x3e6c018c;
op3val:0x3e14735d; valaddr_reg:x12; val_offset:2526*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2526*FLEN/8, x13, x9, x10)

inst_864:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2106ee and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6c018c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14735d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2106ee; op2val:0x3e6c018c;
op3val:0x3e14735d; valaddr_reg:x12; val_offset:2529*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2529*FLEN/8, x13, x9, x10)

inst_865:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x231a0a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x47d448 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ea0fb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f231a0a; op2val:0x3fc7d448;
op3val:0x3f7ea0fb; valaddr_reg:x12; val_offset:2532*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2532*FLEN/8, x13, x9, x10)

inst_866:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x231a0a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x47d448 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ea0fb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f231a0a; op2val:0x3fc7d448;
op3val:0x3f7ea0fb; valaddr_reg:x12; val_offset:2535*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2535*FLEN/8, x13, x9, x10)

inst_867:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x231a0a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x47d448 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ea0fb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f231a0a; op2val:0x3fc7d448;
op3val:0x3f7ea0fb; valaddr_reg:x12; val_offset:2538*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2538*FLEN/8, x13, x9, x10)

inst_868:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x231a0a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x47d448 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ea0fb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f231a0a; op2val:0x3fc7d448;
op3val:0x3f7ea0fb; valaddr_reg:x12; val_offset:2541*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2541*FLEN/8, x13, x9, x10)

inst_869:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x231a0a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x47d448 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ea0fb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f231a0a; op2val:0x3fc7d448;
op3val:0x3f7ea0fb; valaddr_reg:x12; val_offset:2544*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2544*FLEN/8, x13, x9, x10)

inst_870:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x31f08a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x28f445 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6adf48 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f31f08a; op2val:0x3fa8f445;
op3val:0x3f6adf48; valaddr_reg:x12; val_offset:2547*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2547*FLEN/8, x13, x9, x10)

inst_871:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x31f08a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x28f445 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6adf48 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f31f08a; op2val:0x3fa8f445;
op3val:0x3f6adf48; valaddr_reg:x12; val_offset:2550*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2550*FLEN/8, x13, x9, x10)

inst_872:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x31f08a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x28f445 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6adf48 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f31f08a; op2val:0x3fa8f445;
op3val:0x3f6adf48; valaddr_reg:x12; val_offset:2553*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2553*FLEN/8, x13, x9, x10)

inst_873:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x31f08a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x28f445 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6adf48 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f31f08a; op2val:0x3fa8f445;
op3val:0x3f6adf48; valaddr_reg:x12; val_offset:2556*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2556*FLEN/8, x13, x9, x10)

inst_874:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x31f08a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x28f445 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6adf48 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f31f08a; op2val:0x3fa8f445;
op3val:0x3f6adf48; valaddr_reg:x12; val_offset:2559*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2559*FLEN/8, x13, x9, x10)

inst_875:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41477c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1d2b95 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6d537e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec1477c; op2val:0x3f1d2b95;
op3val:0x3e6d537e; valaddr_reg:x12; val_offset:2562*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2562*FLEN/8, x13, x9, x10)

inst_876:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41477c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1d2b95 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6d537e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec1477c; op2val:0x3f1d2b95;
op3val:0x3e6d537e; valaddr_reg:x12; val_offset:2565*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2565*FLEN/8, x13, x9, x10)

inst_877:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41477c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1d2b95 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6d537e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec1477c; op2val:0x3f1d2b95;
op3val:0x3e6d537e; valaddr_reg:x12; val_offset:2568*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2568*FLEN/8, x13, x9, x10)

inst_878:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41477c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1d2b95 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6d537e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec1477c; op2val:0x3f1d2b95;
op3val:0x3e6d537e; valaddr_reg:x12; val_offset:2571*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2571*FLEN/8, x13, x9, x10)

inst_879:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41477c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1d2b95 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6d537e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec1477c; op2val:0x3f1d2b95;
op3val:0x3e6d537e; valaddr_reg:x12; val_offset:2574*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2574*FLEN/8, x13, x9, x10)

inst_880:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1646ea and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4698b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6928f6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9646ea; op2val:0x414698b1;
op3val:0x3f6928f6; valaddr_reg:x12; val_offset:2577*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2577*FLEN/8, x13, x9, x10)

inst_881:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1646ea and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4698b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6928f6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9646ea; op2val:0x414698b1;
op3val:0x3f6928f6; valaddr_reg:x12; val_offset:2580*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2580*FLEN/8, x13, x9, x10)

inst_882:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1646ea and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4698b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6928f6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9646ea; op2val:0x414698b1;
op3val:0x3f6928f6; valaddr_reg:x12; val_offset:2583*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2583*FLEN/8, x13, x9, x10)

inst_883:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1646ea and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4698b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6928f6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9646ea; op2val:0x414698b1;
op3val:0x3f6928f6; valaddr_reg:x12; val_offset:2586*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2586*FLEN/8, x13, x9, x10)

inst_884:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1646ea and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4698b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6928f6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9646ea; op2val:0x414698b1;
op3val:0x3f6928f6; valaddr_reg:x12; val_offset:2589*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2589*FLEN/8, x13, x9, x10)

inst_885:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1e9deb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3495bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fc7a0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1e9deb; op2val:0x3fb495bc;
op3val:0x3f5fc7a0; valaddr_reg:x12; val_offset:2592*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2592*FLEN/8, x13, x9, x10)

inst_886:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1e9deb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3495bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fc7a0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1e9deb; op2val:0x3fb495bc;
op3val:0x3f5fc7a0; valaddr_reg:x12; val_offset:2595*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2595*FLEN/8, x13, x9, x10)

inst_887:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1e9deb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3495bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fc7a0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1e9deb; op2val:0x3fb495bc;
op3val:0x3f5fc7a0; valaddr_reg:x12; val_offset:2598*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2598*FLEN/8, x13, x9, x10)

inst_888:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1e9deb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3495bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fc7a0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1e9deb; op2val:0x3fb495bc;
op3val:0x3f5fc7a0; valaddr_reg:x12; val_offset:2601*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2601*FLEN/8, x13, x9, x10)

inst_889:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1e9deb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3495bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fc7a0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1e9deb; op2val:0x3fb495bc;
op3val:0x3f5fc7a0; valaddr_reg:x12; val_offset:2604*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2604*FLEN/8, x13, x9, x10)

inst_890:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x377761 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x68f393 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x26f2bf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db77761; op2val:0x3fe8f393;
op3val:0x3e26f2bf; valaddr_reg:x12; val_offset:2607*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2607*FLEN/8, x13, x9, x10)

inst_891:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x377761 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x68f393 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x26f2bf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db77761; op2val:0x3fe8f393;
op3val:0x3e26f2bf; valaddr_reg:x12; val_offset:2610*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2610*FLEN/8, x13, x9, x10)

inst_892:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x377761 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x68f393 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x26f2bf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db77761; op2val:0x3fe8f393;
op3val:0x3e26f2bf; valaddr_reg:x12; val_offset:2613*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2613*FLEN/8, x13, x9, x10)

inst_893:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x377761 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x68f393 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x26f2bf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db77761; op2val:0x3fe8f393;
op3val:0x3e26f2bf; valaddr_reg:x12; val_offset:2616*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2616*FLEN/8, x13, x9, x10)

inst_894:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x377761 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x68f393 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x26f2bf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db77761; op2val:0x3fe8f393;
op3val:0x3e26f2bf; valaddr_reg:x12; val_offset:2619*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2619*FLEN/8, x13, x9, x10)

inst_895:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75dc1d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x44029c and fs3 == 0 and fe3 == 0x7a and fm3 == 0x3c3f07 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5dc1d; op2val:0x3dc4029c;
op3val:0x3d3c3f07; valaddr_reg:x12; val_offset:2622*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2622*FLEN/8, x13, x9, x10)

inst_896:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75dc1d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x44029c and fs3 == 0 and fe3 == 0x7a and fm3 == 0x3c3f07 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5dc1d; op2val:0x3dc4029c;
op3val:0x3d3c3f07; valaddr_reg:x12; val_offset:2625*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2625*FLEN/8, x13, x9, x10)

inst_897:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75dc1d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x44029c and fs3 == 0 and fe3 == 0x7a and fm3 == 0x3c3f07 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5dc1d; op2val:0x3dc4029c;
op3val:0x3d3c3f07; valaddr_reg:x12; val_offset:2628*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2628*FLEN/8, x13, x9, x10)

inst_898:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75dc1d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x44029c and fs3 == 0 and fe3 == 0x7a and fm3 == 0x3c3f07 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5dc1d; op2val:0x3dc4029c;
op3val:0x3d3c3f07; valaddr_reg:x12; val_offset:2631*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2631*FLEN/8, x13, x9, x10)

inst_899:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75dc1d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x44029c and fs3 == 0 and fe3 == 0x7a and fm3 == 0x3c3f07 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5dc1d; op2val:0x3dc4029c;
op3val:0x3d3c3f07; valaddr_reg:x12; val_offset:2634*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2634*FLEN/8, x13, x9, x10)

inst_900:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x759dfe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e9f0f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x64f17e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef59dfe; op2val:0x3eee9f0f;
op3val:0x3e64f17e; valaddr_reg:x12; val_offset:2637*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2637*FLEN/8, x13, x9, x10)

inst_901:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x759dfe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e9f0f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x64f17e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef59dfe; op2val:0x3eee9f0f;
op3val:0x3e64f17e; valaddr_reg:x12; val_offset:2640*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2640*FLEN/8, x13, x9, x10)

inst_902:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x759dfe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e9f0f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x64f17e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef59dfe; op2val:0x3eee9f0f;
op3val:0x3e64f17e; valaddr_reg:x12; val_offset:2643*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2643*FLEN/8, x13, x9, x10)

inst_903:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x759dfe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e9f0f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x64f17e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef59dfe; op2val:0x3eee9f0f;
op3val:0x3e64f17e; valaddr_reg:x12; val_offset:2646*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2646*FLEN/8, x13, x9, x10)

inst_904:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x759dfe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e9f0f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x64f17e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef59dfe; op2val:0x3eee9f0f;
op3val:0x3e64f17e; valaddr_reg:x12; val_offset:2649*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2649*FLEN/8, x13, x9, x10)

inst_905:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030ed0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1ef39a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22bfb5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f030ed0; op2val:0x3f9ef39a;
op3val:0x3f22bfb5; valaddr_reg:x12; val_offset:2652*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2652*FLEN/8, x13, x9, x10)

inst_906:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030ed0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1ef39a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22bfb5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f030ed0; op2val:0x3f9ef39a;
op3val:0x3f22bfb5; valaddr_reg:x12; val_offset:2655*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2655*FLEN/8, x13, x9, x10)

inst_907:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030ed0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1ef39a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22bfb5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f030ed0; op2val:0x3f9ef39a;
op3val:0x3f22bfb5; valaddr_reg:x12; val_offset:2658*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2658*FLEN/8, x13, x9, x10)

inst_908:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030ed0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1ef39a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22bfb5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f030ed0; op2val:0x3f9ef39a;
op3val:0x3f22bfb5; valaddr_reg:x12; val_offset:2661*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2661*FLEN/8, x13, x9, x10)

inst_909:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030ed0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1ef39a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22bfb5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f030ed0; op2val:0x3f9ef39a;
op3val:0x3f22bfb5; valaddr_reg:x12; val_offset:2664*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2664*FLEN/8, x13, x9, x10)

inst_910:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x37155a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x62a7db and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2218e6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bb7155a; op2val:0x41e2a7db;
op3val:0x3e2218e6; valaddr_reg:x12; val_offset:2667*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2667*FLEN/8, x13, x9, x10)

inst_911:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x37155a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x62a7db and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2218e6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bb7155a; op2val:0x41e2a7db;
op3val:0x3e2218e6; valaddr_reg:x12; val_offset:2670*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2670*FLEN/8, x13, x9, x10)

inst_912:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x37155a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x62a7db and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2218e6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bb7155a; op2val:0x41e2a7db;
op3val:0x3e2218e6; valaddr_reg:x12; val_offset:2673*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2673*FLEN/8, x13, x9, x10)

inst_913:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x37155a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x62a7db and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2218e6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bb7155a; op2val:0x41e2a7db;
op3val:0x3e2218e6; valaddr_reg:x12; val_offset:2676*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2676*FLEN/8, x13, x9, x10)

inst_914:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x37155a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x62a7db and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2218e6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bb7155a; op2val:0x41e2a7db;
op3val:0x3e2218e6; valaddr_reg:x12; val_offset:2679*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2679*FLEN/8, x13, x9, x10)

inst_915:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x510f19 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x267cef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07f5d1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed10f19; op2val:0x3ea67cef;
op3val:0x3e07f5d1; valaddr_reg:x12; val_offset:2682*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2682*FLEN/8, x13, x9, x10)

inst_916:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x510f19 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x267cef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07f5d1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed10f19; op2val:0x3ea67cef;
op3val:0x3e07f5d1; valaddr_reg:x12; val_offset:2685*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2685*FLEN/8, x13, x9, x10)

inst_917:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x510f19 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x267cef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07f5d1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed10f19; op2val:0x3ea67cef;
op3val:0x3e07f5d1; valaddr_reg:x12; val_offset:2688*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2688*FLEN/8, x13, x9, x10)

inst_918:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x510f19 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x267cef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07f5d1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed10f19; op2val:0x3ea67cef;
op3val:0x3e07f5d1; valaddr_reg:x12; val_offset:2691*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2691*FLEN/8, x13, x9, x10)

inst_919:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x510f19 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x267cef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07f5d1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed10f19; op2val:0x3ea67cef;
op3val:0x3e07f5d1; valaddr_reg:x12; val_offset:2694*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2694*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_7)

inst_920:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x337c3e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x13ad10 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f135c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb37c3e; op2val:0x3f13ad10;
op3val:0x3e4f135c; valaddr_reg:x12; val_offset:2697*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2697*FLEN/8, x13, x9, x10)

inst_921:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x337c3e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x13ad10 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f135c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb37c3e; op2val:0x3f13ad10;
op3val:0x3e4f135c; valaddr_reg:x12; val_offset:2700*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2700*FLEN/8, x13, x9, x10)

inst_922:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x337c3e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x13ad10 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f135c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb37c3e; op2val:0x3f13ad10;
op3val:0x3e4f135c; valaddr_reg:x12; val_offset:2703*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2703*FLEN/8, x13, x9, x10)

inst_923:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x337c3e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x13ad10 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f135c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb37c3e; op2val:0x3f13ad10;
op3val:0x3e4f135c; valaddr_reg:x12; val_offset:2706*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2706*FLEN/8, x13, x9, x10)

inst_924:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x337c3e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x13ad10 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f135c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb37c3e; op2val:0x3f13ad10;
op3val:0x3e4f135c; valaddr_reg:x12; val_offset:2709*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2709*FLEN/8, x13, x9, x10)

inst_925:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6eeb38 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6e3b48 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e5602 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6eeb38; op2val:0x3f6e3b48;
op3val:0x3f5e5602; valaddr_reg:x12; val_offset:2712*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2712*FLEN/8, x13, x9, x10)

inst_926:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6eeb38 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6e3b48 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e5602 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6eeb38; op2val:0x3f6e3b48;
op3val:0x3f5e5602; valaddr_reg:x12; val_offset:2715*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2715*FLEN/8, x13, x9, x10)

inst_927:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6eeb38 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6e3b48 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e5602 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6eeb38; op2val:0x3f6e3b48;
op3val:0x3f5e5602; valaddr_reg:x12; val_offset:2718*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2718*FLEN/8, x13, x9, x10)

inst_928:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6eeb38 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6e3b48 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e5602 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6eeb38; op2val:0x3f6e3b48;
op3val:0x3f5e5602; valaddr_reg:x12; val_offset:2721*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2721*FLEN/8, x13, x9, x10)

inst_929:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6eeb38 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6e3b48 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e5602 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6eeb38; op2val:0x3f6e3b48;
op3val:0x3f5e5602; valaddr_reg:x12; val_offset:2724*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2724*FLEN/8, x13, x9, x10)

inst_930:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63fdcd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x642b5c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b34a9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f63fdcd; op2val:0x3ee42b5c;
op3val:0x3ecb34a9; valaddr_reg:x12; val_offset:2727*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2727*FLEN/8, x13, x9, x10)

inst_931:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63fdcd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x642b5c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b34a9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f63fdcd; op2val:0x3ee42b5c;
op3val:0x3ecb34a9; valaddr_reg:x12; val_offset:2730*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2730*FLEN/8, x13, x9, x10)

inst_932:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63fdcd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x642b5c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b34a9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f63fdcd; op2val:0x3ee42b5c;
op3val:0x3ecb34a9; valaddr_reg:x12; val_offset:2733*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2733*FLEN/8, x13, x9, x10)

inst_933:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63fdcd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x642b5c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b34a9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f63fdcd; op2val:0x3ee42b5c;
op3val:0x3ecb34a9; valaddr_reg:x12; val_offset:2736*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2736*FLEN/8, x13, x9, x10)

inst_934:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63fdcd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x642b5c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b34a9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f63fdcd; op2val:0x3ee42b5c;
op3val:0x3ecb34a9; valaddr_reg:x12; val_offset:2739*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2739*FLEN/8, x13, x9, x10)

inst_935:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0f88fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x40e14e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x584a1e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8f88fa; op2val:0x4040e14e;
op3val:0x3f584a1e; valaddr_reg:x12; val_offset:2742*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2742*FLEN/8, x13, x9, x10)

inst_936:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0f88fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x40e14e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x584a1e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8f88fa; op2val:0x4040e14e;
op3val:0x3f584a1e; valaddr_reg:x12; val_offset:2745*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2745*FLEN/8, x13, x9, x10)

inst_937:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0f88fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x40e14e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x584a1e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8f88fa; op2val:0x4040e14e;
op3val:0x3f584a1e; valaddr_reg:x12; val_offset:2748*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2748*FLEN/8, x13, x9, x10)

inst_938:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0f88fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x40e14e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x584a1e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8f88fa; op2val:0x4040e14e;
op3val:0x3f584a1e; valaddr_reg:x12; val_offset:2751*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2751*FLEN/8, x13, x9, x10)

inst_939:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0f88fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x40e14e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x584a1e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8f88fa; op2val:0x4040e14e;
op3val:0x3f584a1e; valaddr_reg:x12; val_offset:2754*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2754*FLEN/8, x13, x9, x10)

inst_940:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d5ea7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654668 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62eb5a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd5ea7; op2val:0x3fe54668;
op3val:0x3f62eb5a; valaddr_reg:x12; val_offset:2757*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2757*FLEN/8, x13, x9, x10)

inst_941:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d5ea7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654668 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62eb5a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd5ea7; op2val:0x3fe54668;
op3val:0x3f62eb5a; valaddr_reg:x12; val_offset:2760*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2760*FLEN/8, x13, x9, x10)

inst_942:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d5ea7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654668 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62eb5a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd5ea7; op2val:0x3fe54668;
op3val:0x3f62eb5a; valaddr_reg:x12; val_offset:2763*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2763*FLEN/8, x13, x9, x10)

inst_943:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d5ea7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654668 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62eb5a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd5ea7; op2val:0x3fe54668;
op3val:0x3f62eb5a; valaddr_reg:x12; val_offset:2766*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2766*FLEN/8, x13, x9, x10)

inst_944:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d5ea7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654668 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62eb5a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd5ea7; op2val:0x3fe54668;
op3val:0x3f62eb5a; valaddr_reg:x12; val_offset:2769*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2769*FLEN/8, x13, x9, x10)

inst_945:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff6c0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x350fb7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x624690 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ff6c0; op2val:0x3f350fb7;
op3val:0x3e624690; valaddr_reg:x12; val_offset:2772*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2772*FLEN/8, x13, x9, x10)

inst_946:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff6c0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x350fb7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x624690 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ff6c0; op2val:0x3f350fb7;
op3val:0x3e624690; valaddr_reg:x12; val_offset:2775*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2775*FLEN/8, x13, x9, x10)

inst_947:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff6c0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x350fb7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x624690 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ff6c0; op2val:0x3f350fb7;
op3val:0x3e624690; valaddr_reg:x12; val_offset:2778*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2778*FLEN/8, x13, x9, x10)

inst_948:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff6c0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x350fb7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x624690 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ff6c0; op2val:0x3f350fb7;
op3val:0x3e624690; valaddr_reg:x12; val_offset:2781*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2781*FLEN/8, x13, x9, x10)

inst_949:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff6c0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x350fb7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x624690 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ff6c0; op2val:0x3f350fb7;
op3val:0x3e624690; valaddr_reg:x12; val_offset:2784*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2784*FLEN/8, x13, x9, x10)

inst_950:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69d00b and fs2 == 0 and fe2 == 0x79 and fm2 == 0x334d2c and fs3 == 0 and fe3 == 0x79 and fm3 == 0x23c2f4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69d00b; op2val:0x3cb34d2c;
op3val:0x3ca3c2f4; valaddr_reg:x12; val_offset:2787*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2787*FLEN/8, x13, x9, x10)

inst_951:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69d00b and fs2 == 0 and fe2 == 0x79 and fm2 == 0x334d2c and fs3 == 0 and fe3 == 0x79 and fm3 == 0x23c2f4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69d00b; op2val:0x3cb34d2c;
op3val:0x3ca3c2f4; valaddr_reg:x12; val_offset:2790*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2790*FLEN/8, x13, x9, x10)

inst_952:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69d00b and fs2 == 0 and fe2 == 0x79 and fm2 == 0x334d2c and fs3 == 0 and fe3 == 0x79 and fm3 == 0x23c2f4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69d00b; op2val:0x3cb34d2c;
op3val:0x3ca3c2f4; valaddr_reg:x12; val_offset:2793*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2793*FLEN/8, x13, x9, x10)

inst_953:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69d00b and fs2 == 0 and fe2 == 0x79 and fm2 == 0x334d2c and fs3 == 0 and fe3 == 0x79 and fm3 == 0x23c2f4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69d00b; op2val:0x3cb34d2c;
op3val:0x3ca3c2f4; valaddr_reg:x12; val_offset:2796*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2796*FLEN/8, x13, x9, x10)

inst_954:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69d00b and fs2 == 0 and fe2 == 0x79 and fm2 == 0x334d2c and fs3 == 0 and fe3 == 0x79 and fm3 == 0x23c2f4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69d00b; op2val:0x3cb34d2c;
op3val:0x3ca3c2f4; valaddr_reg:x12; val_offset:2799*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2799*FLEN/8, x13, x9, x10)

inst_955:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b92a7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2722c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6007f4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab92a7; op2val:0x402722c7;
op3val:0x3f6007f4; valaddr_reg:x12; val_offset:2802*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2802*FLEN/8, x13, x9, x10)

inst_956:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b92a7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2722c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6007f4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab92a7; op2val:0x402722c7;
op3val:0x3f6007f4; valaddr_reg:x12; val_offset:2805*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2805*FLEN/8, x13, x9, x10)

inst_957:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b92a7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2722c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6007f4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab92a7; op2val:0x402722c7;
op3val:0x3f6007f4; valaddr_reg:x12; val_offset:2808*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2808*FLEN/8, x13, x9, x10)

inst_958:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b92a7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2722c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6007f4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab92a7; op2val:0x402722c7;
op3val:0x3f6007f4; valaddr_reg:x12; val_offset:2811*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2811*FLEN/8, x13, x9, x10)

inst_959:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b92a7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2722c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6007f4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab92a7; op2val:0x402722c7;
op3val:0x3f6007f4; valaddr_reg:x12; val_offset:2814*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2814*FLEN/8, x13, x9, x10)

inst_960:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x262242 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x260696 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x577cfb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f262242; op2val:0x3fa60696;
op3val:0x3f577cfb; valaddr_reg:x12; val_offset:2817*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2817*FLEN/8, x13, x9, x10)

inst_961:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x262242 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x260696 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x577cfb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f262242; op2val:0x3fa60696;
op3val:0x3f577cfb; valaddr_reg:x12; val_offset:2820*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2820*FLEN/8, x13, x9, x10)

inst_962:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x262242 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x260696 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x577cfb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f262242; op2val:0x3fa60696;
op3val:0x3f577cfb; valaddr_reg:x12; val_offset:2823*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2823*FLEN/8, x13, x9, x10)

inst_963:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x262242 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x260696 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x577cfb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f262242; op2val:0x3fa60696;
op3val:0x3f577cfb; valaddr_reg:x12; val_offset:2826*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2826*FLEN/8, x13, x9, x10)

inst_964:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x262242 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x260696 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x577cfb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f262242; op2val:0x3fa60696;
op3val:0x3f577cfb; valaddr_reg:x12; val_offset:2829*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2829*FLEN/8, x13, x9, x10)

inst_965:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b4851 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1cb32b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2a8319 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b4851; op2val:0x3e9cb32b;
op3val:0x3daa8319; valaddr_reg:x12; val_offset:2832*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2832*FLEN/8, x13, x9, x10)

inst_966:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b4851 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1cb32b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2a8319 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b4851; op2val:0x3e9cb32b;
op3val:0x3daa8319; valaddr_reg:x12; val_offset:2835*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2835*FLEN/8, x13, x9, x10)

inst_967:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b4851 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1cb32b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2a8319 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b4851; op2val:0x3e9cb32b;
op3val:0x3daa8319; valaddr_reg:x12; val_offset:2838*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2838*FLEN/8, x13, x9, x10)

inst_968:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b4851 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1cb32b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2a8319 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b4851; op2val:0x3e9cb32b;
op3val:0x3daa8319; valaddr_reg:x12; val_offset:2841*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2841*FLEN/8, x13, x9, x10)

inst_969:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b4851 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1cb32b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2a8319 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b4851; op2val:0x3e9cb32b;
op3val:0x3daa8319; valaddr_reg:x12; val_offset:2844*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2844*FLEN/8, x13, x9, x10)

inst_970:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x532a7a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d3cf1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x50e33f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f532a7a; op2val:0x3f7d3cf1;
op3val:0x3f50e33f; valaddr_reg:x12; val_offset:2847*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2847*FLEN/8, x13, x9, x10)

inst_971:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x532a7a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d3cf1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x50e33f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f532a7a; op2val:0x3f7d3cf1;
op3val:0x3f50e33f; valaddr_reg:x12; val_offset:2850*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2850*FLEN/8, x13, x9, x10)

inst_972:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x532a7a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d3cf1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x50e33f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f532a7a; op2val:0x3f7d3cf1;
op3val:0x3f50e33f; valaddr_reg:x12; val_offset:2853*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2853*FLEN/8, x13, x9, x10)

inst_973:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x532a7a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d3cf1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x50e33f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f532a7a; op2val:0x3f7d3cf1;
op3val:0x3f50e33f; valaddr_reg:x12; val_offset:2856*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2856*FLEN/8, x13, x9, x10)

inst_974:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x532a7a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d3cf1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x50e33f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f532a7a; op2val:0x3f7d3cf1;
op3val:0x3f50e33f; valaddr_reg:x12; val_offset:2859*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2859*FLEN/8, x13, x9, x10)

inst_975:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e032d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x41d526 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fde9a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe032d; op2val:0x3ec1d526;
op3val:0x3e0fde9a; valaddr_reg:x12; val_offset:2862*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2862*FLEN/8, x13, x9, x10)

inst_976:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e032d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x41d526 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fde9a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe032d; op2val:0x3ec1d526;
op3val:0x3e0fde9a; valaddr_reg:x12; val_offset:2865*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2865*FLEN/8, x13, x9, x10)

inst_977:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e032d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x41d526 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fde9a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe032d; op2val:0x3ec1d526;
op3val:0x3e0fde9a; valaddr_reg:x12; val_offset:2868*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2868*FLEN/8, x13, x9, x10)

inst_978:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e032d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x41d526 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fde9a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe032d; op2val:0x3ec1d526;
op3val:0x3e0fde9a; valaddr_reg:x12; val_offset:2871*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2871*FLEN/8, x13, x9, x10)

inst_979:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e032d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x41d526 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fde9a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe032d; op2val:0x3ec1d526;
op3val:0x3e0fde9a; valaddr_reg:x12; val_offset:2874*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2874*FLEN/8, x13, x9, x10)

inst_980:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x05a789 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x04f061 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0acfc5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e85a789; op2val:0x4004f061;
op3val:0x3f0acfc5; valaddr_reg:x12; val_offset:2877*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2877*FLEN/8, x13, x9, x10)

inst_981:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x05a789 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x04f061 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0acfc5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e85a789; op2val:0x4004f061;
op3val:0x3f0acfc5; valaddr_reg:x12; val_offset:2880*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2880*FLEN/8, x13, x9, x10)

inst_982:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x05a789 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x04f061 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0acfc5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e85a789; op2val:0x4004f061;
op3val:0x3f0acfc5; valaddr_reg:x12; val_offset:2883*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2883*FLEN/8, x13, x9, x10)

inst_983:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x05a789 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x04f061 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0acfc5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e85a789; op2val:0x4004f061;
op3val:0x3f0acfc5; valaddr_reg:x12; val_offset:2886*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2886*FLEN/8, x13, x9, x10)

inst_984:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x05a789 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x04f061 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0acfc5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e85a789; op2val:0x4004f061;
op3val:0x3f0acfc5; valaddr_reg:x12; val_offset:2889*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2889*FLEN/8, x13, x9, x10)

inst_985:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63b57c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5e1d85 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4591a4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f63b57c; op2val:0x3ede1d85;
op3val:0x3ec591a4; valaddr_reg:x12; val_offset:2892*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2892*FLEN/8, x13, x9, x10)

inst_986:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63b57c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5e1d85 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4591a4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f63b57c; op2val:0x3ede1d85;
op3val:0x3ec591a4; valaddr_reg:x12; val_offset:2895*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2895*FLEN/8, x13, x9, x10)

inst_987:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63b57c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5e1d85 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4591a4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f63b57c; op2val:0x3ede1d85;
op3val:0x3ec591a4; valaddr_reg:x12; val_offset:2898*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2898*FLEN/8, x13, x9, x10)

inst_988:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63b57c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5e1d85 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4591a4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f63b57c; op2val:0x3ede1d85;
op3val:0x3ec591a4; valaddr_reg:x12; val_offset:2901*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2901*FLEN/8, x13, x9, x10)

inst_989:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63b57c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5e1d85 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4591a4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f63b57c; op2val:0x3ede1d85;
op3val:0x3ec591a4; valaddr_reg:x12; val_offset:2904*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2904*FLEN/8, x13, x9, x10)

inst_990:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b6079 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x388821 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x48eee8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b6079; op2val:0x3eb88821;
op3val:0x3e48eee8; valaddr_reg:x12; val_offset:2907*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2907*FLEN/8, x13, x9, x10)

inst_991:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b6079 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x388821 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x48eee8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b6079; op2val:0x3eb88821;
op3val:0x3e48eee8; valaddr_reg:x12; val_offset:2910*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2910*FLEN/8, x13, x9, x10)

inst_992:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b6079 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x388821 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x48eee8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b6079; op2val:0x3eb88821;
op3val:0x3e48eee8; valaddr_reg:x12; val_offset:2913*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2913*FLEN/8, x13, x9, x10)

inst_993:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b6079 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x388821 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x48eee8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b6079; op2val:0x3eb88821;
op3val:0x3e48eee8; valaddr_reg:x12; val_offset:2916*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2916*FLEN/8, x13, x9, x10)

inst_994:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b6079 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x388821 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x48eee8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b6079; op2val:0x3eb88821;
op3val:0x3e48eee8; valaddr_reg:x12; val_offset:2919*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2919*FLEN/8, x13, x9, x10)

inst_995:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5b2f70 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1f1390 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x083336 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edb2f70; op2val:0x3f1f1390;
op3val:0x3e883336; valaddr_reg:x12; val_offset:2922*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2922*FLEN/8, x13, x9, x10)

inst_996:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5b2f70 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1f1390 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x083336 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edb2f70; op2val:0x3f1f1390;
op3val:0x3e883336; valaddr_reg:x12; val_offset:2925*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2925*FLEN/8, x13, x9, x10)

inst_997:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5b2f70 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1f1390 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x083336 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edb2f70; op2val:0x3f1f1390;
op3val:0x3e883336; valaddr_reg:x12; val_offset:2928*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2928*FLEN/8, x13, x9, x10)

inst_998:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5b2f70 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1f1390 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x083336 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edb2f70; op2val:0x3f1f1390;
op3val:0x3e883336; valaddr_reg:x12; val_offset:2931*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2931*FLEN/8, x13, x9, x10)

inst_999:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5b2f70 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1f1390 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x083336 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edb2f70; op2val:0x3f1f1390;
op3val:0x3e883336; valaddr_reg:x12; val_offset:2934*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2934*FLEN/8, x13, x9, x10)

inst_1000:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6cc3da and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f0d25 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3f7e86 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cecc3da; op2val:0x414f0d25;
op3val:0x3ebf7e86; valaddr_reg:x12; val_offset:2937*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2937*FLEN/8, x13, x9, x10)

inst_1001:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6cc3da and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f0d25 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3f7e86 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cecc3da; op2val:0x414f0d25;
op3val:0x3ebf7e86; valaddr_reg:x12; val_offset:2940*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2940*FLEN/8, x13, x9, x10)

inst_1002:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6cc3da and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f0d25 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3f7e86 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cecc3da; op2val:0x414f0d25;
op3val:0x3ebf7e86; valaddr_reg:x12; val_offset:2943*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2943*FLEN/8, x13, x9, x10)

inst_1003:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6cc3da and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f0d25 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3f7e86 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cecc3da; op2val:0x414f0d25;
op3val:0x3ebf7e86; valaddr_reg:x12; val_offset:2946*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2946*FLEN/8, x13, x9, x10)

inst_1004:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6cc3da and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f0d25 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3f7e86 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cecc3da; op2val:0x414f0d25;
op3val:0x3ebf7e86; valaddr_reg:x12; val_offset:2949*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2949*FLEN/8, x13, x9, x10)

inst_1005:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x34e470 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0384ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x39ddbf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db4e470; op2val:0x410384ff;
op3val:0x3f39ddbf; valaddr_reg:x12; val_offset:2952*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2952*FLEN/8, x13, x9, x10)

inst_1006:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x34e470 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0384ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x39ddbf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db4e470; op2val:0x410384ff;
op3val:0x3f39ddbf; valaddr_reg:x12; val_offset:2955*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2955*FLEN/8, x13, x9, x10)

inst_1007:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x34e470 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0384ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x39ddbf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db4e470; op2val:0x410384ff;
op3val:0x3f39ddbf; valaddr_reg:x12; val_offset:2958*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2958*FLEN/8, x13, x9, x10)

inst_1008:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x34e470 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0384ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x39ddbf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db4e470; op2val:0x410384ff;
op3val:0x3f39ddbf; valaddr_reg:x12; val_offset:2961*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2961*FLEN/8, x13, x9, x10)

inst_1009:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x34e470 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0384ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x39ddbf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db4e470; op2val:0x410384ff;
op3val:0x3f39ddbf; valaddr_reg:x12; val_offset:2964*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2964*FLEN/8, x13, x9, x10)

inst_1010:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f9b81 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x713520 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x70d670 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f9b81; op2val:0x3df13520;
op3val:0x3df0d670; valaddr_reg:x12; val_offset:2967*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2967*FLEN/8, x13, x9, x10)

inst_1011:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f9b81 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x713520 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x70d670 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f9b81; op2val:0x3df13520;
op3val:0x3df0d670; valaddr_reg:x12; val_offset:2970*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2970*FLEN/8, x13, x9, x10)

inst_1012:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f9b81 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x713520 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x70d670 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f9b81; op2val:0x3df13520;
op3val:0x3df0d670; valaddr_reg:x12; val_offset:2973*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2973*FLEN/8, x13, x9, x10)

inst_1013:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f9b81 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x713520 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x70d670 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f9b81; op2val:0x3df13520;
op3val:0x3df0d670; valaddr_reg:x12; val_offset:2976*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2976*FLEN/8, x13, x9, x10)

inst_1014:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f9b81 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x713520 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x70d670 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f9b81; op2val:0x3df13520;
op3val:0x3df0d670; valaddr_reg:x12; val_offset:2979*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2979*FLEN/8, x13, x9, x10)

inst_1015:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x785a0e and fs2 == 0 and fe2 == 0x77 and fm2 == 0x56f751 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x508b35 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f785a0e; op2val:0x3bd6f751;
op3val:0x3bd08b35; valaddr_reg:x12; val_offset:2982*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2982*FLEN/8, x13, x9, x10)

inst_1016:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x785a0e and fs2 == 0 and fe2 == 0x77 and fm2 == 0x56f751 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x508b35 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f785a0e; op2val:0x3bd6f751;
op3val:0x3bd08b35; valaddr_reg:x12; val_offset:2985*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2985*FLEN/8, x13, x9, x10)

inst_1017:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x785a0e and fs2 == 0 and fe2 == 0x77 and fm2 == 0x56f751 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x508b35 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f785a0e; op2val:0x3bd6f751;
op3val:0x3bd08b35; valaddr_reg:x12; val_offset:2988*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2988*FLEN/8, x13, x9, x10)

inst_1018:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x785a0e and fs2 == 0 and fe2 == 0x77 and fm2 == 0x56f751 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x508b35 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f785a0e; op2val:0x3bd6f751;
op3val:0x3bd08b35; valaddr_reg:x12; val_offset:2991*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2991*FLEN/8, x13, x9, x10)

inst_1019:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x785a0e and fs2 == 0 and fe2 == 0x77 and fm2 == 0x56f751 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x508b35 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f785a0e; op2val:0x3bd6f751;
op3val:0x3bd08b35; valaddr_reg:x12; val_offset:2994*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2994*FLEN/8, x13, x9, x10)

inst_1020:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b544e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5cc560 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x704fbf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b544e; op2val:0x3fdcc560;
op3val:0x3f704fbf; valaddr_reg:x12; val_offset:2997*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2997*FLEN/8, x13, x9, x10)

inst_1021:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b544e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5cc560 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x704fbf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b544e; op2val:0x3fdcc560;
op3val:0x3f704fbf; valaddr_reg:x12; val_offset:3000*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3000*FLEN/8, x13, x9, x10)

inst_1022:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b544e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5cc560 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x704fbf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b544e; op2val:0x3fdcc560;
op3val:0x3f704fbf; valaddr_reg:x12; val_offset:3003*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3003*FLEN/8, x13, x9, x10)

inst_1023:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b544e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5cc560 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x704fbf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b544e; op2val:0x3fdcc560;
op3val:0x3f704fbf; valaddr_reg:x12; val_offset:3006*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3006*FLEN/8, x13, x9, x10)

inst_1024:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b544e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5cc560 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x704fbf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b544e; op2val:0x3fdcc560;
op3val:0x3f704fbf; valaddr_reg:x12; val_offset:3009*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3009*FLEN/8, x13, x9, x10)

inst_1025:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39b000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x44b8ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0eb0b3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39b000; op2val:0x3ec4b8ac;
op3val:0x3e8eb0b3; valaddr_reg:x12; val_offset:3012*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3012*FLEN/8, x13, x9, x10)

inst_1026:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39b000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x44b8ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0eb0b3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39b000; op2val:0x3ec4b8ac;
op3val:0x3e8eb0b3; valaddr_reg:x12; val_offset:3015*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3015*FLEN/8, x13, x9, x10)

inst_1027:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39b000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x44b8ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0eb0b3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39b000; op2val:0x3ec4b8ac;
op3val:0x3e8eb0b3; valaddr_reg:x12; val_offset:3018*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3018*FLEN/8, x13, x9, x10)

inst_1028:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39b000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x44b8ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0eb0b3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39b000; op2val:0x3ec4b8ac;
op3val:0x3e8eb0b3; valaddr_reg:x12; val_offset:3021*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3021*FLEN/8, x13, x9, x10)

inst_1029:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39b000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x44b8ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0eb0b3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39b000; op2val:0x3ec4b8ac;
op3val:0x3e8eb0b3; valaddr_reg:x12; val_offset:3024*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3024*FLEN/8, x13, x9, x10)

inst_1030:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dad82 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1c588a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x409889 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1dad82; op2val:0x3f1c588a;
op3val:0x3ec09889; valaddr_reg:x12; val_offset:3027*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3027*FLEN/8, x13, x9, x10)

inst_1031:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dad82 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1c588a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x409889 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1dad82; op2val:0x3f1c588a;
op3val:0x3ec09889; valaddr_reg:x12; val_offset:3030*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3030*FLEN/8, x13, x9, x10)

inst_1032:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dad82 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1c588a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x409889 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1dad82; op2val:0x3f1c588a;
op3val:0x3ec09889; valaddr_reg:x12; val_offset:3033*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3033*FLEN/8, x13, x9, x10)

inst_1033:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dad82 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1c588a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x409889 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1dad82; op2val:0x3f1c588a;
op3val:0x3ec09889; valaddr_reg:x12; val_offset:3036*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3036*FLEN/8, x13, x9, x10)

inst_1034:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dad82 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1c588a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x409889 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1dad82; op2val:0x3f1c588a;
op3val:0x3ec09889; valaddr_reg:x12; val_offset:3039*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3039*FLEN/8, x13, x9, x10)

inst_1035:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65e7e5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3b672e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x284d0e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f65e7e5; op2val:0x3e3b672e;
op3val:0x3e284d0e; valaddr_reg:x12; val_offset:3042*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3042*FLEN/8, x13, x9, x10)

inst_1036:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65e7e5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3b672e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x284d0e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f65e7e5; op2val:0x3e3b672e;
op3val:0x3e284d0e; valaddr_reg:x12; val_offset:3045*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3045*FLEN/8, x13, x9, x10)

inst_1037:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65e7e5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3b672e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x284d0e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f65e7e5; op2val:0x3e3b672e;
op3val:0x3e284d0e; valaddr_reg:x12; val_offset:3048*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3048*FLEN/8, x13, x9, x10)

inst_1038:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65e7e5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3b672e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x284d0e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f65e7e5; op2val:0x3e3b672e;
op3val:0x3e284d0e; valaddr_reg:x12; val_offset:3051*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3051*FLEN/8, x13, x9, x10)

inst_1039:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65e7e5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3b672e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x284d0e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f65e7e5; op2val:0x3e3b672e;
op3val:0x3e284d0e; valaddr_reg:x12; val_offset:3054*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3054*FLEN/8, x13, x9, x10)

inst_1040:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20790e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x089613 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b3cc6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20790e; op2val:0x3e889613;
op3val:0x3e2b3cc6; valaddr_reg:x12; val_offset:3057*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3057*FLEN/8, x13, x9, x10)

inst_1041:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20790e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x089613 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b3cc6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20790e; op2val:0x3e889613;
op3val:0x3e2b3cc6; valaddr_reg:x12; val_offset:3060*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3060*FLEN/8, x13, x9, x10)

inst_1042:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20790e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x089613 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b3cc6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20790e; op2val:0x3e889613;
op3val:0x3e2b3cc6; valaddr_reg:x12; val_offset:3063*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3063*FLEN/8, x13, x9, x10)

inst_1043:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20790e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x089613 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b3cc6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20790e; op2val:0x3e889613;
op3val:0x3e2b3cc6; valaddr_reg:x12; val_offset:3066*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3066*FLEN/8, x13, x9, x10)

inst_1044:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20790e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x089613 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b3cc6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20790e; op2val:0x3e889613;
op3val:0x3e2b3cc6; valaddr_reg:x12; val_offset:3069*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3069*FLEN/8, x13, x9, x10)

inst_1045:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a4a19 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x47c53a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a57c7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a4a19; op2val:0x3ec7c53a;
op3val:0x3eaa57c7; valaddr_reg:x12; val_offset:3072*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3072*FLEN/8, x13, x9, x10)

inst_1046:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a4a19 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x47c53a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a57c7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a4a19; op2val:0x3ec7c53a;
op3val:0x3eaa57c7; valaddr_reg:x12; val_offset:3075*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3075*FLEN/8, x13, x9, x10)

inst_1047:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a4a19 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x47c53a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a57c7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a4a19; op2val:0x3ec7c53a;
op3val:0x3eaa57c7; valaddr_reg:x12; val_offset:3078*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3078*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_8)

inst_1048:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a4a19 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x47c53a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a57c7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a4a19; op2val:0x3ec7c53a;
op3val:0x3eaa57c7; valaddr_reg:x12; val_offset:3081*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3081*FLEN/8, x13, x9, x10)

inst_1049:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a4a19 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x47c53a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a57c7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a4a19; op2val:0x3ec7c53a;
op3val:0x3eaa57c7; valaddr_reg:x12; val_offset:3084*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3084*FLEN/8, x13, x9, x10)

inst_1050:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eeae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0f9234 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1877eb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07eeae; op2val:0x3f8f9234;
op3val:0x3f1877eb; valaddr_reg:x12; val_offset:3087*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3087*FLEN/8, x13, x9, x10)

inst_1051:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eeae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0f9234 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1877eb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07eeae; op2val:0x3f8f9234;
op3val:0x3f1877eb; valaddr_reg:x12; val_offset:3090*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3090*FLEN/8, x13, x9, x10)

inst_1052:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eeae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0f9234 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1877eb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07eeae; op2val:0x3f8f9234;
op3val:0x3f1877eb; valaddr_reg:x12; val_offset:3093*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3093*FLEN/8, x13, x9, x10)

inst_1053:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eeae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0f9234 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1877eb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07eeae; op2val:0x3f8f9234;
op3val:0x3f1877eb; valaddr_reg:x12; val_offset:3096*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3096*FLEN/8, x13, x9, x10)

inst_1054:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eeae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0f9234 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1877eb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07eeae; op2val:0x3f8f9234;
op3val:0x3f1877eb; valaddr_reg:x12; val_offset:3099*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3099*FLEN/8, x13, x9, x10)

inst_1055:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b0cf1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x747d91 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6fc37a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7b0cf1; op2val:0x3ef47d91;
op3val:0x3eefc37a; valaddr_reg:x12; val_offset:3102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3102*FLEN/8, x13, x9, x10)

inst_1056:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b0cf1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x747d91 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6fc37a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7b0cf1; op2val:0x3ef47d91;
op3val:0x3eefc37a; valaddr_reg:x12; val_offset:3105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3105*FLEN/8, x13, x9, x10)

inst_1057:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b0cf1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x747d91 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6fc37a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7b0cf1; op2val:0x3ef47d91;
op3val:0x3eefc37a; valaddr_reg:x12; val_offset:3108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3108*FLEN/8, x13, x9, x10)

inst_1058:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b0cf1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x747d91 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6fc37a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7b0cf1; op2val:0x3ef47d91;
op3val:0x3eefc37a; valaddr_reg:x12; val_offset:3111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3111*FLEN/8, x13, x9, x10)

inst_1059:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b0cf1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x747d91 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6fc37a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7b0cf1; op2val:0x3ef47d91;
op3val:0x3eefc37a; valaddr_reg:x12; val_offset:3114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3114*FLEN/8, x13, x9, x10)

inst_1060:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25d6f7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x311056 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65686d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e25d6f7; op2val:0x40b11056;
op3val:0x3f65686d; valaddr_reg:x12; val_offset:3117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3117*FLEN/8, x13, x9, x10)

inst_1061:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25d6f7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x311056 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65686d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e25d6f7; op2val:0x40b11056;
op3val:0x3f65686d; valaddr_reg:x12; val_offset:3120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3120*FLEN/8, x13, x9, x10)

inst_1062:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25d6f7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x311056 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65686d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e25d6f7; op2val:0x40b11056;
op3val:0x3f65686d; valaddr_reg:x12; val_offset:3123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3123*FLEN/8, x13, x9, x10)

inst_1063:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25d6f7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x311056 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65686d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e25d6f7; op2val:0x40b11056;
op3val:0x3f65686d; valaddr_reg:x12; val_offset:3126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3126*FLEN/8, x13, x9, x10)

inst_1064:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25d6f7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x311056 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65686d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e25d6f7; op2val:0x40b11056;
op3val:0x3f65686d; valaddr_reg:x12; val_offset:3129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3129*FLEN/8, x13, x9, x10)

inst_1065:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0de25f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x64127a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ccfb5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0de25f; op2val:0x3fe4127a;
op3val:0x3f7ccfb5; valaddr_reg:x12; val_offset:3132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3132*FLEN/8, x13, x9, x10)

inst_1066:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0de25f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x64127a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ccfb5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0de25f; op2val:0x3fe4127a;
op3val:0x3f7ccfb5; valaddr_reg:x12; val_offset:3135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3135*FLEN/8, x13, x9, x10)

inst_1067:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0de25f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x64127a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ccfb5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0de25f; op2val:0x3fe4127a;
op3val:0x3f7ccfb5; valaddr_reg:x12; val_offset:3138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3138*FLEN/8, x13, x9, x10)

inst_1068:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0de25f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x64127a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ccfb5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0de25f; op2val:0x3fe4127a;
op3val:0x3f7ccfb5; valaddr_reg:x12; val_offset:3141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3141*FLEN/8, x13, x9, x10)

inst_1069:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0de25f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x64127a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ccfb5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0de25f; op2val:0x3fe4127a;
op3val:0x3f7ccfb5; valaddr_reg:x12; val_offset:3144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3144*FLEN/8, x13, x9, x10)

inst_1070:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x40d6b0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x25cbd6 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x79c7d7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bc0d6b0; op2val:0x40a5cbd6;
op3val:0x3cf9c7d7; valaddr_reg:x12; val_offset:3147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3147*FLEN/8, x13, x9, x10)

inst_1071:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x40d6b0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x25cbd6 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x79c7d7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bc0d6b0; op2val:0x40a5cbd6;
op3val:0x3cf9c7d7; valaddr_reg:x12; val_offset:3150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3150*FLEN/8, x13, x9, x10)

inst_1072:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x40d6b0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x25cbd6 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x79c7d7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bc0d6b0; op2val:0x40a5cbd6;
op3val:0x3cf9c7d7; valaddr_reg:x12; val_offset:3153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3153*FLEN/8, x13, x9, x10)

inst_1073:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x40d6b0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x25cbd6 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x79c7d7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bc0d6b0; op2val:0x40a5cbd6;
op3val:0x3cf9c7d7; valaddr_reg:x12; val_offset:3156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3156*FLEN/8, x13, x9, x10)

inst_1074:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x40d6b0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x25cbd6 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x79c7d7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bc0d6b0; op2val:0x40a5cbd6;
op3val:0x3cf9c7d7; valaddr_reg:x12; val_offset:3159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3159*FLEN/8, x13, x9, x10)

inst_1075:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x24a6ea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4eee5d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05179f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea4a6ea; op2val:0x3fceee5d;
op3val:0x3f05179f; valaddr_reg:x12; val_offset:3162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3162*FLEN/8, x13, x9, x10)

inst_1076:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x24a6ea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4eee5d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05179f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea4a6ea; op2val:0x3fceee5d;
op3val:0x3f05179f; valaddr_reg:x12; val_offset:3165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3165*FLEN/8, x13, x9, x10)

inst_1077:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x24a6ea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4eee5d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05179f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea4a6ea; op2val:0x3fceee5d;
op3val:0x3f05179f; valaddr_reg:x12; val_offset:3168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3168*FLEN/8, x13, x9, x10)

inst_1078:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x24a6ea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4eee5d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05179f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea4a6ea; op2val:0x3fceee5d;
op3val:0x3f05179f; valaddr_reg:x12; val_offset:3171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3171*FLEN/8, x13, x9, x10)

inst_1079:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x24a6ea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4eee5d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05179f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea4a6ea; op2val:0x3fceee5d;
op3val:0x3f05179f; valaddr_reg:x12; val_offset:3174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3174*FLEN/8, x13, x9, x10)

inst_1080:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6dfbb9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x720a7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6101b4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6dfbb9; op2val:0x3f720a7b;
op3val:0x3f6101b4; valaddr_reg:x12; val_offset:3177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3177*FLEN/8, x13, x9, x10)

inst_1081:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6dfbb9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x720a7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6101b4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6dfbb9; op2val:0x3f720a7b;
op3val:0x3f6101b4; valaddr_reg:x12; val_offset:3180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3180*FLEN/8, x13, x9, x10)

inst_1082:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6dfbb9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x720a7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6101b4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6dfbb9; op2val:0x3f720a7b;
op3val:0x3f6101b4; valaddr_reg:x12; val_offset:3183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3183*FLEN/8, x13, x9, x10)

inst_1083:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6dfbb9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x720a7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6101b4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6dfbb9; op2val:0x3f720a7b;
op3val:0x3f6101b4; valaddr_reg:x12; val_offset:3186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3186*FLEN/8, x13, x9, x10)

inst_1084:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6dfbb9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x720a7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6101b4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6dfbb9; op2val:0x3f720a7b;
op3val:0x3f6101b4; valaddr_reg:x12; val_offset:3189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3189*FLEN/8, x13, x9, x10)

inst_1085:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1709c1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x325538 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x526e1f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9709c1; op2val:0x3f325538;
op3val:0x3e526e1f; valaddr_reg:x12; val_offset:3192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3192*FLEN/8, x13, x9, x10)

inst_1086:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1709c1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x325538 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x526e1f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9709c1; op2val:0x3f325538;
op3val:0x3e526e1f; valaddr_reg:x12; val_offset:3195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3195*FLEN/8, x13, x9, x10)

inst_1087:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1709c1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x325538 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x526e1f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9709c1; op2val:0x3f325538;
op3val:0x3e526e1f; valaddr_reg:x12; val_offset:3198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3198*FLEN/8, x13, x9, x10)

inst_1088:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1709c1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x325538 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x526e1f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9709c1; op2val:0x3f325538;
op3val:0x3e526e1f; valaddr_reg:x12; val_offset:3201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3201*FLEN/8, x13, x9, x10)

inst_1089:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1709c1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x325538 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x526e1f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9709c1; op2val:0x3f325538;
op3val:0x3e526e1f; valaddr_reg:x12; val_offset:3204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3204*FLEN/8, x13, x9, x10)

inst_1090:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x32e388 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4aa098 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0d97c2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c32e388; op2val:0x414aa098;
op3val:0x3e0d97c2; valaddr_reg:x12; val_offset:3207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3207*FLEN/8, x13, x9, x10)

inst_1091:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x32e388 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4aa098 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0d97c2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c32e388; op2val:0x414aa098;
op3val:0x3e0d97c2; valaddr_reg:x12; val_offset:3210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3210*FLEN/8, x13, x9, x10)

inst_1092:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x32e388 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4aa098 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0d97c2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c32e388; op2val:0x414aa098;
op3val:0x3e0d97c2; valaddr_reg:x12; val_offset:3213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3213*FLEN/8, x13, x9, x10)

inst_1093:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x32e388 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4aa098 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0d97c2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c32e388; op2val:0x414aa098;
op3val:0x3e0d97c2; valaddr_reg:x12; val_offset:3216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3216*FLEN/8, x13, x9, x10)

inst_1094:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x32e388 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4aa098 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0d97c2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c32e388; op2val:0x414aa098;
op3val:0x3e0d97c2; valaddr_reg:x12; val_offset:3219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3219*FLEN/8, x13, x9, x10)

inst_1095:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0fe4ca and fs2 == 0 and fe2 == 0x7f and fm2 == 0x299655 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ea513 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0fe4ca; op2val:0x3fa99655;
op3val:0x3f3ea513; valaddr_reg:x12; val_offset:3222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3222*FLEN/8, x13, x9, x10)

inst_1096:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0fe4ca and fs2 == 0 and fe2 == 0x7f and fm2 == 0x299655 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ea513 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0fe4ca; op2val:0x3fa99655;
op3val:0x3f3ea513; valaddr_reg:x12; val_offset:3225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3225*FLEN/8, x13, x9, x10)

inst_1097:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0fe4ca and fs2 == 0 and fe2 == 0x7f and fm2 == 0x299655 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ea513 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0fe4ca; op2val:0x3fa99655;
op3val:0x3f3ea513; valaddr_reg:x12; val_offset:3228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3228*FLEN/8, x13, x9, x10)

inst_1098:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0fe4ca and fs2 == 0 and fe2 == 0x7f and fm2 == 0x299655 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ea513 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0fe4ca; op2val:0x3fa99655;
op3val:0x3f3ea513; valaddr_reg:x12; val_offset:3231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3231*FLEN/8, x13, x9, x10)

inst_1099:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0fe4ca and fs2 == 0 and fe2 == 0x7f and fm2 == 0x299655 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ea513 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0fe4ca; op2val:0x3fa99655;
op3val:0x3f3ea513; valaddr_reg:x12; val_offset:3234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3234*FLEN/8, x13, x9, x10)

inst_1100:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6a93ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x36bd69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2772bb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eea93ee; op2val:0x3fb6bd69;
op3val:0x3f2772bb; valaddr_reg:x12; val_offset:3237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3237*FLEN/8, x13, x9, x10)

inst_1101:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6a93ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x36bd69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2772bb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eea93ee; op2val:0x3fb6bd69;
op3val:0x3f2772bb; valaddr_reg:x12; val_offset:3240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3240*FLEN/8, x13, x9, x10)

inst_1102:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6a93ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x36bd69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2772bb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eea93ee; op2val:0x3fb6bd69;
op3val:0x3f2772bb; valaddr_reg:x12; val_offset:3243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3243*FLEN/8, x13, x9, x10)

inst_1103:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6a93ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x36bd69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2772bb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eea93ee; op2val:0x3fb6bd69;
op3val:0x3f2772bb; valaddr_reg:x12; val_offset:3246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3246*FLEN/8, x13, x9, x10)

inst_1104:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6a93ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x36bd69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2772bb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eea93ee; op2val:0x3fb6bd69;
op3val:0x3f2772bb; valaddr_reg:x12; val_offset:3249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3249*FLEN/8, x13, x9, x10)

inst_1105:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x690ff7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02666a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6d6eb1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee90ff7; op2val:0x3e82666a;
op3val:0x3ded6eb1; valaddr_reg:x12; val_offset:3252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3252*FLEN/8, x13, x9, x10)

inst_1106:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x690ff7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02666a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6d6eb1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee90ff7; op2val:0x3e82666a;
op3val:0x3ded6eb1; valaddr_reg:x12; val_offset:3255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3255*FLEN/8, x13, x9, x10)

inst_1107:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x690ff7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02666a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6d6eb1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee90ff7; op2val:0x3e82666a;
op3val:0x3ded6eb1; valaddr_reg:x12; val_offset:3258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3258*FLEN/8, x13, x9, x10)

inst_1108:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x690ff7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02666a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6d6eb1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee90ff7; op2val:0x3e82666a;
op3val:0x3ded6eb1; valaddr_reg:x12; val_offset:3261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3261*FLEN/8, x13, x9, x10)

inst_1109:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x690ff7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02666a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6d6eb1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee90ff7; op2val:0x3e82666a;
op3val:0x3ded6eb1; valaddr_reg:x12; val_offset:3264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3264*FLEN/8, x13, x9, x10)

inst_1110:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c0b65 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x0cadec and fs3 == 0 and fe3 == 0x79 and fm3 == 0x19eac0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c0b65; op2val:0x3d0cadec;
op3val:0x3c99eac0; valaddr_reg:x12; val_offset:3267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3267*FLEN/8, x13, x9, x10)

inst_1111:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c0b65 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x0cadec and fs3 == 0 and fe3 == 0x79 and fm3 == 0x19eac0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c0b65; op2val:0x3d0cadec;
op3val:0x3c99eac0; valaddr_reg:x12; val_offset:3270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3270*FLEN/8, x13, x9, x10)

inst_1112:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c0b65 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x0cadec and fs3 == 0 and fe3 == 0x79 and fm3 == 0x19eac0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c0b65; op2val:0x3d0cadec;
op3val:0x3c99eac0; valaddr_reg:x12; val_offset:3273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3273*FLEN/8, x13, x9, x10)

inst_1113:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c0b65 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x0cadec and fs3 == 0 and fe3 == 0x79 and fm3 == 0x19eac0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c0b65; op2val:0x3d0cadec;
op3val:0x3c99eac0; valaddr_reg:x12; val_offset:3276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3276*FLEN/8, x13, x9, x10)

inst_1114:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c0b65 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x0cadec and fs3 == 0 and fe3 == 0x79 and fm3 == 0x19eac0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c0b65; op2val:0x3d0cadec;
op3val:0x3c99eac0; valaddr_reg:x12; val_offset:3279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3279*FLEN/8, x13, x9, x10)

inst_1115:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x103387 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x58d80e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x744a5c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e903387; op2val:0x4058d80e;
op3val:0x3f744a5c; valaddr_reg:x12; val_offset:3282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3282*FLEN/8, x13, x9, x10)

inst_1116:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x103387 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x58d80e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x744a5c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e903387; op2val:0x4058d80e;
op3val:0x3f744a5c; valaddr_reg:x12; val_offset:3285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3285*FLEN/8, x13, x9, x10)

inst_1117:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x103387 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x58d80e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x744a5c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e903387; op2val:0x4058d80e;
op3val:0x3f744a5c; valaddr_reg:x12; val_offset:3288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3288*FLEN/8, x13, x9, x10)

inst_1118:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x103387 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x58d80e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x744a5c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e903387; op2val:0x4058d80e;
op3val:0x3f744a5c; valaddr_reg:x12; val_offset:3291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3291*FLEN/8, x13, x9, x10)

inst_1119:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x103387 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x58d80e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x744a5c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e903387; op2val:0x4058d80e;
op3val:0x3f744a5c; valaddr_reg:x12; val_offset:3294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3294*FLEN/8, x13, x9, x10)

inst_1120:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x019a7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2b25b7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d4a93 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e819a7c; op2val:0x3fab25b7;
op3val:0x3ead4a93; valaddr_reg:x12; val_offset:3297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3297*FLEN/8, x13, x9, x10)

inst_1121:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x019a7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2b25b7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d4a93 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e819a7c; op2val:0x3fab25b7;
op3val:0x3ead4a93; valaddr_reg:x12; val_offset:3300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3300*FLEN/8, x13, x9, x10)

inst_1122:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x019a7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2b25b7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d4a93 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e819a7c; op2val:0x3fab25b7;
op3val:0x3ead4a93; valaddr_reg:x12; val_offset:3303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3303*FLEN/8, x13, x9, x10)

inst_1123:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x019a7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2b25b7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d4a93 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e819a7c; op2val:0x3fab25b7;
op3val:0x3ead4a93; valaddr_reg:x12; val_offset:3306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3306*FLEN/8, x13, x9, x10)

inst_1124:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x019a7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2b25b7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2d4a93 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e819a7c; op2val:0x3fab25b7;
op3val:0x3ead4a93; valaddr_reg:x12; val_offset:3309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3309*FLEN/8, x13, x9, x10)

inst_1125:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x418416 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28c5e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f2886 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec18416; op2val:0x4028c5e0;
op3val:0x3f7f2886; valaddr_reg:x12; val_offset:3312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3312*FLEN/8, x13, x9, x10)

inst_1126:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x418416 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28c5e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f2886 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec18416; op2val:0x4028c5e0;
op3val:0x3f7f2886; valaddr_reg:x12; val_offset:3315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3315*FLEN/8, x13, x9, x10)

inst_1127:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x418416 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28c5e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f2886 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec18416; op2val:0x4028c5e0;
op3val:0x3f7f2886; valaddr_reg:x12; val_offset:3318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3318*FLEN/8, x13, x9, x10)

inst_1128:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x418416 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28c5e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f2886 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec18416; op2val:0x4028c5e0;
op3val:0x3f7f2886; valaddr_reg:x12; val_offset:3321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3321*FLEN/8, x13, x9, x10)

inst_1129:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x418416 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28c5e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f2886 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec18416; op2val:0x4028c5e0;
op3val:0x3f7f2886; valaddr_reg:x12; val_offset:3324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3324*FLEN/8, x13, x9, x10)

inst_1130:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7806b0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x055b5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0133fd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df806b0; op2val:0x40855b5c;
op3val:0x3f0133fd; valaddr_reg:x12; val_offset:3327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3327*FLEN/8, x13, x9, x10)

inst_1131:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7806b0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x055b5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0133fd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df806b0; op2val:0x40855b5c;
op3val:0x3f0133fd; valaddr_reg:x12; val_offset:3330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3330*FLEN/8, x13, x9, x10)

inst_1132:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7806b0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x055b5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0133fd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df806b0; op2val:0x40855b5c;
op3val:0x3f0133fd; valaddr_reg:x12; val_offset:3333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3333*FLEN/8, x13, x9, x10)

inst_1133:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7806b0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x055b5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0133fd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df806b0; op2val:0x40855b5c;
op3val:0x3f0133fd; valaddr_reg:x12; val_offset:3336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3336*FLEN/8, x13, x9, x10)

inst_1134:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7806b0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x055b5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0133fd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df806b0; op2val:0x40855b5c;
op3val:0x3f0133fd; valaddr_reg:x12; val_offset:3339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3339*FLEN/8, x13, x9, x10)

inst_1135:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6d2a9f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654760 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x546940 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eed2a9f; op2val:0x3fe54760;
op3val:0x3f546940; valaddr_reg:x12; val_offset:3342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3342*FLEN/8, x13, x9, x10)

inst_1136:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6d2a9f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654760 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x546940 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eed2a9f; op2val:0x3fe54760;
op3val:0x3f546940; valaddr_reg:x12; val_offset:3345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3345*FLEN/8, x13, x9, x10)

inst_1137:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6d2a9f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654760 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x546940 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eed2a9f; op2val:0x3fe54760;
op3val:0x3f546940; valaddr_reg:x12; val_offset:3348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3348*FLEN/8, x13, x9, x10)

inst_1138:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6d2a9f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654760 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x546940 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eed2a9f; op2val:0x3fe54760;
op3val:0x3f546940; valaddr_reg:x12; val_offset:3351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3351*FLEN/8, x13, x9, x10)

inst_1139:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6d2a9f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654760 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x546940 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eed2a9f; op2val:0x3fe54760;
op3val:0x3f546940; valaddr_reg:x12; val_offset:3354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3354*FLEN/8, x13, x9, x10)

inst_1140:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76edb4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02da8d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c6f09 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f76edb4; op2val:0x3f82da8d;
op3val:0x3f7c6f09; valaddr_reg:x12; val_offset:3357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3357*FLEN/8, x13, x9, x10)

inst_1141:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76edb4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02da8d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c6f09 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f76edb4; op2val:0x3f82da8d;
op3val:0x3f7c6f09; valaddr_reg:x12; val_offset:3360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3360*FLEN/8, x13, x9, x10)

inst_1142:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76edb4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02da8d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c6f09 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f76edb4; op2val:0x3f82da8d;
op3val:0x3f7c6f09; valaddr_reg:x12; val_offset:3363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3363*FLEN/8, x13, x9, x10)

inst_1143:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76edb4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02da8d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c6f09 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f76edb4; op2val:0x3f82da8d;
op3val:0x3f7c6f09; valaddr_reg:x12; val_offset:3366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3366*FLEN/8, x13, x9, x10)

inst_1144:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76edb4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02da8d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c6f09 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f76edb4; op2val:0x3f82da8d;
op3val:0x3f7c6f09; valaddr_reg:x12; val_offset:3369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3369*FLEN/8, x13, x9, x10)

inst_1145:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a4717 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61729b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x322309 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a4717; op2val:0x3f61729b;
op3val:0x3f322309; valaddr_reg:x12; val_offset:3372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3372*FLEN/8, x13, x9, x10)

inst_1146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a4717 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61729b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x322309 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a4717; op2val:0x3f61729b;
op3val:0x3f322309; valaddr_reg:x12; val_offset:3375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3375*FLEN/8, x13, x9, x10)

inst_1147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a4717 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61729b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x322309 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a4717; op2val:0x3f61729b;
op3val:0x3f322309; valaddr_reg:x12; val_offset:3378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3378*FLEN/8, x13, x9, x10)

inst_1148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a4717 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61729b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x322309 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a4717; op2val:0x3f61729b;
op3val:0x3f322309; valaddr_reg:x12; val_offset:3381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3381*FLEN/8, x13, x9, x10)

inst_1149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a4717 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61729b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x322309 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a4717; op2val:0x3f61729b;
op3val:0x3f322309; valaddr_reg:x12; val_offset:3384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3384*FLEN/8, x13, x9, x10)

inst_1150:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x589284 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0e7eba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7118f6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f589284; op2val:0x3f8e7eba;
op3val:0x3f7118f6; valaddr_reg:x12; val_offset:3387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3387*FLEN/8, x13, x9, x10)

inst_1151:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x589284 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0e7eba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7118f6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f589284; op2val:0x3f8e7eba;
op3val:0x3f7118f6; valaddr_reg:x12; val_offset:3390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3390*FLEN/8, x13, x9, x10)

inst_1152:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x589284 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0e7eba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7118f6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f589284; op2val:0x3f8e7eba;
op3val:0x3f7118f6; valaddr_reg:x12; val_offset:3393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3393*FLEN/8, x13, x9, x10)

inst_1153:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x589284 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0e7eba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7118f6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f589284; op2val:0x3f8e7eba;
op3val:0x3f7118f6; valaddr_reg:x12; val_offset:3396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3396*FLEN/8, x13, x9, x10)

inst_1154:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x589284 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0e7eba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7118f6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f589284; op2val:0x3f8e7eba;
op3val:0x3f7118f6; valaddr_reg:x12; val_offset:3399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3399*FLEN/8, x13, x9, x10)

inst_1155:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b9175 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0bb369 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x185396 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b9175; op2val:0x3f8bb369;
op3val:0x3e985396; valaddr_reg:x12; val_offset:3402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3402*FLEN/8, x13, x9, x10)

inst_1156:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b9175 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0bb369 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x185396 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b9175; op2val:0x3f8bb369;
op3val:0x3e985396; valaddr_reg:x12; val_offset:3405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3405*FLEN/8, x13, x9, x10)

inst_1157:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b9175 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0bb369 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x185396 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b9175; op2val:0x3f8bb369;
op3val:0x3e985396; valaddr_reg:x12; val_offset:3408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3408*FLEN/8, x13, x9, x10)

inst_1158:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b9175 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0bb369 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x185396 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b9175; op2val:0x3f8bb369;
op3val:0x3e985396; valaddr_reg:x12; val_offset:3411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3411*FLEN/8, x13, x9, x10)

inst_1159:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b9175 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0bb369 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x185396 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b9175; op2val:0x3f8bb369;
op3val:0x3e985396; valaddr_reg:x12; val_offset:3414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3414*FLEN/8, x13, x9, x10)

inst_1160:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x718fe8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x54414b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4848c9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df18fe8; op2val:0x40d4414b;
op3val:0x3f4848c9; valaddr_reg:x12; val_offset:3417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3417*FLEN/8, x13, x9, x10)

inst_1161:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x718fe8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x54414b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4848c9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df18fe8; op2val:0x40d4414b;
op3val:0x3f4848c9; valaddr_reg:x12; val_offset:3420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3420*FLEN/8, x13, x9, x10)

inst_1162:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x718fe8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x54414b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4848c9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df18fe8; op2val:0x40d4414b;
op3val:0x3f4848c9; valaddr_reg:x12; val_offset:3423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3423*FLEN/8, x13, x9, x10)

inst_1163:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x718fe8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x54414b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4848c9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df18fe8; op2val:0x40d4414b;
op3val:0x3f4848c9; valaddr_reg:x12; val_offset:3426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3426*FLEN/8, x13, x9, x10)

inst_1164:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x718fe8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x54414b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4848c9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df18fe8; op2val:0x40d4414b;
op3val:0x3f4848c9; valaddr_reg:x12; val_offset:3429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3429*FLEN/8, x13, x9, x10)

inst_1165:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b0e60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f1e85 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4fa09d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b0e60; op2val:0x3fbf1e85;
op3val:0x3ecfa09d; valaddr_reg:x12; val_offset:3432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3432*FLEN/8, x13, x9, x10)

inst_1166:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b0e60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f1e85 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4fa09d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b0e60; op2val:0x3fbf1e85;
op3val:0x3ecfa09d; valaddr_reg:x12; val_offset:3435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3435*FLEN/8, x13, x9, x10)

inst_1167:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b0e60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f1e85 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4fa09d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b0e60; op2val:0x3fbf1e85;
op3val:0x3ecfa09d; valaddr_reg:x12; val_offset:3438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3438*FLEN/8, x13, x9, x10)

inst_1168:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b0e60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f1e85 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4fa09d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b0e60; op2val:0x3fbf1e85;
op3val:0x3ecfa09d; valaddr_reg:x12; val_offset:3441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3441*FLEN/8, x13, x9, x10)

inst_1169:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b0e60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f1e85 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4fa09d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8b0e60; op2val:0x3fbf1e85;
op3val:0x3ecfa09d; valaddr_reg:x12; val_offset:3444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3444*FLEN/8, x13, x9, x10)

inst_1170:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68eeea and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0cac9c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7fff6e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68eeea; op2val:0x3e0cac9c;
op3val:0x3dffff6e; valaddr_reg:x12; val_offset:3447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3447*FLEN/8, x13, x9, x10)

inst_1171:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68eeea and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0cac9c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7fff6e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68eeea; op2val:0x3e0cac9c;
op3val:0x3dffff6e; valaddr_reg:x12; val_offset:3450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3450*FLEN/8, x13, x9, x10)

inst_1172:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68eeea and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0cac9c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7fff6e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68eeea; op2val:0x3e0cac9c;
op3val:0x3dffff6e; valaddr_reg:x12; val_offset:3453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3453*FLEN/8, x13, x9, x10)

inst_1173:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68eeea and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0cac9c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7fff6e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68eeea; op2val:0x3e0cac9c;
op3val:0x3dffff6e; valaddr_reg:x12; val_offset:3456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3456*FLEN/8, x13, x9, x10)

inst_1174:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68eeea and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0cac9c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7fff6e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68eeea; op2val:0x3e0cac9c;
op3val:0x3dffff6e; valaddr_reg:x12; val_offset:3459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3459*FLEN/8, x13, x9, x10)

inst_1175:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2488c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x225335 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x50a814 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2488c9; op2val:0x3fa25335;
op3val:0x3f50a814; valaddr_reg:x12; val_offset:3462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3462*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_9)

inst_1176:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2488c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x225335 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x50a814 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2488c9; op2val:0x3fa25335;
op3val:0x3f50a814; valaddr_reg:x12; val_offset:3465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3465*FLEN/8, x13, x9, x10)

inst_1177:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2488c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x225335 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x50a814 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2488c9; op2val:0x3fa25335;
op3val:0x3f50a814; valaddr_reg:x12; val_offset:3468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3468*FLEN/8, x13, x9, x10)

inst_1178:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2488c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x225335 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x50a814 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2488c9; op2val:0x3fa25335;
op3val:0x3f50a814; valaddr_reg:x12; val_offset:3471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3471*FLEN/8, x13, x9, x10)

inst_1179:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2488c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x225335 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x50a814 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2488c9; op2val:0x3fa25335;
op3val:0x3f50a814; valaddr_reg:x12; val_offset:3474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3474*FLEN/8, x13, x9, x10)

inst_1180:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5114c2 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x3db5c2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1af0c6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5114c2; op2val:0x3dbdb5c2;
op3val:0x3d9af0c6; valaddr_reg:x12; val_offset:3477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3477*FLEN/8, x13, x9, x10)

inst_1181:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5114c2 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x3db5c2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1af0c6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5114c2; op2val:0x3dbdb5c2;
op3val:0x3d9af0c6; valaddr_reg:x12; val_offset:3480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3480*FLEN/8, x13, x9, x10)

inst_1182:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5114c2 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x3db5c2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1af0c6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5114c2; op2val:0x3dbdb5c2;
op3val:0x3d9af0c6; valaddr_reg:x12; val_offset:3483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3483*FLEN/8, x13, x9, x10)

inst_1183:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5114c2 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x3db5c2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1af0c6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5114c2; op2val:0x3dbdb5c2;
op3val:0x3d9af0c6; valaddr_reg:x12; val_offset:3486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3486*FLEN/8, x13, x9, x10)

inst_1184:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5114c2 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x3db5c2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1af0c6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5114c2; op2val:0x3dbdb5c2;
op3val:0x3d9af0c6; valaddr_reg:x12; val_offset:3489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3489*FLEN/8, x13, x9, x10)

inst_1185:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x477bb8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a4503 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d9d66 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f477bb8; op2val:0x3f4a4503;
op3val:0x3f1d9d66; valaddr_reg:x12; val_offset:3492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3492*FLEN/8, x13, x9, x10)

inst_1186:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x477bb8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a4503 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d9d66 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f477bb8; op2val:0x3f4a4503;
op3val:0x3f1d9d66; valaddr_reg:x12; val_offset:3495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3495*FLEN/8, x13, x9, x10)

inst_1187:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x477bb8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a4503 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d9d66 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f477bb8; op2val:0x3f4a4503;
op3val:0x3f1d9d66; valaddr_reg:x12; val_offset:3498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3498*FLEN/8, x13, x9, x10)

inst_1188:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x477bb8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a4503 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d9d66 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f477bb8; op2val:0x3f4a4503;
op3val:0x3f1d9d66; valaddr_reg:x12; val_offset:3501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3501*FLEN/8, x13, x9, x10)

inst_1189:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x477bb8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a4503 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d9d66 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f477bb8; op2val:0x3f4a4503;
op3val:0x3f1d9d66; valaddr_reg:x12; val_offset:3504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3504*FLEN/8, x13, x9, x10)

inst_1190:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67f100 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x351333 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x240ecb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7f100; op2val:0x3fb51333;
op3val:0x3f240ecb; valaddr_reg:x12; val_offset:3507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3507*FLEN/8, x13, x9, x10)

inst_1191:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67f100 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x351333 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x240ecb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7f100; op2val:0x3fb51333;
op3val:0x3f240ecb; valaddr_reg:x12; val_offset:3510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3510*FLEN/8, x13, x9, x10)

inst_1192:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67f100 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x351333 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x240ecb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7f100; op2val:0x3fb51333;
op3val:0x3f240ecb; valaddr_reg:x12; val_offset:3513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3513*FLEN/8, x13, x9, x10)

inst_1193:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67f100 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x351333 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x240ecb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7f100; op2val:0x3fb51333;
op3val:0x3f240ecb; valaddr_reg:x12; val_offset:3516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3516*FLEN/8, x13, x9, x10)

inst_1194:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67f100 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x351333 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x240ecb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7f100; op2val:0x3fb51333;
op3val:0x3f240ecb; valaddr_reg:x12; val_offset:3519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3519*FLEN/8, x13, x9, x10)

inst_1195:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x302424 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29b985 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x698f03 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb02424; op2val:0x4029b985;
op3val:0x3f698f03; valaddr_reg:x12; val_offset:3522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3522*FLEN/8, x13, x9, x10)

inst_1196:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x302424 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29b985 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x698f03 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb02424; op2val:0x4029b985;
op3val:0x3f698f03; valaddr_reg:x12; val_offset:3525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3525*FLEN/8, x13, x9, x10)

inst_1197:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x302424 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29b985 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x698f03 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb02424; op2val:0x4029b985;
op3val:0x3f698f03; valaddr_reg:x12; val_offset:3528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3528*FLEN/8, x13, x9, x10)

inst_1198:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x302424 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29b985 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x698f03 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb02424; op2val:0x4029b985;
op3val:0x3f698f03; valaddr_reg:x12; val_offset:3531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3531*FLEN/8, x13, x9, x10)

inst_1199:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x302424 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29b985 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x698f03 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb02424; op2val:0x4029b985;
op3val:0x3f698f03; valaddr_reg:x12; val_offset:3534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3534*FLEN/8, x13, x9, x10)

inst_1200:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x11efeb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3a9164 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x54b667 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f11efeb; op2val:0x3f3a9164;
op3val:0x3ed4b667; valaddr_reg:x12; val_offset:3537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3537*FLEN/8, x13, x9, x10)

inst_1201:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x11efeb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3a9164 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x54b667 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f11efeb; op2val:0x3f3a9164;
op3val:0x3ed4b667; valaddr_reg:x12; val_offset:3540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3540*FLEN/8, x13, x9, x10)

inst_1202:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x11efeb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3a9164 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x54b667 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f11efeb; op2val:0x3f3a9164;
op3val:0x3ed4b667; valaddr_reg:x12; val_offset:3543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3543*FLEN/8, x13, x9, x10)

inst_1203:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x11efeb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3a9164 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x54b667 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f11efeb; op2val:0x3f3a9164;
op3val:0x3ed4b667; valaddr_reg:x12; val_offset:3546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3546*FLEN/8, x13, x9, x10)

inst_1204:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x11efeb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3a9164 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x54b667 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f11efeb; op2val:0x3f3a9164;
op3val:0x3ed4b667; valaddr_reg:x12; val_offset:3549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3549*FLEN/8, x13, x9, x10)

inst_1205:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4316db and fs2 == 0 and fe2 == 0x7f and fm2 == 0x035c97 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x483684 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec316db; op2val:0x3f835c97;
op3val:0x3ec83684; valaddr_reg:x12; val_offset:3552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3552*FLEN/8, x13, x9, x10)

inst_1206:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4316db and fs2 == 0 and fe2 == 0x7f and fm2 == 0x035c97 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x483684 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec316db; op2val:0x3f835c97;
op3val:0x3ec83684; valaddr_reg:x12; val_offset:3555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3555*FLEN/8, x13, x9, x10)

inst_1207:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4316db and fs2 == 0 and fe2 == 0x7f and fm2 == 0x035c97 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x483684 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec316db; op2val:0x3f835c97;
op3val:0x3ec83684; valaddr_reg:x12; val_offset:3558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3558*FLEN/8, x13, x9, x10)

inst_1208:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4316db and fs2 == 0 and fe2 == 0x7f and fm2 == 0x035c97 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x483684 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec316db; op2val:0x3f835c97;
op3val:0x3ec83684; valaddr_reg:x12; val_offset:3561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3561*FLEN/8, x13, x9, x10)

inst_1209:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4316db and fs2 == 0 and fe2 == 0x7f and fm2 == 0x035c97 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x483684 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec316db; op2val:0x3f835c97;
op3val:0x3ec83684; valaddr_reg:x12; val_offset:3564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3564*FLEN/8, x13, x9, x10)

inst_1210:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b1277 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7d85f6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x394324 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b1277; op2val:0x3efd85f6;
op3val:0x3eb94324; valaddr_reg:x12; val_offset:3567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3567*FLEN/8, x13, x9, x10)

inst_1211:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b1277 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7d85f6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x394324 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b1277; op2val:0x3efd85f6;
op3val:0x3eb94324; valaddr_reg:x12; val_offset:3570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3570*FLEN/8, x13, x9, x10)

inst_1212:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b1277 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7d85f6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x394324 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b1277; op2val:0x3efd85f6;
op3val:0x3eb94324; valaddr_reg:x12; val_offset:3573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3573*FLEN/8, x13, x9, x10)

inst_1213:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b1277 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7d85f6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x394324 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b1277; op2val:0x3efd85f6;
op3val:0x3eb94324; valaddr_reg:x12; val_offset:3576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3576*FLEN/8, x13, x9, x10)

inst_1214:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b1277 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7d85f6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x394324 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b1277; op2val:0x3efd85f6;
op3val:0x3eb94324; valaddr_reg:x12; val_offset:3579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3579*FLEN/8, x13, x9, x10)

inst_1215:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x63b597 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x14f442 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x047e3f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce3b597; op2val:0x4194f442;
op3val:0x3f047e3f; valaddr_reg:x12; val_offset:3582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3582*FLEN/8, x13, x9, x10)

inst_1216:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x63b597 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x14f442 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x047e3f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce3b597; op2val:0x4194f442;
op3val:0x3f047e3f; valaddr_reg:x12; val_offset:3585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3585*FLEN/8, x13, x9, x10)

inst_1217:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x63b597 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x14f442 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x047e3f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce3b597; op2val:0x4194f442;
op3val:0x3f047e3f; valaddr_reg:x12; val_offset:3588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3588*FLEN/8, x13, x9, x10)

inst_1218:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x63b597 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x14f442 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x047e3f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce3b597; op2val:0x4194f442;
op3val:0x3f047e3f; valaddr_reg:x12; val_offset:3591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3591*FLEN/8, x13, x9, x10)

inst_1219:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x63b597 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x14f442 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x047e3f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce3b597; op2val:0x4194f442;
op3val:0x3f047e3f; valaddr_reg:x12; val_offset:3594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3594*FLEN/8, x13, x9, x10)

inst_1220:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x36466a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6a7852 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x26f209 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb6466a; op2val:0x3eea7852;
op3val:0x3e26f209; valaddr_reg:x12; val_offset:3597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3597*FLEN/8, x13, x9, x10)

inst_1221:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x36466a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6a7852 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x26f209 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb6466a; op2val:0x3eea7852;
op3val:0x3e26f209; valaddr_reg:x12; val_offset:3600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3600*FLEN/8, x13, x9, x10)

inst_1222:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x36466a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6a7852 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x26f209 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb6466a; op2val:0x3eea7852;
op3val:0x3e26f209; valaddr_reg:x12; val_offset:3603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3603*FLEN/8, x13, x9, x10)

inst_1223:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x36466a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6a7852 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x26f209 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb6466a; op2val:0x3eea7852;
op3val:0x3e26f209; valaddr_reg:x12; val_offset:3606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3606*FLEN/8, x13, x9, x10)

inst_1224:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x36466a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6a7852 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x26f209 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb6466a; op2val:0x3eea7852;
op3val:0x3e26f209; valaddr_reg:x12; val_offset:3609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3609*FLEN/8, x13, x9, x10)

inst_1225:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f66a4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b72ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bff5f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f66a4; op2val:0x3f7b72ac;
op3val:0x3f3bff5f; valaddr_reg:x12; val_offset:3612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3612*FLEN/8, x13, x9, x10)

inst_1226:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f66a4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b72ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bff5f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f66a4; op2val:0x3f7b72ac;
op3val:0x3f3bff5f; valaddr_reg:x12; val_offset:3615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3615*FLEN/8, x13, x9, x10)

inst_1227:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f66a4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b72ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bff5f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f66a4; op2val:0x3f7b72ac;
op3val:0x3f3bff5f; valaddr_reg:x12; val_offset:3618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3618*FLEN/8, x13, x9, x10)

inst_1228:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f66a4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b72ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bff5f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f66a4; op2val:0x3f7b72ac;
op3val:0x3f3bff5f; valaddr_reg:x12; val_offset:3621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3621*FLEN/8, x13, x9, x10)

inst_1229:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f66a4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b72ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bff5f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f66a4; op2val:0x3f7b72ac;
op3val:0x3f3bff5f; valaddr_reg:x12; val_offset:3624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3624*FLEN/8, x13, x9, x10)

inst_1230:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x73e34a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x3be8e4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3304e6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cf3e34a; op2val:0x41bbe8e4;
op3val:0x3f3304e6; valaddr_reg:x12; val_offset:3627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3627*FLEN/8, x13, x9, x10)

inst_1231:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x73e34a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x3be8e4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3304e6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cf3e34a; op2val:0x41bbe8e4;
op3val:0x3f3304e6; valaddr_reg:x12; val_offset:3630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3630*FLEN/8, x13, x9, x10)

inst_1232:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x73e34a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x3be8e4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3304e6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cf3e34a; op2val:0x41bbe8e4;
op3val:0x3f3304e6; valaddr_reg:x12; val_offset:3633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3633*FLEN/8, x13, x9, x10)

inst_1233:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x73e34a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x3be8e4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3304e6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cf3e34a; op2val:0x41bbe8e4;
op3val:0x3f3304e6; valaddr_reg:x12; val_offset:3636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3636*FLEN/8, x13, x9, x10)

inst_1234:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x73e34a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x3be8e4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3304e6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cf3e34a; op2val:0x41bbe8e4;
op3val:0x3f3304e6; valaddr_reg:x12; val_offset:3639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3639*FLEN/8, x13, x9, x10)

inst_1235:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12ebca and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c4d1a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x210a65 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f12ebca; op2val:0x3f8c4d1a;
op3val:0x3f210a65; valaddr_reg:x12; val_offset:3642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3642*FLEN/8, x13, x9, x10)

inst_1236:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12ebca and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c4d1a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x210a65 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f12ebca; op2val:0x3f8c4d1a;
op3val:0x3f210a65; valaddr_reg:x12; val_offset:3645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3645*FLEN/8, x13, x9, x10)

inst_1237:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12ebca and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c4d1a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x210a65 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f12ebca; op2val:0x3f8c4d1a;
op3val:0x3f210a65; valaddr_reg:x12; val_offset:3648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3648*FLEN/8, x13, x9, x10)

inst_1238:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12ebca and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c4d1a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x210a65 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f12ebca; op2val:0x3f8c4d1a;
op3val:0x3f210a65; valaddr_reg:x12; val_offset:3651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3651*FLEN/8, x13, x9, x10)

inst_1239:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12ebca and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c4d1a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x210a65 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f12ebca; op2val:0x3f8c4d1a;
op3val:0x3f210a65; valaddr_reg:x12; val_offset:3654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3654*FLEN/8, x13, x9, x10)

inst_1240:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x6025b3 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x0502b5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68ebeb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3be025b3; op2val:0x428502b5;
op3val:0x3ee8ebeb; valaddr_reg:x12; val_offset:3657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3657*FLEN/8, x13, x9, x10)

inst_1241:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x6025b3 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x0502b5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68ebeb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3be025b3; op2val:0x428502b5;
op3val:0x3ee8ebeb; valaddr_reg:x12; val_offset:3660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3660*FLEN/8, x13, x9, x10)

inst_1242:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x6025b3 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x0502b5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68ebeb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3be025b3; op2val:0x428502b5;
op3val:0x3ee8ebeb; valaddr_reg:x12; val_offset:3663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3663*FLEN/8, x13, x9, x10)

inst_1243:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x6025b3 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x0502b5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68ebeb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3be025b3; op2val:0x428502b5;
op3val:0x3ee8ebeb; valaddr_reg:x12; val_offset:3666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3666*FLEN/8, x13, x9, x10)

inst_1244:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x6025b3 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x0502b5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68ebeb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3be025b3; op2val:0x428502b5;
op3val:0x3ee8ebeb; valaddr_reg:x12; val_offset:3669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3669*FLEN/8, x13, x9, x10)

inst_1245:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x54b4e3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0106e2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5669be and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd4b4e3; op2val:0x410106e2;
op3val:0x3f5669be; valaddr_reg:x12; val_offset:3672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3672*FLEN/8, x13, x9, x10)

inst_1246:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x54b4e3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0106e2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5669be and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd4b4e3; op2val:0x410106e2;
op3val:0x3f5669be; valaddr_reg:x12; val_offset:3675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3675*FLEN/8, x13, x9, x10)

inst_1247:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x54b4e3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0106e2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5669be and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd4b4e3; op2val:0x410106e2;
op3val:0x3f5669be; valaddr_reg:x12; val_offset:3678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3678*FLEN/8, x13, x9, x10)

inst_1248:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x54b4e3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0106e2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5669be and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd4b4e3; op2val:0x410106e2;
op3val:0x3f5669be; valaddr_reg:x12; val_offset:3681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3681*FLEN/8, x13, x9, x10)

inst_1249:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x54b4e3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0106e2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5669be and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd4b4e3; op2val:0x410106e2;
op3val:0x3f5669be; valaddr_reg:x12; val_offset:3684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3684*FLEN/8, x13, x9, x10)

inst_1250:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38ed67 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7841a8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33556a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f38ed67; op2val:0x3ef841a8;
op3val:0x3eb3556a; valaddr_reg:x12; val_offset:3687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3687*FLEN/8, x13, x9, x10)

inst_1251:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38ed67 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7841a8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33556a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f38ed67; op2val:0x3ef841a8;
op3val:0x3eb3556a; valaddr_reg:x12; val_offset:3690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3690*FLEN/8, x13, x9, x10)

inst_1252:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38ed67 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7841a8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33556a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f38ed67; op2val:0x3ef841a8;
op3val:0x3eb3556a; valaddr_reg:x12; val_offset:3693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3693*FLEN/8, x13, x9, x10)

inst_1253:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38ed67 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7841a8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33556a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f38ed67; op2val:0x3ef841a8;
op3val:0x3eb3556a; valaddr_reg:x12; val_offset:3696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3696*FLEN/8, x13, x9, x10)

inst_1254:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38ed67 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7841a8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33556a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f38ed67; op2val:0x3ef841a8;
op3val:0x3eb3556a; valaddr_reg:x12; val_offset:3699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3699*FLEN/8, x13, x9, x10)

inst_1255:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e864a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ce651 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c6936 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e864a; op2val:0x3efce651;
op3val:0x3eac6936; valaddr_reg:x12; val_offset:3702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3702*FLEN/8, x13, x9, x10)

inst_1256:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e864a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ce651 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c6936 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e864a; op2val:0x3efce651;
op3val:0x3eac6936; valaddr_reg:x12; val_offset:3705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3705*FLEN/8, x13, x9, x10)

inst_1257:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e864a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ce651 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c6936 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e864a; op2val:0x3efce651;
op3val:0x3eac6936; valaddr_reg:x12; val_offset:3708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3708*FLEN/8, x13, x9, x10)

inst_1258:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e864a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ce651 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c6936 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e864a; op2val:0x3efce651;
op3val:0x3eac6936; valaddr_reg:x12; val_offset:3711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3711*FLEN/8, x13, x9, x10)

inst_1259:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e864a and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ce651 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c6936 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e864a; op2val:0x3efce651;
op3val:0x3eac6936; valaddr_reg:x12; val_offset:3714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3714*FLEN/8, x13, x9, x10)

inst_1260:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x01fa00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6868a9 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2004c5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5481fa00; op2val:0xbfe868a9;
op3val:0x532004c5; valaddr_reg:x12; val_offset:3717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3717*FLEN/8, x13, x9, x10)

inst_1261:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x01fa00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6868a9 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2004c5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5481fa00; op2val:0xbfe868a9;
op3val:0x532004c5; valaddr_reg:x12; val_offset:3720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3720*FLEN/8, x13, x9, x10)

inst_1262:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x01fa00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6868a9 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2004c5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5481fa00; op2val:0xbfe868a9;
op3val:0x532004c5; valaddr_reg:x12; val_offset:3723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3723*FLEN/8, x13, x9, x10)

inst_1263:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x01fa00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6868a9 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2004c5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5481fa00; op2val:0xbfe868a9;
op3val:0x532004c5; valaddr_reg:x12; val_offset:3726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3726*FLEN/8, x13, x9, x10)

inst_1264:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x01fa00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6868a9 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2004c5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5481fa00; op2val:0xbfe868a9;
op3val:0x532004c5; valaddr_reg:x12; val_offset:3729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3729*FLEN/8, x13, x9, x10)

inst_1265:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x64f57d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x20b0c6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6090ef and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5364f57d; op2val:0xc0a0b0c6;
op3val:0x546090ef; valaddr_reg:x12; val_offset:3732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3732*FLEN/8, x13, x9, x10)

inst_1266:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x64f57d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x20b0c6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6090ef and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5364f57d; op2val:0xc0a0b0c6;
op3val:0x546090ef; valaddr_reg:x12; val_offset:3735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3735*FLEN/8, x13, x9, x10)

inst_1267:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x64f57d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x20b0c6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6090ef and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5364f57d; op2val:0xc0a0b0c6;
op3val:0x546090ef; valaddr_reg:x12; val_offset:3738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3738*FLEN/8, x13, x9, x10)

inst_1268:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x64f57d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x20b0c6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6090ef and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5364f57d; op2val:0xc0a0b0c6;
op3val:0x546090ef; valaddr_reg:x12; val_offset:3741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3741*FLEN/8, x13, x9, x10)

inst_1269:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x64f57d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x20b0c6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6090ef and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5364f57d; op2val:0xc0a0b0c6;
op3val:0x546090ef; valaddr_reg:x12; val_offset:3744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3744*FLEN/8, x13, x9, x10)

inst_1270:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x089af5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4584e3 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x34cec0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54889af5; op2val:0xbfc584e3;
op3val:0x53b4cec0; valaddr_reg:x12; val_offset:3747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3747*FLEN/8, x13, x9, x10)

inst_1271:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x089af5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4584e3 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x34cec0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54889af5; op2val:0xbfc584e3;
op3val:0x53b4cec0; valaddr_reg:x12; val_offset:3750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3750*FLEN/8, x13, x9, x10)

inst_1272:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x089af5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4584e3 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x34cec0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54889af5; op2val:0xbfc584e3;
op3val:0x53b4cec0; valaddr_reg:x12; val_offset:3753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3753*FLEN/8, x13, x9, x10)

inst_1273:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x089af5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4584e3 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x34cec0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54889af5; op2val:0xbfc584e3;
op3val:0x53b4cec0; valaddr_reg:x12; val_offset:3756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3756*FLEN/8, x13, x9, x10)

inst_1274:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x089af5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4584e3 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x34cec0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54889af5; op2val:0xbfc584e3;
op3val:0x53b4cec0; valaddr_reg:x12; val_offset:3759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3759*FLEN/8, x13, x9, x10)

inst_1275:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x06be82 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x72e53c and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x1d0384 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5406be82; op2val:0xc072e53c;
op3val:0x501d0384; valaddr_reg:x12; val_offset:3762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3762*FLEN/8, x13, x9, x10)

inst_1276:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x06be82 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x72e53c and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x1d0384 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5406be82; op2val:0xc072e53c;
op3val:0x501d0384; valaddr_reg:x12; val_offset:3765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3765*FLEN/8, x13, x9, x10)

inst_1277:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x06be82 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x72e53c and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x1d0384 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5406be82; op2val:0xc072e53c;
op3val:0x501d0384; valaddr_reg:x12; val_offset:3768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3768*FLEN/8, x13, x9, x10)

inst_1278:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x06be82 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x72e53c and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x1d0384 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5406be82; op2val:0xc072e53c;
op3val:0x501d0384; valaddr_reg:x12; val_offset:3771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3771*FLEN/8, x13, x9, x10)

inst_1279:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x06be82 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x72e53c and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x1d0384 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5406be82; op2val:0xc072e53c;
op3val:0x501d0384; valaddr_reg:x12; val_offset:3774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3774*FLEN/8, x13, x9, x10)

inst_1280:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0827e1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x263ebd and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1e5314 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540827e1; op2val:0xc0263ebd;
op3val:0x541e5314; valaddr_reg:x12; val_offset:3777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3777*FLEN/8, x13, x9, x10)

inst_1281:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0827e1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x263ebd and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1e5314 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540827e1; op2val:0xc0263ebd;
op3val:0x541e5314; valaddr_reg:x12; val_offset:3780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3780*FLEN/8, x13, x9, x10)

inst_1282:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0827e1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x263ebd and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1e5314 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540827e1; op2val:0xc0263ebd;
op3val:0x541e5314; valaddr_reg:x12; val_offset:3783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3783*FLEN/8, x13, x9, x10)

inst_1283:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0827e1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x263ebd and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1e5314 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540827e1; op2val:0xc0263ebd;
op3val:0x541e5314; valaddr_reg:x12; val_offset:3786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3786*FLEN/8, x13, x9, x10)

inst_1284:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0827e1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x263ebd and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1e5314 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540827e1; op2val:0xc0263ebd;
op3val:0x541e5314; valaddr_reg:x12; val_offset:3789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3789*FLEN/8, x13, x9, x10)

inst_1285:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x46d5f7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0613e2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x17dc8f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5446d5f7; op2val:0xbf8613e2;
op3val:0x5497dc8f; valaddr_reg:x12; val_offset:3792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3792*FLEN/8, x13, x9, x10)

inst_1286:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x46d5f7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0613e2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x17dc8f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5446d5f7; op2val:0xbf8613e2;
op3val:0x5497dc8f; valaddr_reg:x12; val_offset:3795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3795*FLEN/8, x13, x9, x10)

inst_1287:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x46d5f7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0613e2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x17dc8f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5446d5f7; op2val:0xbf8613e2;
op3val:0x5497dc8f; valaddr_reg:x12; val_offset:3798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3798*FLEN/8, x13, x9, x10)

inst_1288:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x46d5f7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0613e2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x17dc8f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5446d5f7; op2val:0xbf8613e2;
op3val:0x5497dc8f; valaddr_reg:x12; val_offset:3801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3801*FLEN/8, x13, x9, x10)

inst_1289:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x46d5f7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0613e2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x17dc8f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5446d5f7; op2val:0xbf8613e2;
op3val:0x5497dc8f; valaddr_reg:x12; val_offset:3804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3804*FLEN/8, x13, x9, x10)

inst_1290:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5a4abb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x29bb21 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x37a28d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54da4abb; op2val:0xbea9bb21;
op3val:0x54b7a28d; valaddr_reg:x12; val_offset:3807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3807*FLEN/8, x13, x9, x10)

inst_1291:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5a4abb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x29bb21 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x37a28d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54da4abb; op2val:0xbea9bb21;
op3val:0x54b7a28d; valaddr_reg:x12; val_offset:3810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3810*FLEN/8, x13, x9, x10)

inst_1292:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5a4abb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x29bb21 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x37a28d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54da4abb; op2val:0xbea9bb21;
op3val:0x54b7a28d; valaddr_reg:x12; val_offset:3813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3813*FLEN/8, x13, x9, x10)

inst_1293:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5a4abb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x29bb21 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x37a28d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54da4abb; op2val:0xbea9bb21;
op3val:0x54b7a28d; valaddr_reg:x12; val_offset:3816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3816*FLEN/8, x13, x9, x10)

inst_1294:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5a4abb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x29bb21 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x37a28d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54da4abb; op2val:0xbea9bb21;
op3val:0x54b7a28d; valaddr_reg:x12; val_offset:3819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3819*FLEN/8, x13, x9, x10)

inst_1295:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3da29b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77cfb6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x10dc7e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54bda29b; op2val:0xbf77cfb6;
op3val:0x5410dc7e; valaddr_reg:x12; val_offset:3822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3822*FLEN/8, x13, x9, x10)

inst_1296:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3da29b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77cfb6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x10dc7e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54bda29b; op2val:0xbf77cfb6;
op3val:0x5410dc7e; valaddr_reg:x12; val_offset:3825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3825*FLEN/8, x13, x9, x10)

inst_1297:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3da29b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77cfb6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x10dc7e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54bda29b; op2val:0xbf77cfb6;
op3val:0x5410dc7e; valaddr_reg:x12; val_offset:3828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3828*FLEN/8, x13, x9, x10)

inst_1298:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3da29b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77cfb6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x10dc7e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54bda29b; op2val:0xbf77cfb6;
op3val:0x5410dc7e; valaddr_reg:x12; val_offset:3831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3831*FLEN/8, x13, x9, x10)

inst_1299:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3da29b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77cfb6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x10dc7e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54bda29b; op2val:0xbf77cfb6;
op3val:0x5410dc7e; valaddr_reg:x12; val_offset:3834*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3834*FLEN/8, x13, x9, x10)

inst_1300:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7dbb07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0d1e1b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3a1113 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547dbb07; op2val:0xbf0d1e1b;
op3val:0x54ba1113; valaddr_reg:x12; val_offset:3837*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3837*FLEN/8, x13, x9, x10)

inst_1301:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7dbb07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0d1e1b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3a1113 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547dbb07; op2val:0xbf0d1e1b;
op3val:0x54ba1113; valaddr_reg:x12; val_offset:3840*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3840*FLEN/8, x13, x9, x10)

inst_1302:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7dbb07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0d1e1b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3a1113 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547dbb07; op2val:0xbf0d1e1b;
op3val:0x54ba1113; valaddr_reg:x12; val_offset:3843*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3843*FLEN/8, x13, x9, x10)

inst_1303:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7dbb07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0d1e1b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3a1113 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547dbb07; op2val:0xbf0d1e1b;
op3val:0x54ba1113; valaddr_reg:x12; val_offset:3846*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3846*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_10)

inst_1304:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7dbb07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0d1e1b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3a1113 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547dbb07; op2val:0xbf0d1e1b;
op3val:0x54ba1113; valaddr_reg:x12; val_offset:3849*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3849*FLEN/8, x13, x9, x10)

inst_1305:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x64cfea and fs2 == 1 and fe2 == 0x7e and fm2 == 0x598df6 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x76337f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e4cfea; op2val:0xbf598df6;
op3val:0x53f6337f; valaddr_reg:x12; val_offset:3852*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3852*FLEN/8, x13, x9, x10)

inst_1306:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x64cfea and fs2 == 1 and fe2 == 0x7e and fm2 == 0x598df6 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x76337f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e4cfea; op2val:0xbf598df6;
op3val:0x53f6337f; valaddr_reg:x12; val_offset:3855*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3855*FLEN/8, x13, x9, x10)

inst_1307:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x64cfea and fs2 == 1 and fe2 == 0x7e and fm2 == 0x598df6 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x76337f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e4cfea; op2val:0xbf598df6;
op3val:0x53f6337f; valaddr_reg:x12; val_offset:3858*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3858*FLEN/8, x13, x9, x10)

inst_1308:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x64cfea and fs2 == 1 and fe2 == 0x7e and fm2 == 0x598df6 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x76337f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e4cfea; op2val:0xbf598df6;
op3val:0x53f6337f; valaddr_reg:x12; val_offset:3861*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3861*FLEN/8, x13, x9, x10)

inst_1309:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x64cfea and fs2 == 1 and fe2 == 0x7e and fm2 == 0x598df6 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x76337f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e4cfea; op2val:0xbf598df6;
op3val:0x53f6337f; valaddr_reg:x12; val_offset:3864*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3864*FLEN/8, x13, x9, x10)

inst_1310:
// fs1 == 0 and fe1 == 0xa3 and fm1 == 0x76a178 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7c3473 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x506864 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x51f6a178; op2val:0xc27c3473;
op3val:0x52d06864; valaddr_reg:x12; val_offset:3867*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3867*FLEN/8, x13, x9, x10)

inst_1311:
// fs1 == 0 and fe1 == 0xa3 and fm1 == 0x76a178 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7c3473 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x506864 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x51f6a178; op2val:0xc27c3473;
op3val:0x52d06864; valaddr_reg:x12; val_offset:3870*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3870*FLEN/8, x13, x9, x10)

inst_1312:
// fs1 == 0 and fe1 == 0xa3 and fm1 == 0x76a178 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7c3473 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x506864 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x51f6a178; op2val:0xc27c3473;
op3val:0x52d06864; valaddr_reg:x12; val_offset:3873*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3873*FLEN/8, x13, x9, x10)

inst_1313:
// fs1 == 0 and fe1 == 0xa3 and fm1 == 0x76a178 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7c3473 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x506864 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x51f6a178; op2val:0xc27c3473;
op3val:0x52d06864; valaddr_reg:x12; val_offset:3876*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3876*FLEN/8, x13, x9, x10)

inst_1314:
// fs1 == 0 and fe1 == 0xa3 and fm1 == 0x76a178 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7c3473 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x506864 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x51f6a178; op2val:0xc27c3473;
op3val:0x52d06864; valaddr_reg:x12; val_offset:3879*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3879*FLEN/8, x13, x9, x10)

inst_1315:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x03ef14 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ddadf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5f4afb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5483ef14; op2val:0xbe7ddadf;
op3val:0x54df4afb; valaddr_reg:x12; val_offset:3882*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3882*FLEN/8, x13, x9, x10)

inst_1316:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x03ef14 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ddadf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5f4afb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5483ef14; op2val:0xbe7ddadf;
op3val:0x54df4afb; valaddr_reg:x12; val_offset:3885*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3885*FLEN/8, x13, x9, x10)

inst_1317:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x03ef14 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ddadf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5f4afb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5483ef14; op2val:0xbe7ddadf;
op3val:0x54df4afb; valaddr_reg:x12; val_offset:3888*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3888*FLEN/8, x13, x9, x10)

inst_1318:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x03ef14 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ddadf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5f4afb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5483ef14; op2val:0xbe7ddadf;
op3val:0x54df4afb; valaddr_reg:x12; val_offset:3891*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3891*FLEN/8, x13, x9, x10)

inst_1319:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x03ef14 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ddadf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5f4afb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5483ef14; op2val:0xbe7ddadf;
op3val:0x54df4afb; valaddr_reg:x12; val_offset:3894*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3894*FLEN/8, x13, x9, x10)

inst_1320:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x1d0b62 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x347478 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x48a646 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x539d0b62; op2val:0xbfb47478;
op3val:0x54c8a646; valaddr_reg:x12; val_offset:3897*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3897*FLEN/8, x13, x9, x10)

inst_1321:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x1d0b62 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x347478 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x48a646 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x539d0b62; op2val:0xbfb47478;
op3val:0x54c8a646; valaddr_reg:x12; val_offset:3900*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3900*FLEN/8, x13, x9, x10)

inst_1322:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x1d0b62 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x347478 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x48a646 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x539d0b62; op2val:0xbfb47478;
op3val:0x54c8a646; valaddr_reg:x12; val_offset:3903*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3903*FLEN/8, x13, x9, x10)

inst_1323:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x1d0b62 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x347478 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x48a646 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x539d0b62; op2val:0xbfb47478;
op3val:0x54c8a646; valaddr_reg:x12; val_offset:3906*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3906*FLEN/8, x13, x9, x10)

inst_1324:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x1d0b62 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x347478 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x48a646 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x539d0b62; op2val:0xbfb47478;
op3val:0x54c8a646; valaddr_reg:x12; val_offset:3909*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3909*FLEN/8, x13, x9, x10)

inst_1325:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x241ef6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x597f5c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5d2407 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a41ef6; op2val:0xbe597f5c;
op3val:0x54dd2407; valaddr_reg:x12; val_offset:3912*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3912*FLEN/8, x13, x9, x10)

inst_1326:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x241ef6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x597f5c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5d2407 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a41ef6; op2val:0xbe597f5c;
op3val:0x54dd2407; valaddr_reg:x12; val_offset:3915*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3915*FLEN/8, x13, x9, x10)

inst_1327:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x241ef6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x597f5c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5d2407 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a41ef6; op2val:0xbe597f5c;
op3val:0x54dd2407; valaddr_reg:x12; val_offset:3918*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3918*FLEN/8, x13, x9, x10)

inst_1328:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x241ef6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x597f5c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5d2407 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a41ef6; op2val:0xbe597f5c;
op3val:0x54dd2407; valaddr_reg:x12; val_offset:3921*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3921*FLEN/8, x13, x9, x10)

inst_1329:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x241ef6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x597f5c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5d2407 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a41ef6; op2val:0xbe597f5c;
op3val:0x54dd2407; valaddr_reg:x12; val_offset:3924*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3924*FLEN/8, x13, x9, x10)

inst_1330:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66ab4b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d9eb8 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x5bcd8e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e6ab4b; op2val:0xbf7d9eb8;
op3val:0x535bcd8e; valaddr_reg:x12; val_offset:3927*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3927*FLEN/8, x13, x9, x10)

inst_1331:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66ab4b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d9eb8 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x5bcd8e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e6ab4b; op2val:0xbf7d9eb8;
op3val:0x535bcd8e; valaddr_reg:x12; val_offset:3930*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3930*FLEN/8, x13, x9, x10)

inst_1332:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66ab4b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d9eb8 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x5bcd8e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e6ab4b; op2val:0xbf7d9eb8;
op3val:0x535bcd8e; valaddr_reg:x12; val_offset:3933*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3933*FLEN/8, x13, x9, x10)

inst_1333:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66ab4b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d9eb8 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x5bcd8e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e6ab4b; op2val:0xbf7d9eb8;
op3val:0x535bcd8e; valaddr_reg:x12; val_offset:3936*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3936*FLEN/8, x13, x9, x10)

inst_1334:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66ab4b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d9eb8 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x5bcd8e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e6ab4b; op2val:0xbf7d9eb8;
op3val:0x535bcd8e; valaddr_reg:x12; val_offset:3939*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3939*FLEN/8, x13, x9, x10)

inst_1335:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4b306c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b727a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x0a8ec4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cb306c; op2val:0xbf8b727a;
op3val:0x538a8ec4; valaddr_reg:x12; val_offset:3942*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3942*FLEN/8, x13, x9, x10)

inst_1336:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4b306c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b727a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x0a8ec4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cb306c; op2val:0xbf8b727a;
op3val:0x538a8ec4; valaddr_reg:x12; val_offset:3945*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3945*FLEN/8, x13, x9, x10)

inst_1337:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4b306c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b727a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x0a8ec4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cb306c; op2val:0xbf8b727a;
op3val:0x538a8ec4; valaddr_reg:x12; val_offset:3948*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3948*FLEN/8, x13, x9, x10)

inst_1338:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4b306c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b727a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x0a8ec4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cb306c; op2val:0xbf8b727a;
op3val:0x538a8ec4; valaddr_reg:x12; val_offset:3951*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3951*FLEN/8, x13, x9, x10)

inst_1339:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4b306c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b727a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x0a8ec4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cb306c; op2val:0xbf8b727a;
op3val:0x538a8ec4; valaddr_reg:x12; val_offset:3954*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3954*FLEN/8, x13, x9, x10)

inst_1340:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x731fff and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2219c2 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4c1a93 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53731fff; op2val:0xc0a219c2;
op3val:0x544c1a93; valaddr_reg:x12; val_offset:3957*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3957*FLEN/8, x13, x9, x10)

inst_1341:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x731fff and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2219c2 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4c1a93 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53731fff; op2val:0xc0a219c2;
op3val:0x544c1a93; valaddr_reg:x12; val_offset:3960*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3960*FLEN/8, x13, x9, x10)

inst_1342:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x731fff and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2219c2 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4c1a93 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53731fff; op2val:0xc0a219c2;
op3val:0x544c1a93; valaddr_reg:x12; val_offset:3963*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3963*FLEN/8, x13, x9, x10)

inst_1343:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x731fff and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2219c2 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4c1a93 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53731fff; op2val:0xc0a219c2;
op3val:0x544c1a93; valaddr_reg:x12; val_offset:3966*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3966*FLEN/8, x13, x9, x10)

inst_1344:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x731fff and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2219c2 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4c1a93 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53731fff; op2val:0xc0a219c2;
op3val:0x544c1a93; valaddr_reg:x12; val_offset:3969*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3969*FLEN/8, x13, x9, x10)

inst_1345:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7a41f7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x739bee and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x0ed79d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547a41f7; op2val:0xbff39bee;
op3val:0x530ed79d; valaddr_reg:x12; val_offset:3972*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3972*FLEN/8, x13, x9, x10)

inst_1346:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7a41f7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x739bee and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x0ed79d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547a41f7; op2val:0xbff39bee;
op3val:0x530ed79d; valaddr_reg:x12; val_offset:3975*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3975*FLEN/8, x13, x9, x10)

inst_1347:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7a41f7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x739bee and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x0ed79d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547a41f7; op2val:0xbff39bee;
op3val:0x530ed79d; valaddr_reg:x12; val_offset:3978*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3978*FLEN/8, x13, x9, x10)

inst_1348:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7a41f7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x739bee and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x0ed79d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547a41f7; op2val:0xbff39bee;
op3val:0x530ed79d; valaddr_reg:x12; val_offset:3981*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3981*FLEN/8, x13, x9, x10)

inst_1349:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7a41f7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x739bee and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x0ed79d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547a41f7; op2val:0xbff39bee;
op3val:0x530ed79d; valaddr_reg:x12; val_offset:3984*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3984*FLEN/8, x13, x9, x10)

inst_1350:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0d23b8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f6cba and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x33b33c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540d23b8; op2val:0xc03f6cba;
op3val:0x53b3b33c; valaddr_reg:x12; val_offset:3987*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3987*FLEN/8, x13, x9, x10)

inst_1351:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0d23b8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f6cba and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x33b33c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540d23b8; op2val:0xc03f6cba;
op3val:0x53b3b33c; valaddr_reg:x12; val_offset:3990*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3990*FLEN/8, x13, x9, x10)

inst_1352:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0d23b8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f6cba and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x33b33c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540d23b8; op2val:0xc03f6cba;
op3val:0x53b3b33c; valaddr_reg:x12; val_offset:3993*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3993*FLEN/8, x13, x9, x10)

inst_1353:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0d23b8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f6cba and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x33b33c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540d23b8; op2val:0xc03f6cba;
op3val:0x53b3b33c; valaddr_reg:x12; val_offset:3996*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3996*FLEN/8, x13, x9, x10)

inst_1354:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0d23b8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f6cba and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x33b33c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540d23b8; op2val:0xc03f6cba;
op3val:0x53b3b33c; valaddr_reg:x12; val_offset:3999*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3999*FLEN/8, x13, x9, x10)

inst_1355:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x0a299c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x55bb2d and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4a65bc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x538a299c; op2val:0xc0d5bb2d;
op3val:0x534a65bc; valaddr_reg:x12; val_offset:4002*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4002*FLEN/8, x13, x9, x10)

inst_1356:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x0a299c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x55bb2d and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4a65bc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x538a299c; op2val:0xc0d5bb2d;
op3val:0x534a65bc; valaddr_reg:x12; val_offset:4005*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4005*FLEN/8, x13, x9, x10)

inst_1357:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x0a299c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x55bb2d and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4a65bc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x538a299c; op2val:0xc0d5bb2d;
op3val:0x534a65bc; valaddr_reg:x12; val_offset:4008*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4008*FLEN/8, x13, x9, x10)

inst_1358:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x0a299c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x55bb2d and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4a65bc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x538a299c; op2val:0xc0d5bb2d;
op3val:0x534a65bc; valaddr_reg:x12; val_offset:4011*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4011*FLEN/8, x13, x9, x10)

inst_1359:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x0a299c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x55bb2d and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4a65bc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x538a299c; op2val:0xc0d5bb2d;
op3val:0x534a65bc; valaddr_reg:x12; val_offset:4014*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4014*FLEN/8, x13, x9, x10)

inst_1360:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x42ac0b and fs2 == 1 and fe2 == 0x84 and fm2 == 0x03b48e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5ec549 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5242ac0b; op2val:0xc203b48e;
op3val:0x53dec549; valaddr_reg:x12; val_offset:4017*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4017*FLEN/8, x13, x9, x10)

inst_1361:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x42ac0b and fs2 == 1 and fe2 == 0x84 and fm2 == 0x03b48e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5ec549 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5242ac0b; op2val:0xc203b48e;
op3val:0x53dec549; valaddr_reg:x12; val_offset:4020*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4020*FLEN/8, x13, x9, x10)

inst_1362:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x42ac0b and fs2 == 1 and fe2 == 0x84 and fm2 == 0x03b48e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5ec549 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5242ac0b; op2val:0xc203b48e;
op3val:0x53dec549; valaddr_reg:x12; val_offset:4023*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4023*FLEN/8, x13, x9, x10)

inst_1363:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x42ac0b and fs2 == 1 and fe2 == 0x84 and fm2 == 0x03b48e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5ec549 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5242ac0b; op2val:0xc203b48e;
op3val:0x53dec549; valaddr_reg:x12; val_offset:4026*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4026*FLEN/8, x13, x9, x10)

inst_1364:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x42ac0b and fs2 == 1 and fe2 == 0x84 and fm2 == 0x03b48e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5ec549 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5242ac0b; op2val:0xc203b48e;
op3val:0x53dec549; valaddr_reg:x12; val_offset:4029*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4029*FLEN/8, x13, x9, x10)

inst_1365:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x27915e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x62e480 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x56f832 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5427915e; op2val:0xbfe2e480;
op3val:0x5456f832; valaddr_reg:x12; val_offset:4032*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4032*FLEN/8, x13, x9, x10)

inst_1366:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x27915e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x62e480 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x56f832 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5427915e; op2val:0xbfe2e480;
op3val:0x5456f832; valaddr_reg:x12; val_offset:4035*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4035*FLEN/8, x13, x9, x10)

inst_1367:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x27915e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x62e480 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x56f832 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5427915e; op2val:0xbfe2e480;
op3val:0x5456f832; valaddr_reg:x12; val_offset:4038*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4038*FLEN/8, x13, x9, x10)

inst_1368:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x27915e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x62e480 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x56f832 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5427915e; op2val:0xbfe2e480;
op3val:0x5456f832; valaddr_reg:x12; val_offset:4041*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4041*FLEN/8, x13, x9, x10)

inst_1369:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x27915e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x62e480 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x56f832 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5427915e; op2val:0xbfe2e480;
op3val:0x5456f832; valaddr_reg:x12; val_offset:4044*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4044*FLEN/8, x13, x9, x10)

inst_1370:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x31c72a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f09df and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1caae4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b1c72a; op2val:0xbf0f09df;
op3val:0x549caae4; valaddr_reg:x12; val_offset:4047*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4047*FLEN/8, x13, x9, x10)

inst_1371:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x31c72a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f09df and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1caae4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b1c72a; op2val:0xbf0f09df;
op3val:0x549caae4; valaddr_reg:x12; val_offset:4050*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4050*FLEN/8, x13, x9, x10)

inst_1372:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x31c72a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f09df and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1caae4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b1c72a; op2val:0xbf0f09df;
op3val:0x549caae4; valaddr_reg:x12; val_offset:4053*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4053*FLEN/8, x13, x9, x10)

inst_1373:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x31c72a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f09df and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1caae4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b1c72a; op2val:0xbf0f09df;
op3val:0x549caae4; valaddr_reg:x12; val_offset:4056*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4056*FLEN/8, x13, x9, x10)

inst_1374:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x31c72a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f09df and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1caae4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b1c72a; op2val:0xbf0f09df;
op3val:0x549caae4; valaddr_reg:x12; val_offset:4059*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4059*FLEN/8, x13, x9, x10)

inst_1375:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79c157 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x31aca6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x2551c5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5479c157; op2val:0xbfb1aca6;
op3val:0x542551c5; valaddr_reg:x12; val_offset:4062*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4062*FLEN/8, x13, x9, x10)

inst_1376:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79c157 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x31aca6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x2551c5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5479c157; op2val:0xbfb1aca6;
op3val:0x542551c5; valaddr_reg:x12; val_offset:4065*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4065*FLEN/8, x13, x9, x10)

inst_1377:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79c157 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x31aca6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x2551c5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5479c157; op2val:0xbfb1aca6;
op3val:0x542551c5; valaddr_reg:x12; val_offset:4068*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4068*FLEN/8, x13, x9, x10)

inst_1378:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79c157 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x31aca6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x2551c5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5479c157; op2val:0xbfb1aca6;
op3val:0x542551c5; valaddr_reg:x12; val_offset:4071*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4071*FLEN/8, x13, x9, x10)

inst_1379:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79c157 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x31aca6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x2551c5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5479c157; op2val:0xbfb1aca6;
op3val:0x542551c5; valaddr_reg:x12; val_offset:4074*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4074*FLEN/8, x13, x9, x10)

inst_1380:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1d5977 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2814a1 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4584db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x549d5977; op2val:0xbfa814a1;
op3val:0x53c584db; valaddr_reg:x12; val_offset:4077*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4077*FLEN/8, x13, x9, x10)

inst_1381:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1d5977 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2814a1 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4584db and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x549d5977; op2val:0xbfa814a1;
op3val:0x53c584db; valaddr_reg:x12; val_offset:4080*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4080*FLEN/8, x13, x9, x10)

inst_1382:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1d5977 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2814a1 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4584db and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x549d5977; op2val:0xbfa814a1;
op3val:0x53c584db; valaddr_reg:x12; val_offset:4083*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4083*FLEN/8, x13, x9, x10)

inst_1383:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1d5977 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2814a1 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4584db and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x549d5977; op2val:0xbfa814a1;
op3val:0x53c584db; valaddr_reg:x12; val_offset:4086*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4086*FLEN/8, x13, x9, x10)

inst_1384:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1d5977 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2814a1 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4584db and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x549d5977; op2val:0xbfa814a1;
op3val:0x53c584db; valaddr_reg:x12; val_offset:4089*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4089*FLEN/8, x13, x9, x10)

inst_1385:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x359877 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x200f02 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x6760fd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b59877; op2val:0xc0a00f02;
op3val:0x536760fd; valaddr_reg:x12; val_offset:4092*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4092*FLEN/8, x13, x9, x10)

inst_1386:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x359877 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x200f02 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x6760fd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b59877; op2val:0xc0a00f02;
op3val:0x536760fd; valaddr_reg:x12; val_offset:4095*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4095*FLEN/8, x13, x9, x10)

inst_1387:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x359877 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x200f02 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x6760fd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b59877; op2val:0xc0a00f02;
op3val:0x536760fd; valaddr_reg:x12; val_offset:4098*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4098*FLEN/8, x13, x9, x10)

inst_1388:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x359877 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x200f02 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x6760fd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b59877; op2val:0xc0a00f02;
op3val:0x536760fd; valaddr_reg:x12; val_offset:4101*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4101*FLEN/8, x13, x9, x10)

inst_1389:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x359877 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x200f02 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x6760fd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b59877; op2val:0xc0a00f02;
op3val:0x536760fd; valaddr_reg:x12; val_offset:4104*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4104*FLEN/8, x13, x9, x10)

inst_1390:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2b5448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x249e88 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x0e9f40 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ab5448; op2val:0xbfa49e88;
op3val:0x538e9f40; valaddr_reg:x12; val_offset:4107*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4107*FLEN/8, x13, x9, x10)

inst_1391:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2b5448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x249e88 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x0e9f40 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ab5448; op2val:0xbfa49e88;
op3val:0x538e9f40; valaddr_reg:x12; val_offset:4110*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4110*FLEN/8, x13, x9, x10)

inst_1392:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2b5448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x249e88 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x0e9f40 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ab5448; op2val:0xbfa49e88;
op3val:0x538e9f40; valaddr_reg:x12; val_offset:4113*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4113*FLEN/8, x13, x9, x10)

inst_1393:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2b5448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x249e88 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x0e9f40 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ab5448; op2val:0xbfa49e88;
op3val:0x538e9f40; valaddr_reg:x12; val_offset:4116*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4116*FLEN/8, x13, x9, x10)

inst_1394:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2b5448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x249e88 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x0e9f40 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ab5448; op2val:0xbfa49e88;
op3val:0x538e9f40; valaddr_reg:x12; val_offset:4119*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4119*FLEN/8, x13, x9, x10)

inst_1395:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x643210 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3a3964 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x3400ef and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53e43210; op2val:0xc03a3964;
op3val:0x543400ef; valaddr_reg:x12; val_offset:4122*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4122*FLEN/8, x13, x9, x10)

inst_1396:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x643210 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3a3964 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x3400ef and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53e43210; op2val:0xc03a3964;
op3val:0x543400ef; valaddr_reg:x12; val_offset:4125*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4125*FLEN/8, x13, x9, x10)

inst_1397:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x643210 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3a3964 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x3400ef and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53e43210; op2val:0xc03a3964;
op3val:0x543400ef; valaddr_reg:x12; val_offset:4128*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4128*FLEN/8, x13, x9, x10)

inst_1398:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x643210 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3a3964 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x3400ef and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53e43210; op2val:0xc03a3964;
op3val:0x543400ef; valaddr_reg:x12; val_offset:4131*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4131*FLEN/8, x13, x9, x10)

inst_1399:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x643210 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3a3964 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x3400ef and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53e43210; op2val:0xc03a3964;
op3val:0x543400ef; valaddr_reg:x12; val_offset:4134*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4134*FLEN/8, x13, x9, x10)

inst_1400:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x105fbd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ffe02 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x25c549 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54905fbd; op2val:0xbf1ffe02;
op3val:0x54a5c549; valaddr_reg:x12; val_offset:4137*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4137*FLEN/8, x13, x9, x10)

inst_1401:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x105fbd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ffe02 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x25c549 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54905fbd; op2val:0xbf1ffe02;
op3val:0x54a5c549; valaddr_reg:x12; val_offset:4140*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4140*FLEN/8, x13, x9, x10)

inst_1402:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x105fbd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ffe02 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x25c549 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54905fbd; op2val:0xbf1ffe02;
op3val:0x54a5c549; valaddr_reg:x12; val_offset:4143*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4143*FLEN/8, x13, x9, x10)

inst_1403:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x105fbd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ffe02 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x25c549 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54905fbd; op2val:0xbf1ffe02;
op3val:0x54a5c549; valaddr_reg:x12; val_offset:4146*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4146*FLEN/8, x13, x9, x10)

inst_1404:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x105fbd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ffe02 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x25c549 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54905fbd; op2val:0xbf1ffe02;
op3val:0x54a5c549; valaddr_reg:x12; val_offset:4149*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4149*FLEN/8, x13, x9, x10)

inst_1405:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x17a2d7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e8f1f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x189a8b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5497a2d7; op2val:0xbf2e8f1f;
op3val:0x54989a8b; valaddr_reg:x12; val_offset:4152*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4152*FLEN/8, x13, x9, x10)

inst_1406:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x17a2d7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e8f1f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x189a8b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5497a2d7; op2val:0xbf2e8f1f;
op3val:0x54989a8b; valaddr_reg:x12; val_offset:4155*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4155*FLEN/8, x13, x9, x10)

inst_1407:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x17a2d7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e8f1f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x189a8b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5497a2d7; op2val:0xbf2e8f1f;
op3val:0x54989a8b; valaddr_reg:x12; val_offset:4158*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4158*FLEN/8, x13, x9, x10)

inst_1408:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x17a2d7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e8f1f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x189a8b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5497a2d7; op2val:0xbf2e8f1f;
op3val:0x54989a8b; valaddr_reg:x12; val_offset:4161*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4161*FLEN/8, x13, x9, x10)

inst_1409:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x17a2d7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e8f1f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x189a8b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5497a2d7; op2val:0xbf2e8f1f;
op3val:0x54989a8b; valaddr_reg:x12; val_offset:4164*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4164*FLEN/8, x13, x9, x10)

inst_1410:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4541d5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x682ba3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69a357 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53c541d5; op2val:0xbee82ba3;
op3val:0x54e9a357; valaddr_reg:x12; val_offset:4167*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4167*FLEN/8, x13, x9, x10)

inst_1411:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4541d5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x682ba3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69a357 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53c541d5; op2val:0xbee82ba3;
op3val:0x54e9a357; valaddr_reg:x12; val_offset:4170*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4170*FLEN/8, x13, x9, x10)

inst_1412:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4541d5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x682ba3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69a357 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53c541d5; op2val:0xbee82ba3;
op3val:0x54e9a357; valaddr_reg:x12; val_offset:4173*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4173*FLEN/8, x13, x9, x10)

inst_1413:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4541d5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x682ba3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69a357 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53c541d5; op2val:0xbee82ba3;
op3val:0x54e9a357; valaddr_reg:x12; val_offset:4176*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4176*FLEN/8, x13, x9, x10)

inst_1414:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4541d5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x682ba3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69a357 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53c541d5; op2val:0xbee82ba3;
op3val:0x54e9a357; valaddr_reg:x12; val_offset:4179*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4179*FLEN/8, x13, x9, x10)

inst_1415:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3cb281 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4dfed5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50526f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54bcb281; op2val:0xbf4dfed5;
op3val:0x5450526f; valaddr_reg:x12; val_offset:4182*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4182*FLEN/8, x13, x9, x10)

inst_1416:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3cb281 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4dfed5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50526f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54bcb281; op2val:0xbf4dfed5;
op3val:0x5450526f; valaddr_reg:x12; val_offset:4185*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4185*FLEN/8, x13, x9, x10)

inst_1417:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3cb281 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4dfed5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50526f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54bcb281; op2val:0xbf4dfed5;
op3val:0x5450526f; valaddr_reg:x12; val_offset:4188*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4188*FLEN/8, x13, x9, x10)

inst_1418:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3cb281 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4dfed5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50526f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54bcb281; op2val:0xbf4dfed5;
op3val:0x5450526f; valaddr_reg:x12; val_offset:4191*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4191*FLEN/8, x13, x9, x10)

inst_1419:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3cb281 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4dfed5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50526f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54bcb281; op2val:0xbf4dfed5;
op3val:0x5450526f; valaddr_reg:x12; val_offset:4194*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4194*FLEN/8, x13, x9, x10)

inst_1420:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b091b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0887d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b76e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544b091b; op2val:0xbf8887d5;
op3val:0x5493b76e; valaddr_reg:x12; val_offset:4197*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4197*FLEN/8, x13, x9, x10)

inst_1421:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b091b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0887d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b76e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544b091b; op2val:0xbf8887d5;
op3val:0x5493b76e; valaddr_reg:x12; val_offset:4200*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4200*FLEN/8, x13, x9, x10)

inst_1422:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b091b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0887d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b76e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544b091b; op2val:0xbf8887d5;
op3val:0x5493b76e; valaddr_reg:x12; val_offset:4203*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4203*FLEN/8, x13, x9, x10)

inst_1423:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b091b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0887d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b76e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544b091b; op2val:0xbf8887d5;
op3val:0x5493b76e; valaddr_reg:x12; val_offset:4206*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4206*FLEN/8, x13, x9, x10)

inst_1424:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b091b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0887d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b76e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544b091b; op2val:0xbf8887d5;
op3val:0x5493b76e; valaddr_reg:x12; val_offset:4209*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4209*FLEN/8, x13, x9, x10)

inst_1425:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x74b52c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e9722 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x24e888 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5374b52c; op2val:0xc03e9722;
op3val:0x54a4e888; valaddr_reg:x12; val_offset:4212*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4212*FLEN/8, x13, x9, x10)

inst_1426:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x74b52c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e9722 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x24e888 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5374b52c; op2val:0xc03e9722;
op3val:0x54a4e888; valaddr_reg:x12; val_offset:4215*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4215*FLEN/8, x13, x9, x10)

inst_1427:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x74b52c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e9722 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x24e888 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5374b52c; op2val:0xc03e9722;
op3val:0x54a4e888; valaddr_reg:x12; val_offset:4218*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4218*FLEN/8, x13, x9, x10)

inst_1428:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x74b52c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e9722 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x24e888 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5374b52c; op2val:0xc03e9722;
op3val:0x54a4e888; valaddr_reg:x12; val_offset:4221*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4221*FLEN/8, x13, x9, x10)

inst_1429:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x74b52c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e9722 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x24e888 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5374b52c; op2val:0xc03e9722;
op3val:0x54a4e888; valaddr_reg:x12; val_offset:4224*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4224*FLEN/8, x13, x9, x10)

inst_1430:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6724ec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3456d6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x3a5744 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e724ec; op2val:0xbf3456d6;
op3val:0x543a5744; valaddr_reg:x12; val_offset:4227*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4227*FLEN/8, x13, x9, x10)

inst_1431:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6724ec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3456d6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x3a5744 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e724ec; op2val:0xbf3456d6;
op3val:0x543a5744; valaddr_reg:x12; val_offset:4230*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4230*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_11)

inst_1432:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6724ec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3456d6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x3a5744 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e724ec; op2val:0xbf3456d6;
op3val:0x543a5744; valaddr_reg:x12; val_offset:4233*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4233*FLEN/8, x13, x9, x10)

inst_1433:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6724ec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3456d6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x3a5744 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e724ec; op2val:0xbf3456d6;
op3val:0x543a5744; valaddr_reg:x12; val_offset:4236*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4236*FLEN/8, x13, x9, x10)

inst_1434:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6724ec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3456d6 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x3a5744 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e724ec; op2val:0xbf3456d6;
op3val:0x543a5744; valaddr_reg:x12; val_offset:4239*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4239*FLEN/8, x13, x9, x10)

inst_1435:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7f7b4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f97fc and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0196a8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547f7b4d; op2val:0xbfbf97fc;
op3val:0x540196a8; valaddr_reg:x12; val_offset:4242*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4242*FLEN/8, x13, x9, x10)

inst_1436:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7f7b4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f97fc and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0196a8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547f7b4d; op2val:0xbfbf97fc;
op3val:0x540196a8; valaddr_reg:x12; val_offset:4245*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4245*FLEN/8, x13, x9, x10)

inst_1437:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7f7b4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f97fc and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0196a8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547f7b4d; op2val:0xbfbf97fc;
op3val:0x540196a8; valaddr_reg:x12; val_offset:4248*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4248*FLEN/8, x13, x9, x10)

inst_1438:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7f7b4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f97fc and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0196a8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547f7b4d; op2val:0xbfbf97fc;
op3val:0x540196a8; valaddr_reg:x12; val_offset:4251*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4251*FLEN/8, x13, x9, x10)

inst_1439:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x7f7b4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f97fc and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0196a8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x547f7b4d; op2val:0xbfbf97fc;
op3val:0x540196a8; valaddr_reg:x12; val_offset:4254*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4254*FLEN/8, x13, x9, x10)

inst_1440:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x68da13 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f6ead and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x40dc82 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e8da13; op2val:0xbf2f6ead;
op3val:0x5440dc82; valaddr_reg:x12; val_offset:4257*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4257*FLEN/8, x13, x9, x10)

inst_1441:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x68da13 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f6ead and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x40dc82 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e8da13; op2val:0xbf2f6ead;
op3val:0x5440dc82; valaddr_reg:x12; val_offset:4260*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4260*FLEN/8, x13, x9, x10)

inst_1442:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x68da13 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f6ead and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x40dc82 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e8da13; op2val:0xbf2f6ead;
op3val:0x5440dc82; valaddr_reg:x12; val_offset:4263*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4263*FLEN/8, x13, x9, x10)

inst_1443:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x68da13 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f6ead and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x40dc82 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e8da13; op2val:0xbf2f6ead;
op3val:0x5440dc82; valaddr_reg:x12; val_offset:4266*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4266*FLEN/8, x13, x9, x10)

inst_1444:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x68da13 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f6ead and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x40dc82 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e8da13; op2val:0xbf2f6ead;
op3val:0x5440dc82; valaddr_reg:x12; val_offset:4269*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4269*FLEN/8, x13, x9, x10)

inst_1445:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x38a526 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bf11d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x367391 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5438a526; op2val:0xbf4bf11d;
op3val:0x54b67391; valaddr_reg:x12; val_offset:4272*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4272*FLEN/8, x13, x9, x10)

inst_1446:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x38a526 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bf11d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x367391 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5438a526; op2val:0xbf4bf11d;
op3val:0x54b67391; valaddr_reg:x12; val_offset:4275*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4275*FLEN/8, x13, x9, x10)

inst_1447:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x38a526 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bf11d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x367391 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5438a526; op2val:0xbf4bf11d;
op3val:0x54b67391; valaddr_reg:x12; val_offset:4278*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4278*FLEN/8, x13, x9, x10)

inst_1448:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x38a526 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bf11d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x367391 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5438a526; op2val:0xbf4bf11d;
op3val:0x54b67391; valaddr_reg:x12; val_offset:4281*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4281*FLEN/8, x13, x9, x10)

inst_1449:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x38a526 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bf11d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x367391 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5438a526; op2val:0xbf4bf11d;
op3val:0x54b67391; valaddr_reg:x12; val_offset:4284*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4284*FLEN/8, x13, x9, x10)

inst_1450:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3eb488 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x029d33 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x67acce and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543eb488; op2val:0xbe829d33;
op3val:0x54e7acce; valaddr_reg:x12; val_offset:4287*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4287*FLEN/8, x13, x9, x10)

inst_1451:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3eb488 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x029d33 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x67acce and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543eb488; op2val:0xbe829d33;
op3val:0x54e7acce; valaddr_reg:x12; val_offset:4290*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4290*FLEN/8, x13, x9, x10)

inst_1452:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3eb488 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x029d33 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x67acce and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543eb488; op2val:0xbe829d33;
op3val:0x54e7acce; valaddr_reg:x12; val_offset:4293*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4293*FLEN/8, x13, x9, x10)

inst_1453:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3eb488 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x029d33 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x67acce and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543eb488; op2val:0xbe829d33;
op3val:0x54e7acce; valaddr_reg:x12; val_offset:4296*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4296*FLEN/8, x13, x9, x10)

inst_1454:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3eb488 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x029d33 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x67acce and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543eb488; op2val:0xbe829d33;
op3val:0x54e7acce; valaddr_reg:x12; val_offset:4299*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4299*FLEN/8, x13, x9, x10)

inst_1455:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x528eb6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fd496 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16ca7f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54528eb6; op2val:0xbf7fd496;
op3val:0x5496ca7f; valaddr_reg:x12; val_offset:4302*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4302*FLEN/8, x13, x9, x10)

inst_1456:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x528eb6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fd496 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16ca7f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54528eb6; op2val:0xbf7fd496;
op3val:0x5496ca7f; valaddr_reg:x12; val_offset:4305*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4305*FLEN/8, x13, x9, x10)

inst_1457:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x528eb6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fd496 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16ca7f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54528eb6; op2val:0xbf7fd496;
op3val:0x5496ca7f; valaddr_reg:x12; val_offset:4308*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4308*FLEN/8, x13, x9, x10)

inst_1458:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x528eb6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fd496 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16ca7f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54528eb6; op2val:0xbf7fd496;
op3val:0x5496ca7f; valaddr_reg:x12; val_offset:4311*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4311*FLEN/8, x13, x9, x10)

inst_1459:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x528eb6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fd496 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16ca7f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54528eb6; op2val:0xbf7fd496;
op3val:0x5496ca7f; valaddr_reg:x12; val_offset:4314*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4314*FLEN/8, x13, x9, x10)

inst_1460:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1c1d96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c5d38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16e346 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541c1d96; op2val:0xbfac5d38;
op3val:0x5496e346; valaddr_reg:x12; val_offset:4317*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4317*FLEN/8, x13, x9, x10)

inst_1461:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1c1d96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c5d38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16e346 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541c1d96; op2val:0xbfac5d38;
op3val:0x5496e346; valaddr_reg:x12; val_offset:4320*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4320*FLEN/8, x13, x9, x10)

inst_1462:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1c1d96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c5d38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16e346 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541c1d96; op2val:0xbfac5d38;
op3val:0x5496e346; valaddr_reg:x12; val_offset:4323*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4323*FLEN/8, x13, x9, x10)

inst_1463:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1c1d96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c5d38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16e346 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541c1d96; op2val:0xbfac5d38;
op3val:0x5496e346; valaddr_reg:x12; val_offset:4326*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4326*FLEN/8, x13, x9, x10)

inst_1464:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1c1d96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c5d38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16e346 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541c1d96; op2val:0xbfac5d38;
op3val:0x5496e346; valaddr_reg:x12; val_offset:4329*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4329*FLEN/8, x13, x9, x10)

inst_1465:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x71c5bf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72dc41 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x55186f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5471c5bf; op2val:0xbff2dc41;
op3val:0x5355186f; valaddr_reg:x12; val_offset:4332*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4332*FLEN/8, x13, x9, x10)

inst_1466:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x71c5bf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72dc41 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x55186f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5471c5bf; op2val:0xbff2dc41;
op3val:0x5355186f; valaddr_reg:x12; val_offset:4335*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4335*FLEN/8, x13, x9, x10)

inst_1467:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x71c5bf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72dc41 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x55186f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5471c5bf; op2val:0xbff2dc41;
op3val:0x5355186f; valaddr_reg:x12; val_offset:4338*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4338*FLEN/8, x13, x9, x10)

inst_1468:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x71c5bf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72dc41 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x55186f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5471c5bf; op2val:0xbff2dc41;
op3val:0x5355186f; valaddr_reg:x12; val_offset:4341*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4341*FLEN/8, x13, x9, x10)

inst_1469:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x71c5bf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72dc41 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x55186f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5471c5bf; op2val:0xbff2dc41;
op3val:0x5355186f; valaddr_reg:x12; val_offset:4344*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4344*FLEN/8, x13, x9, x10)

inst_1470:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x636bf1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x71f15f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56ef0b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de36bf1; op2val:0x40f1f15f;
op3val:0x3f56ef0b; valaddr_reg:x12; val_offset:4347*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4347*FLEN/8, x13, x9, x10)

inst_1471:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x636bf1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x71f15f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56ef0b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de36bf1; op2val:0x40f1f15f;
op3val:0x3f56ef0b; valaddr_reg:x12; val_offset:4350*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4350*FLEN/8, x13, x9, x10)

inst_1472:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x636bf1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x71f15f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56ef0b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de36bf1; op2val:0x40f1f15f;
op3val:0x3f56ef0b; valaddr_reg:x12; val_offset:4353*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4353*FLEN/8, x13, x9, x10)

inst_1473:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x636bf1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x71f15f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56ef0b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de36bf1; op2val:0x40f1f15f;
op3val:0x3f56ef0b; valaddr_reg:x12; val_offset:4356*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4356*FLEN/8, x13, x9, x10)

inst_1474:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x636bf1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x71f15f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56ef0b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de36bf1; op2val:0x40f1f15f;
op3val:0x3f56ef0b; valaddr_reg:x12; val_offset:4359*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4359*FLEN/8, x13, x9, x10)

inst_1475:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5934da and fs2 == 0 and fe2 == 0x7e and fm2 == 0x42d0f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x254b55 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed934da; op2val:0x3f42d0f1;
op3val:0x3ea54b55; valaddr_reg:x12; val_offset:4362*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4362*FLEN/8, x13, x9, x10)

inst_1476:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5934da and fs2 == 0 and fe2 == 0x7e and fm2 == 0x42d0f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x254b55 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed934da; op2val:0x3f42d0f1;
op3val:0x3ea54b55; valaddr_reg:x12; val_offset:4365*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4365*FLEN/8, x13, x9, x10)

inst_1477:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5934da and fs2 == 0 and fe2 == 0x7e and fm2 == 0x42d0f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x254b55 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed934da; op2val:0x3f42d0f1;
op3val:0x3ea54b55; valaddr_reg:x12; val_offset:4368*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4368*FLEN/8, x13, x9, x10)

inst_1478:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5934da and fs2 == 0 and fe2 == 0x7e and fm2 == 0x42d0f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x254b55 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed934da; op2val:0x3f42d0f1;
op3val:0x3ea54b55; valaddr_reg:x12; val_offset:4371*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4371*FLEN/8, x13, x9, x10)

inst_1479:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5934da and fs2 == 0 and fe2 == 0x7e and fm2 == 0x42d0f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x254b55 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed934da; op2val:0x3f42d0f1;
op3val:0x3ea54b55; valaddr_reg:x12; val_offset:4374*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4374*FLEN/8, x13, x9, x10)

inst_1480:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x080570 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x21f923 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c1f97 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f080570; op2val:0x3fa1f923;
op3val:0x3f2c1f97; valaddr_reg:x12; val_offset:4377*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4377*FLEN/8, x13, x9, x10)

inst_1481:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x080570 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x21f923 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c1f97 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f080570; op2val:0x3fa1f923;
op3val:0x3f2c1f97; valaddr_reg:x12; val_offset:4380*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4380*FLEN/8, x13, x9, x10)

inst_1482:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x080570 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x21f923 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c1f97 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f080570; op2val:0x3fa1f923;
op3val:0x3f2c1f97; valaddr_reg:x12; val_offset:4383*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4383*FLEN/8, x13, x9, x10)

inst_1483:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x080570 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x21f923 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c1f97 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f080570; op2val:0x3fa1f923;
op3val:0x3f2c1f97; valaddr_reg:x12; val_offset:4386*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4386*FLEN/8, x13, x9, x10)

inst_1484:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x080570 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x21f923 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c1f97 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f080570; op2val:0x3fa1f923;
op3val:0x3f2c1f97; valaddr_reg:x12; val_offset:4389*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4389*FLEN/8, x13, x9, x10)

inst_1485:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bdd66 and fs2 == 0 and fe2 == 0x74 and fm2 == 0x5b111f and fs3 == 0 and fe3 == 0x73 and fm3 == 0x6f5f83 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0bdd66; op2val:0x3a5b111f;
op3val:0x39ef5f83; valaddr_reg:x12; val_offset:4392*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4392*FLEN/8, x13, x9, x10)

inst_1486:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bdd66 and fs2 == 0 and fe2 == 0x74 and fm2 == 0x5b111f and fs3 == 0 and fe3 == 0x73 and fm3 == 0x6f5f83 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0bdd66; op2val:0x3a5b111f;
op3val:0x39ef5f83; valaddr_reg:x12; val_offset:4395*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4395*FLEN/8, x13, x9, x10)

inst_1487:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bdd66 and fs2 == 0 and fe2 == 0x74 and fm2 == 0x5b111f and fs3 == 0 and fe3 == 0x73 and fm3 == 0x6f5f83 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0bdd66; op2val:0x3a5b111f;
op3val:0x39ef5f83; valaddr_reg:x12; val_offset:4398*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4398*FLEN/8, x13, x9, x10)

inst_1488:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bdd66 and fs2 == 0 and fe2 == 0x74 and fm2 == 0x5b111f and fs3 == 0 and fe3 == 0x73 and fm3 == 0x6f5f83 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0bdd66; op2val:0x3a5b111f;
op3val:0x39ef5f83; valaddr_reg:x12; val_offset:4401*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4401*FLEN/8, x13, x9, x10)

inst_1489:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bdd66 and fs2 == 0 and fe2 == 0x74 and fm2 == 0x5b111f and fs3 == 0 and fe3 == 0x73 and fm3 == 0x6f5f83 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0bdd66; op2val:0x3a5b111f;
op3val:0x39ef5f83; valaddr_reg:x12; val_offset:4404*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4404*FLEN/8, x13, x9, x10)

inst_1490:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf45e and fs2 == 0 and fe2 == 0x7b and fm2 == 0x6e3f4c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6b69ba and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7cf45e; op2val:0x3dee3f4c;
op3val:0x3deb69ba; valaddr_reg:x12; val_offset:4407*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4407*FLEN/8, x13, x9, x10)

inst_1491:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf45e and fs2 == 0 and fe2 == 0x7b and fm2 == 0x6e3f4c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6b69ba and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7cf45e; op2val:0x3dee3f4c;
op3val:0x3deb69ba; valaddr_reg:x12; val_offset:4410*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4410*FLEN/8, x13, x9, x10)

inst_1492:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf45e and fs2 == 0 and fe2 == 0x7b and fm2 == 0x6e3f4c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6b69ba and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7cf45e; op2val:0x3dee3f4c;
op3val:0x3deb69ba; valaddr_reg:x12; val_offset:4413*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4413*FLEN/8, x13, x9, x10)

inst_1493:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf45e and fs2 == 0 and fe2 == 0x7b and fm2 == 0x6e3f4c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6b69ba and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7cf45e; op2val:0x3dee3f4c;
op3val:0x3deb69ba; valaddr_reg:x12; val_offset:4416*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4416*FLEN/8, x13, x9, x10)

inst_1494:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf45e and fs2 == 0 and fe2 == 0x7b and fm2 == 0x6e3f4c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6b69ba and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7cf45e; op2val:0x3dee3f4c;
op3val:0x3deb69ba; valaddr_reg:x12; val_offset:4419*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4419*FLEN/8, x13, x9, x10)

inst_1495:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4916e7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x291f1e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04d891 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec916e7; op2val:0x3fa91f1e;
op3val:0x3f04d891; valaddr_reg:x12; val_offset:4422*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4422*FLEN/8, x13, x9, x10)

inst_1496:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4916e7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x291f1e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04d891 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec916e7; op2val:0x3fa91f1e;
op3val:0x3f04d891; valaddr_reg:x12; val_offset:4425*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4425*FLEN/8, x13, x9, x10)

inst_1497:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4916e7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x291f1e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04d891 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec916e7; op2val:0x3fa91f1e;
op3val:0x3f04d891; valaddr_reg:x12; val_offset:4428*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4428*FLEN/8, x13, x9, x10)

inst_1498:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4916e7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x291f1e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04d891 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec916e7; op2val:0x3fa91f1e;
op3val:0x3f04d891; valaddr_reg:x12; val_offset:4431*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4431*FLEN/8, x13, x9, x10)

inst_1499:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4916e7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x291f1e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04d891 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec916e7; op2val:0x3fa91f1e;
op3val:0x3f04d891; valaddr_reg:x12; val_offset:4434*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4434*FLEN/8, x13, x9, x10)

inst_1500:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x396f8d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ea600 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3874ec and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb96f8d; op2val:0x3f7ea600;
op3val:0x3eb874ec; valaddr_reg:x12; val_offset:4437*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4437*FLEN/8, x13, x9, x10)

inst_1501:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x396f8d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ea600 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3874ec and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb96f8d; op2val:0x3f7ea600;
op3val:0x3eb874ec; valaddr_reg:x12; val_offset:4440*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4440*FLEN/8, x13, x9, x10)

inst_1502:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x396f8d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ea600 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3874ec and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb96f8d; op2val:0x3f7ea600;
op3val:0x3eb874ec; valaddr_reg:x12; val_offset:4443*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4443*FLEN/8, x13, x9, x10)

inst_1503:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x396f8d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ea600 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3874ec and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb96f8d; op2val:0x3f7ea600;
op3val:0x3eb874ec; valaddr_reg:x12; val_offset:4446*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4446*FLEN/8, x13, x9, x10)

inst_1504:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x396f8d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ea600 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3874ec and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb96f8d; op2val:0x3f7ea600;
op3val:0x3eb874ec; valaddr_reg:x12; val_offset:4449*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4449*FLEN/8, x13, x9, x10)

inst_1505:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2dc67a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0d9195 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x403248 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2dc67a; op2val:0x3e0d9195;
op3val:0x3cc03248; valaddr_reg:x12; val_offset:4452*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4452*FLEN/8, x13, x9, x10)

inst_1506:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2dc67a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0d9195 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x403248 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2dc67a; op2val:0x3e0d9195;
op3val:0x3cc03248; valaddr_reg:x12; val_offset:4455*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4455*FLEN/8, x13, x9, x10)

inst_1507:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2dc67a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0d9195 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x403248 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2dc67a; op2val:0x3e0d9195;
op3val:0x3cc03248; valaddr_reg:x12; val_offset:4458*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4458*FLEN/8, x13, x9, x10)

inst_1508:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2dc67a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0d9195 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x403248 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2dc67a; op2val:0x3e0d9195;
op3val:0x3cc03248; valaddr_reg:x12; val_offset:4461*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4461*FLEN/8, x13, x9, x10)

inst_1509:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2dc67a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0d9195 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x403248 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2dc67a; op2val:0x3e0d9195;
op3val:0x3cc03248; valaddr_reg:x12; val_offset:4464*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4464*FLEN/8, x13, x9, x10)

inst_1510:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x78412a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2b3fe6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26117f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef8412a; op2val:0x3fab3fe6;
op3val:0x3f26117f; valaddr_reg:x12; val_offset:4467*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4467*FLEN/8, x13, x9, x10)

inst_1511:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x78412a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2b3fe6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26117f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef8412a; op2val:0x3fab3fe6;
op3val:0x3f26117f; valaddr_reg:x12; val_offset:4470*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4470*FLEN/8, x13, x9, x10)

inst_1512:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x78412a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2b3fe6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26117f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef8412a; op2val:0x3fab3fe6;
op3val:0x3f26117f; valaddr_reg:x12; val_offset:4473*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4473*FLEN/8, x13, x9, x10)

inst_1513:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x78412a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2b3fe6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26117f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef8412a; op2val:0x3fab3fe6;
op3val:0x3f26117f; valaddr_reg:x12; val_offset:4476*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4476*FLEN/8, x13, x9, x10)

inst_1514:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x78412a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2b3fe6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26117f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef8412a; op2val:0x3fab3fe6;
op3val:0x3f26117f; valaddr_reg:x12; val_offset:4479*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4479*FLEN/8, x13, x9, x10)

inst_1515:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2336b3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0f9076 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x370f50 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2336b3; op2val:0x3e0f9076;
op3val:0x3db70f50; valaddr_reg:x12; val_offset:4482*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4482*FLEN/8, x13, x9, x10)

inst_1516:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2336b3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0f9076 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x370f50 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2336b3; op2val:0x3e0f9076;
op3val:0x3db70f50; valaddr_reg:x12; val_offset:4485*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4485*FLEN/8, x13, x9, x10)

inst_1517:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2336b3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0f9076 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x370f50 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2336b3; op2val:0x3e0f9076;
op3val:0x3db70f50; valaddr_reg:x12; val_offset:4488*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4488*FLEN/8, x13, x9, x10)

inst_1518:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2336b3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0f9076 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x370f50 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2336b3; op2val:0x3e0f9076;
op3val:0x3db70f50; valaddr_reg:x12; val_offset:4491*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4491*FLEN/8, x13, x9, x10)

inst_1519:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2336b3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0f9076 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x370f50 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2336b3; op2val:0x3e0f9076;
op3val:0x3db70f50; valaddr_reg:x12; val_offset:4494*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4494*FLEN/8, x13, x9, x10)

inst_1520:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x051c60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x64c9f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6dec95 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f051c60; op2val:0x3fe4c9f9;
op3val:0x3f6dec95; valaddr_reg:x12; val_offset:4497*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4497*FLEN/8, x13, x9, x10)

inst_1521:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x051c60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x64c9f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6dec95 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f051c60; op2val:0x3fe4c9f9;
op3val:0x3f6dec95; valaddr_reg:x12; val_offset:4500*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4500*FLEN/8, x13, x9, x10)

inst_1522:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x051c60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x64c9f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6dec95 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f051c60; op2val:0x3fe4c9f9;
op3val:0x3f6dec95; valaddr_reg:x12; val_offset:4503*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4503*FLEN/8, x13, x9, x10)

inst_1523:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x051c60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x64c9f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6dec95 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f051c60; op2val:0x3fe4c9f9;
op3val:0x3f6dec95; valaddr_reg:x12; val_offset:4506*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4506*FLEN/8, x13, x9, x10)

inst_1524:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x051c60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x64c9f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6dec95 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f051c60; op2val:0x3fe4c9f9;
op3val:0x3f6dec95; valaddr_reg:x12; val_offset:4509*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4509*FLEN/8, x13, x9, x10)

inst_1525:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x53a1ab and fs2 == 0 and fe2 == 0x80 and fm2 == 0x090a7d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x629462 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed3a1ab; op2val:0x40090a7d;
op3val:0x3f629462; valaddr_reg:x12; val_offset:4512*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4512*FLEN/8, x13, x9, x10)

inst_1526:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x53a1ab and fs2 == 0 and fe2 == 0x80 and fm2 == 0x090a7d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x629462 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed3a1ab; op2val:0x40090a7d;
op3val:0x3f629462; valaddr_reg:x12; val_offset:4515*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4515*FLEN/8, x13, x9, x10)

inst_1527:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x53a1ab and fs2 == 0 and fe2 == 0x80 and fm2 == 0x090a7d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x629462 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed3a1ab; op2val:0x40090a7d;
op3val:0x3f629462; valaddr_reg:x12; val_offset:4518*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4518*FLEN/8, x13, x9, x10)

inst_1528:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x53a1ab and fs2 == 0 and fe2 == 0x80 and fm2 == 0x090a7d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x629462 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed3a1ab; op2val:0x40090a7d;
op3val:0x3f629462; valaddr_reg:x12; val_offset:4521*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4521*FLEN/8, x13, x9, x10)

inst_1529:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x53a1ab and fs2 == 0 and fe2 == 0x80 and fm2 == 0x090a7d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x629462 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed3a1ab; op2val:0x40090a7d;
op3val:0x3f629462; valaddr_reg:x12; val_offset:4524*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4524*FLEN/8, x13, x9, x10)

inst_1530:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x273b07 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x08d964 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x32cabc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f273b07; op2val:0x3f08d964;
op3val:0x3eb2cabc; valaddr_reg:x12; val_offset:4527*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4527*FLEN/8, x13, x9, x10)

inst_1531:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x273b07 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x08d964 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x32cabc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f273b07; op2val:0x3f08d964;
op3val:0x3eb2cabc; valaddr_reg:x12; val_offset:4530*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4530*FLEN/8, x13, x9, x10)

inst_1532:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x273b07 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x08d964 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x32cabc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f273b07; op2val:0x3f08d964;
op3val:0x3eb2cabc; valaddr_reg:x12; val_offset:4533*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4533*FLEN/8, x13, x9, x10)

inst_1533:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x273b07 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x08d964 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x32cabc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f273b07; op2val:0x3f08d964;
op3val:0x3eb2cabc; valaddr_reg:x12; val_offset:4536*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4536*FLEN/8, x13, x9, x10)

inst_1534:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x273b07 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x08d964 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x32cabc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f273b07; op2val:0x3f08d964;
op3val:0x3eb2cabc; valaddr_reg:x12; val_offset:4539*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4539*FLEN/8, x13, x9, x10)

inst_1535:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x466370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x191e22 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6d5191 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec66370; op2val:0x3f991e22;
op3val:0x3eed5191; valaddr_reg:x12; val_offset:4542*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4542*FLEN/8, x13, x9, x10)

inst_1536:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x466370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x191e22 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6d5191 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec66370; op2val:0x3f991e22;
op3val:0x3eed5191; valaddr_reg:x12; val_offset:4545*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4545*FLEN/8, x13, x9, x10)

inst_1537:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x466370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x191e22 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6d5191 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec66370; op2val:0x3f991e22;
op3val:0x3eed5191; valaddr_reg:x12; val_offset:4548*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4548*FLEN/8, x13, x9, x10)

inst_1538:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x466370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x191e22 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6d5191 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec66370; op2val:0x3f991e22;
op3val:0x3eed5191; valaddr_reg:x12; val_offset:4551*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4551*FLEN/8, x13, x9, x10)

inst_1539:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x466370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x191e22 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6d5191 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec66370; op2val:0x3f991e22;
op3val:0x3eed5191; valaddr_reg:x12; val_offset:4554*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4554*FLEN/8, x13, x9, x10)

inst_1540:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e8ce6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x13048c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x487c04 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2e8ce6; op2val:0x4013048c;
op3val:0x3ec87c04; valaddr_reg:x12; val_offset:4557*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4557*FLEN/8, x13, x9, x10)

inst_1541:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e8ce6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x13048c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x487c04 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2e8ce6; op2val:0x4013048c;
op3val:0x3ec87c04; valaddr_reg:x12; val_offset:4560*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4560*FLEN/8, x13, x9, x10)

inst_1542:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e8ce6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x13048c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x487c04 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2e8ce6; op2val:0x4013048c;
op3val:0x3ec87c04; valaddr_reg:x12; val_offset:4563*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4563*FLEN/8, x13, x9, x10)

inst_1543:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e8ce6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x13048c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x487c04 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2e8ce6; op2val:0x4013048c;
op3val:0x3ec87c04; valaddr_reg:x12; val_offset:4566*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4566*FLEN/8, x13, x9, x10)

inst_1544:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e8ce6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x13048c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x487c04 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2e8ce6; op2val:0x4013048c;
op3val:0x3ec87c04; valaddr_reg:x12; val_offset:4569*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4569*FLEN/8, x13, x9, x10)

inst_1545:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x73ebe8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4a9779 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x410879 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cf3ebe8; op2val:0x40ca9779;
op3val:0x3e410879; valaddr_reg:x12; val_offset:4572*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4572*FLEN/8, x13, x9, x10)

inst_1546:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x73ebe8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4a9779 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x410879 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cf3ebe8; op2val:0x40ca9779;
op3val:0x3e410879; valaddr_reg:x12; val_offset:4575*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4575*FLEN/8, x13, x9, x10)

inst_1547:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x73ebe8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4a9779 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x410879 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cf3ebe8; op2val:0x40ca9779;
op3val:0x3e410879; valaddr_reg:x12; val_offset:4578*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4578*FLEN/8, x13, x9, x10)

inst_1548:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x73ebe8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4a9779 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x410879 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cf3ebe8; op2val:0x40ca9779;
op3val:0x3e410879; valaddr_reg:x12; val_offset:4581*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4581*FLEN/8, x13, x9, x10)

inst_1549:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x73ebe8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4a9779 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x410879 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cf3ebe8; op2val:0x40ca9779;
op3val:0x3e410879; valaddr_reg:x12; val_offset:4584*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4584*FLEN/8, x13, x9, x10)

inst_1550:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c5d09 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x180803 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5fba45 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3c5d09; op2val:0x3e980803;
op3val:0x3e5fba45; valaddr_reg:x12; val_offset:4587*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4587*FLEN/8, x13, x9, x10)

inst_1551:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c5d09 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x180803 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5fba45 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3c5d09; op2val:0x3e980803;
op3val:0x3e5fba45; valaddr_reg:x12; val_offset:4590*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4590*FLEN/8, x13, x9, x10)

inst_1552:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c5d09 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x180803 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5fba45 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3c5d09; op2val:0x3e980803;
op3val:0x3e5fba45; valaddr_reg:x12; val_offset:4593*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4593*FLEN/8, x13, x9, x10)

inst_1553:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c5d09 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x180803 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5fba45 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3c5d09; op2val:0x3e980803;
op3val:0x3e5fba45; valaddr_reg:x12; val_offset:4596*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4596*FLEN/8, x13, x9, x10)

inst_1554:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c5d09 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x180803 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5fba45 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3c5d09; op2val:0x3e980803;
op3val:0x3e5fba45; valaddr_reg:x12; val_offset:4599*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4599*FLEN/8, x13, x9, x10)

inst_1555:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2396b4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2f9c96 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x607029 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2396b4; op2val:0x3daf9c96;
op3val:0x3d607029; valaddr_reg:x12; val_offset:4602*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4602*FLEN/8, x13, x9, x10)

inst_1556:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2396b4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2f9c96 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x607029 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2396b4; op2val:0x3daf9c96;
op3val:0x3d607029; valaddr_reg:x12; val_offset:4605*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4605*FLEN/8, x13, x9, x10)

inst_1557:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2396b4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2f9c96 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x607029 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2396b4; op2val:0x3daf9c96;
op3val:0x3d607029; valaddr_reg:x12; val_offset:4608*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4608*FLEN/8, x13, x9, x10)

inst_1558:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2396b4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2f9c96 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x607029 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2396b4; op2val:0x3daf9c96;
op3val:0x3d607029; valaddr_reg:x12; val_offset:4611*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4611*FLEN/8, x13, x9, x10)

inst_1559:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2396b4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x2f9c96 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x607029 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2396b4; op2val:0x3daf9c96;
op3val:0x3d607029; valaddr_reg:x12; val_offset:4614*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4614*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_12)

inst_1560:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42f990 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x43953d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14f5c2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec2f990; op2val:0x3fc3953d;
op3val:0x3f14f5c2; valaddr_reg:x12; val_offset:4617*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4617*FLEN/8, x13, x9, x10)

inst_1561:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42f990 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x43953d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14f5c2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec2f990; op2val:0x3fc3953d;
op3val:0x3f14f5c2; valaddr_reg:x12; val_offset:4620*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4620*FLEN/8, x13, x9, x10)

inst_1562:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42f990 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x43953d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14f5c2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec2f990; op2val:0x3fc3953d;
op3val:0x3f14f5c2; valaddr_reg:x12; val_offset:4623*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4623*FLEN/8, x13, x9, x10)

inst_1563:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42f990 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x43953d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14f5c2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec2f990; op2val:0x3fc3953d;
op3val:0x3f14f5c2; valaddr_reg:x12; val_offset:4626*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4626*FLEN/8, x13, x9, x10)

inst_1564:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42f990 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x43953d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14f5c2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec2f990; op2val:0x3fc3953d;
op3val:0x3f14f5c2; valaddr_reg:x12; val_offset:4629*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4629*FLEN/8, x13, x9, x10)

inst_1565:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x533288 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3cc90d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1bbefa and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f533288; op2val:0x3e3cc90d;
op3val:0x3e1bbefa; valaddr_reg:x12; val_offset:4632*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4632*FLEN/8, x13, x9, x10)

inst_1566:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x533288 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3cc90d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1bbefa and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f533288; op2val:0x3e3cc90d;
op3val:0x3e1bbefa; valaddr_reg:x12; val_offset:4635*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4635*FLEN/8, x13, x9, x10)

inst_1567:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x533288 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3cc90d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1bbefa and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f533288; op2val:0x3e3cc90d;
op3val:0x3e1bbefa; valaddr_reg:x12; val_offset:4638*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4638*FLEN/8, x13, x9, x10)

inst_1568:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x533288 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3cc90d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1bbefa and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f533288; op2val:0x3e3cc90d;
op3val:0x3e1bbefa; valaddr_reg:x12; val_offset:4641*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4641*FLEN/8, x13, x9, x10)

inst_1569:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x533288 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3cc90d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1bbefa and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f533288; op2val:0x3e3cc90d;
op3val:0x3e1bbefa; valaddr_reg:x12; val_offset:4644*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4644*FLEN/8, x13, x9, x10)

inst_1570:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25b6b0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42a2af and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7bfb81 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f25b6b0; op2val:0x3fc2a2af;
op3val:0x3f7bfb81; valaddr_reg:x12; val_offset:4647*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4647*FLEN/8, x13, x9, x10)

inst_1571:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25b6b0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42a2af and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7bfb81 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f25b6b0; op2val:0x3fc2a2af;
op3val:0x3f7bfb81; valaddr_reg:x12; val_offset:4650*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4650*FLEN/8, x13, x9, x10)

inst_1572:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25b6b0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42a2af and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7bfb81 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f25b6b0; op2val:0x3fc2a2af;
op3val:0x3f7bfb81; valaddr_reg:x12; val_offset:4653*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4653*FLEN/8, x13, x9, x10)

inst_1573:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25b6b0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42a2af and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7bfb81 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f25b6b0; op2val:0x3fc2a2af;
op3val:0x3f7bfb81; valaddr_reg:x12; val_offset:4656*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4656*FLEN/8, x13, x9, x10)

inst_1574:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25b6b0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42a2af and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7bfb81 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f25b6b0; op2val:0x3fc2a2af;
op3val:0x3f7bfb81; valaddr_reg:x12; val_offset:4659*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4659*FLEN/8, x13, x9, x10)

inst_1575:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x498bf9 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x21858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e5455 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e498bf9; op2val:0x40a1858a;
op3val:0x3f7e5455; valaddr_reg:x12; val_offset:4662*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4662*FLEN/8, x13, x9, x10)

inst_1576:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x498bf9 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x21858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e5455 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e498bf9; op2val:0x40a1858a;
op3val:0x3f7e5455; valaddr_reg:x12; val_offset:4665*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4665*FLEN/8, x13, x9, x10)

inst_1577:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x498bf9 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x21858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e5455 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e498bf9; op2val:0x40a1858a;
op3val:0x3f7e5455; valaddr_reg:x12; val_offset:4668*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4668*FLEN/8, x13, x9, x10)

inst_1578:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x498bf9 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x21858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e5455 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e498bf9; op2val:0x40a1858a;
op3val:0x3f7e5455; valaddr_reg:x12; val_offset:4671*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4671*FLEN/8, x13, x9, x10)

inst_1579:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x498bf9 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x21858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e5455 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e498bf9; op2val:0x40a1858a;
op3val:0x3f7e5455; valaddr_reg:x12; val_offset:4674*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4674*FLEN/8, x13, x9, x10)

inst_1580:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x748e97 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x01eada and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78386a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f748e97; op2val:0x3f81eada;
op3val:0x3f78386a; valaddr_reg:x12; val_offset:4677*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4677*FLEN/8, x13, x9, x10)

inst_1581:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x748e97 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x01eada and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78386a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f748e97; op2val:0x3f81eada;
op3val:0x3f78386a; valaddr_reg:x12; val_offset:4680*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4680*FLEN/8, x13, x9, x10)

inst_1582:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x748e97 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x01eada and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78386a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f748e97; op2val:0x3f81eada;
op3val:0x3f78386a; valaddr_reg:x12; val_offset:4683*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4683*FLEN/8, x13, x9, x10)

inst_1583:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x748e97 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x01eada and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78386a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f748e97; op2val:0x3f81eada;
op3val:0x3f78386a; valaddr_reg:x12; val_offset:4686*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4686*FLEN/8, x13, x9, x10)

inst_1584:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x748e97 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x01eada and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78386a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f748e97; op2val:0x3f81eada;
op3val:0x3f78386a; valaddr_reg:x12; val_offset:4689*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4689*FLEN/8, x13, x9, x10)

inst_1585:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35f632 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1db770 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6034bf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5f632; op2val:0x3f9db770;
op3val:0x3ee034bf; valaddr_reg:x12; val_offset:4692*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4692*FLEN/8, x13, x9, x10)

inst_1586:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35f632 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1db770 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6034bf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5f632; op2val:0x3f9db770;
op3val:0x3ee034bf; valaddr_reg:x12; val_offset:4695*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4695*FLEN/8, x13, x9, x10)

inst_1587:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35f632 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1db770 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6034bf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5f632; op2val:0x3f9db770;
op3val:0x3ee034bf; valaddr_reg:x12; val_offset:4698*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4698*FLEN/8, x13, x9, x10)

inst_1588:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35f632 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1db770 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6034bf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5f632; op2val:0x3f9db770;
op3val:0x3ee034bf; valaddr_reg:x12; val_offset:4701*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4701*FLEN/8, x13, x9, x10)

inst_1589:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35f632 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1db770 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6034bf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5f632; op2val:0x3f9db770;
op3val:0x3ee034bf; valaddr_reg:x12; val_offset:4704*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4704*FLEN/8, x13, x9, x10)

inst_1590:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0439e9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x00e07f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0521d2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0439e9; op2val:0x3e00e07f;
op3val:0x3d8521d2; valaddr_reg:x12; val_offset:4707*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4707*FLEN/8, x13, x9, x10)

inst_1591:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0439e9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x00e07f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0521d2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0439e9; op2val:0x3e00e07f;
op3val:0x3d8521d2; valaddr_reg:x12; val_offset:4710*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4710*FLEN/8, x13, x9, x10)

inst_1592:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0439e9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x00e07f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0521d2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0439e9; op2val:0x3e00e07f;
op3val:0x3d8521d2; valaddr_reg:x12; val_offset:4713*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4713*FLEN/8, x13, x9, x10)

inst_1593:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0439e9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x00e07f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0521d2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0439e9; op2val:0x3e00e07f;
op3val:0x3d8521d2; valaddr_reg:x12; val_offset:4716*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4716*FLEN/8, x13, x9, x10)

inst_1594:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0439e9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x00e07f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0521d2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0439e9; op2val:0x3e00e07f;
op3val:0x3d8521d2; valaddr_reg:x12; val_offset:4719*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4719*FLEN/8, x13, x9, x10)

inst_1595:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x078fc4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ffec7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b565c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f078fc4; op2val:0x3fbffec7;
op3val:0x3f4b565c; valaddr_reg:x12; val_offset:4722*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4722*FLEN/8, x13, x9, x10)

inst_1596:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x078fc4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ffec7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b565c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f078fc4; op2val:0x3fbffec7;
op3val:0x3f4b565c; valaddr_reg:x12; val_offset:4725*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4725*FLEN/8, x13, x9, x10)

inst_1597:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x078fc4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ffec7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b565c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f078fc4; op2val:0x3fbffec7;
op3val:0x3f4b565c; valaddr_reg:x12; val_offset:4728*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4728*FLEN/8, x13, x9, x10)

inst_1598:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x078fc4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ffec7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b565c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f078fc4; op2val:0x3fbffec7;
op3val:0x3f4b565c; valaddr_reg:x12; val_offset:4731*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4731*FLEN/8, x13, x9, x10)

inst_1599:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x078fc4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ffec7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b565c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f078fc4; op2val:0x3fbffec7;
op3val:0x3f4b565c; valaddr_reg:x12; val_offset:4734*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4734*FLEN/8, x13, x9, x10)

inst_1600:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x66e09b and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7c9187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x63c858 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b66e09b; op2val:0x437c9187;
op3val:0x3f63c858; valaddr_reg:x12; val_offset:4737*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4737*FLEN/8, x13, x9, x10)

inst_1601:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x66e09b and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7c9187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x63c858 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b66e09b; op2val:0x437c9187;
op3val:0x3f63c858; valaddr_reg:x12; val_offset:4740*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4740*FLEN/8, x13, x9, x10)

inst_1602:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x66e09b and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7c9187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x63c858 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b66e09b; op2val:0x437c9187;
op3val:0x3f63c858; valaddr_reg:x12; val_offset:4743*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4743*FLEN/8, x13, x9, x10)

inst_1603:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x66e09b and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7c9187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x63c858 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b66e09b; op2val:0x437c9187;
op3val:0x3f63c858; valaddr_reg:x12; val_offset:4746*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4746*FLEN/8, x13, x9, x10)

inst_1604:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x66e09b and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7c9187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x63c858 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b66e09b; op2val:0x437c9187;
op3val:0x3f63c858; valaddr_reg:x12; val_offset:4749*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4749*FLEN/8, x13, x9, x10)

inst_1605:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x734aea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x515c38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46f7ce and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f734aea; op2val:0x3f515c38;
op3val:0x3f46f7ce; valaddr_reg:x12; val_offset:4752*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4752*FLEN/8, x13, x9, x10)

inst_1606:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x734aea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x515c38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46f7ce and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f734aea; op2val:0x3f515c38;
op3val:0x3f46f7ce; valaddr_reg:x12; val_offset:4755*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4755*FLEN/8, x13, x9, x10)

inst_1607:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x734aea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x515c38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46f7ce and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f734aea; op2val:0x3f515c38;
op3val:0x3f46f7ce; valaddr_reg:x12; val_offset:4758*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4758*FLEN/8, x13, x9, x10)

inst_1608:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x734aea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x515c38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46f7ce and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f734aea; op2val:0x3f515c38;
op3val:0x3f46f7ce; valaddr_reg:x12; val_offset:4761*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4761*FLEN/8, x13, x9, x10)

inst_1609:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x734aea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x515c38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46f7ce and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f734aea; op2val:0x3f515c38;
op3val:0x3f46f7ce; valaddr_reg:x12; val_offset:4764*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4764*FLEN/8, x13, x9, x10)

inst_1610:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x40363e and fs2 == 0 and fe2 == 0x83 and fm2 == 0x468e38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1514bd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc0363e; op2val:0x41c68e38;
op3val:0x3f1514bd; valaddr_reg:x12; val_offset:4767*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4767*FLEN/8, x13, x9, x10)

inst_1611:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x40363e and fs2 == 0 and fe2 == 0x83 and fm2 == 0x468e38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1514bd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc0363e; op2val:0x41c68e38;
op3val:0x3f1514bd; valaddr_reg:x12; val_offset:4770*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4770*FLEN/8, x13, x9, x10)

inst_1612:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x40363e and fs2 == 0 and fe2 == 0x83 and fm2 == 0x468e38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1514bd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc0363e; op2val:0x41c68e38;
op3val:0x3f1514bd; valaddr_reg:x12; val_offset:4773*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4773*FLEN/8, x13, x9, x10)

inst_1613:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x40363e and fs2 == 0 and fe2 == 0x83 and fm2 == 0x468e38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1514bd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc0363e; op2val:0x41c68e38;
op3val:0x3f1514bd; valaddr_reg:x12; val_offset:4776*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4776*FLEN/8, x13, x9, x10)

inst_1614:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x40363e and fs2 == 0 and fe2 == 0x83 and fm2 == 0x468e38 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1514bd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc0363e; op2val:0x41c68e38;
op3val:0x3f1514bd; valaddr_reg:x12; val_offset:4779*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4779*FLEN/8, x13, x9, x10)

inst_1615:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24a42e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7aebea and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21600e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f24a42e; op2val:0x3f7aebea;
op3val:0x3f21600e; valaddr_reg:x12; val_offset:4782*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4782*FLEN/8, x13, x9, x10)

inst_1616:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24a42e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7aebea and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21600e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f24a42e; op2val:0x3f7aebea;
op3val:0x3f21600e; valaddr_reg:x12; val_offset:4785*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4785*FLEN/8, x13, x9, x10)

inst_1617:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24a42e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7aebea and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21600e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f24a42e; op2val:0x3f7aebea;
op3val:0x3f21600e; valaddr_reg:x12; val_offset:4788*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4788*FLEN/8, x13, x9, x10)

inst_1618:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24a42e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7aebea and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21600e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f24a42e; op2val:0x3f7aebea;
op3val:0x3f21600e; valaddr_reg:x12; val_offset:4791*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4791*FLEN/8, x13, x9, x10)

inst_1619:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24a42e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7aebea and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21600e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f24a42e; op2val:0x3f7aebea;
op3val:0x3f21600e; valaddr_reg:x12; val_offset:4794*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4794*FLEN/8, x13, x9, x10)

inst_1620:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x212e25 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46af6d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a3049 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f212e25; op2val:0x3ec6af6d;
op3val:0x3e7a3049; valaddr_reg:x12; val_offset:4797*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4797*FLEN/8, x13, x9, x10)

inst_1621:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x212e25 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46af6d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a3049 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f212e25; op2val:0x3ec6af6d;
op3val:0x3e7a3049; valaddr_reg:x12; val_offset:4800*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4800*FLEN/8, x13, x9, x10)

inst_1622:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x212e25 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46af6d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a3049 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f212e25; op2val:0x3ec6af6d;
op3val:0x3e7a3049; valaddr_reg:x12; val_offset:4803*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4803*FLEN/8, x13, x9, x10)

inst_1623:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x212e25 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46af6d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a3049 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f212e25; op2val:0x3ec6af6d;
op3val:0x3e7a3049; valaddr_reg:x12; val_offset:4806*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4806*FLEN/8, x13, x9, x10)

inst_1624:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x212e25 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46af6d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a3049 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f212e25; op2val:0x3ec6af6d;
op3val:0x3e7a3049; valaddr_reg:x12; val_offset:4809*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4809*FLEN/8, x13, x9, x10)

inst_1625:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x395ddd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ec5eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x387a71 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb95ddd; op2val:0x3ffec5eb;
op3val:0x3f387a71; valaddr_reg:x12; val_offset:4812*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4812*FLEN/8, x13, x9, x10)

inst_1626:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x395ddd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ec5eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x387a71 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb95ddd; op2val:0x3ffec5eb;
op3val:0x3f387a71; valaddr_reg:x12; val_offset:4815*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4815*FLEN/8, x13, x9, x10)

inst_1627:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x395ddd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ec5eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x387a71 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb95ddd; op2val:0x3ffec5eb;
op3val:0x3f387a71; valaddr_reg:x12; val_offset:4818*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4818*FLEN/8, x13, x9, x10)

inst_1628:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x395ddd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ec5eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x387a71 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb95ddd; op2val:0x3ffec5eb;
op3val:0x3f387a71; valaddr_reg:x12; val_offset:4821*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4821*FLEN/8, x13, x9, x10)

inst_1629:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x395ddd and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ec5eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x387a71 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb95ddd; op2val:0x3ffec5eb;
op3val:0x3f387a71; valaddr_reg:x12; val_offset:4824*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4824*FLEN/8, x13, x9, x10)

inst_1630:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f4268 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x68911f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c49ad and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4f4268; op2val:0x3e68911f;
op3val:0x3e3c49ad; valaddr_reg:x12; val_offset:4827*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4827*FLEN/8, x13, x9, x10)

inst_1631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f4268 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x68911f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c49ad and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4f4268; op2val:0x3e68911f;
op3val:0x3e3c49ad; valaddr_reg:x12; val_offset:4830*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4830*FLEN/8, x13, x9, x10)

inst_1632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f4268 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x68911f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c49ad and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4f4268; op2val:0x3e68911f;
op3val:0x3e3c49ad; valaddr_reg:x12; val_offset:4833*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4833*FLEN/8, x13, x9, x10)

inst_1633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f4268 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x68911f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c49ad and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4f4268; op2val:0x3e68911f;
op3val:0x3e3c49ad; valaddr_reg:x12; val_offset:4836*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4836*FLEN/8, x13, x9, x10)

inst_1634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f4268 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x68911f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c49ad and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4f4268; op2val:0x3e68911f;
op3val:0x3e3c49ad; valaddr_reg:x12; val_offset:4839*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4839*FLEN/8, x13, x9, x10)

inst_1635:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x607f8d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1175e5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7f1f46 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee07f8d; op2val:0x3f9175e5;
op3val:0x3eff1f46; valaddr_reg:x12; val_offset:4842*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4842*FLEN/8, x13, x9, x10)

inst_1636:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x607f8d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1175e5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7f1f46 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee07f8d; op2val:0x3f9175e5;
op3val:0x3eff1f46; valaddr_reg:x12; val_offset:4845*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4845*FLEN/8, x13, x9, x10)

inst_1637:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x607f8d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1175e5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7f1f46 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee07f8d; op2val:0x3f9175e5;
op3val:0x3eff1f46; valaddr_reg:x12; val_offset:4848*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4848*FLEN/8, x13, x9, x10)

inst_1638:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x607f8d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1175e5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7f1f46 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee07f8d; op2val:0x3f9175e5;
op3val:0x3eff1f46; valaddr_reg:x12; val_offset:4851*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4851*FLEN/8, x13, x9, x10)

inst_1639:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x607f8d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1175e5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7f1f46 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee07f8d; op2val:0x3f9175e5;
op3val:0x3eff1f46; valaddr_reg:x12; val_offset:4854*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4854*FLEN/8, x13, x9, x10)

inst_1640:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c9870 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x70c52e and fs3 == 0 and fe3 == 0x79 and fm3 == 0x406c80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c9870; op2val:0x3cf0c52e;
op3val:0x3cc06c80; valaddr_reg:x12; val_offset:4857*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4857*FLEN/8, x13, x9, x10)

inst_1641:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c9870 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x70c52e and fs3 == 0 and fe3 == 0x79 and fm3 == 0x406c80 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c9870; op2val:0x3cf0c52e;
op3val:0x3cc06c80; valaddr_reg:x12; val_offset:4860*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4860*FLEN/8, x13, x9, x10)

inst_1642:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c9870 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x70c52e and fs3 == 0 and fe3 == 0x79 and fm3 == 0x406c80 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c9870; op2val:0x3cf0c52e;
op3val:0x3cc06c80; valaddr_reg:x12; val_offset:4863*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4863*FLEN/8, x13, x9, x10)

inst_1643:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c9870 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x70c52e and fs3 == 0 and fe3 == 0x79 and fm3 == 0x406c80 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c9870; op2val:0x3cf0c52e;
op3val:0x3cc06c80; valaddr_reg:x12; val_offset:4866*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4866*FLEN/8, x13, x9, x10)

inst_1644:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c9870 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x70c52e and fs3 == 0 and fe3 == 0x79 and fm3 == 0x406c80 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c9870; op2val:0x3cf0c52e;
op3val:0x3cc06c80; valaddr_reg:x12; val_offset:4869*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4869*FLEN/8, x13, x9, x10)

inst_1645:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7166a1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3189bb and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2769d5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef166a1; op2val:0x3e3189bb;
op3val:0x3da769d5; valaddr_reg:x12; val_offset:4872*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4872*FLEN/8, x13, x9, x10)

inst_1646:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7166a1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3189bb and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2769d5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef166a1; op2val:0x3e3189bb;
op3val:0x3da769d5; valaddr_reg:x12; val_offset:4875*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4875*FLEN/8, x13, x9, x10)

inst_1647:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7166a1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3189bb and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2769d5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef166a1; op2val:0x3e3189bb;
op3val:0x3da769d5; valaddr_reg:x12; val_offset:4878*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4878*FLEN/8, x13, x9, x10)

inst_1648:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7166a1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3189bb and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2769d5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef166a1; op2val:0x3e3189bb;
op3val:0x3da769d5; valaddr_reg:x12; val_offset:4881*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4881*FLEN/8, x13, x9, x10)

inst_1649:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7166a1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3189bb and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2769d5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef166a1; op2val:0x3e3189bb;
op3val:0x3da769d5; valaddr_reg:x12; val_offset:4884*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4884*FLEN/8, x13, x9, x10)

inst_1650:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26f6f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0dc26a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x38e9a5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea6f6f6; op2val:0x3f8dc26a;
op3val:0x3eb8e9a5; valaddr_reg:x12; val_offset:4887*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4887*FLEN/8, x13, x9, x10)

inst_1651:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26f6f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0dc26a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x38e9a5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea6f6f6; op2val:0x3f8dc26a;
op3val:0x3eb8e9a5; valaddr_reg:x12; val_offset:4890*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4890*FLEN/8, x13, x9, x10)

inst_1652:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26f6f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0dc26a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x38e9a5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea6f6f6; op2val:0x3f8dc26a;
op3val:0x3eb8e9a5; valaddr_reg:x12; val_offset:4893*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4893*FLEN/8, x13, x9, x10)

inst_1653:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26f6f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0dc26a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x38e9a5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea6f6f6; op2val:0x3f8dc26a;
op3val:0x3eb8e9a5; valaddr_reg:x12; val_offset:4896*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4896*FLEN/8, x13, x9, x10)

inst_1654:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26f6f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0dc26a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x38e9a5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea6f6f6; op2val:0x3f8dc26a;
op3val:0x3eb8e9a5; valaddr_reg:x12; val_offset:4899*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4899*FLEN/8, x13, x9, x10)

inst_1655:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x79c1b4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x34457d and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2fdfff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f79c1b4; op2val:0x3db4457d;
op3val:0x3dafdfff; valaddr_reg:x12; val_offset:4902*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4902*FLEN/8, x13, x9, x10)

inst_1656:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x79c1b4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x34457d and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2fdfff and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f79c1b4; op2val:0x3db4457d;
op3val:0x3dafdfff; valaddr_reg:x12; val_offset:4905*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4905*FLEN/8, x13, x9, x10)

inst_1657:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x79c1b4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x34457d and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2fdfff and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f79c1b4; op2val:0x3db4457d;
op3val:0x3dafdfff; valaddr_reg:x12; val_offset:4908*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4908*FLEN/8, x13, x9, x10)

inst_1658:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x79c1b4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x34457d and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2fdfff and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f79c1b4; op2val:0x3db4457d;
op3val:0x3dafdfff; valaddr_reg:x12; val_offset:4911*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4911*FLEN/8, x13, x9, x10)

inst_1659:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x79c1b4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x34457d and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2fdfff and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f79c1b4; op2val:0x3db4457d;
op3val:0x3dafdfff; valaddr_reg:x12; val_offset:4914*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4914*FLEN/8, x13, x9, x10)

inst_1660:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x14e79a and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b3dff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c6f6e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e14e79a; op2val:0x40cb3dff;
op3val:0x3f6c6f6e; valaddr_reg:x12; val_offset:4917*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4917*FLEN/8, x13, x9, x10)

inst_1661:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x14e79a and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b3dff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c6f6e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e14e79a; op2val:0x40cb3dff;
op3val:0x3f6c6f6e; valaddr_reg:x12; val_offset:4920*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4920*FLEN/8, x13, x9, x10)

inst_1662:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x14e79a and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b3dff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c6f6e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e14e79a; op2val:0x40cb3dff;
op3val:0x3f6c6f6e; valaddr_reg:x12; val_offset:4923*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4923*FLEN/8, x13, x9, x10)

inst_1663:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x14e79a and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b3dff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c6f6e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e14e79a; op2val:0x40cb3dff;
op3val:0x3f6c6f6e; valaddr_reg:x12; val_offset:4926*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4926*FLEN/8, x13, x9, x10)

inst_1664:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x14e79a and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b3dff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c6f6e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e14e79a; op2val:0x40cb3dff;
op3val:0x3f6c6f6e; valaddr_reg:x12; val_offset:4929*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4929*FLEN/8, x13, x9, x10)

inst_1665:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b19be and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3514b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x264c34 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6b19be; op2val:0x3eb514b1;
op3val:0x3ea64c34; valaddr_reg:x12; val_offset:4932*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4932*FLEN/8, x13, x9, x10)

inst_1666:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b19be and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3514b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x264c34 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6b19be; op2val:0x3eb514b1;
op3val:0x3ea64c34; valaddr_reg:x12; val_offset:4935*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4935*FLEN/8, x13, x9, x10)

inst_1667:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b19be and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3514b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x264c34 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6b19be; op2val:0x3eb514b1;
op3val:0x3ea64c34; valaddr_reg:x12; val_offset:4938*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4938*FLEN/8, x13, x9, x10)

inst_1668:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b19be and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3514b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x264c34 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6b19be; op2val:0x3eb514b1;
op3val:0x3ea64c34; valaddr_reg:x12; val_offset:4941*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4941*FLEN/8, x13, x9, x10)

inst_1669:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b19be and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3514b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x264c34 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6b19be; op2val:0x3eb514b1;
op3val:0x3ea64c34; valaddr_reg:x12; val_offset:4944*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4944*FLEN/8, x13, x9, x10)

inst_1670:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2a2294 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b6b4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4e9482 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eaa2294; op2val:0x401b6b4f;
op3val:0x3f4e9482; valaddr_reg:x12; val_offset:4947*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4947*FLEN/8, x13, x9, x10)

inst_1671:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2a2294 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b6b4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4e9482 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eaa2294; op2val:0x401b6b4f;
op3val:0x3f4e9482; valaddr_reg:x12; val_offset:4950*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4950*FLEN/8, x13, x9, x10)

inst_1672:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2a2294 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b6b4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4e9482 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eaa2294; op2val:0x401b6b4f;
op3val:0x3f4e9482; valaddr_reg:x12; val_offset:4953*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4953*FLEN/8, x13, x9, x10)

inst_1673:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2a2294 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b6b4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4e9482 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eaa2294; op2val:0x401b6b4f;
op3val:0x3f4e9482; valaddr_reg:x12; val_offset:4956*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4956*FLEN/8, x13, x9, x10)

inst_1674:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2a2294 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b6b4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4e9482 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eaa2294; op2val:0x401b6b4f;
op3val:0x3f4e9482; valaddr_reg:x12; val_offset:4959*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4959*FLEN/8, x13, x9, x10)

inst_1675:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x143039 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x47444b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x66b20a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c143039; op2val:0x42c7444b;
op3val:0x3f66b20a; valaddr_reg:x12; val_offset:4962*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4962*FLEN/8, x13, x9, x10)

inst_1676:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x143039 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x47444b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x66b20a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c143039; op2val:0x42c7444b;
op3val:0x3f66b20a; valaddr_reg:x12; val_offset:4965*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4965*FLEN/8, x13, x9, x10)

inst_1677:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x143039 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x47444b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x66b20a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c143039; op2val:0x42c7444b;
op3val:0x3f66b20a; valaddr_reg:x12; val_offset:4968*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4968*FLEN/8, x13, x9, x10)

inst_1678:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x143039 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x47444b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x66b20a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c143039; op2val:0x42c7444b;
op3val:0x3f66b20a; valaddr_reg:x12; val_offset:4971*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4971*FLEN/8, x13, x9, x10)

inst_1679:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x143039 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x47444b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x66b20a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c143039; op2val:0x42c7444b;
op3val:0x3f66b20a; valaddr_reg:x12; val_offset:4974*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4974*FLEN/8, x13, x9, x10)

inst_1680:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x539ea8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c8df0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3651ad and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e539ea8; op2val:0x3f5c8df0;
op3val:0x3e3651ad; valaddr_reg:x12; val_offset:4977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4977*FLEN/8, x13, x9, x10)

inst_1681:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x539ea8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c8df0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3651ad and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e539ea8; op2val:0x3f5c8df0;
op3val:0x3e3651ad; valaddr_reg:x12; val_offset:4980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4980*FLEN/8, x13, x9, x10)

inst_1682:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x539ea8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c8df0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3651ad and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e539ea8; op2val:0x3f5c8df0;
op3val:0x3e3651ad; valaddr_reg:x12; val_offset:4983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4983*FLEN/8, x13, x9, x10)

inst_1683:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d4c5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37881a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d065f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f03d4c5; op2val:0x3fb7881a;
op3val:0x3f3d065f; valaddr_reg:x12; val_offset:4986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4986*FLEN/8, x13, x9, x10)

inst_1684:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d4c5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37881a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d065f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f03d4c5; op2val:0x3fb7881a;
op3val:0x3f3d065f; valaddr_reg:x12; val_offset:4989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4989*FLEN/8, x13, x9, x10)

inst_1685:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d4c5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37881a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d065f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f03d4c5; op2val:0x3fb7881a;
op3val:0x3f3d065f; valaddr_reg:x12; val_offset:4992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4992*FLEN/8, x13, x9, x10)

inst_1686:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03d4c5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37881a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d065f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f03d4c5; op2val:0x3fb7881a;
op3val:0x3f3d065f; valaddr_reg:x12; val_offset:4995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4995*FLEN/8, x13, x9, x10)

inst_1687:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe265 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb704 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2ca30b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7fe265; op2val:0x3eacb704;
op3val:0x3eaca30b; valaddr_reg:x12; val_offset:4998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4998*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_13)

inst_1688:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a5466 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0acfe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1603ac and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a5466; op2val:0x400acfe7;
op3val:0x3f1603ac; valaddr_reg:x12; val_offset:5001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 5001*FLEN/8, x13, x9, x10)

inst_1689:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a5466 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0acfe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1603ac and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a5466; op2val:0x400acfe7;
op3val:0x3f1603ac; valaddr_reg:x12; val_offset:5004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 5004*FLEN/8, x13, x9, x10)

inst_1690:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c6342 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x304bab and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22ca1d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eec6342; op2val:0x3f304bab;
op3val:0x3ea2ca1d; valaddr_reg:x12; val_offset:5007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 5007*FLEN/8, x13, x9, x10)

inst_1691:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6c6342 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x304bab and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22ca1d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eec6342; op2val:0x3f304bab;
op3val:0x3ea2ca1d; valaddr_reg:x12; val_offset:5010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 5010*FLEN/8, x13, x9, x10)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(1045667496,64,FLEN)
NAN_BOXED(1063030256,64,FLEN)
NAN_BOXED(1043747245,64,FLEN)
NAN_BOXED(1045667496,64,FLEN)
NAN_BOXED(1045667496,64,FLEN)
NAN_BOXED(1043747245,64,FLEN)
NAN_BOXED(1045667496,64,FLEN)
NAN_BOXED(1045667496,64,FLEN)
NAN_BOXED(1043747245,64,FLEN)
NAN_BOXED(1045667496,64,FLEN)
NAN_BOXED(1063030256,64,FLEN)
NAN_BOXED(1045667496,64,FLEN)
NAN_BOXED(1045667496,64,FLEN)
NAN_BOXED(1063030256,64,FLEN)
NAN_BOXED(1043747245,64,FLEN)
NAN_BOXED(1057215685,64,FLEN)
NAN_BOXED(1057215685,64,FLEN)
NAN_BOXED(1057215685,64,FLEN)
NAN_BOXED(1057215685,64,FLEN)
NAN_BOXED(1068992538,64,FLEN)
NAN_BOXED(1068992538,64,FLEN)
NAN_BOXED(1057215685,64,FLEN)
NAN_BOXED(1068992538,64,FLEN)
NAN_BOXED(1068992538,64,FLEN)
NAN_BOXED(1057215685,64,FLEN)
NAN_BOXED(1068992538,64,FLEN)
NAN_BOXED(1060963935,64,FLEN)
NAN_BOXED(1057215685,64,FLEN)
NAN_BOXED(1057215685,64,FLEN)
NAN_BOXED(1057215685,64,FLEN)
NAN_BOXED(1065345637,64,FLEN)
NAN_BOXED(1051506436,64,FLEN)
NAN_BOXED(1051501323,64,FLEN)
NAN_BOXED(1065345637,64,FLEN)
NAN_BOXED(1051506436,64,FLEN)
NAN_BOXED(1065345637,64,FLEN)
NAN_BOXED(1065345637,64,FLEN)
NAN_BOXED(1051506436,64,FLEN)
NAN_BOXED(1051501323,64,FLEN)
NAN_BOXED(1065345637,64,FLEN)
NAN_BOXED(1051506436,64,FLEN)
NAN_BOXED(1051501323,64,FLEN)
NAN_BOXED(1065345637,64,FLEN)
NAN_BOXED(1051506436,64,FLEN)
NAN_BOXED(1051501323,64,FLEN)
NAN_BOXED(1057463658,64,FLEN)
NAN_BOXED(1055406206,64,FLEN)
NAN_BOXED(1047922988,64,FLEN)
NAN_BOXED(1057463658,64,FLEN)
NAN_BOXED(1055406206,64,FLEN)
NAN_BOXED(1047922988,64,FLEN)
NAN_BOXED(1057463658,64,FLEN)
NAN_BOXED(1055406206,64,FLEN)
NAN_BOXED(1047922988,64,FLEN)
NAN_BOXED(1057463658,64,FLEN)
NAN_BOXED(1055406206,64,FLEN)
NAN_BOXED(1047922988,64,FLEN)
NAN_BOXED(1057463658,64,FLEN)
NAN_BOXED(1055406206,64,FLEN)
NAN_BOXED(1047922988,64,FLEN)
NAN_BOXED(1059092623,64,FLEN)
NAN_BOXED(1052491699,64,FLEN)
NAN_BOXED(1047224438,64,FLEN)
test_dataset_1:
NAN_BOXED(1059092623,32,FLEN)
NAN_BOXED(1052491699,32,FLEN)
NAN_BOXED(1047224438,32,FLEN)
NAN_BOXED(1059092623,32,FLEN)
NAN_BOXED(1052491699,32,FLEN)
NAN_BOXED(1047224438,32,FLEN)
NAN_BOXED(1059092623,32,FLEN)
NAN_BOXED(1052491699,32,FLEN)
NAN_BOXED(1047224438,32,FLEN)
NAN_BOXED(1059092623,32,FLEN)
NAN_BOXED(1052491699,32,FLEN)
NAN_BOXED(1047224438,32,FLEN)
NAN_BOXED(1060778101,32,FLEN)
NAN_BOXED(1049326118,32,FLEN)
NAN_BOXED(1045092010,32,FLEN)
NAN_BOXED(1060778101,32,FLEN)
NAN_BOXED(1049326118,32,FLEN)
NAN_BOXED(1045092010,32,FLEN)
NAN_BOXED(1060778101,32,FLEN)
NAN_BOXED(1049326118,32,FLEN)
NAN_BOXED(1045092010,32,FLEN)
NAN_BOXED(1060778101,32,FLEN)
NAN_BOXED(1049326118,32,FLEN)
NAN_BOXED(1045092010,32,FLEN)
NAN_BOXED(1060778101,32,FLEN)
NAN_BOXED(1049326118,32,FLEN)
NAN_BOXED(1045092010,32,FLEN)
NAN_BOXED(1049252966,32,FLEN)
NAN_BOXED(1074450407,32,FLEN)
NAN_BOXED(1058407340,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1074450407,32,FLEN)
NAN_BOXED(1058407340,32,FLEN)
NAN_BOXED(1049252966,32,FLEN)
NAN_BOXED(1074450407,32,FLEN)
NAN_BOXED(1058407340,32,FLEN)
NAN_BOXED(1049252966,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1058407340,32,FLEN)
NAN_BOXED(1049252966,32,FLEN)
NAN_BOXED(1074450407,32,FLEN)
NAN_BOXED(1058407340,32,FLEN)
NAN_BOXED(1055679298,32,FLEN)
NAN_BOXED(1060129707,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1055679298,32,FLEN)
NAN_BOXED(1060129707,32,FLEN)
NAN_BOXED(1050855965,32,FLEN)
NAN_BOXED(1055679298,32,FLEN)
NAN_BOXED(1060129707,32,FLEN)
NAN_BOXED(1050855965,32,FLEN)
NAN_BOXED(1055679298,32,FLEN)
NAN_BOXED(1060129707,32,FLEN)
NAN_BOXED(1050855965,32,FLEN)
NAN_BOXED(1055679298,32,FLEN)
NAN_BOXED(1060129707,32,FLEN)
NAN_BOXED(1050855965,32,FLEN)
NAN_BOXED(1062115467,32,FLEN)
NAN_BOXED(1057855993,32,FLEN)
NAN_BOXED(1055165581,32,FLEN)
NAN_BOXED(1062115467,32,FLEN)
NAN_BOXED(1057855993,32,FLEN)
NAN_BOXED(1055165581,32,FLEN)
NAN_BOXED(1062115467,32,FLEN)
NAN_BOXED(1057855993,32,FLEN)
NAN_BOXED(1055165581,32,FLEN)
NAN_BOXED(1062115467,32,FLEN)
NAN_BOXED(1057855993,32,FLEN)
NAN_BOXED(1055165581,32,FLEN)
NAN_BOXED(1062115467,32,FLEN)
NAN_BOXED(1057855993,32,FLEN)
NAN_BOXED(1055165581,32,FLEN)
NAN_BOXED(1044876687,32,FLEN)
NAN_BOXED(1081161364,32,FLEN)
NAN_BOXED(1060898511,32,FLEN)
NAN_BOXED(1044876687,32,FLEN)
NAN_BOXED(1081161364,32,FLEN)
NAN_BOXED(1060898511,32,FLEN)
NAN_BOXED(1044876687,32,FLEN)
NAN_BOXED(1081161364,32,FLEN)
NAN_BOXED(1060898511,32,FLEN)
NAN_BOXED(1044876687,32,FLEN)
NAN_BOXED(1081161364,32,FLEN)
NAN_BOXED(1060898511,32,FLEN)
NAN_BOXED(1044876687,32,FLEN)
NAN_BOXED(1081161364,32,FLEN)
NAN_BOXED(1060898511,32,FLEN)
NAN_BOXED(1044994714,32,FLEN)
NAN_BOXED(1070373352,32,FLEN)
NAN_BOXED(1050733889,32,FLEN)
NAN_BOXED(1044994714,32,FLEN)
NAN_BOXED(1070373352,32,FLEN)
NAN_BOXED(1050733889,32,FLEN)
NAN_BOXED(1044994714,32,FLEN)
NAN_BOXED(1070373352,32,FLEN)
NAN_BOXED(1050733889,32,FLEN)
NAN_BOXED(1044994714,32,FLEN)
NAN_BOXED(1070373352,32,FLEN)
NAN_BOXED(1050733889,32,FLEN)
NAN_BOXED(1044994714,32,FLEN)
NAN_BOXED(1070373352,32,FLEN)
NAN_BOXED(1050733889,32,FLEN)
NAN_BOXED(1042248820,32,FLEN)
NAN_BOXED(1082689976,32,FLEN)
NAN_BOXED(1059723084,32,FLEN)
NAN_BOXED(1042248820,32,FLEN)
NAN_BOXED(1082689976,32,FLEN)
NAN_BOXED(1059723084,32,FLEN)
NAN_BOXED(1042248820,32,FLEN)
NAN_BOXED(1082689976,32,FLEN)
NAN_BOXED(1059723084,32,FLEN)
NAN_BOXED(1042248820,32,FLEN)
NAN_BOXED(1082689976,32,FLEN)
NAN_BOXED(1059723084,32,FLEN)
NAN_BOXED(1042248820,32,FLEN)
NAN_BOXED(1082689976,32,FLEN)
NAN_BOXED(1059723084,32,FLEN)
NAN_BOXED(1063790676,32,FLEN)
NAN_BOXED(1046578044,32,FLEN)
NAN_BOXED(1045201583,32,FLEN)
NAN_BOXED(1063790676,32,FLEN)
NAN_BOXED(1046578044,32,FLEN)
NAN_BOXED(1045201583,32,FLEN)
NAN_BOXED(1063790676,32,FLEN)
NAN_BOXED(1046578044,32,FLEN)
NAN_BOXED(1045201583,32,FLEN)
NAN_BOXED(1063790676,32,FLEN)
NAN_BOXED(1046578044,32,FLEN)
NAN_BOXED(1045201583,32,FLEN)
NAN_BOXED(1063790676,32,FLEN)
NAN_BOXED(1046578044,32,FLEN)
NAN_BOXED(1045201583,32,FLEN)
NAN_BOXED(1044899674,32,FLEN)
NAN_BOXED(1077272926,32,FLEN)
NAN_BOXED(1057883791,32,FLEN)
NAN_BOXED(1044899674,32,FLEN)
NAN_BOXED(1077272926,32,FLEN)
NAN_BOXED(1057883791,32,FLEN)
NAN_BOXED(1044899674,32,FLEN)
NAN_BOXED(1077272926,32,FLEN)
NAN_BOXED(1057883791,32,FLEN)
NAN_BOXED(1044899674,32,FLEN)
NAN_BOXED(1077272926,32,FLEN)
NAN_BOXED(1057883791,32,FLEN)
NAN_BOXED(1044899674,32,FLEN)
NAN_BOXED(1077272926,32,FLEN)
NAN_BOXED(1057883791,32,FLEN)
NAN_BOXED(1063779842,32,FLEN)
NAN_BOXED(1063439268,32,FLEN)
NAN_BOXED(1062045385,32,FLEN)
NAN_BOXED(1063779842,32,FLEN)
NAN_BOXED(1063439268,32,FLEN)
NAN_BOXED(1062045385,32,FLEN)
NAN_BOXED(1063779842,32,FLEN)
NAN_BOXED(1063439268,32,FLEN)
NAN_BOXED(1062045385,32,FLEN)
NAN_BOXED(1063779842,32,FLEN)
NAN_BOXED(1063439268,32,FLEN)
NAN_BOXED(1062045385,32,FLEN)
NAN_BOXED(1063779842,32,FLEN)
NAN_BOXED(1063439268,32,FLEN)
NAN_BOXED(1062045385,32,FLEN)
NAN_BOXED(1052437482,32,FLEN)
NAN_BOXED(1073251352,32,FLEN)
NAN_BOXED(1060467966,32,FLEN)
NAN_BOXED(1052437482,32,FLEN)
NAN_BOXED(1073251352,32,FLEN)
NAN_BOXED(1060467966,32,FLEN)
NAN_BOXED(1052437482,32,FLEN)
NAN_BOXED(1073251352,32,FLEN)
NAN_BOXED(1060467966,32,FLEN)
NAN_BOXED(1052437482,32,FLEN)
NAN_BOXED(1073251352,32,FLEN)
NAN_BOXED(1060467966,32,FLEN)
NAN_BOXED(1052437482,32,FLEN)
NAN_BOXED(1073251352,32,FLEN)
NAN_BOXED(1060467966,32,FLEN)
NAN_BOXED(1028074777,32,FLEN)
NAN_BOXED(1091002372,32,FLEN)
NAN_BOXED(1053992698,32,FLEN)
NAN_BOXED(1028074777,32,FLEN)
NAN_BOXED(1091002372,32,FLEN)
NAN_BOXED(1053992698,32,FLEN)
NAN_BOXED(1028074777,32,FLEN)
NAN_BOXED(1091002372,32,FLEN)
NAN_BOXED(1053992698,32,FLEN)
NAN_BOXED(1028074777,32,FLEN)
NAN_BOXED(1091002372,32,FLEN)
NAN_BOXED(1053992698,32,FLEN)
NAN_BOXED(1028074777,32,FLEN)
NAN_BOXED(1091002372,32,FLEN)
NAN_BOXED(1053992698,32,FLEN)
NAN_BOXED(1061983104,32,FLEN)
NAN_BOXED(1054656609,32,FLEN)
NAN_BOXED(1051750115,32,FLEN)
NAN_BOXED(1061983104,32,FLEN)
NAN_BOXED(1054656609,32,FLEN)
NAN_BOXED(1051750115,32,FLEN)
NAN_BOXED(1061983104,32,FLEN)
NAN_BOXED(1054656609,32,FLEN)
NAN_BOXED(1051750115,32,FLEN)
NAN_BOXED(1061983104,32,FLEN)
NAN_BOXED(1054656609,32,FLEN)
NAN_BOXED(1051750115,32,FLEN)
NAN_BOXED(1061983104,32,FLEN)
NAN_BOXED(1054656609,32,FLEN)
NAN_BOXED(1051750115,32,FLEN)
NAN_BOXED(1059307050,32,FLEN)
NAN_BOXED(1037524575,32,FLEN)
NAN_BOXED(1032438034,32,FLEN)
NAN_BOXED(1059307050,32,FLEN)
NAN_BOXED(1037524575,32,FLEN)
NAN_BOXED(1032438034,32,FLEN)
NAN_BOXED(1059307050,32,FLEN)
NAN_BOXED(1037524575,32,FLEN)
NAN_BOXED(1032438034,32,FLEN)
NAN_BOXED(1059307050,32,FLEN)
NAN_BOXED(1037524575,32,FLEN)
NAN_BOXED(1032438034,32,FLEN)
NAN_BOXED(1059307050,32,FLEN)
NAN_BOXED(1037524575,32,FLEN)
NAN_BOXED(1032438034,32,FLEN)
NAN_BOXED(1035555376,32,FLEN)
NAN_BOXED(1084990180,32,FLEN)
NAN_BOXED(1056472996,32,FLEN)
NAN_BOXED(1035555376,32,FLEN)
NAN_BOXED(1084990180,32,FLEN)
NAN_BOXED(1056472996,32,FLEN)
NAN_BOXED(1035555376,32,FLEN)
NAN_BOXED(1084990180,32,FLEN)
NAN_BOXED(1056472996,32,FLEN)
NAN_BOXED(1035555376,32,FLEN)
NAN_BOXED(1084990180,32,FLEN)
NAN_BOXED(1056472996,32,FLEN)
NAN_BOXED(1035555376,32,FLEN)
NAN_BOXED(1084990180,32,FLEN)
NAN_BOXED(1056472996,32,FLEN)
NAN_BOXED(1052113583,32,FLEN)
NAN_BOXED(1062835485,32,FLEN)
NAN_BOXED(1050323838,32,FLEN)
NAN_BOXED(1052113583,32,FLEN)
NAN_BOXED(1062835485,32,FLEN)
NAN_BOXED(1050323838,32,FLEN)
NAN_BOXED(1052113583,32,FLEN)
NAN_BOXED(1062835485,32,FLEN)
NAN_BOXED(1050323838,32,FLEN)
NAN_BOXED(1052113583,32,FLEN)
NAN_BOXED(1062835485,32,FLEN)
NAN_BOXED(1050323838,32,FLEN)
NAN_BOXED(1052113583,32,FLEN)
NAN_BOXED(1062835485,32,FLEN)
NAN_BOXED(1050323838,32,FLEN)
NAN_BOXED(1044851127,32,FLEN)
NAN_BOXED(1039713380,32,FLEN)
NAN_BOXED(1019316532,32,FLEN)
NAN_BOXED(1044851127,32,FLEN)
NAN_BOXED(1039713380,32,FLEN)
NAN_BOXED(1019316532,32,FLEN)
NAN_BOXED(1044851127,32,FLEN)
NAN_BOXED(1039713380,32,FLEN)
NAN_BOXED(1019316532,32,FLEN)
NAN_BOXED(1044851127,32,FLEN)
NAN_BOXED(1039713380,32,FLEN)
NAN_BOXED(1019316532,32,FLEN)
NAN_BOXED(1044851127,32,FLEN)
NAN_BOXED(1039713380,32,FLEN)
NAN_BOXED(1019316532,32,FLEN)
NAN_BOXED(1064876374,32,FLEN)
NAN_BOXED(1059603756,32,FLEN)
NAN_BOXED(1059290325,32,FLEN)
NAN_BOXED(1064876374,32,FLEN)
NAN_BOXED(1059603756,32,FLEN)
NAN_BOXED(1059290325,32,FLEN)
NAN_BOXED(1064876374,32,FLEN)
NAN_BOXED(1059603756,32,FLEN)
NAN_BOXED(1059290325,32,FLEN)
NAN_BOXED(1064876374,32,FLEN)
NAN_BOXED(1059603756,32,FLEN)
NAN_BOXED(1059290325,32,FLEN)
NAN_BOXED(1064876374,32,FLEN)
NAN_BOXED(1059603756,32,FLEN)
NAN_BOXED(1059290325,32,FLEN)
NAN_BOXED(1053550537,32,FLEN)
NAN_BOXED(1071617990,32,FLEN)
NAN_BOXED(1060247499,32,FLEN)
NAN_BOXED(1053550537,32,FLEN)
NAN_BOXED(1071617990,32,FLEN)
NAN_BOXED(1060247499,32,FLEN)
NAN_BOXED(1053550537,32,FLEN)
NAN_BOXED(1071617990,32,FLEN)
NAN_BOXED(1060247499,32,FLEN)
NAN_BOXED(1053550537,32,FLEN)
NAN_BOXED(1071617990,32,FLEN)
NAN_BOXED(1060247499,32,FLEN)
NAN_BOXED(1053550537,32,FLEN)
NAN_BOXED(1071617990,32,FLEN)
NAN_BOXED(1060247499,32,FLEN)
NAN_BOXED(1053973004,32,FLEN)
NAN_BOXED(1074646608,32,FLEN)
NAN_BOXED(1063848510,32,FLEN)
NAN_BOXED(1053973004,32,FLEN)
NAN_BOXED(1074646608,32,FLEN)
NAN_BOXED(1063848510,32,FLEN)
NAN_BOXED(1053973004,32,FLEN)
NAN_BOXED(1074646608,32,FLEN)
NAN_BOXED(1063848510,32,FLEN)
NAN_BOXED(1053973004,32,FLEN)
NAN_BOXED(1074646608,32,FLEN)
NAN_BOXED(1063848510,32,FLEN)
NAN_BOXED(1053973004,32,FLEN)
NAN_BOXED(1074646608,32,FLEN)
NAN_BOXED(1063848510,32,FLEN)
NAN_BOXED(1039505721,32,FLEN)
NAN_BOXED(1081957379,32,FLEN)
NAN_BOXED(1056116916,32,FLEN)
NAN_BOXED(1039505721,32,FLEN)
NAN_BOXED(1081957379,32,FLEN)
NAN_BOXED(1056116916,32,FLEN)
NAN_BOXED(1039505721,32,FLEN)
NAN_BOXED(1081957379,32,FLEN)
NAN_BOXED(1056116916,32,FLEN)
NAN_BOXED(1039505721,32,FLEN)
NAN_BOXED(1081957379,32,FLEN)
NAN_BOXED(1056116916,32,FLEN)
NAN_BOXED(1039505721,32,FLEN)
NAN_BOXED(1081957379,32,FLEN)
NAN_BOXED(1056116916,32,FLEN)
NAN_BOXED(1063393227,32,FLEN)
NAN_BOXED(1053000844,32,FLEN)
NAN_BOXED(1051503920,32,FLEN)
NAN_BOXED(1063393227,32,FLEN)
NAN_BOXED(1053000844,32,FLEN)
NAN_BOXED(1051503920,32,FLEN)
NAN_BOXED(1063393227,32,FLEN)
NAN_BOXED(1053000844,32,FLEN)
NAN_BOXED(1051503920,32,FLEN)
NAN_BOXED(1063393227,32,FLEN)
NAN_BOXED(1053000844,32,FLEN)
NAN_BOXED(1051503920,32,FLEN)
NAN_BOXED(1063393227,32,FLEN)
NAN_BOXED(1053000844,32,FLEN)
NAN_BOXED(1051503920,32,FLEN)
NAN_BOXED(1060114015,32,FLEN)
NAN_BOXED(1066768841,32,FLEN)
NAN_BOXED(1062061121,32,FLEN)
NAN_BOXED(1060114015,32,FLEN)
NAN_BOXED(1066768841,32,FLEN)
NAN_BOXED(1062061121,32,FLEN)
NAN_BOXED(1060114015,32,FLEN)
NAN_BOXED(1066768841,32,FLEN)
NAN_BOXED(1062061121,32,FLEN)
NAN_BOXED(1060114015,32,FLEN)
NAN_BOXED(1066768841,32,FLEN)
NAN_BOXED(1062061121,32,FLEN)
NAN_BOXED(1060114015,32,FLEN)
NAN_BOXED(1066768841,32,FLEN)
NAN_BOXED(1062061121,32,FLEN)
NAN_BOXED(1057237333,32,FLEN)
NAN_BOXED(1070969478,32,FLEN)
NAN_BOXED(1063036189,32,FLEN)
NAN_BOXED(1057237333,32,FLEN)
NAN_BOXED(1070969478,32,FLEN)
NAN_BOXED(1063036189,32,FLEN)
NAN_BOXED(1057237333,32,FLEN)
NAN_BOXED(1070969478,32,FLEN)
NAN_BOXED(1063036189,32,FLEN)
NAN_BOXED(1057237333,32,FLEN)
NAN_BOXED(1070969478,32,FLEN)
NAN_BOXED(1063036189,32,FLEN)
NAN_BOXED(1057237333,32,FLEN)
NAN_BOXED(1070969478,32,FLEN)
NAN_BOXED(1063036189,32,FLEN)
NAN_BOXED(1061831925,32,FLEN)
NAN_BOXED(1043219292,32,FLEN)
NAN_BOXED(1040822295,32,FLEN)
NAN_BOXED(1061831925,32,FLEN)
NAN_BOXED(1043219292,32,FLEN)
NAN_BOXED(1040822295,32,FLEN)
NAN_BOXED(1061831925,32,FLEN)
NAN_BOXED(1043219292,32,FLEN)
NAN_BOXED(1040822295,32,FLEN)
NAN_BOXED(1061831925,32,FLEN)
NAN_BOXED(1043219292,32,FLEN)
NAN_BOXED(1040822295,32,FLEN)
NAN_BOXED(1061831925,32,FLEN)
NAN_BOXED(1043219292,32,FLEN)
NAN_BOXED(1040822295,32,FLEN)
NAN_BOXED(1050313322,32,FLEN)
NAN_BOXED(1079077887,32,FLEN)
NAN_BOXED(1065143119,32,FLEN)
NAN_BOXED(1050313322,32,FLEN)
NAN_BOXED(1079077887,32,FLEN)
NAN_BOXED(1065143119,32,FLEN)
NAN_BOXED(1050313322,32,FLEN)
NAN_BOXED(1079077887,32,FLEN)
NAN_BOXED(1065143119,32,FLEN)
NAN_BOXED(1050313322,32,FLEN)
NAN_BOXED(1079077887,32,FLEN)
NAN_BOXED(1065143119,32,FLEN)
NAN_BOXED(1050313322,32,FLEN)
NAN_BOXED(1079077887,32,FLEN)
NAN_BOXED(1065143119,32,FLEN)
NAN_BOXED(1046693092,32,FLEN)
NAN_BOXED(1083029712,32,FLEN)
NAN_BOXED(1065067017,32,FLEN)
NAN_BOXED(1046693092,32,FLEN)
NAN_BOXED(1083029712,32,FLEN)
NAN_BOXED(1065067017,32,FLEN)
NAN_BOXED(1046693092,32,FLEN)
NAN_BOXED(1083029712,32,FLEN)
NAN_BOXED(1065067017,32,FLEN)
NAN_BOXED(1046693092,32,FLEN)
NAN_BOXED(1083029712,32,FLEN)
NAN_BOXED(1065067017,32,FLEN)
NAN_BOXED(1046693092,32,FLEN)
NAN_BOXED(1083029712,32,FLEN)
NAN_BOXED(1065067017,32,FLEN)
NAN_BOXED(1059767878,32,FLEN)
NAN_BOXED(1041412309,32,FLEN)
NAN_BOXED(1036236310,32,FLEN)
NAN_BOXED(1059767878,32,FLEN)
NAN_BOXED(1041412309,32,FLEN)
NAN_BOXED(1036236310,32,FLEN)
NAN_BOXED(1059767878,32,FLEN)
NAN_BOXED(1041412309,32,FLEN)
NAN_BOXED(1036236310,32,FLEN)
NAN_BOXED(1059767878,32,FLEN)
NAN_BOXED(1041412309,32,FLEN)
NAN_BOXED(1036236310,32,FLEN)
NAN_BOXED(1059767878,32,FLEN)
NAN_BOXED(1041412309,32,FLEN)
NAN_BOXED(1036236310,32,FLEN)
NAN_BOXED(1052929175,32,FLEN)
NAN_BOXED(1072292806,32,FLEN)
NAN_BOXED(1060217298,32,FLEN)
NAN_BOXED(1052929175,32,FLEN)
NAN_BOXED(1072292806,32,FLEN)
NAN_BOXED(1060217298,32,FLEN)
NAN_BOXED(1052929175,32,FLEN)
NAN_BOXED(1072292806,32,FLEN)
NAN_BOXED(1060217298,32,FLEN)
NAN_BOXED(1052929175,32,FLEN)
NAN_BOXED(1072292806,32,FLEN)
NAN_BOXED(1060217298,32,FLEN)
NAN_BOXED(1052929175,32,FLEN)
NAN_BOXED(1072292806,32,FLEN)
NAN_BOXED(1060217298,32,FLEN)
NAN_BOXED(1059021414,32,FLEN)
NAN_BOXED(1065036295,32,FLEN)
NAN_BOXED(1058824100,32,FLEN)
NAN_BOXED(1059021414,32,FLEN)
NAN_BOXED(1065036295,32,FLEN)
NAN_BOXED(1058824100,32,FLEN)
NAN_BOXED(1059021414,32,FLEN)
NAN_BOXED(1065036295,32,FLEN)
NAN_BOXED(1058824100,32,FLEN)
NAN_BOXED(1059021414,32,FLEN)
NAN_BOXED(1065036295,32,FLEN)
NAN_BOXED(1058824100,32,FLEN)
NAN_BOXED(1059021414,32,FLEN)
NAN_BOXED(1065036295,32,FLEN)
NAN_BOXED(1058824100,32,FLEN)
NAN_BOXED(1063225282,32,FLEN)
NAN_BOXED(957467355,32,FLEN)
NAN_BOXED(956209675,32,FLEN)
NAN_BOXED(1063225282,32,FLEN)
NAN_BOXED(957467355,32,FLEN)
NAN_BOXED(956209675,32,FLEN)
NAN_BOXED(1063225282,32,FLEN)
NAN_BOXED(957467355,32,FLEN)
NAN_BOXED(956209675,32,FLEN)
NAN_BOXED(1063225282,32,FLEN)
NAN_BOXED(957467355,32,FLEN)
NAN_BOXED(956209675,32,FLEN)
NAN_BOXED(1063225282,32,FLEN)
NAN_BOXED(957467355,32,FLEN)
NAN_BOXED(956209675,32,FLEN)
NAN_BOXED(1064450230,32,FLEN)
NAN_BOXED(1058809088,32,FLEN)
NAN_BOXED(1058258321,32,FLEN)
NAN_BOXED(1064450230,32,FLEN)
NAN_BOXED(1058809088,32,FLEN)
NAN_BOXED(1058258321,32,FLEN)
NAN_BOXED(1064450230,32,FLEN)
NAN_BOXED(1058809088,32,FLEN)
NAN_BOXED(1058258321,32,FLEN)
NAN_BOXED(1064450230,32,FLEN)
NAN_BOXED(1058809088,32,FLEN)
NAN_BOXED(1058258321,32,FLEN)
NAN_BOXED(1064450230,32,FLEN)
NAN_BOXED(1058809088,32,FLEN)
NAN_BOXED(1058258321,32,FLEN)
NAN_BOXED(1048699714,32,FLEN)
NAN_BOXED(1075310210,32,FLEN)
NAN_BOXED(1058679838,32,FLEN)
NAN_BOXED(1048699714,32,FLEN)
NAN_BOXED(1075310210,32,FLEN)
NAN_BOXED(1058679838,32,FLEN)
NAN_BOXED(1048699714,32,FLEN)
NAN_BOXED(1075310210,32,FLEN)
NAN_BOXED(1058679838,32,FLEN)
NAN_BOXED(1048699714,32,FLEN)
NAN_BOXED(1075310210,32,FLEN)
NAN_BOXED(1058679838,32,FLEN)
NAN_BOXED(1048699714,32,FLEN)
NAN_BOXED(1075310210,32,FLEN)
NAN_BOXED(1058679838,32,FLEN)
NAN_BOXED(1016847718,32,FLEN)
NAN_BOXED(1109305645,32,FLEN)
NAN_BOXED(1061237579,32,FLEN)
NAN_BOXED(1016847718,32,FLEN)
NAN_BOXED(1109305645,32,FLEN)
NAN_BOXED(1061237579,32,FLEN)
NAN_BOXED(1016847718,32,FLEN)
NAN_BOXED(1109305645,32,FLEN)
NAN_BOXED(1061237579,32,FLEN)
NAN_BOXED(1016847718,32,FLEN)
NAN_BOXED(1109305645,32,FLEN)
NAN_BOXED(1061237579,32,FLEN)
NAN_BOXED(1016847718,32,FLEN)
NAN_BOXED(1109305645,32,FLEN)
NAN_BOXED(1061237579,32,FLEN)
NAN_BOXED(1017769791,32,FLEN)
NAN_BOXED(1084634315,32,FLEN)
NAN_BOXED(1037871197,32,FLEN)
NAN_BOXED(1017769791,32,FLEN)
NAN_BOXED(1084634315,32,FLEN)
NAN_BOXED(1037871197,32,FLEN)
NAN_BOXED(1017769791,32,FLEN)
NAN_BOXED(1084634315,32,FLEN)
NAN_BOXED(1037871197,32,FLEN)
NAN_BOXED(1017769791,32,FLEN)
NAN_BOXED(1084634315,32,FLEN)
NAN_BOXED(1037871197,32,FLEN)
NAN_BOXED(1017769791,32,FLEN)
NAN_BOXED(1084634315,32,FLEN)
NAN_BOXED(1037871197,32,FLEN)
NAN_BOXED(1051253069,32,FLEN)
NAN_BOXED(1051429162,32,FLEN)
NAN_BOXED(1038239550,32,FLEN)
NAN_BOXED(1051253069,32,FLEN)
NAN_BOXED(1051429162,32,FLEN)
NAN_BOXED(1038239550,32,FLEN)
NAN_BOXED(1051253069,32,FLEN)
NAN_BOXED(1051429162,32,FLEN)
NAN_BOXED(1038239550,32,FLEN)
NAN_BOXED(1051253069,32,FLEN)
NAN_BOXED(1051429162,32,FLEN)
NAN_BOXED(1038239550,32,FLEN)
NAN_BOXED(1051253069,32,FLEN)
NAN_BOXED(1051429162,32,FLEN)
NAN_BOXED(1038239550,32,FLEN)
NAN_BOXED(1057850542,32,FLEN)
NAN_BOXED(1050429670,32,FLEN)
NAN_BOXED(1043122766,32,FLEN)
NAN_BOXED(1057850542,32,FLEN)
NAN_BOXED(1050429670,32,FLEN)
NAN_BOXED(1043122766,32,FLEN)
NAN_BOXED(1057850542,32,FLEN)
NAN_BOXED(1050429670,32,FLEN)
NAN_BOXED(1043122766,32,FLEN)
NAN_BOXED(1057850542,32,FLEN)
NAN_BOXED(1050429670,32,FLEN)
NAN_BOXED(1043122766,32,FLEN)
NAN_BOXED(1057850542,32,FLEN)
NAN_BOXED(1050429670,32,FLEN)
NAN_BOXED(1043122766,32,FLEN)
NAN_BOXED(1045482359,32,FLEN)
NAN_BOXED(1075295106,32,FLEN)
NAN_BOXED(1056404696,32,FLEN)
NAN_BOXED(1045482359,32,FLEN)
NAN_BOXED(1075295106,32,FLEN)
NAN_BOXED(1056404696,32,FLEN)
NAN_BOXED(1045482359,32,FLEN)
NAN_BOXED(1075295106,32,FLEN)
NAN_BOXED(1056404696,32,FLEN)
NAN_BOXED(1045482359,32,FLEN)
NAN_BOXED(1075295106,32,FLEN)
NAN_BOXED(1056404696,32,FLEN)
NAN_BOXED(1045482359,32,FLEN)
NAN_BOXED(1075295106,32,FLEN)
NAN_BOXED(1056404696,32,FLEN)
NAN_BOXED(1057452324,32,FLEN)
NAN_BOXED(1057909332,32,FLEN)
NAN_BOXED(1050063368,32,FLEN)
NAN_BOXED(1057452324,32,FLEN)
NAN_BOXED(1057909332,32,FLEN)
NAN_BOXED(1050063368,32,FLEN)
NAN_BOXED(1057452324,32,FLEN)
NAN_BOXED(1057909332,32,FLEN)
NAN_BOXED(1050063368,32,FLEN)
NAN_BOXED(1057452324,32,FLEN)
NAN_BOXED(1057909332,32,FLEN)
NAN_BOXED(1050063368,32,FLEN)
NAN_BOXED(1057452324,32,FLEN)
NAN_BOXED(1057909332,32,FLEN)
NAN_BOXED(1050063368,32,FLEN)
NAN_BOXED(1058490264,32,FLEN)
NAN_BOXED(1069940233,32,FLEN)
NAN_BOXED(1063911535,32,FLEN)
NAN_BOXED(1058490264,32,FLEN)
NAN_BOXED(1069940233,32,FLEN)
NAN_BOXED(1063911535,32,FLEN)
NAN_BOXED(1058490264,32,FLEN)
NAN_BOXED(1069940233,32,FLEN)
NAN_BOXED(1063911535,32,FLEN)
NAN_BOXED(1058490264,32,FLEN)
NAN_BOXED(1069940233,32,FLEN)
NAN_BOXED(1063911535,32,FLEN)
NAN_BOXED(1058490264,32,FLEN)
NAN_BOXED(1069940233,32,FLEN)
NAN_BOXED(1063911535,32,FLEN)
NAN_BOXED(1048692907,32,FLEN)
NAN_BOXED(1077501414,32,FLEN)
NAN_BOXED(1060893501,32,FLEN)
NAN_BOXED(1048692907,32,FLEN)
NAN_BOXED(1077501414,32,FLEN)
NAN_BOXED(1060893501,32,FLEN)
NAN_BOXED(1048692907,32,FLEN)
NAN_BOXED(1077501414,32,FLEN)
NAN_BOXED(1060893501,32,FLEN)
NAN_BOXED(1048692907,32,FLEN)
NAN_BOXED(1077501414,32,FLEN)
NAN_BOXED(1060893501,32,FLEN)
NAN_BOXED(1048692907,32,FLEN)
NAN_BOXED(1077501414,32,FLEN)
NAN_BOXED(1060893501,32,FLEN)
NAN_BOXED(1057171571,32,FLEN)
NAN_BOXED(1054331966,32,FLEN)
NAN_BOXED(1046292334,32,FLEN)
NAN_BOXED(1057171571,32,FLEN)
NAN_BOXED(1054331966,32,FLEN)
NAN_BOXED(1046292334,32,FLEN)
NAN_BOXED(1057171571,32,FLEN)
NAN_BOXED(1054331966,32,FLEN)
NAN_BOXED(1046292334,32,FLEN)
NAN_BOXED(1057171571,32,FLEN)
NAN_BOXED(1054331966,32,FLEN)
NAN_BOXED(1046292334,32,FLEN)
NAN_BOXED(1057171571,32,FLEN)
NAN_BOXED(1054331966,32,FLEN)
NAN_BOXED(1046292334,32,FLEN)
NAN_BOXED(1062465385,32,FLEN)
NAN_BOXED(1066875707,32,FLEN)
NAN_BOXED(1064986241,32,FLEN)
NAN_BOXED(1062465385,32,FLEN)
NAN_BOXED(1066875707,32,FLEN)
NAN_BOXED(1064986241,32,FLEN)
NAN_BOXED(1062465385,32,FLEN)
NAN_BOXED(1066875707,32,FLEN)
NAN_BOXED(1064986241,32,FLEN)
NAN_BOXED(1062465385,32,FLEN)
NAN_BOXED(1066875707,32,FLEN)
NAN_BOXED(1064986241,32,FLEN)
NAN_BOXED(1062465385,32,FLEN)
NAN_BOXED(1066875707,32,FLEN)
NAN_BOXED(1064986241,32,FLEN)
NAN_BOXED(1063281308,32,FLEN)
NAN_BOXED(1055905422,32,FLEN)
NAN_BOXED(1053964319,32,FLEN)
NAN_BOXED(1063281308,32,FLEN)
NAN_BOXED(1055905422,32,FLEN)
NAN_BOXED(1053964319,32,FLEN)
NAN_BOXED(1063281308,32,FLEN)
NAN_BOXED(1055905422,32,FLEN)
NAN_BOXED(1053964319,32,FLEN)
NAN_BOXED(1063281308,32,FLEN)
NAN_BOXED(1055905422,32,FLEN)
NAN_BOXED(1053964319,32,FLEN)
NAN_BOXED(1063281308,32,FLEN)
NAN_BOXED(1055905422,32,FLEN)
NAN_BOXED(1053964319,32,FLEN)
NAN_BOXED(1059295816,32,FLEN)
NAN_BOXED(1066728277,32,FLEN)
NAN_BOXED(1061053010,32,FLEN)
NAN_BOXED(1059295816,32,FLEN)
NAN_BOXED(1066728277,32,FLEN)
NAN_BOXED(1061053010,32,FLEN)
NAN_BOXED(1059295816,32,FLEN)
NAN_BOXED(1066728277,32,FLEN)
NAN_BOXED(1061053010,32,FLEN)
NAN_BOXED(1059295816,32,FLEN)
NAN_BOXED(1066728277,32,FLEN)
NAN_BOXED(1061053010,32,FLEN)
NAN_BOXED(1059295816,32,FLEN)
NAN_BOXED(1066728277,32,FLEN)
NAN_BOXED(1061053010,32,FLEN)
NAN_BOXED(1057777745,32,FLEN)
NAN_BOXED(1040657799,32,FLEN)
NAN_BOXED(1033127927,32,FLEN)
NAN_BOXED(1057777745,32,FLEN)
NAN_BOXED(1040657799,32,FLEN)
NAN_BOXED(1033127927,32,FLEN)
NAN_BOXED(1057777745,32,FLEN)
NAN_BOXED(1040657799,32,FLEN)
NAN_BOXED(1033127927,32,FLEN)
NAN_BOXED(1057777745,32,FLEN)
NAN_BOXED(1040657799,32,FLEN)
NAN_BOXED(1033127927,32,FLEN)
NAN_BOXED(1057777745,32,FLEN)
NAN_BOXED(1040657799,32,FLEN)
NAN_BOXED(1033127927,32,FLEN)
NAN_BOXED(1061078995,32,FLEN)
NAN_BOXED(1061845567,32,FLEN)
NAN_BOXED(1058464967,32,FLEN)
NAN_BOXED(1061078995,32,FLEN)
NAN_BOXED(1061845567,32,FLEN)
NAN_BOXED(1058464967,32,FLEN)
NAN_BOXED(1061078995,32,FLEN)
NAN_BOXED(1061845567,32,FLEN)
NAN_BOXED(1058464967,32,FLEN)
NAN_BOXED(1061078995,32,FLEN)
NAN_BOXED(1061845567,32,FLEN)
NAN_BOXED(1058464967,32,FLEN)
NAN_BOXED(1061078995,32,FLEN)
NAN_BOXED(1061845567,32,FLEN)
NAN_BOXED(1058464967,32,FLEN)
NAN_BOXED(1039611079,32,FLEN)
NAN_BOXED(1078829306,32,FLEN)
NAN_BOXED(1053200567,32,FLEN)
NAN_BOXED(1039611079,32,FLEN)
NAN_BOXED(1078829306,32,FLEN)
NAN_BOXED(1053200567,32,FLEN)
NAN_BOXED(1039611079,32,FLEN)
NAN_BOXED(1078829306,32,FLEN)
NAN_BOXED(1053200567,32,FLEN)
NAN_BOXED(1039611079,32,FLEN)
NAN_BOXED(1078829306,32,FLEN)
NAN_BOXED(1053200567,32,FLEN)
NAN_BOXED(1039611079,32,FLEN)
NAN_BOXED(1078829306,32,FLEN)
NAN_BOXED(1053200567,32,FLEN)
NAN_BOXED(1060857970,32,FLEN)
NAN_BOXED(1060614482,32,FLEN)
NAN_BOXED(1057388921,32,FLEN)
NAN_BOXED(1060857970,32,FLEN)
NAN_BOXED(1060614482,32,FLEN)
NAN_BOXED(1057388921,32,FLEN)
NAN_BOXED(1060857970,32,FLEN)
NAN_BOXED(1060614482,32,FLEN)
NAN_BOXED(1057388921,32,FLEN)
NAN_BOXED(1060857970,32,FLEN)
NAN_BOXED(1060614482,32,FLEN)
NAN_BOXED(1057388921,32,FLEN)
NAN_BOXED(1060857970,32,FLEN)
NAN_BOXED(1060614482,32,FLEN)
NAN_BOXED(1057388921,32,FLEN)
NAN_BOXED(1057324664,32,FLEN)
NAN_BOXED(1070764055,32,FLEN)
NAN_BOXED(1062967747,32,FLEN)
NAN_BOXED(1057324664,32,FLEN)
NAN_BOXED(1070764055,32,FLEN)
NAN_BOXED(1062967747,32,FLEN)
NAN_BOXED(1057324664,32,FLEN)
NAN_BOXED(1070764055,32,FLEN)
NAN_BOXED(1062967747,32,FLEN)
NAN_BOXED(1057324664,32,FLEN)
NAN_BOXED(1070764055,32,FLEN)
NAN_BOXED(1062967747,32,FLEN)
NAN_BOXED(1057324664,32,FLEN)
NAN_BOXED(1070764055,32,FLEN)
NAN_BOXED(1062967747,32,FLEN)
NAN_BOXED(1059020184,32,FLEN)
NAN_BOXED(1066320797,32,FLEN)
NAN_BOXED(1060224865,32,FLEN)
NAN_BOXED(1059020184,32,FLEN)
NAN_BOXED(1066320797,32,FLEN)
NAN_BOXED(1060224865,32,FLEN)
NAN_BOXED(1059020184,32,FLEN)
NAN_BOXED(1066320797,32,FLEN)
NAN_BOXED(1060224865,32,FLEN)
NAN_BOXED(1059020184,32,FLEN)
NAN_BOXED(1066320797,32,FLEN)
NAN_BOXED(1060224865,32,FLEN)
NAN_BOXED(1059020184,32,FLEN)
NAN_BOXED(1066320797,32,FLEN)
NAN_BOXED(1060224865,32,FLEN)
NAN_BOXED(1044902394,32,FLEN)
NAN_BOXED(1079887279,32,FLEN)
NAN_BOXED(1059927627,32,FLEN)
NAN_BOXED(1044902394,32,FLEN)
NAN_BOXED(1079887279,32,FLEN)
NAN_BOXED(1059927627,32,FLEN)
NAN_BOXED(1044902394,32,FLEN)
NAN_BOXED(1079887279,32,FLEN)
NAN_BOXED(1059927627,32,FLEN)
NAN_BOXED(1044902394,32,FLEN)
NAN_BOXED(1079887279,32,FLEN)
NAN_BOXED(1059927627,32,FLEN)
NAN_BOXED(1044902394,32,FLEN)
NAN_BOXED(1079887279,32,FLEN)
NAN_BOXED(1059927627,32,FLEN)
NAN_BOXED(1051621294,32,FLEN)
NAN_BOXED(1034924867,32,FLEN)
NAN_BOXED(1022327800,32,FLEN)
NAN_BOXED(1051621294,32,FLEN)
NAN_BOXED(1034924867,32,FLEN)
NAN_BOXED(1022327800,32,FLEN)
NAN_BOXED(1051621294,32,FLEN)
NAN_BOXED(1034924867,32,FLEN)
NAN_BOXED(1022327800,32,FLEN)
NAN_BOXED(1051621294,32,FLEN)
NAN_BOXED(1034924867,32,FLEN)
NAN_BOXED(1022327800,32,FLEN)
NAN_BOXED(1051621294,32,FLEN)
NAN_BOXED(1034924867,32,FLEN)
NAN_BOXED(1022327800,32,FLEN)
NAN_BOXED(1033734421,32,FLEN)
NAN_BOXED(1090636057,32,FLEN)
NAN_BOXED(1059044264,32,FLEN)
NAN_BOXED(1033734421,32,FLEN)
NAN_BOXED(1090636057,32,FLEN)
NAN_BOXED(1059044264,32,FLEN)
NAN_BOXED(1033734421,32,FLEN)
NAN_BOXED(1090636057,32,FLEN)
NAN_BOXED(1059044264,32,FLEN)
NAN_BOXED(1033734421,32,FLEN)
NAN_BOXED(1090636057,32,FLEN)
NAN_BOXED(1059044264,32,FLEN)
NAN_BOXED(1033734421,32,FLEN)
NAN_BOXED(1090636057,32,FLEN)
NAN_BOXED(1059044264,32,FLEN)
NAN_BOXED(1053507447,32,FLEN)
NAN_BOXED(1071331753,32,FLEN)
NAN_BOXED(1059982610,32,FLEN)
NAN_BOXED(1053507447,32,FLEN)
NAN_BOXED(1071331753,32,FLEN)
NAN_BOXED(1059982610,32,FLEN)
NAN_BOXED(1053507447,32,FLEN)
NAN_BOXED(1071331753,32,FLEN)
NAN_BOXED(1059982610,32,FLEN)
NAN_BOXED(1053507447,32,FLEN)
NAN_BOXED(1071331753,32,FLEN)
NAN_BOXED(1059982610,32,FLEN)
NAN_BOXED(1053507447,32,FLEN)
NAN_BOXED(1071331753,32,FLEN)
NAN_BOXED(1059982610,32,FLEN)
NAN_BOXED(1058671160,32,FLEN)
NAN_BOXED(1062851706,32,FLEN)
NAN_BOXED(1057165955,32,FLEN)
NAN_BOXED(1058671160,32,FLEN)
NAN_BOXED(1062851706,32,FLEN)
NAN_BOXED(1057165955,32,FLEN)
NAN_BOXED(1058671160,32,FLEN)
NAN_BOXED(1062851706,32,FLEN)
NAN_BOXED(1057165955,32,FLEN)
NAN_BOXED(1058671160,32,FLEN)
NAN_BOXED(1062851706,32,FLEN)
NAN_BOXED(1057165955,32,FLEN)
NAN_BOXED(1058671160,32,FLEN)
NAN_BOXED(1062851706,32,FLEN)
NAN_BOXED(1057165955,32,FLEN)
NAN_BOXED(1045660857,32,FLEN)
NAN_BOXED(1050484283,32,FLEN)
NAN_BOXED(1031917920,32,FLEN)
NAN_BOXED(1045660857,32,FLEN)
NAN_BOXED(1050484283,32,FLEN)
NAN_BOXED(1031917920,32,FLEN)
NAN_BOXED(1045660857,32,FLEN)
NAN_BOXED(1050484283,32,FLEN)
NAN_BOXED(1031917920,32,FLEN)
NAN_BOXED(1045660857,32,FLEN)
NAN_BOXED(1050484283,32,FLEN)
NAN_BOXED(1031917920,32,FLEN)
NAN_BOXED(1045660857,32,FLEN)
NAN_BOXED(1050484283,32,FLEN)
NAN_BOXED(1031917920,32,FLEN)
NAN_BOXED(1060474573,32,FLEN)
NAN_BOXED(1068719462,32,FLEN)
NAN_BOXED(1065249326,32,FLEN)
NAN_BOXED(1060474573,32,FLEN)
NAN_BOXED(1068719462,32,FLEN)
NAN_BOXED(1065249326,32,FLEN)
NAN_BOXED(1060474573,32,FLEN)
NAN_BOXED(1068719462,32,FLEN)
NAN_BOXED(1065249326,32,FLEN)
NAN_BOXED(1060474573,32,FLEN)
NAN_BOXED(1068719462,32,FLEN)
NAN_BOXED(1065249326,32,FLEN)
NAN_BOXED(1060474573,32,FLEN)
NAN_BOXED(1068719462,32,FLEN)
NAN_BOXED(1065249326,32,FLEN)
NAN_BOXED(1057814251,32,FLEN)
NAN_BOXED(1071328869,32,FLEN)
NAN_BOXED(1064395152,32,FLEN)
NAN_BOXED(1057814251,32,FLEN)
NAN_BOXED(1071328869,32,FLEN)
NAN_BOXED(1064395152,32,FLEN)
NAN_BOXED(1057814251,32,FLEN)
NAN_BOXED(1071328869,32,FLEN)
NAN_BOXED(1064395152,32,FLEN)
NAN_BOXED(1057814251,32,FLEN)
NAN_BOXED(1071328869,32,FLEN)
NAN_BOXED(1064395152,32,FLEN)
NAN_BOXED(1057814251,32,FLEN)
NAN_BOXED(1071328869,32,FLEN)
NAN_BOXED(1064395152,32,FLEN)
NAN_BOXED(1064848009,32,FLEN)
NAN_BOXED(1047465826,32,FLEN)
NAN_BOXED(1046994050,32,FLEN)
NAN_BOXED(1064848009,32,FLEN)
NAN_BOXED(1047465826,32,FLEN)
NAN_BOXED(1046994050,32,FLEN)
NAN_BOXED(1064848009,32,FLEN)
NAN_BOXED(1047465826,32,FLEN)
NAN_BOXED(1046994050,32,FLEN)
NAN_BOXED(1064848009,32,FLEN)
NAN_BOXED(1047465826,32,FLEN)
NAN_BOXED(1046994050,32,FLEN)
NAN_BOXED(1064848009,32,FLEN)
NAN_BOXED(1047465826,32,FLEN)
NAN_BOXED(1046994050,32,FLEN)
NAN_BOXED(1063471791,32,FLEN)
NAN_BOXED(1050825723,32,FLEN)
NAN_BOXED(1049632723,32,FLEN)
NAN_BOXED(1063471791,32,FLEN)
NAN_BOXED(1050825723,32,FLEN)
NAN_BOXED(1049632723,32,FLEN)
NAN_BOXED(1063471791,32,FLEN)
NAN_BOXED(1050825723,32,FLEN)
NAN_BOXED(1049632723,32,FLEN)
NAN_BOXED(1063471791,32,FLEN)
NAN_BOXED(1050825723,32,FLEN)
NAN_BOXED(1049632723,32,FLEN)
NAN_BOXED(1063471791,32,FLEN)
NAN_BOXED(1050825723,32,FLEN)
NAN_BOXED(1049632723,32,FLEN)
NAN_BOXED(1059279673,32,FLEN)
NAN_BOXED(1036360847,32,FLEN)
NAN_BOXED(1031546331,32,FLEN)
NAN_BOXED(1059279673,32,FLEN)
NAN_BOXED(1036360847,32,FLEN)
NAN_BOXED(1031546331,32,FLEN)
NAN_BOXED(1059279673,32,FLEN)
NAN_BOXED(1036360847,32,FLEN)
NAN_BOXED(1031546331,32,FLEN)
NAN_BOXED(1059279673,32,FLEN)
NAN_BOXED(1036360847,32,FLEN)
NAN_BOXED(1031546331,32,FLEN)
NAN_BOXED(1059279673,32,FLEN)
NAN_BOXED(1036360847,32,FLEN)
NAN_BOXED(1031546331,32,FLEN)
NAN_BOXED(1041630794,32,FLEN)
NAN_BOXED(1087164621,32,FLEN)
NAN_BOXED(1064308417,32,FLEN)
NAN_BOXED(1041630794,32,FLEN)
NAN_BOXED(1087164621,32,FLEN)
NAN_BOXED(1064308417,32,FLEN)
NAN_BOXED(1041630794,32,FLEN)
NAN_BOXED(1087164621,32,FLEN)
NAN_BOXED(1064308417,32,FLEN)
NAN_BOXED(1041630794,32,FLEN)
NAN_BOXED(1087164621,32,FLEN)
NAN_BOXED(1064308417,32,FLEN)
NAN_BOXED(1041630794,32,FLEN)
NAN_BOXED(1087164621,32,FLEN)
NAN_BOXED(1064308417,32,FLEN)
NAN_BOXED(1062121393,32,FLEN)
NAN_BOXED(1032155883,32,FLEN)
NAN_BOXED(1029143583,32,FLEN)
NAN_BOXED(1062121393,32,FLEN)
NAN_BOXED(1032155883,32,FLEN)
NAN_BOXED(1029143583,32,FLEN)
NAN_BOXED(1062121393,32,FLEN)
NAN_BOXED(1032155883,32,FLEN)
NAN_BOXED(1029143583,32,FLEN)
NAN_BOXED(1062121393,32,FLEN)
NAN_BOXED(1032155883,32,FLEN)
NAN_BOXED(1029143583,32,FLEN)
NAN_BOXED(1062121393,32,FLEN)
NAN_BOXED(1032155883,32,FLEN)
NAN_BOXED(1029143583,32,FLEN)
NAN_BOXED(1053158446,32,FLEN)
NAN_BOXED(1069504923,32,FLEN)
NAN_BOXED(1058271358,32,FLEN)
NAN_BOXED(1053158446,32,FLEN)
NAN_BOXED(1069504923,32,FLEN)
NAN_BOXED(1058271358,32,FLEN)
NAN_BOXED(1053158446,32,FLEN)
NAN_BOXED(1069504923,32,FLEN)
NAN_BOXED(1058271358,32,FLEN)
NAN_BOXED(1053158446,32,FLEN)
NAN_BOXED(1069504923,32,FLEN)
NAN_BOXED(1058271358,32,FLEN)
NAN_BOXED(1053158446,32,FLEN)
NAN_BOXED(1069504923,32,FLEN)
NAN_BOXED(1058271358,32,FLEN)
NAN_BOXED(1046408963,32,FLEN)
NAN_BOXED(1062947128,32,FLEN)
NAN_BOXED(1044313659,32,FLEN)
NAN_BOXED(1046408963,32,FLEN)
NAN_BOXED(1062947128,32,FLEN)
NAN_BOXED(1044313659,32,FLEN)
NAN_BOXED(1046408963,32,FLEN)
NAN_BOXED(1062947128,32,FLEN)
NAN_BOXED(1044313659,32,FLEN)
NAN_BOXED(1046408963,32,FLEN)
NAN_BOXED(1062947128,32,FLEN)
NAN_BOXED(1044313659,32,FLEN)
NAN_BOXED(1046408963,32,FLEN)
NAN_BOXED(1062947128,32,FLEN)
NAN_BOXED(1044313659,32,FLEN)
NAN_BOXED(1057103959,32,FLEN)
NAN_BOXED(1065729401,32,FLEN)
NAN_BOXED(1057486394,32,FLEN)
NAN_BOXED(1057103959,32,FLEN)
NAN_BOXED(1065729401,32,FLEN)
NAN_BOXED(1057486394,32,FLEN)
NAN_BOXED(1057103959,32,FLEN)
NAN_BOXED(1065729401,32,FLEN)
NAN_BOXED(1057486394,32,FLEN)
NAN_BOXED(1057103959,32,FLEN)
NAN_BOXED(1065729401,32,FLEN)
NAN_BOXED(1057486394,32,FLEN)
NAN_BOXED(1057103959,32,FLEN)
NAN_BOXED(1065729401,32,FLEN)
NAN_BOXED(1057486394,32,FLEN)
NAN_BOXED(1063672893,32,FLEN)
NAN_BOXED(1060471752,32,FLEN)
NAN_BOXED(1059280333,32,FLEN)
NAN_BOXED(1063672893,32,FLEN)
NAN_BOXED(1060471752,32,FLEN)
NAN_BOXED(1059280333,32,FLEN)
NAN_BOXED(1063672893,32,FLEN)
NAN_BOXED(1060471752,32,FLEN)
NAN_BOXED(1059280333,32,FLEN)
NAN_BOXED(1063672893,32,FLEN)
NAN_BOXED(1060471752,32,FLEN)
NAN_BOXED(1059280333,32,FLEN)
NAN_BOXED(1063672893,32,FLEN)
NAN_BOXED(1060471752,32,FLEN)
NAN_BOXED(1059280333,32,FLEN)
NAN_BOXED(1062921213,32,FLEN)
NAN_BOXED(1054880242,32,FLEN)
NAN_BOXED(1052750387,32,FLEN)
NAN_BOXED(1062921213,32,FLEN)
NAN_BOXED(1054880242,32,FLEN)
NAN_BOXED(1052750387,32,FLEN)
NAN_BOXED(1062921213,32,FLEN)
NAN_BOXED(1054880242,32,FLEN)
NAN_BOXED(1052750387,32,FLEN)
NAN_BOXED(1062921213,32,FLEN)
NAN_BOXED(1054880242,32,FLEN)
NAN_BOXED(1052750387,32,FLEN)
NAN_BOXED(1062921213,32,FLEN)
NAN_BOXED(1054880242,32,FLEN)
NAN_BOXED(1052750387,32,FLEN)
NAN_BOXED(1053388371,32,FLEN)
NAN_BOXED(1074476206,32,FLEN)
NAN_BOXED(1062932661,32,FLEN)
NAN_BOXED(1053388371,32,FLEN)
NAN_BOXED(1074476206,32,FLEN)
NAN_BOXED(1062932661,32,FLEN)
NAN_BOXED(1053388371,32,FLEN)
NAN_BOXED(1074476206,32,FLEN)
NAN_BOXED(1062932661,32,FLEN)
NAN_BOXED(1053388371,32,FLEN)
NAN_BOXED(1074476206,32,FLEN)
NAN_BOXED(1062932661,32,FLEN)
NAN_BOXED(1053388371,32,FLEN)
NAN_BOXED(1074476206,32,FLEN)
NAN_BOXED(1062932661,32,FLEN)
NAN_BOXED(1052669392,32,FLEN)
NAN_BOXED(1075531120,32,FLEN)
NAN_BOXED(1063720420,32,FLEN)
NAN_BOXED(1052669392,32,FLEN)
NAN_BOXED(1075531120,32,FLEN)
NAN_BOXED(1063720420,32,FLEN)
NAN_BOXED(1052669392,32,FLEN)
NAN_BOXED(1075531120,32,FLEN)
NAN_BOXED(1063720420,32,FLEN)
NAN_BOXED(1052669392,32,FLEN)
NAN_BOXED(1075531120,32,FLEN)
NAN_BOXED(1063720420,32,FLEN)
NAN_BOXED(1052669392,32,FLEN)
NAN_BOXED(1075531120,32,FLEN)
NAN_BOXED(1063720420,32,FLEN)
NAN_BOXED(1063584369,32,FLEN)
NAN_BOXED(1053481724,32,FLEN)
NAN_BOXED(1052080083,32,FLEN)
NAN_BOXED(1063584369,32,FLEN)
NAN_BOXED(1053481724,32,FLEN)
NAN_BOXED(1052080083,32,FLEN)
NAN_BOXED(1063584369,32,FLEN)
NAN_BOXED(1053481724,32,FLEN)
NAN_BOXED(1052080083,32,FLEN)
NAN_BOXED(1063584369,32,FLEN)
NAN_BOXED(1053481724,32,FLEN)
NAN_BOXED(1052080083,32,FLEN)
NAN_BOXED(1063584369,32,FLEN)
NAN_BOXED(1053481724,32,FLEN)
NAN_BOXED(1052080083,32,FLEN)
NAN_BOXED(1057590175,32,FLEN)
NAN_BOXED(1044340895,32,FLEN)
NAN_BOXED(1036887594,32,FLEN)
NAN_BOXED(1057590175,32,FLEN)
NAN_BOXED(1044340895,32,FLEN)
NAN_BOXED(1036887594,32,FLEN)
NAN_BOXED(1057590175,32,FLEN)
NAN_BOXED(1044340895,32,FLEN)
NAN_BOXED(1036887594,32,FLEN)
NAN_BOXED(1057590175,32,FLEN)
NAN_BOXED(1044340895,32,FLEN)
NAN_BOXED(1036887594,32,FLEN)
NAN_BOXED(1057590175,32,FLEN)
NAN_BOXED(1044340895,32,FLEN)
NAN_BOXED(1036887594,32,FLEN)
NAN_BOXED(1052629463,32,FLEN)
NAN_BOXED(1062087695,32,FLEN)
NAN_BOXED(1050207736,32,FLEN)
NAN_BOXED(1052629463,32,FLEN)
NAN_BOXED(1062087695,32,FLEN)
NAN_BOXED(1050207736,32,FLEN)
NAN_BOXED(1052629463,32,FLEN)
NAN_BOXED(1062087695,32,FLEN)
NAN_BOXED(1050207736,32,FLEN)
NAN_BOXED(1052629463,32,FLEN)
NAN_BOXED(1062087695,32,FLEN)
NAN_BOXED(1050207736,32,FLEN)
NAN_BOXED(1052629463,32,FLEN)
NAN_BOXED(1062087695,32,FLEN)
NAN_BOXED(1050207736,32,FLEN)
NAN_BOXED(1063222398,32,FLEN)
NAN_BOXED(1044662310,32,FLEN)
NAN_BOXED(1043028557,32,FLEN)
NAN_BOXED(1063222398,32,FLEN)
NAN_BOXED(1044662310,32,FLEN)
NAN_BOXED(1043028557,32,FLEN)
NAN_BOXED(1063222398,32,FLEN)
NAN_BOXED(1044662310,32,FLEN)
NAN_BOXED(1043028557,32,FLEN)
NAN_BOXED(1063222398,32,FLEN)
NAN_BOXED(1044662310,32,FLEN)
NAN_BOXED(1043028557,32,FLEN)
NAN_BOXED(1063222398,32,FLEN)
NAN_BOXED(1044662310,32,FLEN)
NAN_BOXED(1043028557,32,FLEN)
NAN_BOXED(1063951587,32,FLEN)
NAN_BOXED(1054169190,32,FLEN)
NAN_BOXED(1053001100,32,FLEN)
NAN_BOXED(1063951587,32,FLEN)
NAN_BOXED(1054169190,32,FLEN)
NAN_BOXED(1053001100,32,FLEN)
NAN_BOXED(1063951587,32,FLEN)
NAN_BOXED(1054169190,32,FLEN)
NAN_BOXED(1053001100,32,FLEN)
NAN_BOXED(1063951587,32,FLEN)
NAN_BOXED(1054169190,32,FLEN)
NAN_BOXED(1053001100,32,FLEN)
NAN_BOXED(1063951587,32,FLEN)
NAN_BOXED(1054169190,32,FLEN)
NAN_BOXED(1053001100,32,FLEN)
NAN_BOXED(1035302088,32,FLEN)
NAN_BOXED(1065700582,32,FLEN)
NAN_BOXED(1035794525,32,FLEN)
NAN_BOXED(1035302088,32,FLEN)
NAN_BOXED(1065700582,32,FLEN)
NAN_BOXED(1035794525,32,FLEN)
NAN_BOXED(1035302088,32,FLEN)
NAN_BOXED(1065700582,32,FLEN)
NAN_BOXED(1035794525,32,FLEN)
NAN_BOXED(1035302088,32,FLEN)
NAN_BOXED(1065700582,32,FLEN)
NAN_BOXED(1035794525,32,FLEN)
NAN_BOXED(1035302088,32,FLEN)
NAN_BOXED(1065700582,32,FLEN)
NAN_BOXED(1035794525,32,FLEN)
NAN_BOXED(1037731927,32,FLEN)
NAN_BOXED(1084512352,32,FLEN)
NAN_BOXED(1057770185,32,FLEN)
NAN_BOXED(1037731927,32,FLEN)
NAN_BOXED(1084512352,32,FLEN)
NAN_BOXED(1057770185,32,FLEN)
NAN_BOXED(1037731927,32,FLEN)
NAN_BOXED(1084512352,32,FLEN)
NAN_BOXED(1057770185,32,FLEN)
NAN_BOXED(1037731927,32,FLEN)
NAN_BOXED(1084512352,32,FLEN)
NAN_BOXED(1057770185,32,FLEN)
NAN_BOXED(1037731927,32,FLEN)
NAN_BOXED(1084512352,32,FLEN)
NAN_BOXED(1057770185,32,FLEN)
NAN_BOXED(1050461745,32,FLEN)
NAN_BOXED(1060009260,32,FLEN)
NAN_BOXED(1045802224,32,FLEN)
NAN_BOXED(1050461745,32,FLEN)
NAN_BOXED(1060009260,32,FLEN)
NAN_BOXED(1045802224,32,FLEN)
NAN_BOXED(1050461745,32,FLEN)
NAN_BOXED(1060009260,32,FLEN)
NAN_BOXED(1045802224,32,FLEN)
NAN_BOXED(1050461745,32,FLEN)
NAN_BOXED(1060009260,32,FLEN)
NAN_BOXED(1045802224,32,FLEN)
NAN_BOXED(1050461745,32,FLEN)
NAN_BOXED(1060009260,32,FLEN)
NAN_BOXED(1045802224,32,FLEN)
NAN_BOXED(1063053529,32,FLEN)
NAN_BOXED(1032213319,32,FLEN)
NAN_BOXED(1030214525,32,FLEN)
NAN_BOXED(1063053529,32,FLEN)
NAN_BOXED(1032213319,32,FLEN)
NAN_BOXED(1030214525,32,FLEN)
NAN_BOXED(1063053529,32,FLEN)
NAN_BOXED(1032213319,32,FLEN)
NAN_BOXED(1030214525,32,FLEN)
NAN_BOXED(1063053529,32,FLEN)
NAN_BOXED(1032213319,32,FLEN)
NAN_BOXED(1030214525,32,FLEN)
NAN_BOXED(1063053529,32,FLEN)
NAN_BOXED(1032213319,32,FLEN)
NAN_BOXED(1030214525,32,FLEN)
NAN_BOXED(1035654278,32,FLEN)
NAN_BOXED(1086595067,32,FLEN)
NAN_BOXED(1057956365,32,FLEN)
NAN_BOXED(1035654278,32,FLEN)
NAN_BOXED(1086595067,32,FLEN)
NAN_BOXED(1057956365,32,FLEN)
NAN_BOXED(1035654278,32,FLEN)
NAN_BOXED(1086595067,32,FLEN)
NAN_BOXED(1057956365,32,FLEN)
NAN_BOXED(1035654278,32,FLEN)
NAN_BOXED(1086595067,32,FLEN)
NAN_BOXED(1057956365,32,FLEN)
NAN_BOXED(1035654278,32,FLEN)
NAN_BOXED(1086595067,32,FLEN)
NAN_BOXED(1057956365,32,FLEN)
NAN_BOXED(1046663530,32,FLEN)
NAN_BOXED(1075823190,32,FLEN)
NAN_BOXED(1057852480,32,FLEN)
NAN_BOXED(1046663530,32,FLEN)
NAN_BOXED(1075823190,32,FLEN)
NAN_BOXED(1057852480,32,FLEN)
NAN_BOXED(1046663530,32,FLEN)
NAN_BOXED(1075823190,32,FLEN)
NAN_BOXED(1057852480,32,FLEN)
NAN_BOXED(1046663530,32,FLEN)
NAN_BOXED(1075823190,32,FLEN)
NAN_BOXED(1057852480,32,FLEN)
NAN_BOXED(1046663530,32,FLEN)
NAN_BOXED(1075823190,32,FLEN)
NAN_BOXED(1057852480,32,FLEN)
NAN_BOXED(1060715874,32,FLEN)
NAN_BOXED(1053520316,32,FLEN)
NAN_BOXED(1049835001,32,FLEN)
NAN_BOXED(1060715874,32,FLEN)
NAN_BOXED(1053520316,32,FLEN)
NAN_BOXED(1049835001,32,FLEN)
NAN_BOXED(1060715874,32,FLEN)
NAN_BOXED(1053520316,32,FLEN)
NAN_BOXED(1049835001,32,FLEN)
NAN_BOXED(1060715874,32,FLEN)
NAN_BOXED(1053520316,32,FLEN)
NAN_BOXED(1049835001,32,FLEN)
NAN_BOXED(1060715874,32,FLEN)
NAN_BOXED(1053520316,32,FLEN)
NAN_BOXED(1049835001,32,FLEN)
NAN_BOXED(1064285008,32,FLEN)
NAN_BOXED(1046118987,32,FLEN)
NAN_BOXED(1045207218,32,FLEN)
NAN_BOXED(1064285008,32,FLEN)
NAN_BOXED(1046118987,32,FLEN)
NAN_BOXED(1045207218,32,FLEN)
NAN_BOXED(1064285008,32,FLEN)
NAN_BOXED(1046118987,32,FLEN)
NAN_BOXED(1045207218,32,FLEN)
NAN_BOXED(1064285008,32,FLEN)
NAN_BOXED(1046118987,32,FLEN)
NAN_BOXED(1045207218,32,FLEN)
NAN_BOXED(1064285008,32,FLEN)
NAN_BOXED(1046118987,32,FLEN)
NAN_BOXED(1045207218,32,FLEN)
NAN_BOXED(1018402822,32,FLEN)
NAN_BOXED(1107444418,32,FLEN)
NAN_BOXED(1060553746,32,FLEN)
NAN_BOXED(1018402822,32,FLEN)
NAN_BOXED(1107444418,32,FLEN)
NAN_BOXED(1060553746,32,FLEN)
NAN_BOXED(1018402822,32,FLEN)
NAN_BOXED(1107444418,32,FLEN)
NAN_BOXED(1060553746,32,FLEN)
NAN_BOXED(1018402822,32,FLEN)
NAN_BOXED(1107444418,32,FLEN)
NAN_BOXED(1060553746,32,FLEN)
NAN_BOXED(1018402822,32,FLEN)
NAN_BOXED(1107444418,32,FLEN)
NAN_BOXED(1060553746,32,FLEN)
NAN_BOXED(1031215911,32,FLEN)
NAN_BOXED(1098057020,32,FLEN)
NAN_BOXED(1063949269,32,FLEN)
NAN_BOXED(1031215911,32,FLEN)
NAN_BOXED(1098057020,32,FLEN)
NAN_BOXED(1063949269,32,FLEN)
NAN_BOXED(1031215911,32,FLEN)
NAN_BOXED(1098057020,32,FLEN)
NAN_BOXED(1063949269,32,FLEN)
NAN_BOXED(1031215911,32,FLEN)
NAN_BOXED(1098057020,32,FLEN)
NAN_BOXED(1063949269,32,FLEN)
NAN_BOXED(1031215911,32,FLEN)
NAN_BOXED(1098057020,32,FLEN)
NAN_BOXED(1063949269,32,FLEN)
NAN_BOXED(1041322955,32,FLEN)
NAN_BOXED(1084384012,32,FLEN)
NAN_BOXED(1060658818,32,FLEN)
NAN_BOXED(1041322955,32,FLEN)
NAN_BOXED(1084384012,32,FLEN)
NAN_BOXED(1060658818,32,FLEN)
NAN_BOXED(1041322955,32,FLEN)
NAN_BOXED(1084384012,32,FLEN)
NAN_BOXED(1060658818,32,FLEN)
NAN_BOXED(1041322955,32,FLEN)
NAN_BOXED(1084384012,32,FLEN)
NAN_BOXED(1060658818,32,FLEN)
NAN_BOXED(1041322955,32,FLEN)
NAN_BOXED(1084384012,32,FLEN)
NAN_BOXED(1060658818,32,FLEN)
NAN_BOXED(1024089167,32,FLEN)
NAN_BOXED(1099355151,32,FLEN)
NAN_BOXED(1058127324,32,FLEN)
NAN_BOXED(1024089167,32,FLEN)
NAN_BOXED(1099355151,32,FLEN)
NAN_BOXED(1058127324,32,FLEN)
NAN_BOXED(1024089167,32,FLEN)
NAN_BOXED(1099355151,32,FLEN)
NAN_BOXED(1058127324,32,FLEN)
NAN_BOXED(1024089167,32,FLEN)
NAN_BOXED(1099355151,32,FLEN)
NAN_BOXED(1058127324,32,FLEN)
NAN_BOXED(1024089167,32,FLEN)
NAN_BOXED(1099355151,32,FLEN)
NAN_BOXED(1058127324,32,FLEN)
NAN_BOXED(1033857280,32,FLEN)
NAN_BOXED(1095171951,32,FLEN)
NAN_BOXED(1064817802,32,FLEN)
NAN_BOXED(1033857280,32,FLEN)
NAN_BOXED(1095171951,32,FLEN)
NAN_BOXED(1064817802,32,FLEN)
NAN_BOXED(1033857280,32,FLEN)
NAN_BOXED(1095171951,32,FLEN)
NAN_BOXED(1064817802,32,FLEN)
NAN_BOXED(1033857280,32,FLEN)
NAN_BOXED(1095171951,32,FLEN)
NAN_BOXED(1064817802,32,FLEN)
NAN_BOXED(1033857280,32,FLEN)
NAN_BOXED(1095171951,32,FLEN)
NAN_BOXED(1064817802,32,FLEN)
NAN_BOXED(1063916357,32,FLEN)
NAN_BOXED(1045276121,32,FLEN)
NAN_BOXED(1044121876,32,FLEN)
NAN_BOXED(1063916357,32,FLEN)
NAN_BOXED(1045276121,32,FLEN)
NAN_BOXED(1044121876,32,FLEN)
NAN_BOXED(1063916357,32,FLEN)
NAN_BOXED(1045276121,32,FLEN)
NAN_BOXED(1044121876,32,FLEN)
NAN_BOXED(1063916357,32,FLEN)
NAN_BOXED(1045276121,32,FLEN)
NAN_BOXED(1044121876,32,FLEN)
NAN_BOXED(1063916357,32,FLEN)
NAN_BOXED(1045276121,32,FLEN)
NAN_BOXED(1044121876,32,FLEN)
NAN_BOXED(1052314881,32,FLEN)
NAN_BOXED(1067745471,32,FLEN)
NAN_BOXED(1055773388,32,FLEN)
NAN_BOXED(1052314881,32,FLEN)
NAN_BOXED(1067745471,32,FLEN)
NAN_BOXED(1055773388,32,FLEN)
NAN_BOXED(1052314881,32,FLEN)
NAN_BOXED(1067745471,32,FLEN)
NAN_BOXED(1055773388,32,FLEN)
NAN_BOXED(1052314881,32,FLEN)
NAN_BOXED(1067745471,32,FLEN)
NAN_BOXED(1055773388,32,FLEN)
NAN_BOXED(1052314881,32,FLEN)
NAN_BOXED(1067745471,32,FLEN)
NAN_BOXED(1055773388,32,FLEN)
NAN_BOXED(1064804387,32,FLEN)
NAN_BOXED(1062914904,32,FLEN)
NAN_BOXED(1062445839,32,FLEN)
NAN_BOXED(1064804387,32,FLEN)
NAN_BOXED(1062914904,32,FLEN)
NAN_BOXED(1062445839,32,FLEN)
NAN_BOXED(1064804387,32,FLEN)
NAN_BOXED(1062914904,32,FLEN)
NAN_BOXED(1062445839,32,FLEN)
NAN_BOXED(1064804387,32,FLEN)
NAN_BOXED(1062914904,32,FLEN)
NAN_BOXED(1062445839,32,FLEN)
NAN_BOXED(1064804387,32,FLEN)
NAN_BOXED(1062914904,32,FLEN)
NAN_BOXED(1062445839,32,FLEN)
NAN_BOXED(1059137447,32,FLEN)
NAN_BOXED(1069596386,32,FLEN)
NAN_BOXED(1064479695,32,FLEN)
NAN_BOXED(1059137447,32,FLEN)
NAN_BOXED(1069596386,32,FLEN)
NAN_BOXED(1064479695,32,FLEN)
NAN_BOXED(1059137447,32,FLEN)
NAN_BOXED(1069596386,32,FLEN)
NAN_BOXED(1064479695,32,FLEN)
NAN_BOXED(1059137447,32,FLEN)
NAN_BOXED(1069596386,32,FLEN)
NAN_BOXED(1064479695,32,FLEN)
NAN_BOXED(1059137447,32,FLEN)
NAN_BOXED(1069596386,32,FLEN)
NAN_BOXED(1064479695,32,FLEN)
NAN_BOXED(1004801956,32,FLEN)
NAN_BOXED(1107751488,32,FLEN)
NAN_BOXED(1047556097,32,FLEN)
NAN_BOXED(1004801956,32,FLEN)
NAN_BOXED(1107751488,32,FLEN)
NAN_BOXED(1047556097,32,FLEN)
NAN_BOXED(1004801956,32,FLEN)
NAN_BOXED(1107751488,32,FLEN)
NAN_BOXED(1047556097,32,FLEN)
NAN_BOXED(1004801956,32,FLEN)
NAN_BOXED(1107751488,32,FLEN)
NAN_BOXED(1047556097,32,FLEN)
NAN_BOXED(1004801956,32,FLEN)
NAN_BOXED(1107751488,32,FLEN)
NAN_BOXED(1047556097,32,FLEN)
NAN_BOXED(1028497847,32,FLEN)
NAN_BOXED(1086245181,32,FLEN)
NAN_BOXED(1050230699,32,FLEN)
NAN_BOXED(1028497847,32,FLEN)
NAN_BOXED(1086245181,32,FLEN)
NAN_BOXED(1050230699,32,FLEN)
NAN_BOXED(1028497847,32,FLEN)
NAN_BOXED(1086245181,32,FLEN)
NAN_BOXED(1050230699,32,FLEN)
NAN_BOXED(1028497847,32,FLEN)
NAN_BOXED(1086245181,32,FLEN)
NAN_BOXED(1050230699,32,FLEN)
NAN_BOXED(1028497847,32,FLEN)
NAN_BOXED(1086245181,32,FLEN)
NAN_BOXED(1050230699,32,FLEN)
NAN_BOXED(1059590609,32,FLEN)
NAN_BOXED(1068750499,32,FLEN)
NAN_BOXED(1064051391,32,FLEN)
NAN_BOXED(1059590609,32,FLEN)
NAN_BOXED(1068750499,32,FLEN)
NAN_BOXED(1064051391,32,FLEN)
NAN_BOXED(1059590609,32,FLEN)
NAN_BOXED(1068750499,32,FLEN)
NAN_BOXED(1064051391,32,FLEN)
NAN_BOXED(1059590609,32,FLEN)
NAN_BOXED(1068750499,32,FLEN)
NAN_BOXED(1064051391,32,FLEN)
NAN_BOXED(1059590609,32,FLEN)
NAN_BOXED(1068750499,32,FLEN)
NAN_BOXED(1064051391,32,FLEN)
NAN_BOXED(1049196090,32,FLEN)
NAN_BOXED(1079194115,32,FLEN)
NAN_BOXED(1063440025,32,FLEN)
NAN_BOXED(1049196090,32,FLEN)
NAN_BOXED(1079194115,32,FLEN)
NAN_BOXED(1063440025,32,FLEN)
NAN_BOXED(1049196090,32,FLEN)
NAN_BOXED(1079194115,32,FLEN)
NAN_BOXED(1063440025,32,FLEN)
NAN_BOXED(1049196090,32,FLEN)
NAN_BOXED(1079194115,32,FLEN)
NAN_BOXED(1063440025,32,FLEN)
NAN_BOXED(1049196090,32,FLEN)
NAN_BOXED(1079194115,32,FLEN)
NAN_BOXED(1063440025,32,FLEN)
NAN_BOXED(1055383337,32,FLEN)
NAN_BOXED(1066892007,32,FLEN)
NAN_BOXED(1057567731,32,FLEN)
NAN_BOXED(1055383337,32,FLEN)
NAN_BOXED(1066892007,32,FLEN)
NAN_BOXED(1057567731,32,FLEN)
NAN_BOXED(1055383337,32,FLEN)
NAN_BOXED(1066892007,32,FLEN)
NAN_BOXED(1057567731,32,FLEN)
NAN_BOXED(1055383337,32,FLEN)
NAN_BOXED(1066892007,32,FLEN)
NAN_BOXED(1057567731,32,FLEN)
NAN_BOXED(1055383337,32,FLEN)
NAN_BOXED(1066892007,32,FLEN)
NAN_BOXED(1057567731,32,FLEN)
NAN_BOXED(1057056366,32,FLEN)
NAN_BOXED(1072312603,32,FLEN)
NAN_BOXED(1064091879,32,FLEN)
NAN_BOXED(1057056366,32,FLEN)
NAN_BOXED(1072312603,32,FLEN)
NAN_BOXED(1064091879,32,FLEN)
NAN_BOXED(1057056366,32,FLEN)
NAN_BOXED(1072312603,32,FLEN)
NAN_BOXED(1064091879,32,FLEN)
NAN_BOXED(1057056366,32,FLEN)
NAN_BOXED(1072312603,32,FLEN)
NAN_BOXED(1064091879,32,FLEN)
NAN_BOXED(1057056366,32,FLEN)
NAN_BOXED(1072312603,32,FLEN)
NAN_BOXED(1064091879,32,FLEN)
NAN_BOXED(1064112187,32,FLEN)
NAN_BOXED(1057267507,32,FLEN)
NAN_BOXED(1056284566,32,FLEN)
NAN_BOXED(1064112187,32,FLEN)
NAN_BOXED(1057267507,32,FLEN)
NAN_BOXED(1056284566,32,FLEN)
NAN_BOXED(1064112187,32,FLEN)
NAN_BOXED(1057267507,32,FLEN)
NAN_BOXED(1056284566,32,FLEN)
NAN_BOXED(1064112187,32,FLEN)
NAN_BOXED(1057267507,32,FLEN)
NAN_BOXED(1056284566,32,FLEN)
NAN_BOXED(1064112187,32,FLEN)
NAN_BOXED(1057267507,32,FLEN)
NAN_BOXED(1056284566,32,FLEN)
NAN_BOXED(1064841918,32,FLEN)
NAN_BOXED(1056612107,32,FLEN)
NAN_BOXED(1056111552,32,FLEN)
NAN_BOXED(1064841918,32,FLEN)
NAN_BOXED(1056612107,32,FLEN)
NAN_BOXED(1056111552,32,FLEN)
NAN_BOXED(1064841918,32,FLEN)
NAN_BOXED(1056612107,32,FLEN)
NAN_BOXED(1056111552,32,FLEN)
NAN_BOXED(1064841918,32,FLEN)
NAN_BOXED(1056612107,32,FLEN)
NAN_BOXED(1056111552,32,FLEN)
NAN_BOXED(1064841918,32,FLEN)
NAN_BOXED(1056612107,32,FLEN)
NAN_BOXED(1056111552,32,FLEN)
NAN_BOXED(1062831593,32,FLEN)
NAN_BOXED(1062758627,32,FLEN)
NAN_BOXED(1060626972,32,FLEN)
NAN_BOXED(1062831593,32,FLEN)
NAN_BOXED(1062758627,32,FLEN)
NAN_BOXED(1060626972,32,FLEN)
NAN_BOXED(1062831593,32,FLEN)
NAN_BOXED(1062758627,32,FLEN)
NAN_BOXED(1060626972,32,FLEN)
NAN_BOXED(1062831593,32,FLEN)
NAN_BOXED(1062758627,32,FLEN)
NAN_BOXED(1060626972,32,FLEN)
NAN_BOXED(1062831593,32,FLEN)
NAN_BOXED(1062758627,32,FLEN)
NAN_BOXED(1060626972,32,FLEN)
NAN_BOXED(1062819827,32,FLEN)
NAN_BOXED(1057104201,32,FLEN)
NAN_BOXED(1054668249,32,FLEN)
NAN_BOXED(1062819827,32,FLEN)
NAN_BOXED(1057104201,32,FLEN)
NAN_BOXED(1054668249,32,FLEN)
NAN_BOXED(1062819827,32,FLEN)
NAN_BOXED(1057104201,32,FLEN)
NAN_BOXED(1054668249,32,FLEN)
NAN_BOXED(1062819827,32,FLEN)
NAN_BOXED(1057104201,32,FLEN)
NAN_BOXED(1054668249,32,FLEN)
NAN_BOXED(1062819827,32,FLEN)
NAN_BOXED(1057104201,32,FLEN)
NAN_BOXED(1054668249,32,FLEN)
NAN_BOXED(1058838468,32,FLEN)
NAN_BOXED(1067619106,32,FLEN)
NAN_BOXED(1061610517,32,FLEN)
NAN_BOXED(1058838468,32,FLEN)
NAN_BOXED(1067619106,32,FLEN)
NAN_BOXED(1061610517,32,FLEN)
NAN_BOXED(1058838468,32,FLEN)
NAN_BOXED(1067619106,32,FLEN)
NAN_BOXED(1061610517,32,FLEN)
NAN_BOXED(1058838468,32,FLEN)
NAN_BOXED(1067619106,32,FLEN)
NAN_BOXED(1061610517,32,FLEN)
NAN_BOXED(1058838468,32,FLEN)
NAN_BOXED(1067619106,32,FLEN)
NAN_BOXED(1061610517,32,FLEN)
NAN_BOXED(1061635455,32,FLEN)
NAN_BOXED(1057972026,32,FLEN)
NAN_BOXED(1054815205,32,FLEN)
NAN_BOXED(1061635455,32,FLEN)
NAN_BOXED(1057972026,32,FLEN)
NAN_BOXED(1054815205,32,FLEN)
NAN_BOXED(1061635455,32,FLEN)
NAN_BOXED(1057972026,32,FLEN)
NAN_BOXED(1054815205,32,FLEN)
NAN_BOXED(1061635455,32,FLEN)
NAN_BOXED(1057972026,32,FLEN)
NAN_BOXED(1054815205,32,FLEN)
NAN_BOXED(1061635455,32,FLEN)
NAN_BOXED(1057972026,32,FLEN)
NAN_BOXED(1054815205,32,FLEN)
NAN_BOXED(1035411873,32,FLEN)
NAN_BOXED(1087364901,32,FLEN)
NAN_BOXED(1058321363,32,FLEN)
NAN_BOXED(1035411873,32,FLEN)
NAN_BOXED(1087364901,32,FLEN)
NAN_BOXED(1058321363,32,FLEN)
NAN_BOXED(1035411873,32,FLEN)
NAN_BOXED(1087364901,32,FLEN)
NAN_BOXED(1058321363,32,FLEN)
NAN_BOXED(1035411873,32,FLEN)
NAN_BOXED(1087364901,32,FLEN)
NAN_BOXED(1058321363,32,FLEN)
NAN_BOXED(1035411873,32,FLEN)
NAN_BOXED(1087364901,32,FLEN)
NAN_BOXED(1058321363,32,FLEN)
NAN_BOXED(1062615444,32,FLEN)
NAN_BOXED(1062279426,32,FLEN)
NAN_BOXED(1060043247,32,FLEN)
NAN_BOXED(1062615444,32,FLEN)
NAN_BOXED(1062279426,32,FLEN)
NAN_BOXED(1060043247,32,FLEN)
NAN_BOXED(1062615444,32,FLEN)
NAN_BOXED(1062279426,32,FLEN)
NAN_BOXED(1060043247,32,FLEN)
NAN_BOXED(1062615444,32,FLEN)
NAN_BOXED(1062279426,32,FLEN)
NAN_BOXED(1060043247,32,FLEN)
NAN_BOXED(1062615444,32,FLEN)
NAN_BOXED(1062279426,32,FLEN)
NAN_BOXED(1060043247,32,FLEN)
NAN_BOXED(1061321087,32,FLEN)
NAN_BOXED(1058020347,32,FLEN)
NAN_BOXED(1054536499,32,FLEN)
NAN_BOXED(1061321087,32,FLEN)
NAN_BOXED(1058020347,32,FLEN)
NAN_BOXED(1054536499,32,FLEN)
NAN_BOXED(1061321087,32,FLEN)
NAN_BOXED(1058020347,32,FLEN)
NAN_BOXED(1054536499,32,FLEN)
NAN_BOXED(1061321087,32,FLEN)
NAN_BOXED(1058020347,32,FLEN)
NAN_BOXED(1054536499,32,FLEN)
NAN_BOXED(1061321087,32,FLEN)
NAN_BOXED(1058020347,32,FLEN)
NAN_BOXED(1054536499,32,FLEN)
NAN_BOXED(1046132018,32,FLEN)
NAN_BOXED(1073818823,32,FLEN)
NAN_BOXED(1054652192,32,FLEN)
NAN_BOXED(1046132018,32,FLEN)
NAN_BOXED(1073818823,32,FLEN)
NAN_BOXED(1054652192,32,FLEN)
NAN_BOXED(1046132018,32,FLEN)
NAN_BOXED(1073818823,32,FLEN)
NAN_BOXED(1054652192,32,FLEN)
NAN_BOXED(1046132018,32,FLEN)
NAN_BOXED(1073818823,32,FLEN)
NAN_BOXED(1054652192,32,FLEN)
NAN_BOXED(1046132018,32,FLEN)
NAN_BOXED(1073818823,32,FLEN)
NAN_BOXED(1054652192,32,FLEN)
NAN_BOXED(1062196646,32,FLEN)
NAN_BOXED(1062519651,32,FLEN)
NAN_BOXED(1059896206,32,FLEN)
NAN_BOXED(1062196646,32,FLEN)
NAN_BOXED(1062519651,32,FLEN)
NAN_BOXED(1059896206,32,FLEN)
NAN_BOXED(1062196646,32,FLEN)
NAN_BOXED(1062519651,32,FLEN)
NAN_BOXED(1059896206,32,FLEN)
NAN_BOXED(1062196646,32,FLEN)
NAN_BOXED(1062519651,32,FLEN)
NAN_BOXED(1059896206,32,FLEN)
NAN_BOXED(1062196646,32,FLEN)
NAN_BOXED(1062519651,32,FLEN)
NAN_BOXED(1059896206,32,FLEN)
NAN_BOXED(1058959737,32,FLEN)
NAN_BOXED(1063730507,32,FLEN)
NAN_BOXED(1057955412,32,FLEN)
NAN_BOXED(1058959737,32,FLEN)
NAN_BOXED(1063730507,32,FLEN)
NAN_BOXED(1057955412,32,FLEN)
NAN_BOXED(1058959737,32,FLEN)
NAN_BOXED(1063730507,32,FLEN)
NAN_BOXED(1057955412,32,FLEN)
NAN_BOXED(1058959737,32,FLEN)
NAN_BOXED(1063730507,32,FLEN)
NAN_BOXED(1057955412,32,FLEN)
NAN_BOXED(1058959737,32,FLEN)
NAN_BOXED(1063730507,32,FLEN)
NAN_BOXED(1057955412,32,FLEN)
NAN_BOXED(1058684084,32,FLEN)
NAN_BOXED(998693444,32,FLEN)
NAN_BOXED(992116367,32,FLEN)
NAN_BOXED(1058684084,32,FLEN)
NAN_BOXED(998693444,32,FLEN)
NAN_BOXED(992116367,32,FLEN)
NAN_BOXED(1058684084,32,FLEN)
NAN_BOXED(998693444,32,FLEN)
NAN_BOXED(992116367,32,FLEN)
NAN_BOXED(1058684084,32,FLEN)
NAN_BOXED(998693444,32,FLEN)
NAN_BOXED(992116367,32,FLEN)
NAN_BOXED(1058684084,32,FLEN)
NAN_BOXED(998693444,32,FLEN)
NAN_BOXED(992116367,32,FLEN)
NAN_BOXED(1055251357,32,FLEN)
NAN_BOXED(1061204467,32,FLEN)
NAN_BOXED(1051526269,32,FLEN)
NAN_BOXED(1055251357,32,FLEN)
NAN_BOXED(1061204467,32,FLEN)
NAN_BOXED(1051526269,32,FLEN)
NAN_BOXED(1055251357,32,FLEN)
NAN_BOXED(1061204467,32,FLEN)
NAN_BOXED(1051526269,32,FLEN)
NAN_BOXED(1055251357,32,FLEN)
NAN_BOXED(1061204467,32,FLEN)
NAN_BOXED(1051526269,32,FLEN)
NAN_BOXED(1055251357,32,FLEN)
NAN_BOXED(1061204467,32,FLEN)
NAN_BOXED(1051526269,32,FLEN)
NAN_BOXED(1049704354,32,FLEN)
NAN_BOXED(1067459895,32,FLEN)
NAN_BOXED(1052094403,32,FLEN)
NAN_BOXED(1049704354,32,FLEN)
NAN_BOXED(1067459895,32,FLEN)
NAN_BOXED(1052094403,32,FLEN)
NAN_BOXED(1049704354,32,FLEN)
NAN_BOXED(1067459895,32,FLEN)
NAN_BOXED(1052094403,32,FLEN)
NAN_BOXED(1049704354,32,FLEN)
NAN_BOXED(1067459895,32,FLEN)
NAN_BOXED(1052094403,32,FLEN)
NAN_BOXED(1049704354,32,FLEN)
NAN_BOXED(1067459895,32,FLEN)
NAN_BOXED(1052094403,32,FLEN)
NAN_BOXED(1044867709,32,FLEN)
NAN_BOXED(1078874084,32,FLEN)
NAN_BOXED(1059108332,32,FLEN)
NAN_BOXED(1044867709,32,FLEN)
NAN_BOXED(1078874084,32,FLEN)
NAN_BOXED(1059108332,32,FLEN)
NAN_BOXED(1044867709,32,FLEN)
NAN_BOXED(1078874084,32,FLEN)
NAN_BOXED(1059108332,32,FLEN)
NAN_BOXED(1044867709,32,FLEN)
NAN_BOXED(1078874084,32,FLEN)
NAN_BOXED(1059108332,32,FLEN)
NAN_BOXED(1044867709,32,FLEN)
NAN_BOXED(1078874084,32,FLEN)
NAN_BOXED(1059108332,32,FLEN)
NAN_BOXED(1051375803,32,FLEN)
NAN_BOXED(1034446259,32,FLEN)
NAN_BOXED(1021352475,32,FLEN)
NAN_BOXED(1051375803,32,FLEN)
NAN_BOXED(1034446259,32,FLEN)
NAN_BOXED(1021352475,32,FLEN)
NAN_BOXED(1051375803,32,FLEN)
NAN_BOXED(1034446259,32,FLEN)
NAN_BOXED(1021352475,32,FLEN)
NAN_BOXED(1051375803,32,FLEN)
NAN_BOXED(1034446259,32,FLEN)
NAN_BOXED(1021352475,32,FLEN)
NAN_BOXED(1051375803,32,FLEN)
NAN_BOXED(1034446259,32,FLEN)
NAN_BOXED(1021352475,32,FLEN)
NAN_BOXED(1062599595,32,FLEN)
NAN_BOXED(1055222391,32,FLEN)
NAN_BOXED(1052754718,32,FLEN)
NAN_BOXED(1062599595,32,FLEN)
NAN_BOXED(1055222391,32,FLEN)
NAN_BOXED(1052754718,32,FLEN)
NAN_BOXED(1062599595,32,FLEN)
NAN_BOXED(1055222391,32,FLEN)
NAN_BOXED(1052754718,32,FLEN)
NAN_BOXED(1062599595,32,FLEN)
NAN_BOXED(1055222391,32,FLEN)
NAN_BOXED(1052754718,32,FLEN)
NAN_BOXED(1062599595,32,FLEN)
NAN_BOXED(1055222391,32,FLEN)
NAN_BOXED(1052754718,32,FLEN)
NAN_BOXED(1058899041,32,FLEN)
NAN_BOXED(1069765392,32,FLEN)
NAN_BOXED(1064328677,32,FLEN)
NAN_BOXED(1058899041,32,FLEN)
NAN_BOXED(1069765392,32,FLEN)
NAN_BOXED(1064328677,32,FLEN)
NAN_BOXED(1058899041,32,FLEN)
NAN_BOXED(1069765392,32,FLEN)
NAN_BOXED(1064328677,32,FLEN)
NAN_BOXED(1058899041,32,FLEN)
NAN_BOXED(1069765392,32,FLEN)
NAN_BOXED(1064328677,32,FLEN)
NAN_BOXED(1058899041,32,FLEN)
NAN_BOXED(1069765392,32,FLEN)
NAN_BOXED(1064328677,32,FLEN)
NAN_BOXED(1064684284,32,FLEN)
NAN_BOXED(1048611026,32,FLEN)
NAN_BOXED(1047974328,32,FLEN)
NAN_BOXED(1064684284,32,FLEN)
NAN_BOXED(1048611026,32,FLEN)
NAN_BOXED(1047974328,32,FLEN)
NAN_BOXED(1064684284,32,FLEN)
NAN_BOXED(1048611026,32,FLEN)
NAN_BOXED(1047974328,32,FLEN)
NAN_BOXED(1064684284,32,FLEN)
NAN_BOXED(1048611026,32,FLEN)
NAN_BOXED(1047974328,32,FLEN)
NAN_BOXED(1064684284,32,FLEN)
NAN_BOXED(1048611026,32,FLEN)
NAN_BOXED(1047974328,32,FLEN)
NAN_BOXED(1063430676,32,FLEN)
NAN_BOXED(1051137968,32,FLEN)
NAN_BOXED(1049883117,32,FLEN)
NAN_BOXED(1063430676,32,FLEN)
NAN_BOXED(1051137968,32,FLEN)
NAN_BOXED(1049883117,32,FLEN)
NAN_BOXED(1063430676,32,FLEN)
NAN_BOXED(1051137968,32,FLEN)
NAN_BOXED(1049883117,32,FLEN)
NAN_BOXED(1063430676,32,FLEN)
NAN_BOXED(1051137968,32,FLEN)
NAN_BOXED(1049883117,32,FLEN)
NAN_BOXED(1063430676,32,FLEN)
NAN_BOXED(1051137968,32,FLEN)
NAN_BOXED(1049883117,32,FLEN)
NAN_BOXED(1063673040,32,FLEN)
NAN_BOXED(1060366419,32,FLEN)
NAN_BOXED(1059185653,32,FLEN)
NAN_BOXED(1063673040,32,FLEN)
NAN_BOXED(1060366419,32,FLEN)
NAN_BOXED(1059185653,32,FLEN)
NAN_BOXED(1063673040,32,FLEN)
NAN_BOXED(1060366419,32,FLEN)
NAN_BOXED(1059185653,32,FLEN)
NAN_BOXED(1063673040,32,FLEN)
NAN_BOXED(1060366419,32,FLEN)
NAN_BOXED(1059185653,32,FLEN)
NAN_BOXED(1063673040,32,FLEN)
NAN_BOXED(1060366419,32,FLEN)
NAN_BOXED(1059185653,32,FLEN)
NAN_BOXED(1064813310,32,FLEN)
NAN_BOXED(1056040112,32,FLEN)
NAN_BOXED(1055529957,32,FLEN)
NAN_BOXED(1064813310,32,FLEN)
NAN_BOXED(1056040112,32,FLEN)
NAN_BOXED(1055529957,32,FLEN)
NAN_BOXED(1064813310,32,FLEN)
NAN_BOXED(1056040112,32,FLEN)
NAN_BOXED(1055529957,32,FLEN)
NAN_BOXED(1064813310,32,FLEN)
NAN_BOXED(1056040112,32,FLEN)
NAN_BOXED(1055529957,32,FLEN)
NAN_BOXED(1064813310,32,FLEN)
NAN_BOXED(1056040112,32,FLEN)
NAN_BOXED(1055529957,32,FLEN)
NAN_BOXED(1046132714,32,FLEN)
NAN_BOXED(1080560512,32,FLEN)
NAN_BOXED(1061568640,32,FLEN)
NAN_BOXED(1046132714,32,FLEN)
NAN_BOXED(1080560512,32,FLEN)
NAN_BOXED(1061568640,32,FLEN)
NAN_BOXED(1046132714,32,FLEN)
NAN_BOXED(1080560512,32,FLEN)
NAN_BOXED(1061568640,32,FLEN)
NAN_BOXED(1046132714,32,FLEN)
NAN_BOXED(1080560512,32,FLEN)
NAN_BOXED(1061568640,32,FLEN)
NAN_BOXED(1046132714,32,FLEN)
NAN_BOXED(1080560512,32,FLEN)
NAN_BOXED(1061568640,32,FLEN)
NAN_BOXED(1054773282,32,FLEN)
NAN_BOXED(1043797535,32,FLEN)
NAN_BOXED(1033841733,32,FLEN)
NAN_BOXED(1054773282,32,FLEN)
NAN_BOXED(1043797535,32,FLEN)
NAN_BOXED(1033841733,32,FLEN)
NAN_BOXED(1054773282,32,FLEN)
NAN_BOXED(1043797535,32,FLEN)
NAN_BOXED(1033841733,32,FLEN)
NAN_BOXED(1054773282,32,FLEN)
NAN_BOXED(1043797535,32,FLEN)
NAN_BOXED(1033841733,32,FLEN)
NAN_BOXED(1054773282,32,FLEN)
NAN_BOXED(1043797535,32,FLEN)
NAN_BOXED(1033841733,32,FLEN)
NAN_BOXED(1060429134,32,FLEN)
NAN_BOXED(1061136939,32,FLEN)
NAN_BOXED(1057450327,32,FLEN)
NAN_BOXED(1060429134,32,FLEN)
NAN_BOXED(1061136939,32,FLEN)
NAN_BOXED(1057450327,32,FLEN)
NAN_BOXED(1060429134,32,FLEN)
NAN_BOXED(1061136939,32,FLEN)
NAN_BOXED(1057450327,32,FLEN)
NAN_BOXED(1060429134,32,FLEN)
NAN_BOXED(1061136939,32,FLEN)
NAN_BOXED(1057450327,32,FLEN)
NAN_BOXED(1060429134,32,FLEN)
NAN_BOXED(1061136939,32,FLEN)
NAN_BOXED(1057450327,32,FLEN)
NAN_BOXED(1049443438,32,FLEN)
NAN_BOXED(1056703230,32,FLEN)
NAN_BOXED(1040910627,32,FLEN)
NAN_BOXED(1049443438,32,FLEN)
NAN_BOXED(1056703230,32,FLEN)
NAN_BOXED(1040910627,32,FLEN)
NAN_BOXED(1049443438,32,FLEN)
NAN_BOXED(1056703230,32,FLEN)
NAN_BOXED(1040910627,32,FLEN)
NAN_BOXED(1049443438,32,FLEN)
NAN_BOXED(1056703230,32,FLEN)
NAN_BOXED(1040910627,32,FLEN)
NAN_BOXED(1049443438,32,FLEN)
NAN_BOXED(1056703230,32,FLEN)
NAN_BOXED(1040910627,32,FLEN)
NAN_BOXED(1062524375,32,FLEN)
NAN_BOXED(1053854806,32,FLEN)
NAN_BOXED(1051550315,32,FLEN)
NAN_BOXED(1062524375,32,FLEN)
NAN_BOXED(1053854806,32,FLEN)
NAN_BOXED(1051550315,32,FLEN)
NAN_BOXED(1062524375,32,FLEN)
NAN_BOXED(1053854806,32,FLEN)
NAN_BOXED(1051550315,32,FLEN)
NAN_BOXED(1062524375,32,FLEN)
NAN_BOXED(1053854806,32,FLEN)
NAN_BOXED(1051550315,32,FLEN)
NAN_BOXED(1062524375,32,FLEN)
NAN_BOXED(1053854806,32,FLEN)
NAN_BOXED(1051550315,32,FLEN)
NAN_BOXED(1063338970,32,FLEN)
NAN_BOXED(1065427905,32,FLEN)
NAN_BOXED(1063470415,32,FLEN)
NAN_BOXED(1063338970,32,FLEN)
NAN_BOXED(1065427905,32,FLEN)
NAN_BOXED(1063470415,32,FLEN)
NAN_BOXED(1063338970,32,FLEN)
NAN_BOXED(1065427905,32,FLEN)
NAN_BOXED(1063470415,32,FLEN)
NAN_BOXED(1063338970,32,FLEN)
NAN_BOXED(1065427905,32,FLEN)
NAN_BOXED(1063470415,32,FLEN)
NAN_BOXED(1063338970,32,FLEN)
NAN_BOXED(1065427905,32,FLEN)
NAN_BOXED(1063470415,32,FLEN)
NAN_BOXED(1015626227,32,FLEN)
NAN_BOXED(1113774192,32,FLEN)
NAN_BOXED(1064514140,32,FLEN)
NAN_BOXED(1015626227,32,FLEN)
NAN_BOXED(1113774192,32,FLEN)
NAN_BOXED(1064514140,32,FLEN)
NAN_BOXED(1015626227,32,FLEN)
NAN_BOXED(1113774192,32,FLEN)
NAN_BOXED(1064514140,32,FLEN)
NAN_BOXED(1015626227,32,FLEN)
NAN_BOXED(1113774192,32,FLEN)
NAN_BOXED(1064514140,32,FLEN)
NAN_BOXED(1015626227,32,FLEN)
NAN_BOXED(1113774192,32,FLEN)
NAN_BOXED(1064514140,32,FLEN)
NAN_BOXED(1034174326,32,FLEN)
NAN_BOXED(1078421941,32,FLEN)
NAN_BOXED(1048568399,32,FLEN)
NAN_BOXED(1034174326,32,FLEN)
NAN_BOXED(1078421941,32,FLEN)
NAN_BOXED(1048568399,32,FLEN)
NAN_BOXED(1034174326,32,FLEN)
NAN_BOXED(1078421941,32,FLEN)
NAN_BOXED(1048568399,32,FLEN)
NAN_BOXED(1034174326,32,FLEN)
NAN_BOXED(1078421941,32,FLEN)
NAN_BOXED(1048568399,32,FLEN)
NAN_BOXED(1034174326,32,FLEN)
NAN_BOXED(1078421941,32,FLEN)
NAN_BOXED(1048568399,32,FLEN)
NAN_BOXED(1051061146,32,FLEN)
NAN_BOXED(1062583277,32,FLEN)
NAN_BOXED(1049265876,32,FLEN)
NAN_BOXED(1051061146,32,FLEN)
NAN_BOXED(1062583277,32,FLEN)
NAN_BOXED(1049265876,32,FLEN)
NAN_BOXED(1051061146,32,FLEN)
NAN_BOXED(1062583277,32,FLEN)
NAN_BOXED(1049265876,32,FLEN)
NAN_BOXED(1051061146,32,FLEN)
NAN_BOXED(1062583277,32,FLEN)
NAN_BOXED(1049265876,32,FLEN)
NAN_BOXED(1051061146,32,FLEN)
NAN_BOXED(1062583277,32,FLEN)
NAN_BOXED(1049265876,32,FLEN)
NAN_BOXED(1051899074,32,FLEN)
NAN_BOXED(1073920909,32,FLEN)
NAN_BOXED(1060537711,32,FLEN)
NAN_BOXED(1051899074,32,FLEN)
NAN_BOXED(1073920909,32,FLEN)
NAN_BOXED(1060537711,32,FLEN)
NAN_BOXED(1051899074,32,FLEN)
NAN_BOXED(1073920909,32,FLEN)
NAN_BOXED(1060537711,32,FLEN)
NAN_BOXED(1051899074,32,FLEN)
NAN_BOXED(1073920909,32,FLEN)
NAN_BOXED(1060537711,32,FLEN)
NAN_BOXED(1051899074,32,FLEN)
NAN_BOXED(1073920909,32,FLEN)
NAN_BOXED(1060537711,32,FLEN)
NAN_BOXED(1057914660,32,FLEN)
NAN_BOXED(1068988663,32,FLEN)
NAN_BOXED(1061961841,32,FLEN)
NAN_BOXED(1057914660,32,FLEN)
NAN_BOXED(1068988663,32,FLEN)
NAN_BOXED(1061961841,32,FLEN)
NAN_BOXED(1057914660,32,FLEN)
NAN_BOXED(1068988663,32,FLEN)
NAN_BOXED(1061961841,32,FLEN)
NAN_BOXED(1057914660,32,FLEN)
NAN_BOXED(1068988663,32,FLEN)
NAN_BOXED(1061961841,32,FLEN)
NAN_BOXED(1057914660,32,FLEN)
NAN_BOXED(1068988663,32,FLEN)
NAN_BOXED(1061961841,32,FLEN)
NAN_BOXED(1041243020,32,FLEN)
NAN_BOXED(1070149194,32,FLEN)
NAN_BOXED(1046642527,32,FLEN)
NAN_BOXED(1041243020,32,FLEN)
NAN_BOXED(1070149194,32,FLEN)
NAN_BOXED(1046642527,32,FLEN)
NAN_BOXED(1041243020,32,FLEN)
NAN_BOXED(1070149194,32,FLEN)
NAN_BOXED(1046642527,32,FLEN)
NAN_BOXED(1041243020,32,FLEN)
NAN_BOXED(1070149194,32,FLEN)
NAN_BOXED(1046642527,32,FLEN)
NAN_BOXED(1041243020,32,FLEN)
NAN_BOXED(1070149194,32,FLEN)
NAN_BOXED(1046642527,32,FLEN)
NAN_BOXED(1046056522,32,FLEN)
NAN_BOXED(1080871179,32,FLEN)
NAN_BOXED(1061763591,32,FLEN)
NAN_BOXED(1046056522,32,FLEN)
NAN_BOXED(1080871179,32,FLEN)
NAN_BOXED(1061763591,32,FLEN)
NAN_BOXED(1046056522,32,FLEN)
NAN_BOXED(1080871179,32,FLEN)
NAN_BOXED(1061763591,32,FLEN)
NAN_BOXED(1046056522,32,FLEN)
NAN_BOXED(1080871179,32,FLEN)
NAN_BOXED(1061763591,32,FLEN)
NAN_BOXED(1046056522,32,FLEN)
NAN_BOXED(1080871179,32,FLEN)
NAN_BOXED(1061763591,32,FLEN)
NAN_BOXED(1053870514,32,FLEN)
NAN_BOXED(1072291141,32,FLEN)
NAN_BOXED(1061075977,32,FLEN)
NAN_BOXED(1053870514,32,FLEN)
NAN_BOXED(1072291141,32,FLEN)
NAN_BOXED(1061075977,32,FLEN)
NAN_BOXED(1053870514,32,FLEN)
NAN_BOXED(1072291141,32,FLEN)
NAN_BOXED(1061075977,32,FLEN)
NAN_BOXED(1053870514,32,FLEN)
NAN_BOXED(1072291141,32,FLEN)
NAN_BOXED(1061075977,32,FLEN)
NAN_BOXED(1053870514,32,FLEN)
NAN_BOXED(1072291141,32,FLEN)
NAN_BOXED(1061075977,32,FLEN)
NAN_BOXED(1045855733,32,FLEN)
NAN_BOXED(1067185814,32,FLEN)
NAN_BOXED(1048751326,32,FLEN)
NAN_BOXED(1045855733,32,FLEN)
NAN_BOXED(1067185814,32,FLEN)
NAN_BOXED(1048751326,32,FLEN)
NAN_BOXED(1045855733,32,FLEN)
NAN_BOXED(1067185814,32,FLEN)
NAN_BOXED(1048751326,32,FLEN)
NAN_BOXED(1045855733,32,FLEN)
NAN_BOXED(1067185814,32,FLEN)
NAN_BOXED(1048751326,32,FLEN)
NAN_BOXED(1045855733,32,FLEN)
NAN_BOXED(1067185814,32,FLEN)
NAN_BOXED(1048751326,32,FLEN)
NAN_BOXED(1000350128,32,FLEN)
NAN_BOXED(1114560965,32,FLEN)
NAN_BOXED(1049978762,32,FLEN)
NAN_BOXED(1000350128,32,FLEN)
NAN_BOXED(1114560965,32,FLEN)
NAN_BOXED(1049978762,32,FLEN)
NAN_BOXED(1000350128,32,FLEN)
NAN_BOXED(1114560965,32,FLEN)
NAN_BOXED(1049978762,32,FLEN)
NAN_BOXED(1000350128,32,FLEN)
NAN_BOXED(1114560965,32,FLEN)
NAN_BOXED(1049978762,32,FLEN)
NAN_BOXED(1000350128,32,FLEN)
NAN_BOXED(1114560965,32,FLEN)
NAN_BOXED(1049978762,32,FLEN)
NAN_BOXED(1050794333,32,FLEN)
NAN_BOXED(1060410590,32,FLEN)
NAN_BOXED(1046762984,32,FLEN)
NAN_BOXED(1050794333,32,FLEN)
NAN_BOXED(1060410590,32,FLEN)
NAN_BOXED(1046762984,32,FLEN)
NAN_BOXED(1050794333,32,FLEN)
NAN_BOXED(1060410590,32,FLEN)
NAN_BOXED(1046762984,32,FLEN)
NAN_BOXED(1050794333,32,FLEN)
NAN_BOXED(1060410590,32,FLEN)
NAN_BOXED(1046762984,32,FLEN)
NAN_BOXED(1050794333,32,FLEN)
NAN_BOXED(1060410590,32,FLEN)
NAN_BOXED(1046762984,32,FLEN)
NAN_BOXED(1063781545,32,FLEN)
NAN_BOXED(1055168081,32,FLEN)
NAN_BOXED(1053764707,32,FLEN)
NAN_BOXED(1063781545,32,FLEN)
NAN_BOXED(1055168081,32,FLEN)
NAN_BOXED(1053764707,32,FLEN)
NAN_BOXED(1063781545,32,FLEN)
NAN_BOXED(1055168081,32,FLEN)
NAN_BOXED(1053764707,32,FLEN)
NAN_BOXED(1063781545,32,FLEN)
NAN_BOXED(1055168081,32,FLEN)
NAN_BOXED(1053764707,32,FLEN)
NAN_BOXED(1063781545,32,FLEN)
NAN_BOXED(1055168081,32,FLEN)
NAN_BOXED(1053764707,32,FLEN)
NAN_BOXED(1064803910,32,FLEN)
NAN_BOXED(1059553021,32,FLEN)
NAN_BOXED(1059193621,32,FLEN)
NAN_BOXED(1064803910,32,FLEN)
NAN_BOXED(1059553021,32,FLEN)
NAN_BOXED(1059193621,32,FLEN)
NAN_BOXED(1064803910,32,FLEN)
NAN_BOXED(1059553021,32,FLEN)
NAN_BOXED(1059193621,32,FLEN)
NAN_BOXED(1064803910,32,FLEN)
NAN_BOXED(1059553021,32,FLEN)
NAN_BOXED(1059193621,32,FLEN)
NAN_BOXED(1064803910,32,FLEN)
NAN_BOXED(1059553021,32,FLEN)
NAN_BOXED(1059193621,32,FLEN)
NAN_BOXED(1063388279,32,FLEN)
NAN_BOXED(1030688399,32,FLEN)
NAN_BOXED(1028853510,32,FLEN)
NAN_BOXED(1063388279,32,FLEN)
NAN_BOXED(1030688399,32,FLEN)
NAN_BOXED(1028853510,32,FLEN)
NAN_BOXED(1063388279,32,FLEN)
NAN_BOXED(1030688399,32,FLEN)
NAN_BOXED(1028853510,32,FLEN)
NAN_BOXED(1063388279,32,FLEN)
NAN_BOXED(1030688399,32,FLEN)
NAN_BOXED(1028853510,32,FLEN)
NAN_BOXED(1063388279,32,FLEN)
NAN_BOXED(1030688399,32,FLEN)
NAN_BOXED(1028853510,32,FLEN)
NAN_BOXED(1064883229,32,FLEN)
NAN_BOXED(1034275233,32,FLEN)
NAN_BOXED(1033970866,32,FLEN)
NAN_BOXED(1064883229,32,FLEN)
NAN_BOXED(1034275233,32,FLEN)
NAN_BOXED(1033970866,32,FLEN)
NAN_BOXED(1064883229,32,FLEN)
NAN_BOXED(1034275233,32,FLEN)
NAN_BOXED(1033970866,32,FLEN)
NAN_BOXED(1064883229,32,FLEN)
NAN_BOXED(1034275233,32,FLEN)
NAN_BOXED(1033970866,32,FLEN)
NAN_BOXED(1064883229,32,FLEN)
NAN_BOXED(1034275233,32,FLEN)
NAN_BOXED(1033970866,32,FLEN)
NAN_BOXED(1029011549,32,FLEN)
NAN_BOXED(1093485460,32,FLEN)
NAN_BOXED(1058044593,32,FLEN)
NAN_BOXED(1029011549,32,FLEN)
NAN_BOXED(1093485460,32,FLEN)
NAN_BOXED(1058044593,32,FLEN)
NAN_BOXED(1029011549,32,FLEN)
NAN_BOXED(1093485460,32,FLEN)
NAN_BOXED(1058044593,32,FLEN)
NAN_BOXED(1029011549,32,FLEN)
NAN_BOXED(1093485460,32,FLEN)
NAN_BOXED(1058044593,32,FLEN)
NAN_BOXED(1029011549,32,FLEN)
NAN_BOXED(1093485460,32,FLEN)
NAN_BOXED(1058044593,32,FLEN)
NAN_BOXED(1043041886,32,FLEN)
NAN_BOXED(1085611704,32,FLEN)
NAN_BOXED(1064484989,32,FLEN)
NAN_BOXED(1043041886,32,FLEN)
NAN_BOXED(1085611704,32,FLEN)
NAN_BOXED(1064484989,32,FLEN)
NAN_BOXED(1043041886,32,FLEN)
NAN_BOXED(1085611704,32,FLEN)
NAN_BOXED(1064484989,32,FLEN)
NAN_BOXED(1043041886,32,FLEN)
NAN_BOXED(1085611704,32,FLEN)
NAN_BOXED(1064484989,32,FLEN)
NAN_BOXED(1043041886,32,FLEN)
NAN_BOXED(1085611704,32,FLEN)
NAN_BOXED(1064484989,32,FLEN)
NAN_BOXED(1063014483,32,FLEN)
NAN_BOXED(1066616195,32,FLEN)
NAN_BOXED(1065188325,32,FLEN)
NAN_BOXED(1063014483,32,FLEN)
NAN_BOXED(1066616195,32,FLEN)
NAN_BOXED(1065188325,32,FLEN)
NAN_BOXED(1063014483,32,FLEN)
NAN_BOXED(1066616195,32,FLEN)
NAN_BOXED(1065188325,32,FLEN)
NAN_BOXED(1063014483,32,FLEN)
NAN_BOXED(1066616195,32,FLEN)
NAN_BOXED(1065188325,32,FLEN)
NAN_BOXED(1063014483,32,FLEN)
NAN_BOXED(1066616195,32,FLEN)
NAN_BOXED(1065188325,32,FLEN)
NAN_BOXED(1064210893,32,FLEN)
NAN_BOXED(1065942880,32,FLEN)
NAN_BOXED(1065309925,32,FLEN)
NAN_BOXED(1064210893,32,FLEN)
NAN_BOXED(1065942880,32,FLEN)
NAN_BOXED(1065309925,32,FLEN)
NAN_BOXED(1064210893,32,FLEN)
NAN_BOXED(1065942880,32,FLEN)
NAN_BOXED(1065309925,32,FLEN)
NAN_BOXED(1064210893,32,FLEN)
NAN_BOXED(1065942880,32,FLEN)
NAN_BOXED(1065309925,32,FLEN)
NAN_BOXED(1064210893,32,FLEN)
NAN_BOXED(1065942880,32,FLEN)
NAN_BOXED(1065309925,32,FLEN)
NAN_BOXED(1043319277,32,FLEN)
NAN_BOXED(1084888914,32,FLEN)
NAN_BOXED(1063884854,32,FLEN)
NAN_BOXED(1043319277,32,FLEN)
NAN_BOXED(1084888914,32,FLEN)
NAN_BOXED(1063884854,32,FLEN)
NAN_BOXED(1043319277,32,FLEN)
NAN_BOXED(1084888914,32,FLEN)
NAN_BOXED(1063884854,32,FLEN)
NAN_BOXED(1043319277,32,FLEN)
NAN_BOXED(1084888914,32,FLEN)
NAN_BOXED(1063884854,32,FLEN)
NAN_BOXED(1043319277,32,FLEN)
NAN_BOXED(1084888914,32,FLEN)
NAN_BOXED(1063884854,32,FLEN)
NAN_BOXED(1053920053,32,FLEN)
NAN_BOXED(1071861048,32,FLEN)
NAN_BOXED(1060769190,32,FLEN)
NAN_BOXED(1053920053,32,FLEN)
NAN_BOXED(1071861048,32,FLEN)
NAN_BOXED(1060769190,32,FLEN)
NAN_BOXED(1053920053,32,FLEN)
NAN_BOXED(1071861048,32,FLEN)
NAN_BOXED(1060769190,32,FLEN)
NAN_BOXED(1053920053,32,FLEN)
NAN_BOXED(1071861048,32,FLEN)
NAN_BOXED(1060769190,32,FLEN)
NAN_BOXED(1053920053,32,FLEN)
NAN_BOXED(1071861048,32,FLEN)
NAN_BOXED(1060769190,32,FLEN)
NAN_BOXED(1063132249,32,FLEN)
NAN_BOXED(1059806640,32,FLEN)
NAN_BOXED(1058319929,32,FLEN)
NAN_BOXED(1063132249,32,FLEN)
NAN_BOXED(1059806640,32,FLEN)
NAN_BOXED(1058319929,32,FLEN)
NAN_BOXED(1063132249,32,FLEN)
NAN_BOXED(1059806640,32,FLEN)
NAN_BOXED(1058319929,32,FLEN)
NAN_BOXED(1063132249,32,FLEN)
NAN_BOXED(1059806640,32,FLEN)
NAN_BOXED(1058319929,32,FLEN)
NAN_BOXED(1063132249,32,FLEN)
NAN_BOXED(1059806640,32,FLEN)
NAN_BOXED(1058319929,32,FLEN)
NAN_BOXED(1062302399,32,FLEN)
NAN_BOXED(1021605288,32,FLEN)
NAN_BOXED(1018882677,32,FLEN)
NAN_BOXED(1062302399,32,FLEN)
NAN_BOXED(1021605288,32,FLEN)
NAN_BOXED(1018882677,32,FLEN)
NAN_BOXED(1062302399,32,FLEN)
NAN_BOXED(1021605288,32,FLEN)
NAN_BOXED(1018882677,32,FLEN)
NAN_BOXED(1062302399,32,FLEN)
NAN_BOXED(1021605288,32,FLEN)
NAN_BOXED(1018882677,32,FLEN)
NAN_BOXED(1062302399,32,FLEN)
NAN_BOXED(1021605288,32,FLEN)
NAN_BOXED(1018882677,32,FLEN)
NAN_BOXED(1058912372,32,FLEN)
NAN_BOXED(1059636914,32,FLEN)
NAN_BOXED(1053816558,32,FLEN)
NAN_BOXED(1058912372,32,FLEN)
NAN_BOXED(1059636914,32,FLEN)
NAN_BOXED(1053816558,32,FLEN)
NAN_BOXED(1058912372,32,FLEN)
NAN_BOXED(1059636914,32,FLEN)
NAN_BOXED(1053816558,32,FLEN)
NAN_BOXED(1058912372,32,FLEN)
NAN_BOXED(1059636914,32,FLEN)
NAN_BOXED(1053816558,32,FLEN)
NAN_BOXED(1058912372,32,FLEN)
NAN_BOXED(1059636914,32,FLEN)
NAN_BOXED(1053816558,32,FLEN)
NAN_BOXED(1054832428,32,FLEN)
NAN_BOXED(1062919000,32,FLEN)
NAN_BOXED(1052707571,32,FLEN)
NAN_BOXED(1054832428,32,FLEN)
NAN_BOXED(1062919000,32,FLEN)
NAN_BOXED(1052707571,32,FLEN)
NAN_BOXED(1054832428,32,FLEN)
NAN_BOXED(1062919000,32,FLEN)
NAN_BOXED(1052707571,32,FLEN)
NAN_BOXED(1054832428,32,FLEN)
NAN_BOXED(1062919000,32,FLEN)
NAN_BOXED(1052707571,32,FLEN)
NAN_BOXED(1054832428,32,FLEN)
NAN_BOXED(1062919000,32,FLEN)
NAN_BOXED(1052707571,32,FLEN)
NAN_BOXED(1057292847,32,FLEN)
NAN_BOXED(1068748332,32,FLEN)
NAN_BOXED(1060820812,32,FLEN)
NAN_BOXED(1057292847,32,FLEN)
NAN_BOXED(1068748332,32,FLEN)
NAN_BOXED(1060820812,32,FLEN)
NAN_BOXED(1057292847,32,FLEN)
NAN_BOXED(1068748332,32,FLEN)
NAN_BOXED(1060820812,32,FLEN)
NAN_BOXED(1057292847,32,FLEN)
NAN_BOXED(1068748332,32,FLEN)
NAN_BOXED(1060820812,32,FLEN)
NAN_BOXED(1057292847,32,FLEN)
NAN_BOXED(1068748332,32,FLEN)
NAN_BOXED(1060820812,32,FLEN)
NAN_BOXED(1063058542,32,FLEN)
NAN_BOXED(1040502118,32,FLEN)
NAN_BOXED(1038436079,32,FLEN)
NAN_BOXED(1063058542,32,FLEN)
NAN_BOXED(1040502118,32,FLEN)
NAN_BOXED(1038436079,32,FLEN)
NAN_BOXED(1063058542,32,FLEN)
NAN_BOXED(1040502118,32,FLEN)
NAN_BOXED(1038436079,32,FLEN)
NAN_BOXED(1063058542,32,FLEN)
NAN_BOXED(1040502118,32,FLEN)
NAN_BOXED(1038436079,32,FLEN)
NAN_BOXED(1063058542,32,FLEN)
NAN_BOXED(1040502118,32,FLEN)
NAN_BOXED(1038436079,32,FLEN)
NAN_BOXED(1062123074,32,FLEN)
NAN_BOXED(1060036482,32,FLEN)
NAN_BOXED(1057829979,32,FLEN)
NAN_BOXED(1062123074,32,FLEN)
NAN_BOXED(1060036482,32,FLEN)
NAN_BOXED(1057829979,32,FLEN)
NAN_BOXED(1062123074,32,FLEN)
NAN_BOXED(1060036482,32,FLEN)
NAN_BOXED(1057829979,32,FLEN)
NAN_BOXED(1062123074,32,FLEN)
NAN_BOXED(1060036482,32,FLEN)
NAN_BOXED(1057829979,32,FLEN)
NAN_BOXED(1062123074,32,FLEN)
NAN_BOXED(1060036482,32,FLEN)
NAN_BOXED(1057829979,32,FLEN)
NAN_BOXED(1044658820,32,FLEN)
NAN_BOXED(1074632262,32,FLEN)
NAN_BOXED(1054412502,32,FLEN)
NAN_BOXED(1044658820,32,FLEN)
NAN_BOXED(1074632262,32,FLEN)
NAN_BOXED(1054412502,32,FLEN)
NAN_BOXED(1044658820,32,FLEN)
NAN_BOXED(1074632262,32,FLEN)
NAN_BOXED(1054412502,32,FLEN)
NAN_BOXED(1044658820,32,FLEN)
NAN_BOXED(1074632262,32,FLEN)
NAN_BOXED(1054412502,32,FLEN)
NAN_BOXED(1044658820,32,FLEN)
NAN_BOXED(1074632262,32,FLEN)
NAN_BOXED(1054412502,32,FLEN)
NAN_BOXED(1028959860,32,FLEN)
NAN_BOXED(1080738714,32,FLEN)
NAN_BOXED(1044580855,32,FLEN)
NAN_BOXED(1028959860,32,FLEN)
NAN_BOXED(1080738714,32,FLEN)
NAN_BOXED(1044580855,32,FLEN)
NAN_BOXED(1028959860,32,FLEN)
NAN_BOXED(1080738714,32,FLEN)
NAN_BOXED(1044580855,32,FLEN)
NAN_BOXED(1028959860,32,FLEN)
NAN_BOXED(1080738714,32,FLEN)
NAN_BOXED(1044580855,32,FLEN)
NAN_BOXED(1028959860,32,FLEN)
NAN_BOXED(1080738714,32,FLEN)
NAN_BOXED(1044580855,32,FLEN)
NAN_BOXED(1056509333,32,FLEN)
NAN_BOXED(1072141895,32,FLEN)
NAN_BOXED(1063341429,32,FLEN)
NAN_BOXED(1056509333,32,FLEN)
NAN_BOXED(1072141895,32,FLEN)
NAN_BOXED(1063341429,32,FLEN)
NAN_BOXED(1056509333,32,FLEN)
NAN_BOXED(1072141895,32,FLEN)
NAN_BOXED(1063341429,32,FLEN)
NAN_BOXED(1056509333,32,FLEN)
NAN_BOXED(1072141895,32,FLEN)
NAN_BOXED(1063341429,32,FLEN)
NAN_BOXED(1056509333,32,FLEN)
NAN_BOXED(1072141895,32,FLEN)
NAN_BOXED(1063341429,32,FLEN)
NAN_BOXED(1053854228,32,FLEN)
NAN_BOXED(1067804099,32,FLEN)
NAN_BOXED(1057405925,32,FLEN)
NAN_BOXED(1053854228,32,FLEN)
NAN_BOXED(1067804099,32,FLEN)
NAN_BOXED(1057405925,32,FLEN)
NAN_BOXED(1053854228,32,FLEN)
NAN_BOXED(1067804099,32,FLEN)
NAN_BOXED(1057405925,32,FLEN)
NAN_BOXED(1053854228,32,FLEN)
NAN_BOXED(1067804099,32,FLEN)
NAN_BOXED(1057405925,32,FLEN)
NAN_BOXED(1053854228,32,FLEN)
NAN_BOXED(1067804099,32,FLEN)
NAN_BOXED(1057405925,32,FLEN)
NAN_BOXED(1041076133,32,FLEN)
NAN_BOXED(1079588874,32,FLEN)
NAN_BOXED(1055931264,32,FLEN)
NAN_BOXED(1041076133,32,FLEN)
NAN_BOXED(1079588874,32,FLEN)
NAN_BOXED(1055931264,32,FLEN)
NAN_BOXED(1041076133,32,FLEN)
NAN_BOXED(1079588874,32,FLEN)
NAN_BOXED(1055931264,32,FLEN)
NAN_BOXED(1041076133,32,FLEN)
NAN_BOXED(1079588874,32,FLEN)
NAN_BOXED(1055931264,32,FLEN)
NAN_BOXED(1041076133,32,FLEN)
NAN_BOXED(1079588874,32,FLEN)
NAN_BOXED(1055931264,32,FLEN)
NAN_BOXED(1050446317,32,FLEN)
NAN_BOXED(1058913400,32,FLEN)
NAN_BOXED(1044441003,32,FLEN)
NAN_BOXED(1050446317,32,FLEN)
NAN_BOXED(1058913400,32,FLEN)
NAN_BOXED(1044441003,32,FLEN)
NAN_BOXED(1050446317,32,FLEN)
NAN_BOXED(1058913400,32,FLEN)
NAN_BOXED(1044441003,32,FLEN)
NAN_BOXED(1050446317,32,FLEN)
NAN_BOXED(1058913400,32,FLEN)
NAN_BOXED(1044441003,32,FLEN)
NAN_BOXED(1050446317,32,FLEN)
NAN_BOXED(1058913400,32,FLEN)
NAN_BOXED(1044441003,32,FLEN)
NAN_BOXED(1057460448,32,FLEN)
NAN_BOXED(1050205471,32,FLEN)
NAN_BOXED(1042409020,32,FLEN)
NAN_BOXED(1057460448,32,FLEN)
NAN_BOXED(1050205471,32,FLEN)
NAN_BOXED(1042409020,32,FLEN)
NAN_BOXED(1057460448,32,FLEN)
NAN_BOXED(1050205471,32,FLEN)
NAN_BOXED(1042409020,32,FLEN)
NAN_BOXED(1057460448,32,FLEN)
NAN_BOXED(1050205471,32,FLEN)
NAN_BOXED(1042409020,32,FLEN)
NAN_BOXED(1057460448,32,FLEN)
NAN_BOXED(1050205471,32,FLEN)
NAN_BOXED(1042409020,32,FLEN)
NAN_BOXED(1036919276,32,FLEN)
NAN_BOXED(1090940392,32,FLEN)
NAN_BOXED(1062763650,32,FLEN)
NAN_BOXED(1036919276,32,FLEN)
NAN_BOXED(1090940392,32,FLEN)
NAN_BOXED(1062763650,32,FLEN)
NAN_BOXED(1036919276,32,FLEN)
NAN_BOXED(1090940392,32,FLEN)
NAN_BOXED(1062763650,32,FLEN)
NAN_BOXED(1036919276,32,FLEN)
NAN_BOXED(1090940392,32,FLEN)
NAN_BOXED(1062763650,32,FLEN)
NAN_BOXED(1036919276,32,FLEN)
NAN_BOXED(1090940392,32,FLEN)
NAN_BOXED(1062763650,32,FLEN)
NAN_BOXED(1034261733,32,FLEN)
NAN_BOXED(1070479281,32,FLEN)
NAN_BOXED(1040540118,32,FLEN)
NAN_BOXED(1034261733,32,FLEN)
NAN_BOXED(1070479281,32,FLEN)
NAN_BOXED(1040540118,32,FLEN)
NAN_BOXED(1034261733,32,FLEN)
NAN_BOXED(1070479281,32,FLEN)
NAN_BOXED(1040540118,32,FLEN)
NAN_BOXED(1034261733,32,FLEN)
NAN_BOXED(1070479281,32,FLEN)
NAN_BOXED(1040540118,32,FLEN)
NAN_BOXED(1034261733,32,FLEN)
NAN_BOXED(1070479281,32,FLEN)
NAN_BOXED(1040540118,32,FLEN)
NAN_BOXED(1041529798,32,FLEN)
NAN_BOXED(1083319598,32,FLEN)
NAN_BOXED(1059686480,32,FLEN)
NAN_BOXED(1041529798,32,FLEN)
NAN_BOXED(1083319598,32,FLEN)
NAN_BOXED(1059686480,32,FLEN)
NAN_BOXED(1041529798,32,FLEN)
NAN_BOXED(1083319598,32,FLEN)
NAN_BOXED(1059686480,32,FLEN)
NAN_BOXED(1041529798,32,FLEN)
NAN_BOXED(1083319598,32,FLEN)
NAN_BOXED(1059686480,32,FLEN)
NAN_BOXED(1041529798,32,FLEN)
NAN_BOXED(1083319598,32,FLEN)
NAN_BOXED(1059686480,32,FLEN)
NAN_BOXED(1061128333,32,FLEN)
NAN_BOXED(1066687359,32,FLEN)
NAN_BOXED(1063124685,32,FLEN)
NAN_BOXED(1061128333,32,FLEN)
NAN_BOXED(1066687359,32,FLEN)
NAN_BOXED(1063124685,32,FLEN)
NAN_BOXED(1061128333,32,FLEN)
NAN_BOXED(1066687359,32,FLEN)
NAN_BOXED(1063124685,32,FLEN)
NAN_BOXED(1061128333,32,FLEN)
NAN_BOXED(1066687359,32,FLEN)
NAN_BOXED(1063124685,32,FLEN)
NAN_BOXED(1061128333,32,FLEN)
NAN_BOXED(1066687359,32,FLEN)
NAN_BOXED(1063124685,32,FLEN)
NAN_BOXED(1059129070,32,FLEN)
NAN_BOXED(1047265676,32,FLEN)
NAN_BOXED(1041527645,32,FLEN)
NAN_BOXED(1059129070,32,FLEN)
NAN_BOXED(1047265676,32,FLEN)
NAN_BOXED(1041527645,32,FLEN)
NAN_BOXED(1059129070,32,FLEN)
NAN_BOXED(1047265676,32,FLEN)
NAN_BOXED(1041527645,32,FLEN)
NAN_BOXED(1059129070,32,FLEN)
NAN_BOXED(1047265676,32,FLEN)
NAN_BOXED(1041527645,32,FLEN)
NAN_BOXED(1059129070,32,FLEN)
NAN_BOXED(1047265676,32,FLEN)
NAN_BOXED(1041527645,32,FLEN)
NAN_BOXED(1059265034,32,FLEN)
NAN_BOXED(1070060616,32,FLEN)
NAN_BOXED(1065263355,32,FLEN)
NAN_BOXED(1059265034,32,FLEN)
NAN_BOXED(1070060616,32,FLEN)
NAN_BOXED(1065263355,32,FLEN)
NAN_BOXED(1059265034,32,FLEN)
NAN_BOXED(1070060616,32,FLEN)
NAN_BOXED(1065263355,32,FLEN)
NAN_BOXED(1059265034,32,FLEN)
NAN_BOXED(1070060616,32,FLEN)
NAN_BOXED(1065263355,32,FLEN)
NAN_BOXED(1059265034,32,FLEN)
NAN_BOXED(1070060616,32,FLEN)
NAN_BOXED(1065263355,32,FLEN)
NAN_BOXED(1060237450,32,FLEN)
NAN_BOXED(1068037189,32,FLEN)
NAN_BOXED(1063968584,32,FLEN)
NAN_BOXED(1060237450,32,FLEN)
NAN_BOXED(1068037189,32,FLEN)
NAN_BOXED(1063968584,32,FLEN)
NAN_BOXED(1060237450,32,FLEN)
NAN_BOXED(1068037189,32,FLEN)
NAN_BOXED(1063968584,32,FLEN)
NAN_BOXED(1060237450,32,FLEN)
NAN_BOXED(1068037189,32,FLEN)
NAN_BOXED(1063968584,32,FLEN)
NAN_BOXED(1060237450,32,FLEN)
NAN_BOXED(1068037189,32,FLEN)
NAN_BOXED(1063968584,32,FLEN)
NAN_BOXED(1052854140,32,FLEN)
NAN_BOXED(1058876309,32,FLEN)
NAN_BOXED(1047352190,32,FLEN)
NAN_BOXED(1052854140,32,FLEN)
NAN_BOXED(1058876309,32,FLEN)
NAN_BOXED(1047352190,32,FLEN)
NAN_BOXED(1052854140,32,FLEN)
NAN_BOXED(1058876309,32,FLEN)
NAN_BOXED(1047352190,32,FLEN)
NAN_BOXED(1052854140,32,FLEN)
NAN_BOXED(1058876309,32,FLEN)
NAN_BOXED(1047352190,32,FLEN)
NAN_BOXED(1052854140,32,FLEN)
NAN_BOXED(1058876309,32,FLEN)
NAN_BOXED(1047352190,32,FLEN)
NAN_BOXED(1033258730,32,FLEN)
NAN_BOXED(1095145649,32,FLEN)
NAN_BOXED(1063856374,32,FLEN)
NAN_BOXED(1033258730,32,FLEN)
NAN_BOXED(1095145649,32,FLEN)
NAN_BOXED(1063856374,32,FLEN)
NAN_BOXED(1033258730,32,FLEN)
NAN_BOXED(1095145649,32,FLEN)
NAN_BOXED(1063856374,32,FLEN)
NAN_BOXED(1033258730,32,FLEN)
NAN_BOXED(1095145649,32,FLEN)
NAN_BOXED(1063856374,32,FLEN)
NAN_BOXED(1033258730,32,FLEN)
NAN_BOXED(1095145649,32,FLEN)
NAN_BOXED(1063856374,32,FLEN)
NAN_BOXED(1058971115,32,FLEN)
NAN_BOXED(1068799420,32,FLEN)
NAN_BOXED(1063241632,32,FLEN)
NAN_BOXED(1058971115,32,FLEN)
NAN_BOXED(1068799420,32,FLEN)
NAN_BOXED(1063241632,32,FLEN)
NAN_BOXED(1058971115,32,FLEN)
NAN_BOXED(1068799420,32,FLEN)
NAN_BOXED(1063241632,32,FLEN)
NAN_BOXED(1058971115,32,FLEN)
NAN_BOXED(1068799420,32,FLEN)
NAN_BOXED(1063241632,32,FLEN)
NAN_BOXED(1058971115,32,FLEN)
NAN_BOXED(1068799420,32,FLEN)
NAN_BOXED(1063241632,32,FLEN)
NAN_BOXED(1035433825,32,FLEN)
NAN_BOXED(1072231315,32,FLEN)
NAN_BOXED(1042739903,32,FLEN)
NAN_BOXED(1035433825,32,FLEN)
NAN_BOXED(1072231315,32,FLEN)
NAN_BOXED(1042739903,32,FLEN)
NAN_BOXED(1035433825,32,FLEN)
NAN_BOXED(1072231315,32,FLEN)
NAN_BOXED(1042739903,32,FLEN)
NAN_BOXED(1035433825,32,FLEN)
NAN_BOXED(1072231315,32,FLEN)
NAN_BOXED(1042739903,32,FLEN)
NAN_BOXED(1035433825,32,FLEN)
NAN_BOXED(1072231315,32,FLEN)
NAN_BOXED(1042739903,32,FLEN)
NAN_BOXED(1056300061,32,FLEN)
NAN_BOXED(1036255900,32,FLEN)
NAN_BOXED(1027358471,32,FLEN)
NAN_BOXED(1056300061,32,FLEN)
NAN_BOXED(1036255900,32,FLEN)
NAN_BOXED(1027358471,32,FLEN)
NAN_BOXED(1056300061,32,FLEN)
NAN_BOXED(1036255900,32,FLEN)
NAN_BOXED(1027358471,32,FLEN)
NAN_BOXED(1056300061,32,FLEN)
NAN_BOXED(1036255900,32,FLEN)
NAN_BOXED(1027358471,32,FLEN)
NAN_BOXED(1056300061,32,FLEN)
NAN_BOXED(1036255900,32,FLEN)
NAN_BOXED(1027358471,32,FLEN)
NAN_BOXED(1056284158,32,FLEN)
NAN_BOXED(1055825679,32,FLEN)
NAN_BOXED(1046802814,32,FLEN)
NAN_BOXED(1056284158,32,FLEN)
NAN_BOXED(1055825679,32,FLEN)
NAN_BOXED(1046802814,32,FLEN)
NAN_BOXED(1056284158,32,FLEN)
NAN_BOXED(1055825679,32,FLEN)
NAN_BOXED(1046802814,32,FLEN)
NAN_BOXED(1056284158,32,FLEN)
NAN_BOXED(1055825679,32,FLEN)
NAN_BOXED(1046802814,32,FLEN)
NAN_BOXED(1056284158,32,FLEN)
NAN_BOXED(1055825679,32,FLEN)
NAN_BOXED(1046802814,32,FLEN)
NAN_BOXED(1057165008,32,FLEN)
NAN_BOXED(1067381658,32,FLEN)
NAN_BOXED(1059241909,32,FLEN)
NAN_BOXED(1057165008,32,FLEN)
NAN_BOXED(1067381658,32,FLEN)
NAN_BOXED(1059241909,32,FLEN)
NAN_BOXED(1057165008,32,FLEN)
NAN_BOXED(1067381658,32,FLEN)
NAN_BOXED(1059241909,32,FLEN)
NAN_BOXED(1057165008,32,FLEN)
NAN_BOXED(1067381658,32,FLEN)
NAN_BOXED(1059241909,32,FLEN)
NAN_BOXED(1057165008,32,FLEN)
NAN_BOXED(1067381658,32,FLEN)
NAN_BOXED(1059241909,32,FLEN)
NAN_BOXED(1001854298,32,FLEN)
NAN_BOXED(1105373147,32,FLEN)
NAN_BOXED(1042421990,32,FLEN)
NAN_BOXED(1001854298,32,FLEN)
NAN_BOXED(1105373147,32,FLEN)
NAN_BOXED(1042421990,32,FLEN)
NAN_BOXED(1001854298,32,FLEN)
NAN_BOXED(1105373147,32,FLEN)
NAN_BOXED(1042421990,32,FLEN)
NAN_BOXED(1001854298,32,FLEN)
NAN_BOXED(1105373147,32,FLEN)
NAN_BOXED(1042421990,32,FLEN)
NAN_BOXED(1001854298,32,FLEN)
NAN_BOXED(1105373147,32,FLEN)
NAN_BOXED(1042421990,32,FLEN)
NAN_BOXED(1053888281,32,FLEN)
NAN_BOXED(1051098351,32,FLEN)
NAN_BOXED(1040709073,32,FLEN)
NAN_BOXED(1053888281,32,FLEN)
NAN_BOXED(1051098351,32,FLEN)
NAN_BOXED(1040709073,32,FLEN)
NAN_BOXED(1053888281,32,FLEN)
NAN_BOXED(1051098351,32,FLEN)
NAN_BOXED(1040709073,32,FLEN)
NAN_BOXED(1053888281,32,FLEN)
NAN_BOXED(1051098351,32,FLEN)
NAN_BOXED(1040709073,32,FLEN)
NAN_BOXED(1053888281,32,FLEN)
NAN_BOXED(1051098351,32,FLEN)
NAN_BOXED(1040709073,32,FLEN)
NAN_BOXED(1051950142,32,FLEN)
NAN_BOXED(1058254096,32,FLEN)
NAN_BOXED(1045369692,32,FLEN)
NAN_BOXED(1051950142,32,FLEN)
NAN_BOXED(1058254096,32,FLEN)
NAN_BOXED(1045369692,32,FLEN)
NAN_BOXED(1051950142,32,FLEN)
NAN_BOXED(1058254096,32,FLEN)
NAN_BOXED(1045369692,32,FLEN)
NAN_BOXED(1051950142,32,FLEN)
NAN_BOXED(1058254096,32,FLEN)
NAN_BOXED(1045369692,32,FLEN)
NAN_BOXED(1051950142,32,FLEN)
NAN_BOXED(1058254096,32,FLEN)
NAN_BOXED(1045369692,32,FLEN)
NAN_BOXED(1064233784,32,FLEN)
NAN_BOXED(1064188744,32,FLEN)
NAN_BOXED(1063147010,32,FLEN)
NAN_BOXED(1064233784,32,FLEN)
NAN_BOXED(1064188744,32,FLEN)
NAN_BOXED(1063147010,32,FLEN)
NAN_BOXED(1064233784,32,FLEN)
NAN_BOXED(1064188744,32,FLEN)
NAN_BOXED(1063147010,32,FLEN)
NAN_BOXED(1064233784,32,FLEN)
NAN_BOXED(1064188744,32,FLEN)
NAN_BOXED(1063147010,32,FLEN)
NAN_BOXED(1064233784,32,FLEN)
NAN_BOXED(1064188744,32,FLEN)
NAN_BOXED(1063147010,32,FLEN)
NAN_BOXED(1063517645,32,FLEN)
NAN_BOXED(1055140700,32,FLEN)
NAN_BOXED(1053504681,32,FLEN)
NAN_BOXED(1063517645,32,FLEN)
NAN_BOXED(1055140700,32,FLEN)
NAN_BOXED(1053504681,32,FLEN)
NAN_BOXED(1063517645,32,FLEN)
NAN_BOXED(1055140700,32,FLEN)
NAN_BOXED(1053504681,32,FLEN)
NAN_BOXED(1063517645,32,FLEN)
NAN_BOXED(1055140700,32,FLEN)
NAN_BOXED(1053504681,32,FLEN)
NAN_BOXED(1063517645,32,FLEN)
NAN_BOXED(1055140700,32,FLEN)
NAN_BOXED(1053504681,32,FLEN)
NAN_BOXED(1049594106,32,FLEN)
NAN_BOXED(1077993806,32,FLEN)
NAN_BOXED(1062750750,32,FLEN)
NAN_BOXED(1049594106,32,FLEN)
NAN_BOXED(1077993806,32,FLEN)
NAN_BOXED(1062750750,32,FLEN)
NAN_BOXED(1049594106,32,FLEN)
NAN_BOXED(1077993806,32,FLEN)
NAN_BOXED(1062750750,32,FLEN)
NAN_BOXED(1049594106,32,FLEN)
NAN_BOXED(1077993806,32,FLEN)
NAN_BOXED(1062750750,32,FLEN)
NAN_BOXED(1049594106,32,FLEN)
NAN_BOXED(1077993806,32,FLEN)
NAN_BOXED(1062750750,32,FLEN)
NAN_BOXED(1056792231,32,FLEN)
NAN_BOXED(1071990376,32,FLEN)
NAN_BOXED(1063447386,32,FLEN)
NAN_BOXED(1056792231,32,FLEN)
NAN_BOXED(1071990376,32,FLEN)
NAN_BOXED(1063447386,32,FLEN)
NAN_BOXED(1056792231,32,FLEN)
NAN_BOXED(1071990376,32,FLEN)
NAN_BOXED(1063447386,32,FLEN)
NAN_BOXED(1056792231,32,FLEN)
NAN_BOXED(1071990376,32,FLEN)
NAN_BOXED(1063447386,32,FLEN)
NAN_BOXED(1056792231,32,FLEN)
NAN_BOXED(1071990376,32,FLEN)
NAN_BOXED(1063447386,32,FLEN)
NAN_BOXED(1050670784,32,FLEN)
NAN_BOXED(1060442039,32,FLEN)
NAN_BOXED(1046627984,32,FLEN)
NAN_BOXED(1050670784,32,FLEN)
NAN_BOXED(1060442039,32,FLEN)
NAN_BOXED(1046627984,32,FLEN)
NAN_BOXED(1050670784,32,FLEN)
NAN_BOXED(1060442039,32,FLEN)
NAN_BOXED(1046627984,32,FLEN)
NAN_BOXED(1050670784,32,FLEN)
NAN_BOXED(1060442039,32,FLEN)
NAN_BOXED(1046627984,32,FLEN)
NAN_BOXED(1050670784,32,FLEN)
NAN_BOXED(1060442039,32,FLEN)
NAN_BOXED(1046627984,32,FLEN)
NAN_BOXED(1063899147,32,FLEN)
NAN_BOXED(1018383660,32,FLEN)
NAN_BOXED(1017365236,32,FLEN)
NAN_BOXED(1063899147,32,FLEN)
NAN_BOXED(1018383660,32,FLEN)
NAN_BOXED(1017365236,32,FLEN)
NAN_BOXED(1063899147,32,FLEN)
NAN_BOXED(1018383660,32,FLEN)
NAN_BOXED(1017365236,32,FLEN)
NAN_BOXED(1063899147,32,FLEN)
NAN_BOXED(1018383660,32,FLEN)
NAN_BOXED(1017365236,32,FLEN)
NAN_BOXED(1063899147,32,FLEN)
NAN_BOXED(1018383660,32,FLEN)
NAN_BOXED(1017365236,32,FLEN)
NAN_BOXED(1051431591,32,FLEN)
NAN_BOXED(1076306631,32,FLEN)
NAN_BOXED(1063258100,32,FLEN)
NAN_BOXED(1051431591,32,FLEN)
NAN_BOXED(1076306631,32,FLEN)
NAN_BOXED(1063258100,32,FLEN)
NAN_BOXED(1051431591,32,FLEN)
NAN_BOXED(1076306631,32,FLEN)
NAN_BOXED(1063258100,32,FLEN)
NAN_BOXED(1051431591,32,FLEN)
NAN_BOXED(1076306631,32,FLEN)
NAN_BOXED(1063258100,32,FLEN)
NAN_BOXED(1051431591,32,FLEN)
NAN_BOXED(1076306631,32,FLEN)
NAN_BOXED(1063258100,32,FLEN)
NAN_BOXED(1059463746,32,FLEN)
NAN_BOXED(1067845270,32,FLEN)
NAN_BOXED(1062698235,32,FLEN)
NAN_BOXED(1059463746,32,FLEN)
NAN_BOXED(1067845270,32,FLEN)
NAN_BOXED(1062698235,32,FLEN)
NAN_BOXED(1059463746,32,FLEN)
NAN_BOXED(1067845270,32,FLEN)
NAN_BOXED(1062698235,32,FLEN)
NAN_BOXED(1059463746,32,FLEN)
NAN_BOXED(1067845270,32,FLEN)
NAN_BOXED(1062698235,32,FLEN)
NAN_BOXED(1059463746,32,FLEN)
NAN_BOXED(1067845270,32,FLEN)
NAN_BOXED(1062698235,32,FLEN)
NAN_BOXED(1049315409,32,FLEN)
NAN_BOXED(1050456875,32,FLEN)
NAN_BOXED(1034584857,32,FLEN)
NAN_BOXED(1049315409,32,FLEN)
NAN_BOXED(1050456875,32,FLEN)
NAN_BOXED(1034584857,32,FLEN)
NAN_BOXED(1049315409,32,FLEN)
NAN_BOXED(1050456875,32,FLEN)
NAN_BOXED(1034584857,32,FLEN)
NAN_BOXED(1049315409,32,FLEN)
NAN_BOXED(1050456875,32,FLEN)
NAN_BOXED(1034584857,32,FLEN)
NAN_BOXED(1049315409,32,FLEN)
NAN_BOXED(1050456875,32,FLEN)
NAN_BOXED(1034584857,32,FLEN)
NAN_BOXED(1062414970,32,FLEN)
NAN_BOXED(1065172209,32,FLEN)
NAN_BOXED(1062265663,32,FLEN)
NAN_BOXED(1062414970,32,FLEN)
NAN_BOXED(1065172209,32,FLEN)
NAN_BOXED(1062265663,32,FLEN)
NAN_BOXED(1062414970,32,FLEN)
NAN_BOXED(1065172209,32,FLEN)
NAN_BOXED(1062265663,32,FLEN)
NAN_BOXED(1062414970,32,FLEN)
NAN_BOXED(1065172209,32,FLEN)
NAN_BOXED(1062265663,32,FLEN)
NAN_BOXED(1062414970,32,FLEN)
NAN_BOXED(1065172209,32,FLEN)
NAN_BOXED(1062265663,32,FLEN)
NAN_BOXED(1052640045,32,FLEN)
NAN_BOXED(1052890406,32,FLEN)
NAN_BOXED(1041227418,32,FLEN)
NAN_BOXED(1052640045,32,FLEN)
NAN_BOXED(1052890406,32,FLEN)
NAN_BOXED(1041227418,32,FLEN)
NAN_BOXED(1052640045,32,FLEN)
NAN_BOXED(1052890406,32,FLEN)
NAN_BOXED(1041227418,32,FLEN)
NAN_BOXED(1052640045,32,FLEN)
NAN_BOXED(1052890406,32,FLEN)
NAN_BOXED(1041227418,32,FLEN)
NAN_BOXED(1052640045,32,FLEN)
NAN_BOXED(1052890406,32,FLEN)
NAN_BOXED(1041227418,32,FLEN)
NAN_BOXED(1048946569,32,FLEN)
NAN_BOXED(1074065505,32,FLEN)
NAN_BOXED(1057673157,32,FLEN)
NAN_BOXED(1048946569,32,FLEN)
NAN_BOXED(1074065505,32,FLEN)
NAN_BOXED(1057673157,32,FLEN)
NAN_BOXED(1048946569,32,FLEN)
NAN_BOXED(1074065505,32,FLEN)
NAN_BOXED(1057673157,32,FLEN)
NAN_BOXED(1048946569,32,FLEN)
NAN_BOXED(1074065505,32,FLEN)
NAN_BOXED(1057673157,32,FLEN)
NAN_BOXED(1048946569,32,FLEN)
NAN_BOXED(1074065505,32,FLEN)
NAN_BOXED(1057673157,32,FLEN)
NAN_BOXED(1063499132,32,FLEN)
NAN_BOXED(1054743941,32,FLEN)
NAN_BOXED(1053135268,32,FLEN)
NAN_BOXED(1063499132,32,FLEN)
NAN_BOXED(1054743941,32,FLEN)
NAN_BOXED(1053135268,32,FLEN)
NAN_BOXED(1063499132,32,FLEN)
NAN_BOXED(1054743941,32,FLEN)
NAN_BOXED(1053135268,32,FLEN)
NAN_BOXED(1063499132,32,FLEN)
NAN_BOXED(1054743941,32,FLEN)
NAN_BOXED(1053135268,32,FLEN)
NAN_BOXED(1063499132,32,FLEN)
NAN_BOXED(1054743941,32,FLEN)
NAN_BOXED(1053135268,32,FLEN)
NAN_BOXED(1057710201,32,FLEN)
NAN_BOXED(1052280865,32,FLEN)
NAN_BOXED(1044967144,32,FLEN)
NAN_BOXED(1057710201,32,FLEN)
NAN_BOXED(1052280865,32,FLEN)
NAN_BOXED(1044967144,32,FLEN)
NAN_BOXED(1057710201,32,FLEN)
NAN_BOXED(1052280865,32,FLEN)
NAN_BOXED(1044967144,32,FLEN)
NAN_BOXED(1057710201,32,FLEN)
NAN_BOXED(1052280865,32,FLEN)
NAN_BOXED(1044967144,32,FLEN)
NAN_BOXED(1057710201,32,FLEN)
NAN_BOXED(1052280865,32,FLEN)
NAN_BOXED(1044967144,32,FLEN)
NAN_BOXED(1054551920,32,FLEN)
NAN_BOXED(1059001232,32,FLEN)
NAN_BOXED(1049113398,32,FLEN)
NAN_BOXED(1054551920,32,FLEN)
NAN_BOXED(1059001232,32,FLEN)
NAN_BOXED(1049113398,32,FLEN)
NAN_BOXED(1054551920,32,FLEN)
NAN_BOXED(1059001232,32,FLEN)
NAN_BOXED(1049113398,32,FLEN)
NAN_BOXED(1054551920,32,FLEN)
NAN_BOXED(1059001232,32,FLEN)
NAN_BOXED(1049113398,32,FLEN)
NAN_BOXED(1054551920,32,FLEN)
NAN_BOXED(1059001232,32,FLEN)
NAN_BOXED(1049113398,32,FLEN)
NAN_BOXED(1022149594,32,FLEN)
NAN_BOXED(1095699749,32,FLEN)
NAN_BOXED(1052737158,32,FLEN)
NAN_BOXED(1022149594,32,FLEN)
NAN_BOXED(1095699749,32,FLEN)
NAN_BOXED(1052737158,32,FLEN)
NAN_BOXED(1022149594,32,FLEN)
NAN_BOXED(1095699749,32,FLEN)
NAN_BOXED(1052737158,32,FLEN)
NAN_BOXED(1022149594,32,FLEN)
NAN_BOXED(1095699749,32,FLEN)
NAN_BOXED(1052737158,32,FLEN)
NAN_BOXED(1022149594,32,FLEN)
NAN_BOXED(1095699749,32,FLEN)
NAN_BOXED(1052737158,32,FLEN)
NAN_BOXED(1035265136,32,FLEN)
NAN_BOXED(1090749695,32,FLEN)
NAN_BOXED(1060756927,32,FLEN)
NAN_BOXED(1035265136,32,FLEN)
NAN_BOXED(1090749695,32,FLEN)
NAN_BOXED(1060756927,32,FLEN)
NAN_BOXED(1035265136,32,FLEN)
NAN_BOXED(1090749695,32,FLEN)
NAN_BOXED(1060756927,32,FLEN)
NAN_BOXED(1035265136,32,FLEN)
NAN_BOXED(1090749695,32,FLEN)
NAN_BOXED(1060756927,32,FLEN)
NAN_BOXED(1035265136,32,FLEN)
NAN_BOXED(1090749695,32,FLEN)
NAN_BOXED(1060756927,32,FLEN)
NAN_BOXED(1065327489,32,FLEN)
NAN_BOXED(1039217952,32,FLEN)
NAN_BOXED(1039193712,32,FLEN)
NAN_BOXED(1065327489,32,FLEN)
NAN_BOXED(1039217952,32,FLEN)
NAN_BOXED(1039193712,32,FLEN)
NAN_BOXED(1065327489,32,FLEN)
NAN_BOXED(1039217952,32,FLEN)
NAN_BOXED(1039193712,32,FLEN)
NAN_BOXED(1065327489,32,FLEN)
NAN_BOXED(1039217952,32,FLEN)
NAN_BOXED(1039193712,32,FLEN)
NAN_BOXED(1065327489,32,FLEN)
NAN_BOXED(1039217952,32,FLEN)
NAN_BOXED(1039193712,32,FLEN)
NAN_BOXED(1064851982,32,FLEN)
NAN_BOXED(1003943761,32,FLEN)
NAN_BOXED(1003522869,32,FLEN)
NAN_BOXED(1064851982,32,FLEN)
NAN_BOXED(1003943761,32,FLEN)
NAN_BOXED(1003522869,32,FLEN)
NAN_BOXED(1064851982,32,FLEN)
NAN_BOXED(1003943761,32,FLEN)
NAN_BOXED(1003522869,32,FLEN)
NAN_BOXED(1064851982,32,FLEN)
NAN_BOXED(1003943761,32,FLEN)
NAN_BOXED(1003522869,32,FLEN)
NAN_BOXED(1064851982,32,FLEN)
NAN_BOXED(1003943761,32,FLEN)
NAN_BOXED(1003522869,32,FLEN)
NAN_BOXED(1057707086,32,FLEN)
NAN_BOXED(1071433056,32,FLEN)
NAN_BOXED(1064325055,32,FLEN)
NAN_BOXED(1057707086,32,FLEN)
NAN_BOXED(1071433056,32,FLEN)
NAN_BOXED(1064325055,32,FLEN)
NAN_BOXED(1057707086,32,FLEN)
NAN_BOXED(1071433056,32,FLEN)
NAN_BOXED(1064325055,32,FLEN)
NAN_BOXED(1057707086,32,FLEN)
NAN_BOXED(1071433056,32,FLEN)
NAN_BOXED(1064325055,32,FLEN)
NAN_BOXED(1057707086,32,FLEN)
NAN_BOXED(1071433056,32,FLEN)
NAN_BOXED(1064325055,32,FLEN)
NAN_BOXED(1060745216,32,FLEN)
NAN_BOXED(1053079724,32,FLEN)
NAN_BOXED(1049538739,32,FLEN)
NAN_BOXED(1060745216,32,FLEN)
NAN_BOXED(1053079724,32,FLEN)
NAN_BOXED(1049538739,32,FLEN)
NAN_BOXED(1060745216,32,FLEN)
NAN_BOXED(1053079724,32,FLEN)
NAN_BOXED(1049538739,32,FLEN)
NAN_BOXED(1060745216,32,FLEN)
NAN_BOXED(1053079724,32,FLEN)
NAN_BOXED(1049538739,32,FLEN)
NAN_BOXED(1060745216,32,FLEN)
NAN_BOXED(1053079724,32,FLEN)
NAN_BOXED(1049538739,32,FLEN)
NAN_BOXED(1058909570,32,FLEN)
NAN_BOXED(1058822282,32,FLEN)
NAN_BOXED(1052809353,32,FLEN)
NAN_BOXED(1058909570,32,FLEN)
NAN_BOXED(1058822282,32,FLEN)
NAN_BOXED(1052809353,32,FLEN)
NAN_BOXED(1058909570,32,FLEN)
NAN_BOXED(1058822282,32,FLEN)
NAN_BOXED(1052809353,32,FLEN)
NAN_BOXED(1058909570,32,FLEN)
NAN_BOXED(1058822282,32,FLEN)
NAN_BOXED(1052809353,32,FLEN)
NAN_BOXED(1058909570,32,FLEN)
NAN_BOXED(1058822282,32,FLEN)
NAN_BOXED(1052809353,32,FLEN)
NAN_BOXED(1063643109,32,FLEN)
NAN_BOXED(1044080430,32,FLEN)
NAN_BOXED(1042828558,32,FLEN)
NAN_BOXED(1063643109,32,FLEN)
NAN_BOXED(1044080430,32,FLEN)
NAN_BOXED(1042828558,32,FLEN)
NAN_BOXED(1063643109,32,FLEN)
NAN_BOXED(1044080430,32,FLEN)
NAN_BOXED(1042828558,32,FLEN)
NAN_BOXED(1063643109,32,FLEN)
NAN_BOXED(1044080430,32,FLEN)
NAN_BOXED(1042828558,32,FLEN)
NAN_BOXED(1063643109,32,FLEN)
NAN_BOXED(1044080430,32,FLEN)
NAN_BOXED(1042828558,32,FLEN)
NAN_BOXED(1059092750,32,FLEN)
NAN_BOXED(1049138707,32,FLEN)
NAN_BOXED(1043020998,32,FLEN)
NAN_BOXED(1059092750,32,FLEN)
NAN_BOXED(1049138707,32,FLEN)
NAN_BOXED(1043020998,32,FLEN)
NAN_BOXED(1059092750,32,FLEN)
NAN_BOXED(1049138707,32,FLEN)
NAN_BOXED(1043020998,32,FLEN)
NAN_BOXED(1059092750,32,FLEN)
NAN_BOXED(1049138707,32,FLEN)
NAN_BOXED(1043020998,32,FLEN)
NAN_BOXED(1059092750,32,FLEN)
NAN_BOXED(1049138707,32,FLEN)
NAN_BOXED(1043020998,32,FLEN)
NAN_BOXED(1062881817,32,FLEN)
NAN_BOXED(1053279546,32,FLEN)
NAN_BOXED(1051350983,32,FLEN)
NAN_BOXED(1062881817,32,FLEN)
NAN_BOXED(1053279546,32,FLEN)
NAN_BOXED(1051350983,32,FLEN)
NAN_BOXED(1062881817,32,FLEN)
NAN_BOXED(1053279546,32,FLEN)
NAN_BOXED(1051350983,32,FLEN)
NAN_BOXED(1062881817,32,FLEN)
NAN_BOXED(1053279546,32,FLEN)
NAN_BOXED(1051350983,32,FLEN)
NAN_BOXED(1062881817,32,FLEN)
NAN_BOXED(1053279546,32,FLEN)
NAN_BOXED(1051350983,32,FLEN)
NAN_BOXED(1057484462,32,FLEN)
NAN_BOXED(1066373684,32,FLEN)
NAN_BOXED(1058568171,32,FLEN)
NAN_BOXED(1057484462,32,FLEN)
NAN_BOXED(1066373684,32,FLEN)
NAN_BOXED(1058568171,32,FLEN)
NAN_BOXED(1057484462,32,FLEN)
NAN_BOXED(1066373684,32,FLEN)
NAN_BOXED(1058568171,32,FLEN)
NAN_BOXED(1057484462,32,FLEN)
NAN_BOXED(1066373684,32,FLEN)
NAN_BOXED(1058568171,32,FLEN)
NAN_BOXED(1057484462,32,FLEN)
NAN_BOXED(1066373684,32,FLEN)
NAN_BOXED(1058568171,32,FLEN)
NAN_BOXED(1065028849,32,FLEN)
NAN_BOXED(1056210321,32,FLEN)
NAN_BOXED(1055900538,32,FLEN)
NAN_BOXED(1065028849,32,FLEN)
NAN_BOXED(1056210321,32,FLEN)
NAN_BOXED(1055900538,32,FLEN)
NAN_BOXED(1065028849,32,FLEN)
NAN_BOXED(1056210321,32,FLEN)
NAN_BOXED(1055900538,32,FLEN)
NAN_BOXED(1065028849,32,FLEN)
NAN_BOXED(1056210321,32,FLEN)
NAN_BOXED(1055900538,32,FLEN)
NAN_BOXED(1065028849,32,FLEN)
NAN_BOXED(1056210321,32,FLEN)
NAN_BOXED(1055900538,32,FLEN)
NAN_BOXED(1042667255,32,FLEN)
NAN_BOXED(1085345878,32,FLEN)
NAN_BOXED(1063610477,32,FLEN)
NAN_BOXED(1042667255,32,FLEN)
NAN_BOXED(1085345878,32,FLEN)
NAN_BOXED(1063610477,32,FLEN)
NAN_BOXED(1042667255,32,FLEN)
NAN_BOXED(1085345878,32,FLEN)
NAN_BOXED(1063610477,32,FLEN)
NAN_BOXED(1042667255,32,FLEN)
NAN_BOXED(1085345878,32,FLEN)
NAN_BOXED(1063610477,32,FLEN)
NAN_BOXED(1042667255,32,FLEN)
NAN_BOXED(1085345878,32,FLEN)
NAN_BOXED(1063610477,32,FLEN)
NAN_BOXED(1057874527,32,FLEN)
NAN_BOXED(1071911546,32,FLEN)
NAN_BOXED(1065144245,32,FLEN)
NAN_BOXED(1057874527,32,FLEN)
NAN_BOXED(1071911546,32,FLEN)
NAN_BOXED(1065144245,32,FLEN)
NAN_BOXED(1057874527,32,FLEN)
NAN_BOXED(1071911546,32,FLEN)
NAN_BOXED(1065144245,32,FLEN)
NAN_BOXED(1057874527,32,FLEN)
NAN_BOXED(1071911546,32,FLEN)
NAN_BOXED(1065144245,32,FLEN)
NAN_BOXED(1057874527,32,FLEN)
NAN_BOXED(1071911546,32,FLEN)
NAN_BOXED(1065144245,32,FLEN)
NAN_BOXED(1002493616,32,FLEN)
NAN_BOXED(1084607446,32,FLEN)
NAN_BOXED(1023002583,32,FLEN)
NAN_BOXED(1002493616,32,FLEN)
NAN_BOXED(1084607446,32,FLEN)
NAN_BOXED(1023002583,32,FLEN)
NAN_BOXED(1002493616,32,FLEN)
NAN_BOXED(1084607446,32,FLEN)
NAN_BOXED(1023002583,32,FLEN)
NAN_BOXED(1002493616,32,FLEN)
NAN_BOXED(1084607446,32,FLEN)
NAN_BOXED(1023002583,32,FLEN)
NAN_BOXED(1002493616,32,FLEN)
NAN_BOXED(1084607446,32,FLEN)
NAN_BOXED(1023002583,32,FLEN)
NAN_BOXED(1050978026,32,FLEN)
NAN_BOXED(1070526045,32,FLEN)
NAN_BOXED(1057298335,32,FLEN)
NAN_BOXED(1050978026,32,FLEN)
NAN_BOXED(1070526045,32,FLEN)
NAN_BOXED(1057298335,32,FLEN)
NAN_BOXED(1050978026,32,FLEN)
NAN_BOXED(1070526045,32,FLEN)
NAN_BOXED(1057298335,32,FLEN)
NAN_BOXED(1050978026,32,FLEN)
NAN_BOXED(1070526045,32,FLEN)
NAN_BOXED(1057298335,32,FLEN)
NAN_BOXED(1050978026,32,FLEN)
NAN_BOXED(1070526045,32,FLEN)
NAN_BOXED(1057298335,32,FLEN)
NAN_BOXED(1064172473,32,FLEN)
NAN_BOXED(1064438395,32,FLEN)
NAN_BOXED(1063322036,32,FLEN)
NAN_BOXED(1064172473,32,FLEN)
NAN_BOXED(1064438395,32,FLEN)
NAN_BOXED(1063322036,32,FLEN)
NAN_BOXED(1064172473,32,FLEN)
NAN_BOXED(1064438395,32,FLEN)
NAN_BOXED(1063322036,32,FLEN)
NAN_BOXED(1064172473,32,FLEN)
NAN_BOXED(1064438395,32,FLEN)
NAN_BOXED(1063322036,32,FLEN)
NAN_BOXED(1064172473,32,FLEN)
NAN_BOXED(1064438395,32,FLEN)
NAN_BOXED(1063322036,32,FLEN)
NAN_BOXED(1050085825,32,FLEN)
NAN_BOXED(1060263224,32,FLEN)
NAN_BOXED(1045589535,32,FLEN)
NAN_BOXED(1050085825,32,FLEN)
NAN_BOXED(1060263224,32,FLEN)
NAN_BOXED(1045589535,32,FLEN)
NAN_BOXED(1050085825,32,FLEN)
NAN_BOXED(1060263224,32,FLEN)
NAN_BOXED(1045589535,32,FLEN)
NAN_BOXED(1050085825,32,FLEN)
NAN_BOXED(1060263224,32,FLEN)
NAN_BOXED(1045589535,32,FLEN)
NAN_BOXED(1050085825,32,FLEN)
NAN_BOXED(1060263224,32,FLEN)
NAN_BOXED(1045589535,32,FLEN)
NAN_BOXED(1009968008,32,FLEN)
NAN_BOXED(1095409816,32,FLEN)
NAN_BOXED(1041078210,32,FLEN)
NAN_BOXED(1009968008,32,FLEN)
NAN_BOXED(1095409816,32,FLEN)
NAN_BOXED(1041078210,32,FLEN)
NAN_BOXED(1009968008,32,FLEN)
NAN_BOXED(1095409816,32,FLEN)
NAN_BOXED(1041078210,32,FLEN)
NAN_BOXED(1009968008,32,FLEN)
NAN_BOXED(1095409816,32,FLEN)
NAN_BOXED(1041078210,32,FLEN)
NAN_BOXED(1009968008,32,FLEN)
NAN_BOXED(1095409816,32,FLEN)
NAN_BOXED(1041078210,32,FLEN)
NAN_BOXED(1058006218,32,FLEN)
NAN_BOXED(1068078677,32,FLEN)
NAN_BOXED(1061070099,32,FLEN)
NAN_BOXED(1058006218,32,FLEN)
NAN_BOXED(1068078677,32,FLEN)
NAN_BOXED(1061070099,32,FLEN)
NAN_BOXED(1058006218,32,FLEN)
NAN_BOXED(1068078677,32,FLEN)
NAN_BOXED(1061070099,32,FLEN)
NAN_BOXED(1058006218,32,FLEN)
NAN_BOXED(1068078677,32,FLEN)
NAN_BOXED(1061070099,32,FLEN)
NAN_BOXED(1058006218,32,FLEN)
NAN_BOXED(1068078677,32,FLEN)
NAN_BOXED(1061070099,32,FLEN)
NAN_BOXED(1055560686,32,FLEN)
NAN_BOXED(1068940649,32,FLEN)
NAN_BOXED(1059549883,32,FLEN)
NAN_BOXED(1055560686,32,FLEN)
NAN_BOXED(1068940649,32,FLEN)
NAN_BOXED(1059549883,32,FLEN)
NAN_BOXED(1055560686,32,FLEN)
NAN_BOXED(1068940649,32,FLEN)
NAN_BOXED(1059549883,32,FLEN)
NAN_BOXED(1055560686,32,FLEN)
NAN_BOXED(1068940649,32,FLEN)
NAN_BOXED(1059549883,32,FLEN)
NAN_BOXED(1055560686,32,FLEN)
NAN_BOXED(1068940649,32,FLEN)
NAN_BOXED(1059549883,32,FLEN)
NAN_BOXED(1055461367,32,FLEN)
NAN_BOXED(1048733290,32,FLEN)
NAN_BOXED(1038970545,32,FLEN)
NAN_BOXED(1055461367,32,FLEN)
NAN_BOXED(1048733290,32,FLEN)
NAN_BOXED(1038970545,32,FLEN)
NAN_BOXED(1055461367,32,FLEN)
NAN_BOXED(1048733290,32,FLEN)
NAN_BOXED(1038970545,32,FLEN)
NAN_BOXED(1055461367,32,FLEN)
NAN_BOXED(1048733290,32,FLEN)
NAN_BOXED(1038970545,32,FLEN)
NAN_BOXED(1055461367,32,FLEN)
NAN_BOXED(1048733290,32,FLEN)
NAN_BOXED(1038970545,32,FLEN)
NAN_BOXED(1057753957,32,FLEN)
NAN_BOXED(1024241132,32,FLEN)
NAN_BOXED(1016720064,32,FLEN)
NAN_BOXED(1057753957,32,FLEN)
NAN_BOXED(1024241132,32,FLEN)
NAN_BOXED(1016720064,32,FLEN)
NAN_BOXED(1057753957,32,FLEN)
NAN_BOXED(1024241132,32,FLEN)
NAN_BOXED(1016720064,32,FLEN)
NAN_BOXED(1057753957,32,FLEN)
NAN_BOXED(1024241132,32,FLEN)
NAN_BOXED(1016720064,32,FLEN)
NAN_BOXED(1057753957,32,FLEN)
NAN_BOXED(1024241132,32,FLEN)
NAN_BOXED(1016720064,32,FLEN)
NAN_BOXED(1049637767,32,FLEN)
NAN_BOXED(1079564302,32,FLEN)
NAN_BOXED(1064585820,32,FLEN)
NAN_BOXED(1049637767,32,FLEN)
NAN_BOXED(1079564302,32,FLEN)
NAN_BOXED(1064585820,32,FLEN)
NAN_BOXED(1049637767,32,FLEN)
NAN_BOXED(1079564302,32,FLEN)
NAN_BOXED(1064585820,32,FLEN)
NAN_BOXED(1049637767,32,FLEN)
NAN_BOXED(1079564302,32,FLEN)
NAN_BOXED(1064585820,32,FLEN)
NAN_BOXED(1049637767,32,FLEN)
NAN_BOXED(1079564302,32,FLEN)
NAN_BOXED(1064585820,32,FLEN)
NAN_BOXED(1048681084,32,FLEN)
NAN_BOXED(1068180919,32,FLEN)
NAN_BOXED(1051544211,32,FLEN)
NAN_BOXED(1048681084,32,FLEN)
NAN_BOXED(1068180919,32,FLEN)
NAN_BOXED(1051544211,32,FLEN)
NAN_BOXED(1048681084,32,FLEN)
NAN_BOXED(1068180919,32,FLEN)
NAN_BOXED(1051544211,32,FLEN)
NAN_BOXED(1048681084,32,FLEN)
NAN_BOXED(1068180919,32,FLEN)
NAN_BOXED(1051544211,32,FLEN)
NAN_BOXED(1048681084,32,FLEN)
NAN_BOXED(1068180919,32,FLEN)
NAN_BOXED(1051544211,32,FLEN)
NAN_BOXED(1052869654,32,FLEN)
NAN_BOXED(1076413920,32,FLEN)
NAN_BOXED(1065298054,32,FLEN)
NAN_BOXED(1052869654,32,FLEN)
NAN_BOXED(1076413920,32,FLEN)
NAN_BOXED(1065298054,32,FLEN)
NAN_BOXED(1052869654,32,FLEN)
NAN_BOXED(1076413920,32,FLEN)
NAN_BOXED(1065298054,32,FLEN)
NAN_BOXED(1052869654,32,FLEN)
NAN_BOXED(1076413920,32,FLEN)
NAN_BOXED(1065298054,32,FLEN)
NAN_BOXED(1052869654,32,FLEN)
NAN_BOXED(1076413920,32,FLEN)
NAN_BOXED(1065298054,32,FLEN)
NAN_BOXED(1039664816,32,FLEN)
NAN_BOXED(1082481500,32,FLEN)
NAN_BOXED(1057043453,32,FLEN)
NAN_BOXED(1039664816,32,FLEN)
NAN_BOXED(1082481500,32,FLEN)
NAN_BOXED(1057043453,32,FLEN)
NAN_BOXED(1039664816,32,FLEN)
NAN_BOXED(1082481500,32,FLEN)
NAN_BOXED(1057043453,32,FLEN)
NAN_BOXED(1039664816,32,FLEN)
NAN_BOXED(1082481500,32,FLEN)
NAN_BOXED(1057043453,32,FLEN)
NAN_BOXED(1039664816,32,FLEN)
NAN_BOXED(1082481500,32,FLEN)
NAN_BOXED(1057043453,32,FLEN)
NAN_BOXED(1055730335,32,FLEN)
NAN_BOXED(1071990624,32,FLEN)
NAN_BOXED(1062496576,32,FLEN)
NAN_BOXED(1055730335,32,FLEN)
NAN_BOXED(1071990624,32,FLEN)
NAN_BOXED(1062496576,32,FLEN)
NAN_BOXED(1055730335,32,FLEN)
NAN_BOXED(1071990624,32,FLEN)
NAN_BOXED(1062496576,32,FLEN)
NAN_BOXED(1055730335,32,FLEN)
NAN_BOXED(1071990624,32,FLEN)
NAN_BOXED(1062496576,32,FLEN)
NAN_BOXED(1055730335,32,FLEN)
NAN_BOXED(1071990624,32,FLEN)
NAN_BOXED(1062496576,32,FLEN)
NAN_BOXED(1064758708,32,FLEN)
NAN_BOXED(1065540237,32,FLEN)
NAN_BOXED(1065119497,32,FLEN)
NAN_BOXED(1064758708,32,FLEN)
NAN_BOXED(1065540237,32,FLEN)
NAN_BOXED(1065119497,32,FLEN)
NAN_BOXED(1064758708,32,FLEN)
NAN_BOXED(1065540237,32,FLEN)
NAN_BOXED(1065119497,32,FLEN)
NAN_BOXED(1064758708,32,FLEN)
NAN_BOXED(1065540237,32,FLEN)
NAN_BOXED(1065119497,32,FLEN)
NAN_BOXED(1064758708,32,FLEN)
NAN_BOXED(1065540237,32,FLEN)
NAN_BOXED(1065119497,32,FLEN)
NAN_BOXED(1061832471,32,FLEN)
NAN_BOXED(1063350939,32,FLEN)
NAN_BOXED(1060250377,32,FLEN)
NAN_BOXED(1061832471,32,FLEN)
NAN_BOXED(1063350939,32,FLEN)
NAN_BOXED(1060250377,32,FLEN)
NAN_BOXED(1061832471,32,FLEN)
NAN_BOXED(1063350939,32,FLEN)
NAN_BOXED(1060250377,32,FLEN)
NAN_BOXED(1061832471,32,FLEN)
NAN_BOXED(1063350939,32,FLEN)
NAN_BOXED(1060250377,32,FLEN)
NAN_BOXED(1061832471,32,FLEN)
NAN_BOXED(1063350939,32,FLEN)
NAN_BOXED(1060250377,32,FLEN)
NAN_BOXED(1062769284,32,FLEN)
NAN_BOXED(1066303162,32,FLEN)
NAN_BOXED(1064376566,32,FLEN)
NAN_BOXED(1062769284,32,FLEN)
NAN_BOXED(1066303162,32,FLEN)
NAN_BOXED(1064376566,32,FLEN)
NAN_BOXED(1062769284,32,FLEN)
NAN_BOXED(1066303162,32,FLEN)
NAN_BOXED(1064376566,32,FLEN)
NAN_BOXED(1062769284,32,FLEN)
NAN_BOXED(1066303162,32,FLEN)
NAN_BOXED(1064376566,32,FLEN)
NAN_BOXED(1062769284,32,FLEN)
NAN_BOXED(1066303162,32,FLEN)
NAN_BOXED(1064376566,32,FLEN)
NAN_BOXED(1049334133,32,FLEN)
NAN_BOXED(1066120041,32,FLEN)
NAN_BOXED(1050170262,32,FLEN)
NAN_BOXED(1049334133,32,FLEN)
NAN_BOXED(1066120041,32,FLEN)
NAN_BOXED(1050170262,32,FLEN)
NAN_BOXED(1049334133,32,FLEN)
NAN_BOXED(1066120041,32,FLEN)
NAN_BOXED(1050170262,32,FLEN)
NAN_BOXED(1049334133,32,FLEN)
NAN_BOXED(1066120041,32,FLEN)
NAN_BOXED(1050170262,32,FLEN)
NAN_BOXED(1049334133,32,FLEN)
NAN_BOXED(1066120041,32,FLEN)
NAN_BOXED(1050170262,32,FLEN)
NAN_BOXED(1039241192,32,FLEN)
NAN_BOXED(1087652171,32,FLEN)
NAN_BOXED(1061701833,32,FLEN)
NAN_BOXED(1039241192,32,FLEN)
NAN_BOXED(1087652171,32,FLEN)
NAN_BOXED(1061701833,32,FLEN)
NAN_BOXED(1039241192,32,FLEN)
NAN_BOXED(1087652171,32,FLEN)
NAN_BOXED(1061701833,32,FLEN)
NAN_BOXED(1039241192,32,FLEN)
NAN_BOXED(1087652171,32,FLEN)
NAN_BOXED(1061701833,32,FLEN)
NAN_BOXED(1039241192,32,FLEN)
NAN_BOXED(1087652171,32,FLEN)
NAN_BOXED(1061701833,32,FLEN)
NAN_BOXED(1049300576,32,FLEN)
NAN_BOXED(1069489797,32,FLEN)
NAN_BOXED(1053794461,32,FLEN)
NAN_BOXED(1049300576,32,FLEN)
NAN_BOXED(1069489797,32,FLEN)
NAN_BOXED(1053794461,32,FLEN)
NAN_BOXED(1049300576,32,FLEN)
NAN_BOXED(1069489797,32,FLEN)
NAN_BOXED(1053794461,32,FLEN)
NAN_BOXED(1049300576,32,FLEN)
NAN_BOXED(1069489797,32,FLEN)
NAN_BOXED(1053794461,32,FLEN)
NAN_BOXED(1049300576,32,FLEN)
NAN_BOXED(1069489797,32,FLEN)
NAN_BOXED(1053794461,32,FLEN)
NAN_BOXED(1063841514,32,FLEN)
NAN_BOXED(1041018012,32,FLEN)
NAN_BOXED(1040187246,32,FLEN)
NAN_BOXED(1063841514,32,FLEN)
NAN_BOXED(1041018012,32,FLEN)
NAN_BOXED(1040187246,32,FLEN)
NAN_BOXED(1063841514,32,FLEN)
NAN_BOXED(1041018012,32,FLEN)
NAN_BOXED(1040187246,32,FLEN)
NAN_BOXED(1063841514,32,FLEN)
NAN_BOXED(1041018012,32,FLEN)
NAN_BOXED(1040187246,32,FLEN)
NAN_BOXED(1063841514,32,FLEN)
NAN_BOXED(1041018012,32,FLEN)
NAN_BOXED(1040187246,32,FLEN)
NAN_BOXED(1059358921,32,FLEN)
NAN_BOXED(1067602741,32,FLEN)
NAN_BOXED(1062250516,32,FLEN)
NAN_BOXED(1059358921,32,FLEN)
NAN_BOXED(1067602741,32,FLEN)
NAN_BOXED(1062250516,32,FLEN)
NAN_BOXED(1059358921,32,FLEN)
NAN_BOXED(1067602741,32,FLEN)
NAN_BOXED(1062250516,32,FLEN)
NAN_BOXED(1059358921,32,FLEN)
NAN_BOXED(1067602741,32,FLEN)
NAN_BOXED(1062250516,32,FLEN)
NAN_BOXED(1059358921,32,FLEN)
NAN_BOXED(1067602741,32,FLEN)
NAN_BOXED(1062250516,32,FLEN)
NAN_BOXED(1062278338,32,FLEN)
NAN_BOXED(1035843010,32,FLEN)
NAN_BOXED(1033564358,32,FLEN)
NAN_BOXED(1062278338,32,FLEN)
NAN_BOXED(1035843010,32,FLEN)
NAN_BOXED(1033564358,32,FLEN)
NAN_BOXED(1062278338,32,FLEN)
NAN_BOXED(1035843010,32,FLEN)
NAN_BOXED(1033564358,32,FLEN)
NAN_BOXED(1062278338,32,FLEN)
NAN_BOXED(1035843010,32,FLEN)
NAN_BOXED(1033564358,32,FLEN)
NAN_BOXED(1062278338,32,FLEN)
NAN_BOXED(1035843010,32,FLEN)
NAN_BOXED(1033564358,32,FLEN)
NAN_BOXED(1061649336,32,FLEN)
NAN_BOXED(1061831939,32,FLEN)
NAN_BOXED(1058905446,32,FLEN)
NAN_BOXED(1061649336,32,FLEN)
NAN_BOXED(1061831939,32,FLEN)
NAN_BOXED(1058905446,32,FLEN)
NAN_BOXED(1061649336,32,FLEN)
NAN_BOXED(1061831939,32,FLEN)
NAN_BOXED(1058905446,32,FLEN)
NAN_BOXED(1061649336,32,FLEN)
NAN_BOXED(1061831939,32,FLEN)
NAN_BOXED(1058905446,32,FLEN)
NAN_BOXED(1061649336,32,FLEN)
NAN_BOXED(1061831939,32,FLEN)
NAN_BOXED(1058905446,32,FLEN)
NAN_BOXED(1055387904,32,FLEN)
NAN_BOXED(1068831539,32,FLEN)
NAN_BOXED(1059327691,32,FLEN)
NAN_BOXED(1055387904,32,FLEN)
NAN_BOXED(1068831539,32,FLEN)
NAN_BOXED(1059327691,32,FLEN)
NAN_BOXED(1055387904,32,FLEN)
NAN_BOXED(1068831539,32,FLEN)
NAN_BOXED(1059327691,32,FLEN)
NAN_BOXED(1055387904,32,FLEN)
NAN_BOXED(1068831539,32,FLEN)
NAN_BOXED(1059327691,32,FLEN)
NAN_BOXED(1055387904,32,FLEN)
NAN_BOXED(1068831539,32,FLEN)
NAN_BOXED(1059327691,32,FLEN)
NAN_BOXED(1051730980,32,FLEN)
NAN_BOXED(1076476293,32,FLEN)
NAN_BOXED(1063882499,32,FLEN)
NAN_BOXED(1051730980,32,FLEN)
NAN_BOXED(1076476293,32,FLEN)
NAN_BOXED(1063882499,32,FLEN)
NAN_BOXED(1051730980,32,FLEN)
NAN_BOXED(1076476293,32,FLEN)
NAN_BOXED(1063882499,32,FLEN)
NAN_BOXED(1051730980,32,FLEN)
NAN_BOXED(1076476293,32,FLEN)
NAN_BOXED(1063882499,32,FLEN)
NAN_BOXED(1051730980,32,FLEN)
NAN_BOXED(1076476293,32,FLEN)
NAN_BOXED(1063882499,32,FLEN)
NAN_BOXED(1058140139,32,FLEN)
NAN_BOXED(1060802916,32,FLEN)
NAN_BOXED(1054127719,32,FLEN)
NAN_BOXED(1058140139,32,FLEN)
NAN_BOXED(1060802916,32,FLEN)
NAN_BOXED(1054127719,32,FLEN)
NAN_BOXED(1058140139,32,FLEN)
NAN_BOXED(1060802916,32,FLEN)
NAN_BOXED(1054127719,32,FLEN)
NAN_BOXED(1058140139,32,FLEN)
NAN_BOXED(1060802916,32,FLEN)
NAN_BOXED(1054127719,32,FLEN)
NAN_BOXED(1058140139,32,FLEN)
NAN_BOXED(1060802916,32,FLEN)
NAN_BOXED(1054127719,32,FLEN)
NAN_BOXED(1052972763,32,FLEN)
NAN_BOXED(1065573527,32,FLEN)
NAN_BOXED(1053308548,32,FLEN)
NAN_BOXED(1052972763,32,FLEN)
NAN_BOXED(1065573527,32,FLEN)
NAN_BOXED(1053308548,32,FLEN)
NAN_BOXED(1052972763,32,FLEN)
NAN_BOXED(1065573527,32,FLEN)
NAN_BOXED(1053308548,32,FLEN)
NAN_BOXED(1052972763,32,FLEN)
NAN_BOXED(1065573527,32,FLEN)
NAN_BOXED(1053308548,32,FLEN)
NAN_BOXED(1052972763,32,FLEN)
NAN_BOXED(1065573527,32,FLEN)
NAN_BOXED(1053308548,32,FLEN)
NAN_BOXED(1060835959,32,FLEN)
NAN_BOXED(1056802294,32,FLEN)
NAN_BOXED(1052328740,32,FLEN)
NAN_BOXED(1060835959,32,FLEN)
NAN_BOXED(1056802294,32,FLEN)
NAN_BOXED(1052328740,32,FLEN)
NAN_BOXED(1060835959,32,FLEN)
NAN_BOXED(1056802294,32,FLEN)
NAN_BOXED(1052328740,32,FLEN)
NAN_BOXED(1060835959,32,FLEN)
NAN_BOXED(1056802294,32,FLEN)
NAN_BOXED(1052328740,32,FLEN)
NAN_BOXED(1060835959,32,FLEN)
NAN_BOXED(1056802294,32,FLEN)
NAN_BOXED(1052328740,32,FLEN)
NAN_BOXED(1021556119,32,FLEN)
NAN_BOXED(1100280898,32,FLEN)
NAN_BOXED(1057259071,32,FLEN)
NAN_BOXED(1021556119,32,FLEN)
NAN_BOXED(1100280898,32,FLEN)
NAN_BOXED(1057259071,32,FLEN)
NAN_BOXED(1021556119,32,FLEN)
NAN_BOXED(1100280898,32,FLEN)
NAN_BOXED(1057259071,32,FLEN)
NAN_BOXED(1021556119,32,FLEN)
NAN_BOXED(1100280898,32,FLEN)
NAN_BOXED(1057259071,32,FLEN)
NAN_BOXED(1021556119,32,FLEN)
NAN_BOXED(1100280898,32,FLEN)
NAN_BOXED(1057259071,32,FLEN)
NAN_BOXED(1052132970,32,FLEN)
NAN_BOXED(1055553618,32,FLEN)
NAN_BOXED(1042739721,32,FLEN)
NAN_BOXED(1052132970,32,FLEN)
NAN_BOXED(1055553618,32,FLEN)
NAN_BOXED(1042739721,32,FLEN)
NAN_BOXED(1052132970,32,FLEN)
NAN_BOXED(1055553618,32,FLEN)
NAN_BOXED(1042739721,32,FLEN)
NAN_BOXED(1052132970,32,FLEN)
NAN_BOXED(1055553618,32,FLEN)
NAN_BOXED(1042739721,32,FLEN)
NAN_BOXED(1052132970,32,FLEN)
NAN_BOXED(1055553618,32,FLEN)
NAN_BOXED(1042739721,32,FLEN)
NAN_BOXED(1061119652,32,FLEN)
NAN_BOXED(1065054892,32,FLEN)
NAN_BOXED(1060896607,32,FLEN)
NAN_BOXED(1061119652,32,FLEN)
NAN_BOXED(1065054892,32,FLEN)
NAN_BOXED(1060896607,32,FLEN)
NAN_BOXED(1061119652,32,FLEN)
NAN_BOXED(1065054892,32,FLEN)
NAN_BOXED(1060896607,32,FLEN)
NAN_BOXED(1061119652,32,FLEN)
NAN_BOXED(1065054892,32,FLEN)
NAN_BOXED(1060896607,32,FLEN)
NAN_BOXED(1061119652,32,FLEN)
NAN_BOXED(1065054892,32,FLEN)
NAN_BOXED(1060896607,32,FLEN)
NAN_BOXED(1022616394,32,FLEN)
NAN_BOXED(1102833892,32,FLEN)
NAN_BOXED(1060308198,32,FLEN)
NAN_BOXED(1022616394,32,FLEN)
NAN_BOXED(1102833892,32,FLEN)
NAN_BOXED(1060308198,32,FLEN)
NAN_BOXED(1022616394,32,FLEN)
NAN_BOXED(1102833892,32,FLEN)
NAN_BOXED(1060308198,32,FLEN)
NAN_BOXED(1022616394,32,FLEN)
NAN_BOXED(1102833892,32,FLEN)
NAN_BOXED(1060308198,32,FLEN)
NAN_BOXED(1022616394,32,FLEN)
NAN_BOXED(1102833892,32,FLEN)
NAN_BOXED(1060308198,32,FLEN)
NAN_BOXED(1058204618,32,FLEN)
NAN_BOXED(1066159386,32,FLEN)
NAN_BOXED(1059129957,32,FLEN)
NAN_BOXED(1058204618,32,FLEN)
NAN_BOXED(1066159386,32,FLEN)
NAN_BOXED(1059129957,32,FLEN)
NAN_BOXED(1058204618,32,FLEN)
NAN_BOXED(1066159386,32,FLEN)
NAN_BOXED(1059129957,32,FLEN)
NAN_BOXED(1058204618,32,FLEN)
NAN_BOXED(1066159386,32,FLEN)
NAN_BOXED(1059129957,32,FLEN)
NAN_BOXED(1058204618,32,FLEN)
NAN_BOXED(1066159386,32,FLEN)
NAN_BOXED(1059129957,32,FLEN)
NAN_BOXED(1004545459,32,FLEN)
NAN_BOXED(1116013237,32,FLEN)
NAN_BOXED(1055452139,32,FLEN)
NAN_BOXED(1004545459,32,FLEN)
NAN_BOXED(1116013237,32,FLEN)
NAN_BOXED(1055452139,32,FLEN)
NAN_BOXED(1004545459,32,FLEN)
NAN_BOXED(1116013237,32,FLEN)
NAN_BOXED(1055452139,32,FLEN)
NAN_BOXED(1004545459,32,FLEN)
NAN_BOXED(1116013237,32,FLEN)
NAN_BOXED(1055452139,32,FLEN)
NAN_BOXED(1004545459,32,FLEN)
NAN_BOXED(1116013237,32,FLEN)
NAN_BOXED(1055452139,32,FLEN)
NAN_BOXED(1037350115,32,FLEN)
NAN_BOXED(1090586338,32,FLEN)
NAN_BOXED(1062627774,32,FLEN)
NAN_BOXED(1037350115,32,FLEN)
NAN_BOXED(1090586338,32,FLEN)
NAN_BOXED(1062627774,32,FLEN)
NAN_BOXED(1037350115,32,FLEN)
NAN_BOXED(1090586338,32,FLEN)
NAN_BOXED(1062627774,32,FLEN)
NAN_BOXED(1037350115,32,FLEN)
NAN_BOXED(1090586338,32,FLEN)
NAN_BOXED(1062627774,32,FLEN)
NAN_BOXED(1037350115,32,FLEN)
NAN_BOXED(1090586338,32,FLEN)
NAN_BOXED(1062627774,32,FLEN)
NAN_BOXED(1060695399,32,FLEN)
NAN_BOXED(1056457128,32,FLEN)
NAN_BOXED(1051940202,32,FLEN)
NAN_BOXED(1060695399,32,FLEN)
NAN_BOXED(1056457128,32,FLEN)
NAN_BOXED(1051940202,32,FLEN)
NAN_BOXED(1060695399,32,FLEN)
NAN_BOXED(1056457128,32,FLEN)
NAN_BOXED(1051940202,32,FLEN)
NAN_BOXED(1060695399,32,FLEN)
NAN_BOXED(1056457128,32,FLEN)
NAN_BOXED(1051940202,32,FLEN)
NAN_BOXED(1060695399,32,FLEN)
NAN_BOXED(1056457128,32,FLEN)
NAN_BOXED(1051940202,32,FLEN)
NAN_BOXED(1060013642,32,FLEN)
NAN_BOXED(1056761425,32,FLEN)
NAN_BOXED(1051486518,32,FLEN)
NAN_BOXED(1060013642,32,FLEN)
NAN_BOXED(1056761425,32,FLEN)
NAN_BOXED(1051486518,32,FLEN)
NAN_BOXED(1060013642,32,FLEN)
NAN_BOXED(1056761425,32,FLEN)
NAN_BOXED(1051486518,32,FLEN)
NAN_BOXED(1060013642,32,FLEN)
NAN_BOXED(1056761425,32,FLEN)
NAN_BOXED(1051486518,32,FLEN)
NAN_BOXED(1060013642,32,FLEN)
NAN_BOXED(1056761425,32,FLEN)
NAN_BOXED(1051486518,32,FLEN)
NAN_BOXED(1417804288,32,FLEN)
NAN_BOXED(3219679401,32,FLEN)
NAN_BOXED(1394607301,32,FLEN)
NAN_BOXED(1417804288,32,FLEN)
NAN_BOXED(3219679401,32,FLEN)
NAN_BOXED(1394607301,32,FLEN)
NAN_BOXED(1417804288,32,FLEN)
NAN_BOXED(3219679401,32,FLEN)
NAN_BOXED(1394607301,32,FLEN)
NAN_BOXED(1417804288,32,FLEN)
NAN_BOXED(3219679401,32,FLEN)
NAN_BOXED(1394607301,32,FLEN)
NAN_BOXED(1417804288,32,FLEN)
NAN_BOXED(3219679401,32,FLEN)
NAN_BOXED(1394607301,32,FLEN)
NAN_BOXED(1399125373,32,FLEN)
NAN_BOXED(3231756486,32,FLEN)
NAN_BOXED(1415614703,32,FLEN)
NAN_BOXED(1399125373,32,FLEN)
NAN_BOXED(3231756486,32,FLEN)
NAN_BOXED(1415614703,32,FLEN)
NAN_BOXED(1399125373,32,FLEN)
NAN_BOXED(3231756486,32,FLEN)
NAN_BOXED(1415614703,32,FLEN)
NAN_BOXED(1399125373,32,FLEN)
NAN_BOXED(3231756486,32,FLEN)
NAN_BOXED(1415614703,32,FLEN)
NAN_BOXED(1399125373,32,FLEN)
NAN_BOXED(3231756486,32,FLEN)
NAN_BOXED(1415614703,32,FLEN)
NAN_BOXED(1418238709,32,FLEN)
NAN_BOXED(3217392867,32,FLEN)
NAN_BOXED(1404358336,32,FLEN)
NAN_BOXED(1418238709,32,FLEN)
NAN_BOXED(3217392867,32,FLEN)
NAN_BOXED(1404358336,32,FLEN)
NAN_BOXED(1418238709,32,FLEN)
NAN_BOXED(3217392867,32,FLEN)
NAN_BOXED(1404358336,32,FLEN)
NAN_BOXED(1418238709,32,FLEN)
NAN_BOXED(3217392867,32,FLEN)
NAN_BOXED(1404358336,32,FLEN)
NAN_BOXED(1418238709,32,FLEN)
NAN_BOXED(3217392867,32,FLEN)
NAN_BOXED(1404358336,32,FLEN)
NAN_BOXED(1409728130,32,FLEN)
NAN_BOXED(3228755260,32,FLEN)
NAN_BOXED(1344078724,32,FLEN)
NAN_BOXED(1409728130,32,FLEN)
NAN_BOXED(3228755260,32,FLEN)
NAN_BOXED(1344078724,32,FLEN)
NAN_BOXED(1409728130,32,FLEN)
NAN_BOXED(3228755260,32,FLEN)
NAN_BOXED(1344078724,32,FLEN)
NAN_BOXED(1409728130,32,FLEN)
NAN_BOXED(3228755260,32,FLEN)
NAN_BOXED(1344078724,32,FLEN)
NAN_BOXED(1409728130,32,FLEN)
NAN_BOXED(3228755260,32,FLEN)
NAN_BOXED(1344078724,32,FLEN)
NAN_BOXED(1409820641,32,FLEN)
NAN_BOXED(3223731901,32,FLEN)
NAN_BOXED(1411273492,32,FLEN)
NAN_BOXED(1409820641,32,FLEN)
NAN_BOXED(3223731901,32,FLEN)
NAN_BOXED(1411273492,32,FLEN)
NAN_BOXED(1409820641,32,FLEN)
NAN_BOXED(3223731901,32,FLEN)
NAN_BOXED(1411273492,32,FLEN)
NAN_BOXED(1409820641,32,FLEN)
NAN_BOXED(3223731901,32,FLEN)
NAN_BOXED(1411273492,32,FLEN)
NAN_BOXED(1409820641,32,FLEN)
NAN_BOXED(3223731901,32,FLEN)
NAN_BOXED(1411273492,32,FLEN)
NAN_BOXED(1413928439,32,FLEN)
NAN_BOXED(3213235170,32,FLEN)
NAN_BOXED(1419238543,32,FLEN)
NAN_BOXED(1413928439,32,FLEN)
NAN_BOXED(3213235170,32,FLEN)
NAN_BOXED(1419238543,32,FLEN)
NAN_BOXED(1413928439,32,FLEN)
NAN_BOXED(3213235170,32,FLEN)
NAN_BOXED(1419238543,32,FLEN)
NAN_BOXED(1413928439,32,FLEN)
NAN_BOXED(3213235170,32,FLEN)
NAN_BOXED(1419238543,32,FLEN)
NAN_BOXED(1413928439,32,FLEN)
NAN_BOXED(3213235170,32,FLEN)
NAN_BOXED(1419238543,32,FLEN)
NAN_BOXED(1423592123,32,FLEN)
NAN_BOXED(3198794529,32,FLEN)
NAN_BOXED(1421320845,32,FLEN)
NAN_BOXED(1423592123,32,FLEN)
NAN_BOXED(3198794529,32,FLEN)
NAN_BOXED(1421320845,32,FLEN)
NAN_BOXED(1423592123,32,FLEN)
NAN_BOXED(3198794529,32,FLEN)
NAN_BOXED(1421320845,32,FLEN)
NAN_BOXED(1423592123,32,FLEN)
NAN_BOXED(3198794529,32,FLEN)
NAN_BOXED(1421320845,32,FLEN)
NAN_BOXED(1423592123,32,FLEN)
NAN_BOXED(3198794529,32,FLEN)
NAN_BOXED(1421320845,32,FLEN)
NAN_BOXED(1421714075,32,FLEN)
NAN_BOXED(3212300214,32,FLEN)
NAN_BOXED(1410391166,32,FLEN)
NAN_BOXED(1421714075,32,FLEN)
NAN_BOXED(3212300214,32,FLEN)
NAN_BOXED(1410391166,32,FLEN)
NAN_BOXED(1421714075,32,FLEN)
NAN_BOXED(3212300214,32,FLEN)
NAN_BOXED(1410391166,32,FLEN)
NAN_BOXED(1421714075,32,FLEN)
NAN_BOXED(3212300214,32,FLEN)
NAN_BOXED(1410391166,32,FLEN)
NAN_BOXED(1421714075,32,FLEN)
NAN_BOXED(3212300214,32,FLEN)
NAN_BOXED(1410391166,32,FLEN)
NAN_BOXED(1417526023,32,FLEN)
NAN_BOXED(3205307931,32,FLEN)
NAN_BOXED(1421480211,32,FLEN)
NAN_BOXED(1417526023,32,FLEN)
NAN_BOXED(3205307931,32,FLEN)
NAN_BOXED(1421480211,32,FLEN)
NAN_BOXED(1417526023,32,FLEN)
NAN_BOXED(3205307931,32,FLEN)
NAN_BOXED(1421480211,32,FLEN)
NAN_BOXED(1417526023,32,FLEN)
NAN_BOXED(3205307931,32,FLEN)
NAN_BOXED(1421480211,32,FLEN)
NAN_BOXED(1417526023,32,FLEN)
NAN_BOXED(3205307931,32,FLEN)
NAN_BOXED(1421480211,32,FLEN)
NAN_BOXED(1424281578,32,FLEN)
NAN_BOXED(3210317302,32,FLEN)
NAN_BOXED(1408643967,32,FLEN)
NAN_BOXED(1424281578,32,FLEN)
NAN_BOXED(3210317302,32,FLEN)
NAN_BOXED(1408643967,32,FLEN)
NAN_BOXED(1424281578,32,FLEN)
NAN_BOXED(3210317302,32,FLEN)
NAN_BOXED(1408643967,32,FLEN)
NAN_BOXED(1424281578,32,FLEN)
NAN_BOXED(3210317302,32,FLEN)
NAN_BOXED(1408643967,32,FLEN)
NAN_BOXED(1424281578,32,FLEN)
NAN_BOXED(3210317302,32,FLEN)
NAN_BOXED(1408643967,32,FLEN)
NAN_BOXED(1375117688,32,FLEN)
NAN_BOXED(3262919795,32,FLEN)
NAN_BOXED(1389389924,32,FLEN)
NAN_BOXED(1375117688,32,FLEN)
NAN_BOXED(3262919795,32,FLEN)
NAN_BOXED(1389389924,32,FLEN)
NAN_BOXED(1375117688,32,FLEN)
NAN_BOXED(3262919795,32,FLEN)
NAN_BOXED(1389389924,32,FLEN)
NAN_BOXED(1375117688,32,FLEN)
NAN_BOXED(3262919795,32,FLEN)
NAN_BOXED(1389389924,32,FLEN)
NAN_BOXED(1375117688,32,FLEN)
NAN_BOXED(3262919795,32,FLEN)
NAN_BOXED(1389389924,32,FLEN)
NAN_BOXED(1417932564,32,FLEN)
NAN_BOXED(3195919071,32,FLEN)
NAN_BOXED(1423919867,32,FLEN)
NAN_BOXED(1417932564,32,FLEN)
NAN_BOXED(3195919071,32,FLEN)
NAN_BOXED(1423919867,32,FLEN)
NAN_BOXED(1417932564,32,FLEN)
NAN_BOXED(3195919071,32,FLEN)
NAN_BOXED(1423919867,32,FLEN)
NAN_BOXED(1417932564,32,FLEN)
NAN_BOXED(3195919071,32,FLEN)
NAN_BOXED(1423919867,32,FLEN)
NAN_BOXED(1417932564,32,FLEN)
NAN_BOXED(3195919071,32,FLEN)
NAN_BOXED(1423919867,32,FLEN)
NAN_BOXED(1402800994,32,FLEN)
NAN_BOXED(3216274552,32,FLEN)
NAN_BOXED(1422435910,32,FLEN)
NAN_BOXED(1402800994,32,FLEN)
NAN_BOXED(3216274552,32,FLEN)
NAN_BOXED(1422435910,32,FLEN)
NAN_BOXED(1402800994,32,FLEN)
NAN_BOXED(3216274552,32,FLEN)
NAN_BOXED(1422435910,32,FLEN)
NAN_BOXED(1402800994,32,FLEN)
NAN_BOXED(3216274552,32,FLEN)
NAN_BOXED(1422435910,32,FLEN)
NAN_BOXED(1402800994,32,FLEN)
NAN_BOXED(3216274552,32,FLEN)
NAN_BOXED(1422435910,32,FLEN)
NAN_BOXED(1420041974,32,FLEN)
NAN_BOXED(3193536348,32,FLEN)
NAN_BOXED(1423778823,32,FLEN)
NAN_BOXED(1420041974,32,FLEN)
NAN_BOXED(3193536348,32,FLEN)
NAN_BOXED(1423778823,32,FLEN)
NAN_BOXED(1420041974,32,FLEN)
NAN_BOXED(3193536348,32,FLEN)
NAN_BOXED(1423778823,32,FLEN)
NAN_BOXED(1420041974,32,FLEN)
NAN_BOXED(3193536348,32,FLEN)
NAN_BOXED(1423778823,32,FLEN)
NAN_BOXED(1420041974,32,FLEN)
NAN_BOXED(3193536348,32,FLEN)
NAN_BOXED(1423778823,32,FLEN)
NAN_BOXED(1424403275,32,FLEN)
NAN_BOXED(3212680888,32,FLEN)
NAN_BOXED(1398525326,32,FLEN)
NAN_BOXED(1424403275,32,FLEN)
NAN_BOXED(3212680888,32,FLEN)
NAN_BOXED(1398525326,32,FLEN)
NAN_BOXED(1424403275,32,FLEN)
NAN_BOXED(3212680888,32,FLEN)
NAN_BOXED(1398525326,32,FLEN)
NAN_BOXED(1424403275,32,FLEN)
NAN_BOXED(3212680888,32,FLEN)
NAN_BOXED(1398525326,32,FLEN)
NAN_BOXED(1424403275,32,FLEN)
NAN_BOXED(3212680888,32,FLEN)
NAN_BOXED(1398525326,32,FLEN)
NAN_BOXED(1422602348,32,FLEN)
NAN_BOXED(3213587066,32,FLEN)
NAN_BOXED(1401589444,32,FLEN)
NAN_BOXED(1422602348,32,FLEN)
NAN_BOXED(3213587066,32,FLEN)
NAN_BOXED(1401589444,32,FLEN)
NAN_BOXED(1422602348,32,FLEN)
NAN_BOXED(3213587066,32,FLEN)
NAN_BOXED(1401589444,32,FLEN)
NAN_BOXED(1422602348,32,FLEN)
NAN_BOXED(3213587066,32,FLEN)
NAN_BOXED(1401589444,32,FLEN)
NAN_BOXED(1422602348,32,FLEN)
NAN_BOXED(3213587066,32,FLEN)
NAN_BOXED(1401589444,32,FLEN)
NAN_BOXED(1400053759,32,FLEN)
NAN_BOXED(3231848898,32,FLEN)
NAN_BOXED(1414273683,32,FLEN)
NAN_BOXED(1400053759,32,FLEN)
NAN_BOXED(3231848898,32,FLEN)
NAN_BOXED(1414273683,32,FLEN)
NAN_BOXED(1400053759,32,FLEN)
NAN_BOXED(3231848898,32,FLEN)
NAN_BOXED(1414273683,32,FLEN)
NAN_BOXED(1400053759,32,FLEN)
NAN_BOXED(3231848898,32,FLEN)
NAN_BOXED(1414273683,32,FLEN)
NAN_BOXED(1400053759,32,FLEN)
NAN_BOXED(3231848898,32,FLEN)
NAN_BOXED(1414273683,32,FLEN)
NAN_BOXED(1417298423,32,FLEN)
NAN_BOXED(3220413422,32,FLEN)
NAN_BOXED(1393481629,32,FLEN)
NAN_BOXED(1417298423,32,FLEN)
NAN_BOXED(3220413422,32,FLEN)
NAN_BOXED(1393481629,32,FLEN)
NAN_BOXED(1417298423,32,FLEN)
NAN_BOXED(3220413422,32,FLEN)
NAN_BOXED(1393481629,32,FLEN)
NAN_BOXED(1417298423,32,FLEN)
NAN_BOXED(3220413422,32,FLEN)
NAN_BOXED(1393481629,32,FLEN)
NAN_BOXED(1417298423,32,FLEN)
NAN_BOXED(3220413422,32,FLEN)
NAN_BOXED(1393481629,32,FLEN)
NAN_BOXED(1410147256,32,FLEN)
NAN_BOXED(3225382074,32,FLEN)
NAN_BOXED(1404285756,32,FLEN)
NAN_BOXED(1410147256,32,FLEN)
NAN_BOXED(3225382074,32,FLEN)
NAN_BOXED(1404285756,32,FLEN)
NAN_BOXED(1410147256,32,FLEN)
NAN_BOXED(3225382074,32,FLEN)
NAN_BOXED(1404285756,32,FLEN)
NAN_BOXED(1410147256,32,FLEN)
NAN_BOXED(3225382074,32,FLEN)
NAN_BOXED(1404285756,32,FLEN)
NAN_BOXED(1410147256,32,FLEN)
NAN_BOXED(3225382074,32,FLEN)
NAN_BOXED(1404285756,32,FLEN)
NAN_BOXED(1401563548,32,FLEN)
NAN_BOXED(3235232557,32,FLEN)
NAN_BOXED(1397384636,32,FLEN)
NAN_BOXED(1401563548,32,FLEN)
NAN_BOXED(3235232557,32,FLEN)
NAN_BOXED(1397384636,32,FLEN)
NAN_BOXED(1401563548,32,FLEN)
NAN_BOXED(3235232557,32,FLEN)
NAN_BOXED(1397384636,32,FLEN)
NAN_BOXED(1401563548,32,FLEN)
NAN_BOXED(3235232557,32,FLEN)
NAN_BOXED(1397384636,32,FLEN)
NAN_BOXED(1401563548,32,FLEN)
NAN_BOXED(3235232557,32,FLEN)
NAN_BOXED(1397384636,32,FLEN)
NAN_BOXED(1380101131,32,FLEN)
NAN_BOXED(3255022734,32,FLEN)
NAN_BOXED(1407108425,32,FLEN)
NAN_BOXED(1380101131,32,FLEN)
NAN_BOXED(3255022734,32,FLEN)
NAN_BOXED(1407108425,32,FLEN)
NAN_BOXED(1380101131,32,FLEN)
NAN_BOXED(3255022734,32,FLEN)
NAN_BOXED(1407108425,32,FLEN)
NAN_BOXED(1380101131,32,FLEN)
NAN_BOXED(3255022734,32,FLEN)
NAN_BOXED(1407108425,32,FLEN)
NAN_BOXED(1380101131,32,FLEN)
NAN_BOXED(3255022734,32,FLEN)
NAN_BOXED(1407108425,32,FLEN)
NAN_BOXED(1411879262,32,FLEN)
NAN_BOXED(3219317888,32,FLEN)
NAN_BOXED(1414985778,32,FLEN)
NAN_BOXED(1411879262,32,FLEN)
NAN_BOXED(3219317888,32,FLEN)
NAN_BOXED(1414985778,32,FLEN)
NAN_BOXED(1411879262,32,FLEN)
NAN_BOXED(3219317888,32,FLEN)
NAN_BOXED(1414985778,32,FLEN)
NAN_BOXED(1411879262,32,FLEN)
NAN_BOXED(3219317888,32,FLEN)
NAN_BOXED(1414985778,32,FLEN)
NAN_BOXED(1411879262,32,FLEN)
NAN_BOXED(3219317888,32,FLEN)
NAN_BOXED(1414985778,32,FLEN)
NAN_BOXED(1420937002,32,FLEN)
NAN_BOXED(3205433823,32,FLEN)
NAN_BOXED(1419553508,32,FLEN)
NAN_BOXED(1420937002,32,FLEN)
NAN_BOXED(3205433823,32,FLEN)
NAN_BOXED(1419553508,32,FLEN)
NAN_BOXED(1420937002,32,FLEN)
NAN_BOXED(3205433823,32,FLEN)
NAN_BOXED(1419553508,32,FLEN)
NAN_BOXED(1420937002,32,FLEN)
NAN_BOXED(3205433823,32,FLEN)
NAN_BOXED(1419553508,32,FLEN)
NAN_BOXED(1420937002,32,FLEN)
NAN_BOXED(3205433823,32,FLEN)
NAN_BOXED(1419553508,32,FLEN)
NAN_BOXED(1417265495,32,FLEN)
NAN_BOXED(3216092326,32,FLEN)
NAN_BOXED(1411731909,32,FLEN)
NAN_BOXED(1417265495,32,FLEN)
NAN_BOXED(3216092326,32,FLEN)
NAN_BOXED(1411731909,32,FLEN)
NAN_BOXED(1417265495,32,FLEN)
NAN_BOXED(3216092326,32,FLEN)
NAN_BOXED(1411731909,32,FLEN)
NAN_BOXED(1417265495,32,FLEN)
NAN_BOXED(3216092326,32,FLEN)
NAN_BOXED(1411731909,32,FLEN)
NAN_BOXED(1417265495,32,FLEN)
NAN_BOXED(3216092326,32,FLEN)
NAN_BOXED(1411731909,32,FLEN)
NAN_BOXED(1419598199,32,FLEN)
NAN_BOXED(3215463585,32,FLEN)
NAN_BOXED(1405453531,32,FLEN)
NAN_BOXED(1419598199,32,FLEN)
NAN_BOXED(3215463585,32,FLEN)
NAN_BOXED(1405453531,32,FLEN)
NAN_BOXED(1419598199,32,FLEN)
NAN_BOXED(3215463585,32,FLEN)
NAN_BOXED(1405453531,32,FLEN)
NAN_BOXED(1419598199,32,FLEN)
NAN_BOXED(3215463585,32,FLEN)
NAN_BOXED(1405453531,32,FLEN)
NAN_BOXED(1419598199,32,FLEN)
NAN_BOXED(3215463585,32,FLEN)
NAN_BOXED(1405453531,32,FLEN)
NAN_BOXED(1404409975,32,FLEN)
NAN_BOXED(3231715074,32,FLEN)
NAN_BOXED(1399283965,32,FLEN)
NAN_BOXED(1404409975,32,FLEN)
NAN_BOXED(3231715074,32,FLEN)
NAN_BOXED(1399283965,32,FLEN)
NAN_BOXED(1404409975,32,FLEN)
NAN_BOXED(3231715074,32,FLEN)
NAN_BOXED(1399283965,32,FLEN)
NAN_BOXED(1404409975,32,FLEN)
NAN_BOXED(3231715074,32,FLEN)
NAN_BOXED(1399283965,32,FLEN)
NAN_BOXED(1404409975,32,FLEN)
NAN_BOXED(3231715074,32,FLEN)
NAN_BOXED(1399283965,32,FLEN)
NAN_BOXED(1420514376,32,FLEN)
NAN_BOXED(3215236744,32,FLEN)
NAN_BOXED(1401855808,32,FLEN)
NAN_BOXED(1420514376,32,FLEN)
NAN_BOXED(3215236744,32,FLEN)
NAN_BOXED(1401855808,32,FLEN)
NAN_BOXED(1420514376,32,FLEN)
NAN_BOXED(3215236744,32,FLEN)
NAN_BOXED(1401855808,32,FLEN)
NAN_BOXED(1420514376,32,FLEN)
NAN_BOXED(3215236744,32,FLEN)
NAN_BOXED(1401855808,32,FLEN)
NAN_BOXED(1420514376,32,FLEN)
NAN_BOXED(3215236744,32,FLEN)
NAN_BOXED(1401855808,32,FLEN)
NAN_BOXED(1407463952,32,FLEN)
NAN_BOXED(3225041252,32,FLEN)
NAN_BOXED(1412694255,32,FLEN)
NAN_BOXED(1407463952,32,FLEN)
NAN_BOXED(3225041252,32,FLEN)
NAN_BOXED(1412694255,32,FLEN)
NAN_BOXED(1407463952,32,FLEN)
NAN_BOXED(3225041252,32,FLEN)
NAN_BOXED(1412694255,32,FLEN)
NAN_BOXED(1407463952,32,FLEN)
NAN_BOXED(3225041252,32,FLEN)
NAN_BOXED(1412694255,32,FLEN)
NAN_BOXED(1407463952,32,FLEN)
NAN_BOXED(3225041252,32,FLEN)
NAN_BOXED(1412694255,32,FLEN)
NAN_BOXED(1418747837,32,FLEN)
NAN_BOXED(3206544898,32,FLEN)
NAN_BOXED(1420150089,32,FLEN)
NAN_BOXED(1418747837,32,FLEN)
NAN_BOXED(3206544898,32,FLEN)
NAN_BOXED(1420150089,32,FLEN)
NAN_BOXED(1418747837,32,FLEN)
NAN_BOXED(3206544898,32,FLEN)
NAN_BOXED(1420150089,32,FLEN)
NAN_BOXED(1418747837,32,FLEN)
NAN_BOXED(3206544898,32,FLEN)
NAN_BOXED(1420150089,32,FLEN)
NAN_BOXED(1418747837,32,FLEN)
NAN_BOXED(3206544898,32,FLEN)
NAN_BOXED(1420150089,32,FLEN)
NAN_BOXED(1419223767,32,FLEN)
NAN_BOXED(3207499551,32,FLEN)
NAN_BOXED(1419287179,32,FLEN)
NAN_BOXED(1419223767,32,FLEN)
NAN_BOXED(3207499551,32,FLEN)
NAN_BOXED(1419287179,32,FLEN)
NAN_BOXED(1419223767,32,FLEN)
NAN_BOXED(3207499551,32,FLEN)
NAN_BOXED(1419287179,32,FLEN)
NAN_BOXED(1419223767,32,FLEN)
NAN_BOXED(3207499551,32,FLEN)
NAN_BOXED(1419287179,32,FLEN)
NAN_BOXED(1419223767,32,FLEN)
NAN_BOXED(3207499551,32,FLEN)
NAN_BOXED(1419287179,32,FLEN)
NAN_BOXED(1405436373,32,FLEN)
NAN_BOXED(3202886563,32,FLEN)
NAN_BOXED(1424597847,32,FLEN)
NAN_BOXED(1405436373,32,FLEN)
NAN_BOXED(3202886563,32,FLEN)
NAN_BOXED(1424597847,32,FLEN)
NAN_BOXED(1405436373,32,FLEN)
NAN_BOXED(3202886563,32,FLEN)
NAN_BOXED(1424597847,32,FLEN)
NAN_BOXED(1405436373,32,FLEN)
NAN_BOXED(3202886563,32,FLEN)
NAN_BOXED(1424597847,32,FLEN)
NAN_BOXED(1405436373,32,FLEN)
NAN_BOXED(3202886563,32,FLEN)
NAN_BOXED(1424597847,32,FLEN)
NAN_BOXED(1421652609,32,FLEN)
NAN_BOXED(3209559765,32,FLEN)
NAN_BOXED(1414550127,32,FLEN)
NAN_BOXED(1421652609,32,FLEN)
NAN_BOXED(3209559765,32,FLEN)
NAN_BOXED(1414550127,32,FLEN)
NAN_BOXED(1421652609,32,FLEN)
NAN_BOXED(3209559765,32,FLEN)
NAN_BOXED(1414550127,32,FLEN)
NAN_BOXED(1421652609,32,FLEN)
NAN_BOXED(3209559765,32,FLEN)
NAN_BOXED(1414550127,32,FLEN)
NAN_BOXED(1421652609,32,FLEN)
NAN_BOXED(3209559765,32,FLEN)
NAN_BOXED(1414550127,32,FLEN)
NAN_BOXED(1414203675,32,FLEN)
NAN_BOXED(3213395925,32,FLEN)
NAN_BOXED(1418966894,32,FLEN)
NAN_BOXED(1414203675,32,FLEN)
NAN_BOXED(3213395925,32,FLEN)
NAN_BOXED(1418966894,32,FLEN)
NAN_BOXED(1414203675,32,FLEN)
NAN_BOXED(3213395925,32,FLEN)
NAN_BOXED(1418966894,32,FLEN)
NAN_BOXED(1414203675,32,FLEN)
NAN_BOXED(3213395925,32,FLEN)
NAN_BOXED(1418966894,32,FLEN)
NAN_BOXED(1414203675,32,FLEN)
NAN_BOXED(3213395925,32,FLEN)
NAN_BOXED(1418966894,32,FLEN)
NAN_BOXED(1400157484,32,FLEN)
NAN_BOXED(3225327394,32,FLEN)
NAN_BOXED(1420093576,32,FLEN)
NAN_BOXED(1400157484,32,FLEN)
NAN_BOXED(3225327394,32,FLEN)
NAN_BOXED(1420093576,32,FLEN)
NAN_BOXED(1400157484,32,FLEN)
NAN_BOXED(3225327394,32,FLEN)
NAN_BOXED(1420093576,32,FLEN)
NAN_BOXED(1400157484,32,FLEN)
NAN_BOXED(3225327394,32,FLEN)
NAN_BOXED(1420093576,32,FLEN)
NAN_BOXED(1400157484,32,FLEN)
NAN_BOXED(3225327394,32,FLEN)
NAN_BOXED(1420093576,32,FLEN)
NAN_BOXED(1424434412,32,FLEN)
NAN_BOXED(3207878358,32,FLEN)
NAN_BOXED(1413109572,32,FLEN)
NAN_BOXED(1424434412,32,FLEN)
NAN_BOXED(3207878358,32,FLEN)
NAN_BOXED(1413109572,32,FLEN)
NAN_BOXED(1424434412,32,FLEN)
NAN_BOXED(3207878358,32,FLEN)
NAN_BOXED(1413109572,32,FLEN)
NAN_BOXED(1424434412,32,FLEN)
NAN_BOXED(3207878358,32,FLEN)
NAN_BOXED(1413109572,32,FLEN)
NAN_BOXED(1424434412,32,FLEN)
NAN_BOXED(3207878358,32,FLEN)
NAN_BOXED(1413109572,32,FLEN)
NAN_BOXED(1417640781,32,FLEN)
NAN_BOXED(3217004540,32,FLEN)
NAN_BOXED(1409390248,32,FLEN)
NAN_BOXED(1417640781,32,FLEN)
NAN_BOXED(3217004540,32,FLEN)
NAN_BOXED(1409390248,32,FLEN)
NAN_BOXED(1417640781,32,FLEN)
NAN_BOXED(3217004540,32,FLEN)
NAN_BOXED(1409390248,32,FLEN)
NAN_BOXED(1417640781,32,FLEN)
NAN_BOXED(3217004540,32,FLEN)
NAN_BOXED(1409390248,32,FLEN)
NAN_BOXED(1417640781,32,FLEN)
NAN_BOXED(3217004540,32,FLEN)
NAN_BOXED(1409390248,32,FLEN)
NAN_BOXED(1424546323,32,FLEN)
NAN_BOXED(3207556781,32,FLEN)
NAN_BOXED(1413536898,32,FLEN)
NAN_BOXED(1424546323,32,FLEN)
NAN_BOXED(3207556781,32,FLEN)
NAN_BOXED(1413536898,32,FLEN)
NAN_BOXED(1424546323,32,FLEN)
NAN_BOXED(3207556781,32,FLEN)
NAN_BOXED(1413536898,32,FLEN)
NAN_BOXED(1424546323,32,FLEN)
NAN_BOXED(3207556781,32,FLEN)
NAN_BOXED(1413536898,32,FLEN)
NAN_BOXED(1424546323,32,FLEN)
NAN_BOXED(3207556781,32,FLEN)
NAN_BOXED(1413536898,32,FLEN)
NAN_BOXED(1412998438,32,FLEN)
NAN_BOXED(3209425181,32,FLEN)
NAN_BOXED(1421243281,32,FLEN)
NAN_BOXED(1412998438,32,FLEN)
NAN_BOXED(3209425181,32,FLEN)
NAN_BOXED(1421243281,32,FLEN)
NAN_BOXED(1412998438,32,FLEN)
NAN_BOXED(3209425181,32,FLEN)
NAN_BOXED(1421243281,32,FLEN)
NAN_BOXED(1412998438,32,FLEN)
NAN_BOXED(3209425181,32,FLEN)
NAN_BOXED(1421243281,32,FLEN)
NAN_BOXED(1412998438,32,FLEN)
NAN_BOXED(3209425181,32,FLEN)
NAN_BOXED(1421243281,32,FLEN)
NAN_BOXED(1413395592,32,FLEN)
NAN_BOXED(3196230963,32,FLEN)
NAN_BOXED(1424469198,32,FLEN)
NAN_BOXED(1413395592,32,FLEN)
NAN_BOXED(3196230963,32,FLEN)
NAN_BOXED(1424469198,32,FLEN)
NAN_BOXED(1413395592,32,FLEN)
NAN_BOXED(3196230963,32,FLEN)
NAN_BOXED(1424469198,32,FLEN)
NAN_BOXED(1413395592,32,FLEN)
NAN_BOXED(3196230963,32,FLEN)
NAN_BOXED(1424469198,32,FLEN)
NAN_BOXED(1413395592,32,FLEN)
NAN_BOXED(3196230963,32,FLEN)
NAN_BOXED(1424469198,32,FLEN)
NAN_BOXED(1414696630,32,FLEN)
NAN_BOXED(3212825750,32,FLEN)
NAN_BOXED(1419168383,32,FLEN)
NAN_BOXED(1414696630,32,FLEN)
NAN_BOXED(3212825750,32,FLEN)
NAN_BOXED(1419168383,32,FLEN)
NAN_BOXED(1414696630,32,FLEN)
NAN_BOXED(3212825750,32,FLEN)
NAN_BOXED(1419168383,32,FLEN)
NAN_BOXED(1414696630,32,FLEN)
NAN_BOXED(3212825750,32,FLEN)
NAN_BOXED(1419168383,32,FLEN)
NAN_BOXED(1414696630,32,FLEN)
NAN_BOXED(3212825750,32,FLEN)
NAN_BOXED(1419168383,32,FLEN)
NAN_BOXED(1411128726,32,FLEN)
NAN_BOXED(3215744312,32,FLEN)
NAN_BOXED(1419174726,32,FLEN)
NAN_BOXED(1411128726,32,FLEN)
NAN_BOXED(3215744312,32,FLEN)
NAN_BOXED(1419174726,32,FLEN)
NAN_BOXED(1411128726,32,FLEN)
NAN_BOXED(3215744312,32,FLEN)
NAN_BOXED(1419174726,32,FLEN)
NAN_BOXED(1411128726,32,FLEN)
NAN_BOXED(3215744312,32,FLEN)
NAN_BOXED(1419174726,32,FLEN)
NAN_BOXED(1411128726,32,FLEN)
NAN_BOXED(3215744312,32,FLEN)
NAN_BOXED(1419174726,32,FLEN)
NAN_BOXED(1416742335,32,FLEN)
NAN_BOXED(3220364353,32,FLEN)
NAN_BOXED(1398085743,32,FLEN)
NAN_BOXED(1416742335,32,FLEN)
NAN_BOXED(3220364353,32,FLEN)
NAN_BOXED(1398085743,32,FLEN)
NAN_BOXED(1416742335,32,FLEN)
NAN_BOXED(3220364353,32,FLEN)
NAN_BOXED(1398085743,32,FLEN)
NAN_BOXED(1416742335,32,FLEN)
NAN_BOXED(3220364353,32,FLEN)
NAN_BOXED(1398085743,32,FLEN)
NAN_BOXED(1416742335,32,FLEN)
NAN_BOXED(3220364353,32,FLEN)
NAN_BOXED(1398085743,32,FLEN)
NAN_BOXED(1038314481,32,FLEN)
NAN_BOXED(1089597791,32,FLEN)
NAN_BOXED(1062661899,32,FLEN)
NAN_BOXED(1038314481,32,FLEN)
NAN_BOXED(1089597791,32,FLEN)
NAN_BOXED(1062661899,32,FLEN)
NAN_BOXED(1038314481,32,FLEN)
NAN_BOXED(1089597791,32,FLEN)
NAN_BOXED(1062661899,32,FLEN)
NAN_BOXED(1038314481,32,FLEN)
NAN_BOXED(1089597791,32,FLEN)
NAN_BOXED(1062661899,32,FLEN)
NAN_BOXED(1038314481,32,FLEN)
NAN_BOXED(1089597791,32,FLEN)
NAN_BOXED(1062661899,32,FLEN)
NAN_BOXED(1054422234,32,FLEN)
NAN_BOXED(1061343473,32,FLEN)
NAN_BOXED(1051020117,32,FLEN)
NAN_BOXED(1054422234,32,FLEN)
NAN_BOXED(1061343473,32,FLEN)
NAN_BOXED(1051020117,32,FLEN)
NAN_BOXED(1054422234,32,FLEN)
NAN_BOXED(1061343473,32,FLEN)
NAN_BOXED(1051020117,32,FLEN)
NAN_BOXED(1054422234,32,FLEN)
NAN_BOXED(1061343473,32,FLEN)
NAN_BOXED(1051020117,32,FLEN)
NAN_BOXED(1054422234,32,FLEN)
NAN_BOXED(1061343473,32,FLEN)
NAN_BOXED(1051020117,32,FLEN)
NAN_BOXED(1057490288,32,FLEN)
NAN_BOXED(1067579683,32,FLEN)
NAN_BOXED(1059856279,32,FLEN)
NAN_BOXED(1057490288,32,FLEN)
NAN_BOXED(1067579683,32,FLEN)
NAN_BOXED(1059856279,32,FLEN)
NAN_BOXED(1057490288,32,FLEN)
NAN_BOXED(1067579683,32,FLEN)
NAN_BOXED(1059856279,32,FLEN)
NAN_BOXED(1057490288,32,FLEN)
NAN_BOXED(1067579683,32,FLEN)
NAN_BOXED(1059856279,32,FLEN)
NAN_BOXED(1057490288,32,FLEN)
NAN_BOXED(1067579683,32,FLEN)
NAN_BOXED(1059856279,32,FLEN)
NAN_BOXED(1057742182,32,FLEN)
NAN_BOXED(979046687,32,FLEN)
NAN_BOXED(971988867,32,FLEN)
NAN_BOXED(1057742182,32,FLEN)
NAN_BOXED(979046687,32,FLEN)
NAN_BOXED(971988867,32,FLEN)
NAN_BOXED(1057742182,32,FLEN)
NAN_BOXED(979046687,32,FLEN)
NAN_BOXED(971988867,32,FLEN)
NAN_BOXED(1057742182,32,FLEN)
NAN_BOXED(979046687,32,FLEN)
NAN_BOXED(971988867,32,FLEN)
NAN_BOXED(1057742182,32,FLEN)
NAN_BOXED(979046687,32,FLEN)
NAN_BOXED(971988867,32,FLEN)
NAN_BOXED(1065153630,32,FLEN)
NAN_BOXED(1039023948,32,FLEN)
NAN_BOXED(1038838202,32,FLEN)
NAN_BOXED(1065153630,32,FLEN)
NAN_BOXED(1039023948,32,FLEN)
NAN_BOXED(1038838202,32,FLEN)
NAN_BOXED(1065153630,32,FLEN)
NAN_BOXED(1039023948,32,FLEN)
NAN_BOXED(1038838202,32,FLEN)
NAN_BOXED(1065153630,32,FLEN)
NAN_BOXED(1039023948,32,FLEN)
NAN_BOXED(1038838202,32,FLEN)
NAN_BOXED(1065153630,32,FLEN)
NAN_BOXED(1039023948,32,FLEN)
NAN_BOXED(1038838202,32,FLEN)
NAN_BOXED(1053365991,32,FLEN)
NAN_BOXED(1068048158,32,FLEN)
NAN_BOXED(1057282193,32,FLEN)
NAN_BOXED(1053365991,32,FLEN)
NAN_BOXED(1068048158,32,FLEN)
NAN_BOXED(1057282193,32,FLEN)
NAN_BOXED(1053365991,32,FLEN)
NAN_BOXED(1068048158,32,FLEN)
NAN_BOXED(1057282193,32,FLEN)
NAN_BOXED(1053365991,32,FLEN)
NAN_BOXED(1068048158,32,FLEN)
NAN_BOXED(1057282193,32,FLEN)
NAN_BOXED(1053365991,32,FLEN)
NAN_BOXED(1068048158,32,FLEN)
NAN_BOXED(1057282193,32,FLEN)
NAN_BOXED(1052340109,32,FLEN)
NAN_BOXED(1065264640,32,FLEN)
NAN_BOXED(1052275948,32,FLEN)
NAN_BOXED(1052340109,32,FLEN)
NAN_BOXED(1065264640,32,FLEN)
NAN_BOXED(1052275948,32,FLEN)
NAN_BOXED(1052340109,32,FLEN)
NAN_BOXED(1065264640,32,FLEN)
NAN_BOXED(1052275948,32,FLEN)
NAN_BOXED(1052340109,32,FLEN)
NAN_BOXED(1065264640,32,FLEN)
NAN_BOXED(1052275948,32,FLEN)
NAN_BOXED(1052340109,32,FLEN)
NAN_BOXED(1065264640,32,FLEN)
NAN_BOXED(1052275948,32,FLEN)
NAN_BOXED(1043187322,32,FLEN)
NAN_BOXED(1041076629,32,FLEN)
NAN_BOXED(1019228744,32,FLEN)
NAN_BOXED(1043187322,32,FLEN)
NAN_BOXED(1041076629,32,FLEN)
NAN_BOXED(1019228744,32,FLEN)
NAN_BOXED(1043187322,32,FLEN)
NAN_BOXED(1041076629,32,FLEN)
NAN_BOXED(1019228744,32,FLEN)
NAN_BOXED(1043187322,32,FLEN)
NAN_BOXED(1041076629,32,FLEN)
NAN_BOXED(1019228744,32,FLEN)
NAN_BOXED(1043187322,32,FLEN)
NAN_BOXED(1041076629,32,FLEN)
NAN_BOXED(1019228744,32,FLEN)
NAN_BOXED(1056457002,32,FLEN)
NAN_BOXED(1068187622,32,FLEN)
NAN_BOXED(1059459455,32,FLEN)
NAN_BOXED(1056457002,32,FLEN)
NAN_BOXED(1068187622,32,FLEN)
NAN_BOXED(1059459455,32,FLEN)
NAN_BOXED(1056457002,32,FLEN)
NAN_BOXED(1068187622,32,FLEN)
NAN_BOXED(1059459455,32,FLEN)
NAN_BOXED(1056457002,32,FLEN)
NAN_BOXED(1068187622,32,FLEN)
NAN_BOXED(1059459455,32,FLEN)
NAN_BOXED(1056457002,32,FLEN)
NAN_BOXED(1068187622,32,FLEN)
NAN_BOXED(1059459455,32,FLEN)
NAN_BOXED(1059272371,32,FLEN)
NAN_BOXED(1041207414,32,FLEN)
NAN_BOXED(1035407184,32,FLEN)
NAN_BOXED(1059272371,32,FLEN)
NAN_BOXED(1041207414,32,FLEN)
NAN_BOXED(1035407184,32,FLEN)
NAN_BOXED(1059272371,32,FLEN)
NAN_BOXED(1041207414,32,FLEN)
NAN_BOXED(1035407184,32,FLEN)
NAN_BOXED(1059272371,32,FLEN)
NAN_BOXED(1041207414,32,FLEN)
NAN_BOXED(1035407184,32,FLEN)
NAN_BOXED(1059272371,32,FLEN)
NAN_BOXED(1041207414,32,FLEN)
NAN_BOXED(1035407184,32,FLEN)
NAN_BOXED(1057299552,32,FLEN)
NAN_BOXED(1071958521,32,FLEN)
NAN_BOXED(1064168597,32,FLEN)
NAN_BOXED(1057299552,32,FLEN)
NAN_BOXED(1071958521,32,FLEN)
NAN_BOXED(1064168597,32,FLEN)
NAN_BOXED(1057299552,32,FLEN)
NAN_BOXED(1071958521,32,FLEN)
NAN_BOXED(1064168597,32,FLEN)
NAN_BOXED(1057299552,32,FLEN)
NAN_BOXED(1071958521,32,FLEN)
NAN_BOXED(1064168597,32,FLEN)
NAN_BOXED(1057299552,32,FLEN)
NAN_BOXED(1071958521,32,FLEN)
NAN_BOXED(1064168597,32,FLEN)
NAN_BOXED(1054056875,32,FLEN)
NAN_BOXED(1074334333,32,FLEN)
NAN_BOXED(1063425122,32,FLEN)
NAN_BOXED(1054056875,32,FLEN)
NAN_BOXED(1074334333,32,FLEN)
NAN_BOXED(1063425122,32,FLEN)
NAN_BOXED(1054056875,32,FLEN)
NAN_BOXED(1074334333,32,FLEN)
NAN_BOXED(1063425122,32,FLEN)
NAN_BOXED(1054056875,32,FLEN)
NAN_BOXED(1074334333,32,FLEN)
NAN_BOXED(1063425122,32,FLEN)
NAN_BOXED(1054056875,32,FLEN)
NAN_BOXED(1074334333,32,FLEN)
NAN_BOXED(1063425122,32,FLEN)
NAN_BOXED(1059535623,32,FLEN)
NAN_BOXED(1057544548,32,FLEN)
NAN_BOXED(1051904700,32,FLEN)
NAN_BOXED(1059535623,32,FLEN)
NAN_BOXED(1057544548,32,FLEN)
NAN_BOXED(1051904700,32,FLEN)
NAN_BOXED(1059535623,32,FLEN)
NAN_BOXED(1057544548,32,FLEN)
NAN_BOXED(1051904700,32,FLEN)
NAN_BOXED(1059535623,32,FLEN)
NAN_BOXED(1057544548,32,FLEN)
NAN_BOXED(1051904700,32,FLEN)
NAN_BOXED(1059535623,32,FLEN)
NAN_BOXED(1057544548,32,FLEN)
NAN_BOXED(1051904700,32,FLEN)
NAN_BOXED(1053188976,32,FLEN)
NAN_BOXED(1066999330,32,FLEN)
NAN_BOXED(1055740305,32,FLEN)
NAN_BOXED(1053188976,32,FLEN)
NAN_BOXED(1066999330,32,FLEN)
NAN_BOXED(1055740305,32,FLEN)
NAN_BOXED(1053188976,32,FLEN)
NAN_BOXED(1066999330,32,FLEN)
NAN_BOXED(1055740305,32,FLEN)
NAN_BOXED(1053188976,32,FLEN)
NAN_BOXED(1066999330,32,FLEN)
NAN_BOXED(1055740305,32,FLEN)
NAN_BOXED(1053188976,32,FLEN)
NAN_BOXED(1066999330,32,FLEN)
NAN_BOXED(1055740305,32,FLEN)
NAN_BOXED(1043238118,32,FLEN)
NAN_BOXED(1074988172,32,FLEN)
NAN_BOXED(1053326340,32,FLEN)
NAN_BOXED(1043238118,32,FLEN)
NAN_BOXED(1074988172,32,FLEN)
NAN_BOXED(1053326340,32,FLEN)
NAN_BOXED(1043238118,32,FLEN)
NAN_BOXED(1074988172,32,FLEN)
NAN_BOXED(1053326340,32,FLEN)
NAN_BOXED(1043238118,32,FLEN)
NAN_BOXED(1074988172,32,FLEN)
NAN_BOXED(1053326340,32,FLEN)
NAN_BOXED(1043238118,32,FLEN)
NAN_BOXED(1074988172,32,FLEN)
NAN_BOXED(1053326340,32,FLEN)
NAN_BOXED(1022618600,32,FLEN)
NAN_BOXED(1087018873,32,FLEN)
NAN_BOXED(1044449401,32,FLEN)
NAN_BOXED(1022618600,32,FLEN)
NAN_BOXED(1087018873,32,FLEN)
NAN_BOXED(1044449401,32,FLEN)
NAN_BOXED(1022618600,32,FLEN)
NAN_BOXED(1087018873,32,FLEN)
NAN_BOXED(1044449401,32,FLEN)
NAN_BOXED(1022618600,32,FLEN)
NAN_BOXED(1087018873,32,FLEN)
NAN_BOXED(1044449401,32,FLEN)
NAN_BOXED(1022618600,32,FLEN)
NAN_BOXED(1087018873,32,FLEN)
NAN_BOXED(1044449401,32,FLEN)
NAN_BOXED(1060920585,32,FLEN)
NAN_BOXED(1050150915,32,FLEN)
NAN_BOXED(1046460997,32,FLEN)
NAN_BOXED(1060920585,32,FLEN)
NAN_BOXED(1050150915,32,FLEN)
NAN_BOXED(1046460997,32,FLEN)
NAN_BOXED(1060920585,32,FLEN)
NAN_BOXED(1050150915,32,FLEN)
NAN_BOXED(1046460997,32,FLEN)
NAN_BOXED(1060920585,32,FLEN)
NAN_BOXED(1050150915,32,FLEN)
NAN_BOXED(1046460997,32,FLEN)
NAN_BOXED(1060920585,32,FLEN)
NAN_BOXED(1050150915,32,FLEN)
NAN_BOXED(1046460997,32,FLEN)
NAN_BOXED(1059296948,32,FLEN)
NAN_BOXED(1034919062,32,FLEN)
NAN_BOXED(1029730345,32,FLEN)
NAN_BOXED(1059296948,32,FLEN)
NAN_BOXED(1034919062,32,FLEN)
NAN_BOXED(1029730345,32,FLEN)
NAN_BOXED(1059296948,32,FLEN)
NAN_BOXED(1034919062,32,FLEN)
NAN_BOXED(1029730345,32,FLEN)
NAN_BOXED(1059296948,32,FLEN)
NAN_BOXED(1034919062,32,FLEN)
NAN_BOXED(1029730345,32,FLEN)
NAN_BOXED(1059296948,32,FLEN)
NAN_BOXED(1034919062,32,FLEN)
NAN_BOXED(1029730345,32,FLEN)
NAN_BOXED(1052965264,32,FLEN)
NAN_BOXED(1069782333,32,FLEN)
NAN_BOXED(1058338242,32,FLEN)
NAN_BOXED(1052965264,32,FLEN)
NAN_BOXED(1069782333,32,FLEN)
NAN_BOXED(1058338242,32,FLEN)
NAN_BOXED(1052965264,32,FLEN)
NAN_BOXED(1069782333,32,FLEN)
NAN_BOXED(1058338242,32,FLEN)
NAN_BOXED(1052965264,32,FLEN)
NAN_BOXED(1069782333,32,FLEN)
NAN_BOXED(1058338242,32,FLEN)
NAN_BOXED(1052965264,32,FLEN)
NAN_BOXED(1069782333,32,FLEN)
NAN_BOXED(1058338242,32,FLEN)
NAN_BOXED(1062417032,32,FLEN)
NAN_BOXED(1044171021,32,FLEN)
NAN_BOXED(1042005754,32,FLEN)
NAN_BOXED(1062417032,32,FLEN)
NAN_BOXED(1044171021,32,FLEN)
NAN_BOXED(1042005754,32,FLEN)
NAN_BOXED(1062417032,32,FLEN)
NAN_BOXED(1044171021,32,FLEN)
NAN_BOXED(1042005754,32,FLEN)
NAN_BOXED(1062417032,32,FLEN)
NAN_BOXED(1044171021,32,FLEN)
NAN_BOXED(1042005754,32,FLEN)
NAN_BOXED(1062417032,32,FLEN)
NAN_BOXED(1044171021,32,FLEN)
NAN_BOXED(1042005754,32,FLEN)
NAN_BOXED(1059436208,32,FLEN)
NAN_BOXED(1069720239,32,FLEN)
NAN_BOXED(1065089921,32,FLEN)
NAN_BOXED(1059436208,32,FLEN)
NAN_BOXED(1069720239,32,FLEN)
NAN_BOXED(1065089921,32,FLEN)
NAN_BOXED(1059436208,32,FLEN)
NAN_BOXED(1069720239,32,FLEN)
NAN_BOXED(1065089921,32,FLEN)
NAN_BOXED(1059436208,32,FLEN)
NAN_BOXED(1069720239,32,FLEN)
NAN_BOXED(1065089921,32,FLEN)
NAN_BOXED(1059436208,32,FLEN)
NAN_BOXED(1069720239,32,FLEN)
NAN_BOXED(1065089921,32,FLEN)
NAN_BOXED(1045007353,32,FLEN)
NAN_BOXED(1084327306,32,FLEN)
NAN_BOXED(1065243733,32,FLEN)
NAN_BOXED(1045007353,32,FLEN)
NAN_BOXED(1084327306,32,FLEN)
NAN_BOXED(1065243733,32,FLEN)
NAN_BOXED(1045007353,32,FLEN)
NAN_BOXED(1084327306,32,FLEN)
NAN_BOXED(1065243733,32,FLEN)
NAN_BOXED(1045007353,32,FLEN)
NAN_BOXED(1084327306,32,FLEN)
NAN_BOXED(1065243733,32,FLEN)
NAN_BOXED(1045007353,32,FLEN)
NAN_BOXED(1084327306,32,FLEN)
NAN_BOXED(1065243733,32,FLEN)
NAN_BOXED(1064603287,32,FLEN)
NAN_BOXED(1065478874,32,FLEN)
NAN_BOXED(1064843370,32,FLEN)
NAN_BOXED(1064603287,32,FLEN)
NAN_BOXED(1065478874,32,FLEN)
NAN_BOXED(1064843370,32,FLEN)
NAN_BOXED(1064603287,32,FLEN)
NAN_BOXED(1065478874,32,FLEN)
NAN_BOXED(1064843370,32,FLEN)
NAN_BOXED(1064603287,32,FLEN)
NAN_BOXED(1065478874,32,FLEN)
NAN_BOXED(1064843370,32,FLEN)
NAN_BOXED(1064603287,32,FLEN)
NAN_BOXED(1065478874,32,FLEN)
NAN_BOXED(1064843370,32,FLEN)
NAN_BOXED(1052112434,32,FLEN)
NAN_BOXED(1067300720,32,FLEN)
NAN_BOXED(1054880959,32,FLEN)
NAN_BOXED(1052112434,32,FLEN)
NAN_BOXED(1067300720,32,FLEN)
NAN_BOXED(1054880959,32,FLEN)
NAN_BOXED(1052112434,32,FLEN)
NAN_BOXED(1067300720,32,FLEN)
NAN_BOXED(1054880959,32,FLEN)
NAN_BOXED(1052112434,32,FLEN)
NAN_BOXED(1067300720,32,FLEN)
NAN_BOXED(1054880959,32,FLEN)
NAN_BOXED(1052112434,32,FLEN)
NAN_BOXED(1067300720,32,FLEN)
NAN_BOXED(1054880959,32,FLEN)
NAN_BOXED(1057241577,32,FLEN)
NAN_BOXED(1040244863,32,FLEN)
NAN_BOXED(1032135122,32,FLEN)
NAN_BOXED(1057241577,32,FLEN)
NAN_BOXED(1040244863,32,FLEN)
NAN_BOXED(1032135122,32,FLEN)
NAN_BOXED(1057241577,32,FLEN)
NAN_BOXED(1040244863,32,FLEN)
NAN_BOXED(1032135122,32,FLEN)
NAN_BOXED(1057241577,32,FLEN)
NAN_BOXED(1040244863,32,FLEN)
NAN_BOXED(1032135122,32,FLEN)
NAN_BOXED(1057241577,32,FLEN)
NAN_BOXED(1040244863,32,FLEN)
NAN_BOXED(1032135122,32,FLEN)
NAN_BOXED(1057460164,32,FLEN)
NAN_BOXED(1069547207,32,FLEN)
NAN_BOXED(1061901916,32,FLEN)
NAN_BOXED(1057460164,32,FLEN)
NAN_BOXED(1069547207,32,FLEN)
NAN_BOXED(1061901916,32,FLEN)
NAN_BOXED(1057460164,32,FLEN)
NAN_BOXED(1069547207,32,FLEN)
NAN_BOXED(1061901916,32,FLEN)
NAN_BOXED(1057460164,32,FLEN)
NAN_BOXED(1069547207,32,FLEN)
NAN_BOXED(1061901916,32,FLEN)
NAN_BOXED(1057460164,32,FLEN)
NAN_BOXED(1069547207,32,FLEN)
NAN_BOXED(1061901916,32,FLEN)
NAN_BOXED(996597915,32,FLEN)
NAN_BOXED(1132237191,32,FLEN)
NAN_BOXED(1063503960,32,FLEN)
NAN_BOXED(996597915,32,FLEN)
NAN_BOXED(1132237191,32,FLEN)
NAN_BOXED(1063503960,32,FLEN)
NAN_BOXED(996597915,32,FLEN)
NAN_BOXED(1132237191,32,FLEN)
NAN_BOXED(1063503960,32,FLEN)
NAN_BOXED(996597915,32,FLEN)
NAN_BOXED(1132237191,32,FLEN)
NAN_BOXED(1063503960,32,FLEN)
NAN_BOXED(996597915,32,FLEN)
NAN_BOXED(1132237191,32,FLEN)
NAN_BOXED(1063503960,32,FLEN)
NAN_BOXED(1064520426,32,FLEN)
NAN_BOXED(1062296632,32,FLEN)
NAN_BOXED(1061615566,32,FLEN)
NAN_BOXED(1064520426,32,FLEN)
NAN_BOXED(1062296632,32,FLEN)
NAN_BOXED(1061615566,32,FLEN)
NAN_BOXED(1064520426,32,FLEN)
NAN_BOXED(1062296632,32,FLEN)
NAN_BOXED(1061615566,32,FLEN)
NAN_BOXED(1064520426,32,FLEN)
NAN_BOXED(1062296632,32,FLEN)
NAN_BOXED(1061615566,32,FLEN)
NAN_BOXED(1064520426,32,FLEN)
NAN_BOXED(1062296632,32,FLEN)
NAN_BOXED(1061615566,32,FLEN)
NAN_BOXED(1019229758,32,FLEN)
NAN_BOXED(1103531576,32,FLEN)
NAN_BOXED(1058346173,32,FLEN)
NAN_BOXED(1019229758,32,FLEN)
NAN_BOXED(1103531576,32,FLEN)
NAN_BOXED(1058346173,32,FLEN)
NAN_BOXED(1019229758,32,FLEN)
NAN_BOXED(1103531576,32,FLEN)
NAN_BOXED(1058346173,32,FLEN)
NAN_BOXED(1019229758,32,FLEN)
NAN_BOXED(1103531576,32,FLEN)
NAN_BOXED(1058346173,32,FLEN)
NAN_BOXED(1019229758,32,FLEN)
NAN_BOXED(1103531576,32,FLEN)
NAN_BOXED(1058346173,32,FLEN)
NAN_BOXED(1059365934,32,FLEN)
NAN_BOXED(1065020394,32,FLEN)
NAN_BOXED(1059151886,32,FLEN)
NAN_BOXED(1059365934,32,FLEN)
NAN_BOXED(1065020394,32,FLEN)
NAN_BOXED(1059151886,32,FLEN)
NAN_BOXED(1059365934,32,FLEN)
NAN_BOXED(1065020394,32,FLEN)
NAN_BOXED(1059151886,32,FLEN)
NAN_BOXED(1059365934,32,FLEN)
NAN_BOXED(1065020394,32,FLEN)
NAN_BOXED(1059151886,32,FLEN)
NAN_BOXED(1059365934,32,FLEN)
NAN_BOXED(1065020394,32,FLEN)
NAN_BOXED(1059151886,32,FLEN)
NAN_BOXED(1059139109,32,FLEN)
NAN_BOXED(1053208429,32,FLEN)
NAN_BOXED(1048195145,32,FLEN)
NAN_BOXED(1059139109,32,FLEN)
NAN_BOXED(1053208429,32,FLEN)
NAN_BOXED(1048195145,32,FLEN)
NAN_BOXED(1059139109,32,FLEN)
NAN_BOXED(1053208429,32,FLEN)
NAN_BOXED(1048195145,32,FLEN)
NAN_BOXED(1059139109,32,FLEN)
NAN_BOXED(1053208429,32,FLEN)
NAN_BOXED(1048195145,32,FLEN)
NAN_BOXED(1059139109,32,FLEN)
NAN_BOXED(1053208429,32,FLEN)
NAN_BOXED(1048195145,32,FLEN)
NAN_BOXED(1052335581,32,FLEN)
NAN_BOXED(1073661419,32,FLEN)
NAN_BOXED(1060665969,32,FLEN)
NAN_BOXED(1052335581,32,FLEN)
NAN_BOXED(1073661419,32,FLEN)
NAN_BOXED(1060665969,32,FLEN)
NAN_BOXED(1052335581,32,FLEN)
NAN_BOXED(1073661419,32,FLEN)
NAN_BOXED(1060665969,32,FLEN)
NAN_BOXED(1052335581,32,FLEN)
NAN_BOXED(1073661419,32,FLEN)
NAN_BOXED(1060665969,32,FLEN)
NAN_BOXED(1052335581,32,FLEN)
NAN_BOXED(1073661419,32,FLEN)
NAN_BOXED(1060665969,32,FLEN)
NAN_BOXED(1062158952,32,FLEN)
NAN_BOXED(1047040287,32,FLEN)
NAN_BOXED(1044138413,32,FLEN)
NAN_BOXED(1062158952,32,FLEN)
NAN_BOXED(1047040287,32,FLEN)
NAN_BOXED(1044138413,32,FLEN)
NAN_BOXED(1062158952,32,FLEN)
NAN_BOXED(1047040287,32,FLEN)
NAN_BOXED(1044138413,32,FLEN)
NAN_BOXED(1062158952,32,FLEN)
NAN_BOXED(1047040287,32,FLEN)
NAN_BOXED(1044138413,32,FLEN)
NAN_BOXED(1062158952,32,FLEN)
NAN_BOXED(1047040287,32,FLEN)
NAN_BOXED(1044138413,32,FLEN)
NAN_BOXED(1054900109,32,FLEN)
NAN_BOXED(1066497509,32,FLEN)
NAN_BOXED(1056907078,32,FLEN)
NAN_BOXED(1054900109,32,FLEN)
NAN_BOXED(1066497509,32,FLEN)
NAN_BOXED(1056907078,32,FLEN)
NAN_BOXED(1054900109,32,FLEN)
NAN_BOXED(1066497509,32,FLEN)
NAN_BOXED(1056907078,32,FLEN)
NAN_BOXED(1054900109,32,FLEN)
NAN_BOXED(1066497509,32,FLEN)
NAN_BOXED(1056907078,32,FLEN)
NAN_BOXED(1054900109,32,FLEN)
NAN_BOXED(1066497509,32,FLEN)
NAN_BOXED(1056907078,32,FLEN)
NAN_BOXED(1061984368,32,FLEN)
NAN_BOXED(1022412078,32,FLEN)
NAN_BOXED(1019243648,32,FLEN)
NAN_BOXED(1061984368,32,FLEN)
NAN_BOXED(1022412078,32,FLEN)
NAN_BOXED(1019243648,32,FLEN)
NAN_BOXED(1061984368,32,FLEN)
NAN_BOXED(1022412078,32,FLEN)
NAN_BOXED(1019243648,32,FLEN)
NAN_BOXED(1061984368,32,FLEN)
NAN_BOXED(1022412078,32,FLEN)
NAN_BOXED(1019243648,32,FLEN)
NAN_BOXED(1061984368,32,FLEN)
NAN_BOXED(1022412078,32,FLEN)
NAN_BOXED(1019243648,32,FLEN)
NAN_BOXED(1056007841,32,FLEN)
NAN_BOXED(1043433915,32,FLEN)
NAN_BOXED(1034381781,32,FLEN)
NAN_BOXED(1056007841,32,FLEN)
NAN_BOXED(1043433915,32,FLEN)
NAN_BOXED(1034381781,32,FLEN)
NAN_BOXED(1056007841,32,FLEN)
NAN_BOXED(1043433915,32,FLEN)
NAN_BOXED(1034381781,32,FLEN)
NAN_BOXED(1056007841,32,FLEN)
NAN_BOXED(1043433915,32,FLEN)
NAN_BOXED(1034381781,32,FLEN)
NAN_BOXED(1056007841,32,FLEN)
NAN_BOXED(1043433915,32,FLEN)
NAN_BOXED(1034381781,32,FLEN)
NAN_BOXED(1051129590,32,FLEN)
NAN_BOXED(1066254954,32,FLEN)
NAN_BOXED(1052305829,32,FLEN)
NAN_BOXED(1051129590,32,FLEN)
NAN_BOXED(1066254954,32,FLEN)
NAN_BOXED(1052305829,32,FLEN)
NAN_BOXED(1051129590,32,FLEN)
NAN_BOXED(1066254954,32,FLEN)
NAN_BOXED(1052305829,32,FLEN)
NAN_BOXED(1051129590,32,FLEN)
NAN_BOXED(1066254954,32,FLEN)
NAN_BOXED(1052305829,32,FLEN)
NAN_BOXED(1051129590,32,FLEN)
NAN_BOXED(1066254954,32,FLEN)
NAN_BOXED(1052305829,32,FLEN)
NAN_BOXED(1064944052,32,FLEN)
NAN_BOXED(1035224445,32,FLEN)
NAN_BOXED(1034936319,32,FLEN)
NAN_BOXED(1064944052,32,FLEN)
NAN_BOXED(1035224445,32,FLEN)
NAN_BOXED(1034936319,32,FLEN)
NAN_BOXED(1064944052,32,FLEN)
NAN_BOXED(1035224445,32,FLEN)
NAN_BOXED(1034936319,32,FLEN)
NAN_BOXED(1064944052,32,FLEN)
NAN_BOXED(1035224445,32,FLEN)
NAN_BOXED(1034936319,32,FLEN)
NAN_BOXED(1064944052,32,FLEN)
NAN_BOXED(1035224445,32,FLEN)
NAN_BOXED(1034936319,32,FLEN)
NAN_BOXED(1041557402,32,FLEN)
NAN_BOXED(1087061503,32,FLEN)
NAN_BOXED(1064071022,32,FLEN)
NAN_BOXED(1041557402,32,FLEN)
NAN_BOXED(1087061503,32,FLEN)
NAN_BOXED(1064071022,32,FLEN)
NAN_BOXED(1041557402,32,FLEN)
NAN_BOXED(1087061503,32,FLEN)
NAN_BOXED(1064071022,32,FLEN)
NAN_BOXED(1041557402,32,FLEN)
NAN_BOXED(1087061503,32,FLEN)
NAN_BOXED(1064071022,32,FLEN)
NAN_BOXED(1041557402,32,FLEN)
NAN_BOXED(1087061503,32,FLEN)
NAN_BOXED(1064071022,32,FLEN)
NAN_BOXED(1063983550,32,FLEN)
NAN_BOXED(1052054705,32,FLEN)
NAN_BOXED(1051085876,32,FLEN)
NAN_BOXED(1063983550,32,FLEN)
NAN_BOXED(1052054705,32,FLEN)
NAN_BOXED(1051085876,32,FLEN)
NAN_BOXED(1063983550,32,FLEN)
NAN_BOXED(1052054705,32,FLEN)
NAN_BOXED(1051085876,32,FLEN)
NAN_BOXED(1063983550,32,FLEN)
NAN_BOXED(1052054705,32,FLEN)
NAN_BOXED(1051085876,32,FLEN)
NAN_BOXED(1063983550,32,FLEN)
NAN_BOXED(1052054705,32,FLEN)
NAN_BOXED(1051085876,32,FLEN)
NAN_BOXED(1051337364,32,FLEN)
NAN_BOXED(1075538767,32,FLEN)
NAN_BOXED(1062114434,32,FLEN)
NAN_BOXED(1051337364,32,FLEN)
NAN_BOXED(1075538767,32,FLEN)
NAN_BOXED(1062114434,32,FLEN)
NAN_BOXED(1051337364,32,FLEN)
NAN_BOXED(1075538767,32,FLEN)
NAN_BOXED(1062114434,32,FLEN)
NAN_BOXED(1051337364,32,FLEN)
NAN_BOXED(1075538767,32,FLEN)
NAN_BOXED(1062114434,32,FLEN)
NAN_BOXED(1051337364,32,FLEN)
NAN_BOXED(1075538767,32,FLEN)
NAN_BOXED(1062114434,32,FLEN)
NAN_BOXED(1007956025,32,FLEN)
NAN_BOXED(1120355403,32,FLEN)
NAN_BOXED(1063694858,32,FLEN)
NAN_BOXED(1007956025,32,FLEN)
NAN_BOXED(1120355403,32,FLEN)
NAN_BOXED(1063694858,32,FLEN)
NAN_BOXED(1007956025,32,FLEN)
NAN_BOXED(1120355403,32,FLEN)
NAN_BOXED(1063694858,32,FLEN)
NAN_BOXED(1007956025,32,FLEN)
NAN_BOXED(1120355403,32,FLEN)
NAN_BOXED(1063694858,32,FLEN)
NAN_BOXED(1007956025,32,FLEN)
NAN_BOXED(1120355403,32,FLEN)
NAN_BOXED(1063694858,32,FLEN)
NAN_BOXED(1045667496,32,FLEN)
NAN_BOXED(1063030256,32,FLEN)
NAN_BOXED(1043747245,32,FLEN)
NAN_BOXED(1045667496,32,FLEN)
NAN_BOXED(1063030256,32,FLEN)
NAN_BOXED(1043747245,32,FLEN)
NAN_BOXED(1045667496,32,FLEN)
NAN_BOXED(1063030256,32,FLEN)
NAN_BOXED(1043747245,32,FLEN)
NAN_BOXED(1057215685,32,FLEN)
NAN_BOXED(1068992538,32,FLEN)
NAN_BOXED(1060963935,32,FLEN)
NAN_BOXED(1057215685,32,FLEN)
NAN_BOXED(1068992538,32,FLEN)
NAN_BOXED(1060963935,32,FLEN)
NAN_BOXED(1057215685,32,FLEN)
NAN_BOXED(1068992538,32,FLEN)
NAN_BOXED(1060963935,32,FLEN)
NAN_BOXED(1057215685,32,FLEN)
NAN_BOXED(1068992538,32,FLEN)
NAN_BOXED(1060963935,32,FLEN)
NAN_BOXED(1065345637,32,FLEN)
NAN_BOXED(1051506436,32,FLEN)
NAN_BOXED(1051501323,32,FLEN)
NAN_BOXED(1049252966,32,FLEN)
NAN_BOXED(1074450407,32,FLEN)
NAN_BOXED(1058407340,32,FLEN)
NAN_BOXED(1049252966,32,FLEN)
NAN_BOXED(1074450407,32,FLEN)
NAN_BOXED(1058407340,32,FLEN)
NAN_BOXED(1055679298,32,FLEN)
NAN_BOXED(1060129707,32,FLEN)
NAN_BOXED(1050855965,32,FLEN)
NAN_BOXED(1055679298,32,FLEN)
NAN_BOXED(1060129707,32,FLEN)
NAN_BOXED(1050855965,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_12:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_13:
    .fill 8*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
