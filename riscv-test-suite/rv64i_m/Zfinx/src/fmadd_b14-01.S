
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 04:35:29 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fmadd_b14 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fmadd_b14)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x30, rs2==x29, rs3==x28, rd==x31,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x10896378; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==x31, rs2==x31, rs3==x31, rd==x30,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x31; op3:x31; dest:x30; op1val:0x7f222105; op2val:0x7f222105;
op3val:0x7f222105; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x30, x31, x31, x31, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x28, rs2==x30, rs3==x29, rd==x29,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x28; op2:x30; op3:x29; dest:x29; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x33896378; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x29, x28, x30, x29, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==x27, rs2==x28, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x27; op2:x28; op3:x27; dest:x27; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x7f222105; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x27, x27, x28, x27, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x26, rs2==x27, rs3==x30, rd==x26,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x69 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x26; op2:x27; op3:x30; dest:x26; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x34896378; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x26, x26, x27, x30, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x29, rs2==x26, rs3==x26, rd==x28,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x29; op2:x26; op3:x26; dest:x28; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x7f1186f9; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x28, x29, x26, x26, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==x24, rs2==x25, rs3==x25, rd==x25,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6b and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x24; op2:x25; op3:x25; dest:x25; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x7f1186f9; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x25, x24, x25, x25, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x25, rs2==x24, rs3==x23, rd==x24,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x25; op2:x24; op3:x23; dest:x24; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x36096378; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x24, x25, x24, x23, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rd != rs3, rs1==x23, rs2==x23, rs3==x24, rd==x23,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6d and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x23; op2:x23; op3:x24; dest:x23; op1val:0x7f222105; op2val:0x7f222105;
op3val:0x36896378; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x23, x23, x23, x24, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x21, rs2==x20, rs3==x21, rd==x22,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x21; op2:x20; op3:x21; dest:x22; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x7f222105; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x22, x21, x20, x21, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0x7f222105; op2val:0x7f222105;
op3val:0x7f222105; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x19, x19, x19, x19, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x22, rs2==x22, rs3==x20, rd==x21,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x70 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x22; op2:x22; op3:x20; dest:x21; op1val:0x7f222105; op2val:0x7f222105;
op3val:0x38096378; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x21, x22, x22, x20, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x18, rs2==x21, rs3==x22, rd==x20,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x71 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x18; op2:x21; op3:x22; dest:x20; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x38896378; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x20, x18, x21, x22, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x20, rs2==x17, rs3==x16, rd==x18,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x20; op2:x17; op3:x16; dest:x18; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x39096378; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x18, x20, x17, x16, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x18, rs3==x15, rd==x17,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x73 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x16; op2:x18; op3:x15; dest:x17; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x39896378; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x17, x16, x18, x15, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x17, rs2==x15, rs3==x18, rd==x16,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x74 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x17; op2:x15; op3:x18; dest:x16; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3a096378; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x16, x17, x15, x18, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rs3==x17, rd==x15,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x75 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x14; op2:x16; op3:x17; dest:x15; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3a896378; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x15, x14, x16, x17, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x15, rs2==x13, rs3==x12, rd==x14,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x15; op2:x13; op3:x12; dest:x14; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3b096378; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x14, x15, x13, x12, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x14, rs3==x11, rd==x13,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x12; op2:x14; op3:x11; dest:x13; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3b896378; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x13, x12, x14, x11, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x13, rs2==x11, rs3==x14, rd==x12,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x13; op2:x11; op3:x14; dest:x12; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3c096378; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x12, x13, x11, x14, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x12, rs3==x13, rd==x11,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x10; op2:x12; op3:x13; dest:x11; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3c896378; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x11, x10, x12, x13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x12,test_dataset_1)

inst_21:
// rs1==x11, rs2==x9, rs3==x8, rd==x10,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x11; op2:x9; op3:x8; dest:x10; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3d096378; valaddr_reg:x12; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x10, x11, x9, x8, dyn, 0, 0, x12, 0*FLEN/8, x13, x1, x2)

inst_22:
// rs1==x8, rs2==x10, rs3==x7, rd==x9,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x8; op2:x10; op3:x7; dest:x9; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3d896378; valaddr_reg:x12; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x9, x8, x10, x7, dyn, 0, 0, x12, 3*FLEN/8, x13, x1, x2)

inst_23:
// rs1==x9, rs2==x7, rs3==x10, rd==x8,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x9; op2:x7; op3:x10; dest:x8; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3e096378; valaddr_reg:x12; val_offset:6*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x8, x9, x7, x10, dyn, 0, 0, x12, 6*FLEN/8, x13, x1, x10)
RVTEST_SIGBASE(x9,signature_x9_0)

inst_24:
// rs1==x6, rs2==x8, rs3==x9, rd==x7,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x6; op2:x8; op3:x9; dest:x7; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3e896378; valaddr_reg:x12; val_offset:9*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x7, x6, x8, x9, dyn, 0, 0, x12, 9*FLEN/8, x13, x9, x10)

inst_25:
// rs1==x7, rs2==x5, rs3==x4, rd==x6,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x7; op2:x5; op3:x4; dest:x6; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3f096378; valaddr_reg:x12; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x6, x7, x5, x4, dyn, 0, 0, x12, 12*FLEN/8, x13, x9, x10)

inst_26:
// rs1==x4, rs2==x6, rs3==x3, rd==x5,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x4; op2:x6; op3:x3; dest:x5; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3f896378; valaddr_reg:x12; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x5, x4, x6, x3, dyn, 0, 0, x12, 15*FLEN/8, x13, x9, x10)

inst_27:
// rs1==x5, rs2==x3, rs3==x6, rd==x4,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x5; op2:x3; op3:x6; dest:x4; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x40096378; valaddr_reg:x12; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x4, x5, x3, x6, dyn, 0, 0, x12, 18*FLEN/8, x13, x9, x10)

inst_28:
// rs1==x2, rs2==x4, rs3==x5, rd==x3,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x2; op2:x4; op3:x5; dest:x3; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x40896378; valaddr_reg:x12; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x3, x2, x4, x5, dyn, 0, 0, x12, 21*FLEN/8, x13, x9, x10)

inst_29:
// rs1==x3, rs2==x1, rs3==x0, rd==x2,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x3; op2:x1; op3:x0; dest:x2; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x0; valaddr_reg:x12; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x2, x3, x1, x0, dyn, 0, 0, x12, 24*FLEN/8, x13, x9, x10)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x83 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x41896378; valaddr_reg:x12; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x1, x30, x29, dyn, 0, 0, x12, 27*FLEN/8, x13, x9, x10)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x84 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0x7f1186f9;
op3val:0x42096378; valaddr_reg:x12; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x0, x30, x29, dyn, 0, 0, x12, 30*FLEN/8, x13, x9, x10)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x42896378; valaddr_reg:x12; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x2, x29, dyn, 0, 0, x12, 33*FLEN/8, x13, x9, x10)

inst_33:
// rs2==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x7f222105; op2val:0x0;
op3val:0x43096378; valaddr_reg:x12; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x0, x29, dyn, 0, 0, x12, 36*FLEN/8, x13, x9, x10)

inst_34:
// rs3==x2,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x87 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x2; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x43896378; valaddr_reg:x12; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x2, dyn, 0, 0, x12, 39*FLEN/8, x13, x9, x10)

inst_35:
// rs3==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x88 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x44096378; valaddr_reg:x12; val_offset:42*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x1, dyn, 0, 0, x12, 42*FLEN/8, x13, x9, x10)

inst_36:
// rd==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x44896378; valaddr_reg:x12; val_offset:45*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x1, x31, x30, x29, dyn, 0, 0, x12, 45*FLEN/8, x13, x9, x10)

inst_37:
// rd==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8a and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x45096378; valaddr_reg:x12; val_offset:48*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x0, x31, x30, x29, dyn, 0, 0, x12, 48*FLEN/8, x13, x9, x10)

inst_38:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8b and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x45896378; valaddr_reg:x12; val_offset:51*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 51*FLEN/8, x13, x9, x10)

inst_39:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x46096378; valaddr_reg:x12; val_offset:54*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 54*FLEN/8, x13, x9, x10)

inst_40:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8d and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x46896378; valaddr_reg:x12; val_offset:57*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57*FLEN/8, x13, x9, x10)

inst_41:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x47096378; valaddr_reg:x12; val_offset:60*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 60*FLEN/8, x13, x9, x10)

inst_42:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8f and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x47896378; valaddr_reg:x12; val_offset:63*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 63*FLEN/8, x13, x9, x10)

inst_43:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x90 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x48096378; valaddr_reg:x12; val_offset:66*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 66*FLEN/8, x13, x9, x10)

inst_44:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x91 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x48896378; valaddr_reg:x12; val_offset:69*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 69*FLEN/8, x13, x9, x10)

inst_45:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x92 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x49096378; valaddr_reg:x12; val_offset:72*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 72*FLEN/8, x13, x9, x10)

inst_46:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x49896378; valaddr_reg:x12; val_offset:75*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 75*FLEN/8, x13, x9, x10)

inst_47:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x94 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4a096378; valaddr_reg:x12; val_offset:78*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 78*FLEN/8, x13, x9, x10)

inst_48:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x95 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4a896378; valaddr_reg:x12; val_offset:81*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 81*FLEN/8, x13, x9, x10)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x96 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4b096378; valaddr_reg:x12; val_offset:84*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 84*FLEN/8, x13, x9, x10)

inst_50:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4b896378; valaddr_reg:x12; val_offset:87*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 87*FLEN/8, x13, x9, x10)

inst_51:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4c096378; valaddr_reg:x12; val_offset:90*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 90*FLEN/8, x13, x9, x10)

inst_52:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4c896378; valaddr_reg:x12; val_offset:93*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93*FLEN/8, x13, x9, x10)

inst_53:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4d096378; valaddr_reg:x12; val_offset:96*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 96*FLEN/8, x13, x9, x10)

inst_54:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9b and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4d896378; valaddr_reg:x12; val_offset:99*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 99*FLEN/8, x13, x9, x10)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9c and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4e096378; valaddr_reg:x12; val_offset:102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 102*FLEN/8, x13, x9, x10)

inst_56:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4e896378; valaddr_reg:x12; val_offset:105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 105*FLEN/8, x13, x9, x10)

inst_57:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4f096378; valaddr_reg:x12; val_offset:108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108*FLEN/8, x13, x9, x10)

inst_58:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4f896378; valaddr_reg:x12; val_offset:111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 111*FLEN/8, x13, x9, x10)

inst_59:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x50096378; valaddr_reg:x12; val_offset:114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 114*FLEN/8, x13, x9, x10)

inst_60:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa1 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x50896378; valaddr_reg:x12; val_offset:117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 117*FLEN/8, x13, x9, x10)

inst_61:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa2 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x51096378; valaddr_reg:x12; val_offset:120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 120*FLEN/8, x13, x9, x10)

inst_62:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa3 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x51896378; valaddr_reg:x12; val_offset:123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 123*FLEN/8, x13, x9, x10)

inst_63:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x52096378; valaddr_reg:x12; val_offset:126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 126*FLEN/8, x13, x9, x10)

inst_64:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x52896378; valaddr_reg:x12; val_offset:129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 129*FLEN/8, x13, x9, x10)

inst_65:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x53096378; valaddr_reg:x12; val_offset:132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 132*FLEN/8, x13, x9, x10)

inst_66:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x53896378; valaddr_reg:x12; val_offset:135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 135*FLEN/8, x13, x9, x10)

inst_67:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x54096378; valaddr_reg:x12; val_offset:138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 138*FLEN/8, x13, x9, x10)

inst_68:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x54896378; valaddr_reg:x12; val_offset:141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 141*FLEN/8, x13, x9, x10)

inst_69:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xaa and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x55096378; valaddr_reg:x12; val_offset:144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 144*FLEN/8, x13, x9, x10)

inst_70:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xab and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x55896378; valaddr_reg:x12; val_offset:147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 147*FLEN/8, x13, x9, x10)

inst_71:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xac and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x56096378; valaddr_reg:x12; val_offset:150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 150*FLEN/8, x13, x9, x10)

inst_72:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xee and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x77096378; valaddr_reg:x12; val_offset:153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 153*FLEN/8, x13, x9, x10)

inst_73:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x33096378; valaddr_reg:x12; val_offset:156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 156*FLEN/8, x13, x9, x10)

inst_74:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x34096378; valaddr_reg:x12; val_offset:159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 159*FLEN/8, x13, x9, x10)

inst_75:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x35096378; valaddr_reg:x12; val_offset:162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 162*FLEN/8, x13, x9, x10)

inst_76:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6b and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x35896378; valaddr_reg:x12; val_offset:165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 165*FLEN/8, x13, x9, x10)

inst_77:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6d and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x36896378; valaddr_reg:x12; val_offset:168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 168*FLEN/8, x13, x9, x10)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x37096378; valaddr_reg:x12; val_offset:171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 171*FLEN/8, x13, x9, x10)

inst_79:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x37896378; valaddr_reg:x12; val_offset:174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 174*FLEN/8, x13, x9, x10)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x70 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x38096378; valaddr_reg:x12; val_offset:177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 177*FLEN/8, x13, x9, x10)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x41096378; valaddr_reg:x12; val_offset:180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 180*FLEN/8, x13, x9, x10)

inst_82:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x84 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x42096378; valaddr_reg:x12; val_offset:183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 183*FLEN/8, x13, x9, x10)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x43096378; valaddr_reg:x12; val_offset:186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 186*FLEN/8, x13, x9, x10)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8a and fm3 == 0x096378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x45096378; valaddr_reg:x12; val_offset:189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 189*FLEN/8, x13, x9, x10)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(277439352,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(864641912,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(881419128,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(906584952,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(914973560,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(940139384,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(948527992,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(956916600,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(965305208,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(973693816,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(982082424,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(990471032,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(998859640,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(1007248248,64,FLEN)
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(1015636856,64,FLEN)
test_dataset_1:
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1024025464,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1032414072,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1040802680,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1049191288,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1057579896,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1065968504,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1074357112,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1082745720,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1099522936,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1107911544,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1116300152,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1124688760,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1133077368,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1141465976,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1149854584,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1158243192,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1166631800,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1175020408,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1183409016,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1191797624,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1200186232,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1208574840,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1216963448,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1225352056,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1233740664,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1242129272,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1250517880,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1258906488,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1267295096,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1275683704,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1284072312,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1292460920,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1300849528,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1309238136,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1317626744,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1326015352,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1334403960,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1342792568,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1351181176,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1359569784,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1367958392,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1376347000,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1384735608,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1393124216,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1401512824,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1409901432,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1418290040,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1426678648,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1435067256,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1443455864,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1997103992,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(856253304,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(873030520,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(889807736,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(898196344,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(914973560,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(923362168,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(931750776,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(940139384,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1091134328,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1107911544,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1124688760,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1158243192,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 122*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
