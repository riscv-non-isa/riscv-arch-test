
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 04:36:02 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fmsub.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fmsub_b16 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fmsub_b16)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rd == rs3 != rs2, rs1==x31, rs2==x30, rs3==x31, rd==x31,fs1 == 0 and fe1 == 0xfb and fm1 == 0x4e622b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x22b50f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x31; dest:x31; op1val:0x7dce622b; op2val:0x7f22b50f;
op3val:0x7dce622b; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x31, x30, x31, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rd != rs3, rs1==x29, rs2==x29, rs3==x30, rd==x29,fs1 == 0 and fe1 == 0xfc and fm1 == 0x43e49b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3e3f3f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x29; op2:x29; op3:x30; dest:x29; op1val:0x7e43e49b; op2val:0x7e43e49b;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x29, x29, x29, x30, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x30, rs2==x31, rs3==x28, rd==x28,fs1 == 0 and fe1 == 0xfd and fm1 == 0x7a3631 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x176f54 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x31; op3:x28; dest:x28; op1val:0x7efa3631; op2val:0x7f176f54;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x28, x30, x31, x28, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==x28, rs2==x27, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2e2ab9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x207786 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x28; op2:x27; op3:x27; dest:x27; op1val:0x7cae2ab9; op2val:0x7f207786;
op3val:0x7f207786; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x27, x28, x27, x27, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x27, rs2==x26, rs3==x29, rd==x26,fs1 == 0 and fe1 == 0xfe and fm1 == 0x125b96 and fs2 == 0 and fe2 == 0xf5 and fm2 == 0x4f0890 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x27; op2:x26; op3:x29; dest:x26; op1val:0x7f125b96; op2val:0x7acf0890;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x26, x27, x26, x29, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==x25, rs2==x25, rs3==x25, rd==x30,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a8922 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2fb07b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x25; op2:x25; op3:x25; dest:x30; op1val:0x7f0a8922; op2val:0x7f0a8922;
op3val:0x7f0a8922; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x30, x25, x25, x25, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x26, rs2==x24, rs3==x24, rd==x25,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d12f5 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x3bf1e1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x26; op2:x24; op3:x24; dest:x25; op1val:0x7f2d12f5; op2val:0x7cbbf1e1;
op3val:0x7cbbf1e1; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x25, x26, x24, x24, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x23, rs2==x28, rs3==x26, rd==x24,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4fe702 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x34510e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x23; op2:x28; op3:x26; dest:x24; op1val:0x7ecfe702; op2val:0x7f34510e;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x24, x23, x28, x26, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x22, rs2==x22, rs3==x21, rd==x23,fs1 == 0 and fe1 == 0xfc and fm1 == 0x26592c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2217bf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x22; op2:x22; op3:x21; dest:x23; op1val:0x7e26592c; op2val:0x7e26592c;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x23, x22, x22, x21, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x20, rs2==x23, rs3==x20, rd==x22,fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a425a and fs2 == 0 and fe2 == 0xfd and fm2 == 0x282619 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x20; op2:x23; op3:x20; dest:x22; op1val:0x7e2a425a; op2val:0x7ea82619;
op3val:0x7e2a425a; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x22, x20, x23, x20, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x21, rs2==x20, rs3==x23, rd==x21,fs1 == 0 and fe1 == 0xfc and fm1 == 0x330244 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x314e35 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x21; op2:x20; op3:x23; dest:x21; op1val:0x7e330244; op2val:0x7e314e35;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x21, x21, x20, x23, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0xfd and fm1 == 0x307cdb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5e8d61 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0x7eb07cdb; op2val:0x7eb07cdb;
op3val:0x7eb07cdb; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x19, x19, x19, x19, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x24, rs2==x21, rs3==x22, rd==x20,fs1 == 0 and fe1 == 0xfe and fm1 == 0x20d0a1 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x55adae and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x24; op2:x21; op3:x22; dest:x20; op1val:0x7f20d0a1; op2val:0x7ed5adae;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x20, x24, x21, x22, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x17, rs2==x16, rs3==x15, rd==x18,fs1 == 0 and fe1 == 0xfc and fm1 == 0x0ec6a8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3e917d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x17; op2:x16; op3:x15; dest:x18; op1val:0x7e0ec6a8; op2val:0x7f3e917d;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x18, x17, x16, x15, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x15, rs2==x18, rs3==x16, rd==x17,fs1 == 0 and fe1 == 0xfb and fm1 == 0x39afdd and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7f8288 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x15; op2:x18; op3:x16; dest:x17; op1val:0x7db9afdd; op2val:0x7e7f8288;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x17, x15, x18, x16, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x18, rs2==x15, rs3==x17, rd==x16,fs1 == 0 and fe1 == 0xfe and fm1 == 0x088c7f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x33cbed and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x18; op2:x15; op3:x17; dest:x16; op1val:0x7f088c7f; op2val:0x7f33cbed;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x16, x18, x15, x17, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x16, rs2==x17, rs3==x18, rd==x15,fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f5de9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x00b2db and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x16; op2:x17; op3:x18; dest:x15; op1val:0x7f1f5de9; op2val:0x7f00b2db;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x15, x16, x17, x18, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x13, rs2==x12, rs3==x11, rd==x14,fs1 == 0 and fe1 == 0xfd and fm1 == 0x61a185 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x296f9b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x13; op2:x12; op3:x11; dest:x14; op1val:0x7ee1a185; op2val:0x7f296f9b;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x14, x13, x12, x11, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x11, rs2==x14, rs3==x12, rd==x13,fs1 == 0 and fe1 == 0xfd and fm1 == 0x42076b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x622d46 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x11; op2:x14; op3:x12; dest:x13; op1val:0x7ec2076b; op2val:0x7ee22d46;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x13, x11, x14, x12, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x14, rs2==x11, rs3==x13, rd==x12,fs1 == 0 and fe1 == 0xfc and fm1 == 0x3a6c9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x191a03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x14; op2:x11; op3:x13; dest:x12; op1val:0x7e3a6c9e; op2val:0x7f191a03;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x12, x14, x11, x13, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x12, rs2==x13, rs3==x14, rd==x11,fs1 == 0 and fe1 == 0xfc and fm1 == 0x04dea3 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x52bd1c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x12; op2:x13; op3:x14; dest:x11; op1val:0x7e04dea3; op2val:0x7ed2bd1c;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x11, x12, x13, x14, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x9, rs2==x8, rs3==x7, rd==x10,fs1 == 0 and fe1 == 0xfe and fm1 == 0x018053 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0fe2cd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x9; op2:x8; op3:x7; dest:x10; op1val:0x7f018053; op2val:0x7e8fe2cd;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x10, x9, x8, x7, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x13,test_dataset_1)

inst_22:
// rs1==x7, rs2==x10, rs3==x8, rd==x9,fs1 == 0 and fe1 == 0xfd and fm1 == 0x433c5b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x157602 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x7; op2:x10; op3:x8; dest:x9; op1val:0x7ec33c5b; op2val:0x7f157602;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:0*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x9, x7, x10, x8, dyn, 0, 0, x13, 0*FLEN/8, x14, x1, x12)
RVTEST_SIGBASE(x11,signature_x11_0)

inst_23:
// rs1==x10, rs2==x7, rs3==x9, rd==x8,fs1 == 0 and fe1 == 0xfd and fm1 == 0x17028c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3c0ad4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x10; op2:x7; op3:x9; dest:x8; op1val:0x7e97028c; op2val:0x7ebc0ad4;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:3*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x8, x10, x7, x9, dyn, 0, 0, x13, 3*FLEN/8, x14, x11, x12)

inst_24:
// rs1==x8, rs2==x9, rs3==x10, rd==x7,fs1 == 0 and fe1 == 0xfa and fm1 == 0x0597cb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x070ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x8; op2:x9; op3:x10; dest:x7; op1val:0x7d0597cb; op2val:0x7f070ca2;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:6*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x7, x8, x9, x10, dyn, 0, 0, x13, 6*FLEN/8, x14, x11, x12)

inst_25:
// rs1==x5, rs2==x4, rs3==x3, rd==x6,fs1 == 0 and fe1 == 0xfd and fm1 == 0x63c854 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x17246c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x5; op2:x4; op3:x3; dest:x6; op1val:0x7ee3c854; op2val:0x7e97246c;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:9*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x6, x5, x4, x3, dyn, 0, 0, x13, 9*FLEN/8, x14, x11, x12)

inst_26:
// rs1==x3, rs2==x6, rs3==x4, rd==x5,fs1 == 0 and fe1 == 0xfd and fm1 == 0x40dc0e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3c8f07 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x3; op2:x6; op3:x4; dest:x5; op1val:0x7ec0dc0e; op2val:0x7f3c8f07;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:12*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x5, x3, x6, x4, dyn, 0, 0, x13, 12*FLEN/8, x14, x11, x12)

inst_27:
// rs1==x6, rs2==x3, rs3==x5, rd==x4,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4f368d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x252cf6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x6; op2:x3; op3:x5; dest:x4; op1val:0x7ecf368d; op2val:0x7f252cf6;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:15*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x4, x6, x3, x5, dyn, 0, 0, x13, 15*FLEN/8, x14, x11, x12)

inst_28:
// rs1==x4, rs2==x5, rs3==x6, rd==x3,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4549ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x36dfac and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x4; op2:x5; op3:x6; dest:x3; op1val:0x7ec549ce; op2val:0x7f36dfac;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:18*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x3, x4, x5, x6, dyn, 0, 0, x13, 18*FLEN/8, x14, x11, x12)

inst_29:
// rs1==x2,fs1 == 0 and fe1 == 0xfd and fm1 == 0x304e7b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4ece7f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x2; op2:x30; op3:x29; dest:x31; op1val:0x7eb04e7b; op2val:0x7e4ece7f;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:21*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x2, x30, x29, dyn, 0, 0, x13, 21*FLEN/8, x14, x11, x12)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x37c42d and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x0c4ebc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x7f37c42d; op2val:0x7b8c4ebc;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:24*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x1, x30, x29, dyn, 0, 0, x13, 24*FLEN/8, x14, x11, x12)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d8885 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2a257f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0x7f2a257f;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:27*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x0, x30, x29, dyn, 0, 0, x13, 27*FLEN/8, x14, x11, x12)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b5ad7 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x472c25 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x7f1b5ad7; op2val:0x7ec72c25;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:30*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x2, x29, dyn, 0, 0, x13, 30*FLEN/8, x14, x11, x12)

inst_33:
// rs2==x1,fs1 == 0 and fe1 == 0xfd and fm1 == 0x239e6a and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2c6927 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x1; op3:x29; dest:x31; op1val:0x7ea39e6a; op2val:0x7d2c6927;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:33*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x1, x29, dyn, 0, 0, x13, 33*FLEN/8, x14, x11, x12)

inst_34:
// rs2==x0,fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ae136 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x197a06 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x7edae136; op2val:0x0;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:36*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x0, x29, dyn, 0, 0, x13, 36*FLEN/8, x14, x11, x12)

inst_35:
// rs3==x2,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a3613 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0901e1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x2; dest:x31; op1val:0x7eba3613; op2val:0x7e8901e1;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:39*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x2, dyn, 0, 0, x13, 39*FLEN/8, x14, x11, x12)

inst_36:
// rs3==x1,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4ec69e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x6f6b81 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x7ecec69e; op2val:0x7eef6b81;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:42*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x1, dyn, 0, 0, x13, 42*FLEN/8, x14, x11, x12)

inst_37:
// rs3==x0,fs1 == 0 and fe1 == 0xfd and fm1 == 0x2feda9 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x2be0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x0; dest:x31; op1val:0x7eafeda9; op2val:0x7cabe0d7;
op3val:0x0; valaddr_reg:x13; val_offset:45*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x0, dyn, 0, 0, x13, 45*FLEN/8, x14, x11, x12)

inst_38:
// rd==x2,fs1 == 0 and fe1 == 0xfc and fm1 == 0x081926 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x606ed6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x29; dest:x2; op1val:0x7e081926; op2val:0x7ee06ed6;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:48*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x2, x31, x30, x29, dyn, 0, 0, x13, 48*FLEN/8, x14, x11, x12)

inst_39:
// rd==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x194cde and fs2 == 0 and fe2 == 0xfe and fm2 == 0x190af0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x7f194cde; op2val:0x7f190af0;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:51*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x1, x31, x30, x29, dyn, 0, 0, x13, 51*FLEN/8, x14, x11, x12)

inst_40:
// rd==x0,fs1 == 0 and fe1 == 0xfc and fm1 == 0x4410d9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x219d70 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x7e4410d9; op2val:0x7f219d70;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:54*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x0, x31, x30, x29, dyn, 0, 0, x13, 54*FLEN/8, x14, x11, x12)

inst_41:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fb1fc and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x4d182e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d7fb1fc; op2val:0x7c4d182e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:57*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 57*FLEN/8, x14, x11, x12)

inst_42:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x111299 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3fa956 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f111299; op2val:0x7e3fa956;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:60*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 60*FLEN/8, x14, x11, x12)

inst_43:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fec8a and fs2 == 0 and fe2 == 0xfd and fm2 == 0x044224 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eefec8a; op2val:0x7e844224;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:63*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 63*FLEN/8, x14, x11, x12)

inst_44:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x752f4e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x4a8399 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df52f4e; op2val:0x7eca8399;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:66*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 66*FLEN/8, x14, x11, x12)

inst_45:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x519928 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x08a011 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e519928; op2val:0x7f08a011;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:69*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 69*FLEN/8, x14, x11, x12)

inst_46:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x774c1e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x35ed95 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e774c1e; op2val:0x7eb5ed95;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:72*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 72*FLEN/8, x14, x11, x12)

inst_47:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14701b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x21a1fc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e94701b; op2val:0x7ea1a1fc;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:75*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 75*FLEN/8, x14, x11, x12)

inst_48:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x270ed6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2cc3e0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da70ed6; op2val:0x7f2cc3e0;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:78*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 78*FLEN/8, x14, x11, x12)

inst_49:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2094f5 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x6891ae and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2094f5; op2val:0x7ee891ae;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:81*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 81*FLEN/8, x14, x11, x12)

inst_50:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x7fd01a and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x5b84eb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c7fd01a; op2val:0x7c5b84eb;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:84*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 84*FLEN/8, x14, x11, x12)

inst_51:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a0433 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x761c0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0a0433; op2val:0x7df61c0c;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:87*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 87*FLEN/8, x14, x11, x12)

inst_52:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0235b2 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x512a66 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0235b2; op2val:0x7ed12a66;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:90*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 90*FLEN/8, x14, x11, x12)

inst_53:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b506b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x192dff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b506b; op2val:0x7f192dff;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:93*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 93*FLEN/8, x14, x11, x12)

inst_54:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2b6a13 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7906c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2b6a13; op2val:0x7ef906c5;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:96*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 96*FLEN/8, x14, x11, x12)

inst_55:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d1ff5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x76b77e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edd1ff5; op2val:0x7e76b77e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:99*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 99*FLEN/8, x14, x11, x12)

inst_56:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x34967e and fs2 == 0 and fe2 == 0xfc and fm2 == 0x655450 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d34967e; op2val:0x7e655450;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:102*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 102*FLEN/8, x14, x11, x12)

inst_57:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x281a41 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6b4e0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f281a41; op2val:0x7e6b4e0e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:105*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 105*FLEN/8, x14, x11, x12)

inst_58:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e5bf8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3457e7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6e5bf8; op2val:0x7f3457e7;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:108*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 108*FLEN/8, x14, x11, x12)

inst_59:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1fcf65 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x41cf9e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9fcf65; op2val:0x7e41cf9e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:111*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 111*FLEN/8, x14, x11, x12)

inst_60:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28b6bd and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x68f58b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f28b6bd; op2val:0x7ce8f58b;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:114*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 114*FLEN/8, x14, x11, x12)

inst_61:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x38be1b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x5afcdb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f38be1b; op2val:0x7edafcdb;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:117*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 117*FLEN/8, x14, x11, x12)

inst_62:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x269d2c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3af6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f269d2c; op2val:0x7f3af6ff;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:120*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 120*FLEN/8, x14, x11, x12)

inst_63:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x436852 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1123d8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec36852; op2val:0x7e9123d8;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:123*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 123*FLEN/8, x14, x11, x12)

inst_64:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e0667 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x016ff7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1e0667; op2val:0x7f016ff7;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:126*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 126*FLEN/8, x14, x11, x12)

inst_65:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x151546 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x206546 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e151546; op2val:0x7da06546;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:129*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 129*FLEN/8, x14, x11, x12)

inst_66:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x636240 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3fec54 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e636240; op2val:0x7ebfec54;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:132*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 132*FLEN/8, x14, x11, x12)

inst_67:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2759f0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2cbcfc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2759f0; op2val:0x7f2cbcfc;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:135*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 135*FLEN/8, x14, x11, x12)

inst_68:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a414e and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7bb471 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1a414e; op2val:0x7e7bb471;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:138*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 138*FLEN/8, x14, x11, x12)

inst_69:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x164749 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x023675 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f164749; op2val:0x7e823675;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:141*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 141*FLEN/8, x14, x11, x12)

inst_70:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x017ed0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x20d6ae and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f017ed0; op2val:0x7f20d6ae;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:144*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 144*FLEN/8, x14, x11, x12)

inst_71:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0409cf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x296b63 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8409cf; op2val:0x7f296b63;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:147*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 147*FLEN/8, x14, x11, x12)

inst_72:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a0c29 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3d37b2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eba0c29; op2val:0x7f3d37b2;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:150*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 150*FLEN/8, x14, x11, x12)

inst_73:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b4a10 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x02119e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0b4a10; op2val:0x7d82119e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:153*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 153*FLEN/8, x14, x11, x12)

inst_74:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ee8de and fs2 == 0 and fe2 == 0xfc and fm2 == 0x238f3f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ee8de; op2val:0x7e238f3f;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:156*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 156*FLEN/8, x14, x11, x12)

inst_75:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x667aed and fs2 == 0 and fe2 == 0xfe and fm2 == 0x217f53 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee67aed; op2val:0x7f217f53;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:159*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 159*FLEN/8, x14, x11, x12)

inst_76:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ab65 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5fa740 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e82ab65; op2val:0x7e5fa740;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:162*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 162*FLEN/8, x14, x11, x12)

inst_77:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x67ede5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x373a1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee7ede5; op2val:0x7f373a1e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:165*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 165*FLEN/8, x14, x11, x12)

inst_78:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4fe433 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x53a642 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dcfe433; op2val:0x7ed3a642;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:168*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 168*FLEN/8, x14, x11, x12)

inst_79:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x70766e and fs2 == 0 and fe2 == 0xfa and fm2 == 0x60d9a4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cf0766e; op2val:0x7d60d9a4;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:171*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 171*FLEN/8, x14, x11, x12)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17517f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1f12b9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f17517f; op2val:0x7f1f12b9;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:174*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 174*FLEN/8, x14, x11, x12)

inst_81:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c3b3e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x16201f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eec3b3e; op2val:0x7f16201f;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:177*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 177*FLEN/8, x14, x11, x12)

inst_82:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b2e1a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2bcff9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edb2e1a; op2val:0x7e2bcff9;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:180*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 180*FLEN/8, x14, x11, x12)

inst_83:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cd7ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2b0708 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4cd7ff; op2val:0x7f2b0708;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:183*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 183*FLEN/8, x14, x11, x12)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x319ce6 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2fc88c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f319ce6; op2val:0x7eafc88c;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:186*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 186*FLEN/8, x14, x11, x12)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x171b57 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1eee75 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f171b57; op2val:0x7f1eee75;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:189*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 189*FLEN/8, x14, x11, x12)

inst_86:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00b812 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0cd344 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00b812; op2val:0x7d8cd344;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:192*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 192*FLEN/8, x14, x11, x12)

inst_87:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29ee78 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x75e793 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f29ee78; op2val:0x7cf5e793;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:195*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 195*FLEN/8, x14, x11, x12)

inst_88:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3db9f6 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x21ab51 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3db9f6; op2val:0x7ea1ab51;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:198*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 198*FLEN/8, x14, x11, x12)

inst_89:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x008ceb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x396928 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e008ceb; op2val:0x7e396928;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:201*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 201*FLEN/8, x14, x11, x12)

inst_90:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1df407 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2edde4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9df407; op2val:0x7f2edde4;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:204*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 204*FLEN/8, x14, x11, x12)

inst_91:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a4a6a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2e921d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3a4a6a; op2val:0x7f2e921d;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:207*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 207*FLEN/8, x14, x11, x12)

inst_92:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x429e75 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x372bff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e429e75; op2val:0x7eb72bff;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:210*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 210*FLEN/8, x14, x11, x12)

inst_93:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7a6323 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x736d34 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efa6323; op2val:0x7cf36d34;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:213*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 213*FLEN/8, x14, x11, x12)

inst_94:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ca7f2 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x62fb76 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3ca7f2; op2val:0x7e62fb76;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:216*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 216*FLEN/8, x14, x11, x12)

inst_95:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cbd83 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x709985 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eacbd83; op2val:0x7e709985;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:219*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 219*FLEN/8, x14, x11, x12)

inst_96:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f5f0a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3a3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2f5f0a; op2val:0x7f3a3442;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:222*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 222*FLEN/8, x14, x11, x12)

inst_97:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b0d70 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2544b7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dab0d70; op2val:0x7e2544b7;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:225*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 225*FLEN/8, x14, x11, x12)

inst_98:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c26a4 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x507a89 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c26a4; op2val:0x7ed07a89;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:228*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 228*FLEN/8, x14, x11, x12)

inst_99:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e24f8 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x46fa60 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efe24f8; op2val:0x7e46fa60;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:231*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 231*FLEN/8, x14, x11, x12)

inst_100:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c05c9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3d3883 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6c05c9; op2val:0x7e3d3883;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:234*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 234*FLEN/8, x14, x11, x12)

inst_101:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x57a4e9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3cceee and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e57a4e9; op2val:0x7f3cceee;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:237*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 237*FLEN/8, x14, x11, x12)

inst_102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7a5f3d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x771749 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efa5f3d; op2val:0x7ef71749;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:240*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 240*FLEN/8, x14, x11, x12)

inst_103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x15f19a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6b9c3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e95f19a; op2val:0x7e6b9c3e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:243*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 243*FLEN/8, x14, x11, x12)

inst_104:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7340a9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x22a65d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7340a9; op2val:0x7f22a65d;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:246*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 246*FLEN/8, x14, x11, x12)

inst_105:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x688ebb and fs2 == 0 and fe2 == 0xfd and fm2 == 0x00624f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e688ebb; op2val:0x7e80624f;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:249*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 249*FLEN/8, x14, x11, x12)

inst_106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5495 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x64d97f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ede5495; op2val:0x7ee4d97f;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:252*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 252*FLEN/8, x14, x11, x12)

inst_107:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x7a5b26 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3b3506 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c7a5b26; op2val:0x7e3b3506;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:255*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 255*FLEN/8, x14, x11, x12)

inst_108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53a9a1 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x59dae6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed3a9a1; op2val:0x7d59dae6;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:258*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 258*FLEN/8, x14, x11, x12)

inst_109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73fc99 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5f59d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef3fc99; op2val:0x7e5f59d7;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:261*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 261*FLEN/8, x14, x11, x12)

inst_110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d6988 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x25a0eb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd6988; op2val:0x7f25a0eb;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:264*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 264*FLEN/8, x14, x11, x12)

inst_111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x408c88 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x18a306 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec08c88; op2val:0x7f18a306;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:267*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 267*FLEN/8, x14, x11, x12)

inst_112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x364073 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x050cc8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f364073; op2val:0x7e050cc8;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:270*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 270*FLEN/8, x14, x11, x12)

inst_113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1999 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1dbcd4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3d1999; op2val:0x7f1dbcd4;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:273*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 273*FLEN/8, x14, x11, x12)

inst_114:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x242a08 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x458378 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da42a08; op2val:0x7ec58378;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:276*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 276*FLEN/8, x14, x11, x12)

inst_115:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x616661 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2b9a07 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e616661; op2val:0x7f2b9a07;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:279*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 279*FLEN/8, x14, x11, x12)

inst_116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ecffe and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x432212 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ecffe; op2val:0x7cc32212;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:282*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 282*FLEN/8, x14, x11, x12)

inst_117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d6497 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1a5724 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d6497; op2val:0x7f1a5724;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:285*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 285*FLEN/8, x14, x11, x12)

inst_118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x216afe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0f447a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f216afe; op2val:0x7f0f447a;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:288*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 288*FLEN/8, x14, x11, x12)

inst_119:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x08d2ab and fs2 == 0 and fe2 == 0xfd and fm2 == 0x26220b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e08d2ab; op2val:0x7ea6220b;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:291*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 291*FLEN/8, x14, x11, x12)

inst_120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x093f0c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0036a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f093f0c; op2val:0x7f0036a8;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:294*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 294*FLEN/8, x14, x11, x12)

inst_121:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x45e161 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x38f857 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d45e161; op2val:0x7f38f857;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:297*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 297*FLEN/8, x14, x11, x12)

inst_122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x4fe396 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed2eb6d; op2val:0x7ecfe396;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:300*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 300*FLEN/8, x14, x11, x12)

inst_123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1227 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x17f3eb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eae1227; op2val:0x7e97f3eb;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:303*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 303*FLEN/8, x14, x11, x12)

inst_124:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x461ec9 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x15f740 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e461ec9; op2val:0x7c95f740;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:306*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 306*FLEN/8, x14, x11, x12)

inst_125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2001b0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x5b1c9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea001b0; op2val:0x7edb1c9d;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:309*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 309*FLEN/8, x14, x11, x12)

inst_126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x084c5b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x546786 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e884c5b; op2val:0x7dd46786;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:312*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 312*FLEN/8, x14, x11, x12)

inst_127:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46ffae and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1f27c7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46ffae; op2val:0x7f1f27c7;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:315*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 315*FLEN/8, x14, x11, x12)

inst_128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a03fa and fs2 == 0 and fe2 == 0xfd and fm2 == 0x6b2dc8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a03fa; op2val:0x7eeb2dc8;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:318*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 318*FLEN/8, x14, x11, x12)

inst_129:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x37c24d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x4b057e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bb7c24d; op2val:0x7ecb057e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:321*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 321*FLEN/8, x14, x11, x12)

inst_130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x792786 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x28504e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef92786; op2val:0x7ea8504e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:324*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 324*FLEN/8, x14, x11, x12)

inst_131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c6ed9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x37125d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c6ed9; op2val:0x7e37125d;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:327*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 327*FLEN/8, x14, x11, x12)

inst_132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37de98 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2cd901 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb7de98; op2val:0x7e2cd901;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:330*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 330*FLEN/8, x14, x11, x12)

inst_133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x57324a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2e21e3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed7324a; op2val:0x7f2e21e3;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:333*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 333*FLEN/8, x14, x11, x12)

inst_134:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x535f81 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x783931 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e535f81; op2val:0x7ef83931;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:336*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 336*FLEN/8, x14, x11, x12)

inst_135:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5bce4c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x447d56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d5bce4c; op2val:0x7ec47d56;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:339*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 339*FLEN/8, x14, x11, x12)

inst_136:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x74f142 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1313cc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df4f142; op2val:0x7f1313cc;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:342*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 342*FLEN/8, x14, x11, x12)

inst_137:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6f76c5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x04f88e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6f76c5; op2val:0x7f04f88e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:345*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 345*FLEN/8, x14, x11, x12)

inst_138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0eb32c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x06a571 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8eb32c; op2val:0x7f06a571;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:348*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 348*FLEN/8, x14, x11, x12)

inst_139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64515f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2467bb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee4515f; op2val:0x7f2467bb;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:351*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 351*FLEN/8, x14, x11, x12)

inst_140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3855ca and fs2 == 0 and fe2 == 0xfd and fm2 == 0x5b5a74 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3855ca; op2val:0x7edb5a74;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:354*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 354*FLEN/8, x14, x11, x12)

inst_141:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40750f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x272192 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e40750f; op2val:0x7e272192;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:357*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 357*FLEN/8, x14, x11, x12)

inst_142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x117cee and fs2 == 0 and fe2 == 0xfa and fm2 == 0x20273b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f117cee; op2val:0x7d20273b;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:360*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 360*FLEN/8, x14, x11, x12)

inst_143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09b184 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x059ff9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f09b184; op2val:0x7e859ff9;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:363*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 363*FLEN/8, x14, x11, x12)

inst_144:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7d2144 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0c23da and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfd2144; op2val:0x7f0c23da;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:366*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 366*FLEN/8, x14, x11, x12)

inst_145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c64f9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1b200c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c64f9; op2val:0x7f1b200c;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:369*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 369*FLEN/8, x14, x11, x12)

inst_146:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4d75cc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2f4508 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4d75cc; op2val:0x7f2f4508;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:372*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 372*FLEN/8, x14, x11, x12)

inst_147:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55b2a1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x14f204 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd5b2a1; op2val:0x7f14f204;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:375*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 375*FLEN/8, x14, x11, x12)

inst_148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d54da and fs2 == 0 and fe2 == 0xfe and fm2 == 0x067a70 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efd54da; op2val:0x7f067a70;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:378*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 378*FLEN/8, x14, x11, x12)

inst_149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x317793 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3a78ca and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f317793; op2val:0x7f3a78ca;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:381*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 381*FLEN/8, x14, x11, x12)

inst_150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a1ee0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x263dec and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a1ee0; op2val:0x7ea63dec;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:384*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 384*FLEN/8, x14, x11, x12)
RVTEST_SIGBASE(x11,signature_x11_1)

inst_151:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x79f577 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x420b01 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e79f577; op2val:0x7dc20b01;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:387*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 387*FLEN/8, x14, x11, x12)

inst_152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x38359c and fs2 == 0 and fe2 == 0xfb and fm2 == 0x371220 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f38359c; op2val:0x7db71220;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:390*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 390*FLEN/8, x14, x11, x12)

inst_153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1cc20f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3562e3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9cc20f; op2val:0x7db562e3;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:393*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 393*FLEN/8, x14, x11, x12)

inst_154:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ea152 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0feb32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ea152; op2val:0x7f0feb32;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:396*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 396*FLEN/8, x14, x11, x12)

inst_155:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x11cbce and fs2 == 0 and fe2 == 0xfd and fm2 == 0x287d25 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e11cbce; op2val:0x7ea87d25;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:399*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 399*FLEN/8, x14, x11, x12)

inst_156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70f85f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x688f9b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef0f85f; op2val:0x7ee88f9b;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:402*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 402*FLEN/8, x14, x11, x12)

inst_157:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1eac5a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5ab657 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1eac5a; op2val:0x7e5ab657;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:405*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 405*FLEN/8, x14, x11, x12)

inst_158:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x51d65b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x60ec64 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e51d65b; op2val:0x7ee0ec64;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:408*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 408*FLEN/8, x14, x11, x12)

inst_159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x033cb9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x17e3b0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f033cb9; op2val:0x7f17e3b0;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:411*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 411*FLEN/8, x14, x11, x12)

inst_160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3aef2d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x516cbd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3aef2d; op2val:0x7ed16cbd;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:414*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 414*FLEN/8, x14, x11, x12)

inst_161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x244b40 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x13a932 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f244b40; op2val:0x7f13a932;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:417*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 417*FLEN/8, x14, x11, x12)

inst_162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x132ba2 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5a25ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e932ba2; op2val:0x7e5a25ff;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:420*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 420*FLEN/8, x14, x11, x12)

inst_163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0ca6 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x355b9c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0ca6; op2val:0x7db55b9c;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:423*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 423*FLEN/8, x14, x11, x12)

inst_164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5163e6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3944fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed163e6; op2val:0x7f3944fd;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:426*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 426*FLEN/8, x14, x11, x12)

inst_165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3aea71 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x51cef3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3aea71; op2val:0x7dd1cef3;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:429*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 429*FLEN/8, x14, x11, x12)

inst_166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5bdebb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6f0a86 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edbdebb; op2val:0x7e6f0a86;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:432*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 432*FLEN/8, x14, x11, x12)

inst_167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0904b5 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x4ae73d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8904b5; op2val:0x7ecae73d;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:435*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 435*FLEN/8, x14, x11, x12)

inst_168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29d944 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2ca0c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea9d944; op2val:0x7eaca0c5;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:438*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 438*FLEN/8, x14, x11, x12)

inst_169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x165a4e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x7f165a4e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:441*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 441*FLEN/8, x14, x11, x12)

inst_170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x78b460 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x7ef8b460;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:444*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 444*FLEN/8, x14, x11, x12)

inst_171:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0xf6 and fm2 == 0x3e7f0f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x7b3e7f0f;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:447*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 447*FLEN/8, x14, x11, x12)

inst_172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x29477e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x7f29477e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:450*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 450*FLEN/8, x14, x11, x12)

inst_173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44356e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3d81e9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec4356e; op2val:0x7f3d81e9;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:453*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 453*FLEN/8, x14, x11, x12)

inst_174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203def and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1d0aed and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f203def; op2val:0x7e9d0aed;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:456*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 456*FLEN/8, x14, x11, x12)

inst_175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d9e1a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6a7f9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3d9e1a; op2val:0x7e6a7f9d;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:459*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 459*FLEN/8, x14, x11, x12)

inst_176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6e17ca and fs2 == 0 and fe2 == 0xfd and fm2 == 0x4be31d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eee17ca; op2val:0x7ecbe31d;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:462*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 462*FLEN/8, x14, x11, x12)

inst_177:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x2cfa4f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x15703e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b2cfa4f; op2val:0x7e95703e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:465*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 465*FLEN/8, x14, x11, x12)

inst_178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b9de5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x255bed and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9b9de5; op2val:0x7f255bed;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:468*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 468*FLEN/8, x14, x11, x12)

inst_179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ce53f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2c6607 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0ce53f; op2val:0x7f2c6607;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:471*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 471*FLEN/8, x14, x11, x12)

inst_180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d3294 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0f3001 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd3294; op2val:0x7f0f3001;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:474*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 474*FLEN/8, x14, x11, x12)

inst_181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x791e44 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x71cb9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef91e44; op2val:0x7ef1cb9a;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:477*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 477*FLEN/8, x14, x11, x12)

inst_182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x71a2f8 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x735a70 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef1a2f8; op2val:0x7ef35a70;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:480*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 480*FLEN/8, x14, x11, x12)

inst_183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x163c25 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x227bc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f163c25; op2val:0x7f227bc4;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:483*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 483*FLEN/8, x14, x11, x12)

inst_184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c8ae5 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x687f5f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1c8ae5; op2val:0x7ee87f5f;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:486*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 486*FLEN/8, x14, x11, x12)

inst_185:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x07f099 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4b332e; op2val:0x7f07f099;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:489*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 489*FLEN/8, x14, x11, x12)

inst_186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50fda1 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x699457 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed0fda1; op2val:0x7de99457;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:492*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 492*FLEN/8, x14, x11, x12)

inst_187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a1085 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x335e0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eba1085; op2val:0x7eb35e0e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:495*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 495*FLEN/8, x14, x11, x12)

inst_188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43f2a7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0efdd5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec3f2a7; op2val:0x7f0efdd5;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:498*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 498*FLEN/8, x14, x11, x12)

inst_189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x086359 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7c3a58 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e886359; op2val:0x7efc3a58;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:501*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 501*FLEN/8, x14, x11, x12)

inst_190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c035 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x35a809 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec2c035; op2val:0x7f35a809;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:504*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 504*FLEN/8, x14, x11, x12)

inst_191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a56b5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x044537 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a56b5; op2val:0x7f044537;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:507*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 507*FLEN/8, x14, x11, x12)

inst_192:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x206d52 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1f851e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e206d52; op2val:0x7e1f851e;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:510*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 510*FLEN/8, x14, x11, x12)

inst_193:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ea528 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x660bc8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ea528; op2val:0x7d660bc8;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:513*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 513*FLEN/8, x14, x11, x12)

inst_194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e86e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0d6455 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec8e86e; op2val:0x7e8d6455;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:516*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 516*FLEN/8, x14, x11, x12)

inst_195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d738a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0172fc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0d738a; op2val:0x7e0172fc;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:519*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 519*FLEN/8, x14, x11, x12)

inst_196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08fada and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1c7b0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f08fada; op2val:0x7f1c7b0c;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:522*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 522*FLEN/8, x14, x11, x12)

inst_197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a1ca2 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x324371 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea1ca2; op2val:0x7e324371;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:525*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 525*FLEN/8, x14, x11, x12)

inst_198:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x045ff0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x17a2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e045ff0; op2val:0x7f17a2a8;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:528*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 528*FLEN/8, x14, x11, x12)

inst_199:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7d2a8e and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2abd9b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7d2a8e; op2val:0x7e2abd9b;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:531*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 531*FLEN/8, x14, x11, x12)

inst_200:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4e622b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x22b50f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dce622b; op2val:0x7f22b50f;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:534*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 534*FLEN/8, x14, x11, x12)

inst_201:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43e49b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3e3f3f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e43e49b; op2val:0x7ebe3f3f;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:537*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 537*FLEN/8, x14, x11, x12)

inst_202:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2e2ab9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x207786 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cae2ab9; op2val:0x7f207786;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:540*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 540*FLEN/8, x14, x11, x12)

inst_203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a8922 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2fb07b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0a8922; op2val:0x7e2fb07b;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:543*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 543*FLEN/8, x14, x11, x12)

inst_204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d12f5 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x3bf1e1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d12f5; op2val:0x7cbbf1e1;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:546*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 546*FLEN/8, x14, x11, x12)

inst_205:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26592c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2217bf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e26592c; op2val:0x7ea217bf;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:549*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 549*FLEN/8, x14, x11, x12)

inst_206:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a425a and fs2 == 0 and fe2 == 0xfd and fm2 == 0x282619 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2a425a; op2val:0x7ea82619;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:552*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 552*FLEN/8, x14, x11, x12)

inst_207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x307cdb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5e8d61 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb07cdb; op2val:0x7e5e8d61;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:555*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 555*FLEN/8, x14, x11, x12)

inst_208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d8885 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2a257f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1d8885; op2val:0x7f2a257f;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:558*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 558*FLEN/8, x14, x11, x12)

inst_209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ae136 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x197a06 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edae136; op2val:0x7e197a06;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:561*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 561*FLEN/8, x14, x11, x12)

inst_210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2feda9 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x2be0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eafeda9; op2val:0x7cabe0d7;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:564*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 564*FLEN/8, x14, x11, x12)

inst_211:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4410d9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x219d70 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4410d9; op2val:0x7f219d70;
op3val:0x7f7fffff; valaddr_reg:x13; val_offset:567*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 567*FLEN/8, x14, x11, x12)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2110677547,64,FLEN)
NAN_BOXED(2132981007,64,FLEN)
NAN_BOXED(2110677547,64,FLEN)
NAN_BOXED(2118378651,64,FLEN)
NAN_BOXED(2118378651,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2130327089,64,FLEN)
NAN_BOXED(2132242260,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2091788985,64,FLEN)
NAN_BOXED(2132834182,64,FLEN)
NAN_BOXED(2132834182,64,FLEN)
NAN_BOXED(2131909526,64,FLEN)
NAN_BOXED(2060388496,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2131396898,64,FLEN)
NAN_BOXED(2131396898,64,FLEN)
NAN_BOXED(2131396898,64,FLEN)
NAN_BOXED(2133660405,64,FLEN)
NAN_BOXED(2092691937,64,FLEN)
NAN_BOXED(2092691937,64,FLEN)
NAN_BOXED(2127554306,64,FLEN)
NAN_BOXED(2134135054,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2116442412,64,FLEN)
NAN_BOXED(2116442412,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2116698714,64,FLEN)
NAN_BOXED(2124949017,64,FLEN)
NAN_BOXED(2116698714,64,FLEN)
NAN_BOXED(2117272132,64,FLEN)
NAN_BOXED(2117160501,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2125495515,64,FLEN)
NAN_BOXED(2125495515,64,FLEN)
NAN_BOXED(2125495515,64,FLEN)
NAN_BOXED(2132856993,64,FLEN)
NAN_BOXED(2127932846,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2114897576,64,FLEN)
NAN_BOXED(2134806909,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2109321181,64,FLEN)
NAN_BOXED(2122285704,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2131266687,64,FLEN)
NAN_BOXED(2134100973,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2132762089,64,FLEN)
NAN_BOXED(2130752219,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2128716165,64,FLEN)
NAN_BOXED(2133421979,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2126645099,64,FLEN)
NAN_BOXED(2128751942,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2117758110,64,FLEN)
NAN_BOXED(2132351491,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2114248355,64,FLEN)
NAN_BOXED(2127740188,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2130804819,64,FLEN)
NAN_BOXED(2123358925,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
test_dataset_1:
NAN_BOXED(2126724187,32,FLEN)
NAN_BOXED(2132112898,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2123825804,32,FLEN)
NAN_BOXED(2126252756,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097518539,32,FLEN)
NAN_BOXED(2131168418,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128857172,32,FLEN)
NAN_BOXED(2123834476,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126568462,32,FLEN)
NAN_BOXED(2134675207,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2127509133,32,FLEN)
NAN_BOXED(2133142774,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126858702,32,FLEN)
NAN_BOXED(2134302636,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2125483643,32,FLEN)
NAN_BOXED(2119093887,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134361133,32,FLEN)
NAN_BOXED(2072792764,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2133468543,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132499159,32,FLEN)
NAN_BOXED(2126982181,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2124652138,32,FLEN)
NAN_BOXED(2100062503,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128273718,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126132755,32,FLEN)
NAN_BOXED(2122908129,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2127480478,32,FLEN)
NAN_BOXED(2129619841,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2125458857,32,FLEN)
NAN_BOXED(2091638999,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2114459942,32,FLEN)
NAN_BOXED(2128637654,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132364510,32,FLEN)
NAN_BOXED(2132347632,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118389977,32,FLEN)
NAN_BOXED(2132909424,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105520636,32,FLEN)
NAN_BOXED(2085427246,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131825305,32,FLEN)
NAN_BOXED(2118101334,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2129652874,32,FLEN)
NAN_BOXED(2122596900,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113220430,32,FLEN)
NAN_BOXED(2127201177,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2119276840,32,FLEN)
NAN_BOXED(2131271697,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121747486,32,FLEN)
NAN_BOXED(2125852053,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2123657243,32,FLEN)
NAN_BOXED(2124521980,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2108100310,32,FLEN)
NAN_BOXED(2133640160,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2116064501,32,FLEN)
NAN_BOXED(2129170862,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2088751130,32,FLEN)
NAN_BOXED(2086372587,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131362867,32,FLEN)
NAN_BOXED(2113281036,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130851250,32,FLEN)
NAN_BOXED(2127637094,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134593643,32,FLEN)
NAN_BOXED(2132356607,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2116774419,32,FLEN)
NAN_BOXED(2130249413,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128420853,32,FLEN)
NAN_BOXED(2121709438,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2100598398,32,FLEN)
NAN_BOXED(2120569936,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133334593,32,FLEN)
NAN_BOXED(2120961550,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121161720,32,FLEN)
NAN_BOXED(2134136807,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2124402533,32,FLEN)
NAN_BOXED(2118242206,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133374653,32,FLEN)
NAN_BOXED(2095641995,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134425115,32,FLEN)
NAN_BOXED(2128280795,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133237036,32,FLEN)
NAN_BOXED(2134570751,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126735442,32,FLEN)
NAN_BOXED(2123441112,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2115896935,32,FLEN)
NAN_BOXED(2130800631,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2115310918,32,FLEN)
NAN_BOXED(2107663686,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2120442432,32,FLEN)
NAN_BOXED(2126507092,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133285360,32,FLEN)
NAN_BOXED(2133638396,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2115649870,32,FLEN)
NAN_BOXED(2122036337,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132166473,32,FLEN)
NAN_BOXED(2122462837,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130804432,32,FLEN)
NAN_BOXED(2132858542,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122582479,32,FLEN)
NAN_BOXED(2133420899,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126122025,32,FLEN)
NAN_BOXED(2134718386,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131446288,32,FLEN)
NAN_BOXED(2105676190,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133780702,32,FLEN)
NAN_BOXED(2116259647,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2129033965,32,FLEN)
NAN_BOXED(2132901715,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122492773,32,FLEN)
NAN_BOXED(2120197952,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2129128933,32,FLEN)
NAN_BOXED(2134325790,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2110776371,32,FLEN)
NAN_BOXED(2127799874,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2096133742,32,FLEN)
NAN_BOXED(2103499172,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132234623,32,FLEN)
NAN_BOXED(2132742841,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2129410878,32,FLEN)
NAN_BOXED(2132156447,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128293402,32,FLEN)
NAN_BOXED(2116800505,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118965247,32,FLEN)
NAN_BOXED(2133526280,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133957862,32,FLEN)
NAN_BOXED(2125449356,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132220759,32,FLEN)
NAN_BOXED(2132733557,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130753554,32,FLEN)
NAN_BOXED(2106381124,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133454456,32,FLEN)
NAN_BOXED(2096490387,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134751734,32,FLEN)
NAN_BOXED(2124524369,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113965291,32,FLEN)
NAN_BOXED(2117691688,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2107503623,32,FLEN)
NAN_BOXED(2133777892,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134526570,32,FLEN)
NAN_BOXED(2133758493,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118295157,32,FLEN)
NAN_BOXED(2125933567,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130338595,32,FLEN)
NAN_BOXED(2096327988,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134681586,32,FLEN)
NAN_BOXED(2120416118,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2125249923,32,FLEN)
NAN_BOXED(2121308549,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133810954,32,FLEN)
NAN_BOXED(2134520898,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2108362096,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134648484,32,FLEN)
NAN_BOXED(2127592073,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130584824,32,FLEN)
NAN_BOXED(2118580832,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121008585,32,FLEN)
NAN_BOXED(2117941379,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2119673065,32,FLEN)
NAN_BOXED(2134691566,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130337597,32,FLEN)
NAN_BOXED(2130122569,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2123755930,32,FLEN)
NAN_BOXED(2120981566,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121482409,32,FLEN)
NAN_BOXED(2132977245,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2120781499,32,FLEN)
NAN_BOXED(2122342991,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128499861,32,FLEN)
NAN_BOXED(2128927103,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2088393510,32,FLEN)
NAN_BOXED(2117809414,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2127800737,32,FLEN)
NAN_BOXED(2103040742,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2129919129,32,FLEN)
NAN_BOXED(2120178135,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126342536,32,FLEN)
NAN_BOXED(2133172459,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126548104,32,FLEN)
NAN_BOXED(2132321030,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134261875,32,FLEN)
NAN_BOXED(2114260168,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134710681,32,FLEN)
NAN_BOXED(2132655316,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2107910664,32,FLEN)
NAN_BOXED(2126873464,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2120312417,32,FLEN)
NAN_BOXED(2133563911,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133774334,32,FLEN)
NAN_BOXED(2093163026,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133681303,32,FLEN)
NAN_BOXED(2132432676,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132896510,32,FLEN)
NAN_BOXED(2131707002,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2114507435,32,FLEN)
NAN_BOXED(2124816907,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131312396,32,FLEN)
NAN_BOXED(2130720424,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2101731681,32,FLEN)
NAN_BOXED(2134440023,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(2127553430,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2125337127,32,FLEN)
NAN_BOXED(2123887595,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118524617,32,FLEN)
NAN_BOXED(2090202944,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2124415408,32,FLEN)
NAN_BOXED(2128288925,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122861659,32,FLEN)
NAN_BOXED(2111072134,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118582190,32,FLEN)
NAN_BOXED(2132748231,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2124022778,32,FLEN)
NAN_BOXED(2129341896,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2075640397,32,FLEN)
NAN_BOXED(2127234430,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130257798,32,FLEN)
NAN_BOXED(2124959822,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131521241,32,FLEN)
NAN_BOXED(2117538397,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2125979288,32,FLEN)
NAN_BOXED(2116868353,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128032330,32,FLEN)
NAN_BOXED(2133729763,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2119393153,32,FLEN)
NAN_BOXED(2130196785,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2103168588,32,FLEN)
NAN_BOXED(2126806358,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113204546,32,FLEN)
NAN_BOXED(2131956684,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121234117,32,FLEN)
NAN_BOXED(2131032206,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2123281196,32,FLEN)
NAN_BOXED(2131142001,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128892255,32,FLEN)
NAN_BOXED(2133092283,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134398410,32,FLEN)
NAN_BOXED(2128304756,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118153487,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131852526,32,FLEN)
NAN_BOXED(2099259195,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131341700,32,FLEN)
NAN_BOXED(2122686457,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113741124,32,FLEN)
NAN_BOXED(2131502042,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134664441,32,FLEN)
NAN_BOXED(2132484108,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2119005644,32,FLEN)
NAN_BOXED(2133804296,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2111156897,32,FLEN)
NAN_BOXED(2132079108,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130531546,32,FLEN)
NAN_BOXED(2131130992,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133948307,32,FLEN)
NAN_BOXED(2134538442,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132418272,32,FLEN)
NAN_BOXED(2124824044,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121921911,32,FLEN)
NAN_BOXED(2109868801,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134390172,32,FLEN)
NAN_BOXED(2109149728,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2124202511,32,FLEN)
NAN_BOXED(2109039331,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118033746,32,FLEN)
NAN_BOXED(2131749682,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2115095502,32,FLEN)
NAN_BOXED(2124971301,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2129721439,32,FLEN)
NAN_BOXED(2129170331,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2115939418,32,FLEN)
NAN_BOXED(2119874135,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2119292507,32,FLEN)
NAN_BOXED(2128669796,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130918585,32,FLEN)
NAN_BOXED(2132272048,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134568749,32,FLEN)
NAN_BOXED(2127654077,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133084992,32,FLEN)
NAN_BOXED(2131994930,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2123574178,32,FLEN)
NAN_BOXED(2119837183,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132479142,32,FLEN)
NAN_BOXED(2109037468,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2127651814,32,FLEN)
NAN_BOXED(2134459645,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134567537,32,FLEN)
NAN_BOXED(2110902003,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128338619,32,FLEN)
NAN_BOXED(2121206406,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122908853,32,FLEN)
NAN_BOXED(2127226685,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2125060420,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126787950,32,FLEN)
NAN_BOXED(2134737385,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132819439,32,FLEN)
NAN_BOXED(2124221165,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134744602,32,FLEN)
NAN_BOXED(2120908701,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2129532874,32,FLEN)
NAN_BOXED(2127291165,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2066545231,32,FLEN)
NAN_BOXED(2123722814,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2124127717,32,FLEN)
NAN_BOXED(2133154797,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131551551,32,FLEN)
NAN_BOXED(2133616135,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126328468,32,FLEN)
NAN_BOXED(2131701761,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130255428,32,FLEN)
NAN_BOXED(2129775514,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2129765112,32,FLEN)
NAN_BOXED(2129877616,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132163621,32,FLEN)
NAN_BOXED(2132966340,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132576997,32,FLEN)
NAN_BOXED(2129166175,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(2131226777,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2127625633,32,FLEN)
NAN_BOXED(2112459863,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126123141,32,FLEN)
NAN_BOXED(2125684238,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126770855,32,FLEN)
NAN_BOXED(2131688917,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122867545,32,FLEN)
NAN_BOXED(2130459224,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126692405,32,FLEN)
NAN_BOXED(2134222857,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2124043957,32,FLEN)
NAN_BOXED(2130986295,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2116054354,32,FLEN)
NAN_BOXED(2115994910,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2119083304,32,FLEN)
NAN_BOXED(2103839688,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2127095918,32,FLEN)
NAN_BOXED(2123195477,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131587978,32,FLEN)
NAN_BOXED(2114024188,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131294938,32,FLEN)
NAN_BOXED(2132572940,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2129271970,32,FLEN)
NAN_BOXED(2117223281,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2114215920,32,FLEN)
NAN_BOXED(2132255400,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122132110,32,FLEN)
NAN_BOXED(2116730267,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2110677547,32,FLEN)
NAN_BOXED(2132981007,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118378651,32,FLEN)
NAN_BOXED(2126397247,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2091788985,32,FLEN)
NAN_BOXED(2132834182,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131396898,32,FLEN)
NAN_BOXED(2117054587,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133660405,32,FLEN)
NAN_BOXED(2092691937,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2116442412,32,FLEN)
NAN_BOXED(2124552127,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2116698714,32,FLEN)
NAN_BOXED(2124949017,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2125495515,32,FLEN)
NAN_BOXED(2120125793,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132641925,32,FLEN)
NAN_BOXED(2133468543,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128273718,32,FLEN)
NAN_BOXED(2115598854,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2125458857,32,FLEN)
NAN_BOXED(2091638999,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118389977,32,FLEN)
NAN_BOXED(2132909424,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 46*((SIGALIGN)/4),4,0xdeadbeef


signature_x11_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x11_1:
    .fill 122*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
