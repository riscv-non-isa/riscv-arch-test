
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 07:40:16 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fnmsub.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fnmsub_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fnmsub_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x30, rs2==x31, rs3==x29, rd==x31,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x511111 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000030 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x31; op3:x29; dest:x31; op1val:0x1e; op2val:0xbfd11111;
op3val:0x30; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x31, x29, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x29, rs2==x30, rs3==x31, rd==x29,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4687d6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000011 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x29; op2:x30; op3:x31; dest:x29; op1val:0x31; op2val:0xbec687d6;
op3val:0x11; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x29, x29, x30, x31, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x28, rs2==x28, rs3==x30, rd==x28,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000019 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x733333 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x28; op2:x28; op3:x30; dest:x28; op1val:0x19; op2val:0x19;
op3val:0x5b; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x28, x28, x28, x30, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==x31, rs2==x27, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000006 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4aaaab and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x31; op2:x27; op3:x27; dest:x27; op1val:0x6; op2val:0xc04aaaab;
op3val:0xc04aaaab; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x27, x31, x27, x27, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 == rs3 != rd, rs1==x26, rs2==x26, rs3==x26, rd==x30,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000012 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2aaaab and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x26; op2:x26; op3:x26; dest:x30; op1val:0x12; op2val:0x12;
op3val:0x12; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x30, x26, x26, x26, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x25, rs2==x29, rs3==x25, rd==x26,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000041 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x685e86 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x25; op2:x29; op3:x25; dest:x26; op1val:0x41; op2val:0xbf685e86;
op3val:0x41; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x26, x25, x29, x25, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x27, rs2==x24, rs3==x24, rd==x25,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000034 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x34ec4f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000053 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x27; op2:x24; op3:x24; dest:x25; op1val:0x34; op2val:0xc034ec4f;
op3val:0xc034ec4f; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x25, x27, x24, x24, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rd == rs3 != rs2, rs1==x23, rs2==x25, rs3==x23, rd==x23,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000004 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3b0000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x23; op2:x25; op3:x23; dest:x23; op1val:0x4; op2val:0xc23b0000;
op3val:0x4; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x23, x23, x25, x23, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==x22, rs2==x22, rs3==x22, rd==x22,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x200000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x22; op2:x22; op3:x22; dest:x22; op1val:0x3f; op2val:0x3f;
op3val:0x3f; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x22, x22, x22, x22, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x24, rs2==x23, rs3==x21, rd==x21,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000032 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x3851ec and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000040 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x24; op2:x23; op3:x21; dest:x21; op1val:0x32; op2val:0xc13851ec;
op3val:0x40; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x21, x24, x23, x21, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x21, rs2==x20, rs3==x28, rd==x24,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004a and fs2 == 1 and fe2 == 0x82 and fm2 == 0x62cf91 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000019 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x21; op2:x20; op3:x28; dest:x24; op1val:0x4a; op2val:0xc162cf91;
op3val:0x19; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x24, x21, x20, x28, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x19, rs2==x19, rs3==x18, rd==x20,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000034 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1e7627 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x19; op2:x19; op3:x18; dest:x20; op1val:0x34; op2val:0x34;
op3val:0xc; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x20, x19, x19, x18, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x18, rs2==x21, rs3==x20, rd==x19,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x85 and fm2 == 0x02fbf0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x18; op2:x21; op3:x20; dest:x19; op1val:0x3f; op2val:0xc282fbf0;
op3val:0x1e; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x19, x18, x21, x20, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x20, rs2==x17, rs3==x19, rd==x18,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000062 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x273eb2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x20; op2:x17; op3:x19; dest:x18; op1val:0x62; op2val:0xc2a73eb2;
op3val:0x3; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x18, x20, x17, x19, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x18, rs3==x15, rd==x17,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005a and fs2 == 1 and fe2 == 0x86 and fm2 == 0x366eef and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000023 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x16; op2:x18; op3:x15; dest:x17; op1val:0x5a; op2val:0xc3366eef;
op3val:0x23; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x17, x16, x18, x15, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x17, rs2==x15, rs3==x14, rd==x16,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000043 and fs2 == 1 and fe2 == 0x87 and fm2 == 0x74eece and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000035 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x17; op2:x15; op3:x14; dest:x16; op1val:0x43; op2val:0xc3f4eece;
op3val:0x35; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x16, x17, x15, x14, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rs3==x17, rd==x15,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 1 and fe2 == 0x89 and fm2 == 0x06653f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000031 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x14; op2:x16; op3:x17; dest:x15; op1val:0x3d; op2val:0xc486653f;
op3val:0x31; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x15, x14, x16, x17, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x15, rs2==x13, rs3==x16, rd==x14,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005d and fs2 == 1 and fe2 == 0x89 and fm2 == 0x303134 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x15; op2:x13; op3:x16; dest:x14; op1val:0x5d; op2val:0xc4b03134;
op3val:0xf; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x14, x15, x13, x16, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x14, rs3==x11, rd==x13,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000055 and fs2 == 1 and fe2 == 0x8a and fm2 == 0x40c727 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000022 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x12; op2:x14; op3:x11; dest:x13; op1val:0x55; op2val:0xc540c727;
op3val:0x22; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x13, x12, x14, x11, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x13, rs2==x11, rs3==x10, rd==x12,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000d and fs2 == 1 and fe2 == 0x8e and fm2 == 0x1d8a8a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000009 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x13; op2:x11; op3:x10; dest:x12; op1val:0xd; op2val:0xc71d8a8a;
op3val:0x9; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x12, x13, x11, x10, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x12, rs3==x13, rd==x11,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000032 and fs2 == 1 and fe2 == 0x8d and fm2 == 0x23da3d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000050 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x10; op2:x12; op3:x13; dest:x11; op1val:0x32; op2val:0xc6a3da3d;
op3val:0x50; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x11, x10, x12, x13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x12,test_dataset_1)

inst_21:
// rs1==x11, rs2==x9, rs3==x12, rd==x10,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x8e and fm2 == 0x272f4e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x11; op2:x9; op3:x12; dest:x10; op1val:0x31; op2val:0xc7272f4e;
op3val:0xe; valaddr_reg:x12; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x10, x11, x9, x12, dyn, 0, 0, x12, 0*FLEN/8, x13, x1, x2)

inst_22:
// rs1==x8, rs2==x10, rs3==x7, rd==x9,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000055 and fs2 == 1 and fe2 == 0x8e and fm2 == 0x40c0d9 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000008 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x8; op2:x10; op3:x7; dest:x9; op1val:0x55; op2val:0xc740c0d9;
op3val:0x8; valaddr_reg:x12; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x9, x8, x10, x7, dyn, 0, 0, x12, 3*FLEN/8, x13, x1, x2)

inst_23:
// rs1==x9, rs2==x7, rs3==x6, rd==x8,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e8ba3 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x9; op2:x7; op3:x6; dest:x8; op1val:0x2c; op2val:0xbf2e8ba3;
op3val:0x1f; valaddr_reg:x12; val_offset:6*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x8, x9, x7, x6, dyn, 0, 0, x12, 6*FLEN/8, x13, x1, x10)
RVTEST_SIGBASE(x9,signature_x9_0)

inst_24:
// rs1==x6, rs2==x8, rs3==x9, rd==x7,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x661cc4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x6; op2:x8; op3:x9; dest:x7; op1val:0x59; op2val:0xbde61cc4;
op3val:0xc; valaddr_reg:x12; val_offset:9*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x7, x6, x8, x9, dyn, 0, 0, x12, 9*FLEN/8, x13, x9, x10)

inst_25:
// rs1==x7, rs2==x5, rs3==x8, rd==x6,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000040 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x200000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000054 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x7; op2:x5; op3:x8; dest:x6; op1val:0x40; op2val:0xbfa00000;
op3val:0x54; valaddr_reg:x12; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x6, x7, x5, x8, dyn, 0, 0, x12, 12*FLEN/8, x13, x9, x10)

inst_26:
// rs1==x4, rs2==x6, rs3==x3, rd==x5,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000043 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1131ac and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x4; op2:x6; op3:x3; dest:x5; op1val:0x43; op2val:0xbe9131ac;
op3val:0x1b; valaddr_reg:x12; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x5, x4, x6, x3, dyn, 0, 0, x12, 15*FLEN/8, x13, x9, x10)

inst_27:
// rs1==x5, rs2==x3, rs3==x2, rd==x4,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004b and fs2 == 1 and fe2 == 0x7a and fm2 == 0x23d70a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000013 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x5; op2:x3; op3:x2; dest:x4; op1val:0x4b; op2val:0xbd23d70a;
op3val:0x13; valaddr_reg:x12; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x4, x5, x3, x2, dyn, 0, 0, x12, 18*FLEN/8, x13, x9, x10)

inst_28:
// rs1==x2, rs2==x4, rs3==x5, rd==x3,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x16f970 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000009 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x2; op2:x4; op3:x5; dest:x3; op1val:0x4e; op2val:0x3e96f970;
op3val:0x9; valaddr_reg:x12; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x3, x2, x4, x5, dyn, 0, 0, x12, 21*FLEN/8, x13, x9, x10)

inst_29:
// rs1==x3, rs2==x1, rs3==x4, rd==x2,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000046 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57c57c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000005 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x3; op2:x1; op3:x4; dest:x2; op1val:0x46; op2val:0x3f57c57c;
op3val:0x5; valaddr_reg:x12; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x2, x3, x1, x4, dyn, 0, 0, x12, 24*FLEN/8, x13, x9, x10)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1a69a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x3f; op2val:0x3f1a69a7;
op3val:0x5a; valaddr_reg:x12; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x1, x30, x29, dyn, 0, 0, x12, 27*FLEN/8, x13, x9, x10)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000019 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17ae14 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000013 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0x4117ae14;
op3val:0x13; valaddr_reg:x12; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x0, x30, x29, dyn, 0, 0, x12, 30*FLEN/8, x13, x9, x10)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4147ae and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x4b; op2val:0x40c147ae;
op3val:0x3b; valaddr_reg:x12; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x2, x29, dyn, 0, 0, x12, 33*FLEN/8, x13, x9, x10)

inst_33:
// rs2==x0,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005e and fs2 == 0 and fe2 == 0x82 and fm2 == 0x21882c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x5e; op2val:0x0;
op3val:0x4b; valaddr_reg:x12; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x0, x29, dyn, 0, 0, x12, 36*FLEN/8, x13, x9, x10)

inst_34:
// rs3==x1,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000039 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x0d1f70 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000025 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x39; op2val:0x420d1f70;
op3val:0x25; valaddr_reg:x12; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x1, dyn, 0, 0, x12, 39*FLEN/8, x13, x9, x10)

inst_35:
// rs3==x0,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000048 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x610000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x0; dest:x31; op1val:0x48; op2val:0x42610000;
op3val:0x0; valaddr_reg:x12; val_offset:42*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x0, dyn, 0, 0, x12, 42*FLEN/8, x13, x9, x10)

inst_36:
// rd==x1,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000037 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x149e41 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000012 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x37; op2val:0x43149e41;
op3val:0x12; valaddr_reg:x12; val_offset:45*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x1, x31, x30, x29, dyn, 0, 0, x12, 45*FLEN/8, x13, x9, x10)

inst_37:
// rd==x0,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000015 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x41e186 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000062 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x15; op2val:0x4441e186;
op3val:0x62; valaddr_reg:x12; val_offset:48*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x0, x31, x30, x29, dyn, 0, 0, x12, 48*FLEN/8, x13, x9, x10)

inst_38:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004d and fs2 == 0 and fe2 == 0x87 and fm2 == 0x54b1df and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4d; op2val:0x43d4b1df;
op3val:0xd; valaddr_reg:x12; val_offset:51*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 51*FLEN/8, x13, x9, x10)

inst_39:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000045 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x6d2077 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000059 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x45; op2val:0x446d2077;
op3val:0x59; valaddr_reg:x12; val_offset:54*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 54*FLEN/8, x13, x9, x10)

inst_40:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000029 and fs2 == 0 and fe2 == 0x8a and fm2 == 0x47aaed and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x29; op2val:0x4547aaed;
op3val:0x5a; valaddr_reg:x12; val_offset:57*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57*FLEN/8, x13, x9, x10)

inst_41:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002e and fs2 == 0 and fe2 == 0x8b and fm2 == 0x3207d3 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000053 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2e; op2val:0x45b207d3;
op3val:0x53; valaddr_reg:x12; val_offset:60*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 60*FLEN/8, x13, x9, x10)

inst_42:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000040 and fs2 == 0 and fe2 == 0x8b and fm2 == 0x7ff7e0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000041 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x40; op2val:0x45fff7e0;
op3val:0x41; valaddr_reg:x12; val_offset:63*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 63*FLEN/8, x13, x9, x10)

inst_43:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000050 and fs2 == 0 and fe2 == 0x8c and fm2 == 0x4ccb80 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x50; op2val:0x464ccb80;
op3val:0x1a; valaddr_reg:x12; val_offset:66*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 66*FLEN/8, x13, x9, x10)

inst_44:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000028 and fs2 == 0 and fe2 == 0x8e and fm2 == 0x4ccc4d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000014 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x28; op2val:0x474ccc4d;
op3val:0x14; valaddr_reg:x12; val_offset:69*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 69*FLEN/8, x13, x9, x10)

inst_45:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002e and fs2 == 0 and fe2 == 0x8f and fm2 == 0x321586 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000044 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2e; op2val:0x47b21586;
op3val:0x44; valaddr_reg:x12; val_offset:72*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 72*FLEN/8, x13, x9, x10)

inst_46:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000025 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ffff9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000042 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800025; op2val:0xbffffff9;
op3val:0x3f800042; valaddr_reg:x12; val_offset:75*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 75*FLEN/8, x13, x9, x10)

inst_47:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000055 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fff62 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800055; op2val:0xbfffff62;
op3val:0x3f80000a; valaddr_reg:x12; val_offset:78*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 78*FLEN/8, x13, x9, x10)

inst_48:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000041 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffdc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00005a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800041; op2val:0xbfffffdc;
op3val:0x3f80005a; valaddr_reg:x12; val_offset:81*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 81*FLEN/8, x13, x9, x10)

inst_49:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000046 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fff99 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00001d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800046; op2val:0xbfffff99;
op3val:0x3f80001d; valaddr_reg:x12; val_offset:84*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 84*FLEN/8, x13, x9, x10)

inst_50:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00002d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffd6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80002d; op2val:0xbfffffd6;
op3val:0x3f800020; valaddr_reg:x12; val_offset:87*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 87*FLEN/8, x13, x9, x10)

inst_51:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000002 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000021 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000026 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800002; op2val:0xc0000021;
op3val:0x3f800026; valaddr_reg:x12; val_offset:90*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 90*FLEN/8, x13, x9, x10)

inst_52:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00002c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000002 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00001d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80002c; op2val:0xc0000002;
op3val:0x3f80001d; valaddr_reg:x12; val_offset:93*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93*FLEN/8, x13, x9, x10)

inst_53:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000023 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00001f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000005 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800023; op2val:0xc000001f;
op3val:0x3f800005; valaddr_reg:x12; val_offset:96*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 96*FLEN/8, x13, x9, x10)

inst_54:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000037 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000059 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000021 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800037; op2val:0xc0000059;
op3val:0x3f800021; valaddr_reg:x12; val_offset:99*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 99*FLEN/8, x13, x9, x10)

inst_55:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0000e2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000027 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800031; op2val:0xc00000e2;
op3val:0x3f800027; valaddr_reg:x12; val_offset:102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 102*FLEN/8, x13, x9, x10)

inst_56:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00005b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0001c0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000036 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80005b; op2val:0xc00001c0;
op3val:0x3f800036; valaddr_reg:x12; val_offset:105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 105*FLEN/8, x13, x9, x10)

inst_57:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000017 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000413 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000055 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800017; op2val:0xc0000413;
op3val:0x3f800055; valaddr_reg:x12; val_offset:108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108*FLEN/8, x13, x9, x10)

inst_58:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000033 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0007d4 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800033; op2val:0xc00007d4;
op3val:0x3f80000f; valaddr_reg:x12; val_offset:111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 111*FLEN/8, x13, x9, x10)

inst_59:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000016 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x001014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000055 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800016; op2val:0xc0001014;
op3val:0x3f800055; valaddr_reg:x12; val_offset:114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 114*FLEN/8, x13, x9, x10)

inst_60:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000004 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x002009 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00001a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800004; op2val:0xc0002009;
op3val:0x3f80001a; valaddr_reg:x12; val_offset:117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 117*FLEN/8, x13, x9, x10)

inst_61:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000063 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x003fa7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000015 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800063; op2val:0xc0003fa7;
op3val:0x3f800015; valaddr_reg:x12; val_offset:120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 120*FLEN/8, x13, x9, x10)

inst_62:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000027 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x007fe0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800027; op2val:0xc0007fe0;
op3val:0x3f80000f; valaddr_reg:x12; val_offset:123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 123*FLEN/8, x13, x9, x10)

inst_63:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000002 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x01002f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000062 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800002; op2val:0xc001002f;
op3val:0x3f800062; valaddr_reg:x12; val_offset:126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 126*FLEN/8, x13, x9, x10)

inst_64:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x01ffe4 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800031; op2val:0xc001ffe4;
op3val:0x3f80002c; valaddr_reg:x12; val_offset:129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 129*FLEN/8, x13, x9, x10)

inst_65:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000016 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x04000e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000049 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800016; op2val:0xc004000e;
op3val:0x3f800049; valaddr_reg:x12; val_offset:132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 132*FLEN/8, x13, x9, x10)

inst_66:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000038 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x07ffd4 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00001e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800038; op2val:0xc007ffd4;
op3val:0x3f80001e; valaddr_reg:x12; val_offset:135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 135*FLEN/8, x13, x9, x10)

inst_67:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000012 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x100006 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000035 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800012; op2val:0xc0100006;
op3val:0x3f800035; valaddr_reg:x12; val_offset:138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 138*FLEN/8, x13, x9, x10)

inst_68:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000049 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1fffc2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00003a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800049; op2val:0xc01fffc2;
op3val:0x3f80003a; valaddr_reg:x12; val_offset:141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 141*FLEN/8, x13, x9, x10)

inst_69:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000035 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x53ffa8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000036 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800035; op2val:0xb6d3ffa8;
op3val:0x3f800036; valaddr_reg:x12; val_offset:144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 144*FLEN/8, x13, x9, x10)

inst_70:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00000b and fs2 == 1 and fe2 == 0x6e and fm2 == 0x13fff3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00004c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80000b; op2val:0xb713fff3;
op3val:0x3f80004c; valaddr_reg:x12; val_offset:147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 147*FLEN/8, x13, x9, x10)

inst_71:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000009 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x03fff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000025 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800009; op2val:0xb683fff7;
op3val:0x3f800025; valaddr_reg:x12; val_offset:150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 150*FLEN/8, x13, x9, x10)

inst_72:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00005c and fs2 == 1 and fe2 == 0x6a and fm2 == 0x1fff8d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80005c; op2val:0xb51fff8d;
op3val:0x3f80000d; valaddr_reg:x12; val_offset:153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 153*FLEN/8, x13, x9, x10)

inst_73:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000005 and fs2 == 0 and fe2 == 0x6a and fm2 == 0x1ffffa and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800005; op2val:0x351ffffa;
op3val:0x3f80000b; valaddr_reg:x12; val_offset:156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 156*FLEN/8, x13, x9, x10)

inst_74:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000055 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x0fffa0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800055; op2val:0x360fffa0;
op3val:0x3f80000e; valaddr_reg:x12; val_offset:159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 159*FLEN/8, x13, x9, x10)

inst_75:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000062 and fs2 == 1 and fe2 == 0x69 and fm2 == 0x3fff6d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000043 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800062; op2val:0xb4bfff6d;
op3val:0x3f800043; valaddr_reg:x12; val_offset:162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 162*FLEN/8, x13, x9, x10)

inst_76:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000044 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x21ffaa and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800044; op2val:0x3721ffaa;
op3val:0x3f80002f; valaddr_reg:x12; val_offset:165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 165*FLEN/8, x13, x9, x10)

inst_77:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000014 and fs2 == 0 and fe2 == 0x6f and fm2 == 0x3effe2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000041 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800014; op2val:0x37beffe2;
op3val:0x3f800041; valaddr_reg:x12; val_offset:168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 168*FLEN/8, x13, x9, x10)

inst_78:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x70 and fm2 == 0x527f98 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00005b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80003f; op2val:0x38527f98;
op3val:0x3f80005b; valaddr_reg:x12; val_offset:171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 171*FLEN/8, x13, x9, x10)

inst_79:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000014 and fs2 == 0 and fe2 == 0x71 and fm2 == 0x6c7fdb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00004e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800014; op2val:0x38ec7fdb;
op3val:0x3f80004e; valaddr_reg:x12; val_offset:174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 174*FLEN/8, x13, x9, x10)

inst_80:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000009 and fs2 == 0 and fe2 == 0x72 and fm2 == 0x7cdfee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000019 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800009; op2val:0x397cdfee;
op3val:0x3f800019; valaddr_reg:x12; val_offset:177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 177*FLEN/8, x13, x9, x10)

inst_81:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x73 and fm2 == 0x7edffa and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000012 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800003; op2val:0x39fedffa;
op3val:0x3f800012; valaddr_reg:x12; val_offset:180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 180*FLEN/8, x13, x9, x10)

inst_82:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00002c and fs2 == 0 and fe2 == 0x74 and fm2 == 0x7e6fa9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000032 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80002c; op2val:0x3a7e6fa9;
op3val:0x3f800032; valaddr_reg:x12; val_offset:183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 183*FLEN/8, x13, x9, x10)

inst_83:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000055 and fs2 == 0 and fe2 == 0x75 and fm2 == 0x7ed757 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00004a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800055; op2val:0x3afed757;
op3val:0x3f80004a; valaddr_reg:x12; val_offset:186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 186*FLEN/8, x13, x9, x10)

inst_84:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000010 and fs2 == 0 and fe2 == 0x76 and fm2 == 0x7f3fe0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000060 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800010; op2val:0x3b7f3fe0;
op3val:0x3f800060; valaddr_reg:x12; val_offset:189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 189*FLEN/8, x13, x9, x10)

inst_85:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000027 and fs2 == 0 and fe2 == 0x77 and fm2 == 0x7fd2b2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800027; op2val:0x3bffd2b2;
op3val:0x3f80002d; valaddr_reg:x12; val_offset:192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 192*FLEN/8, x13, x9, x10)

inst_86:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00002a and fs2 == 0 and fe2 == 0x78 and fm2 == 0x7fe82c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80002a; op2val:0x3c7fe82c;
op3val:0x3f80002f; valaddr_reg:x12; val_offset:195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 195*FLEN/8, x13, x9, x10)

inst_87:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x7feb3e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000053 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800001; op2val:0x3cffeb3e;
op3val:0x3f800053; valaddr_reg:x12; val_offset:198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 198*FLEN/8, x13, x9, x10)

inst_88:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000040 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7ffc20 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00001b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800040; op2val:0x3d7ffc20;
op3val:0x3f80001b; valaddr_reg:x12; val_offset:201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 201*FLEN/8, x13, x9, x10)

inst_89:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000008 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ffaf0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000050 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800008; op2val:0x3dfffaf0;
op3val:0x3f800050; valaddr_reg:x12; val_offset:204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 204*FLEN/8, x13, x9, x10)

inst_90:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000005 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ffce6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000062 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800005; op2val:0x3e7ffce6;
op3val:0x3f800062; valaddr_reg:x12; val_offset:207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 207*FLEN/8, x13, x9, x10)

inst_91:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fff0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000017 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80004b; op2val:0x3effff0e;
op3val:0x3f800017; valaddr_reg:x12; val_offset:210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 210*FLEN/8, x13, x9, x10)

inst_92:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000017 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x78d74e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x17; op2val:0xbff8d74e;
op3val:0x2c; valaddr_reg:x12; val_offset:213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 213*FLEN/8, x13, x9, x10)

inst_93:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000038 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x092492 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000039 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x38; op2val:0xbf892492;
op3val:0x39; valaddr_reg:x12; val_offset:216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 216*FLEN/8, x13, x9, x10)

inst_94:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000010 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x10; op2val:0xbf800000;
op3val:0xb; valaddr_reg:x12; val_offset:219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 219*FLEN/8, x13, x9, x10)

inst_95:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x562762 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1a; op2val:0xc0562762;
op3val:0x4e; valaddr_reg:x12; val_offset:222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 222*FLEN/8, x13, x9, x10)

inst_96:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x32c235 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000040 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1d; op2val:0xc032c235;
op3val:0x40; valaddr_reg:x12; val_offset:225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 225*FLEN/8, x13, x9, x10)

inst_97:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5e6d1d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000014 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d; op2val:0xbf5e6d1d;
op3val:0x14; valaddr_reg:x12; val_offset:228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 228*FLEN/8, x13, x9, x10)

inst_98:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x539783 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000010 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x31; op2val:0xbfd39783;
op3val:0x10; valaddr_reg:x12; val_offset:231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 231*FLEN/8, x13, x9, x10)

inst_99:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x692492 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xe; op2val:0xc1692492;
op3val:0x4b; valaddr_reg:x12; val_offset:234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 234*FLEN/8, x13, x9, x10)

inst_100:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x58c632 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5d; op2val:0xc058c632;
op3val:0x3a; valaddr_reg:x12; val_offset:237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 237*FLEN/8, x13, x9, x10)

inst_101:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000053 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c565d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000011 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53; op2val:0xc0cc565d;
op3val:0x11; valaddr_reg:x12; val_offset:240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 240*FLEN/8, x13, x9, x10)

inst_102:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005d and fs2 == 1 and fe2 == 0x82 and fm2 == 0x3a268a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000039 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5d; op2val:0xc13a268a;
op3val:0x39; valaddr_reg:x12; val_offset:243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 243*FLEN/8, x13, x9, x10)

inst_103:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000042 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x01d174 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x42; op2val:0xc201d174;
op3val:0x5d; valaddr_reg:x12; val_offset:246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 246*FLEN/8, x13, x9, x10)

inst_104:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000c and fs2 == 1 and fe2 == 0x87 and fm2 == 0x2e8aab and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xc; op2val:0xc3ae8aab;
op3val:0x5c; valaddr_reg:x12; val_offset:249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 249*FLEN/8, x13, x9, x10)

inst_105:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 1 and fe2 == 0x86 and fm2 == 0x078219 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000049 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d; op2val:0xc3078219;
op3val:0x49; valaddr_reg:x12; val_offset:252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 252*FLEN/8, x13, x9, x10)

inst_106:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000033 and fs2 == 1 and fe2 == 0x87 and fm2 == 0x211919 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x33; op2val:0xc3a11919;
op3val:0x2f; valaddr_reg:x12; val_offset:255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 255*FLEN/8, x13, x9, x10)

inst_107:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003b and fs2 == 1 and fe2 == 0x88 and fm2 == 0x0af97e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b; op2val:0xc40af97e;
op3val:0x1d; valaddr_reg:x12; val_offset:258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 258*FLEN/8, x13, x9, x10)

inst_108:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x8c and fm2 == 0x125892 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7; op2val:0xc6125892;
op3val:0x1a; valaddr_reg:x12; val_offset:261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 261*FLEN/8, x13, x9, x10)

inst_109:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x8d and fm2 == 0x125a00 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7; op2val:0xc6925a00;
op3val:0x3a; valaddr_reg:x12; val_offset:264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 264*FLEN/8, x13, x9, x10)

inst_110:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x8d and fm2 == 0x088a89 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xf; op2val:0xc6888a89;
op3val:0xe; valaddr_reg:x12; val_offset:267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 267*FLEN/8, x13, x9, x10)

inst_111:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001c and fs2 == 1 and fe2 == 0x8d and fm2 == 0x124fdb and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1c; op2val:0xc6924fdb;
op3val:0x5d; valaddr_reg:x12; val_offset:270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 270*FLEN/8, x13, x9, x10)

inst_112:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x93 and fm2 == 0x0002e0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1; op2val:0xc98002e0;
op3val:0x5b; valaddr_reg:x12; val_offset:273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 273*FLEN/8, x13, x9, x10)

inst_113:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004d and fs2 == 1 and fe2 == 0x8d and fm2 == 0x54c98f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4d; op2val:0xc6d4c98f;
op3val:0x4f; valaddr_reg:x12; val_offset:276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 276*FLEN/8, x13, x9, x10)

inst_114:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x93 and fm2 == 0x2aab8d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000054 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3; op2val:0xc9aaab8d;
op3val:0x54; valaddr_reg:x12; val_offset:279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 279*FLEN/8, x13, x9, x10)

inst_115:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x169131 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000038 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2f; op2val:0xbf969131;
op3val:0x38; valaddr_reg:x12; val_offset:282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 282*FLEN/8, x13, x9, x10)

inst_116:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000044 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x078788 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x44; op2val:0xbe078788;
op3val:0xc; valaddr_reg:x12; val_offset:285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 285*FLEN/8, x13, x9, x10)

inst_117:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000060 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x755555 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000061 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x60; op2val:0xbf755555;
op3val:0x61; valaddr_reg:x12; val_offset:288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 288*FLEN/8, x13, x9, x10)

inst_118:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3a2e8c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000041 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4d; op2val:0xbf3a2e8c;
op3val:0x41; valaddr_reg:x12; val_offset:291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 291*FLEN/8, x13, x9, x10)

inst_119:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d89d9 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000049 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5b; op2val:0xbf1d89d9;
op3val:0x49; valaddr_reg:x12; val_offset:294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 294*FLEN/8, x13, x9, x10)

inst_120:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1d89d9 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000041 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1a; op2val:0xbf9d89d9;
op3val:0x41; valaddr_reg:x12; val_offset:297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 297*FLEN/8, x13, x9, x10)

inst_121:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x444444 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1e; op2val:0x3f444444;
op3val:0x2a; valaddr_reg:x12; val_offset:300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 300*FLEN/8, x13, x9, x10)

inst_122:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000044 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14b4b5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000032 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x44; op2val:0x3f94b4b5;
op3val:0x32; valaddr_reg:x12; val_offset:303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 303*FLEN/8, x13, x9, x10)

inst_123:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000060 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7d5555 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000043 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x60; op2val:0x3ffd5555;
op3val:0x43; valaddr_reg:x12; val_offset:306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 306*FLEN/8, x13, x9, x10)

inst_124:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000053 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3bc250 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53; op2val:0x40bbc250;
op3val:0x1a; valaddr_reg:x12; val_offset:309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 309*FLEN/8, x13, x9, x10)

inst_125:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x76c000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000026 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1; op2val:0x4476c000;
op3val:0x26; valaddr_reg:x12; val_offset:312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 312*FLEN/8, x13, x9, x10)

inst_126:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4ba544 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000026 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4f; op2val:0x41cba544;
op3val:0x26; valaddr_reg:x12; val_offset:315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 315*FLEN/8, x13, x9, x10)

inst_127:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000b and fs2 == 0 and fe2 == 0x87 and fm2 == 0x35dd17 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000060 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xb; op2val:0x43b5dd17;
op3val:0x60; valaddr_reg:x12; val_offset:318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 318*FLEN/8, x13, x9, x10)

inst_128:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002a and fs2 == 0 and fe2 == 0x86 and fm2 == 0x41d555 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000034 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2a; op2val:0x4341d555;
op3val:0x34; valaddr_reg:x12; val_offset:321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 321*FLEN/8, x13, x9, x10)

inst_129:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001d and fs2 == 0 and fe2 == 0x88 and fm2 == 0x0c8d3e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000051 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1d; op2val:0x440c8d3e;
op3val:0x51; valaddr_reg:x12; val_offset:324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 324*FLEN/8, x13, x9, x10)

inst_130:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000026 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x57835e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x26; op2val:0x4457835e;
op3val:0xb; valaddr_reg:x12; val_offset:327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 327*FLEN/8, x13, x9, x10)

inst_131:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000047 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x6692ee and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000036 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x47; op2val:0x446692ee;
op3val:0x36; valaddr_reg:x12; val_offset:330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 330*FLEN/8, x13, x9, x10)

inst_132:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000060 and fs2 == 0 and fe2 == 0x89 and fm2 == 0x2a9b00 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000030 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x60; op2val:0x44aa9b00;
op3val:0x30; valaddr_reg:x12; val_offset:333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 333*FLEN/8, x13, x9, x10)

inst_133:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005f and fs2 == 0 and fe2 == 0x8a and fm2 == 0x2c6faa and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f; op2val:0x452c6faa;
op3val:0x2a; valaddr_reg:x12; val_offset:336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 336*FLEN/8, x13, x9, x10)

inst_134:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000043 and fs2 == 0 and fe2 == 0x8b and fm2 == 0x748504 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000027 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x43; op2val:0x45f48504;
op3val:0x27; valaddr_reg:x12; val_offset:339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 339*FLEN/8, x13, x9, x10)

inst_135:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000051 and fs2 == 0 and fe2 == 0x8c and fm2 == 0x4a434f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x51; op2val:0x464a434f;
op3val:0x2e; valaddr_reg:x12; val_offset:342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 342*FLEN/8, x13, x9, x10)

inst_136:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000026 and fs2 == 0 and fe2 == 0x8e and fm2 == 0x579207 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000054 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x26; op2val:0x47579207;
op3val:0x54; valaddr_reg:x12; val_offset:345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 345*FLEN/8, x13, x9, x10)

inst_137:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000e and fs2 == 0 and fe2 == 0x91 and fm2 == 0x1248eb and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xe; op2val:0x489248eb;
op3val:0x1a; valaddr_reg:x12; val_offset:348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 348*FLEN/8, x13, x9, x10)

inst_138:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x90 and fm2 == 0x02084f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000030 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f; op2val:0xc802084f;
op3val:0x30; valaddr_reg:x12; val_offset:351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 351*FLEN/8, x13, x9, x10)

inst_139:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x272f63 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x31; op2val:0xc8272f63;
op3val:0x4b; valaddr_reg:x12; val_offset:354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 354*FLEN/8, x13, x9, x10)

inst_140:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000028 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x4cccf0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x28; op2val:0xc84cccf0;
op3val:0x1b; valaddr_reg:x12; val_offset:357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 357*FLEN/8, x13, x9, x10)

inst_141:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x57947d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000033 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x26; op2val:0xc857947d;
op3val:0x33; valaddr_reg:x12; val_offset:360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 360*FLEN/8, x13, x9, x10)

inst_142:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004f and fs2 == 1 and fe2 == 0x8f and fm2 == 0x4f64aa and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000032 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4f; op2val:0xc7cf64aa;
op3val:0x32; valaddr_reg:x12; val_offset:363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 363*FLEN/8, x13, x9, x10)

inst_143:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000058 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x3a2ebf and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000044 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x58; op2val:0xc7ba2ebf;
op3val:0x44; valaddr_reg:x12; val_offset:366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 366*FLEN/8, x13, x9, x10)

inst_144:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x38172d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x59; op2val:0xc7b8172d;
op3val:0x5e; valaddr_reg:x12; val_offset:369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 369*FLEN/8, x13, x9, x10)

inst_145:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002e and fs2 == 1 and fe2 == 0x90 and fm2 == 0x321608 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000057 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2e; op2val:0xc8321608;
op3val:0x57; valaddr_reg:x12; val_offset:372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 372*FLEN/8, x13, x9, x10)

inst_146:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004e and fs2 == 1 and fe2 == 0x8f and fm2 == 0x520bf6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4e; op2val:0xc7d20bf6;
op3val:0x4b; valaddr_reg:x12; val_offset:375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 375*FLEN/8, x13, x9, x10)

inst_147:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002f and fs2 == 1 and fe2 == 0x90 and fm2 == 0x2e49fd and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000057 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2f; op2val:0xc82e49fd;
op3val:0x57; valaddr_reg:x12; val_offset:378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 378*FLEN/8, x13, x9, x10)

inst_148:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000037 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x14ed7f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x37; op2val:0xc814ed7f;
op3val:0x1a; valaddr_reg:x12; val_offset:381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 381*FLEN/8, x13, x9, x10)

inst_149:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x90 and fm2 == 0x020044 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000044 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f; op2val:0xc8020044;
op3val:0x44; valaddr_reg:x12; val_offset:384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 384*FLEN/8, x13, x9, x10)

inst_150:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000041 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x7bf053 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x41; op2val:0xc7fbf053;
op3val:0xb; valaddr_reg:x12; val_offset:387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 387*FLEN/8, x13, x9, x10)

inst_151:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000023 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x69d442 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000015 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x23; op2val:0xc869d442;
op3val:0x15; valaddr_reg:x12; val_offset:390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 390*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_1)

inst_152:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000009 and fs2 == 1 and fe2 == 0x92 and fm2 == 0x631ce2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000040 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x9; op2val:0xc9631ce2;
op3val:0x40; valaddr_reg:x12; val_offset:393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 393*FLEN/8, x13, x9, x10)

inst_153:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005e and fs2 == 1 and fe2 == 0x8f and fm2 == 0x2d9e23 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000023 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5e; op2val:0xc7ad9e23;
op3val:0x23; valaddr_reg:x12; val_offset:396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 396*FLEN/8, x13, x9, x10)

inst_154:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000036 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x1684ce and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x36; op2val:0xc81684ce;
op3val:0xf; valaddr_reg:x12; val_offset:399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 399*FLEN/8, x13, x9, x10)

inst_155:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000050 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x4999d2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000024 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x50; op2val:0xc7c999d2;
op3val:0x24; valaddr_reg:x12; val_offset:402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 402*FLEN/8, x13, x9, x10)

inst_156:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x50d7cf and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000024 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x26; op2val:0xc850d7cf;
op3val:0x24; valaddr_reg:x12; val_offset:405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 405*FLEN/8, x13, x9, x10)

inst_157:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000041 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x6c4f08 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000023 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x41; op2val:0xc7ec4f08;
op3val:0x23; valaddr_reg:x12; val_offset:408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 408*FLEN/8, x13, x9, x10)

inst_158:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000024 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x471d00 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000051 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x24; op2val:0xc8471d00;
op3val:0x51; valaddr_reg:x12; val_offset:411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 411*FLEN/8, x13, x9, x10)

inst_159:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000035 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x67d9a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x35; op2val:0xc7e7d9a7;
op3val:0x20; valaddr_reg:x12; val_offset:414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 414*FLEN/8, x13, x9, x10)

inst_160:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002f and fs2 == 1 and fe2 == 0x8f and fm2 == 0x2e4c96 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2f; op2val:0xc7ae4c96;
op3val:0x20; valaddr_reg:x12; val_offset:417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 417*FLEN/8, x13, x9, x10)

inst_161:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000020 and fs2 == 0 and fe2 == 0x90 and fm2 == 0x7fff7a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000041 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x20; op2val:0x487fff7a;
op3val:0x41; valaddr_reg:x12; val_offset:420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 420*FLEN/8, x13, x9, x10)

inst_162:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000060 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x2aaa58 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x60; op2val:0x47aaaa58;
op3val:0x3b; valaddr_reg:x12; val_offset:423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 423*FLEN/8, x13, x9, x10)

inst_163:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000020 and fs2 == 0 and fe2 == 0x90 and fm2 == 0x7fffba and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x20; op2val:0x487fffba;
op3val:0x1e; valaddr_reg:x12; val_offset:426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 426*FLEN/8, x13, x9, x10)

inst_164:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004d and fs2 == 0 and fe2 == 0x8f and fm2 == 0x54c6fb and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000044 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4d; op2val:0x47d4c6fb;
op3val:0x44; valaddr_reg:x12; val_offset:429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 429*FLEN/8, x13, x9, x10)

inst_165:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001a and fs2 == 0 and fe2 == 0x91 and fm2 == 0x1d8989 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000030 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1a; op2val:0x489d8989;
op3val:0x30; valaddr_reg:x12; val_offset:432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 432*FLEN/8, x13, x9, x10)

inst_166:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000040 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x7fffa2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x40; op2val:0x47ffffa2;
op3val:0xe; valaddr_reg:x12; val_offset:435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 435*FLEN/8, x13, x9, x10)

inst_167:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x92 and fm2 == 0x08880e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000032 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xf; op2val:0x4908880e;
op3val:0x32; valaddr_reg:x12; val_offset:438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 438*FLEN/8, x13, x9, x10)

inst_168:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000b and fs2 == 0 and fe2 == 0x92 and fm2 == 0x3a2d56 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000054 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xb; op2val:0x493a2d56;
op3val:0x54; valaddr_reg:x12; val_offset:441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 441*FLEN/8, x13, x9, x10)

inst_169:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000016 and fs2 == 0 and fe2 == 0x91 and fm2 == 0x3a2cac and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000049 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x16; op2val:0x48ba2cac;
op3val:0x49; valaddr_reg:x12; val_offset:444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 444*FLEN/8, x13, x9, x10)

inst_170:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000037 and fs2 == 0 and fe2 == 0x90 and fm2 == 0x14efad and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000006 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x37; op2val:0x4814efad;
op3val:0x6; valaddr_reg:x12; val_offset:447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 447*FLEN/8, x13, x9, x10)

inst_171:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000012 and fs2 == 0 and fe2 == 0x91 and fm2 == 0x638715 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x12; op2val:0x48e38715;
op3val:0x3; valaddr_reg:x12; val_offset:450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 450*FLEN/8, x13, x9, x10)

inst_172:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004f and fs2 == 0 and fe2 == 0x8f and fm2 == 0x4f5754 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000019 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4f; op2val:0x47cf5754;
op3val:0x19; valaddr_reg:x12; val_offset:453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 453*FLEN/8, x13, x9, x10)

inst_173:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000058 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x3a1713 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000022 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x58; op2val:0x47ba1713;
op3val:0x22; valaddr_reg:x12; val_offset:456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 456*FLEN/8, x13, x9, x10)

inst_174:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000c and fs2 == 0 and fe2 == 0x92 and fm2 == 0x2a7fed and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xc; op2val:0x492a7fed;
op3val:0xd; valaddr_reg:x12; val_offset:459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 459*FLEN/8, x13, x9, x10)

inst_175:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003c and fs2 == 0 and fe2 == 0x90 and fm2 == 0x084404 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c; op2val:0x48084404;
op3val:0x3b; valaddr_reg:x12; val_offset:462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 462*FLEN/8, x13, x9, x10)

inst_176:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000056 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x3dc43f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000025 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x56; op2val:0x47bdc43f;
op3val:0x25; valaddr_reg:x12; val_offset:465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 465*FLEN/8, x13, x9, x10)

inst_177:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000049 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x5eaf41 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x49; op2val:0x47deaf41;
op3val:0xc; valaddr_reg:x12; val_offset:468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 468*FLEN/8, x13, x9, x10)

inst_178:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000011 and fs2 == 0 and fe2 == 0x91 and fm2 == 0x6d2c98 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x11; op2val:0x48ed2c98;
op3val:0x4e; valaddr_reg:x12; val_offset:471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 471*FLEN/8, x13, x9, x10)

inst_179:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002e and fs2 == 0 and fe2 == 0x90 and fm2 == 0x2c851a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000054 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2e; op2val:0x482c851a;
op3val:0x54; valaddr_reg:x12; val_offset:474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 474*FLEN/8, x13, x9, x10)

inst_180:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000009 and fs2 == 0 and fe2 == 0x92 and fm2 == 0x55550b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000029 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x9; op2val:0x4955550b;
op3val:0x29; valaddr_reg:x12; val_offset:477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 477*FLEN/8, x13, x9, x10)

inst_181:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000005 and fs2 == 0 and fe2 == 0x93 and fm2 == 0x333320 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5; op2val:0x49b33320;
op3val:0xb; valaddr_reg:x12; val_offset:480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 480*FLEN/8, x13, x9, x10)

inst_182:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000012 and fs2 == 0 and fe2 == 0x91 and fm2 == 0x2aaa14 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000054 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x12; op2val:0x48aaaa14;
op3val:0x54; valaddr_reg:x12; val_offset:483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 483*FLEN/8, x13, x9, x10)

inst_183:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002f and fs2 == 0 and fe2 == 0x8f and fm2 == 0x2e4c23 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2f; op2val:0x47ae4c23;
op3val:0xa; valaddr_reg:x12; val_offset:486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 486*FLEN/8, x13, x9, x10)

inst_184:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00001e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000011 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00005d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80001e; op2val:0xc0000011;
op3val:0x80005d; valaddr_reg:x12; val_offset:489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 489*FLEN/8, x13, x9, x10)

inst_185:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000005 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000022 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00004d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800005; op2val:0xc0000022;
op3val:0x80004d; valaddr_reg:x12; val_offset:492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 492*FLEN/8, x13, x9, x10)

inst_186:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000029 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffcf and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00001d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800029; op2val:0xbfffffcf;
op3val:0x80001d; valaddr_reg:x12; val_offset:495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 495*FLEN/8, x13, x9, x10)

inst_187:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00000e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000060 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800026; op2val:0xc000000e;
op3val:0x800060; valaddr_reg:x12; val_offset:498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 498*FLEN/8, x13, x9, x10)

inst_188:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00002e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffde and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00002a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80002e; op2val:0xbfffffde;
op3val:0x80002a; valaddr_reg:x12; val_offset:501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 501*FLEN/8, x13, x9, x10)

inst_189:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000009 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000028 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000043 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800009; op2val:0xc0000028;
op3val:0x800043; valaddr_reg:x12; val_offset:504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 504*FLEN/8, x13, x9, x10)

inst_190:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00003f and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00005d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80000f; op2val:0xc000003f;
op3val:0x80005d; valaddr_reg:x12; val_offset:507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 507*FLEN/8, x13, x9, x10)

inst_191:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000007 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00002d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80004f; op2val:0xc0000007;
op3val:0x80002d; valaddr_reg:x12; val_offset:510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 510*FLEN/8, x13, x9, x10)

inst_192:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000038 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000052 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000015 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800038; op2val:0xc0000052;
op3val:0x800015; valaddr_reg:x12; val_offset:513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 513*FLEN/8, x13, x9, x10)

inst_193:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000015 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0000fb and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000021 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800015; op2val:0xc00000fb;
op3val:0x800021; valaddr_reg:x12; val_offset:516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 516*FLEN/8, x13, x9, x10)

inst_194:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000032 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0001d8 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000014 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800032; op2val:0xc00001d8;
op3val:0x800014; valaddr_reg:x12; val_offset:519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 519*FLEN/8, x13, x9, x10)

inst_195:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000038 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0003f7 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00005e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800038; op2val:0xc00003f7;
op3val:0x80005e; valaddr_reg:x12; val_offset:522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 522*FLEN/8, x13, x9, x10)

inst_196:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000009 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0007fd and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00000d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800009; op2val:0xc00007fd;
op3val:0x80000d; valaddr_reg:x12; val_offset:525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 525*FLEN/8, x13, x9, x10)

inst_197:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000045 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000fc9 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00001d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800045; op2val:0xc0000fc9;
op3val:0x80001d; valaddr_reg:x12; val_offset:528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 528*FLEN/8, x13, x9, x10)

inst_198:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00000b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x002008 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000026 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80000b; op2val:0xc0002008;
op3val:0x800026; valaddr_reg:x12; val_offset:531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 531*FLEN/8, x13, x9, x10)

inst_199:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000017 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x003fff and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00002c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800017; op2val:0xc0003fff;
op3val:0x80002c; valaddr_reg:x12; val_offset:534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 534*FLEN/8, x13, x9, x10)

inst_200:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000060 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x007fad and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00001a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800060; op2val:0xc0007fad;
op3val:0x80001a; valaddr_reg:x12; val_offset:537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 537*FLEN/8, x13, x9, x10)

inst_201:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00000e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00fff5 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80000e; op2val:0xc000fff5;
op3val:0x800007; valaddr_reg:x12; val_offset:540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 540*FLEN/8, x13, x9, x10)

inst_202:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000008 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02001c and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000048 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800008; op2val:0xc002001c;
op3val:0x800048; valaddr_reg:x12; val_offset:543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 543*FLEN/8, x13, x9, x10)

inst_203:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00005f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03ffaa and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000017 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80005f; op2val:0xc003ffaa;
op3val:0x800017; valaddr_reg:x12; val_offset:546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 546*FLEN/8, x13, x9, x10)

inst_204:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000016 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x08000d and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000048 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800016; op2val:0xc008000d;
op3val:0x800048; valaddr_reg:x12; val_offset:549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 549*FLEN/8, x13, x9, x10)

inst_205:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000052 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0fffb9 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00002a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800052; op2val:0xc00fffb9;
op3val:0x80002a; valaddr_reg:x12; val_offset:552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 552*FLEN/8, x13, x9, x10)

inst_206:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1fffe1 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800026; op2val:0xc01fffe1;
op3val:0x800020; valaddr_reg:x12; val_offset:555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 555*FLEN/8, x13, x9, x10)

inst_207:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00005f and fs2 == 1 and fe2 == 0x6d and fm2 == 0x7fff42 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000041 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80005f; op2val:0xb6ffff42;
op3val:0x800041; valaddr_reg:x12; val_offset:558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 558*FLEN/8, x13, x9, x10)

inst_208:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003e and fs2 == 1 and fe2 == 0x6b and fm2 == 0x4fff9b and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80003e; op2val:0xb5cfff9b;
op3val:0x80000f; valaddr_reg:x12; val_offset:561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 561*FLEN/8, x13, x9, x10)

inst_209:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000049 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x2fff9c and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00005c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800049; op2val:0xb72fff9c;
op3val:0x80005c; valaddr_reg:x12; val_offset:564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 564*FLEN/8, x13, x9, x10)

inst_210:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00000b and fs2 == 1 and fe2 == 0x6b and fm2 == 0x1ffff2 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000012 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80000b; op2val:0xb59ffff2;
op3val:0x800012; valaddr_reg:x12; val_offset:567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 567*FLEN/8, x13, x9, x10)

inst_211:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000060 and fs2 == 1 and fe2 == 0x67 and fm2 == 0x7fff40 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000011 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800060; op2val:0xb3ffff40;
op3val:0x800011; valaddr_reg:x12; val_offset:570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 570*FLEN/8, x13, x9, x10)

inst_212:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00001d and fs2 == 1 and fe2 == 0x6b and fm2 == 0x1fffdc and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00002a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80001d; op2val:0xb59fffdc;
op3val:0x80002a; valaddr_reg:x12; val_offset:573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 573*FLEN/8, x13, x9, x10)

inst_213:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00001c and fs2 == 0 and fe2 == 0x6b and fm2 == 0x2fffda and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000035 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80001c; op2val:0x35afffda;
op3val:0x800035; valaddr_reg:x12; val_offset:576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 576*FLEN/8, x13, x9, x10)

inst_214:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000017 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x53ffda and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000016 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800017; op2val:0x3753ffda;
op3val:0x800016; valaddr_reg:x12; val_offset:579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 579*FLEN/8, x13, x9, x10)

inst_215:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000012 and fs2 == 0 and fe2 == 0x6f and fm2 == 0x1dffea and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000062 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800012; op2val:0x379dffea;
op3val:0x800062; valaddr_reg:x12; val_offset:582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 582*FLEN/8, x13, x9, x10)

inst_216:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000039 and fs2 == 0 and fe2 == 0x70 and fm2 == 0x7bff90 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000008 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800039; op2val:0x387bff90;
op3val:0x800008; valaddr_reg:x12; val_offset:585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 585*FLEN/8, x13, x9, x10)

inst_217:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000059 and fs2 == 0 and fe2 == 0x71 and fm2 == 0x717f58 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800059; op2val:0x38f17f58;
op3val:0x80003a; valaddr_reg:x12; val_offset:588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 588*FLEN/8, x13, x9, x10)

inst_218:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004b and fs2 == 0 and fe2 == 0x72 and fm2 == 0x753f70 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000056 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80004b; op2val:0x39753f70;
op3val:0x800056; valaddr_reg:x12; val_offset:591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 591*FLEN/8, x13, x9, x10)

inst_219:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004f and fs2 == 0 and fe2 == 0x73 and fm2 == 0x7daf63 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000025 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80004f; op2val:0x39fdaf63;
op3val:0x800025; valaddr_reg:x12; val_offset:594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 594*FLEN/8, x13, x9, x10)

inst_220:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000036 and fs2 == 0 and fe2 == 0x74 and fm2 == 0x7e3f95 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000038 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800036; op2val:0x3a7e3f95;
op3val:0x800038; valaddr_reg:x12; val_offset:597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 597*FLEN/8, x13, x9, x10)

inst_221:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004b and fs2 == 0 and fe2 == 0x75 and fm2 == 0x7e9f6b and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000058 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80004b; op2val:0x3afe9f6b;
op3val:0x800058; valaddr_reg:x12; val_offset:600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 600*FLEN/8, x13, x9, x10)

inst_222:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00005f and fs2 == 0 and fe2 == 0x76 and fm2 == 0x7f9f42 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000030 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80005f; op2val:0x3b7f9f42;
op3val:0x800030; valaddr_reg:x12; val_offset:603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 603*FLEN/8, x13, x9, x10)

inst_223:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000059 and fs2 == 0 and fe2 == 0x77 and fm2 == 0x7fb64e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000049 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800059; op2val:0x3bffb64e;
op3val:0x800049; valaddr_reg:x12; val_offset:606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 606*FLEN/8, x13, x9, x10)

inst_224:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00005b and fs2 == 0 and fe2 == 0x78 and fm2 == 0x7fdfca and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80005b; op2val:0x3c7fdfca;
op3val:0x80003f; valaddr_reg:x12; val_offset:609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 609*FLEN/8, x13, x9, x10)

inst_225:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00002f and fs2 == 0 and fe2 == 0x79 and fm2 == 0x7fe7e2 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00005f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80002f; op2val:0x3cffe7e2;
op3val:0x80005f; valaddr_reg:x12; val_offset:612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 612*FLEN/8, x13, x9, x10)

inst_226:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000044 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7ffc78 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000018 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800044; op2val:0x3d7ffc78;
op3val:0x800018; valaddr_reg:x12; val_offset:615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 615*FLEN/8, x13, x9, x10)

inst_227:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000028 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ffd80 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000023 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800028; op2val:0x3dfffd80;
op3val:0x800023; valaddr_reg:x12; val_offset:618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 618*FLEN/8, x13, x9, x10)

inst_228:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000058 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ffd68 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800058; op2val:0x3e7ffd68;
op3val:0x80003d; valaddr_reg:x12; val_offset:621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 621*FLEN/8, x13, x9, x10)

inst_229:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000011 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fff4e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000024 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800011; op2val:0x3effff4e;
op3val:0x800024; valaddr_reg:x12; val_offset:624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 624*FLEN/8, x13, x9, x10)

inst_230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000040 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fffc8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000052 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000040; op2val:0xc03fffc8;
op3val:0x7f000052; valaddr_reg:x12; val_offset:627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 627*FLEN/8, x13, x9, x10)

inst_231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000041 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fffc0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000045 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000041; op2val:0xc03fffc0;
op3val:0x7f000045; valaddr_reg:x12; val_offset:630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 630*FLEN/8, x13, x9, x10)

inst_232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000042 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fffae and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000026 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000042; op2val:0xc03fffae;
op3val:0x7f000026; valaddr_reg:x12; val_offset:633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 633*FLEN/8, x13, x9, x10)

inst_233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00001c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3ffff6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000049 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00001c; op2val:0xc03ffff6;
op3val:0x7f000049; valaddr_reg:x12; val_offset:636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 636*FLEN/8, x13, x9, x10)

inst_234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000044 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fffab and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000033 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000044; op2val:0xc03fffab;
op3val:0x7f000033; valaddr_reg:x12; val_offset:639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 639*FLEN/8, x13, x9, x10)

inst_235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000063 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fff64 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000012 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000063; op2val:0xc03fff64;
op3val:0x7f000012; valaddr_reg:x12; val_offset:642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 642*FLEN/8, x13, x9, x10)

inst_236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fffab and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000053 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00003f; op2val:0xc03fffab;
op3val:0x7f000053; valaddr_reg:x12; val_offset:645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 645*FLEN/8, x13, x9, x10)

inst_237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00003d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fff6c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000010 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00003d; op2val:0xc03fff6c;
op3val:0x7f000010; valaddr_reg:x12; val_offset:648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 648*FLEN/8, x13, x9, x10)

inst_238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fff60 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000033 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000026; op2val:0xc03fff60;
op3val:0x7f000033; valaddr_reg:x12; val_offset:651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 651*FLEN/8, x13, x9, x10)

inst_239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000005 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3ffefb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000005 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000005; op2val:0xc03ffefb;
op3val:0x7f000005; valaddr_reg:x12; val_offset:654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 654*FLEN/8, x13, x9, x10)

inst_240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000030 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3ffdd8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000041 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000030; op2val:0xc03ffdd8;
op3val:0x7f000041; valaddr_reg:x12; val_offset:657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 657*FLEN/8, x13, x9, x10)

inst_241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3ffbdd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00002d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000026; op2val:0xc03ffbdd;
op3val:0x7f00002d; valaddr_reg:x12; val_offset:660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 660*FLEN/8, x13, x9, x10)

inst_242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3ff7e3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00005a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000031; op2val:0xc03ff7e3;
op3val:0x7f00005a; valaddr_reg:x12; val_offset:663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 663*FLEN/8, x13, x9, x10)

inst_243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000004 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3ff022 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000050 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000004; op2val:0xc03ff022;
op3val:0x7f000050; valaddr_reg:x12; val_offset:666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 666*FLEN/8, x13, x9, x10)

inst_244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000013 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fe010 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000059 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000013; op2val:0xc03fe010;
op3val:0x7f000059; valaddr_reg:x12; val_offset:669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 669*FLEN/8, x13, x9, x10)

inst_245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000002 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fc002 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00000b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000002; op2val:0xc03fc002;
op3val:0x7f00000b; valaddr_reg:x12; val_offset:672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 672*FLEN/8, x13, x9, x10)

inst_246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000018 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f7ff9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00003a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000018; op2val:0xc03f7ff9;
op3val:0x7f00003a; valaddr_reg:x12; val_offset:675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 675*FLEN/8, x13, x9, x10)

inst_247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00004b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3eff98 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000011 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00004b; op2val:0xc03eff98;
op3val:0x7f000011; valaddr_reg:x12; val_offset:678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 678*FLEN/8, x13, x9, x10)

inst_248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000063 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3dff88 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000037 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000063; op2val:0xc03dff88;
op3val:0x7f000037; valaddr_reg:x12; val_offset:681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 681*FLEN/8, x13, x9, x10)

inst_249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000049 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3bffbd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000051 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000049; op2val:0xc03bffbd;
op3val:0x7f000051; valaddr_reg:x12; val_offset:684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 684*FLEN/8, x13, x9, x10)

inst_250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00004b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37ff9b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00000e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00004b; op2val:0xc037ff9b;
op3val:0x7f00000e; valaddr_reg:x12; val_offset:687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 687*FLEN/8, x13, x9, x10)

inst_251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000030 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2fffde and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000041 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000030; op2val:0xc02fffde;
op3val:0x7f000041; valaddr_reg:x12; val_offset:690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 690*FLEN/8, x13, x9, x10)

inst_252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000006 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x20001e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00004d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000006; op2val:0xc020001e;
op3val:0x7f00004d; valaddr_reg:x12; val_offset:693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 693*FLEN/8, x13, x9, x10)

inst_253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffe9c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000054 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00005c; op2val:0x3f7ffe9c;
op3val:0x7f000054; valaddr_reg:x12; val_offset:696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 696*FLEN/8, x13, x9, x10)

inst_254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000030 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00002e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000030; op2val:0x3f7fff3e;
op3val:0x7f00002e; valaddr_reg:x12; val_offset:699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 699*FLEN/8, x13, x9, x10)

inst_255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff88 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000029 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00000e; op2val:0x3f7fff88;
op3val:0x7f000029; valaddr_reg:x12; val_offset:702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 702*FLEN/8, x13, x9, x10)

inst_256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000054 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff2a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00000e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000054; op2val:0x3f7fff2a;
op3val:0x7f00000e; valaddr_reg:x12; val_offset:705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 705*FLEN/8, x13, x9, x10)

inst_257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00003e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff36 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000016 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00003e; op2val:0x3f7fff36;
op3val:0x7f000016; valaddr_reg:x12; val_offset:708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 708*FLEN/8, x13, x9, x10)

inst_258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000053 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffeda and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000053; op2val:0x3f7ffeda;
op3val:0x7f00001f; valaddr_reg:x12; val_offset:711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 711*FLEN/8, x13, x9, x10)

inst_259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00003e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffea4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00002f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00003e; op2val:0x3f7ffea4;
op3val:0x7f00002f; valaddr_reg:x12; val_offset:714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 714*FLEN/8, x13, x9, x10)

inst_260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00004a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffe10 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00002d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00004a; op2val:0x3f7ffe10;
op3val:0x7f00002d; valaddr_reg:x12; val_offset:717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 717*FLEN/8, x13, x9, x10)

inst_261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000030 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffcdc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000061 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000030; op2val:0x3f7ffcdc;
op3val:0x7f000061; valaddr_reg:x12; val_offset:720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 720*FLEN/8, x13, x9, x10)

inst_262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000037 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffb30 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000030 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000037; op2val:0x3f7ffb30;
op3val:0x7f000030; valaddr_reg:x12; val_offset:723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 723*FLEN/8, x13, x9, x10)

inst_263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000060 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ff69c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000051 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000060; op2val:0x3f7ff69c;
op3val:0x7f000051; valaddr_reg:x12; val_offset:726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 726*FLEN/8, x13, x9, x10)

inst_264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000056 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fef48 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000005 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000056; op2val:0x3f7fef48;
op3val:0x7f000005; valaddr_reg:x12; val_offset:729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 729*FLEN/8, x13, x9, x10)

inst_265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fdf1a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000013 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00005f; op2val:0x3f7fdf1a;
op3val:0x7f000013; valaddr_reg:x12; val_offset:732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 732*FLEN/8, x13, x9, x10)

inst_266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fbe9e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000055 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00005b; op2val:0x3f7fbe9e;
op3val:0x7f000055; valaddr_reg:x12; val_offset:735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 735*FLEN/8, x13, x9, x10)

inst_267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000054 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7f7f04 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000029 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000054; op2val:0x3f7f7f04;
op3val:0x7f000029; valaddr_reg:x12; val_offset:738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 738*FLEN/8, x13, x9, x10)

inst_268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000008 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7effe4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000005 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000008; op2val:0x3f7effe4;
op3val:0x7f000005; valaddr_reg:x12; val_offset:741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 741*FLEN/8, x13, x9, x10)

inst_269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00001e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7dff3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000042 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00001e; op2val:0x3f7dff3e;
op3val:0x7f000042; valaddr_reg:x12; val_offset:744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 744*FLEN/8, x13, x9, x10)

inst_270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00002f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7bff25 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00003e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00002f; op2val:0x3f7bff25;
op3val:0x7f00003e; valaddr_reg:x12; val_offset:747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 747*FLEN/8, x13, x9, x10)

inst_271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00002f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x77ff29 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00003d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00002f; op2val:0x3f77ff29;
op3val:0x7f00003d; valaddr_reg:x12; val_offset:750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 750*FLEN/8, x13, x9, x10)

inst_272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000048 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6fff49 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000017 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000048; op2val:0x3f6fff49;
op3val:0x7f000017; valaddr_reg:x12; val_offset:753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 753*FLEN/8, x13, x9, x10)

inst_273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000027 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5fff96 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000012 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000027; op2val:0x3f5fff96;
op3val:0x7f000012; valaddr_reg:x12; val_offset:756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 756*FLEN/8, x13, x9, x10)

inst_274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000053 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3fff3c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000023 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000053; op2val:0x3f3fff3c;
op3val:0x7f000023; valaddr_reg:x12; val_offset:759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 759*FLEN/8, x13, x9, x10)

inst_275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fff12 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000039 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000003; op2val:0x3effff12;
op3val:0x7f000039; valaddr_reg:x12; val_offset:762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 762*FLEN/8, x13, x9, x10)

inst_276:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000019 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x733333 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x19; op2val:0xc0733333;
op3val:0x5b; valaddr_reg:x12; val_offset:765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 765*FLEN/8, x13, x9, x10)

inst_277:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000006 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4aaaab and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6; op2val:0xc04aaaab;
op3val:0xb; valaddr_reg:x12; val_offset:768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 768*FLEN/8, x13, x9, x10)

inst_278:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000012 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2aaaab and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x12; op2val:0xc02aaaab;
op3val:0x20; valaddr_reg:x12; val_offset:771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 771*FLEN/8, x13, x9, x10)

inst_279:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000041 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x685e86 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x41; op2val:0xbf685e86;
op3val:0x1b; valaddr_reg:x12; val_offset:774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 774*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_2)

inst_280:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000034 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x34ec4f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000053 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x34; op2val:0xc034ec4f;
op3val:0x53; valaddr_reg:x12; val_offset:777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 777*FLEN/8, x13, x9, x10)

inst_281:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000004 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3b0000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4; op2val:0xc23b0000;
op3val:0x3b; valaddr_reg:x12; val_offset:780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 780*FLEN/8, x13, x9, x10)

inst_282:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x200000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f; op2val:0xc0a00000;
op3val:0x3b; valaddr_reg:x12; val_offset:783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 783*FLEN/8, x13, x9, x10)

inst_283:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000034 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1e7627 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x34; op2val:0xc21e7627;
op3val:0xc; valaddr_reg:x12; val_offset:786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 786*FLEN/8, x13, x9, x10)

inst_284:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000019 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x17ae14 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000013 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x19; op2val:0x4117ae14;
op3val:0x13; valaddr_reg:x12; val_offset:789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 789*FLEN/8, x13, x9, x10)

inst_285:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005e and fs2 == 0 and fe2 == 0x82 and fm2 == 0x21882c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5e; op2val:0x4121882c;
op3val:0x4b; valaddr_reg:x12; val_offset:792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 792*FLEN/8, x13, x9, x10)

inst_286:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000048 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x610000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x48; op2val:0x42610000;
op3val:0x2e; valaddr_reg:x12; val_offset:795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 795*FLEN/8, x13, x9, x10)

inst_287:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000015 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x41e186 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000062 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x15; op2val:0x4441e186;
op3val:0x62; valaddr_reg:x12; val_offset:798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 798*FLEN/8, x13, x9, x10)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(30,64,FLEN)
NAN_BOXED(3218149649,32,FLEN)
NAN_BOXED(48,64,FLEN)
NAN_BOXED(49,64,FLEN)
NAN_BOXED(3200681942,32,FLEN)
NAN_BOXED(17,64,FLEN)
NAN_BOXED(25,64,FLEN)
NAN_BOXED(25,32,FLEN)
NAN_BOXED(91,64,FLEN)
NAN_BOXED(6,64,FLEN)
NAN_BOXED(3226118827,32,FLEN)
NAN_BOXED(3226118827,64,FLEN)
NAN_BOXED(18,64,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(18,64,FLEN)
NAN_BOXED(65,64,FLEN)
NAN_BOXED(3211288198,32,FLEN)
NAN_BOXED(65,64,FLEN)
NAN_BOXED(52,64,FLEN)
NAN_BOXED(3224693839,32,FLEN)
NAN_BOXED(3224693839,64,FLEN)
NAN_BOXED(4,64,FLEN)
NAN_BOXED(3258646528,32,FLEN)
NAN_BOXED(4,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(50,64,FLEN)
NAN_BOXED(3241693676,32,FLEN)
NAN_BOXED(64,64,FLEN)
NAN_BOXED(74,64,FLEN)
NAN_BOXED(3244478353,32,FLEN)
NAN_BOXED(25,64,FLEN)
NAN_BOXED(52,64,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(12,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(3263364080,32,FLEN)
NAN_BOXED(30,64,FLEN)
NAN_BOXED(98,64,FLEN)
NAN_BOXED(3265740466,32,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(90,64,FLEN)
NAN_BOXED(3275124463,32,FLEN)
NAN_BOXED(35,64,FLEN)
NAN_BOXED(67,64,FLEN)
NAN_BOXED(3287609038,32,FLEN)
NAN_BOXED(53,64,FLEN)
NAN_BOXED(61,64,FLEN)
NAN_BOXED(3297142079,32,FLEN)
NAN_BOXED(49,64,FLEN)
NAN_BOXED(93,64,FLEN)
NAN_BOXED(3299881268,32,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(85,64,FLEN)
NAN_BOXED(3309356839,32,FLEN)
NAN_BOXED(34,64,FLEN)
NAN_BOXED(13,64,FLEN)
NAN_BOXED(3340601994,32,FLEN)
NAN_BOXED(9,64,FLEN)
NAN_BOXED(50,64,FLEN)
NAN_BOXED(3332627005,32,FLEN)
NAN_BOXED(80,64,FLEN)
test_dataset_1:
NAN_BOXED(49,32,FLEN)
NAN_BOXED(3341233998,32,FLEN)
NAN_BOXED(14,32,FLEN)
NAN_BOXED(85,32,FLEN)
NAN_BOXED(3342909657,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(44,32,FLEN)
NAN_BOXED(3207498659,32,FLEN)
NAN_BOXED(31,32,FLEN)
NAN_BOXED(89,32,FLEN)
NAN_BOXED(3185974468,32,FLEN)
NAN_BOXED(12,32,FLEN)
NAN_BOXED(64,32,FLEN)
NAN_BOXED(3214934016,32,FLEN)
NAN_BOXED(84,32,FLEN)
NAN_BOXED(67,32,FLEN)
NAN_BOXED(3197186476,32,FLEN)
NAN_BOXED(27,32,FLEN)
NAN_BOXED(75,32,FLEN)
NAN_BOXED(3173242634,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(78,32,FLEN)
NAN_BOXED(1050081648,32,FLEN)
NAN_BOXED(9,32,FLEN)
NAN_BOXED(70,32,FLEN)
NAN_BOXED(1062716796,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(1058695591,32,FLEN)
NAN_BOXED(90,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1092070932,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(75,32,FLEN)
NAN_BOXED(1086408622,32,FLEN)
NAN_BOXED(59,32,FLEN)
NAN_BOXED(94,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75,32,FLEN)
NAN_BOXED(57,32,FLEN)
NAN_BOXED(1108156272,32,FLEN)
NAN_BOXED(37,32,FLEN)
NAN_BOXED(72,32,FLEN)
NAN_BOXED(1113653248,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(55,32,FLEN)
NAN_BOXED(1125424705,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(21,32,FLEN)
NAN_BOXED(1145168262,32,FLEN)
NAN_BOXED(98,32,FLEN)
NAN_BOXED(77,32,FLEN)
NAN_BOXED(1138012639,32,FLEN)
NAN_BOXED(13,32,FLEN)
NAN_BOXED(69,32,FLEN)
NAN_BOXED(1148002423,32,FLEN)
NAN_BOXED(89,32,FLEN)
NAN_BOXED(41,32,FLEN)
NAN_BOXED(1162324717,32,FLEN)
NAN_BOXED(90,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(1169295315,32,FLEN)
NAN_BOXED(83,32,FLEN)
NAN_BOXED(64,32,FLEN)
NAN_BOXED(1174403040,32,FLEN)
NAN_BOXED(65,32,FLEN)
NAN_BOXED(80,32,FLEN)
NAN_BOXED(1179437952,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(40,32,FLEN)
NAN_BOXED(1196215373,32,FLEN)
NAN_BOXED(20,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(1202853254,32,FLEN)
NAN_BOXED(68,32,FLEN)
NAN_BOXED(1065353253,32,FLEN)
NAN_BOXED(3221225465,32,FLEN)
NAN_BOXED(1065353282,32,FLEN)
NAN_BOXED(1065353301,32,FLEN)
NAN_BOXED(3221225314,32,FLEN)
NAN_BOXED(1065353226,32,FLEN)
NAN_BOXED(1065353281,32,FLEN)
NAN_BOXED(3221225436,32,FLEN)
NAN_BOXED(1065353306,32,FLEN)
NAN_BOXED(1065353286,32,FLEN)
NAN_BOXED(3221225369,32,FLEN)
NAN_BOXED(1065353245,32,FLEN)
NAN_BOXED(1065353261,32,FLEN)
NAN_BOXED(3221225430,32,FLEN)
NAN_BOXED(1065353248,32,FLEN)
NAN_BOXED(1065353218,32,FLEN)
NAN_BOXED(3221225505,32,FLEN)
NAN_BOXED(1065353254,32,FLEN)
NAN_BOXED(1065353260,32,FLEN)
NAN_BOXED(3221225474,32,FLEN)
NAN_BOXED(1065353245,32,FLEN)
NAN_BOXED(1065353251,32,FLEN)
NAN_BOXED(3221225503,32,FLEN)
NAN_BOXED(1065353221,32,FLEN)
NAN_BOXED(1065353271,32,FLEN)
NAN_BOXED(3221225561,32,FLEN)
NAN_BOXED(1065353249,32,FLEN)
NAN_BOXED(1065353265,32,FLEN)
NAN_BOXED(3221225698,32,FLEN)
NAN_BOXED(1065353255,32,FLEN)
NAN_BOXED(1065353307,32,FLEN)
NAN_BOXED(3221225920,32,FLEN)
NAN_BOXED(1065353270,32,FLEN)
NAN_BOXED(1065353239,32,FLEN)
NAN_BOXED(3221226515,32,FLEN)
NAN_BOXED(1065353301,32,FLEN)
NAN_BOXED(1065353267,32,FLEN)
NAN_BOXED(3221227476,32,FLEN)
NAN_BOXED(1065353231,32,FLEN)
NAN_BOXED(1065353238,32,FLEN)
NAN_BOXED(3221229588,32,FLEN)
NAN_BOXED(1065353301,32,FLEN)
NAN_BOXED(1065353220,32,FLEN)
NAN_BOXED(3221233673,32,FLEN)
NAN_BOXED(1065353242,32,FLEN)
NAN_BOXED(1065353315,32,FLEN)
NAN_BOXED(3221241767,32,FLEN)
NAN_BOXED(1065353237,32,FLEN)
NAN_BOXED(1065353255,32,FLEN)
NAN_BOXED(3221258208,32,FLEN)
NAN_BOXED(1065353231,32,FLEN)
NAN_BOXED(1065353218,32,FLEN)
NAN_BOXED(3221291055,32,FLEN)
NAN_BOXED(1065353314,32,FLEN)
NAN_BOXED(1065353265,32,FLEN)
NAN_BOXED(3221356516,32,FLEN)
NAN_BOXED(1065353260,32,FLEN)
NAN_BOXED(1065353238,32,FLEN)
NAN_BOXED(3221487630,32,FLEN)
NAN_BOXED(1065353289,32,FLEN)
NAN_BOXED(1065353272,32,FLEN)
NAN_BOXED(3221749716,32,FLEN)
NAN_BOXED(1065353246,32,FLEN)
NAN_BOXED(1065353234,32,FLEN)
NAN_BOXED(3222274054,32,FLEN)
NAN_BOXED(1065353269,32,FLEN)
NAN_BOXED(1065353289,32,FLEN)
NAN_BOXED(3223322562,32,FLEN)
NAN_BOXED(1065353274,32,FLEN)
NAN_BOXED(1065353269,32,FLEN)
NAN_BOXED(3067346856,32,FLEN)
NAN_BOXED(1065353270,32,FLEN)
NAN_BOXED(1065353227,32,FLEN)
NAN_BOXED(3071541235,32,FLEN)
NAN_BOXED(1065353292,32,FLEN)
NAN_BOXED(1065353225,32,FLEN)
NAN_BOXED(3062104055,32,FLEN)
NAN_BOXED(1065353253,32,FLEN)
NAN_BOXED(1065353308,32,FLEN)
NAN_BOXED(3038773133,32,FLEN)
NAN_BOXED(1065353229,32,FLEN)
NAN_BOXED(1065353221,32,FLEN)
NAN_BOXED(891289594,32,FLEN)
NAN_BOXED(1065353227,32,FLEN)
NAN_BOXED(1065353301,32,FLEN)
NAN_BOXED(907018144,32,FLEN)
NAN_BOXED(1065353230,32,FLEN)
NAN_BOXED(1065353314,32,FLEN)
NAN_BOXED(3032481645,32,FLEN)
NAN_BOXED(1065353283,32,FLEN)
NAN_BOXED(1065353284,32,FLEN)
NAN_BOXED(924975018,32,FLEN)
NAN_BOXED(1065353263,32,FLEN)
NAN_BOXED(1065353236,32,FLEN)
NAN_BOXED(935264226,32,FLEN)
NAN_BOXED(1065353281,32,FLEN)
NAN_BOXED(1065353279,32,FLEN)
NAN_BOXED(944930712,32,FLEN)
NAN_BOXED(1065353307,32,FLEN)
NAN_BOXED(1065353236,32,FLEN)
NAN_BOXED(955023323,32,FLEN)
NAN_BOXED(1065353294,32,FLEN)
NAN_BOXED(1065353225,32,FLEN)
NAN_BOXED(964485102,32,FLEN)
NAN_BOXED(1065353241,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(973004794,32,FLEN)
NAN_BOXED(1065353234,32,FLEN)
NAN_BOXED(1065353260,32,FLEN)
NAN_BOXED(981364649,32,FLEN)
NAN_BOXED(1065353266,32,FLEN)
NAN_BOXED(1065353301,32,FLEN)
NAN_BOXED(989779799,32,FLEN)
NAN_BOXED(1065353290,32,FLEN)
NAN_BOXED(1065353232,32,FLEN)
NAN_BOXED(998195168,32,FLEN)
NAN_BOXED(1065353312,32,FLEN)
NAN_BOXED(1065353255,32,FLEN)
NAN_BOXED(1006621362,32,FLEN)
NAN_BOXED(1065353261,32,FLEN)
NAN_BOXED(1065353258,32,FLEN)
NAN_BOXED(1015015468,32,FLEN)
NAN_BOXED(1065353263,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(1023404862,32,FLEN)
NAN_BOXED(1065353299,32,FLEN)
NAN_BOXED(1065353280,32,FLEN)
NAN_BOXED(1031797792,32,FLEN)
NAN_BOXED(1065353243,32,FLEN)
NAN_BOXED(1065353224,32,FLEN)
NAN_BOXED(1040186096,32,FLEN)
NAN_BOXED(1065353296,32,FLEN)
NAN_BOXED(1065353221,32,FLEN)
NAN_BOXED(1048575206,32,FLEN)
NAN_BOXED(1065353314,32,FLEN)
NAN_BOXED(1065353291,32,FLEN)
NAN_BOXED(1056964366,32,FLEN)
NAN_BOXED(1065353239,32,FLEN)
NAN_BOXED(23,32,FLEN)
NAN_BOXED(3220756302,32,FLEN)
NAN_BOXED(44,32,FLEN)
NAN_BOXED(56,32,FLEN)
NAN_BOXED(3213436050,32,FLEN)
NAN_BOXED(57,32,FLEN)
NAN_BOXED(16,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(3226871650,32,FLEN)
NAN_BOXED(78,32,FLEN)
NAN_BOXED(29,32,FLEN)
NAN_BOXED(3224551989,32,FLEN)
NAN_BOXED(64,32,FLEN)
NAN_BOXED(61,32,FLEN)
NAN_BOXED(3210636573,32,FLEN)
NAN_BOXED(20,32,FLEN)
NAN_BOXED(49,32,FLEN)
NAN_BOXED(3218315139,32,FLEN)
NAN_BOXED(16,32,FLEN)
NAN_BOXED(14,32,FLEN)
NAN_BOXED(3244893330,32,FLEN)
NAN_BOXED(75,32,FLEN)
NAN_BOXED(93,32,FLEN)
NAN_BOXED(3227043378,32,FLEN)
NAN_BOXED(58,32,FLEN)
NAN_BOXED(83,32,FLEN)
NAN_BOXED(3234616925,32,FLEN)
NAN_BOXED(17,32,FLEN)
NAN_BOXED(93,32,FLEN)
NAN_BOXED(3241813642,32,FLEN)
NAN_BOXED(57,32,FLEN)
NAN_BOXED(66,32,FLEN)
NAN_BOXED(3254899060,32,FLEN)
NAN_BOXED(93,32,FLEN)
NAN_BOXED(12,32,FLEN)
NAN_BOXED(3282995883,32,FLEN)
NAN_BOXED(92,32,FLEN)
NAN_BOXED(61,32,FLEN)
NAN_BOXED(3272049177,32,FLEN)
NAN_BOXED(73,32,FLEN)
NAN_BOXED(51,32,FLEN)
NAN_BOXED(3282114841,32,FLEN)
NAN_BOXED(47,32,FLEN)
NAN_BOXED(59,32,FLEN)
NAN_BOXED(3289053566,32,FLEN)
NAN_BOXED(29,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(3323091090,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(3331480064,32,FLEN)
NAN_BOXED(58,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(3330837129,32,FLEN)
NAN_BOXED(14,32,FLEN)
NAN_BOXED(28,32,FLEN)
NAN_BOXED(3331477467,32,FLEN)
NAN_BOXED(93,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(3380609760,32,FLEN)
NAN_BOXED(91,32,FLEN)
NAN_BOXED(77,32,FLEN)
NAN_BOXED(3335833999,32,FLEN)
NAN_BOXED(79,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(3383405453,32,FLEN)
NAN_BOXED(84,32,FLEN)
NAN_BOXED(47,32,FLEN)
NAN_BOXED(3214315825,32,FLEN)
NAN_BOXED(56,32,FLEN)
NAN_BOXED(68,32,FLEN)
NAN_BOXED(3188164488,32,FLEN)
NAN_BOXED(12,32,FLEN)
NAN_BOXED(96,32,FLEN)
NAN_BOXED(3212137813,32,FLEN)
NAN_BOXED(97,32,FLEN)
NAN_BOXED(77,32,FLEN)
NAN_BOXED(3208261260,32,FLEN)
NAN_BOXED(65,32,FLEN)
NAN_BOXED(91,32,FLEN)
NAN_BOXED(3206384089,32,FLEN)
NAN_BOXED(73,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(3214772697,32,FLEN)
NAN_BOXED(65,32,FLEN)
NAN_BOXED(30,32,FLEN)
NAN_BOXED(1061438532,32,FLEN)
NAN_BOXED(42,32,FLEN)
NAN_BOXED(68,32,FLEN)
NAN_BOXED(1066710197,32,FLEN)
NAN_BOXED(50,32,FLEN)
NAN_BOXED(96,32,FLEN)
NAN_BOXED(1073567061,32,FLEN)
NAN_BOXED(67,32,FLEN)
NAN_BOXED(83,32,FLEN)
NAN_BOXED(1086046800,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(1148633088,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(79,32,FLEN)
NAN_BOXED(1103865156,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(1135992087,32,FLEN)
NAN_BOXED(96,32,FLEN)
NAN_BOXED(42,32,FLEN)
NAN_BOXED(1128387925,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(29,32,FLEN)
NAN_BOXED(1141673278,32,FLEN)
NAN_BOXED(81,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(1146585950,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(71,32,FLEN)
NAN_BOXED(1147572974,32,FLEN)
NAN_BOXED(54,32,FLEN)
NAN_BOXED(96,32,FLEN)
NAN_BOXED(1152031488,32,FLEN)
NAN_BOXED(48,32,FLEN)
NAN_BOXED(95,32,FLEN)
NAN_BOXED(1160540074,32,FLEN)
NAN_BOXED(42,32,FLEN)
NAN_BOXED(67,32,FLEN)
NAN_BOXED(1173652740,32,FLEN)
NAN_BOXED(39,32,FLEN)
NAN_BOXED(81,32,FLEN)
NAN_BOXED(1179272015,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(1196921351,32,FLEN)
NAN_BOXED(84,32,FLEN)
NAN_BOXED(14,32,FLEN)
NAN_BOXED(1217546475,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(3355576399,32,FLEN)
NAN_BOXED(48,32,FLEN)
NAN_BOXED(49,32,FLEN)
NAN_BOXED(3358011235,32,FLEN)
NAN_BOXED(75,32,FLEN)
NAN_BOXED(40,32,FLEN)
NAN_BOXED(3360476400,32,FLEN)
NAN_BOXED(27,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(3361182845,32,FLEN)
NAN_BOXED(51,32,FLEN)
NAN_BOXED(79,32,FLEN)
NAN_BOXED(3352257706,32,FLEN)
NAN_BOXED(50,32,FLEN)
NAN_BOXED(88,32,FLEN)
NAN_BOXED(3350867647,32,FLEN)
NAN_BOXED(68,32,FLEN)
NAN_BOXED(89,32,FLEN)
NAN_BOXED(3350730541,32,FLEN)
NAN_BOXED(94,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(3358725640,32,FLEN)
NAN_BOXED(87,32,FLEN)
NAN_BOXED(78,32,FLEN)
NAN_BOXED(3352431606,32,FLEN)
NAN_BOXED(75,32,FLEN)
NAN_BOXED(47,32,FLEN)
NAN_BOXED(3358476797,32,FLEN)
NAN_BOXED(87,32,FLEN)
NAN_BOXED(55,32,FLEN)
NAN_BOXED(3356814719,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(3355574340,32,FLEN)
NAN_BOXED(68,32,FLEN)
NAN_BOXED(65,32,FLEN)
NAN_BOXED(3355177043,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(35,32,FLEN)
NAN_BOXED(3362378818,32,FLEN)
NAN_BOXED(21,32,FLEN)
NAN_BOXED(9,32,FLEN)
NAN_BOXED(3378715874,32,FLEN)
NAN_BOXED(64,32,FLEN)
NAN_BOXED(94,32,FLEN)
NAN_BOXED(3350044195,32,FLEN)
NAN_BOXED(35,32,FLEN)
NAN_BOXED(54,32,FLEN)
NAN_BOXED(3356918990,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(80,32,FLEN)
NAN_BOXED(3351878098,32,FLEN)
NAN_BOXED(36,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(3360741327,32,FLEN)
NAN_BOXED(36,32,FLEN)
NAN_BOXED(65,32,FLEN)
NAN_BOXED(3354152712,32,FLEN)
NAN_BOXED(35,32,FLEN)
NAN_BOXED(36,32,FLEN)
NAN_BOXED(3360103680,32,FLEN)
NAN_BOXED(81,32,FLEN)
NAN_BOXED(53,32,FLEN)
NAN_BOXED(3353860519,32,FLEN)
NAN_BOXED(32,32,FLEN)
NAN_BOXED(47,32,FLEN)
NAN_BOXED(3350088854,32,FLEN)
NAN_BOXED(32,32,FLEN)
NAN_BOXED(32,32,FLEN)
NAN_BOXED(1216348026,32,FLEN)
NAN_BOXED(65,32,FLEN)
NAN_BOXED(96,32,FLEN)
NAN_BOXED(1202367064,32,FLEN)
NAN_BOXED(59,32,FLEN)
NAN_BOXED(32,32,FLEN)
NAN_BOXED(1216348090,32,FLEN)
NAN_BOXED(30,32,FLEN)
NAN_BOXED(77,32,FLEN)
NAN_BOXED(1205126907,32,FLEN)
NAN_BOXED(68,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(1218283913,32,FLEN)
NAN_BOXED(48,32,FLEN)
NAN_BOXED(64,32,FLEN)
NAN_BOXED(1207959458,32,FLEN)
NAN_BOXED(14,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(1225295886,32,FLEN)
NAN_BOXED(50,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(1228549462,32,FLEN)
NAN_BOXED(84,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(1220160684,32,FLEN)
NAN_BOXED(73,32,FLEN)
NAN_BOXED(55,32,FLEN)
NAN_BOXED(1209331629,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(1222870805,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(79,32,FLEN)
NAN_BOXED(1204770644,32,FLEN)
NAN_BOXED(25,32,FLEN)
NAN_BOXED(88,32,FLEN)
NAN_BOXED(1203377939,32,FLEN)
NAN_BOXED(34,32,FLEN)
NAN_BOXED(12,32,FLEN)
NAN_BOXED(1227522029,32,FLEN)
NAN_BOXED(13,32,FLEN)
NAN_BOXED(60,32,FLEN)
NAN_BOXED(1208501252,32,FLEN)
NAN_BOXED(59,32,FLEN)
NAN_BOXED(86,32,FLEN)
NAN_BOXED(1203618879,32,FLEN)
NAN_BOXED(37,32,FLEN)
NAN_BOXED(73,32,FLEN)
NAN_BOXED(1205776193,32,FLEN)
NAN_BOXED(12,32,FLEN)
NAN_BOXED(17,32,FLEN)
NAN_BOXED(1223503000,32,FLEN)
NAN_BOXED(78,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(1210877210,32,FLEN)
NAN_BOXED(84,32,FLEN)
NAN_BOXED(9,32,FLEN)
NAN_BOXED(1230329099,32,FLEN)
NAN_BOXED(41,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1236480800,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(1219144212,32,FLEN)
NAN_BOXED(84,32,FLEN)
NAN_BOXED(47,32,FLEN)
NAN_BOXED(1202605091,32,FLEN)
NAN_BOXED(10,32,FLEN)
NAN_BOXED(8388638,32,FLEN)
NAN_BOXED(3221225489,32,FLEN)
NAN_BOXED(8388701,32,FLEN)
NAN_BOXED(8388613,32,FLEN)
NAN_BOXED(3221225506,32,FLEN)
NAN_BOXED(8388685,32,FLEN)
NAN_BOXED(8388649,32,FLEN)
NAN_BOXED(3221225423,32,FLEN)
NAN_BOXED(8388637,32,FLEN)
NAN_BOXED(8388646,32,FLEN)
NAN_BOXED(3221225486,32,FLEN)
NAN_BOXED(8388704,32,FLEN)
NAN_BOXED(8388654,32,FLEN)
NAN_BOXED(3221225438,32,FLEN)
NAN_BOXED(8388650,32,FLEN)
NAN_BOXED(8388617,32,FLEN)
NAN_BOXED(3221225512,32,FLEN)
NAN_BOXED(8388675,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(3221225535,32,FLEN)
NAN_BOXED(8388701,32,FLEN)
NAN_BOXED(8388687,32,FLEN)
NAN_BOXED(3221225479,32,FLEN)
NAN_BOXED(8388653,32,FLEN)
NAN_BOXED(8388664,32,FLEN)
NAN_BOXED(3221225554,32,FLEN)
NAN_BOXED(8388629,32,FLEN)
NAN_BOXED(8388629,32,FLEN)
NAN_BOXED(3221225723,32,FLEN)
NAN_BOXED(8388641,32,FLEN)
NAN_BOXED(8388658,32,FLEN)
NAN_BOXED(3221225944,32,FLEN)
NAN_BOXED(8388628,32,FLEN)
NAN_BOXED(8388664,32,FLEN)
NAN_BOXED(3221226487,32,FLEN)
NAN_BOXED(8388702,32,FLEN)
NAN_BOXED(8388617,32,FLEN)
NAN_BOXED(3221227517,32,FLEN)
NAN_BOXED(8388621,32,FLEN)
NAN_BOXED(8388677,32,FLEN)
NAN_BOXED(3221229513,32,FLEN)
NAN_BOXED(8388637,32,FLEN)
NAN_BOXED(8388619,32,FLEN)
NAN_BOXED(3221233672,32,FLEN)
NAN_BOXED(8388646,32,FLEN)
NAN_BOXED(8388631,32,FLEN)
NAN_BOXED(3221241855,32,FLEN)
NAN_BOXED(8388652,32,FLEN)
NAN_BOXED(8388704,32,FLEN)
NAN_BOXED(3221258157,32,FLEN)
NAN_BOXED(8388634,32,FLEN)
NAN_BOXED(8388622,32,FLEN)
NAN_BOXED(3221290997,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(8388616,32,FLEN)
NAN_BOXED(3221356572,32,FLEN)
NAN_BOXED(8388680,32,FLEN)
NAN_BOXED(8388703,32,FLEN)
NAN_BOXED(3221487530,32,FLEN)
NAN_BOXED(8388631,32,FLEN)
NAN_BOXED(8388630,32,FLEN)
NAN_BOXED(3221749773,32,FLEN)
NAN_BOXED(8388680,32,FLEN)
NAN_BOXED(8388690,32,FLEN)
NAN_BOXED(3222273977,32,FLEN)
NAN_BOXED(8388650,32,FLEN)
NAN_BOXED(8388646,32,FLEN)
NAN_BOXED(3223322593,32,FLEN)
NAN_BOXED(8388640,32,FLEN)
NAN_BOXED(8388703,32,FLEN)
NAN_BOXED(3070230338,32,FLEN)
NAN_BOXED(8388673,32,FLEN)
NAN_BOXED(8388670,32,FLEN)
NAN_BOXED(3050307483,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(8388681,32,FLEN)
NAN_BOXED(3073376156,32,FLEN)
NAN_BOXED(8388700,32,FLEN)
NAN_BOXED(8388619,32,FLEN)
NAN_BOXED(3047161842,32,FLEN)
NAN_BOXED(8388626,32,FLEN)
NAN_BOXED(8388704,32,FLEN)
NAN_BOXED(3019898688,32,FLEN)
NAN_BOXED(8388625,32,FLEN)
NAN_BOXED(8388637,32,FLEN)
NAN_BOXED(3047161820,32,FLEN)
NAN_BOXED(8388650,32,FLEN)
NAN_BOXED(8388636,32,FLEN)
NAN_BOXED(900726746,32,FLEN)
NAN_BOXED(8388661,32,FLEN)
NAN_BOXED(8388631,32,FLEN)
NAN_BOXED(928251866,32,FLEN)
NAN_BOXED(8388630,32,FLEN)
NAN_BOXED(8388626,32,FLEN)
NAN_BOXED(933101546,32,FLEN)
NAN_BOXED(8388706,32,FLEN)
NAN_BOXED(8388665,32,FLEN)
NAN_BOXED(947650448,32,FLEN)
NAN_BOXED(8388616,32,FLEN)
NAN_BOXED(8388697,32,FLEN)
NAN_BOXED(955350872,32,FLEN)
NAN_BOXED(8388666,32,FLEN)
NAN_BOXED(8388683,32,FLEN)
NAN_BOXED(963985264,32,FLEN)
NAN_BOXED(8388694,32,FLEN)
NAN_BOXED(8388687,32,FLEN)
NAN_BOXED(972926819,32,FLEN)
NAN_BOXED(8388645,32,FLEN)
NAN_BOXED(8388662,32,FLEN)
NAN_BOXED(981352341,32,FLEN)
NAN_BOXED(8388664,32,FLEN)
NAN_BOXED(8388683,32,FLEN)
NAN_BOXED(989765483,32,FLEN)
NAN_BOXED(8388696,32,FLEN)
NAN_BOXED(8388703,32,FLEN)
NAN_BOXED(998219586,32,FLEN)
NAN_BOXED(8388656,32,FLEN)
NAN_BOXED(8388697,32,FLEN)
NAN_BOXED(1006614094,32,FLEN)
NAN_BOXED(8388681,32,FLEN)
NAN_BOXED(8388699,32,FLEN)
NAN_BOXED(1015013322,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(8388655,32,FLEN)
NAN_BOXED(1023404002,32,FLEN)
NAN_BOXED(8388703,32,FLEN)
NAN_BOXED(8388676,32,FLEN)
NAN_BOXED(1031797880,32,FLEN)
NAN_BOXED(8388632,32,FLEN)
NAN_BOXED(8388648,32,FLEN)
NAN_BOXED(1040186752,32,FLEN)
NAN_BOXED(8388643,32,FLEN)
NAN_BOXED(8388696,32,FLEN)
NAN_BOXED(1048575336,32,FLEN)
NAN_BOXED(8388669,32,FLEN)
NAN_BOXED(8388625,32,FLEN)
NAN_BOXED(1056964430,32,FLEN)
NAN_BOXED(8388644,32,FLEN)
NAN_BOXED(2130706496,32,FLEN)
NAN_BOXED(3225419720,32,FLEN)
NAN_BOXED(2130706514,32,FLEN)
NAN_BOXED(2130706497,32,FLEN)
NAN_BOXED(3225419712,32,FLEN)
NAN_BOXED(2130706501,32,FLEN)
NAN_BOXED(2130706498,32,FLEN)
NAN_BOXED(3225419694,32,FLEN)
NAN_BOXED(2130706470,32,FLEN)
NAN_BOXED(2130706460,32,FLEN)
NAN_BOXED(3225419766,32,FLEN)
NAN_BOXED(2130706505,32,FLEN)
NAN_BOXED(2130706500,32,FLEN)
NAN_BOXED(3225419691,32,FLEN)
NAN_BOXED(2130706483,32,FLEN)
NAN_BOXED(2130706531,32,FLEN)
NAN_BOXED(3225419620,32,FLEN)
NAN_BOXED(2130706450,32,FLEN)
NAN_BOXED(2130706495,32,FLEN)
NAN_BOXED(3225419691,32,FLEN)
NAN_BOXED(2130706515,32,FLEN)
NAN_BOXED(2130706493,32,FLEN)
NAN_BOXED(3225419628,32,FLEN)
NAN_BOXED(2130706448,32,FLEN)
NAN_BOXED(2130706470,32,FLEN)
NAN_BOXED(3225419616,32,FLEN)
NAN_BOXED(2130706483,32,FLEN)
NAN_BOXED(2130706437,32,FLEN)
NAN_BOXED(3225419515,32,FLEN)
NAN_BOXED(2130706437,32,FLEN)
NAN_BOXED(2130706480,32,FLEN)
NAN_BOXED(3225419224,32,FLEN)
NAN_BOXED(2130706497,32,FLEN)
NAN_BOXED(2130706470,32,FLEN)
NAN_BOXED(3225418717,32,FLEN)
NAN_BOXED(2130706477,32,FLEN)
NAN_BOXED(2130706481,32,FLEN)
NAN_BOXED(3225417699,32,FLEN)
NAN_BOXED(2130706522,32,FLEN)
NAN_BOXED(2130706436,32,FLEN)
NAN_BOXED(3225415714,32,FLEN)
NAN_BOXED(2130706512,32,FLEN)
NAN_BOXED(2130706451,32,FLEN)
NAN_BOXED(3225411600,32,FLEN)
NAN_BOXED(2130706521,32,FLEN)
NAN_BOXED(2130706434,32,FLEN)
NAN_BOXED(3225403394,32,FLEN)
NAN_BOXED(2130706443,32,FLEN)
NAN_BOXED(2130706456,32,FLEN)
NAN_BOXED(3225387001,32,FLEN)
NAN_BOXED(2130706490,32,FLEN)
NAN_BOXED(2130706507,32,FLEN)
NAN_BOXED(3225354136,32,FLEN)
NAN_BOXED(2130706449,32,FLEN)
NAN_BOXED(2130706531,32,FLEN)
NAN_BOXED(3225288584,32,FLEN)
NAN_BOXED(2130706487,32,FLEN)
NAN_BOXED(2130706505,32,FLEN)
NAN_BOXED(3225157565,32,FLEN)
NAN_BOXED(2130706513,32,FLEN)
NAN_BOXED(2130706507,32,FLEN)
NAN_BOXED(3224895387,32,FLEN)
NAN_BOXED(2130706446,32,FLEN)
NAN_BOXED(2130706480,32,FLEN)
NAN_BOXED(3224371166,32,FLEN)
NAN_BOXED(2130706497,32,FLEN)
NAN_BOXED(2130706438,32,FLEN)
NAN_BOXED(3223322654,32,FLEN)
NAN_BOXED(2130706509,32,FLEN)
NAN_BOXED(2130706524,32,FLEN)
NAN_BOXED(1065352860,32,FLEN)
NAN_BOXED(2130706516,32,FLEN)
NAN_BOXED(2130706480,32,FLEN)
NAN_BOXED(1065353022,32,FLEN)
NAN_BOXED(2130706478,32,FLEN)
NAN_BOXED(2130706446,32,FLEN)
NAN_BOXED(1065353096,32,FLEN)
NAN_BOXED(2130706473,32,FLEN)
NAN_BOXED(2130706516,32,FLEN)
NAN_BOXED(1065353002,32,FLEN)
NAN_BOXED(2130706446,32,FLEN)
NAN_BOXED(2130706494,32,FLEN)
NAN_BOXED(1065353014,32,FLEN)
NAN_BOXED(2130706454,32,FLEN)
NAN_BOXED(2130706515,32,FLEN)
NAN_BOXED(1065352922,32,FLEN)
NAN_BOXED(2130706463,32,FLEN)
NAN_BOXED(2130706494,32,FLEN)
NAN_BOXED(1065352868,32,FLEN)
NAN_BOXED(2130706479,32,FLEN)
NAN_BOXED(2130706506,32,FLEN)
NAN_BOXED(1065352720,32,FLEN)
NAN_BOXED(2130706477,32,FLEN)
NAN_BOXED(2130706480,32,FLEN)
NAN_BOXED(1065352412,32,FLEN)
NAN_BOXED(2130706529,32,FLEN)
NAN_BOXED(2130706487,32,FLEN)
NAN_BOXED(1065351984,32,FLEN)
NAN_BOXED(2130706480,32,FLEN)
NAN_BOXED(2130706528,32,FLEN)
NAN_BOXED(1065350812,32,FLEN)
NAN_BOXED(2130706513,32,FLEN)
NAN_BOXED(2130706518,32,FLEN)
NAN_BOXED(1065348936,32,FLEN)
NAN_BOXED(2130706437,32,FLEN)
NAN_BOXED(2130706527,32,FLEN)
NAN_BOXED(1065344794,32,FLEN)
NAN_BOXED(2130706451,32,FLEN)
NAN_BOXED(2130706523,32,FLEN)
NAN_BOXED(1065336478,32,FLEN)
NAN_BOXED(2130706517,32,FLEN)
NAN_BOXED(2130706516,32,FLEN)
NAN_BOXED(1065320196,32,FLEN)
NAN_BOXED(2130706473,32,FLEN)
NAN_BOXED(2130706440,32,FLEN)
NAN_BOXED(1065287652,32,FLEN)
NAN_BOXED(2130706437,32,FLEN)
NAN_BOXED(2130706462,32,FLEN)
NAN_BOXED(1065221950,32,FLEN)
NAN_BOXED(2130706498,32,FLEN)
NAN_BOXED(2130706479,32,FLEN)
NAN_BOXED(1065090853,32,FLEN)
NAN_BOXED(2130706494,32,FLEN)
NAN_BOXED(2130706479,32,FLEN)
NAN_BOXED(1064828713,32,FLEN)
NAN_BOXED(2130706493,32,FLEN)
NAN_BOXED(2130706504,32,FLEN)
NAN_BOXED(1064304457,32,FLEN)
NAN_BOXED(2130706455,32,FLEN)
NAN_BOXED(2130706471,32,FLEN)
NAN_BOXED(1063255958,32,FLEN)
NAN_BOXED(2130706450,32,FLEN)
NAN_BOXED(2130706515,32,FLEN)
NAN_BOXED(1061158716,32,FLEN)
NAN_BOXED(2130706467,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(1056964370,32,FLEN)
NAN_BOXED(2130706489,32,FLEN)
NAN_BOXED(25,32,FLEN)
NAN_BOXED(3228775219,32,FLEN)
NAN_BOXED(91,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(3226118827,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(3224021675,32,FLEN)
NAN_BOXED(32,32,FLEN)
NAN_BOXED(65,32,FLEN)
NAN_BOXED(3211288198,32,FLEN)
NAN_BOXED(27,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(3224693839,32,FLEN)
NAN_BOXED(83,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(3258646528,32,FLEN)
NAN_BOXED(59,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(3231711232,32,FLEN)
NAN_BOXED(59,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(3256776231,32,FLEN)
NAN_BOXED(12,32,FLEN)
NAN_BOXED(25,32,FLEN)
NAN_BOXED(1092070932,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(94,32,FLEN)
NAN_BOXED(1092716588,32,FLEN)
NAN_BOXED(75,32,FLEN)
NAN_BOXED(72,32,FLEN)
NAN_BOXED(1113653248,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(21,32,FLEN)
NAN_BOXED(1145168262,32,FLEN)
NAN_BOXED(98,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 16*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
