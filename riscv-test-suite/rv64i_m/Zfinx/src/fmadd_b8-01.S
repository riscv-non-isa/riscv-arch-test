
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 04:35:29 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fmadd_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fmadd_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x30, rs2==x29, rs3==x28, rd==x31,fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec11307; op2val:0xbf2f4ae5;
op3val:0x3e84347e; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==x31, rs2==x31, rs3==x31, rd==x30,fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x31; op3:x31; dest:x30; op1val:0x3ec11307; op2val:0x3ec11307;
op3val:0x3ec11307; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x30, x31, x31, x31, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x28, rs2==x30, rs3==x29, rd==x29,fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x28; op2:x30; op3:x29; dest:x29; op1val:0x3ec11307; op2val:0xbf2f4ae5;
op3val:0x3e84347e; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x29, x28, x30, x29, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==x27, rs2==x28, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x27; op2:x28; op3:x27; dest:x27; op1val:0x3ec11307; op2val:0xbf2f4ae5;
op3val:0x3ec11307; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x27, x27, x28, x27, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x26, rs2==x27, rs3==x30, rd==x26,fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x26; op2:x27; op3:x30; dest:x26; op1val:0x3ec11307; op2val:0xbf2f4ae5;
op3val:0x3e84347e; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x26, x26, x27, x30, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x29, rs2==x26, rs3==x26, rd==x28,fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x29; op2:x26; op3:x26; dest:x28; op1val:0x3e51b8c7; op2val:0xbe8fdea9;
op3val:0xbe8fdea9; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x28, x29, x26, x26, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==x24, rs2==x25, rs3==x25, rd==x25,fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x24; op2:x25; op3:x25; dest:x25; op1val:0x3e51b8c7; op2val:0xbe8fdea9;
op3val:0xbe8fdea9; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x25, x24, x25, x25, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x25, rs2==x24, rs3==x23, rd==x24,fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x25; op2:x24; op3:x23; dest:x24; op1val:0x3e51b8c7; op2val:0xbe8fdea9;
op3val:0x3d6bb940; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x24, x25, x24, x23, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rd != rs3, rs1==x23, rs2==x23, rs3==x24, rd==x23,fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x23; op2:x23; op3:x24; dest:x23; op1val:0x3e51b8c7; op2val:0x3e51b8c7;
op3val:0x3d6bb940; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x23, x23, x23, x24, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x21, rs2==x20, rs3==x21, rd==x22,fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x21; op2:x20; op3:x21; dest:x22; op1val:0x3e51b8c7; op2val:0xbe8fdea9;
op3val:0x3e51b8c7; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x22, x21, x20, x21, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0x3e852c03; op2val:0x3e852c03;
op3val:0x3e852c03; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x19, x19, x19, x19, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x22, rs2==x22, rs3==x20, rd==x21,fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x22; op2:x22; op3:x20; dest:x21; op1val:0x3e852c03; op2val:0x3e852c03;
op3val:0x3d9f1412; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x21, x22, x22, x20, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x18, rs2==x21, rs3==x22, rd==x20,fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x18; op2:x21; op3:x22; dest:x20; op1val:0x3e852c03; op2val:0xbe98e67e;
op3val:0x3d9f1412; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x20, x18, x21, x22, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x20, rs2==x17, rs3==x16, rd==x18,fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x20; op2:x17; op3:x16; dest:x18; op1val:0x3e852c03; op2val:0xbe98e67e;
op3val:0x3d9f1412; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x18, x20, x17, x16, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x18, rs3==x15, rd==x17,fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x16; op2:x18; op3:x15; dest:x17; op1val:0x3e852c03; op2val:0xbe98e67e;
op3val:0x3d9f1412; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x17, x16, x18, x15, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x17, rs2==x15, rs3==x18, rd==x16,fs1 == 0 and fe1 == 0x7e and fm1 == 0x78931d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0ce316 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x08ccf4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x17; op2:x15; op3:x18; dest:x16; op1val:0x3f78931d; op2val:0xbf0ce316;
op3val:0x3f08ccf4; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x16, x17, x15, x18, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rs3==x17, rd==x15,fs1 == 0 and fe1 == 0x7e and fm1 == 0x78931d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0ce316 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x08ccf4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x14; op2:x16; op3:x17; dest:x15; op1val:0x3f78931d; op2val:0xbf0ce316;
op3val:0x3f08ccf4; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x15, x14, x16, x17, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x15, rs2==x13, rs3==x12, rd==x14,fs1 == 0 and fe1 == 0x7e and fm1 == 0x78931d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0ce316 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x08ccf4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x15; op2:x13; op3:x12; dest:x14; op1val:0x3f78931d; op2val:0xbf0ce316;
op3val:0x3f08ccf4; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x14, x15, x13, x12, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x14, rs3==x11, rd==x13,fs1 == 0 and fe1 == 0x7e and fm1 == 0x78931d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0ce316 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x08ccf4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x12; op2:x14; op3:x11; dest:x13; op1val:0x3f78931d; op2val:0xbf0ce316;
op3val:0x3f08ccf4; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x13, x12, x14, x11, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x13, rs2==x11, rs3==x14, rd==x12,fs1 == 0 and fe1 == 0x7e and fm1 == 0x78931d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0ce316 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x08ccf4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x13; op2:x11; op3:x14; dest:x12; op1val:0x3f78931d; op2val:0xbf0ce316;
op3val:0x3f08ccf4; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x12, x13, x11, x14, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x12, rs3==x13, rd==x11,fs1 == 0 and fe1 == 0x7a and fm1 == 0x6802c9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x464ed6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33b99b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x10; op2:x12; op3:x13; dest:x11; op1val:0x3d6802c9; op2val:0xc0c64ed6;
op3val:0x3eb3b99b; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x11, x10, x12, x13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x12,test_dataset_1)

inst_21:
// rs1==x11, rs2==x9, rs3==x8, rd==x10,fs1 == 0 and fe1 == 0x7a and fm1 == 0x6802c9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x464ed6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33b99b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x11; op2:x9; op3:x8; dest:x10; op1val:0x3d6802c9; op2val:0xc0c64ed6;
op3val:0x3eb3b99b; valaddr_reg:x12; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x10, x11, x9, x8, dyn, 32, 0, x12, 0*FLEN/8, x13, x1, x2)

inst_22:
// rs1==x8, rs2==x10, rs3==x7, rd==x9,fs1 == 0 and fe1 == 0x7a and fm1 == 0x6802c9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x464ed6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33b99b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x8; op2:x10; op3:x7; dest:x9; op1val:0x3d6802c9; op2val:0xc0c64ed6;
op3val:0x3eb3b99b; valaddr_reg:x12; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x9, x8, x10, x7, dyn, 64, 0, x12, 3*FLEN/8, x13, x1, x2)

inst_23:
// rs1==x9, rs2==x7, rs3==x10, rd==x8,fs1 == 0 and fe1 == 0x7a and fm1 == 0x6802c9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x464ed6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33b99b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x9; op2:x7; op3:x10; dest:x8; op1val:0x3d6802c9; op2val:0xc0c64ed6;
op3val:0x3eb3b99b; valaddr_reg:x12; val_offset:6*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x8, x9, x7, x10, dyn, 96, 0, x12, 6*FLEN/8, x13, x1, x10)
RVTEST_SIGBASE(x9,signature_x9_0)

inst_24:
// rs1==x6, rs2==x8, rs3==x9, rd==x7,fs1 == 0 and fe1 == 0x7a and fm1 == 0x6802c9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x464ed6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33b99b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x6; op2:x8; op3:x9; dest:x7; op1val:0x3d6802c9; op2val:0xc0c64ed6;
op3val:0x3eb3b99b; valaddr_reg:x12; val_offset:9*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x7, x6, x8, x9, dyn, 128, 0, x12, 9*FLEN/8, x13, x9, x10)

inst_25:
// rs1==x7, rs2==x5, rs3==x4, rd==x6,fs1 == 0 and fe1 == 0x7b and fm1 == 0x4af4ae and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f2d24 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6304ef and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x7; op2:x5; op3:x4; dest:x6; op1val:0x3dcaf4ae; op2val:0xc10f2d24;
op3val:0x3f6304ef; valaddr_reg:x12; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x6, x7, x5, x4, dyn, 0, 0, x12, 12*FLEN/8, x13, x9, x10)

inst_26:
// rs1==x4, rs2==x6, rs3==x3, rd==x5,fs1 == 0 and fe1 == 0x7b and fm1 == 0x4af4ae and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f2d24 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6304ef and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x4; op2:x6; op3:x3; dest:x5; op1val:0x3dcaf4ae; op2val:0xc10f2d24;
op3val:0x3f6304ef; valaddr_reg:x12; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x5, x4, x6, x3, dyn, 32, 0, x12, 15*FLEN/8, x13, x9, x10)

inst_27:
// rs1==x5, rs2==x3, rs3==x6, rd==x4,fs1 == 0 and fe1 == 0x7b and fm1 == 0x4af4ae and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f2d24 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6304ef and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x5; op2:x3; op3:x6; dest:x4; op1val:0x3dcaf4ae; op2val:0xc10f2d24;
op3val:0x3f6304ef; valaddr_reg:x12; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x4, x5, x3, x6, dyn, 64, 0, x12, 18*FLEN/8, x13, x9, x10)

inst_28:
// rs1==x2, rs2==x4, rs3==x5, rd==x3,fs1 == 0 and fe1 == 0x7b and fm1 == 0x4af4ae and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f2d24 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6304ef and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x2; op2:x4; op3:x5; dest:x3; op1val:0x3dcaf4ae; op2val:0xc10f2d24;
op3val:0x3f6304ef; valaddr_reg:x12; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x3, x2, x4, x5, dyn, 96, 0, x12, 21*FLEN/8, x13, x9, x10)

inst_29:
// rs1==x3, rs2==x1, rs3==x0, rd==x2,fs1 == 0 and fe1 == 0x7b and fm1 == 0x4af4ae and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f2d24 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6304ef and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x3; op2:x1; op3:x0; dest:x2; op1val:0x3dcaf4ae; op2val:0xc10f2d24;
op3val:0x0; valaddr_reg:x12; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x2, x3, x1, x0, dyn, 128, 0, x12, 24*FLEN/8, x13, x9, x10)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x3f07eb17; op2val:0xbfb5a405;
op3val:0x3f40e09a; valaddr_reg:x12; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x1, x30, x29, dyn, 0, 0, x12, 27*FLEN/8, x13, x9, x10)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0xbfb5a405;
op3val:0x3f40e09a; valaddr_reg:x12; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x0, x30, x29, dyn, 32, 0, x12, 30*FLEN/8, x13, x9, x10)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x3f07eb17; op2val:0xbfb5a405;
op3val:0x3f40e09a; valaddr_reg:x12; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x2, x29, dyn, 64, 0, x12, 33*FLEN/8, x13, x9, x10)

inst_33:
// rs2==x0,fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x3f07eb17; op2val:0x0;
op3val:0x3f40e09a; valaddr_reg:x12; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x0, x29, dyn, 96, 0, x12, 36*FLEN/8, x13, x9, x10)

inst_34:
// rs3==x2,fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x2; dest:x31; op1val:0x3f07eb17; op2val:0xbfb5a405;
op3val:0x3f40e09a; valaddr_reg:x12; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x2, dyn, 128, 0, x12, 39*FLEN/8, x13, x9, x10)

inst_35:
// rs3==x1,fs1 == 0 and fe1 == 0x7d and fm1 == 0x69982d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f10c7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a2461 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x3ee9982d; op2val:0xbf6f10c7;
op3val:0x3eda2461; valaddr_reg:x12; val_offset:42*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x1, dyn, 0, 0, x12, 42*FLEN/8, x13, x9, x10)

inst_36:
// rd==x1,fs1 == 0 and fe1 == 0x7d and fm1 == 0x69982d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f10c7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a2461 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x3ee9982d; op2val:0xbf6f10c7;
op3val:0x3eda2461; valaddr_reg:x12; val_offset:45*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x1, x31, x30, x29, dyn, 32, 0, x12, 45*FLEN/8, x13, x9, x10)

inst_37:
// rd==x0,fs1 == 0 and fe1 == 0x7d and fm1 == 0x69982d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f10c7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a2461 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x3ee9982d; op2val:0xbf6f10c7;
op3val:0x3eda2461; valaddr_reg:x12; val_offset:48*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x0, x31, x30, x29, dyn, 64, 0, x12, 48*FLEN/8, x13, x9, x10)

inst_38:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69982d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f10c7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a2461 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee9982d; op2val:0xbf6f10c7;
op3val:0x3eda2461; valaddr_reg:x12; val_offset:51*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 51*FLEN/8, x13, x9, x10)

inst_39:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69982d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f10c7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a2461 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee9982d; op2val:0xbf6f10c7;
op3val:0x3eda2461; valaddr_reg:x12; val_offset:54*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 54*FLEN/8, x13, x9, x10)

inst_40:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca48c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b2e86 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x488465 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ca48c; op2val:0xbf4b2e86;
op3val:0x3f488465; valaddr_reg:x12; val_offset:57*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57*FLEN/8, x13, x9, x10)

inst_41:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca48c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b2e86 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x488465 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ca48c; op2val:0xbf4b2e86;
op3val:0x3f488465; valaddr_reg:x12; val_offset:60*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 60*FLEN/8, x13, x9, x10)

inst_42:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca48c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b2e86 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x488465 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ca48c; op2val:0xbf4b2e86;
op3val:0x3f488465; valaddr_reg:x12; val_offset:63*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 63*FLEN/8, x13, x9, x10)

inst_43:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca48c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b2e86 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x488465 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ca48c; op2val:0xbf4b2e86;
op3val:0x3f488465; valaddr_reg:x12; val_offset:66*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 66*FLEN/8, x13, x9, x10)

inst_44:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca48c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b2e86 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x488465 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ca48c; op2val:0xbf4b2e86;
op3val:0x3f488465; valaddr_reg:x12; val_offset:69*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 69*FLEN/8, x13, x9, x10)

inst_45:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3873d7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6dc7ad and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2b531e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3873d7; op2val:0xbdedc7ad;
op3val:0x3dab531e; valaddr_reg:x12; val_offset:72*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 72*FLEN/8, x13, x9, x10)

inst_46:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3873d7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6dc7ad and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2b531e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3873d7; op2val:0xbdedc7ad;
op3val:0x3dab531e; valaddr_reg:x12; val_offset:75*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 75*FLEN/8, x13, x9, x10)

inst_47:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3873d7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6dc7ad and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2b531e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3873d7; op2val:0xbdedc7ad;
op3val:0x3dab531e; valaddr_reg:x12; val_offset:78*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 78*FLEN/8, x13, x9, x10)

inst_48:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3873d7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6dc7ad and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2b531e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3873d7; op2val:0xbdedc7ad;
op3val:0x3dab531e; valaddr_reg:x12; val_offset:81*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 81*FLEN/8, x13, x9, x10)

inst_49:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3873d7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6dc7ad and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2b531e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3873d7; op2val:0xbdedc7ad;
op3val:0x3dab531e; valaddr_reg:x12; val_offset:84*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 84*FLEN/8, x13, x9, x10)

inst_50:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fe5aa and fs2 == 1 and fe2 == 0x80 and fm2 == 0x65951d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x57242d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6fe5aa; op2val:0xc065951d;
op3val:0x3f57242d; valaddr_reg:x12; val_offset:87*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 87*FLEN/8, x13, x9, x10)

inst_51:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fe5aa and fs2 == 1 and fe2 == 0x80 and fm2 == 0x65951d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x57242d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6fe5aa; op2val:0xc065951d;
op3val:0x3f57242d; valaddr_reg:x12; val_offset:90*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 90*FLEN/8, x13, x9, x10)

inst_52:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fe5aa and fs2 == 1 and fe2 == 0x80 and fm2 == 0x65951d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x57242d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6fe5aa; op2val:0xc065951d;
op3val:0x3f57242d; valaddr_reg:x12; val_offset:93*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 93*FLEN/8, x13, x9, x10)

inst_53:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fe5aa and fs2 == 1 and fe2 == 0x80 and fm2 == 0x65951d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x57242d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6fe5aa; op2val:0xc065951d;
op3val:0x3f57242d; valaddr_reg:x12; val_offset:96*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 96*FLEN/8, x13, x9, x10)

inst_54:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fe5aa and fs2 == 1 and fe2 == 0x80 and fm2 == 0x65951d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x57242d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6fe5aa; op2val:0xc065951d;
op3val:0x3f57242d; valaddr_reg:x12; val_offset:99*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 99*FLEN/8, x13, x9, x10)

inst_55:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fb8b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07dbf2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c79bd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fb8b2; op2val:0xc087dbf2;
op3val:0x3f5c79bd; valaddr_reg:x12; val_offset:102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 102*FLEN/8, x13, x9, x10)

inst_56:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fb8b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07dbf2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c79bd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fb8b2; op2val:0xc087dbf2;
op3val:0x3f5c79bd; valaddr_reg:x12; val_offset:105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 105*FLEN/8, x13, x9, x10)

inst_57:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fb8b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07dbf2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c79bd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fb8b2; op2val:0xc087dbf2;
op3val:0x3f5c79bd; valaddr_reg:x12; val_offset:108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 108*FLEN/8, x13, x9, x10)

inst_58:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fb8b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07dbf2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c79bd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fb8b2; op2val:0xc087dbf2;
op3val:0x3f5c79bd; valaddr_reg:x12; val_offset:111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 111*FLEN/8, x13, x9, x10)

inst_59:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fb8b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07dbf2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c79bd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fb8b2; op2val:0xc087dbf2;
op3val:0x3f5c79bd; valaddr_reg:x12; val_offset:114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 114*FLEN/8, x13, x9, x10)

inst_60:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43dd43 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x121a4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f90a3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec3dd43; op2val:0xc0121a4f;
op3val:0x3f5f90a3; valaddr_reg:x12; val_offset:117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 117*FLEN/8, x13, x9, x10)

inst_61:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43dd43 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x121a4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f90a3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec3dd43; op2val:0xc0121a4f;
op3val:0x3f5f90a3; valaddr_reg:x12; val_offset:120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 120*FLEN/8, x13, x9, x10)

inst_62:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43dd43 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x121a4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f90a3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec3dd43; op2val:0xc0121a4f;
op3val:0x3f5f90a3; valaddr_reg:x12; val_offset:123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 123*FLEN/8, x13, x9, x10)

inst_63:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43dd43 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x121a4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f90a3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec3dd43; op2val:0xc0121a4f;
op3val:0x3f5f90a3; valaddr_reg:x12; val_offset:126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 126*FLEN/8, x13, x9, x10)

inst_64:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43dd43 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x121a4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f90a3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec3dd43; op2val:0xc0121a4f;
op3val:0x3f5f90a3; valaddr_reg:x12; val_offset:129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 129*FLEN/8, x13, x9, x10)

inst_65:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f8bae and fs2 == 1 and fe2 == 0x7c and fm2 == 0x03ea69 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03ae79 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f8bae; op2val:0xbe03ea69;
op3val:0x3e03ae79; valaddr_reg:x12; val_offset:132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 132*FLEN/8, x13, x9, x10)

inst_66:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f8bae and fs2 == 1 and fe2 == 0x7c and fm2 == 0x03ea69 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03ae79 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f8bae; op2val:0xbe03ea69;
op3val:0x3e03ae79; valaddr_reg:x12; val_offset:135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 135*FLEN/8, x13, x9, x10)

inst_67:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f8bae and fs2 == 1 and fe2 == 0x7c and fm2 == 0x03ea69 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03ae79 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f8bae; op2val:0xbe03ea69;
op3val:0x3e03ae79; valaddr_reg:x12; val_offset:138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 138*FLEN/8, x13, x9, x10)

inst_68:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f8bae and fs2 == 1 and fe2 == 0x7c and fm2 == 0x03ea69 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03ae79 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f8bae; op2val:0xbe03ea69;
op3val:0x3e03ae79; valaddr_reg:x12; val_offset:141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 141*FLEN/8, x13, x9, x10)

inst_69:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f8bae and fs2 == 1 and fe2 == 0x7c and fm2 == 0x03ea69 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03ae79 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f8bae; op2val:0xbe03ea69;
op3val:0x3e03ae79; valaddr_reg:x12; val_offset:144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 144*FLEN/8, x13, x9, x10)

inst_70:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6111 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e0c8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48d639 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a6111; op2val:0xbf7e0c8b;
op3val:0x3f48d639; valaddr_reg:x12; val_offset:147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 147*FLEN/8, x13, x9, x10)

inst_71:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6111 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e0c8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48d639 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a6111; op2val:0xbf7e0c8b;
op3val:0x3f48d639; valaddr_reg:x12; val_offset:150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 150*FLEN/8, x13, x9, x10)

inst_72:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6111 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e0c8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48d639 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a6111; op2val:0xbf7e0c8b;
op3val:0x3f48d639; valaddr_reg:x12; val_offset:153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 153*FLEN/8, x13, x9, x10)

inst_73:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6111 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e0c8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48d639 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a6111; op2val:0xbf7e0c8b;
op3val:0x3f48d639; valaddr_reg:x12; val_offset:156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 156*FLEN/8, x13, x9, x10)

inst_74:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6111 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e0c8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48d639 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4a6111; op2val:0xbf7e0c8b;
op3val:0x3f48d639; valaddr_reg:x12; val_offset:159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 159*FLEN/8, x13, x9, x10)

inst_75:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x10019b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x6843b3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x02a789 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c90019b; op2val:0xc0e843b3;
op3val:0x3e02a789; valaddr_reg:x12; val_offset:162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 162*FLEN/8, x13, x9, x10)

inst_76:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x10019b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x6843b3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x02a789 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c90019b; op2val:0xc0e843b3;
op3val:0x3e02a789; valaddr_reg:x12; val_offset:165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 165*FLEN/8, x13, x9, x10)

inst_77:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x10019b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x6843b3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x02a789 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c90019b; op2val:0xc0e843b3;
op3val:0x3e02a789; valaddr_reg:x12; val_offset:168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 168*FLEN/8, x13, x9, x10)

inst_78:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x10019b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x6843b3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x02a789 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c90019b; op2val:0xc0e843b3;
op3val:0x3e02a789; valaddr_reg:x12; val_offset:171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 171*FLEN/8, x13, x9, x10)

inst_79:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x10019b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x6843b3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x02a789 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c90019b; op2val:0xc0e843b3;
op3val:0x3e02a789; valaddr_reg:x12; val_offset:174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 174*FLEN/8, x13, x9, x10)

inst_80:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35f018 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5e0449 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1dc941 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f35f018; op2val:0xbd5e0449;
op3val:0x3d1dc941; valaddr_reg:x12; val_offset:177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 177*FLEN/8, x13, x9, x10)

inst_81:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35f018 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5e0449 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1dc941 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f35f018; op2val:0xbd5e0449;
op3val:0x3d1dc941; valaddr_reg:x12; val_offset:180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 180*FLEN/8, x13, x9, x10)

inst_82:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35f018 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5e0449 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1dc941 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f35f018; op2val:0xbd5e0449;
op3val:0x3d1dc941; valaddr_reg:x12; val_offset:183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 183*FLEN/8, x13, x9, x10)

inst_83:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35f018 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5e0449 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1dc941 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f35f018; op2val:0xbd5e0449;
op3val:0x3d1dc941; valaddr_reg:x12; val_offset:186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 186*FLEN/8, x13, x9, x10)

inst_84:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35f018 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5e0449 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1dc941 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f35f018; op2val:0xbd5e0449;
op3val:0x3d1dc941; valaddr_reg:x12; val_offset:189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 189*FLEN/8, x13, x9, x10)

inst_85:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6beae6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x32fdff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24f367 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eebeae6; op2val:0xbf32fdff;
op3val:0x3ea4f367; valaddr_reg:x12; val_offset:192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 192*FLEN/8, x13, x9, x10)

inst_86:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6beae6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x32fdff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24f367 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eebeae6; op2val:0xbf32fdff;
op3val:0x3ea4f367; valaddr_reg:x12; val_offset:195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 195*FLEN/8, x13, x9, x10)

inst_87:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6beae6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x32fdff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24f367 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eebeae6; op2val:0xbf32fdff;
op3val:0x3ea4f367; valaddr_reg:x12; val_offset:198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 198*FLEN/8, x13, x9, x10)

inst_88:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6beae6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x32fdff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24f367 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eebeae6; op2val:0xbf32fdff;
op3val:0x3ea4f367; valaddr_reg:x12; val_offset:201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 201*FLEN/8, x13, x9, x10)

inst_89:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6beae6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x32fdff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24f367 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eebeae6; op2val:0xbf32fdff;
op3val:0x3ea4f367; valaddr_reg:x12; val_offset:204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 204*FLEN/8, x13, x9, x10)

inst_90:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b9391 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x180275 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x71c326 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4b9391; op2val:0xbd980275;
op3val:0x3d71c326; valaddr_reg:x12; val_offset:207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 207*FLEN/8, x13, x9, x10)

inst_91:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b9391 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x180275 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x71c326 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4b9391; op2val:0xbd980275;
op3val:0x3d71c326; valaddr_reg:x12; val_offset:210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 210*FLEN/8, x13, x9, x10)

inst_92:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b9391 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x180275 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x71c326 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4b9391; op2val:0xbd980275;
op3val:0x3d71c326; valaddr_reg:x12; val_offset:213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 213*FLEN/8, x13, x9, x10)

inst_93:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b9391 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x180275 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x71c326 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4b9391; op2val:0xbd980275;
op3val:0x3d71c326; valaddr_reg:x12; val_offset:216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 216*FLEN/8, x13, x9, x10)

inst_94:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b9391 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x180275 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x71c326 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4b9391; op2val:0xbd980275;
op3val:0x3d71c326; valaddr_reg:x12; val_offset:219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 219*FLEN/8, x13, x9, x10)

inst_95:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e642d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5d5980 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x08f3dc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9e642d; op2val:0xbddd5980;
op3val:0x3d08f3dc; valaddr_reg:x12; val_offset:222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 222*FLEN/8, x13, x9, x10)

inst_96:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e642d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5d5980 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x08f3dc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9e642d; op2val:0xbddd5980;
op3val:0x3d08f3dc; valaddr_reg:x12; val_offset:225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 225*FLEN/8, x13, x9, x10)

inst_97:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e642d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5d5980 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x08f3dc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9e642d; op2val:0xbddd5980;
op3val:0x3d08f3dc; valaddr_reg:x12; val_offset:228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 228*FLEN/8, x13, x9, x10)

inst_98:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e642d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5d5980 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x08f3dc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9e642d; op2val:0xbddd5980;
op3val:0x3d08f3dc; valaddr_reg:x12; val_offset:231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 231*FLEN/8, x13, x9, x10)

inst_99:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e642d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5d5980 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x08f3dc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9e642d; op2val:0xbddd5980;
op3val:0x3d08f3dc; valaddr_reg:x12; val_offset:234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 234*FLEN/8, x13, x9, x10)

inst_100:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x599df6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x532bf7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x338292 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd99df6; op2val:0xc0d32bf7;
op3val:0x3f338292; valaddr_reg:x12; val_offset:237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 237*FLEN/8, x13, x9, x10)

inst_101:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x599df6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x532bf7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x338292 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd99df6; op2val:0xc0d32bf7;
op3val:0x3f338292; valaddr_reg:x12; val_offset:240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 240*FLEN/8, x13, x9, x10)

inst_102:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x599df6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x532bf7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x338292 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd99df6; op2val:0xc0d32bf7;
op3val:0x3f338292; valaddr_reg:x12; val_offset:243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 243*FLEN/8, x13, x9, x10)

inst_103:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x599df6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x532bf7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x338292 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd99df6; op2val:0xc0d32bf7;
op3val:0x3f338292; valaddr_reg:x12; val_offset:246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 246*FLEN/8, x13, x9, x10)

inst_104:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x599df6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x532bf7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x338292 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd99df6; op2val:0xc0d32bf7;
op3val:0x3f338292; valaddr_reg:x12; val_offset:249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 249*FLEN/8, x13, x9, x10)

inst_105:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23890e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x271e98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5583e7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23890e; op2val:0xbfa71e98;
op3val:0x3f5583e7; valaddr_reg:x12; val_offset:252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 252*FLEN/8, x13, x9, x10)

inst_106:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23890e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x271e98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5583e7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23890e; op2val:0xbfa71e98;
op3val:0x3f5583e7; valaddr_reg:x12; val_offset:255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 255*FLEN/8, x13, x9, x10)

inst_107:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23890e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x271e98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5583e7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23890e; op2val:0xbfa71e98;
op3val:0x3f5583e7; valaddr_reg:x12; val_offset:258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 258*FLEN/8, x13, x9, x10)

inst_108:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23890e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x271e98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5583e7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23890e; op2val:0xbfa71e98;
op3val:0x3f5583e7; valaddr_reg:x12; val_offset:261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 261*FLEN/8, x13, x9, x10)

inst_109:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23890e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x271e98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5583e7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23890e; op2val:0xbfa71e98;
op3val:0x3f5583e7; valaddr_reg:x12; val_offset:264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 264*FLEN/8, x13, x9, x10)

inst_110:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ab347 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0c1218 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f5300 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ab347; op2val:0xbf8c1218;
op3val:0x3f6f5300; valaddr_reg:x12; val_offset:267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 267*FLEN/8, x13, x9, x10)

inst_111:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ab347 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0c1218 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f5300 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ab347; op2val:0xbf8c1218;
op3val:0x3f6f5300; valaddr_reg:x12; val_offset:270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 270*FLEN/8, x13, x9, x10)

inst_112:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ab347 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0c1218 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f5300 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ab347; op2val:0xbf8c1218;
op3val:0x3f6f5300; valaddr_reg:x12; val_offset:273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 273*FLEN/8, x13, x9, x10)

inst_113:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ab347 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0c1218 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f5300 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ab347; op2val:0xbf8c1218;
op3val:0x3f6f5300; valaddr_reg:x12; val_offset:276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 276*FLEN/8, x13, x9, x10)

inst_114:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ab347 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0c1218 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f5300 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5ab347; op2val:0xbf8c1218;
op3val:0x3f6f5300; valaddr_reg:x12; val_offset:279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 279*FLEN/8, x13, x9, x10)

inst_115:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32da21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b352a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f32da21; op2val:0xbf116e42;
op3val:0x3ecb352a; valaddr_reg:x12; val_offset:282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 282*FLEN/8, x13, x9, x10)

inst_116:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32da21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b352a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f32da21; op2val:0xbf116e42;
op3val:0x3ecb352a; valaddr_reg:x12; val_offset:285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 285*FLEN/8, x13, x9, x10)

inst_117:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32da21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b352a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f32da21; op2val:0xbf116e42;
op3val:0x3ecb352a; valaddr_reg:x12; val_offset:288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 288*FLEN/8, x13, x9, x10)

inst_118:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32da21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b352a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f32da21; op2val:0xbf116e42;
op3val:0x3ecb352a; valaddr_reg:x12; val_offset:291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 291*FLEN/8, x13, x9, x10)

inst_119:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32da21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b352a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f32da21; op2val:0xbf116e42;
op3val:0x3ecb352a; valaddr_reg:x12; val_offset:294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 294*FLEN/8, x13, x9, x10)

inst_120:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f2248 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x257519 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24e5cd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f2248; op2val:0xbea57519;
op3val:0x3ea4e5cd; valaddr_reg:x12; val_offset:297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 297*FLEN/8, x13, x9, x10)

inst_121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f2248 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x257519 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24e5cd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f2248; op2val:0xbea57519;
op3val:0x3ea4e5cd; valaddr_reg:x12; val_offset:300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 300*FLEN/8, x13, x9, x10)

inst_122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f2248 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x257519 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24e5cd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f2248; op2val:0xbea57519;
op3val:0x3ea4e5cd; valaddr_reg:x12; val_offset:303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 303*FLEN/8, x13, x9, x10)

inst_123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f2248 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x257519 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24e5cd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f2248; op2val:0xbea57519;
op3val:0x3ea4e5cd; valaddr_reg:x12; val_offset:306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 306*FLEN/8, x13, x9, x10)

inst_124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f2248 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x257519 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24e5cd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7f2248; op2val:0xbea57519;
op3val:0x3ea4e5cd; valaddr_reg:x12; val_offset:309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 309*FLEN/8, x13, x9, x10)

inst_125:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297f97 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0566b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30a698 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f297f97; op2val:0xbf8566b8;
op3val:0x3f30a698; valaddr_reg:x12; val_offset:312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 312*FLEN/8, x13, x9, x10)

inst_126:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297f97 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0566b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30a698 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f297f97; op2val:0xbf8566b8;
op3val:0x3f30a698; valaddr_reg:x12; val_offset:315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 315*FLEN/8, x13, x9, x10)

inst_127:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297f97 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0566b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30a698 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f297f97; op2val:0xbf8566b8;
op3val:0x3f30a698; valaddr_reg:x12; val_offset:318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 318*FLEN/8, x13, x9, x10)

inst_128:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297f97 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0566b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30a698 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f297f97; op2val:0xbf8566b8;
op3val:0x3f30a698; valaddr_reg:x12; val_offset:321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 321*FLEN/8, x13, x9, x10)

inst_129:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297f97 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0566b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30a698 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f297f97; op2val:0xbf8566b8;
op3val:0x3f30a698; valaddr_reg:x12; val_offset:324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 324*FLEN/8, x13, x9, x10)

inst_130:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d665 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x371dc9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ede2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e39d665; op2val:0xc0371dc9;
op3val:0x3f04ede2; valaddr_reg:x12; val_offset:327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 327*FLEN/8, x13, x9, x10)

inst_131:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d665 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x371dc9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ede2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e39d665; op2val:0xc0371dc9;
op3val:0x3f04ede2; valaddr_reg:x12; val_offset:330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 330*FLEN/8, x13, x9, x10)

inst_132:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d665 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x371dc9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ede2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e39d665; op2val:0xc0371dc9;
op3val:0x3f04ede2; valaddr_reg:x12; val_offset:333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 333*FLEN/8, x13, x9, x10)

inst_133:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d665 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x371dc9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ede2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e39d665; op2val:0xc0371dc9;
op3val:0x3f04ede2; valaddr_reg:x12; val_offset:336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 336*FLEN/8, x13, x9, x10)

inst_134:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d665 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x371dc9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ede2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e39d665; op2val:0xc0371dc9;
op3val:0x3f04ede2; valaddr_reg:x12; val_offset:339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 339*FLEN/8, x13, x9, x10)

inst_135:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f282e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x421aec and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04cedf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f282e; op2val:0xbf421aec;
op3val:0x3f04cedf; valaddr_reg:x12; val_offset:342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 342*FLEN/8, x13, x9, x10)

inst_136:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f282e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x421aec and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04cedf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f282e; op2val:0xbf421aec;
op3val:0x3f04cedf; valaddr_reg:x12; val_offset:345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 345*FLEN/8, x13, x9, x10)

inst_137:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f282e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x421aec and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04cedf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f282e; op2val:0xbf421aec;
op3val:0x3f04cedf; valaddr_reg:x12; val_offset:348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 348*FLEN/8, x13, x9, x10)

inst_138:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f282e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x421aec and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04cedf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f282e; op2val:0xbf421aec;
op3val:0x3f04cedf; valaddr_reg:x12; val_offset:351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 351*FLEN/8, x13, x9, x10)

inst_139:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f282e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x421aec and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04cedf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f282e; op2val:0xbf421aec;
op3val:0x3f04cedf; valaddr_reg:x12; val_offset:354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 354*FLEN/8, x13, x9, x10)

inst_140:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17359b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c5a88 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716863 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e97359b; op2val:0xc04c5a88;
op3val:0x3f716863; valaddr_reg:x12; val_offset:357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 357*FLEN/8, x13, x9, x10)

inst_141:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17359b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c5a88 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716863 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e97359b; op2val:0xc04c5a88;
op3val:0x3f716863; valaddr_reg:x12; val_offset:360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 360*FLEN/8, x13, x9, x10)

inst_142:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17359b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c5a88 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716863 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e97359b; op2val:0xc04c5a88;
op3val:0x3f716863; valaddr_reg:x12; val_offset:363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 363*FLEN/8, x13, x9, x10)

inst_143:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17359b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c5a88 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716863 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e97359b; op2val:0xc04c5a88;
op3val:0x3f716863; valaddr_reg:x12; val_offset:366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 366*FLEN/8, x13, x9, x10)

inst_144:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17359b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c5a88 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716863 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e97359b; op2val:0xc04c5a88;
op3val:0x3f716863; valaddr_reg:x12; val_offset:369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 369*FLEN/8, x13, x9, x10)

inst_145:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4bfc00 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1cf775 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a257b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ccbfc00; op2val:0xc21cf775;
op3val:0x3f7a257b; valaddr_reg:x12; val_offset:372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 372*FLEN/8, x13, x9, x10)

inst_146:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4bfc00 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1cf775 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a257b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ccbfc00; op2val:0xc21cf775;
op3val:0x3f7a257b; valaddr_reg:x12; val_offset:375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 375*FLEN/8, x13, x9, x10)

inst_147:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4bfc00 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1cf775 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a257b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ccbfc00; op2val:0xc21cf775;
op3val:0x3f7a257b; valaddr_reg:x12; val_offset:378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 378*FLEN/8, x13, x9, x10)

inst_148:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4bfc00 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1cf775 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a257b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ccbfc00; op2val:0xc21cf775;
op3val:0x3f7a257b; valaddr_reg:x12; val_offset:381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 381*FLEN/8, x13, x9, x10)

inst_149:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4bfc00 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1cf775 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a257b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ccbfc00; op2val:0xc21cf775;
op3val:0x3f7a257b; valaddr_reg:x12; val_offset:384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 384*FLEN/8, x13, x9, x10)

inst_150:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x001add and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1eb63b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1ed78b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e801add; op2val:0xbf1eb63b;
op3val:0x3e1ed78b; valaddr_reg:x12; val_offset:387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 387*FLEN/8, x13, x9, x10)

inst_151:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x001add and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1eb63b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1ed78b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e801add; op2val:0xbf1eb63b;
op3val:0x3e1ed78b; valaddr_reg:x12; val_offset:390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 390*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_1)

inst_152:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x001add and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1eb63b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1ed78b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e801add; op2val:0xbf1eb63b;
op3val:0x3e1ed78b; valaddr_reg:x12; val_offset:393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 393*FLEN/8, x13, x9, x10)

inst_153:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x001add and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1eb63b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1ed78b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e801add; op2val:0xbf1eb63b;
op3val:0x3e1ed78b; valaddr_reg:x12; val_offset:396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 396*FLEN/8, x13, x9, x10)

inst_154:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x001add and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1eb63b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1ed78b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e801add; op2val:0xbf1eb63b;
op3val:0x3e1ed78b; valaddr_reg:x12; val_offset:399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 399*FLEN/8, x13, x9, x10)

inst_155:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5fed and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5d5af6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x595b21 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7b5fed; op2val:0xbe5d5af6;
op3val:0x3e595b21; valaddr_reg:x12; val_offset:402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 402*FLEN/8, x13, x9, x10)

inst_156:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5fed and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5d5af6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x595b21 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7b5fed; op2val:0xbe5d5af6;
op3val:0x3e595b21; valaddr_reg:x12; val_offset:405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 405*FLEN/8, x13, x9, x10)

inst_157:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5fed and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5d5af6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x595b21 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7b5fed; op2val:0xbe5d5af6;
op3val:0x3e595b21; valaddr_reg:x12; val_offset:408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 408*FLEN/8, x13, x9, x10)

inst_158:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5fed and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5d5af6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x595b21 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7b5fed; op2val:0xbe5d5af6;
op3val:0x3e595b21; valaddr_reg:x12; val_offset:411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 411*FLEN/8, x13, x9, x10)

inst_159:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5fed and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5d5af6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x595b21 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7b5fed; op2val:0xbe5d5af6;
op3val:0x3e595b21; valaddr_reg:x12; val_offset:414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 414*FLEN/8, x13, x9, x10)

inst_160:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2241bb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a3ccd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57cc61 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2241bb; op2val:0xbf2a3ccd;
op3val:0x3ed7cc61; valaddr_reg:x12; val_offset:417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 417*FLEN/8, x13, x9, x10)

inst_161:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2241bb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a3ccd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57cc61 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2241bb; op2val:0xbf2a3ccd;
op3val:0x3ed7cc61; valaddr_reg:x12; val_offset:420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 420*FLEN/8, x13, x9, x10)

inst_162:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2241bb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a3ccd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57cc61 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2241bb; op2val:0xbf2a3ccd;
op3val:0x3ed7cc61; valaddr_reg:x12; val_offset:423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 423*FLEN/8, x13, x9, x10)

inst_163:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2241bb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a3ccd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57cc61 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2241bb; op2val:0xbf2a3ccd;
op3val:0x3ed7cc61; valaddr_reg:x12; val_offset:426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 426*FLEN/8, x13, x9, x10)

inst_164:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2241bb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a3ccd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57cc61 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2241bb; op2val:0xbf2a3ccd;
op3val:0x3ed7cc61; valaddr_reg:x12; val_offset:429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 429*FLEN/8, x13, x9, x10)

inst_165:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7dad09 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76460c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7409b1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7dad09; op2val:0xbf76460c;
op3val:0x3f7409b1; valaddr_reg:x12; val_offset:432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 432*FLEN/8, x13, x9, x10)

inst_166:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7dad09 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76460c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7409b1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7dad09; op2val:0xbf76460c;
op3val:0x3f7409b1; valaddr_reg:x12; val_offset:435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 435*FLEN/8, x13, x9, x10)

inst_167:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7dad09 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76460c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7409b1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7dad09; op2val:0xbf76460c;
op3val:0x3f7409b1; valaddr_reg:x12; val_offset:438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 438*FLEN/8, x13, x9, x10)

inst_168:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7dad09 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76460c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7409b1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7dad09; op2val:0xbf76460c;
op3val:0x3f7409b1; valaddr_reg:x12; val_offset:441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 441*FLEN/8, x13, x9, x10)

inst_169:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7dad09 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76460c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7409b1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7dad09; op2val:0xbf76460c;
op3val:0x3f7409b1; valaddr_reg:x12; val_offset:444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 444*FLEN/8, x13, x9, x10)

inst_170:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51af42 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x602218 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x379548 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f51af42; op2val:0xbd602218;
op3val:0x3d379548; valaddr_reg:x12; val_offset:447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 447*FLEN/8, x13, x9, x10)

inst_171:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51af42 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x602218 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x379548 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f51af42; op2val:0xbd602218;
op3val:0x3d379548; valaddr_reg:x12; val_offset:450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 450*FLEN/8, x13, x9, x10)

inst_172:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51af42 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x602218 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x379548 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f51af42; op2val:0xbd602218;
op3val:0x3d379548; valaddr_reg:x12; val_offset:453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 453*FLEN/8, x13, x9, x10)

inst_173:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51af42 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x602218 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x379548 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f51af42; op2val:0xbd602218;
op3val:0x3d379548; valaddr_reg:x12; val_offset:456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 456*FLEN/8, x13, x9, x10)

inst_174:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51af42 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x602218 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x379548 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f51af42; op2val:0xbd602218;
op3val:0x3d379548; valaddr_reg:x12; val_offset:459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 459*FLEN/8, x13, x9, x10)

inst_175:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4db0c1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1ba6e5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a203b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4db0c1; op2val:0xbe9ba6e5;
op3val:0x3e7a203b; valaddr_reg:x12; val_offset:462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 462*FLEN/8, x13, x9, x10)

inst_176:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4db0c1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1ba6e5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a203b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4db0c1; op2val:0xbe9ba6e5;
op3val:0x3e7a203b; valaddr_reg:x12; val_offset:465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 465*FLEN/8, x13, x9, x10)

inst_177:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4db0c1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1ba6e5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a203b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4db0c1; op2val:0xbe9ba6e5;
op3val:0x3e7a203b; valaddr_reg:x12; val_offset:468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 468*FLEN/8, x13, x9, x10)

inst_178:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4db0c1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1ba6e5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a203b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4db0c1; op2val:0xbe9ba6e5;
op3val:0x3e7a203b; valaddr_reg:x12; val_offset:471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 471*FLEN/8, x13, x9, x10)

inst_179:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4db0c1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1ba6e5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a203b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4db0c1; op2val:0xbe9ba6e5;
op3val:0x3e7a203b; valaddr_reg:x12; val_offset:474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 474*FLEN/8, x13, x9, x10)

inst_180:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1010df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52ea5a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6d6373 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9010df; op2val:0xbf52ea5a;
op3val:0x3d6d6373; valaddr_reg:x12; val_offset:477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 477*FLEN/8, x13, x9, x10)

inst_181:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1010df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52ea5a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6d6373 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9010df; op2val:0xbf52ea5a;
op3val:0x3d6d6373; valaddr_reg:x12; val_offset:480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 480*FLEN/8, x13, x9, x10)

inst_182:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1010df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52ea5a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6d6373 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9010df; op2val:0xbf52ea5a;
op3val:0x3d6d6373; valaddr_reg:x12; val_offset:483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 483*FLEN/8, x13, x9, x10)

inst_183:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1010df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52ea5a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6d6373 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9010df; op2val:0xbf52ea5a;
op3val:0x3d6d6373; valaddr_reg:x12; val_offset:486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 486*FLEN/8, x13, x9, x10)

inst_184:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1010df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52ea5a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6d6373 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9010df; op2val:0xbf52ea5a;
op3val:0x3d6d6373; valaddr_reg:x12; val_offset:489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 489*FLEN/8, x13, x9, x10)

inst_185:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27d697 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bef45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x252c45 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f27d697; op2val:0xbf7bef45;
op3val:0x3f252c45; valaddr_reg:x12; val_offset:492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 492*FLEN/8, x13, x9, x10)

inst_186:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27d697 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bef45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x252c45 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f27d697; op2val:0xbf7bef45;
op3val:0x3f252c45; valaddr_reg:x12; val_offset:495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 495*FLEN/8, x13, x9, x10)

inst_187:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27d697 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bef45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x252c45 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f27d697; op2val:0xbf7bef45;
op3val:0x3f252c45; valaddr_reg:x12; val_offset:498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 498*FLEN/8, x13, x9, x10)

inst_188:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27d697 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bef45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x252c45 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f27d697; op2val:0xbf7bef45;
op3val:0x3f252c45; valaddr_reg:x12; val_offset:501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 501*FLEN/8, x13, x9, x10)

inst_189:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27d697 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bef45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x252c45 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f27d697; op2val:0xbf7bef45;
op3val:0x3f252c45; valaddr_reg:x12; val_offset:504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 504*FLEN/8, x13, x9, x10)

inst_190:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x735a48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71b97e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x65c852 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef35a48; op2val:0xbef1b97e;
op3val:0x3e65c852; valaddr_reg:x12; val_offset:507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 507*FLEN/8, x13, x9, x10)

inst_191:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x735a48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71b97e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x65c852 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef35a48; op2val:0xbef1b97e;
op3val:0x3e65c852; valaddr_reg:x12; val_offset:510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 510*FLEN/8, x13, x9, x10)

inst_192:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x735a48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71b97e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x65c852 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef35a48; op2val:0xbef1b97e;
op3val:0x3e65c852; valaddr_reg:x12; val_offset:513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 513*FLEN/8, x13, x9, x10)

inst_193:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x735a48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71b97e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x65c852 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef35a48; op2val:0xbef1b97e;
op3val:0x3e65c852; valaddr_reg:x12; val_offset:516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 516*FLEN/8, x13, x9, x10)

inst_194:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x735a48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71b97e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x65c852 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef35a48; op2val:0xbef1b97e;
op3val:0x3e65c852; valaddr_reg:x12; val_offset:519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 519*FLEN/8, x13, x9, x10)

inst_195:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6456a5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x106d02 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00d1f8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6456a5; op2val:0xbe906d02;
op3val:0x3e80d1f8; valaddr_reg:x12; val_offset:522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 522*FLEN/8, x13, x9, x10)

inst_196:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6456a5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x106d02 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00d1f8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6456a5; op2val:0xbe906d02;
op3val:0x3e80d1f8; valaddr_reg:x12; val_offset:525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 525*FLEN/8, x13, x9, x10)

inst_197:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6456a5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x106d02 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00d1f8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6456a5; op2val:0xbe906d02;
op3val:0x3e80d1f8; valaddr_reg:x12; val_offset:528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 528*FLEN/8, x13, x9, x10)

inst_198:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6456a5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x106d02 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00d1f8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6456a5; op2val:0xbe906d02;
op3val:0x3e80d1f8; valaddr_reg:x12; val_offset:531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 531*FLEN/8, x13, x9, x10)

inst_199:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6456a5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x106d02 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00d1f8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6456a5; op2val:0xbe906d02;
op3val:0x3e80d1f8; valaddr_reg:x12; val_offset:534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 534*FLEN/8, x13, x9, x10)

inst_200:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fa3cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31228f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fac4a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fa3cf; op2val:0xbf31228f;
op3val:0x3e0fac4a; valaddr_reg:x12; val_offset:537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 537*FLEN/8, x13, x9, x10)

inst_201:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fa3cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31228f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fac4a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fa3cf; op2val:0xbf31228f;
op3val:0x3e0fac4a; valaddr_reg:x12; val_offset:540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 540*FLEN/8, x13, x9, x10)

inst_202:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fa3cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31228f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fac4a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fa3cf; op2val:0xbf31228f;
op3val:0x3e0fac4a; valaddr_reg:x12; val_offset:543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 543*FLEN/8, x13, x9, x10)

inst_203:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fa3cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31228f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fac4a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fa3cf; op2val:0xbf31228f;
op3val:0x3e0fac4a; valaddr_reg:x12; val_offset:546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 546*FLEN/8, x13, x9, x10)

inst_204:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fa3cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31228f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fac4a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fa3cf; op2val:0xbf31228f;
op3val:0x3e0fac4a; valaddr_reg:x12; val_offset:549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 549*FLEN/8, x13, x9, x10)

inst_205:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x769f50 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x6671a7 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5e00a0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f769f50; op2val:0xbd6671a7;
op3val:0x3d5e00a0; valaddr_reg:x12; val_offset:552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 552*FLEN/8, x13, x9, x10)

inst_206:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x769f50 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x6671a7 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5e00a0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f769f50; op2val:0xbd6671a7;
op3val:0x3d5e00a0; valaddr_reg:x12; val_offset:555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 555*FLEN/8, x13, x9, x10)

inst_207:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x769f50 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x6671a7 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5e00a0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f769f50; op2val:0xbd6671a7;
op3val:0x3d5e00a0; valaddr_reg:x12; val_offset:558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 558*FLEN/8, x13, x9, x10)

inst_208:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x769f50 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x6671a7 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5e00a0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f769f50; op2val:0xbd6671a7;
op3val:0x3d5e00a0; valaddr_reg:x12; val_offset:561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 561*FLEN/8, x13, x9, x10)

inst_209:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x769f50 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x6671a7 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5e00a0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f769f50; op2val:0xbd6671a7;
op3val:0x3d5e00a0; valaddr_reg:x12; val_offset:564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 564*FLEN/8, x13, x9, x10)

inst_210:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a86f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b3e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28c53a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68a86f; op2val:0xbf39b3e9;
op3val:0x3f28c53a; valaddr_reg:x12; val_offset:567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 567*FLEN/8, x13, x9, x10)

inst_211:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a86f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b3e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28c53a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68a86f; op2val:0xbf39b3e9;
op3val:0x3f28c53a; valaddr_reg:x12; val_offset:570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 570*FLEN/8, x13, x9, x10)

inst_212:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a86f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b3e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28c53a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68a86f; op2val:0xbf39b3e9;
op3val:0x3f28c53a; valaddr_reg:x12; val_offset:573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 573*FLEN/8, x13, x9, x10)

inst_213:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a86f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b3e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28c53a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68a86f; op2val:0xbf39b3e9;
op3val:0x3f28c53a; valaddr_reg:x12; val_offset:576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 576*FLEN/8, x13, x9, x10)

inst_214:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a86f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b3e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28c53a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68a86f; op2val:0xbf39b3e9;
op3val:0x3f28c53a; valaddr_reg:x12; val_offset:579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 579*FLEN/8, x13, x9, x10)

inst_215:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x47419c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5787ee and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27c1e7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec7419c; op2val:0xbe5787ee;
op3val:0x3da7c1e7; valaddr_reg:x12; val_offset:582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 582*FLEN/8, x13, x9, x10)

inst_216:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x47419c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5787ee and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27c1e7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec7419c; op2val:0xbe5787ee;
op3val:0x3da7c1e7; valaddr_reg:x12; val_offset:585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 585*FLEN/8, x13, x9, x10)

inst_217:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x47419c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5787ee and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27c1e7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec7419c; op2val:0xbe5787ee;
op3val:0x3da7c1e7; valaddr_reg:x12; val_offset:588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 588*FLEN/8, x13, x9, x10)

inst_218:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x47419c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5787ee and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27c1e7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec7419c; op2val:0xbe5787ee;
op3val:0x3da7c1e7; valaddr_reg:x12; val_offset:591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 591*FLEN/8, x13, x9, x10)

inst_219:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x47419c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5787ee and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27c1e7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec7419c; op2val:0xbe5787ee;
op3val:0x3da7c1e7; valaddr_reg:x12; val_offset:594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 594*FLEN/8, x13, x9, x10)

inst_220:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f869 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6b33e1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1b3e47 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f28f869; op2val:0xbdeb33e1;
op3val:0x3d9b3e47; valaddr_reg:x12; val_offset:597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 597*FLEN/8, x13, x9, x10)

inst_221:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f869 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6b33e1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1b3e47 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f28f869; op2val:0xbdeb33e1;
op3val:0x3d9b3e47; valaddr_reg:x12; val_offset:600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 600*FLEN/8, x13, x9, x10)

inst_222:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f869 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6b33e1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1b3e47 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f28f869; op2val:0xbdeb33e1;
op3val:0x3d9b3e47; valaddr_reg:x12; val_offset:603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 603*FLEN/8, x13, x9, x10)

inst_223:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f869 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6b33e1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1b3e47 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f28f869; op2val:0xbdeb33e1;
op3val:0x3d9b3e47; valaddr_reg:x12; val_offset:606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 606*FLEN/8, x13, x9, x10)

inst_224:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f869 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6b33e1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1b3e47 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f28f869; op2val:0xbdeb33e1;
op3val:0x3d9b3e47; valaddr_reg:x12; val_offset:609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 609*FLEN/8, x13, x9, x10)

inst_225:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68e2e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x417b57 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x300340 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8e2e1; op2val:0xbfc17b57;
op3val:0x3f300340; valaddr_reg:x12; val_offset:612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 612*FLEN/8, x13, x9, x10)

inst_226:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68e2e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x417b57 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x300340 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8e2e1; op2val:0xbfc17b57;
op3val:0x3f300340; valaddr_reg:x12; val_offset:615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 615*FLEN/8, x13, x9, x10)

inst_227:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68e2e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x417b57 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x300340 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8e2e1; op2val:0xbfc17b57;
op3val:0x3f300340; valaddr_reg:x12; val_offset:618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 618*FLEN/8, x13, x9, x10)

inst_228:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68e2e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x417b57 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x300340 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8e2e1; op2val:0xbfc17b57;
op3val:0x3f300340; valaddr_reg:x12; val_offset:621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 621*FLEN/8, x13, x9, x10)

inst_229:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68e2e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x417b57 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x300340 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8e2e1; op2val:0xbfc17b57;
op3val:0x3f300340; valaddr_reg:x12; val_offset:624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 624*FLEN/8, x13, x9, x10)

inst_230:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee632 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a1a3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5290d1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ee632; op2val:0xbf9a1a3e;
op3val:0x3f5290d1; valaddr_reg:x12; val_offset:627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 627*FLEN/8, x13, x9, x10)

inst_231:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee632 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a1a3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5290d1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ee632; op2val:0xbf9a1a3e;
op3val:0x3f5290d1; valaddr_reg:x12; val_offset:630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 630*FLEN/8, x13, x9, x10)

inst_232:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee632 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a1a3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5290d1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ee632; op2val:0xbf9a1a3e;
op3val:0x3f5290d1; valaddr_reg:x12; val_offset:633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 633*FLEN/8, x13, x9, x10)

inst_233:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee632 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a1a3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5290d1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ee632; op2val:0xbf9a1a3e;
op3val:0x3f5290d1; valaddr_reg:x12; val_offset:636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 636*FLEN/8, x13, x9, x10)

inst_234:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee632 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a1a3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5290d1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ee632; op2val:0xbf9a1a3e;
op3val:0x3f5290d1; valaddr_reg:x12; val_offset:639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 639*FLEN/8, x13, x9, x10)

inst_235:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6bfb54 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c5f8f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59e3c8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6bfb54; op2val:0xbf6c5f8f;
op3val:0x3f59e3c8; valaddr_reg:x12; val_offset:642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 642*FLEN/8, x13, x9, x10)

inst_236:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6bfb54 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c5f8f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59e3c8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6bfb54; op2val:0xbf6c5f8f;
op3val:0x3f59e3c8; valaddr_reg:x12; val_offset:645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 645*FLEN/8, x13, x9, x10)

inst_237:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6bfb54 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c5f8f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59e3c8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6bfb54; op2val:0xbf6c5f8f;
op3val:0x3f59e3c8; valaddr_reg:x12; val_offset:648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 648*FLEN/8, x13, x9, x10)

inst_238:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6bfb54 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c5f8f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59e3c8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6bfb54; op2val:0xbf6c5f8f;
op3val:0x3f59e3c8; valaddr_reg:x12; val_offset:651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 651*FLEN/8, x13, x9, x10)

inst_239:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6bfb54 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c5f8f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59e3c8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6bfb54; op2val:0xbf6c5f8f;
op3val:0x3f59e3c8; valaddr_reg:x12; val_offset:654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 654*FLEN/8, x13, x9, x10)

inst_240:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f2482 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x2c88a3 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x5682f0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9f2482; op2val:0xbc2c88a3;
op3val:0x3b5682f0; valaddr_reg:x12; val_offset:657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 657*FLEN/8, x13, x9, x10)

inst_241:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f2482 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x2c88a3 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x5682f0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9f2482; op2val:0xbc2c88a3;
op3val:0x3b5682f0; valaddr_reg:x12; val_offset:660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 660*FLEN/8, x13, x9, x10)

inst_242:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f2482 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x2c88a3 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x5682f0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9f2482; op2val:0xbc2c88a3;
op3val:0x3b5682f0; valaddr_reg:x12; val_offset:663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 663*FLEN/8, x13, x9, x10)

inst_243:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f2482 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x2c88a3 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x5682f0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9f2482; op2val:0xbc2c88a3;
op3val:0x3b5682f0; valaddr_reg:x12; val_offset:666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 666*FLEN/8, x13, x9, x10)

inst_244:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f2482 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x2c88a3 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x5682f0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9f2482; op2val:0xbc2c88a3;
op3val:0x3b5682f0; valaddr_reg:x12; val_offset:669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 669*FLEN/8, x13, x9, x10)

inst_245:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a601 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x113f3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x739215 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f56a601; op2val:0xbf913f3a;
op3val:0x3f739215; valaddr_reg:x12; val_offset:672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 672*FLEN/8, x13, x9, x10)

inst_246:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a601 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x113f3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x739215 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f56a601; op2val:0xbf913f3a;
op3val:0x3f739215; valaddr_reg:x12; val_offset:675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 675*FLEN/8, x13, x9, x10)

inst_247:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a601 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x113f3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x739215 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f56a601; op2val:0xbf913f3a;
op3val:0x3f739215; valaddr_reg:x12; val_offset:678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 678*FLEN/8, x13, x9, x10)

inst_248:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a601 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x113f3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x739215 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f56a601; op2val:0xbf913f3a;
op3val:0x3f739215; valaddr_reg:x12; val_offset:681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 681*FLEN/8, x13, x9, x10)

inst_249:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a601 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x113f3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x739215 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f56a601; op2val:0xbf913f3a;
op3val:0x3f739215; valaddr_reg:x12; val_offset:684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 684*FLEN/8, x13, x9, x10)

inst_250:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x59ebfb and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0c4838 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ed50f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c59ebfb; op2val:0xc20c4838;
op3val:0x3eeed50f; valaddr_reg:x12; val_offset:687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 687*FLEN/8, x13, x9, x10)

inst_251:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x59ebfb and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0c4838 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ed50f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c59ebfb; op2val:0xc20c4838;
op3val:0x3eeed50f; valaddr_reg:x12; val_offset:690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 690*FLEN/8, x13, x9, x10)

inst_252:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x59ebfb and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0c4838 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ed50f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c59ebfb; op2val:0xc20c4838;
op3val:0x3eeed50f; valaddr_reg:x12; val_offset:693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 693*FLEN/8, x13, x9, x10)

inst_253:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x59ebfb and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0c4838 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ed50f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c59ebfb; op2val:0xc20c4838;
op3val:0x3eeed50f; valaddr_reg:x12; val_offset:696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 696*FLEN/8, x13, x9, x10)

inst_254:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x59ebfb and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0c4838 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ed50f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c59ebfb; op2val:0xc20c4838;
op3val:0x3eeed50f; valaddr_reg:x12; val_offset:699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 699*FLEN/8, x13, x9, x10)

inst_255:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1817b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x245062 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x433de8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1817b8; op2val:0xbfa45062;
op3val:0x3f433de8; valaddr_reg:x12; val_offset:702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 702*FLEN/8, x13, x9, x10)

inst_256:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1817b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x245062 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x433de8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1817b8; op2val:0xbfa45062;
op3val:0x3f433de8; valaddr_reg:x12; val_offset:705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 705*FLEN/8, x13, x9, x10)

inst_257:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1817b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x245062 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x433de8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1817b8; op2val:0xbfa45062;
op3val:0x3f433de8; valaddr_reg:x12; val_offset:708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 708*FLEN/8, x13, x9, x10)

inst_258:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1817b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x245062 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x433de8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1817b8; op2val:0xbfa45062;
op3val:0x3f433de8; valaddr_reg:x12; val_offset:711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 711*FLEN/8, x13, x9, x10)

inst_259:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1817b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x245062 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x433de8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1817b8; op2val:0xbfa45062;
op3val:0x3f433de8; valaddr_reg:x12; val_offset:714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 714*FLEN/8, x13, x9, x10)

inst_260:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe472 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5b08d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31df96 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecfe472; op2val:0xbedb08d1;
op3val:0x3e31df96; valaddr_reg:x12; val_offset:717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 717*FLEN/8, x13, x9, x10)

inst_261:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe472 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5b08d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31df96 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecfe472; op2val:0xbedb08d1;
op3val:0x3e31df96; valaddr_reg:x12; val_offset:720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 720*FLEN/8, x13, x9, x10)

inst_262:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe472 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5b08d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31df96 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecfe472; op2val:0xbedb08d1;
op3val:0x3e31df96; valaddr_reg:x12; val_offset:723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 723*FLEN/8, x13, x9, x10)

inst_263:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe472 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5b08d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31df96 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecfe472; op2val:0xbedb08d1;
op3val:0x3e31df96; valaddr_reg:x12; val_offset:726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 726*FLEN/8, x13, x9, x10)

inst_264:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe472 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5b08d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31df96 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecfe472; op2val:0xbedb08d1;
op3val:0x3e31df96; valaddr_reg:x12; val_offset:729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 729*FLEN/8, x13, x9, x10)

inst_265:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5988 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07f930 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1407b6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b5988; op2val:0xbf87f930;
op3val:0x3f1407b6; valaddr_reg:x12; val_offset:732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 732*FLEN/8, x13, x9, x10)

inst_266:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5988 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07f930 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1407b6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b5988; op2val:0xbf87f930;
op3val:0x3f1407b6; valaddr_reg:x12; val_offset:735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 735*FLEN/8, x13, x9, x10)

inst_267:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5988 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07f930 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1407b6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b5988; op2val:0xbf87f930;
op3val:0x3f1407b6; valaddr_reg:x12; val_offset:738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 738*FLEN/8, x13, x9, x10)

inst_268:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5988 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07f930 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1407b6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b5988; op2val:0xbf87f930;
op3val:0x3f1407b6; valaddr_reg:x12; val_offset:741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 741*FLEN/8, x13, x9, x10)

inst_269:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5988 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07f930 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1407b6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b5988; op2val:0xbf87f930;
op3val:0x3f1407b6; valaddr_reg:x12; val_offset:744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 744*FLEN/8, x13, x9, x10)

inst_270:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71bd2b and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3607c7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2be3d5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f71bd2b; op2val:0xbdb607c7;
op3val:0x3dabe3d5; valaddr_reg:x12; val_offset:747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 747*FLEN/8, x13, x9, x10)

inst_271:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71bd2b and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3607c7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2be3d5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f71bd2b; op2val:0xbdb607c7;
op3val:0x3dabe3d5; valaddr_reg:x12; val_offset:750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 750*FLEN/8, x13, x9, x10)

inst_272:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71bd2b and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3607c7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2be3d5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f71bd2b; op2val:0xbdb607c7;
op3val:0x3dabe3d5; valaddr_reg:x12; val_offset:753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 753*FLEN/8, x13, x9, x10)

inst_273:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71bd2b and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3607c7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2be3d5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f71bd2b; op2val:0xbdb607c7;
op3val:0x3dabe3d5; valaddr_reg:x12; val_offset:756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 756*FLEN/8, x13, x9, x10)

inst_274:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71bd2b and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3607c7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2be3d5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f71bd2b; op2val:0xbdb607c7;
op3val:0x3dabe3d5; valaddr_reg:x12; val_offset:759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 759*FLEN/8, x13, x9, x10)

inst_275:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779f95 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x060886 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x01a5c6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f779f95; op2val:0xbf060886;
op3val:0x3f01a5c6; valaddr_reg:x12; val_offset:762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 762*FLEN/8, x13, x9, x10)

inst_276:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779f95 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x060886 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x01a5c6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f779f95; op2val:0xbf060886;
op3val:0x3f01a5c6; valaddr_reg:x12; val_offset:765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 765*FLEN/8, x13, x9, x10)

inst_277:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779f95 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x060886 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x01a5c6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f779f95; op2val:0xbf060886;
op3val:0x3f01a5c6; valaddr_reg:x12; val_offset:768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 768*FLEN/8, x13, x9, x10)

inst_278:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779f95 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x060886 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x01a5c6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f779f95; op2val:0xbf060886;
op3val:0x3f01a5c6; valaddr_reg:x12; val_offset:771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 771*FLEN/8, x13, x9, x10)

inst_279:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779f95 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x060886 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x01a5c6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f779f95; op2val:0xbf060886;
op3val:0x3f01a5c6; valaddr_reg:x12; val_offset:774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 774*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_2)

inst_280:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2572cb and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2c31f8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e92d8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2572cb; op2val:0xc0ac31f8;
op3val:0x3f5e92d8; valaddr_reg:x12; val_offset:777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 777*FLEN/8, x13, x9, x10)

inst_281:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2572cb and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2c31f8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e92d8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2572cb; op2val:0xc0ac31f8;
op3val:0x3f5e92d8; valaddr_reg:x12; val_offset:780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 780*FLEN/8, x13, x9, x10)

inst_282:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2572cb and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2c31f8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e92d8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2572cb; op2val:0xc0ac31f8;
op3val:0x3f5e92d8; valaddr_reg:x12; val_offset:783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 783*FLEN/8, x13, x9, x10)

inst_283:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2572cb and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2c31f8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e92d8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2572cb; op2val:0xc0ac31f8;
op3val:0x3f5e92d8; valaddr_reg:x12; val_offset:786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 786*FLEN/8, x13, x9, x10)

inst_284:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2572cb and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2c31f8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e92d8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2572cb; op2val:0xc0ac31f8;
op3val:0x3f5e92d8; valaddr_reg:x12; val_offset:789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 789*FLEN/8, x13, x9, x10)

inst_285:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x096347 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3f9316 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4da005 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e896347; op2val:0xbe3f9316;
op3val:0x3d4da005; valaddr_reg:x12; val_offset:792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 792*FLEN/8, x13, x9, x10)

inst_286:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x096347 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3f9316 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4da005 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e896347; op2val:0xbe3f9316;
op3val:0x3d4da005; valaddr_reg:x12; val_offset:795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 795*FLEN/8, x13, x9, x10)

inst_287:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x096347 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3f9316 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4da005 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e896347; op2val:0xbe3f9316;
op3val:0x3d4da005; valaddr_reg:x12; val_offset:798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 798*FLEN/8, x13, x9, x10)

inst_288:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x096347 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3f9316 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4da005 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e896347; op2val:0xbe3f9316;
op3val:0x3d4da005; valaddr_reg:x12; val_offset:801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 801*FLEN/8, x13, x9, x10)

inst_289:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x096347 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3f9316 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4da005 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e896347; op2val:0xbe3f9316;
op3val:0x3d4da005; valaddr_reg:x12; val_offset:804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 804*FLEN/8, x13, x9, x10)

inst_290:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3d3c4d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12d53b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x591406 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebd3c4d; op2val:0xbf12d53b;
op3val:0x3e591406; valaddr_reg:x12; val_offset:807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 807*FLEN/8, x13, x9, x10)

inst_291:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3d3c4d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12d53b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x591406 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebd3c4d; op2val:0xbf12d53b;
op3val:0x3e591406; valaddr_reg:x12; val_offset:810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 810*FLEN/8, x13, x9, x10)

inst_292:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3d3c4d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12d53b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x591406 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebd3c4d; op2val:0xbf12d53b;
op3val:0x3e591406; valaddr_reg:x12; val_offset:813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 813*FLEN/8, x13, x9, x10)

inst_293:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3d3c4d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12d53b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x591406 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebd3c4d; op2val:0xbf12d53b;
op3val:0x3e591406; valaddr_reg:x12; val_offset:816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 816*FLEN/8, x13, x9, x10)

inst_294:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3d3c4d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12d53b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x591406 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebd3c4d; op2val:0xbf12d53b;
op3val:0x3e591406; valaddr_reg:x12; val_offset:819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 819*FLEN/8, x13, x9, x10)

inst_295:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64b3db and fs2 == 1 and fe2 == 0x7e and fm2 == 0x220808 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10c0fd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f64b3db; op2val:0xbf220808;
op3val:0x3f10c0fd; valaddr_reg:x12; val_offset:822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 822*FLEN/8, x13, x9, x10)

inst_296:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64b3db and fs2 == 1 and fe2 == 0x7e and fm2 == 0x220808 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10c0fd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f64b3db; op2val:0xbf220808;
op3val:0x3f10c0fd; valaddr_reg:x12; val_offset:825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 825*FLEN/8, x13, x9, x10)

inst_297:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64b3db and fs2 == 1 and fe2 == 0x7e and fm2 == 0x220808 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10c0fd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f64b3db; op2val:0xbf220808;
op3val:0x3f10c0fd; valaddr_reg:x12; val_offset:828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 828*FLEN/8, x13, x9, x10)

inst_298:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64b3db and fs2 == 1 and fe2 == 0x7e and fm2 == 0x220808 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10c0fd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f64b3db; op2val:0xbf220808;
op3val:0x3f10c0fd; valaddr_reg:x12; val_offset:831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 831*FLEN/8, x13, x9, x10)

inst_299:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64b3db and fs2 == 1 and fe2 == 0x7e and fm2 == 0x220808 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10c0fd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f64b3db; op2val:0xbf220808;
op3val:0x3f10c0fd; valaddr_reg:x12; val_offset:834*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 834*FLEN/8, x13, x9, x10)

inst_300:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59cb0e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3ae252 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1efe13 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f59cb0e; op2val:0xbe3ae252;
op3val:0x3e1efe13; valaddr_reg:x12; val_offset:837*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 837*FLEN/8, x13, x9, x10)

inst_301:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59cb0e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3ae252 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1efe13 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f59cb0e; op2val:0xbe3ae252;
op3val:0x3e1efe13; valaddr_reg:x12; val_offset:840*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 840*FLEN/8, x13, x9, x10)

inst_302:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59cb0e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3ae252 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1efe13 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f59cb0e; op2val:0xbe3ae252;
op3val:0x3e1efe13; valaddr_reg:x12; val_offset:843*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 843*FLEN/8, x13, x9, x10)

inst_303:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59cb0e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3ae252 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1efe13 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f59cb0e; op2val:0xbe3ae252;
op3val:0x3e1efe13; valaddr_reg:x12; val_offset:846*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 846*FLEN/8, x13, x9, x10)

inst_304:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59cb0e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3ae252 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1efe13 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f59cb0e; op2val:0xbe3ae252;
op3val:0x3e1efe13; valaddr_reg:x12; val_offset:849*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 849*FLEN/8, x13, x9, x10)

inst_305:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x348723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46849d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0bfe0a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f348723; op2val:0xbf46849d;
op3val:0x3f0bfe0a; valaddr_reg:x12; val_offset:852*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 852*FLEN/8, x13, x9, x10)

inst_306:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x348723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46849d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0bfe0a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f348723; op2val:0xbf46849d;
op3val:0x3f0bfe0a; valaddr_reg:x12; val_offset:855*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 855*FLEN/8, x13, x9, x10)

inst_307:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x348723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46849d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0bfe0a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f348723; op2val:0xbf46849d;
op3val:0x3f0bfe0a; valaddr_reg:x12; val_offset:858*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 858*FLEN/8, x13, x9, x10)

inst_308:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x348723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46849d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0bfe0a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f348723; op2val:0xbf46849d;
op3val:0x3f0bfe0a; valaddr_reg:x12; val_offset:861*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 861*FLEN/8, x13, x9, x10)

inst_309:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x348723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46849d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0bfe0a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f348723; op2val:0xbf46849d;
op3val:0x3f0bfe0a; valaddr_reg:x12; val_offset:864*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 864*FLEN/8, x13, x9, x10)

inst_310:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x3783b0 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x530d4c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x174b13 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3a3783b0; op2val:0xc3530d4c;
op3val:0x3e174b13; valaddr_reg:x12; val_offset:867*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 867*FLEN/8, x13, x9, x10)

inst_311:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x3783b0 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x530d4c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x174b13 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3a3783b0; op2val:0xc3530d4c;
op3val:0x3e174b13; valaddr_reg:x12; val_offset:870*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 870*FLEN/8, x13, x9, x10)

inst_312:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x3783b0 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x530d4c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x174b13 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3a3783b0; op2val:0xc3530d4c;
op3val:0x3e174b13; valaddr_reg:x12; val_offset:873*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 873*FLEN/8, x13, x9, x10)

inst_313:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x3783b0 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x530d4c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x174b13 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3a3783b0; op2val:0xc3530d4c;
op3val:0x3e174b13; valaddr_reg:x12; val_offset:876*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 876*FLEN/8, x13, x9, x10)

inst_314:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x3783b0 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x530d4c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x174b13 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3a3783b0; op2val:0xc3530d4c;
op3val:0x3e174b13; valaddr_reg:x12; val_offset:879*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 879*FLEN/8, x13, x9, x10)

inst_315:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x448bc5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3635f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0be4cd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc48bc5; op2val:0xc1b635f7;
op3val:0x3f0be4cd; valaddr_reg:x12; val_offset:882*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 882*FLEN/8, x13, x9, x10)

inst_316:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x448bc5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3635f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0be4cd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc48bc5; op2val:0xc1b635f7;
op3val:0x3f0be4cd; valaddr_reg:x12; val_offset:885*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 885*FLEN/8, x13, x9, x10)

inst_317:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x448bc5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3635f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0be4cd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc48bc5; op2val:0xc1b635f7;
op3val:0x3f0be4cd; valaddr_reg:x12; val_offset:888*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 888*FLEN/8, x13, x9, x10)

inst_318:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x448bc5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3635f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0be4cd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc48bc5; op2val:0xc1b635f7;
op3val:0x3f0be4cd; valaddr_reg:x12; val_offset:891*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 891*FLEN/8, x13, x9, x10)

inst_319:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x448bc5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3635f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0be4cd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc48bc5; op2val:0xc1b635f7;
op3val:0x3f0be4cd; valaddr_reg:x12; val_offset:894*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 894*FLEN/8, x13, x9, x10)

inst_320:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030803 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x074a1c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a7e51 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f030803; op2val:0xbf074a1c;
op3val:0x3e8a7e51; valaddr_reg:x12; val_offset:897*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 897*FLEN/8, x13, x9, x10)

inst_321:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030803 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x074a1c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a7e51 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f030803; op2val:0xbf074a1c;
op3val:0x3e8a7e51; valaddr_reg:x12; val_offset:900*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 900*FLEN/8, x13, x9, x10)

inst_322:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030803 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x074a1c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a7e51 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f030803; op2val:0xbf074a1c;
op3val:0x3e8a7e51; valaddr_reg:x12; val_offset:903*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 903*FLEN/8, x13, x9, x10)

inst_323:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030803 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x074a1c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a7e51 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f030803; op2val:0xbf074a1c;
op3val:0x3e8a7e51; valaddr_reg:x12; val_offset:906*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 906*FLEN/8, x13, x9, x10)

inst_324:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030803 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x074a1c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a7e51 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f030803; op2val:0xbf074a1c;
op3val:0x3e8a7e51; valaddr_reg:x12; val_offset:909*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 909*FLEN/8, x13, x9, x10)

inst_325:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055d79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e325d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x357f8a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f055d79; op2val:0xbfae325d;
op3val:0x3f357f8a; valaddr_reg:x12; val_offset:912*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 912*FLEN/8, x13, x9, x10)

inst_326:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055d79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e325d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x357f8a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f055d79; op2val:0xbfae325d;
op3val:0x3f357f8a; valaddr_reg:x12; val_offset:915*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 915*FLEN/8, x13, x9, x10)

inst_327:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055d79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e325d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x357f8a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f055d79; op2val:0xbfae325d;
op3val:0x3f357f8a; valaddr_reg:x12; val_offset:918*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 918*FLEN/8, x13, x9, x10)

inst_328:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055d79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e325d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x357f8a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f055d79; op2val:0xbfae325d;
op3val:0x3f357f8a; valaddr_reg:x12; val_offset:921*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 921*FLEN/8, x13, x9, x10)

inst_329:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055d79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e325d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x357f8a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f055d79; op2val:0xbfae325d;
op3val:0x3f357f8a; valaddr_reg:x12; val_offset:924*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 924*FLEN/8, x13, x9, x10)

inst_330:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a141 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x373c64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7e8f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f18a141; op2val:0xbfb73c64;
op3val:0x3f5a7e8f; valaddr_reg:x12; val_offset:927*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 927*FLEN/8, x13, x9, x10)

inst_331:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a141 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x373c64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7e8f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f18a141; op2val:0xbfb73c64;
op3val:0x3f5a7e8f; valaddr_reg:x12; val_offset:930*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 930*FLEN/8, x13, x9, x10)

inst_332:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a141 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x373c64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7e8f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f18a141; op2val:0xbfb73c64;
op3val:0x3f5a7e8f; valaddr_reg:x12; val_offset:933*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 933*FLEN/8, x13, x9, x10)

inst_333:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a141 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x373c64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7e8f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f18a141; op2val:0xbfb73c64;
op3val:0x3f5a7e8f; valaddr_reg:x12; val_offset:936*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 936*FLEN/8, x13, x9, x10)

inst_334:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a141 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x373c64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7e8f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f18a141; op2val:0xbfb73c64;
op3val:0x3f5a7e8f; valaddr_reg:x12; val_offset:939*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 939*FLEN/8, x13, x9, x10)

inst_335:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f7ce1 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x18b18b and fs3 == 0 and fe3 == 0x78 and fm3 == 0x3e4183 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f7ce1; op2val:0xbc98b18b;
op3val:0x3c3e4183; valaddr_reg:x12; val_offset:942*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 942*FLEN/8, x13, x9, x10)

inst_336:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f7ce1 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x18b18b and fs3 == 0 and fe3 == 0x78 and fm3 == 0x3e4183 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f7ce1; op2val:0xbc98b18b;
op3val:0x3c3e4183; valaddr_reg:x12; val_offset:945*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 945*FLEN/8, x13, x9, x10)

inst_337:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f7ce1 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x18b18b and fs3 == 0 and fe3 == 0x78 and fm3 == 0x3e4183 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f7ce1; op2val:0xbc98b18b;
op3val:0x3c3e4183; valaddr_reg:x12; val_offset:948*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 948*FLEN/8, x13, x9, x10)

inst_338:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f7ce1 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x18b18b and fs3 == 0 and fe3 == 0x78 and fm3 == 0x3e4183 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f7ce1; op2val:0xbc98b18b;
op3val:0x3c3e4183; valaddr_reg:x12; val_offset:951*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 951*FLEN/8, x13, x9, x10)

inst_339:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f7ce1 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x18b18b and fs3 == 0 and fe3 == 0x78 and fm3 == 0x3e4183 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f7ce1; op2val:0xbc98b18b;
op3val:0x3c3e4183; valaddr_reg:x12; val_offset:954*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 954*FLEN/8, x13, x9, x10)

inst_340:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x249819 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1487c4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3efe72 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d249819; op2val:0xc11487c4;
op3val:0x3ebefe72; valaddr_reg:x12; val_offset:957*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 957*FLEN/8, x13, x9, x10)

inst_341:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x249819 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1487c4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3efe72 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d249819; op2val:0xc11487c4;
op3val:0x3ebefe72; valaddr_reg:x12; val_offset:960*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 960*FLEN/8, x13, x9, x10)

inst_342:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x249819 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1487c4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3efe72 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d249819; op2val:0xc11487c4;
op3val:0x3ebefe72; valaddr_reg:x12; val_offset:963*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 963*FLEN/8, x13, x9, x10)

inst_343:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x249819 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1487c4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3efe72 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d249819; op2val:0xc11487c4;
op3val:0x3ebefe72; valaddr_reg:x12; val_offset:966*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 966*FLEN/8, x13, x9, x10)

inst_344:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x249819 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1487c4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3efe72 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d249819; op2val:0xc11487c4;
op3val:0x3ebefe72; valaddr_reg:x12; val_offset:969*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 969*FLEN/8, x13, x9, x10)

inst_345:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x002c67 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x291ec9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x295974 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f002c67; op2val:0xbfa91ec9;
op3val:0x3f295974; valaddr_reg:x12; val_offset:972*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 972*FLEN/8, x13, x9, x10)

inst_346:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x002c67 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x291ec9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x295974 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f002c67; op2val:0xbfa91ec9;
op3val:0x3f295974; valaddr_reg:x12; val_offset:975*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 975*FLEN/8, x13, x9, x10)

inst_347:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x002c67 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x291ec9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x295974 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f002c67; op2val:0xbfa91ec9;
op3val:0x3f295974; valaddr_reg:x12; val_offset:978*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 978*FLEN/8, x13, x9, x10)

inst_348:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x002c67 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x291ec9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x295974 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f002c67; op2val:0xbfa91ec9;
op3val:0x3f295974; valaddr_reg:x12; val_offset:981*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 981*FLEN/8, x13, x9, x10)

inst_349:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x002c67 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x291ec9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x295974 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f002c67; op2val:0xbfa91ec9;
op3val:0x3f295974; valaddr_reg:x12; val_offset:984*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 984*FLEN/8, x13, x9, x10)

inst_350:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x692e4a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4c84d6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a49e2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f692e4a; op2val:0xbf4c84d6;
op3val:0x3f3a49e2; valaddr_reg:x12; val_offset:987*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 987*FLEN/8, x13, x9, x10)

inst_351:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x692e4a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4c84d6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a49e2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f692e4a; op2val:0xbf4c84d6;
op3val:0x3f3a49e2; valaddr_reg:x12; val_offset:990*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 990*FLEN/8, x13, x9, x10)

inst_352:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x692e4a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4c84d6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a49e2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f692e4a; op2val:0xbf4c84d6;
op3val:0x3f3a49e2; valaddr_reg:x12; val_offset:993*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 993*FLEN/8, x13, x9, x10)

inst_353:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x692e4a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4c84d6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a49e2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f692e4a; op2val:0xbf4c84d6;
op3val:0x3f3a49e2; valaddr_reg:x12; val_offset:996*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 996*FLEN/8, x13, x9, x10)

inst_354:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x692e4a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4c84d6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a49e2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f692e4a; op2val:0xbf4c84d6;
op3val:0x3f3a49e2; valaddr_reg:x12; val_offset:999*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 999*FLEN/8, x13, x9, x10)

inst_355:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f366b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bbe28 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07cbc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f366b; op2val:0xbf1bbe28;
op3val:0x3e07cbc0; valaddr_reg:x12; val_offset:1002*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1002*FLEN/8, x13, x9, x10)

inst_356:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f366b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bbe28 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07cbc0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f366b; op2val:0xbf1bbe28;
op3val:0x3e07cbc0; valaddr_reg:x12; val_offset:1005*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1005*FLEN/8, x13, x9, x10)

inst_357:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f366b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bbe28 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07cbc0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f366b; op2val:0xbf1bbe28;
op3val:0x3e07cbc0; valaddr_reg:x12; val_offset:1008*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1008*FLEN/8, x13, x9, x10)

inst_358:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f366b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bbe28 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07cbc0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f366b; op2val:0xbf1bbe28;
op3val:0x3e07cbc0; valaddr_reg:x12; val_offset:1011*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1011*FLEN/8, x13, x9, x10)

inst_359:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f366b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bbe28 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07cbc0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f366b; op2val:0xbf1bbe28;
op3val:0x3e07cbc0; valaddr_reg:x12; val_offset:1014*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1014*FLEN/8, x13, x9, x10)

inst_360:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23801f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b8993 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b1ce5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23801f; op2val:0xbeab8993;
op3val:0x3e5b1ce5; valaddr_reg:x12; val_offset:1017*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1017*FLEN/8, x13, x9, x10)

inst_361:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23801f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b8993 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b1ce5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23801f; op2val:0xbeab8993;
op3val:0x3e5b1ce5; valaddr_reg:x12; val_offset:1020*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1020*FLEN/8, x13, x9, x10)

inst_362:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23801f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b8993 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b1ce5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23801f; op2val:0xbeab8993;
op3val:0x3e5b1ce5; valaddr_reg:x12; val_offset:1023*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1023*FLEN/8, x13, x9, x10)

inst_363:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23801f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b8993 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b1ce5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23801f; op2val:0xbeab8993;
op3val:0x3e5b1ce5; valaddr_reg:x12; val_offset:1026*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1026*FLEN/8, x13, x9, x10)

inst_364:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23801f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b8993 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b1ce5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23801f; op2val:0xbeab8993;
op3val:0x3e5b1ce5; valaddr_reg:x12; val_offset:1029*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1029*FLEN/8, x13, x9, x10)

inst_365:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x66811d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2da96f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1c5dd0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e66811d; op2val:0xbfada96f;
op3val:0x3e9c5dd0; valaddr_reg:x12; val_offset:1032*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1032*FLEN/8, x13, x9, x10)

inst_366:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x66811d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2da96f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1c5dd0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e66811d; op2val:0xbfada96f;
op3val:0x3e9c5dd0; valaddr_reg:x12; val_offset:1035*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1035*FLEN/8, x13, x9, x10)

inst_367:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x66811d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2da96f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1c5dd0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e66811d; op2val:0xbfada96f;
op3val:0x3e9c5dd0; valaddr_reg:x12; val_offset:1038*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1038*FLEN/8, x13, x9, x10)

inst_368:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x66811d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2da96f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1c5dd0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e66811d; op2val:0xbfada96f;
op3val:0x3e9c5dd0; valaddr_reg:x12; val_offset:1041*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1041*FLEN/8, x13, x9, x10)

inst_369:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x66811d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2da96f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1c5dd0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e66811d; op2val:0xbfada96f;
op3val:0x3e9c5dd0; valaddr_reg:x12; val_offset:1044*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1044*FLEN/8, x13, x9, x10)

inst_370:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c05c6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x372477 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x762143 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eac05c6; op2val:0xbf372477;
op3val:0x3e762143; valaddr_reg:x12; val_offset:1047*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1047*FLEN/8, x13, x9, x10)

inst_371:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c05c6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x372477 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x762143 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eac05c6; op2val:0xbf372477;
op3val:0x3e762143; valaddr_reg:x12; val_offset:1050*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1050*FLEN/8, x13, x9, x10)

inst_372:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c05c6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x372477 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x762143 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eac05c6; op2val:0xbf372477;
op3val:0x3e762143; valaddr_reg:x12; val_offset:1053*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1053*FLEN/8, x13, x9, x10)

inst_373:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c05c6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x372477 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x762143 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eac05c6; op2val:0xbf372477;
op3val:0x3e762143; valaddr_reg:x12; val_offset:1056*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1056*FLEN/8, x13, x9, x10)

inst_374:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c05c6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x372477 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x762143 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eac05c6; op2val:0xbf372477;
op3val:0x3e762143; valaddr_reg:x12; val_offset:1059*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1059*FLEN/8, x13, x9, x10)

inst_375:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22f622 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6db2eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x174fc3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22f622; op2val:0xbeedb2eb;
op3val:0x3e974fc3; valaddr_reg:x12; val_offset:1062*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1062*FLEN/8, x13, x9, x10)

inst_376:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22f622 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6db2eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x174fc3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22f622; op2val:0xbeedb2eb;
op3val:0x3e974fc3; valaddr_reg:x12; val_offset:1065*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1065*FLEN/8, x13, x9, x10)

inst_377:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22f622 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6db2eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x174fc3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22f622; op2val:0xbeedb2eb;
op3val:0x3e974fc3; valaddr_reg:x12; val_offset:1068*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1068*FLEN/8, x13, x9, x10)

inst_378:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22f622 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6db2eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x174fc3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22f622; op2val:0xbeedb2eb;
op3val:0x3e974fc3; valaddr_reg:x12; val_offset:1071*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1071*FLEN/8, x13, x9, x10)

inst_379:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22f622 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6db2eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x174fc3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22f622; op2val:0xbeedb2eb;
op3val:0x3e974fc3; valaddr_reg:x12; val_offset:1074*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1074*FLEN/8, x13, x9, x10)

inst_380:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x37158a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03aa22 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f381a14; op2val:0xbf37158a;
op3val:0x3f03aa22; valaddr_reg:x12; val_offset:1077*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1077*FLEN/8, x13, x9, x10)

inst_381:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x37158a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03aa22 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f381a14; op2val:0xbf37158a;
op3val:0x3f03aa22; valaddr_reg:x12; val_offset:1080*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1080*FLEN/8, x13, x9, x10)

inst_382:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x37158a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03aa22 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f381a14; op2val:0xbf37158a;
op3val:0x3f03aa22; valaddr_reg:x12; val_offset:1083*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1083*FLEN/8, x13, x9, x10)

inst_383:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x37158a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03aa22 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f381a14; op2val:0xbf37158a;
op3val:0x3f03aa22; valaddr_reg:x12; val_offset:1086*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1086*FLEN/8, x13, x9, x10)

inst_384:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x37158a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03aa22 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f381a14; op2val:0xbf37158a;
op3val:0x3f03aa22; valaddr_reg:x12; val_offset:1089*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1089*FLEN/8, x13, x9, x10)

inst_385:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6bc751 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2bd778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e4496 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6bc751; op2val:0xbfabd778;
op3val:0x3e9e4496; valaddr_reg:x12; val_offset:1092*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1092*FLEN/8, x13, x9, x10)

inst_386:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6bc751 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2bd778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e4496 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6bc751; op2val:0xbfabd778;
op3val:0x3e9e4496; valaddr_reg:x12; val_offset:1095*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1095*FLEN/8, x13, x9, x10)

inst_387:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6bc751 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2bd778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e4496 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6bc751; op2val:0xbfabd778;
op3val:0x3e9e4496; valaddr_reg:x12; val_offset:1098*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1098*FLEN/8, x13, x9, x10)

inst_388:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6bc751 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2bd778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e4496 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6bc751; op2val:0xbfabd778;
op3val:0x3e9e4496; valaddr_reg:x12; val_offset:1101*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1101*FLEN/8, x13, x9, x10)

inst_389:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6bc751 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2bd778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e4496 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6bc751; op2val:0xbfabd778;
op3val:0x3e9e4496; valaddr_reg:x12; val_offset:1104*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1104*FLEN/8, x13, x9, x10)

inst_390:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c61c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1decde and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f0987 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f34c61c; op2val:0xbd9decde;
op3val:0x3d5f0987; valaddr_reg:x12; val_offset:1107*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1107*FLEN/8, x13, x9, x10)

inst_391:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c61c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1decde and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f0987 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f34c61c; op2val:0xbd9decde;
op3val:0x3d5f0987; valaddr_reg:x12; val_offset:1110*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1110*FLEN/8, x13, x9, x10)

inst_392:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c61c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1decde and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f0987 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f34c61c; op2val:0xbd9decde;
op3val:0x3d5f0987; valaddr_reg:x12; val_offset:1113*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1113*FLEN/8, x13, x9, x10)

inst_393:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c61c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1decde and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f0987 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f34c61c; op2val:0xbd9decde;
op3val:0x3d5f0987; valaddr_reg:x12; val_offset:1116*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1116*FLEN/8, x13, x9, x10)

inst_394:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c61c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1decde and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f0987 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f34c61c; op2val:0xbd9decde;
op3val:0x3d5f0987; valaddr_reg:x12; val_offset:1119*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1119*FLEN/8, x13, x9, x10)

inst_395:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x335b8c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x19393a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b39f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb35b8c; op2val:0xbf99393a;
op3val:0x3ed6b39f; valaddr_reg:x12; val_offset:1122*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1122*FLEN/8, x13, x9, x10)

inst_396:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x335b8c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x19393a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b39f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb35b8c; op2val:0xbf99393a;
op3val:0x3ed6b39f; valaddr_reg:x12; val_offset:1125*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1125*FLEN/8, x13, x9, x10)

inst_397:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x335b8c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x19393a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b39f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb35b8c; op2val:0xbf99393a;
op3val:0x3ed6b39f; valaddr_reg:x12; val_offset:1128*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1128*FLEN/8, x13, x9, x10)

inst_398:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x335b8c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x19393a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b39f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb35b8c; op2val:0xbf99393a;
op3val:0x3ed6b39f; valaddr_reg:x12; val_offset:1131*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1131*FLEN/8, x13, x9, x10)

inst_399:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x335b8c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x19393a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b39f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb35b8c; op2val:0xbf99393a;
op3val:0x3ed6b39f; valaddr_reg:x12; val_offset:1134*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1134*FLEN/8, x13, x9, x10)

inst_400:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d090c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6aa87d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67f0cf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7d090c; op2val:0xbeeaa87d;
op3val:0x3ee7f0cf; valaddr_reg:x12; val_offset:1137*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1137*FLEN/8, x13, x9, x10)

inst_401:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d090c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6aa87d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67f0cf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7d090c; op2val:0xbeeaa87d;
op3val:0x3ee7f0cf; valaddr_reg:x12; val_offset:1140*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1140*FLEN/8, x13, x9, x10)

inst_402:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d090c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6aa87d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67f0cf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7d090c; op2val:0xbeeaa87d;
op3val:0x3ee7f0cf; valaddr_reg:x12; val_offset:1143*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1143*FLEN/8, x13, x9, x10)

inst_403:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d090c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6aa87d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67f0cf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7d090c; op2val:0xbeeaa87d;
op3val:0x3ee7f0cf; valaddr_reg:x12; val_offset:1146*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1146*FLEN/8, x13, x9, x10)

inst_404:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d090c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6aa87d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67f0cf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7d090c; op2val:0xbeeaa87d;
op3val:0x3ee7f0cf; valaddr_reg:x12; val_offset:1149*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1149*FLEN/8, x13, x9, x10)

inst_405:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fd2a1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x605d93 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x281e6b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3fd2a1; op2val:0xbee05d93;
op3val:0x3ea81e6b; valaddr_reg:x12; val_offset:1152*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1152*FLEN/8, x13, x9, x10)

inst_406:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fd2a1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x605d93 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x281e6b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3fd2a1; op2val:0xbee05d93;
op3val:0x3ea81e6b; valaddr_reg:x12; val_offset:1155*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1155*FLEN/8, x13, x9, x10)

inst_407:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fd2a1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x605d93 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x281e6b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3fd2a1; op2val:0xbee05d93;
op3val:0x3ea81e6b; valaddr_reg:x12; val_offset:1158*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1158*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_3)

inst_408:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fd2a1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x605d93 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x281e6b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3fd2a1; op2val:0xbee05d93;
op3val:0x3ea81e6b; valaddr_reg:x12; val_offset:1161*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1161*FLEN/8, x13, x9, x10)

inst_409:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fd2a1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x605d93 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x281e6b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3fd2a1; op2val:0xbee05d93;
op3val:0x3ea81e6b; valaddr_reg:x12; val_offset:1164*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1164*FLEN/8, x13, x9, x10)

inst_410:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x097cd4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2ec419 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3bb853 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f097cd4; op2val:0xbeaec419;
op3val:0x3e3bb853; valaddr_reg:x12; val_offset:1167*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1167*FLEN/8, x13, x9, x10)

inst_411:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x097cd4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2ec419 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3bb853 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f097cd4; op2val:0xbeaec419;
op3val:0x3e3bb853; valaddr_reg:x12; val_offset:1170*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1170*FLEN/8, x13, x9, x10)

inst_412:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x097cd4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2ec419 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3bb853 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f097cd4; op2val:0xbeaec419;
op3val:0x3e3bb853; valaddr_reg:x12; val_offset:1173*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1173*FLEN/8, x13, x9, x10)

inst_413:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x097cd4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2ec419 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3bb853 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f097cd4; op2val:0xbeaec419;
op3val:0x3e3bb853; valaddr_reg:x12; val_offset:1176*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1176*FLEN/8, x13, x9, x10)

inst_414:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x097cd4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2ec419 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3bb853 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f097cd4; op2val:0xbeaec419;
op3val:0x3e3bb853; valaddr_reg:x12; val_offset:1179*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1179*FLEN/8, x13, x9, x10)

inst_415:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348325 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12f232 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f3b24 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb48325; op2val:0xbf12f232;
op3val:0x3e4f3b24; valaddr_reg:x12; val_offset:1182*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1182*FLEN/8, x13, x9, x10)

inst_416:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348325 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12f232 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f3b24 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb48325; op2val:0xbf12f232;
op3val:0x3e4f3b24; valaddr_reg:x12; val_offset:1185*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1185*FLEN/8, x13, x9, x10)

inst_417:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348325 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12f232 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f3b24 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb48325; op2val:0xbf12f232;
op3val:0x3e4f3b24; valaddr_reg:x12; val_offset:1188*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1188*FLEN/8, x13, x9, x10)

inst_418:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348325 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12f232 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f3b24 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb48325; op2val:0xbf12f232;
op3val:0x3e4f3b24; valaddr_reg:x12; val_offset:1191*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1191*FLEN/8, x13, x9, x10)

inst_419:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348325 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12f232 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f3b24 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb48325; op2val:0xbf12f232;
op3val:0x3e4f3b24; valaddr_reg:x12; val_offset:1194*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1194*FLEN/8, x13, x9, x10)

inst_420:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x26f10a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0bbac8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x363d5d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f26f10a; op2val:0xbf0bbac8;
op3val:0x3eb63d5d; valaddr_reg:x12; val_offset:1197*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1197*FLEN/8, x13, x9, x10)

inst_421:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x26f10a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0bbac8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x363d5d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f26f10a; op2val:0xbf0bbac8;
op3val:0x3eb63d5d; valaddr_reg:x12; val_offset:1200*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1200*FLEN/8, x13, x9, x10)

inst_422:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x26f10a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0bbac8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x363d5d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f26f10a; op2val:0xbf0bbac8;
op3val:0x3eb63d5d; valaddr_reg:x12; val_offset:1203*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1203*FLEN/8, x13, x9, x10)

inst_423:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x26f10a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0bbac8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x363d5d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f26f10a; op2val:0xbf0bbac8;
op3val:0x3eb63d5d; valaddr_reg:x12; val_offset:1206*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1206*FLEN/8, x13, x9, x10)

inst_424:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x26f10a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0bbac8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x363d5d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f26f10a; op2val:0xbf0bbac8;
op3val:0x3eb63d5d; valaddr_reg:x12; val_offset:1209*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1209*FLEN/8, x13, x9, x10)

inst_425:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x063b7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x27c423 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2fef4f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e863b7e; op2val:0xbf27c423;
op3val:0x3e2fef4f; valaddr_reg:x12; val_offset:1212*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1212*FLEN/8, x13, x9, x10)

inst_426:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x063b7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x27c423 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2fef4f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e863b7e; op2val:0xbf27c423;
op3val:0x3e2fef4f; valaddr_reg:x12; val_offset:1215*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1215*FLEN/8, x13, x9, x10)

inst_427:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x063b7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x27c423 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2fef4f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e863b7e; op2val:0xbf27c423;
op3val:0x3e2fef4f; valaddr_reg:x12; val_offset:1218*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1218*FLEN/8, x13, x9, x10)

inst_428:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x063b7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x27c423 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2fef4f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e863b7e; op2val:0xbf27c423;
op3val:0x3e2fef4f; valaddr_reg:x12; val_offset:1221*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1221*FLEN/8, x13, x9, x10)

inst_429:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x063b7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x27c423 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2fef4f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e863b7e; op2val:0xbf27c423;
op3val:0x3e2fef4f; valaddr_reg:x12; val_offset:1224*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1224*FLEN/8, x13, x9, x10)

inst_430:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x266370 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x778ad2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x20e42c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f266370; op2val:0xbe778ad2;
op3val:0x3e20e42c; valaddr_reg:x12; val_offset:1227*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1227*FLEN/8, x13, x9, x10)

inst_431:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x266370 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x778ad2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x20e42c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f266370; op2val:0xbe778ad2;
op3val:0x3e20e42c; valaddr_reg:x12; val_offset:1230*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1230*FLEN/8, x13, x9, x10)

inst_432:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x266370 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x778ad2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x20e42c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f266370; op2val:0xbe778ad2;
op3val:0x3e20e42c; valaddr_reg:x12; val_offset:1233*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1233*FLEN/8, x13, x9, x10)

inst_433:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x266370 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x778ad2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x20e42c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f266370; op2val:0xbe778ad2;
op3val:0x3e20e42c; valaddr_reg:x12; val_offset:1236*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1236*FLEN/8, x13, x9, x10)

inst_434:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x266370 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x778ad2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x20e42c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f266370; op2val:0xbe778ad2;
op3val:0x3e20e42c; valaddr_reg:x12; val_offset:1239*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1239*FLEN/8, x13, x9, x10)

inst_435:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0535fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x195456 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1f924c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0535fc; op2val:0xc0195456;
op3val:0x3e9f924c; valaddr_reg:x12; val_offset:1242*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1242*FLEN/8, x13, x9, x10)

inst_436:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0535fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x195456 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1f924c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0535fc; op2val:0xc0195456;
op3val:0x3e9f924c; valaddr_reg:x12; val_offset:1245*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1245*FLEN/8, x13, x9, x10)

inst_437:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0535fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x195456 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1f924c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0535fc; op2val:0xc0195456;
op3val:0x3e9f924c; valaddr_reg:x12; val_offset:1248*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1248*FLEN/8, x13, x9, x10)

inst_438:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0535fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x195456 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1f924c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0535fc; op2val:0xc0195456;
op3val:0x3e9f924c; valaddr_reg:x12; val_offset:1251*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1251*FLEN/8, x13, x9, x10)

inst_439:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0535fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x195456 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1f924c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0535fc; op2val:0xc0195456;
op3val:0x3e9f924c; valaddr_reg:x12; val_offset:1254*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1254*FLEN/8, x13, x9, x10)

inst_440:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x439b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x69194f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x321bc7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc39b66; op2val:0xbfe9194f;
op3val:0x3d321bc7; valaddr_reg:x12; val_offset:1257*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1257*FLEN/8, x13, x9, x10)

inst_441:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x439b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x69194f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x321bc7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc39b66; op2val:0xbfe9194f;
op3val:0x3d321bc7; valaddr_reg:x12; val_offset:1260*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1260*FLEN/8, x13, x9, x10)

inst_442:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x439b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x69194f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x321bc7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc39b66; op2val:0xbfe9194f;
op3val:0x3d321bc7; valaddr_reg:x12; val_offset:1263*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1263*FLEN/8, x13, x9, x10)

inst_443:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x439b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x69194f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x321bc7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc39b66; op2val:0xbfe9194f;
op3val:0x3d321bc7; valaddr_reg:x12; val_offset:1266*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1266*FLEN/8, x13, x9, x10)

inst_444:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x439b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x69194f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x321bc7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc39b66; op2val:0xbfe9194f;
op3val:0x3d321bc7; valaddr_reg:x12; val_offset:1269*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1269*FLEN/8, x13, x9, x10)

inst_445:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x76b66d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0ca4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70fa56 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef6b66d; op2val:0xbf7a0ca4;
op3val:0x3ef0fa56; valaddr_reg:x12; val_offset:1272*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1272*FLEN/8, x13, x9, x10)

inst_446:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x76b66d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0ca4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70fa56 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef6b66d; op2val:0xbf7a0ca4;
op3val:0x3ef0fa56; valaddr_reg:x12; val_offset:1275*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1275*FLEN/8, x13, x9, x10)

inst_447:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x76b66d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0ca4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70fa56 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef6b66d; op2val:0xbf7a0ca4;
op3val:0x3ef0fa56; valaddr_reg:x12; val_offset:1278*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1278*FLEN/8, x13, x9, x10)

inst_448:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x76b66d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0ca4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70fa56 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef6b66d; op2val:0xbf7a0ca4;
op3val:0x3ef0fa56; valaddr_reg:x12; val_offset:1281*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1281*FLEN/8, x13, x9, x10)

inst_449:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x76b66d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0ca4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70fa56 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef6b66d; op2val:0xbf7a0ca4;
op3val:0x3ef0fa56; valaddr_reg:x12; val_offset:1284*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1284*FLEN/8, x13, x9, x10)

inst_450:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5575b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x48a45d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x274d03 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5575b6; op2val:0xbe48a45d;
op3val:0x3e274d03; valaddr_reg:x12; val_offset:1287*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1287*FLEN/8, x13, x9, x10)

inst_451:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5575b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x48a45d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x274d03 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5575b6; op2val:0xbe48a45d;
op3val:0x3e274d03; valaddr_reg:x12; val_offset:1290*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1290*FLEN/8, x13, x9, x10)

inst_452:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5575b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x48a45d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x274d03 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5575b6; op2val:0xbe48a45d;
op3val:0x3e274d03; valaddr_reg:x12; val_offset:1293*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1293*FLEN/8, x13, x9, x10)

inst_453:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5575b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x48a45d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x274d03 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5575b6; op2val:0xbe48a45d;
op3val:0x3e274d03; valaddr_reg:x12; val_offset:1296*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1296*FLEN/8, x13, x9, x10)

inst_454:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5575b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x48a45d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x274d03 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5575b6; op2val:0xbe48a45d;
op3val:0x3e274d03; valaddr_reg:x12; val_offset:1299*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1299*FLEN/8, x13, x9, x10)

inst_455:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x003e07 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0592f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05d3ab and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d803e07; op2val:0xc10592f0;
op3val:0x3f05d3ab; valaddr_reg:x12; val_offset:1302*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1302*FLEN/8, x13, x9, x10)

inst_456:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x003e07 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0592f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05d3ab and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d803e07; op2val:0xc10592f0;
op3val:0x3f05d3ab; valaddr_reg:x12; val_offset:1305*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1305*FLEN/8, x13, x9, x10)

inst_457:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x003e07 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0592f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05d3ab and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d803e07; op2val:0xc10592f0;
op3val:0x3f05d3ab; valaddr_reg:x12; val_offset:1308*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1308*FLEN/8, x13, x9, x10)

inst_458:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x003e07 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0592f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05d3ab and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d803e07; op2val:0xc10592f0;
op3val:0x3f05d3ab; valaddr_reg:x12; val_offset:1311*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1311*FLEN/8, x13, x9, x10)

inst_459:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x003e07 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0592f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05d3ab and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d803e07; op2val:0xc10592f0;
op3val:0x3f05d3ab; valaddr_reg:x12; val_offset:1314*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1314*FLEN/8, x13, x9, x10)

inst_460:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1dfd77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x688ddd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f8541 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9dfd77; op2val:0xbf688ddd;
op3val:0x3e8f8541; valaddr_reg:x12; val_offset:1317*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1317*FLEN/8, x13, x9, x10)

inst_461:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1dfd77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x688ddd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f8541 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9dfd77; op2val:0xbf688ddd;
op3val:0x3e8f8541; valaddr_reg:x12; val_offset:1320*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1320*FLEN/8, x13, x9, x10)

inst_462:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1dfd77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x688ddd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f8541 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9dfd77; op2val:0xbf688ddd;
op3val:0x3e8f8541; valaddr_reg:x12; val_offset:1323*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1323*FLEN/8, x13, x9, x10)

inst_463:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1dfd77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x688ddd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f8541 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9dfd77; op2val:0xbf688ddd;
op3val:0x3e8f8541; valaddr_reg:x12; val_offset:1326*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1326*FLEN/8, x13, x9, x10)

inst_464:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1dfd77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x688ddd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f8541 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9dfd77; op2val:0xbf688ddd;
op3val:0x3e8f8541; valaddr_reg:x12; val_offset:1329*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1329*FLEN/8, x13, x9, x10)

inst_465:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a0f1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4490a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x540329 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a0f1d; op2val:0xc04490a5;
op3val:0x3f540329; valaddr_reg:x12; val_offset:1332*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1332*FLEN/8, x13, x9, x10)

inst_466:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a0f1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4490a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x540329 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a0f1d; op2val:0xc04490a5;
op3val:0x3f540329; valaddr_reg:x12; val_offset:1335*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1335*FLEN/8, x13, x9, x10)

inst_467:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a0f1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4490a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x540329 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a0f1d; op2val:0xc04490a5;
op3val:0x3f540329; valaddr_reg:x12; val_offset:1338*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1338*FLEN/8, x13, x9, x10)

inst_468:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a0f1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4490a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x540329 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a0f1d; op2val:0xc04490a5;
op3val:0x3f540329; valaddr_reg:x12; val_offset:1341*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1341*FLEN/8, x13, x9, x10)

inst_469:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a0f1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4490a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x540329 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a0f1d; op2val:0xc04490a5;
op3val:0x3f540329; valaddr_reg:x12; val_offset:1344*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1344*FLEN/8, x13, x9, x10)

inst_470:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x60e642 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7448d3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x569b71 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e60e642; op2val:0xbff448d3;
op3val:0x3ed69b71; valaddr_reg:x12; val_offset:1347*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1347*FLEN/8, x13, x9, x10)

inst_471:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x60e642 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7448d3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x569b71 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e60e642; op2val:0xbff448d3;
op3val:0x3ed69b71; valaddr_reg:x12; val_offset:1350*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1350*FLEN/8, x13, x9, x10)

inst_472:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x60e642 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7448d3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x569b71 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e60e642; op2val:0xbff448d3;
op3val:0x3ed69b71; valaddr_reg:x12; val_offset:1353*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1353*FLEN/8, x13, x9, x10)

inst_473:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x60e642 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7448d3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x569b71 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e60e642; op2val:0xbff448d3;
op3val:0x3ed69b71; valaddr_reg:x12; val_offset:1356*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1356*FLEN/8, x13, x9, x10)

inst_474:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x60e642 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7448d3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x569b71 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e60e642; op2val:0xbff448d3;
op3val:0x3ed69b71; valaddr_reg:x12; val_offset:1359*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1359*FLEN/8, x13, x9, x10)

inst_475:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b3c36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5dad69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1446f9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab3c36; op2val:0xbfddad69;
op3val:0x3f1446f9; valaddr_reg:x12; val_offset:1362*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1362*FLEN/8, x13, x9, x10)

inst_476:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b3c36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5dad69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1446f9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab3c36; op2val:0xbfddad69;
op3val:0x3f1446f9; valaddr_reg:x12; val_offset:1365*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1365*FLEN/8, x13, x9, x10)

inst_477:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b3c36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5dad69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1446f9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab3c36; op2val:0xbfddad69;
op3val:0x3f1446f9; valaddr_reg:x12; val_offset:1368*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1368*FLEN/8, x13, x9, x10)

inst_478:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b3c36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5dad69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1446f9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab3c36; op2val:0xbfddad69;
op3val:0x3f1446f9; valaddr_reg:x12; val_offset:1371*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1371*FLEN/8, x13, x9, x10)

inst_479:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b3c36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5dad69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1446f9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab3c36; op2val:0xbfddad69;
op3val:0x3f1446f9; valaddr_reg:x12; val_offset:1374*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1374*FLEN/8, x13, x9, x10)

inst_480:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40a588 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x19490b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x66b3cc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec0a588; op2val:0xbf19490b;
op3val:0x3e66b3cc; valaddr_reg:x12; val_offset:1377*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1377*FLEN/8, x13, x9, x10)

inst_481:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40a588 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x19490b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x66b3cc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec0a588; op2val:0xbf19490b;
op3val:0x3e66b3cc; valaddr_reg:x12; val_offset:1380*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1380*FLEN/8, x13, x9, x10)

inst_482:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40a588 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x19490b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x66b3cc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec0a588; op2val:0xbf19490b;
op3val:0x3e66b3cc; valaddr_reg:x12; val_offset:1383*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1383*FLEN/8, x13, x9, x10)

inst_483:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40a588 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x19490b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x66b3cc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec0a588; op2val:0xbf19490b;
op3val:0x3e66b3cc; valaddr_reg:x12; val_offset:1386*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1386*FLEN/8, x13, x9, x10)

inst_484:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40a588 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x19490b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x66b3cc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec0a588; op2val:0xbf19490b;
op3val:0x3e66b3cc; valaddr_reg:x12; val_offset:1389*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1389*FLEN/8, x13, x9, x10)

inst_485:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x39ec9c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4519d2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f25d5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb9ec9c; op2val:0xbf4519d2;
op3val:0x3e8f25d5; valaddr_reg:x12; val_offset:1392*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1392*FLEN/8, x13, x9, x10)

inst_486:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x39ec9c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4519d2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f25d5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb9ec9c; op2val:0xbf4519d2;
op3val:0x3e8f25d5; valaddr_reg:x12; val_offset:1395*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1395*FLEN/8, x13, x9, x10)

inst_487:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x39ec9c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4519d2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f25d5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb9ec9c; op2val:0xbf4519d2;
op3val:0x3e8f25d5; valaddr_reg:x12; val_offset:1398*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1398*FLEN/8, x13, x9, x10)

inst_488:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x39ec9c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4519d2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f25d5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb9ec9c; op2val:0xbf4519d2;
op3val:0x3e8f25d5; valaddr_reg:x12; val_offset:1401*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1401*FLEN/8, x13, x9, x10)

inst_489:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x39ec9c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4519d2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f25d5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb9ec9c; op2val:0xbf4519d2;
op3val:0x3e8f25d5; valaddr_reg:x12; val_offset:1404*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1404*FLEN/8, x13, x9, x10)

inst_490:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78edc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d247a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5708ba and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78edc3; op2val:0xbf5d247a;
op3val:0x3f5708ba; valaddr_reg:x12; val_offset:1407*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1407*FLEN/8, x13, x9, x10)

inst_491:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78edc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d247a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5708ba and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78edc3; op2val:0xbf5d247a;
op3val:0x3f5708ba; valaddr_reg:x12; val_offset:1410*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1410*FLEN/8, x13, x9, x10)

inst_492:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78edc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d247a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5708ba and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78edc3; op2val:0xbf5d247a;
op3val:0x3f5708ba; valaddr_reg:x12; val_offset:1413*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1413*FLEN/8, x13, x9, x10)

inst_493:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78edc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d247a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5708ba and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78edc3; op2val:0xbf5d247a;
op3val:0x3f5708ba; valaddr_reg:x12; val_offset:1416*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1416*FLEN/8, x13, x9, x10)

inst_494:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78edc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d247a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5708ba and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78edc3; op2val:0xbf5d247a;
op3val:0x3f5708ba; valaddr_reg:x12; val_offset:1419*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1419*FLEN/8, x13, x9, x10)

inst_495:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f1623 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x204092 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3323db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f1623; op2val:0xbf204092;
op3val:0x3eb323db; valaddr_reg:x12; val_offset:1422*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1422*FLEN/8, x13, x9, x10)

inst_496:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f1623 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x204092 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3323db and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f1623; op2val:0xbf204092;
op3val:0x3eb323db; valaddr_reg:x12; val_offset:1425*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1425*FLEN/8, x13, x9, x10)

inst_497:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f1623 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x204092 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3323db and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f1623; op2val:0xbf204092;
op3val:0x3eb323db; valaddr_reg:x12; val_offset:1428*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1428*FLEN/8, x13, x9, x10)

inst_498:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f1623 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x204092 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3323db and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f1623; op2val:0xbf204092;
op3val:0x3eb323db; valaddr_reg:x12; val_offset:1431*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1431*FLEN/8, x13, x9, x10)

inst_499:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f1623 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x204092 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3323db and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f1623; op2val:0xbf204092;
op3val:0x3eb323db; valaddr_reg:x12; val_offset:1434*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1434*FLEN/8, x13, x9, x10)

inst_500:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47ed1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4de313 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ca36 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47ed1d; op2val:0xbecde313;
op3val:0x3ea0ca36; valaddr_reg:x12; val_offset:1437*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1437*FLEN/8, x13, x9, x10)

inst_501:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47ed1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4de313 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ca36 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47ed1d; op2val:0xbecde313;
op3val:0x3ea0ca36; valaddr_reg:x12; val_offset:1440*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1440*FLEN/8, x13, x9, x10)

inst_502:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47ed1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4de313 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ca36 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47ed1d; op2val:0xbecde313;
op3val:0x3ea0ca36; valaddr_reg:x12; val_offset:1443*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1443*FLEN/8, x13, x9, x10)

inst_503:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47ed1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4de313 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ca36 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47ed1d; op2val:0xbecde313;
op3val:0x3ea0ca36; valaddr_reg:x12; val_offset:1446*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1446*FLEN/8, x13, x9, x10)

inst_504:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47ed1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4de313 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ca36 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47ed1d; op2val:0xbecde313;
op3val:0x3ea0ca36; valaddr_reg:x12; val_offset:1449*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1449*FLEN/8, x13, x9, x10)

inst_505:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3cff3d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x261ed6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75488d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebcff3d; op2val:0xc0261ed6;
op3val:0x3f75488d; valaddr_reg:x12; val_offset:1452*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1452*FLEN/8, x13, x9, x10)

inst_506:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3cff3d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x261ed6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75488d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebcff3d; op2val:0xc0261ed6;
op3val:0x3f75488d; valaddr_reg:x12; val_offset:1455*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1455*FLEN/8, x13, x9, x10)

inst_507:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3cff3d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x261ed6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75488d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebcff3d; op2val:0xc0261ed6;
op3val:0x3f75488d; valaddr_reg:x12; val_offset:1458*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1458*FLEN/8, x13, x9, x10)

inst_508:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3cff3d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x261ed6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75488d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebcff3d; op2val:0xc0261ed6;
op3val:0x3f75488d; valaddr_reg:x12; val_offset:1461*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1461*FLEN/8, x13, x9, x10)

inst_509:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3cff3d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x261ed6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75488d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebcff3d; op2val:0xc0261ed6;
op3val:0x3f75488d; valaddr_reg:x12; val_offset:1464*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1464*FLEN/8, x13, x9, x10)

inst_510:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07462c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3b6e2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4614f7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07462c; op2val:0xbfbb6e2f;
op3val:0x3f4614f7; valaddr_reg:x12; val_offset:1467*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1467*FLEN/8, x13, x9, x10)

inst_511:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07462c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3b6e2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4614f7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07462c; op2val:0xbfbb6e2f;
op3val:0x3f4614f7; valaddr_reg:x12; val_offset:1470*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1470*FLEN/8, x13, x9, x10)

inst_512:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07462c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3b6e2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4614f7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07462c; op2val:0xbfbb6e2f;
op3val:0x3f4614f7; valaddr_reg:x12; val_offset:1473*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1473*FLEN/8, x13, x9, x10)

inst_513:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07462c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3b6e2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4614f7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07462c; op2val:0xbfbb6e2f;
op3val:0x3f4614f7; valaddr_reg:x12; val_offset:1476*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1476*FLEN/8, x13, x9, x10)

inst_514:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07462c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3b6e2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4614f7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07462c; op2val:0xbfbb6e2f;
op3val:0x3f4614f7; valaddr_reg:x12; val_offset:1479*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1479*FLEN/8, x13, x9, x10)

inst_515:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7223af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a83b2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dd12e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7223af; op2val:0xbf6a83b2;
op3val:0x3f5dd12e; valaddr_reg:x12; val_offset:1482*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1482*FLEN/8, x13, x9, x10)

inst_516:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7223af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a83b2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dd12e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7223af; op2val:0xbf6a83b2;
op3val:0x3f5dd12e; valaddr_reg:x12; val_offset:1485*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1485*FLEN/8, x13, x9, x10)

inst_517:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7223af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a83b2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dd12e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7223af; op2val:0xbf6a83b2;
op3val:0x3f5dd12e; valaddr_reg:x12; val_offset:1488*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1488*FLEN/8, x13, x9, x10)

inst_518:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7223af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a83b2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dd12e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7223af; op2val:0xbf6a83b2;
op3val:0x3f5dd12e; valaddr_reg:x12; val_offset:1491*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1491*FLEN/8, x13, x9, x10)

inst_519:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7223af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a83b2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dd12e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7223af; op2val:0xbf6a83b2;
op3val:0x3f5dd12e; valaddr_reg:x12; val_offset:1494*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1494*FLEN/8, x13, x9, x10)

inst_520:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec218 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1976bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x51861f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ec218; op2val:0xbf9976bd;
op3val:0x3f51861f; valaddr_reg:x12; val_offset:1497*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1497*FLEN/8, x13, x9, x10)

inst_521:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec218 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1976bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x51861f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ec218; op2val:0xbf9976bd;
op3val:0x3f51861f; valaddr_reg:x12; val_offset:1500*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1500*FLEN/8, x13, x9, x10)

inst_522:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec218 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1976bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x51861f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ec218; op2val:0xbf9976bd;
op3val:0x3f51861f; valaddr_reg:x12; val_offset:1503*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1503*FLEN/8, x13, x9, x10)

inst_523:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec218 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1976bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x51861f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ec218; op2val:0xbf9976bd;
op3val:0x3f51861f; valaddr_reg:x12; val_offset:1506*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1506*FLEN/8, x13, x9, x10)

inst_524:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec218 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1976bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x51861f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ec218; op2val:0xbf9976bd;
op3val:0x3f51861f; valaddr_reg:x12; val_offset:1509*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1509*FLEN/8, x13, x9, x10)

inst_525:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e7ff3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x190653 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76df25 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e7ff3; op2val:0xbf990653;
op3val:0x3f76df25; valaddr_reg:x12; val_offset:1512*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1512*FLEN/8, x13, x9, x10)

inst_526:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e7ff3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x190653 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76df25 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e7ff3; op2val:0xbf990653;
op3val:0x3f76df25; valaddr_reg:x12; val_offset:1515*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1515*FLEN/8, x13, x9, x10)

inst_527:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e7ff3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x190653 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76df25 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e7ff3; op2val:0xbf990653;
op3val:0x3f76df25; valaddr_reg:x12; val_offset:1518*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1518*FLEN/8, x13, x9, x10)

inst_528:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e7ff3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x190653 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76df25 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e7ff3; op2val:0xbf990653;
op3val:0x3f76df25; valaddr_reg:x12; val_offset:1521*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1521*FLEN/8, x13, x9, x10)

inst_529:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e7ff3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x190653 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76df25 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e7ff3; op2val:0xbf990653;
op3val:0x3f76df25; valaddr_reg:x12; val_offset:1524*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1524*FLEN/8, x13, x9, x10)

inst_530:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08e01f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x145b43 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ea4bc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f08e01f; op2val:0xbf945b43;
op3val:0x3f1ea4bc; valaddr_reg:x12; val_offset:1527*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1527*FLEN/8, x13, x9, x10)

inst_531:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08e01f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x145b43 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ea4bc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f08e01f; op2val:0xbf945b43;
op3val:0x3f1ea4bc; valaddr_reg:x12; val_offset:1530*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1530*FLEN/8, x13, x9, x10)

inst_532:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08e01f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x145b43 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ea4bc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f08e01f; op2val:0xbf945b43;
op3val:0x3f1ea4bc; valaddr_reg:x12; val_offset:1533*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1533*FLEN/8, x13, x9, x10)

inst_533:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08e01f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x145b43 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ea4bc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f08e01f; op2val:0xbf945b43;
op3val:0x3f1ea4bc; valaddr_reg:x12; val_offset:1536*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1536*FLEN/8, x13, x9, x10)

inst_534:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08e01f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x145b43 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ea4bc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f08e01f; op2val:0xbf945b43;
op3val:0x3f1ea4bc; valaddr_reg:x12; val_offset:1539*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1539*FLEN/8, x13, x9, x10)

inst_535:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46c2f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0721b9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51d5f8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6c2f1; op2val:0xbf8721b9;
op3val:0x3ed1d5f8; valaddr_reg:x12; val_offset:1542*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1542*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_4)

inst_536:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46c2f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0721b9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51d5f8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6c2f1; op2val:0xbf8721b9;
op3val:0x3ed1d5f8; valaddr_reg:x12; val_offset:1545*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1545*FLEN/8, x13, x9, x10)

inst_537:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46c2f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0721b9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51d5f8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6c2f1; op2val:0xbf8721b9;
op3val:0x3ed1d5f8; valaddr_reg:x12; val_offset:1548*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1548*FLEN/8, x13, x9, x10)

inst_538:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46c2f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0721b9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51d5f8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6c2f1; op2val:0xbf8721b9;
op3val:0x3ed1d5f8; valaddr_reg:x12; val_offset:1551*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1551*FLEN/8, x13, x9, x10)

inst_539:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46c2f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0721b9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51d5f8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6c2f1; op2val:0xbf8721b9;
op3val:0x3ed1d5f8; valaddr_reg:x12; val_offset:1554*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1554*FLEN/8, x13, x9, x10)

inst_540:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x431c7f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x02149a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x464858 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f431c7f; op2val:0xbe02149a;
op3val:0x3dc64858; valaddr_reg:x12; val_offset:1557*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1557*FLEN/8, x13, x9, x10)

inst_541:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x431c7f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x02149a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x464858 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f431c7f; op2val:0xbe02149a;
op3val:0x3dc64858; valaddr_reg:x12; val_offset:1560*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1560*FLEN/8, x13, x9, x10)

inst_542:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x431c7f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x02149a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x464858 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f431c7f; op2val:0xbe02149a;
op3val:0x3dc64858; valaddr_reg:x12; val_offset:1563*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1563*FLEN/8, x13, x9, x10)

inst_543:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x431c7f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x02149a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x464858 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f431c7f; op2val:0xbe02149a;
op3val:0x3dc64858; valaddr_reg:x12; val_offset:1566*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1566*FLEN/8, x13, x9, x10)

inst_544:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x431c7f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x02149a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x464858 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f431c7f; op2val:0xbe02149a;
op3val:0x3dc64858; valaddr_reg:x12; val_offset:1569*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1569*FLEN/8, x13, x9, x10)

inst_545:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fd4b4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18530e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x18394b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7fd4b4; op2val:0xbf18530e;
op3val:0x3f18394b; valaddr_reg:x12; val_offset:1572*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1572*FLEN/8, x13, x9, x10)

inst_546:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fd4b4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18530e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x18394b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7fd4b4; op2val:0xbf18530e;
op3val:0x3f18394b; valaddr_reg:x12; val_offset:1575*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1575*FLEN/8, x13, x9, x10)

inst_547:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fd4b4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18530e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x18394b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7fd4b4; op2val:0xbf18530e;
op3val:0x3f18394b; valaddr_reg:x12; val_offset:1578*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1578*FLEN/8, x13, x9, x10)

inst_548:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fd4b4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18530e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x18394b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7fd4b4; op2val:0xbf18530e;
op3val:0x3f18394b; valaddr_reg:x12; val_offset:1581*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1581*FLEN/8, x13, x9, x10)

inst_549:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fd4b4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18530e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x18394b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7fd4b4; op2val:0xbf18530e;
op3val:0x3f18394b; valaddr_reg:x12; val_offset:1584*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1584*FLEN/8, x13, x9, x10)

inst_550:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b262 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5155b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x170777 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f38b262; op2val:0xbf5155b4;
op3val:0x3f170777; valaddr_reg:x12; val_offset:1587*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1587*FLEN/8, x13, x9, x10)

inst_551:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b262 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5155b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x170777 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f38b262; op2val:0xbf5155b4;
op3val:0x3f170777; valaddr_reg:x12; val_offset:1590*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1590*FLEN/8, x13, x9, x10)

inst_552:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b262 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5155b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x170777 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f38b262; op2val:0xbf5155b4;
op3val:0x3f170777; valaddr_reg:x12; val_offset:1593*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1593*FLEN/8, x13, x9, x10)

inst_553:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b262 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5155b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x170777 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f38b262; op2val:0xbf5155b4;
op3val:0x3f170777; valaddr_reg:x12; val_offset:1596*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1596*FLEN/8, x13, x9, x10)

inst_554:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b262 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5155b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x170777 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f38b262; op2val:0xbf5155b4;
op3val:0x3f170777; valaddr_reg:x12; val_offset:1599*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1599*FLEN/8, x13, x9, x10)

inst_555:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x628a7b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4321b9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cad53 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f628a7b; op2val:0xbe4321b9;
op3val:0x3e2cad53; valaddr_reg:x12; val_offset:1602*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1602*FLEN/8, x13, x9, x10)

inst_556:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x628a7b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4321b9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cad53 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f628a7b; op2val:0xbe4321b9;
op3val:0x3e2cad53; valaddr_reg:x12; val_offset:1605*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1605*FLEN/8, x13, x9, x10)

inst_557:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x628a7b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4321b9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cad53 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f628a7b; op2val:0xbe4321b9;
op3val:0x3e2cad53; valaddr_reg:x12; val_offset:1608*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1608*FLEN/8, x13, x9, x10)

inst_558:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x628a7b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4321b9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cad53 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f628a7b; op2val:0xbe4321b9;
op3val:0x3e2cad53; valaddr_reg:x12; val_offset:1611*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1611*FLEN/8, x13, x9, x10)

inst_559:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x628a7b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4321b9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cad53 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f628a7b; op2val:0xbe4321b9;
op3val:0x3e2cad53; valaddr_reg:x12; val_offset:1614*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1614*FLEN/8, x13, x9, x10)

inst_560:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20496c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x450fad and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76c4a2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20496c; op2val:0xbfc50fad;
op3val:0x3f76c4a2; valaddr_reg:x12; val_offset:1617*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1617*FLEN/8, x13, x9, x10)

inst_561:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20496c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x450fad and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76c4a2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20496c; op2val:0xbfc50fad;
op3val:0x3f76c4a2; valaddr_reg:x12; val_offset:1620*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1620*FLEN/8, x13, x9, x10)

inst_562:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20496c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x450fad and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76c4a2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20496c; op2val:0xbfc50fad;
op3val:0x3f76c4a2; valaddr_reg:x12; val_offset:1623*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1623*FLEN/8, x13, x9, x10)

inst_563:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20496c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x450fad and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76c4a2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20496c; op2val:0xbfc50fad;
op3val:0x3f76c4a2; valaddr_reg:x12; val_offset:1626*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1626*FLEN/8, x13, x9, x10)

inst_564:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20496c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x450fad and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76c4a2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20496c; op2val:0xbfc50fad;
op3val:0x3f76c4a2; valaddr_reg:x12; val_offset:1629*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1629*FLEN/8, x13, x9, x10)

inst_565:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45daed and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15e97e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x67b9c4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5daed; op2val:0xc015e97e;
op3val:0x3f67b9c4; valaddr_reg:x12; val_offset:1632*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1632*FLEN/8, x13, x9, x10)

inst_566:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45daed and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15e97e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x67b9c4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5daed; op2val:0xc015e97e;
op3val:0x3f67b9c4; valaddr_reg:x12; val_offset:1635*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1635*FLEN/8, x13, x9, x10)

inst_567:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45daed and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15e97e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x67b9c4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5daed; op2val:0xc015e97e;
op3val:0x3f67b9c4; valaddr_reg:x12; val_offset:1638*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1638*FLEN/8, x13, x9, x10)

inst_568:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45daed and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15e97e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x67b9c4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5daed; op2val:0xc015e97e;
op3val:0x3f67b9c4; valaddr_reg:x12; val_offset:1641*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1641*FLEN/8, x13, x9, x10)

inst_569:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45daed and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15e97e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x67b9c4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5daed; op2val:0xc015e97e;
op3val:0x3f67b9c4; valaddr_reg:x12; val_offset:1644*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1644*FLEN/8, x13, x9, x10)

inst_570:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68d8cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x39efd7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x291ed4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8d8cf; op2val:0xbfb9efd7;
op3val:0x3f291ed4; valaddr_reg:x12; val_offset:1647*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1647*FLEN/8, x13, x9, x10)

inst_571:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68d8cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x39efd7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x291ed4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8d8cf; op2val:0xbfb9efd7;
op3val:0x3f291ed4; valaddr_reg:x12; val_offset:1650*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1650*FLEN/8, x13, x9, x10)

inst_572:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68d8cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x39efd7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x291ed4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8d8cf; op2val:0xbfb9efd7;
op3val:0x3f291ed4; valaddr_reg:x12; val_offset:1653*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1653*FLEN/8, x13, x9, x10)

inst_573:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68d8cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x39efd7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x291ed4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8d8cf; op2val:0xbfb9efd7;
op3val:0x3f291ed4; valaddr_reg:x12; val_offset:1656*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1656*FLEN/8, x13, x9, x10)

inst_574:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68d8cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x39efd7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x291ed4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8d8cf; op2val:0xbfb9efd7;
op3val:0x3f291ed4; valaddr_reg:x12; val_offset:1659*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1659*FLEN/8, x13, x9, x10)

inst_575:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5694c4 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4bc4fe and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2acd17 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed694c4; op2val:0xbdcbc4fe;
op3val:0x3d2acd17; valaddr_reg:x12; val_offset:1662*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1662*FLEN/8, x13, x9, x10)

inst_576:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5694c4 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4bc4fe and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2acd17 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed694c4; op2val:0xbdcbc4fe;
op3val:0x3d2acd17; valaddr_reg:x12; val_offset:1665*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1665*FLEN/8, x13, x9, x10)

inst_577:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5694c4 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4bc4fe and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2acd17 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed694c4; op2val:0xbdcbc4fe;
op3val:0x3d2acd17; valaddr_reg:x12; val_offset:1668*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1668*FLEN/8, x13, x9, x10)

inst_578:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5694c4 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4bc4fe and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2acd17 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed694c4; op2val:0xbdcbc4fe;
op3val:0x3d2acd17; valaddr_reg:x12; val_offset:1671*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1671*FLEN/8, x13, x9, x10)

inst_579:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5694c4 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4bc4fe and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2acd17 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed694c4; op2val:0xbdcbc4fe;
op3val:0x3d2acd17; valaddr_reg:x12; val_offset:1674*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1674*FLEN/8, x13, x9, x10)

inst_580:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d55e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4cdc02 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b5bc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e39d55e; op2val:0xc04cdc02;
op3val:0x3f14b5bc; valaddr_reg:x12; val_offset:1677*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1677*FLEN/8, x13, x9, x10)

inst_581:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d55e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4cdc02 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b5bc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e39d55e; op2val:0xc04cdc02;
op3val:0x3f14b5bc; valaddr_reg:x12; val_offset:1680*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1680*FLEN/8, x13, x9, x10)

inst_582:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d55e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4cdc02 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b5bc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e39d55e; op2val:0xc04cdc02;
op3val:0x3f14b5bc; valaddr_reg:x12; val_offset:1683*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1683*FLEN/8, x13, x9, x10)

inst_583:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d55e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4cdc02 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b5bc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e39d55e; op2val:0xc04cdc02;
op3val:0x3f14b5bc; valaddr_reg:x12; val_offset:1686*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1686*FLEN/8, x13, x9, x10)

inst_584:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d55e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4cdc02 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b5bc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e39d55e; op2val:0xc04cdc02;
op3val:0x3f14b5bc; valaddr_reg:x12; val_offset:1689*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1689*FLEN/8, x13, x9, x10)

inst_585:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f7f96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x74d4f4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3724e8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3f7f96; op2val:0xbff4d4f4;
op3val:0x3eb724e8; valaddr_reg:x12; val_offset:1692*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1692*FLEN/8, x13, x9, x10)

inst_586:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f7f96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x74d4f4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3724e8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3f7f96; op2val:0xbff4d4f4;
op3val:0x3eb724e8; valaddr_reg:x12; val_offset:1695*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1695*FLEN/8, x13, x9, x10)

inst_587:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f7f96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x74d4f4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3724e8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3f7f96; op2val:0xbff4d4f4;
op3val:0x3eb724e8; valaddr_reg:x12; val_offset:1698*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1698*FLEN/8, x13, x9, x10)

inst_588:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f7f96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x74d4f4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3724e8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3f7f96; op2val:0xbff4d4f4;
op3val:0x3eb724e8; valaddr_reg:x12; val_offset:1701*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1701*FLEN/8, x13, x9, x10)

inst_589:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f7f96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x74d4f4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3724e8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3f7f96; op2val:0xbff4d4f4;
op3val:0x3eb724e8; valaddr_reg:x12; val_offset:1704*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1704*FLEN/8, x13, x9, x10)

inst_590:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x216c33 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e259b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b9e84 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f216c33; op2val:0xbfae259b;
op3val:0x3f5b9e84; valaddr_reg:x12; val_offset:1707*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1707*FLEN/8, x13, x9, x10)

inst_591:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x216c33 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e259b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b9e84 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f216c33; op2val:0xbfae259b;
op3val:0x3f5b9e84; valaddr_reg:x12; val_offset:1710*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1710*FLEN/8, x13, x9, x10)

inst_592:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x216c33 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e259b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b9e84 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f216c33; op2val:0xbfae259b;
op3val:0x3f5b9e84; valaddr_reg:x12; val_offset:1713*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1713*FLEN/8, x13, x9, x10)

inst_593:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x216c33 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e259b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b9e84 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f216c33; op2val:0xbfae259b;
op3val:0x3f5b9e84; valaddr_reg:x12; val_offset:1716*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1716*FLEN/8, x13, x9, x10)

inst_594:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x216c33 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e259b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b9e84 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f216c33; op2val:0xbfae259b;
op3val:0x3f5b9e84; valaddr_reg:x12; val_offset:1719*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1719*FLEN/8, x13, x9, x10)

inst_595:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ee142 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2973 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f4dda and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecee142; op2val:0xbf8a2973;
op3val:0x3edf4dda; valaddr_reg:x12; val_offset:1722*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1722*FLEN/8, x13, x9, x10)

inst_596:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ee142 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2973 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f4dda and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecee142; op2val:0xbf8a2973;
op3val:0x3edf4dda; valaddr_reg:x12; val_offset:1725*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1725*FLEN/8, x13, x9, x10)

inst_597:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ee142 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2973 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f4dda and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecee142; op2val:0xbf8a2973;
op3val:0x3edf4dda; valaddr_reg:x12; val_offset:1728*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1728*FLEN/8, x13, x9, x10)

inst_598:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ee142 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2973 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f4dda and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecee142; op2val:0xbf8a2973;
op3val:0x3edf4dda; valaddr_reg:x12; val_offset:1731*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1731*FLEN/8, x13, x9, x10)

inst_599:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ee142 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2973 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f4dda and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecee142; op2val:0xbf8a2973;
op3val:0x3edf4dda; valaddr_reg:x12; val_offset:1734*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1734*FLEN/8, x13, x9, x10)

inst_600:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2f41d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f7a04 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0315a9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d2f41d9; op2val:0xbf3f7a04;
op3val:0x3d0315a9; valaddr_reg:x12; val_offset:1737*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1737*FLEN/8, x13, x9, x10)

inst_601:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2f41d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f7a04 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0315a9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d2f41d9; op2val:0xbf3f7a04;
op3val:0x3d0315a9; valaddr_reg:x12; val_offset:1740*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1740*FLEN/8, x13, x9, x10)

inst_602:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2f41d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f7a04 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0315a9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d2f41d9; op2val:0xbf3f7a04;
op3val:0x3d0315a9; valaddr_reg:x12; val_offset:1743*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1743*FLEN/8, x13, x9, x10)

inst_603:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2f41d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f7a04 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0315a9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d2f41d9; op2val:0xbf3f7a04;
op3val:0x3d0315a9; valaddr_reg:x12; val_offset:1746*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1746*FLEN/8, x13, x9, x10)

inst_604:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2f41d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f7a04 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0315a9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d2f41d9; op2val:0xbf3f7a04;
op3val:0x3d0315a9; valaddr_reg:x12; val_offset:1749*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1749*FLEN/8, x13, x9, x10)

inst_605:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x486448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5435eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x261d41 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec86448; op2val:0xbfd435eb;
op3val:0x3f261d41; valaddr_reg:x12; val_offset:1752*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1752*FLEN/8, x13, x9, x10)

inst_606:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x486448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5435eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x261d41 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec86448; op2val:0xbfd435eb;
op3val:0x3f261d41; valaddr_reg:x12; val_offset:1755*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1755*FLEN/8, x13, x9, x10)

inst_607:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x486448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5435eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x261d41 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec86448; op2val:0xbfd435eb;
op3val:0x3f261d41; valaddr_reg:x12; val_offset:1758*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1758*FLEN/8, x13, x9, x10)

inst_608:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x486448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5435eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x261d41 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec86448; op2val:0xbfd435eb;
op3val:0x3f261d41; valaddr_reg:x12; val_offset:1761*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1761*FLEN/8, x13, x9, x10)

inst_609:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x486448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5435eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x261d41 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec86448; op2val:0xbfd435eb;
op3val:0x3f261d41; valaddr_reg:x12; val_offset:1764*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1764*FLEN/8, x13, x9, x10)

inst_610:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a2df9 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x160bc0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fc1e7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dda2df9; op2val:0xc1160bc0;
op3val:0x3f7fc1e7; valaddr_reg:x12; val_offset:1767*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1767*FLEN/8, x13, x9, x10)

inst_611:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a2df9 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x160bc0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fc1e7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dda2df9; op2val:0xc1160bc0;
op3val:0x3f7fc1e7; valaddr_reg:x12; val_offset:1770*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1770*FLEN/8, x13, x9, x10)

inst_612:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a2df9 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x160bc0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fc1e7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dda2df9; op2val:0xc1160bc0;
op3val:0x3f7fc1e7; valaddr_reg:x12; val_offset:1773*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1773*FLEN/8, x13, x9, x10)

inst_613:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a2df9 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x160bc0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fc1e7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dda2df9; op2val:0xc1160bc0;
op3val:0x3f7fc1e7; valaddr_reg:x12; val_offset:1776*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1776*FLEN/8, x13, x9, x10)

inst_614:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a2df9 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x160bc0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fc1e7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dda2df9; op2val:0xc1160bc0;
op3val:0x3f7fc1e7; valaddr_reg:x12; val_offset:1779*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1779*FLEN/8, x13, x9, x10)

inst_615:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x645f76 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x79327b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e4de3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f645f76; op2val:0xbef9327b;
op3val:0x3ede4de3; valaddr_reg:x12; val_offset:1782*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1782*FLEN/8, x13, x9, x10)

inst_616:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x645f76 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x79327b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e4de3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f645f76; op2val:0xbef9327b;
op3val:0x3ede4de3; valaddr_reg:x12; val_offset:1785*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1785*FLEN/8, x13, x9, x10)

inst_617:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x645f76 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x79327b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e4de3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f645f76; op2val:0xbef9327b;
op3val:0x3ede4de3; valaddr_reg:x12; val_offset:1788*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1788*FLEN/8, x13, x9, x10)

inst_618:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x645f76 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x79327b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e4de3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f645f76; op2val:0xbef9327b;
op3val:0x3ede4de3; valaddr_reg:x12; val_offset:1791*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1791*FLEN/8, x13, x9, x10)

inst_619:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x645f76 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x79327b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e4de3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f645f76; op2val:0xbef9327b;
op3val:0x3ede4de3; valaddr_reg:x12; val_offset:1794*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1794*FLEN/8, x13, x9, x10)

inst_620:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4508b1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0ee82f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5bfb0d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec508b1; op2val:0xc00ee82f;
op3val:0x3f5bfb0d; valaddr_reg:x12; val_offset:1797*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1797*FLEN/8, x13, x9, x10)

inst_621:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4508b1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0ee82f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5bfb0d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec508b1; op2val:0xc00ee82f;
op3val:0x3f5bfb0d; valaddr_reg:x12; val_offset:1800*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1800*FLEN/8, x13, x9, x10)

inst_622:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4508b1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0ee82f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5bfb0d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec508b1; op2val:0xc00ee82f;
op3val:0x3f5bfb0d; valaddr_reg:x12; val_offset:1803*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1803*FLEN/8, x13, x9, x10)

inst_623:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4508b1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0ee82f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5bfb0d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec508b1; op2val:0xc00ee82f;
op3val:0x3f5bfb0d; valaddr_reg:x12; val_offset:1806*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1806*FLEN/8, x13, x9, x10)

inst_624:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4508b1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0ee82f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5bfb0d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec508b1; op2val:0xc00ee82f;
op3val:0x3f5bfb0d; valaddr_reg:x12; val_offset:1809*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1809*FLEN/8, x13, x9, x10)

inst_625:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3db7e7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1638c5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ea7a8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdb7e7; op2val:0xbe9638c5;
op3val:0x3ddea7a8; valaddr_reg:x12; val_offset:1812*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1812*FLEN/8, x13, x9, x10)

inst_626:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3db7e7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1638c5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ea7a8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdb7e7; op2val:0xbe9638c5;
op3val:0x3ddea7a8; valaddr_reg:x12; val_offset:1815*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1815*FLEN/8, x13, x9, x10)

inst_627:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3db7e7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1638c5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ea7a8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdb7e7; op2val:0xbe9638c5;
op3val:0x3ddea7a8; valaddr_reg:x12; val_offset:1818*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1818*FLEN/8, x13, x9, x10)

inst_628:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3db7e7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1638c5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ea7a8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdb7e7; op2val:0xbe9638c5;
op3val:0x3ddea7a8; valaddr_reg:x12; val_offset:1821*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1821*FLEN/8, x13, x9, x10)

inst_629:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3db7e7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1638c5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ea7a8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdb7e7; op2val:0xbe9638c5;
op3val:0x3ddea7a8; valaddr_reg:x12; val_offset:1824*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1824*FLEN/8, x13, x9, x10)

inst_630:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fc867 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x691944 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x117d2b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1fc867; op2val:0xbf691944;
op3val:0x3f117d2b; valaddr_reg:x12; val_offset:1827*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1827*FLEN/8, x13, x9, x10)

inst_631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fc867 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x691944 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x117d2b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1fc867; op2val:0xbf691944;
op3val:0x3f117d2b; valaddr_reg:x12; val_offset:1830*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1830*FLEN/8, x13, x9, x10)

inst_632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fc867 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x691944 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x117d2b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1fc867; op2val:0xbf691944;
op3val:0x3f117d2b; valaddr_reg:x12; val_offset:1833*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1833*FLEN/8, x13, x9, x10)

inst_633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fc867 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x691944 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x117d2b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1fc867; op2val:0xbf691944;
op3val:0x3f117d2b; valaddr_reg:x12; val_offset:1836*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1836*FLEN/8, x13, x9, x10)

inst_634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fc867 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x691944 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x117d2b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1fc867; op2val:0xbf691944;
op3val:0x3f117d2b; valaddr_reg:x12; val_offset:1839*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1839*FLEN/8, x13, x9, x10)

inst_635:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x460eda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a707f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35609c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f460eda; op2val:0xbf6a707f;
op3val:0x3f35609c; valaddr_reg:x12; val_offset:1842*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1842*FLEN/8, x13, x9, x10)

inst_636:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x460eda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a707f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35609c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f460eda; op2val:0xbf6a707f;
op3val:0x3f35609c; valaddr_reg:x12; val_offset:1845*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1845*FLEN/8, x13, x9, x10)

inst_637:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x460eda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a707f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35609c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f460eda; op2val:0xbf6a707f;
op3val:0x3f35609c; valaddr_reg:x12; val_offset:1848*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1848*FLEN/8, x13, x9, x10)

inst_638:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x460eda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a707f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35609c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f460eda; op2val:0xbf6a707f;
op3val:0x3f35609c; valaddr_reg:x12; val_offset:1851*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1851*FLEN/8, x13, x9, x10)

inst_639:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x460eda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a707f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35609c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f460eda; op2val:0xbf6a707f;
op3val:0x3f35609c; valaddr_reg:x12; val_offset:1854*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1854*FLEN/8, x13, x9, x10)

inst_640:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x61a6d5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x34215a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ec6b3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce1a6d5; op2val:0xc1b4215a;
op3val:0x3f1ec6b3; valaddr_reg:x12; val_offset:1857*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1857*FLEN/8, x13, x9, x10)

inst_641:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x61a6d5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x34215a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ec6b3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce1a6d5; op2val:0xc1b4215a;
op3val:0x3f1ec6b3; valaddr_reg:x12; val_offset:1860*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1860*FLEN/8, x13, x9, x10)

inst_642:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x61a6d5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x34215a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ec6b3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce1a6d5; op2val:0xc1b4215a;
op3val:0x3f1ec6b3; valaddr_reg:x12; val_offset:1863*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1863*FLEN/8, x13, x9, x10)

inst_643:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x61a6d5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x34215a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ec6b3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce1a6d5; op2val:0xc1b4215a;
op3val:0x3f1ec6b3; valaddr_reg:x12; val_offset:1866*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1866*FLEN/8, x13, x9, x10)

inst_644:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x61a6d5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x34215a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ec6b3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce1a6d5; op2val:0xc1b4215a;
op3val:0x3f1ec6b3; valaddr_reg:x12; val_offset:1869*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1869*FLEN/8, x13, x9, x10)

inst_645:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1f2c9c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e0cb1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x30a545 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d1f2c9c; op2val:0xc00e0cb1;
op3val:0x3db0a545; valaddr_reg:x12; val_offset:1872*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1872*FLEN/8, x13, x9, x10)

inst_646:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1f2c9c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e0cb1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x30a545 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d1f2c9c; op2val:0xc00e0cb1;
op3val:0x3db0a545; valaddr_reg:x12; val_offset:1875*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1875*FLEN/8, x13, x9, x10)

inst_647:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1f2c9c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e0cb1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x30a545 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d1f2c9c; op2val:0xc00e0cb1;
op3val:0x3db0a545; valaddr_reg:x12; val_offset:1878*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1878*FLEN/8, x13, x9, x10)

inst_648:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1f2c9c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e0cb1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x30a545 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d1f2c9c; op2val:0xc00e0cb1;
op3val:0x3db0a545; valaddr_reg:x12; val_offset:1881*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1881*FLEN/8, x13, x9, x10)

inst_649:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1f2c9c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e0cb1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x30a545 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d1f2c9c; op2val:0xc00e0cb1;
op3val:0x3db0a545; valaddr_reg:x12; val_offset:1884*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1884*FLEN/8, x13, x9, x10)

inst_650:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ef1fe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a6697 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d7c21 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecef1fe; op2val:0xbfea6697;
op3val:0x3f3d7c21; valaddr_reg:x12; val_offset:1887*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1887*FLEN/8, x13, x9, x10)

inst_651:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ef1fe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a6697 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d7c21 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecef1fe; op2val:0xbfea6697;
op3val:0x3f3d7c21; valaddr_reg:x12; val_offset:1890*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1890*FLEN/8, x13, x9, x10)

inst_652:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ef1fe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a6697 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d7c21 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecef1fe; op2val:0xbfea6697;
op3val:0x3f3d7c21; valaddr_reg:x12; val_offset:1893*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1893*FLEN/8, x13, x9, x10)

inst_653:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ef1fe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a6697 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d7c21 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecef1fe; op2val:0xbfea6697;
op3val:0x3f3d7c21; valaddr_reg:x12; val_offset:1896*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1896*FLEN/8, x13, x9, x10)

inst_654:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ef1fe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a6697 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d7c21 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecef1fe; op2val:0xbfea6697;
op3val:0x3f3d7c21; valaddr_reg:x12; val_offset:1899*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1899*FLEN/8, x13, x9, x10)

inst_655:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bcea6 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x53dd7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00f21f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9bcea6; op2val:0xc1d3dd7a;
op3val:0x3f00f21f; valaddr_reg:x12; val_offset:1902*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1902*FLEN/8, x13, x9, x10)

inst_656:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bcea6 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x53dd7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00f21f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9bcea6; op2val:0xc1d3dd7a;
op3val:0x3f00f21f; valaddr_reg:x12; val_offset:1905*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1905*FLEN/8, x13, x9, x10)

inst_657:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bcea6 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x53dd7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00f21f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9bcea6; op2val:0xc1d3dd7a;
op3val:0x3f00f21f; valaddr_reg:x12; val_offset:1908*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1908*FLEN/8, x13, x9, x10)

inst_658:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bcea6 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x53dd7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00f21f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9bcea6; op2val:0xc1d3dd7a;
op3val:0x3f00f21f; valaddr_reg:x12; val_offset:1911*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1911*FLEN/8, x13, x9, x10)

inst_659:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bcea6 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x53dd7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00f21f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9bcea6; op2val:0xc1d3dd7a;
op3val:0x3f00f21f; valaddr_reg:x12; val_offset:1914*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1914*FLEN/8, x13, x9, x10)

inst_660:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15a255 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1518d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e4c04 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f15a255; op2val:0xbf9518d9;
op3val:0x3f2e4c04; valaddr_reg:x12; val_offset:1917*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1917*FLEN/8, x13, x9, x10)

inst_661:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15a255 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1518d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e4c04 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f15a255; op2val:0xbf9518d9;
op3val:0x3f2e4c04; valaddr_reg:x12; val_offset:1920*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1920*FLEN/8, x13, x9, x10)

inst_662:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15a255 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1518d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e4c04 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f15a255; op2val:0xbf9518d9;
op3val:0x3f2e4c04; valaddr_reg:x12; val_offset:1923*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1923*FLEN/8, x13, x9, x10)

inst_663:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15a255 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1518d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e4c04 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f15a255; op2val:0xbf9518d9;
op3val:0x3f2e4c04; valaddr_reg:x12; val_offset:1926*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1926*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_5)

inst_664:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15a255 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1518d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e4c04 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f15a255; op2val:0xbf9518d9;
op3val:0x3f2e4c04; valaddr_reg:x12; val_offset:1929*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1929*FLEN/8, x13, x9, x10)

inst_665:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x00ce8a and fs2 == 1 and fe2 == 0x84 and fm2 == 0x014bba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x021c5c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c80ce8a; op2val:0xc2014bba;
op3val:0x3f021c5c; valaddr_reg:x12; val_offset:1932*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1932*FLEN/8, x13, x9, x10)

inst_666:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x00ce8a and fs2 == 1 and fe2 == 0x84 and fm2 == 0x014bba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x021c5c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c80ce8a; op2val:0xc2014bba;
op3val:0x3f021c5c; valaddr_reg:x12; val_offset:1935*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1935*FLEN/8, x13, x9, x10)

inst_667:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x00ce8a and fs2 == 1 and fe2 == 0x84 and fm2 == 0x014bba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x021c5c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c80ce8a; op2val:0xc2014bba;
op3val:0x3f021c5c; valaddr_reg:x12; val_offset:1938*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1938*FLEN/8, x13, x9, x10)

inst_668:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x00ce8a and fs2 == 1 and fe2 == 0x84 and fm2 == 0x014bba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x021c5c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c80ce8a; op2val:0xc2014bba;
op3val:0x3f021c5c; valaddr_reg:x12; val_offset:1941*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1941*FLEN/8, x13, x9, x10)

inst_669:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x00ce8a and fs2 == 1 and fe2 == 0x84 and fm2 == 0x014bba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x021c5c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c80ce8a; op2val:0xc2014bba;
op3val:0x3f021c5c; valaddr_reg:x12; val_offset:1944*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1944*FLEN/8, x13, x9, x10)

inst_670:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36ae98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ba55d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05e78a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f36ae98; op2val:0xbf3ba55d;
op3val:0x3f05e78a; valaddr_reg:x12; val_offset:1947*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1947*FLEN/8, x13, x9, x10)

inst_671:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36ae98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ba55d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05e78a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f36ae98; op2val:0xbf3ba55d;
op3val:0x3f05e78a; valaddr_reg:x12; val_offset:1950*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1950*FLEN/8, x13, x9, x10)

inst_672:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36ae98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ba55d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05e78a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f36ae98; op2val:0xbf3ba55d;
op3val:0x3f05e78a; valaddr_reg:x12; val_offset:1953*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1953*FLEN/8, x13, x9, x10)

inst_673:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36ae98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ba55d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05e78a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f36ae98; op2val:0xbf3ba55d;
op3val:0x3f05e78a; valaddr_reg:x12; val_offset:1956*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1956*FLEN/8, x13, x9, x10)

inst_674:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36ae98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ba55d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05e78a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f36ae98; op2val:0xbf3ba55d;
op3val:0x3f05e78a; valaddr_reg:x12; val_offset:1959*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1959*FLEN/8, x13, x9, x10)

inst_675:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60cc14 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5c9515 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x41b24a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60cc14; op2val:0xbedc9515;
op3val:0x3ec1b24a; valaddr_reg:x12; val_offset:1962*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1962*FLEN/8, x13, x9, x10)

inst_676:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60cc14 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5c9515 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x41b24a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60cc14; op2val:0xbedc9515;
op3val:0x3ec1b24a; valaddr_reg:x12; val_offset:1965*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1965*FLEN/8, x13, x9, x10)

inst_677:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60cc14 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5c9515 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x41b24a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60cc14; op2val:0xbedc9515;
op3val:0x3ec1b24a; valaddr_reg:x12; val_offset:1968*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1968*FLEN/8, x13, x9, x10)

inst_678:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60cc14 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5c9515 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x41b24a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60cc14; op2val:0xbedc9515;
op3val:0x3ec1b24a; valaddr_reg:x12; val_offset:1971*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1971*FLEN/8, x13, x9, x10)

inst_679:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60cc14 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5c9515 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x41b24a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60cc14; op2val:0xbedc9515;
op3val:0x3ec1b24a; valaddr_reg:x12; val_offset:1974*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1974*FLEN/8, x13, x9, x10)

inst_680:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e78e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22954b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f731 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e78e7; op2val:0xbfa2954b;
op3val:0x3f34f731; valaddr_reg:x12; val_offset:1977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1977*FLEN/8, x13, x9, x10)

inst_681:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e78e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22954b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f731 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e78e7; op2val:0xbfa2954b;
op3val:0x3f34f731; valaddr_reg:x12; val_offset:1980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1980*FLEN/8, x13, x9, x10)

inst_682:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e78e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22954b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f731 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e78e7; op2val:0xbfa2954b;
op3val:0x3f34f731; valaddr_reg:x12; val_offset:1983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1983*FLEN/8, x13, x9, x10)

inst_683:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e78e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22954b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f731 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e78e7; op2val:0xbfa2954b;
op3val:0x3f34f731; valaddr_reg:x12; val_offset:1986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1986*FLEN/8, x13, x9, x10)

inst_684:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e78e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22954b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f731 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e78e7; op2val:0xbfa2954b;
op3val:0x3f34f731; valaddr_reg:x12; val_offset:1989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1989*FLEN/8, x13, x9, x10)

inst_685:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f8862 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1c67 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3159f3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f8862; op2val:0xbf4b1c67;
op3val:0x3e3159f3; valaddr_reg:x12; val_offset:1992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1992*FLEN/8, x13, x9, x10)

inst_686:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f8862 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1c67 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3159f3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f8862; op2val:0xbf4b1c67;
op3val:0x3e3159f3; valaddr_reg:x12; val_offset:1995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1995*FLEN/8, x13, x9, x10)

inst_687:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f8862 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1c67 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3159f3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f8862; op2val:0xbf4b1c67;
op3val:0x3e3159f3; valaddr_reg:x12; val_offset:1998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1998*FLEN/8, x13, x9, x10)

inst_688:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f8862 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1c67 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3159f3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f8862; op2val:0xbf4b1c67;
op3val:0x3e3159f3; valaddr_reg:x12; val_offset:2001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2001*FLEN/8, x13, x9, x10)

inst_689:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f8862 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1c67 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3159f3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f8862; op2val:0xbf4b1c67;
op3val:0x3e3159f3; valaddr_reg:x12; val_offset:2004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2004*FLEN/8, x13, x9, x10)

inst_690:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c9eb5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x728771 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6f53af and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7c9eb5; op2val:0xbef28771;
op3val:0x3eef53af; valaddr_reg:x12; val_offset:2007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2007*FLEN/8, x13, x9, x10)

inst_691:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c9eb5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x728771 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6f53af and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7c9eb5; op2val:0xbef28771;
op3val:0x3eef53af; valaddr_reg:x12; val_offset:2010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2010*FLEN/8, x13, x9, x10)

inst_692:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c9eb5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x728771 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6f53af and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7c9eb5; op2val:0xbef28771;
op3val:0x3eef53af; valaddr_reg:x12; val_offset:2013*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2013*FLEN/8, x13, x9, x10)

inst_693:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c9eb5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x728771 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6f53af and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7c9eb5; op2val:0xbef28771;
op3val:0x3eef53af; valaddr_reg:x12; val_offset:2016*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2016*FLEN/8, x13, x9, x10)

inst_694:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c9eb5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x728771 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6f53af and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7c9eb5; op2val:0xbef28771;
op3val:0x3eef53af; valaddr_reg:x12; val_offset:2019*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2019*FLEN/8, x13, x9, x10)

inst_695:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39e90d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3697e8 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x049a01 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39e90d; op2val:0xbdb697e8;
op3val:0x3d849a01; valaddr_reg:x12; val_offset:2022*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2022*FLEN/8, x13, x9, x10)

inst_696:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39e90d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3697e8 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x049a01 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39e90d; op2val:0xbdb697e8;
op3val:0x3d849a01; valaddr_reg:x12; val_offset:2025*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2025*FLEN/8, x13, x9, x10)

inst_697:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39e90d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3697e8 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x049a01 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39e90d; op2val:0xbdb697e8;
op3val:0x3d849a01; valaddr_reg:x12; val_offset:2028*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2028*FLEN/8, x13, x9, x10)

inst_698:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39e90d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3697e8 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x049a01 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39e90d; op2val:0xbdb697e8;
op3val:0x3d849a01; valaddr_reg:x12; val_offset:2031*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2031*FLEN/8, x13, x9, x10)

inst_699:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39e90d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3697e8 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x049a01 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39e90d; op2val:0xbdb697e8;
op3val:0x3d849a01; valaddr_reg:x12; val_offset:2034*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2034*FLEN/8, x13, x9, x10)

inst_700:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f53b5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5d5d05 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x411c6a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f53b5; op2val:0xc05d5d05;
op3val:0x3f411c6a; valaddr_reg:x12; val_offset:2037*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2037*FLEN/8, x13, x9, x10)

inst_701:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f53b5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5d5d05 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x411c6a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f53b5; op2val:0xc05d5d05;
op3val:0x3f411c6a; valaddr_reg:x12; val_offset:2040*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2040*FLEN/8, x13, x9, x10)

inst_702:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f53b5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5d5d05 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x411c6a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f53b5; op2val:0xc05d5d05;
op3val:0x3f411c6a; valaddr_reg:x12; val_offset:2043*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2043*FLEN/8, x13, x9, x10)

inst_703:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f53b5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5d5d05 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x411c6a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f53b5; op2val:0xc05d5d05;
op3val:0x3f411c6a; valaddr_reg:x12; val_offset:2046*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2046*FLEN/8, x13, x9, x10)

inst_704:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f53b5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5d5d05 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x411c6a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f53b5; op2val:0xc05d5d05;
op3val:0x3f411c6a; valaddr_reg:x12; val_offset:2049*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2049*FLEN/8, x13, x9, x10)

inst_705:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b78c4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x13bcd8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x586147 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b78c4; op2val:0xbf93bcd8;
op3val:0x3f586147; valaddr_reg:x12; val_offset:2052*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2052*FLEN/8, x13, x9, x10)

inst_706:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b78c4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x13bcd8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x586147 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b78c4; op2val:0xbf93bcd8;
op3val:0x3f586147; valaddr_reg:x12; val_offset:2055*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2055*FLEN/8, x13, x9, x10)

inst_707:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b78c4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x13bcd8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x586147 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b78c4; op2val:0xbf93bcd8;
op3val:0x3f586147; valaddr_reg:x12; val_offset:2058*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2058*FLEN/8, x13, x9, x10)

inst_708:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b78c4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x13bcd8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x586147 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b78c4; op2val:0xbf93bcd8;
op3val:0x3f586147; valaddr_reg:x12; val_offset:2061*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2061*FLEN/8, x13, x9, x10)

inst_709:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b78c4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x13bcd8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x586147 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3b78c4; op2val:0xbf93bcd8;
op3val:0x3f586147; valaddr_reg:x12; val_offset:2064*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2064*FLEN/8, x13, x9, x10)

inst_710:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x37167d and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7d008a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f19d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c37167d; op2val:0xc27d008a;
op3val:0x3f34f19d; valaddr_reg:x12; val_offset:2067*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2067*FLEN/8, x13, x9, x10)

inst_711:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x37167d and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7d008a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f19d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c37167d; op2val:0xc27d008a;
op3val:0x3f34f19d; valaddr_reg:x12; val_offset:2070*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2070*FLEN/8, x13, x9, x10)

inst_712:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x37167d and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7d008a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f19d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c37167d; op2val:0xc27d008a;
op3val:0x3f34f19d; valaddr_reg:x12; val_offset:2073*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2073*FLEN/8, x13, x9, x10)

inst_713:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x37167d and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7d008a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f19d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c37167d; op2val:0xc27d008a;
op3val:0x3f34f19d; valaddr_reg:x12; val_offset:2076*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2076*FLEN/8, x13, x9, x10)

inst_714:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x37167d and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7d008a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f19d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c37167d; op2val:0xc27d008a;
op3val:0x3f34f19d; valaddr_reg:x12; val_offset:2079*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2079*FLEN/8, x13, x9, x10)

inst_715:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x48af4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b90bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067e8e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec8af4c; op2val:0xbfab90bc;
op3val:0x3f067e8e; valaddr_reg:x12; val_offset:2082*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2082*FLEN/8, x13, x9, x10)

inst_716:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x48af4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b90bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067e8e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec8af4c; op2val:0xbfab90bc;
op3val:0x3f067e8e; valaddr_reg:x12; val_offset:2085*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2085*FLEN/8, x13, x9, x10)

inst_717:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x48af4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b90bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067e8e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec8af4c; op2val:0xbfab90bc;
op3val:0x3f067e8e; valaddr_reg:x12; val_offset:2088*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2088*FLEN/8, x13, x9, x10)

inst_718:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x48af4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b90bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067e8e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec8af4c; op2val:0xbfab90bc;
op3val:0x3f067e8e; valaddr_reg:x12; val_offset:2091*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2091*FLEN/8, x13, x9, x10)

inst_719:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x48af4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b90bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067e8e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec8af4c; op2val:0xbfab90bc;
op3val:0x3f067e8e; valaddr_reg:x12; val_offset:2094*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2094*FLEN/8, x13, x9, x10)

inst_720:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35d2bb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ec945 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ad3af and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5d2bb; op2val:0xbf8ec945;
op3val:0x3ecad3af; valaddr_reg:x12; val_offset:2097*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2097*FLEN/8, x13, x9, x10)

inst_721:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35d2bb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ec945 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ad3af and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5d2bb; op2val:0xbf8ec945;
op3val:0x3ecad3af; valaddr_reg:x12; val_offset:2100*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2100*FLEN/8, x13, x9, x10)

inst_722:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35d2bb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ec945 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ad3af and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5d2bb; op2val:0xbf8ec945;
op3val:0x3ecad3af; valaddr_reg:x12; val_offset:2103*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2103*FLEN/8, x13, x9, x10)

inst_723:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35d2bb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ec945 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ad3af and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5d2bb; op2val:0xbf8ec945;
op3val:0x3ecad3af; valaddr_reg:x12; val_offset:2106*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2106*FLEN/8, x13, x9, x10)

inst_724:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35d2bb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ec945 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ad3af and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5d2bb; op2val:0xbf8ec945;
op3val:0x3ecad3af; valaddr_reg:x12; val_offset:2109*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2109*FLEN/8, x13, x9, x10)

inst_725:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x035779 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c00a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61bf05 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e835779; op2val:0xc05c00a7;
op3val:0x3f61bf05; valaddr_reg:x12; val_offset:2112*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2112*FLEN/8, x13, x9, x10)

inst_726:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x035779 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c00a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61bf05 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e835779; op2val:0xc05c00a7;
op3val:0x3f61bf05; valaddr_reg:x12; val_offset:2115*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2115*FLEN/8, x13, x9, x10)

inst_727:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x035779 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c00a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61bf05 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e835779; op2val:0xc05c00a7;
op3val:0x3f61bf05; valaddr_reg:x12; val_offset:2118*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2118*FLEN/8, x13, x9, x10)

inst_728:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x035779 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c00a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61bf05 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e835779; op2val:0xc05c00a7;
op3val:0x3f61bf05; valaddr_reg:x12; val_offset:2121*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2121*FLEN/8, x13, x9, x10)

inst_729:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x035779 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c00a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61bf05 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e835779; op2val:0xc05c00a7;
op3val:0x3f61bf05; valaddr_reg:x12; val_offset:2124*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2124*FLEN/8, x13, x9, x10)

inst_730:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x755a0c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3acb03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3305fe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e755a0c; op2val:0xc03acb03;
op3val:0x3f3305fe; valaddr_reg:x12; val_offset:2127*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2127*FLEN/8, x13, x9, x10)

inst_731:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x755a0c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3acb03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3305fe and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e755a0c; op2val:0xc03acb03;
op3val:0x3f3305fe; valaddr_reg:x12; val_offset:2130*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2130*FLEN/8, x13, x9, x10)

inst_732:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x755a0c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3acb03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3305fe and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e755a0c; op2val:0xc03acb03;
op3val:0x3f3305fe; valaddr_reg:x12; val_offset:2133*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2133*FLEN/8, x13, x9, x10)

inst_733:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x755a0c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3acb03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3305fe and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e755a0c; op2val:0xc03acb03;
op3val:0x3f3305fe; valaddr_reg:x12; val_offset:2136*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2136*FLEN/8, x13, x9, x10)

inst_734:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x755a0c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3acb03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3305fe and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e755a0c; op2val:0xc03acb03;
op3val:0x3f3305fe; valaddr_reg:x12; val_offset:2139*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2139*FLEN/8, x13, x9, x10)

inst_735:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ed95c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x362816 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x29f3ee and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eeed95c; op2val:0xbfb62816;
op3val:0x3f29f3ee; valaddr_reg:x12; val_offset:2142*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2142*FLEN/8, x13, x9, x10)

inst_736:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ed95c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x362816 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x29f3ee and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eeed95c; op2val:0xbfb62816;
op3val:0x3f29f3ee; valaddr_reg:x12; val_offset:2145*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2145*FLEN/8, x13, x9, x10)

inst_737:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ed95c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x362816 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x29f3ee and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eeed95c; op2val:0xbfb62816;
op3val:0x3f29f3ee; valaddr_reg:x12; val_offset:2148*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2148*FLEN/8, x13, x9, x10)

inst_738:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ed95c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x362816 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x29f3ee and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eeed95c; op2val:0xbfb62816;
op3val:0x3f29f3ee; valaddr_reg:x12; val_offset:2151*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2151*FLEN/8, x13, x9, x10)

inst_739:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ed95c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x362816 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x29f3ee and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eeed95c; op2val:0xbfb62816;
op3val:0x3f29f3ee; valaddr_reg:x12; val_offset:2154*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2154*FLEN/8, x13, x9, x10)

inst_740:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x340376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2b283b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70b534 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f340376; op2val:0xbf2b283b;
op3val:0x3ef0b534; valaddr_reg:x12; val_offset:2157*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2157*FLEN/8, x13, x9, x10)

inst_741:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x340376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2b283b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70b534 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f340376; op2val:0xbf2b283b;
op3val:0x3ef0b534; valaddr_reg:x12; val_offset:2160*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2160*FLEN/8, x13, x9, x10)

inst_742:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x340376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2b283b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70b534 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f340376; op2val:0xbf2b283b;
op3val:0x3ef0b534; valaddr_reg:x12; val_offset:2163*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2163*FLEN/8, x13, x9, x10)

inst_743:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x340376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2b283b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70b534 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f340376; op2val:0xbf2b283b;
op3val:0x3ef0b534; valaddr_reg:x12; val_offset:2166*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2166*FLEN/8, x13, x9, x10)

inst_744:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x340376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2b283b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70b534 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f340376; op2val:0xbf2b283b;
op3val:0x3ef0b534; valaddr_reg:x12; val_offset:2169*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2169*FLEN/8, x13, x9, x10)

inst_745:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09213a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18aefc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2392ec and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f09213a; op2val:0xbf98aefc;
op3val:0x3f2392ec; valaddr_reg:x12; val_offset:2172*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2172*FLEN/8, x13, x9, x10)

inst_746:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09213a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18aefc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2392ec and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f09213a; op2val:0xbf98aefc;
op3val:0x3f2392ec; valaddr_reg:x12; val_offset:2175*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2175*FLEN/8, x13, x9, x10)

inst_747:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09213a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18aefc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2392ec and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f09213a; op2val:0xbf98aefc;
op3val:0x3f2392ec; valaddr_reg:x12; val_offset:2178*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2178*FLEN/8, x13, x9, x10)

inst_748:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09213a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18aefc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2392ec and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f09213a; op2val:0xbf98aefc;
op3val:0x3f2392ec; valaddr_reg:x12; val_offset:2181*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2181*FLEN/8, x13, x9, x10)

inst_749:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09213a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18aefc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2392ec and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f09213a; op2val:0xbf98aefc;
op3val:0x3f2392ec; valaddr_reg:x12; val_offset:2184*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2184*FLEN/8, x13, x9, x10)

inst_750:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x028d1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d69f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51820b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e828d1b; op2val:0xbfcd69f1;
op3val:0x3ed1820b; valaddr_reg:x12; val_offset:2187*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2187*FLEN/8, x13, x9, x10)

inst_751:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x028d1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d69f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51820b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e828d1b; op2val:0xbfcd69f1;
op3val:0x3ed1820b; valaddr_reg:x12; val_offset:2190*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2190*FLEN/8, x13, x9, x10)

inst_752:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x028d1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d69f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51820b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e828d1b; op2val:0xbfcd69f1;
op3val:0x3ed1820b; valaddr_reg:x12; val_offset:2193*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2193*FLEN/8, x13, x9, x10)

inst_753:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x028d1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d69f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51820b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e828d1b; op2val:0xbfcd69f1;
op3val:0x3ed1820b; valaddr_reg:x12; val_offset:2196*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2196*FLEN/8, x13, x9, x10)

inst_754:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x028d1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d69f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51820b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e828d1b; op2val:0xbfcd69f1;
op3val:0x3ed1820b; valaddr_reg:x12; val_offset:2199*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2199*FLEN/8, x13, x9, x10)

inst_755:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76ac98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x469d74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f6135 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f76ac98; op2val:0xbf469d74;
op3val:0x3f3f6135; valaddr_reg:x12; val_offset:2202*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2202*FLEN/8, x13, x9, x10)

inst_756:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76ac98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x469d74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f6135 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f76ac98; op2val:0xbf469d74;
op3val:0x3f3f6135; valaddr_reg:x12; val_offset:2205*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2205*FLEN/8, x13, x9, x10)

inst_757:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76ac98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x469d74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f6135 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f76ac98; op2val:0xbf469d74;
op3val:0x3f3f6135; valaddr_reg:x12; val_offset:2208*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2208*FLEN/8, x13, x9, x10)

inst_758:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76ac98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x469d74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f6135 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f76ac98; op2val:0xbf469d74;
op3val:0x3f3f6135; valaddr_reg:x12; val_offset:2211*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2211*FLEN/8, x13, x9, x10)

inst_759:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76ac98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x469d74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f6135 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f76ac98; op2val:0xbf469d74;
op3val:0x3f3f6135; valaddr_reg:x12; val_offset:2214*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2214*FLEN/8, x13, x9, x10)

inst_760:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5ce6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1ced5e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2adba8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b5ce6; op2val:0xbe1ced5e;
op3val:0x3daadba8; valaddr_reg:x12; val_offset:2217*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2217*FLEN/8, x13, x9, x10)

inst_761:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5ce6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1ced5e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2adba8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b5ce6; op2val:0xbe1ced5e;
op3val:0x3daadba8; valaddr_reg:x12; val_offset:2220*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2220*FLEN/8, x13, x9, x10)

inst_762:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5ce6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1ced5e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2adba8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b5ce6; op2val:0xbe1ced5e;
op3val:0x3daadba8; valaddr_reg:x12; val_offset:2223*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2223*FLEN/8, x13, x9, x10)

inst_763:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5ce6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1ced5e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2adba8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b5ce6; op2val:0xbe1ced5e;
op3val:0x3daadba8; valaddr_reg:x12; val_offset:2226*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2226*FLEN/8, x13, x9, x10)

inst_764:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5ce6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1ced5e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2adba8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b5ce6; op2val:0xbe1ced5e;
op3val:0x3daadba8; valaddr_reg:x12; val_offset:2229*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2229*FLEN/8, x13, x9, x10)

inst_765:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x657f69 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x01c30d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68a820 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de57f69; op2val:0xc081c30d;
op3val:0x3ee8a820; valaddr_reg:x12; val_offset:2232*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2232*FLEN/8, x13, x9, x10)

inst_766:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x657f69 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x01c30d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68a820 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de57f69; op2val:0xc081c30d;
op3val:0x3ee8a820; valaddr_reg:x12; val_offset:2235*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2235*FLEN/8, x13, x9, x10)

inst_767:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x657f69 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x01c30d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68a820 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de57f69; op2val:0xc081c30d;
op3val:0x3ee8a820; valaddr_reg:x12; val_offset:2238*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2238*FLEN/8, x13, x9, x10)

inst_768:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x657f69 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x01c30d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68a820 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de57f69; op2val:0xc081c30d;
op3val:0x3ee8a820; valaddr_reg:x12; val_offset:2241*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2241*FLEN/8, x13, x9, x10)

inst_769:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x657f69 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x01c30d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68a820 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de57f69; op2val:0xc081c30d;
op3val:0x3ee8a820; valaddr_reg:x12; val_offset:2244*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2244*FLEN/8, x13, x9, x10)

inst_770:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c45c3 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x664a0e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x62efa7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7c45c3; op2val:0xbe664a0e;
op3val:0x3e62efa7; valaddr_reg:x12; val_offset:2247*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2247*FLEN/8, x13, x9, x10)

inst_771:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c45c3 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x664a0e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x62efa7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7c45c3; op2val:0xbe664a0e;
op3val:0x3e62efa7; valaddr_reg:x12; val_offset:2250*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2250*FLEN/8, x13, x9, x10)

inst_772:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c45c3 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x664a0e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x62efa7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7c45c3; op2val:0xbe664a0e;
op3val:0x3e62efa7; valaddr_reg:x12; val_offset:2253*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2253*FLEN/8, x13, x9, x10)

inst_773:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c45c3 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x664a0e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x62efa7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7c45c3; op2val:0xbe664a0e;
op3val:0x3e62efa7; valaddr_reg:x12; val_offset:2256*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2256*FLEN/8, x13, x9, x10)

inst_774:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c45c3 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x664a0e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x62efa7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7c45c3; op2val:0xbe664a0e;
op3val:0x3e62efa7; valaddr_reg:x12; val_offset:2259*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2259*FLEN/8, x13, x9, x10)

inst_775:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12802f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3dd55d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59457a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f12802f; op2val:0xbf3dd55d;
op3val:0x3ed9457a; valaddr_reg:x12; val_offset:2262*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2262*FLEN/8, x13, x9, x10)

inst_776:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12802f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3dd55d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59457a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f12802f; op2val:0xbf3dd55d;
op3val:0x3ed9457a; valaddr_reg:x12; val_offset:2265*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2265*FLEN/8, x13, x9, x10)

inst_777:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12802f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3dd55d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59457a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f12802f; op2val:0xbf3dd55d;
op3val:0x3ed9457a; valaddr_reg:x12; val_offset:2268*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2268*FLEN/8, x13, x9, x10)

inst_778:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12802f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3dd55d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59457a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f12802f; op2val:0xbf3dd55d;
op3val:0x3ed9457a; valaddr_reg:x12; val_offset:2271*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2271*FLEN/8, x13, x9, x10)

inst_779:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12802f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3dd55d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59457a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f12802f; op2val:0xbf3dd55d;
op3val:0x3ed9457a; valaddr_reg:x12; val_offset:2274*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2274*FLEN/8, x13, x9, x10)

inst_780:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x156945 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x214fe0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3c4ba6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e956945; op2val:0xbfa14fe0;
op3val:0x3ebc4ba6; valaddr_reg:x12; val_offset:2277*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2277*FLEN/8, x13, x9, x10)

inst_781:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x156945 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x214fe0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3c4ba6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e956945; op2val:0xbfa14fe0;
op3val:0x3ebc4ba6; valaddr_reg:x12; val_offset:2280*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2280*FLEN/8, x13, x9, x10)

inst_782:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x156945 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x214fe0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3c4ba6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e956945; op2val:0xbfa14fe0;
op3val:0x3ebc4ba6; valaddr_reg:x12; val_offset:2283*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2283*FLEN/8, x13, x9, x10)

inst_783:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x156945 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x214fe0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3c4ba6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e956945; op2val:0xbfa14fe0;
op3val:0x3ebc4ba6; valaddr_reg:x12; val_offset:2286*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2286*FLEN/8, x13, x9, x10)

inst_784:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x156945 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x214fe0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3c4ba6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e956945; op2val:0xbfa14fe0;
op3val:0x3ebc4ba6; valaddr_reg:x12; val_offset:2289*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2289*FLEN/8, x13, x9, x10)

inst_785:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04a392 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e7bc2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x34ce9a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f04a392; op2val:0xbe2e7bc2;
op3val:0x3db4ce9a; valaddr_reg:x12; val_offset:2292*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2292*FLEN/8, x13, x9, x10)

inst_786:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04a392 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e7bc2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x34ce9a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f04a392; op2val:0xbe2e7bc2;
op3val:0x3db4ce9a; valaddr_reg:x12; val_offset:2295*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2295*FLEN/8, x13, x9, x10)

inst_787:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04a392 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e7bc2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x34ce9a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f04a392; op2val:0xbe2e7bc2;
op3val:0x3db4ce9a; valaddr_reg:x12; val_offset:2298*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2298*FLEN/8, x13, x9, x10)

inst_788:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04a392 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e7bc2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x34ce9a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f04a392; op2val:0xbe2e7bc2;
op3val:0x3db4ce9a; valaddr_reg:x12; val_offset:2301*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2301*FLEN/8, x13, x9, x10)

inst_789:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04a392 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e7bc2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x34ce9a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f04a392; op2val:0xbe2e7bc2;
op3val:0x3db4ce9a; valaddr_reg:x12; val_offset:2304*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2304*FLEN/8, x13, x9, x10)

inst_790:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d51a1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d5645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1baeb0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d51a1; op2val:0xbf7d5645;
op3val:0x3f1baeb0; valaddr_reg:x12; val_offset:2307*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2307*FLEN/8, x13, x9, x10)

inst_791:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d51a1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d5645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1baeb0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d51a1; op2val:0xbf7d5645;
op3val:0x3f1baeb0; valaddr_reg:x12; val_offset:2310*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2310*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_6)

inst_792:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d51a1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d5645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1baeb0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d51a1; op2val:0xbf7d5645;
op3val:0x3f1baeb0; valaddr_reg:x12; val_offset:2313*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2313*FLEN/8, x13, x9, x10)

inst_793:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d51a1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d5645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1baeb0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d51a1; op2val:0xbf7d5645;
op3val:0x3f1baeb0; valaddr_reg:x12; val_offset:2316*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2316*FLEN/8, x13, x9, x10)

inst_794:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d51a1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d5645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1baeb0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d51a1; op2val:0xbf7d5645;
op3val:0x3f1baeb0; valaddr_reg:x12; val_offset:2319*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2319*FLEN/8, x13, x9, x10)

inst_795:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17a729 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2d9ef5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4db443 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e17a729; op2val:0xc0ad9ef5;
op3val:0x3f4db443; valaddr_reg:x12; val_offset:2322*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2322*FLEN/8, x13, x9, x10)

inst_796:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17a729 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2d9ef5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4db443 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e17a729; op2val:0xc0ad9ef5;
op3val:0x3f4db443; valaddr_reg:x12; val_offset:2325*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2325*FLEN/8, x13, x9, x10)

inst_797:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17a729 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2d9ef5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4db443 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e17a729; op2val:0xc0ad9ef5;
op3val:0x3f4db443; valaddr_reg:x12; val_offset:2328*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2328*FLEN/8, x13, x9, x10)

inst_798:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17a729 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2d9ef5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4db443 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e17a729; op2val:0xc0ad9ef5;
op3val:0x3f4db443; valaddr_reg:x12; val_offset:2331*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2331*FLEN/8, x13, x9, x10)

inst_799:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17a729 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2d9ef5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4db443 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e17a729; op2val:0xc0ad9ef5;
op3val:0x3f4db443; valaddr_reg:x12; val_offset:2334*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2334*FLEN/8, x13, x9, x10)

inst_800:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x341bf1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x776568 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2e0e4f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f341bf1; op2val:0xbe776568;
op3val:0x3e2e0e4f; valaddr_reg:x12; val_offset:2337*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2337*FLEN/8, x13, x9, x10)

inst_801:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x341bf1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x776568 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2e0e4f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f341bf1; op2val:0xbe776568;
op3val:0x3e2e0e4f; valaddr_reg:x12; val_offset:2340*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2340*FLEN/8, x13, x9, x10)

inst_802:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x341bf1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x776568 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2e0e4f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f341bf1; op2val:0xbe776568;
op3val:0x3e2e0e4f; valaddr_reg:x12; val_offset:2343*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2343*FLEN/8, x13, x9, x10)

inst_803:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x341bf1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x776568 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2e0e4f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f341bf1; op2val:0xbe776568;
op3val:0x3e2e0e4f; valaddr_reg:x12; val_offset:2346*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2346*FLEN/8, x13, x9, x10)

inst_804:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x341bf1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x776568 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2e0e4f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f341bf1; op2val:0xbe776568;
op3val:0x3e2e0e4f; valaddr_reg:x12; val_offset:2349*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2349*FLEN/8, x13, x9, x10)

inst_805:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f1711 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x338208 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x27a692 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6f1711; op2val:0xbe338208;
op3val:0x3e27a692; valaddr_reg:x12; val_offset:2352*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2352*FLEN/8, x13, x9, x10)

inst_806:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f1711 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x338208 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x27a692 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6f1711; op2val:0xbe338208;
op3val:0x3e27a692; valaddr_reg:x12; val_offset:2355*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2355*FLEN/8, x13, x9, x10)

inst_807:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f1711 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x338208 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x27a692 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6f1711; op2val:0xbe338208;
op3val:0x3e27a692; valaddr_reg:x12; val_offset:2358*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2358*FLEN/8, x13, x9, x10)

inst_808:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f1711 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x338208 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x27a692 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6f1711; op2val:0xbe338208;
op3val:0x3e27a692; valaddr_reg:x12; val_offset:2361*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2361*FLEN/8, x13, x9, x10)

inst_809:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f1711 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x338208 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x27a692 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6f1711; op2val:0xbe338208;
op3val:0x3e27a692; valaddr_reg:x12; val_offset:2364*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2364*FLEN/8, x13, x9, x10)

inst_810:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c5a92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6dbc0c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1132b3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9c5a92; op2val:0xbfedbc0c;
op3val:0x3f1132b3; valaddr_reg:x12; val_offset:2367*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2367*FLEN/8, x13, x9, x10)

inst_811:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c5a92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6dbc0c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1132b3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9c5a92; op2val:0xbfedbc0c;
op3val:0x3f1132b3; valaddr_reg:x12; val_offset:2370*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2370*FLEN/8, x13, x9, x10)

inst_812:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c5a92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6dbc0c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1132b3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9c5a92; op2val:0xbfedbc0c;
op3val:0x3f1132b3; valaddr_reg:x12; val_offset:2373*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2373*FLEN/8, x13, x9, x10)

inst_813:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c5a92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6dbc0c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1132b3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9c5a92; op2val:0xbfedbc0c;
op3val:0x3f1132b3; valaddr_reg:x12; val_offset:2376*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2376*FLEN/8, x13, x9, x10)

inst_814:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c5a92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6dbc0c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1132b3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9c5a92; op2val:0xbfedbc0c;
op3val:0x3f1132b3; valaddr_reg:x12; val_offset:2379*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2379*FLEN/8, x13, x9, x10)

inst_815:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36b10a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1d50d7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x608889 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f36b10a; op2val:0xbe9d50d7;
op3val:0x3e608889; valaddr_reg:x12; val_offset:2382*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2382*FLEN/8, x13, x9, x10)

inst_816:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36b10a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1d50d7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x608889 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f36b10a; op2val:0xbe9d50d7;
op3val:0x3e608889; valaddr_reg:x12; val_offset:2385*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2385*FLEN/8, x13, x9, x10)

inst_817:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36b10a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1d50d7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x608889 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f36b10a; op2val:0xbe9d50d7;
op3val:0x3e608889; valaddr_reg:x12; val_offset:2388*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2388*FLEN/8, x13, x9, x10)

inst_818:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36b10a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1d50d7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x608889 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f36b10a; op2val:0xbe9d50d7;
op3val:0x3e608889; valaddr_reg:x12; val_offset:2391*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2391*FLEN/8, x13, x9, x10)

inst_819:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36b10a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1d50d7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x608889 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f36b10a; op2val:0xbe9d50d7;
op3val:0x3e608889; valaddr_reg:x12; val_offset:2394*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2394*FLEN/8, x13, x9, x10)

inst_820:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x36efb3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x199082 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b790c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db6efb3; op2val:0xc1199082;
op3val:0x3f5b790c; valaddr_reg:x12; val_offset:2397*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2397*FLEN/8, x13, x9, x10)

inst_821:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x36efb3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x199082 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b790c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db6efb3; op2val:0xc1199082;
op3val:0x3f5b790c; valaddr_reg:x12; val_offset:2400*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2400*FLEN/8, x13, x9, x10)

inst_822:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x36efb3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x199082 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b790c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db6efb3; op2val:0xc1199082;
op3val:0x3f5b790c; valaddr_reg:x12; val_offset:2403*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2403*FLEN/8, x13, x9, x10)

inst_823:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x36efb3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x199082 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b790c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db6efb3; op2val:0xc1199082;
op3val:0x3f5b790c; valaddr_reg:x12; val_offset:2406*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2406*FLEN/8, x13, x9, x10)

inst_824:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x36efb3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x199082 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b790c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3db6efb3; op2val:0xc1199082;
op3val:0x3f5b790c; valaddr_reg:x12; val_offset:2409*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2409*FLEN/8, x13, x9, x10)

inst_825:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0586c0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d4ee9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x66dcf9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0586c0; op2val:0xbf5d4ee9;
op3val:0x3ee6dcf9; valaddr_reg:x12; val_offset:2412*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2412*FLEN/8, x13, x9, x10)

inst_826:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0586c0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d4ee9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x66dcf9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0586c0; op2val:0xbf5d4ee9;
op3val:0x3ee6dcf9; valaddr_reg:x12; val_offset:2415*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2415*FLEN/8, x13, x9, x10)

inst_827:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0586c0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d4ee9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x66dcf9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0586c0; op2val:0xbf5d4ee9;
op3val:0x3ee6dcf9; valaddr_reg:x12; val_offset:2418*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2418*FLEN/8, x13, x9, x10)

inst_828:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0586c0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d4ee9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x66dcf9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0586c0; op2val:0xbf5d4ee9;
op3val:0x3ee6dcf9; valaddr_reg:x12; val_offset:2421*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2421*FLEN/8, x13, x9, x10)

inst_829:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0586c0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d4ee9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x66dcf9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0586c0; op2val:0xbf5d4ee9;
op3val:0x3ee6dcf9; valaddr_reg:x12; val_offset:2424*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2424*FLEN/8, x13, x9, x10)

inst_830:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0097ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2a8a69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b54d1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0097ea; op2val:0xbfaa8a69;
op3val:0x3f2b54d1; valaddr_reg:x12; val_offset:2427*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2427*FLEN/8, x13, x9, x10)

inst_831:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0097ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2a8a69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b54d1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0097ea; op2val:0xbfaa8a69;
op3val:0x3f2b54d1; valaddr_reg:x12; val_offset:2430*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2430*FLEN/8, x13, x9, x10)

inst_832:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0097ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2a8a69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b54d1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0097ea; op2val:0xbfaa8a69;
op3val:0x3f2b54d1; valaddr_reg:x12; val_offset:2433*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2433*FLEN/8, x13, x9, x10)

inst_833:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0097ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2a8a69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b54d1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0097ea; op2val:0xbfaa8a69;
op3val:0x3f2b54d1; valaddr_reg:x12; val_offset:2436*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2436*FLEN/8, x13, x9, x10)

inst_834:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0097ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2a8a69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b54d1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0097ea; op2val:0xbfaa8a69;
op3val:0x3f2b54d1; valaddr_reg:x12; val_offset:2439*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2439*FLEN/8, x13, x9, x10)

inst_835:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58b267 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a80b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x540b2c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f58b267; op2val:0xbefa80b6;
op3val:0x3ed40b2c; valaddr_reg:x12; val_offset:2442*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2442*FLEN/8, x13, x9, x10)

inst_836:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58b267 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a80b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x540b2c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f58b267; op2val:0xbefa80b6;
op3val:0x3ed40b2c; valaddr_reg:x12; val_offset:2445*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2445*FLEN/8, x13, x9, x10)

inst_837:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58b267 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a80b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x540b2c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f58b267; op2val:0xbefa80b6;
op3val:0x3ed40b2c; valaddr_reg:x12; val_offset:2448*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2448*FLEN/8, x13, x9, x10)

inst_838:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58b267 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a80b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x540b2c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f58b267; op2val:0xbefa80b6;
op3val:0x3ed40b2c; valaddr_reg:x12; val_offset:2451*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2451*FLEN/8, x13, x9, x10)

inst_839:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58b267 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a80b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x540b2c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f58b267; op2val:0xbefa80b6;
op3val:0x3ed40b2c; valaddr_reg:x12; val_offset:2454*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2454*FLEN/8, x13, x9, x10)

inst_840:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x40b175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e6af5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6e7c12 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e40b175; op2val:0xc09e6af5;
op3val:0x3f6e7c12; valaddr_reg:x12; val_offset:2457*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2457*FLEN/8, x13, x9, x10)

inst_841:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x40b175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e6af5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6e7c12 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e40b175; op2val:0xc09e6af5;
op3val:0x3f6e7c12; valaddr_reg:x12; val_offset:2460*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2460*FLEN/8, x13, x9, x10)

inst_842:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x40b175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e6af5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6e7c12 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e40b175; op2val:0xc09e6af5;
op3val:0x3f6e7c12; valaddr_reg:x12; val_offset:2463*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2463*FLEN/8, x13, x9, x10)

inst_843:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x40b175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e6af5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6e7c12 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e40b175; op2val:0xc09e6af5;
op3val:0x3f6e7c12; valaddr_reg:x12; val_offset:2466*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2466*FLEN/8, x13, x9, x10)

inst_844:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x40b175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e6af5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6e7c12 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e40b175; op2val:0xc09e6af5;
op3val:0x3f6e7c12; valaddr_reg:x12; val_offset:2469*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2469*FLEN/8, x13, x9, x10)

inst_845:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x451d75 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6fec43 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x38bc6b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f451d75; op2val:0xbe6fec43;
op3val:0x3e38bc6b; valaddr_reg:x12; val_offset:2472*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2472*FLEN/8, x13, x9, x10)

inst_846:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x451d75 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6fec43 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x38bc6b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f451d75; op2val:0xbe6fec43;
op3val:0x3e38bc6b; valaddr_reg:x12; val_offset:2475*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2475*FLEN/8, x13, x9, x10)

inst_847:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x451d75 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6fec43 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x38bc6b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f451d75; op2val:0xbe6fec43;
op3val:0x3e38bc6b; valaddr_reg:x12; val_offset:2478*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2478*FLEN/8, x13, x9, x10)

inst_848:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x451d75 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6fec43 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x38bc6b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f451d75; op2val:0xbe6fec43;
op3val:0x3e38bc6b; valaddr_reg:x12; val_offset:2481*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2481*FLEN/8, x13, x9, x10)

inst_849:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x451d75 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6fec43 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x38bc6b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f451d75; op2val:0xbe6fec43;
op3val:0x3e38bc6b; valaddr_reg:x12; val_offset:2484*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2484*FLEN/8, x13, x9, x10)

inst_850:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x553f5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ec439 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c3c6f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e553f5a; op2val:0xbfcec439;
op3val:0x3eac3c6f; valaddr_reg:x12; val_offset:2487*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2487*FLEN/8, x13, x9, x10)

inst_851:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x553f5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ec439 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c3c6f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e553f5a; op2val:0xbfcec439;
op3val:0x3eac3c6f; valaddr_reg:x12; val_offset:2490*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2490*FLEN/8, x13, x9, x10)

inst_852:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x553f5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ec439 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c3c6f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e553f5a; op2val:0xbfcec439;
op3val:0x3eac3c6f; valaddr_reg:x12; val_offset:2493*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2493*FLEN/8, x13, x9, x10)

inst_853:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x553f5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ec439 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c3c6f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e553f5a; op2val:0xbfcec439;
op3val:0x3eac3c6f; valaddr_reg:x12; val_offset:2496*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2496*FLEN/8, x13, x9, x10)

inst_854:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x553f5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ec439 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c3c6f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e553f5a; op2val:0xbfcec439;
op3val:0x3eac3c6f; valaddr_reg:x12; val_offset:2499*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2499*FLEN/8, x13, x9, x10)

inst_855:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x797556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11c107 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e078e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f797556; op2val:0xbe91c107;
op3val:0x3e8e078e; valaddr_reg:x12; val_offset:2502*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2502*FLEN/8, x13, x9, x10)

inst_856:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x797556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11c107 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e078e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f797556; op2val:0xbe91c107;
op3val:0x3e8e078e; valaddr_reg:x12; val_offset:2505*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2505*FLEN/8, x13, x9, x10)

inst_857:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x797556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11c107 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e078e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f797556; op2val:0xbe91c107;
op3val:0x3e8e078e; valaddr_reg:x12; val_offset:2508*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2508*FLEN/8, x13, x9, x10)

inst_858:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x797556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11c107 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e078e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f797556; op2val:0xbe91c107;
op3val:0x3e8e078e; valaddr_reg:x12; val_offset:2511*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2511*FLEN/8, x13, x9, x10)

inst_859:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x797556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11c107 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e078e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f797556; op2val:0xbe91c107;
op3val:0x3e8e078e; valaddr_reg:x12; val_offset:2514*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2514*FLEN/8, x13, x9, x10)

inst_860:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2e9ab7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2008fb and fs3 == 0 and fe3 == 0x75 and fm3 == 0x5a4da6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cae9ab7; op2val:0xbda008fb;
op3val:0x3ada4da6; valaddr_reg:x12; val_offset:2517*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2517*FLEN/8, x13, x9, x10)

inst_861:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2e9ab7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2008fb and fs3 == 0 and fe3 == 0x75 and fm3 == 0x5a4da6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cae9ab7; op2val:0xbda008fb;
op3val:0x3ada4da6; valaddr_reg:x12; val_offset:2520*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2520*FLEN/8, x13, x9, x10)

inst_862:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2e9ab7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2008fb and fs3 == 0 and fe3 == 0x75 and fm3 == 0x5a4da6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cae9ab7; op2val:0xbda008fb;
op3val:0x3ada4da6; valaddr_reg:x12; val_offset:2523*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2523*FLEN/8, x13, x9, x10)

inst_863:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2e9ab7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2008fb and fs3 == 0 and fe3 == 0x75 and fm3 == 0x5a4da6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cae9ab7; op2val:0xbda008fb;
op3val:0x3ada4da6; valaddr_reg:x12; val_offset:2526*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2526*FLEN/8, x13, x9, x10)

inst_864:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2e9ab7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2008fb and fs3 == 0 and fe3 == 0x75 and fm3 == 0x5a4da6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cae9ab7; op2val:0xbda008fb;
op3val:0x3ada4da6; valaddr_reg:x12; val_offset:2529*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2529*FLEN/8, x13, x9, x10)

inst_865:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x18f600 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4bc023 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x737bc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e98f600; op2val:0xc04bc023;
op3val:0x3f737bc0; valaddr_reg:x12; val_offset:2532*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2532*FLEN/8, x13, x9, x10)

inst_866:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x18f600 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4bc023 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x737bc0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e98f600; op2val:0xc04bc023;
op3val:0x3f737bc0; valaddr_reg:x12; val_offset:2535*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2535*FLEN/8, x13, x9, x10)

inst_867:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x18f600 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4bc023 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x737bc0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e98f600; op2val:0xc04bc023;
op3val:0x3f737bc0; valaddr_reg:x12; val_offset:2538*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2538*FLEN/8, x13, x9, x10)

inst_868:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x18f600 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4bc023 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x737bc0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e98f600; op2val:0xc04bc023;
op3val:0x3f737bc0; valaddr_reg:x12; val_offset:2541*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2541*FLEN/8, x13, x9, x10)

inst_869:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x18f600 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4bc023 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x737bc0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e98f600; op2val:0xc04bc023;
op3val:0x3f737bc0; valaddr_reg:x12; val_offset:2544*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2544*FLEN/8, x13, x9, x10)

inst_870:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x21ba54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e3163 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47e067 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e21ba54; op2val:0xc09e3163;
op3val:0x3f47e067; valaddr_reg:x12; val_offset:2547*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2547*FLEN/8, x13, x9, x10)

inst_871:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x21ba54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e3163 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47e067 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e21ba54; op2val:0xc09e3163;
op3val:0x3f47e067; valaddr_reg:x12; val_offset:2550*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2550*FLEN/8, x13, x9, x10)

inst_872:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x21ba54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e3163 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47e067 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e21ba54; op2val:0xc09e3163;
op3val:0x3f47e067; valaddr_reg:x12; val_offset:2553*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2553*FLEN/8, x13, x9, x10)

inst_873:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x21ba54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e3163 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47e067 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e21ba54; op2val:0xc09e3163;
op3val:0x3f47e067; valaddr_reg:x12; val_offset:2556*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2556*FLEN/8, x13, x9, x10)

inst_874:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x21ba54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e3163 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47e067 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e21ba54; op2val:0xc09e3163;
op3val:0x3f47e067; valaddr_reg:x12; val_offset:2559*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2559*FLEN/8, x13, x9, x10)

inst_875:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3561e7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0a094d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x439abb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb561e7; op2val:0xbe0a094d;
op3val:0x3d439abb; valaddr_reg:x12; val_offset:2562*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2562*FLEN/8, x13, x9, x10)

inst_876:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3561e7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0a094d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x439abb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb561e7; op2val:0xbe0a094d;
op3val:0x3d439abb; valaddr_reg:x12; val_offset:2565*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2565*FLEN/8, x13, x9, x10)

inst_877:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3561e7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0a094d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x439abb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb561e7; op2val:0xbe0a094d;
op3val:0x3d439abb; valaddr_reg:x12; val_offset:2568*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2568*FLEN/8, x13, x9, x10)

inst_878:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3561e7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0a094d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x439abb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb561e7; op2val:0xbe0a094d;
op3val:0x3d439abb; valaddr_reg:x12; val_offset:2571*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2571*FLEN/8, x13, x9, x10)

inst_879:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3561e7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0a094d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x439abb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb561e7; op2val:0xbe0a094d;
op3val:0x3d439abb; valaddr_reg:x12; val_offset:2574*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2574*FLEN/8, x13, x9, x10)

inst_880:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x133a9f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x409a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d8928 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e933a9f; op2val:0xc0409a13;
op3val:0x3f5d8928; valaddr_reg:x12; val_offset:2577*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2577*FLEN/8, x13, x9, x10)

inst_881:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x133a9f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x409a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d8928 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e933a9f; op2val:0xc0409a13;
op3val:0x3f5d8928; valaddr_reg:x12; val_offset:2580*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2580*FLEN/8, x13, x9, x10)

inst_882:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x133a9f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x409a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d8928 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e933a9f; op2val:0xc0409a13;
op3val:0x3f5d8928; valaddr_reg:x12; val_offset:2583*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2583*FLEN/8, x13, x9, x10)

inst_883:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x133a9f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x409a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d8928 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e933a9f; op2val:0xc0409a13;
op3val:0x3f5d8928; valaddr_reg:x12; val_offset:2586*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2586*FLEN/8, x13, x9, x10)

inst_884:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x133a9f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x409a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d8928 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e933a9f; op2val:0xc0409a13;
op3val:0x3f5d8928; valaddr_reg:x12; val_offset:2589*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2589*FLEN/8, x13, x9, x10)

inst_885:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x351f2f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d5e89 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27f0c1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f351f2f; op2val:0xbded5e89;
op3val:0x3da7f0c1; valaddr_reg:x12; val_offset:2592*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2592*FLEN/8, x13, x9, x10)

inst_886:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x351f2f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d5e89 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27f0c1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f351f2f; op2val:0xbded5e89;
op3val:0x3da7f0c1; valaddr_reg:x12; val_offset:2595*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2595*FLEN/8, x13, x9, x10)

inst_887:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x351f2f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d5e89 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27f0c1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f351f2f; op2val:0xbded5e89;
op3val:0x3da7f0c1; valaddr_reg:x12; val_offset:2598*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2598*FLEN/8, x13, x9, x10)

inst_888:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x351f2f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d5e89 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27f0c1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f351f2f; op2val:0xbded5e89;
op3val:0x3da7f0c1; valaddr_reg:x12; val_offset:2601*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2601*FLEN/8, x13, x9, x10)

inst_889:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x351f2f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d5e89 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27f0c1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f351f2f; op2val:0xbded5e89;
op3val:0x3da7f0c1; valaddr_reg:x12; val_offset:2604*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2604*FLEN/8, x13, x9, x10)

inst_890:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59ab4b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6a797d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x475ddf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f59ab4b; op2val:0xbeea797d;
op3val:0x3ec75ddf; valaddr_reg:x12; val_offset:2607*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2607*FLEN/8, x13, x9, x10)

inst_891:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59ab4b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6a797d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x475ddf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f59ab4b; op2val:0xbeea797d;
op3val:0x3ec75ddf; valaddr_reg:x12; val_offset:2610*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2610*FLEN/8, x13, x9, x10)

inst_892:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59ab4b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6a797d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x475ddf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f59ab4b; op2val:0xbeea797d;
op3val:0x3ec75ddf; valaddr_reg:x12; val_offset:2613*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2613*FLEN/8, x13, x9, x10)

inst_893:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59ab4b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6a797d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x475ddf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f59ab4b; op2val:0xbeea797d;
op3val:0x3ec75ddf; valaddr_reg:x12; val_offset:2616*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2616*FLEN/8, x13, x9, x10)

inst_894:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59ab4b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6a797d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x475ddf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f59ab4b; op2val:0xbeea797d;
op3val:0x3ec75ddf; valaddr_reg:x12; val_offset:2619*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2619*FLEN/8, x13, x9, x10)

inst_895:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160846 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x37341d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56bcea and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f160846; op2val:0xbfb7341d;
op3val:0x3f56bcea; valaddr_reg:x12; val_offset:2622*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2622*FLEN/8, x13, x9, x10)

inst_896:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160846 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x37341d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56bcea and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f160846; op2val:0xbfb7341d;
op3val:0x3f56bcea; valaddr_reg:x12; val_offset:2625*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2625*FLEN/8, x13, x9, x10)

inst_897:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160846 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x37341d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56bcea and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f160846; op2val:0xbfb7341d;
op3val:0x3f56bcea; valaddr_reg:x12; val_offset:2628*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2628*FLEN/8, x13, x9, x10)

inst_898:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160846 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x37341d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56bcea and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f160846; op2val:0xbfb7341d;
op3val:0x3f56bcea; valaddr_reg:x12; val_offset:2631*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2631*FLEN/8, x13, x9, x10)

inst_899:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160846 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x37341d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56bcea and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f160846; op2val:0xbfb7341d;
op3val:0x3f56bcea; valaddr_reg:x12; val_offset:2634*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2634*FLEN/8, x13, x9, x10)

inst_900:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x415420 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221c32 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x74d910 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec15420; op2val:0xc0221c32;
op3val:0x3f74d910; valaddr_reg:x12; val_offset:2637*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2637*FLEN/8, x13, x9, x10)

inst_901:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x415420 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221c32 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x74d910 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec15420; op2val:0xc0221c32;
op3val:0x3f74d910; valaddr_reg:x12; val_offset:2640*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2640*FLEN/8, x13, x9, x10)

inst_902:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x415420 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221c32 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x74d910 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec15420; op2val:0xc0221c32;
op3val:0x3f74d910; valaddr_reg:x12; val_offset:2643*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2643*FLEN/8, x13, x9, x10)

inst_903:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x415420 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221c32 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x74d910 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec15420; op2val:0xc0221c32;
op3val:0x3f74d910; valaddr_reg:x12; val_offset:2646*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2646*FLEN/8, x13, x9, x10)

inst_904:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x415420 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221c32 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x74d910 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec15420; op2val:0xc0221c32;
op3val:0x3f74d910; valaddr_reg:x12; val_offset:2649*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2649*FLEN/8, x13, x9, x10)

inst_905:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x644c0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3235c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1eeccf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f644c0a; op2val:0xbf3235c1;
op3val:0x3f1eeccf; valaddr_reg:x12; val_offset:2652*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2652*FLEN/8, x13, x9, x10)

inst_906:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x644c0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3235c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1eeccf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f644c0a; op2val:0xbf3235c1;
op3val:0x3f1eeccf; valaddr_reg:x12; val_offset:2655*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2655*FLEN/8, x13, x9, x10)

inst_907:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x644c0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3235c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1eeccf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f644c0a; op2val:0xbf3235c1;
op3val:0x3f1eeccf; valaddr_reg:x12; val_offset:2658*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2658*FLEN/8, x13, x9, x10)

inst_908:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x644c0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3235c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1eeccf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f644c0a; op2val:0xbf3235c1;
op3val:0x3f1eeccf; valaddr_reg:x12; val_offset:2661*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2661*FLEN/8, x13, x9, x10)

inst_909:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x644c0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3235c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1eeccf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f644c0a; op2val:0xbf3235c1;
op3val:0x3f1eeccf; valaddr_reg:x12; val_offset:2664*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2664*FLEN/8, x13, x9, x10)

inst_910:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d9126 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01fdfa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7143aa and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d9126; op2val:0xbf81fdfa;
op3val:0x3f7143aa; valaddr_reg:x12; val_offset:2667*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2667*FLEN/8, x13, x9, x10)

inst_911:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d9126 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01fdfa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7143aa and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d9126; op2val:0xbf81fdfa;
op3val:0x3f7143aa; valaddr_reg:x12; val_offset:2670*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2670*FLEN/8, x13, x9, x10)

inst_912:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d9126 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01fdfa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7143aa and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d9126; op2val:0xbf81fdfa;
op3val:0x3f7143aa; valaddr_reg:x12; val_offset:2673*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2673*FLEN/8, x13, x9, x10)

inst_913:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d9126 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01fdfa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7143aa and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d9126; op2val:0xbf81fdfa;
op3val:0x3f7143aa; valaddr_reg:x12; val_offset:2676*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2676*FLEN/8, x13, x9, x10)

inst_914:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d9126 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01fdfa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7143aa and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d9126; op2val:0xbf81fdfa;
op3val:0x3f7143aa; valaddr_reg:x12; val_offset:2679*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2679*FLEN/8, x13, x9, x10)

inst_915:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x597815 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b4c10 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x03ec52 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed97815; op2val:0xbf1b4c10;
op3val:0x3e83ec52; valaddr_reg:x12; val_offset:2682*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2682*FLEN/8, x13, x9, x10)

inst_916:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x597815 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b4c10 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x03ec52 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed97815; op2val:0xbf1b4c10;
op3val:0x3e83ec52; valaddr_reg:x12; val_offset:2685*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2685*FLEN/8, x13, x9, x10)

inst_917:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x597815 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b4c10 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x03ec52 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed97815; op2val:0xbf1b4c10;
op3val:0x3e83ec52; valaddr_reg:x12; val_offset:2688*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2688*FLEN/8, x13, x9, x10)

inst_918:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x597815 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b4c10 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x03ec52 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed97815; op2val:0xbf1b4c10;
op3val:0x3e83ec52; valaddr_reg:x12; val_offset:2691*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2691*FLEN/8, x13, x9, x10)

inst_919:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x597815 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b4c10 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x03ec52 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed97815; op2val:0xbf1b4c10;
op3val:0x3e83ec52; valaddr_reg:x12; val_offset:2694*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2694*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_7)

inst_920:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x78eb79 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x63ea08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d9c5c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df8eb79; op2val:0xc0e3ea08;
op3val:0x3f5d9c5c; valaddr_reg:x12; val_offset:2697*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2697*FLEN/8, x13, x9, x10)

inst_921:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x78eb79 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x63ea08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d9c5c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df8eb79; op2val:0xc0e3ea08;
op3val:0x3f5d9c5c; valaddr_reg:x12; val_offset:2700*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2700*FLEN/8, x13, x9, x10)

inst_922:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x78eb79 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x63ea08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d9c5c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df8eb79; op2val:0xc0e3ea08;
op3val:0x3f5d9c5c; valaddr_reg:x12; val_offset:2703*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2703*FLEN/8, x13, x9, x10)

inst_923:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x78eb79 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x63ea08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d9c5c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df8eb79; op2val:0xc0e3ea08;
op3val:0x3f5d9c5c; valaddr_reg:x12; val_offset:2706*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2706*FLEN/8, x13, x9, x10)

inst_924:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x78eb79 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x63ea08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d9c5c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df8eb79; op2val:0xc0e3ea08;
op3val:0x3f5d9c5c; valaddr_reg:x12; val_offset:2709*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2709*FLEN/8, x13, x9, x10)

inst_925:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x117e0a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a5fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2f785d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f117e0a; op2val:0xbf9a5fa6;
op3val:0x3f2f785d; valaddr_reg:x12; val_offset:2712*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2712*FLEN/8, x13, x9, x10)

inst_926:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x117e0a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a5fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2f785d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f117e0a; op2val:0xbf9a5fa6;
op3val:0x3f2f785d; valaddr_reg:x12; val_offset:2715*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2715*FLEN/8, x13, x9, x10)

inst_927:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x117e0a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a5fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2f785d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f117e0a; op2val:0xbf9a5fa6;
op3val:0x3f2f785d; valaddr_reg:x12; val_offset:2718*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2718*FLEN/8, x13, x9, x10)

inst_928:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x117e0a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a5fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2f785d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f117e0a; op2val:0xbf9a5fa6;
op3val:0x3f2f785d; valaddr_reg:x12; val_offset:2721*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2721*FLEN/8, x13, x9, x10)

inst_929:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x117e0a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a5fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2f785d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f117e0a; op2val:0xbf9a5fa6;
op3val:0x3f2f785d; valaddr_reg:x12; val_offset:2724*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2724*FLEN/8, x13, x9, x10)

inst_930:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cb046 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x236c63 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02aae6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eccb046; op2val:0xbfa36c63;
op3val:0x3f02aae6; valaddr_reg:x12; val_offset:2727*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2727*FLEN/8, x13, x9, x10)

inst_931:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cb046 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x236c63 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02aae6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eccb046; op2val:0xbfa36c63;
op3val:0x3f02aae6; valaddr_reg:x12; val_offset:2730*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2730*FLEN/8, x13, x9, x10)

inst_932:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cb046 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x236c63 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02aae6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eccb046; op2val:0xbfa36c63;
op3val:0x3f02aae6; valaddr_reg:x12; val_offset:2733*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2733*FLEN/8, x13, x9, x10)

inst_933:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cb046 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x236c63 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02aae6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eccb046; op2val:0xbfa36c63;
op3val:0x3f02aae6; valaddr_reg:x12; val_offset:2736*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2736*FLEN/8, x13, x9, x10)

inst_934:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cb046 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x236c63 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02aae6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eccb046; op2val:0xbfa36c63;
op3val:0x3f02aae6; valaddr_reg:x12; val_offset:2739*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2739*FLEN/8, x13, x9, x10)

inst_935:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bbf90 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x22e931 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20348b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d7bbf90; op2val:0xc122e931;
op3val:0x3f20348b; valaddr_reg:x12; val_offset:2742*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2742*FLEN/8, x13, x9, x10)

inst_936:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bbf90 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x22e931 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20348b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d7bbf90; op2val:0xc122e931;
op3val:0x3f20348b; valaddr_reg:x12; val_offset:2745*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2745*FLEN/8, x13, x9, x10)

inst_937:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bbf90 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x22e931 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20348b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d7bbf90; op2val:0xc122e931;
op3val:0x3f20348b; valaddr_reg:x12; val_offset:2748*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2748*FLEN/8, x13, x9, x10)

inst_938:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bbf90 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x22e931 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20348b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d7bbf90; op2val:0xc122e931;
op3val:0x3f20348b; valaddr_reg:x12; val_offset:2751*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2751*FLEN/8, x13, x9, x10)

inst_939:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bbf90 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x22e931 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20348b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d7bbf90; op2val:0xc122e931;
op3val:0x3f20348b; valaddr_reg:x12; val_offset:2754*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2754*FLEN/8, x13, x9, x10)

inst_940:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71ba49 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x242291 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1afbfb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f71ba49; op2val:0xbea42291;
op3val:0x3e9afbfb; valaddr_reg:x12; val_offset:2757*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2757*FLEN/8, x13, x9, x10)

inst_941:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71ba49 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x242291 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1afbfb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f71ba49; op2val:0xbea42291;
op3val:0x3e9afbfb; valaddr_reg:x12; val_offset:2760*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2760*FLEN/8, x13, x9, x10)

inst_942:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71ba49 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x242291 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1afbfb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f71ba49; op2val:0xbea42291;
op3val:0x3e9afbfb; valaddr_reg:x12; val_offset:2763*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2763*FLEN/8, x13, x9, x10)

inst_943:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71ba49 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x242291 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1afbfb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f71ba49; op2val:0xbea42291;
op3val:0x3e9afbfb; valaddr_reg:x12; val_offset:2766*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2766*FLEN/8, x13, x9, x10)

inst_944:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71ba49 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x242291 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1afbfb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f71ba49; op2val:0xbea42291;
op3val:0x3e9afbfb; valaddr_reg:x12; val_offset:2769*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2769*FLEN/8, x13, x9, x10)

inst_945:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5950e8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5e599a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3cc039 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5950e8; op2val:0xbede599a;
op3val:0x3ebcc039; valaddr_reg:x12; val_offset:2772*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2772*FLEN/8, x13, x9, x10)

inst_946:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5950e8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5e599a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3cc039 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5950e8; op2val:0xbede599a;
op3val:0x3ebcc039; valaddr_reg:x12; val_offset:2775*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2775*FLEN/8, x13, x9, x10)

inst_947:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5950e8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5e599a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3cc039 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5950e8; op2val:0xbede599a;
op3val:0x3ebcc039; valaddr_reg:x12; val_offset:2778*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2778*FLEN/8, x13, x9, x10)

inst_948:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5950e8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5e599a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3cc039 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5950e8; op2val:0xbede599a;
op3val:0x3ebcc039; valaddr_reg:x12; val_offset:2781*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2781*FLEN/8, x13, x9, x10)

inst_949:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5950e8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5e599a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3cc039 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5950e8; op2val:0xbede599a;
op3val:0x3ebcc039; valaddr_reg:x12; val_offset:2784*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2784*FLEN/8, x13, x9, x10)

inst_950:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d0200 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x399fce and fs3 == 0 and fe3 == 0x7b and fm3 == 0x377463 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd0200; op2val:0xbe399fce;
op3val:0x3db77463; valaddr_reg:x12; val_offset:2787*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2787*FLEN/8, x13, x9, x10)

inst_951:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d0200 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x399fce and fs3 == 0 and fe3 == 0x7b and fm3 == 0x377463 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd0200; op2val:0xbe399fce;
op3val:0x3db77463; valaddr_reg:x12; val_offset:2790*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2790*FLEN/8, x13, x9, x10)

inst_952:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d0200 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x399fce and fs3 == 0 and fe3 == 0x7b and fm3 == 0x377463 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd0200; op2val:0xbe399fce;
op3val:0x3db77463; valaddr_reg:x12; val_offset:2793*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2793*FLEN/8, x13, x9, x10)

inst_953:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d0200 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x399fce and fs3 == 0 and fe3 == 0x7b and fm3 == 0x377463 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd0200; op2val:0xbe399fce;
op3val:0x3db77463; valaddr_reg:x12; val_offset:2796*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2796*FLEN/8, x13, x9, x10)

inst_954:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d0200 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x399fce and fs3 == 0 and fe3 == 0x7b and fm3 == 0x377463 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd0200; op2val:0xbe399fce;
op3val:0x3db77463; valaddr_reg:x12; val_offset:2799*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2799*FLEN/8, x13, x9, x10)

inst_955:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x63e558 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a0c5b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x421c4d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee3e558; op2val:0xbf5a0c5b;
op3val:0x3ec21c4d; valaddr_reg:x12; val_offset:2802*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2802*FLEN/8, x13, x9, x10)

inst_956:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x63e558 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a0c5b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x421c4d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee3e558; op2val:0xbf5a0c5b;
op3val:0x3ec21c4d; valaddr_reg:x12; val_offset:2805*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2805*FLEN/8, x13, x9, x10)

inst_957:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x63e558 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a0c5b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x421c4d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee3e558; op2val:0xbf5a0c5b;
op3val:0x3ec21c4d; valaddr_reg:x12; val_offset:2808*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2808*FLEN/8, x13, x9, x10)

inst_958:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x63e558 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a0c5b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x421c4d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee3e558; op2val:0xbf5a0c5b;
op3val:0x3ec21c4d; valaddr_reg:x12; val_offset:2811*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2811*FLEN/8, x13, x9, x10)

inst_959:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x63e558 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a0c5b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x421c4d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee3e558; op2val:0xbf5a0c5b;
op3val:0x3ec21c4d; valaddr_reg:x12; val_offset:2814*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2814*FLEN/8, x13, x9, x10)

inst_960:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9bdc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bc793 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x658ad0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3c9bdc; op2val:0xbf1bc793;
op3val:0x3ee58ad0; valaddr_reg:x12; val_offset:2817*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2817*FLEN/8, x13, x9, x10)

inst_961:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9bdc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bc793 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x658ad0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3c9bdc; op2val:0xbf1bc793;
op3val:0x3ee58ad0; valaddr_reg:x12; val_offset:2820*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2820*FLEN/8, x13, x9, x10)

inst_962:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9bdc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bc793 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x658ad0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3c9bdc; op2val:0xbf1bc793;
op3val:0x3ee58ad0; valaddr_reg:x12; val_offset:2823*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2823*FLEN/8, x13, x9, x10)

inst_963:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9bdc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bc793 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x658ad0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3c9bdc; op2val:0xbf1bc793;
op3val:0x3ee58ad0; valaddr_reg:x12; val_offset:2826*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2826*FLEN/8, x13, x9, x10)

inst_964:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9bdc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bc793 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x658ad0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3c9bdc; op2val:0xbf1bc793;
op3val:0x3ee58ad0; valaddr_reg:x12; val_offset:2829*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2829*FLEN/8, x13, x9, x10)

inst_965:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eed63 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b3a73 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7f6851 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3eed63; op2val:0xbeab3a73;
op3val:0x3e7f6851; valaddr_reg:x12; val_offset:2832*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2832*FLEN/8, x13, x9, x10)

inst_966:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eed63 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b3a73 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7f6851 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3eed63; op2val:0xbeab3a73;
op3val:0x3e7f6851; valaddr_reg:x12; val_offset:2835*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2835*FLEN/8, x13, x9, x10)

inst_967:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eed63 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b3a73 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7f6851 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3eed63; op2val:0xbeab3a73;
op3val:0x3e7f6851; valaddr_reg:x12; val_offset:2838*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2838*FLEN/8, x13, x9, x10)

inst_968:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eed63 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b3a73 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7f6851 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3eed63; op2val:0xbeab3a73;
op3val:0x3e7f6851; valaddr_reg:x12; val_offset:2841*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2841*FLEN/8, x13, x9, x10)

inst_969:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eed63 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b3a73 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7f6851 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3eed63; op2val:0xbeab3a73;
op3val:0x3e7f6851; valaddr_reg:x12; val_offset:2844*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2844*FLEN/8, x13, x9, x10)

inst_970:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x774c56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x658e14 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dc089 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef74c56; op2val:0xbfe58e14;
op3val:0x3f5dc089; valaddr_reg:x12; val_offset:2847*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2847*FLEN/8, x13, x9, x10)

inst_971:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x774c56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x658e14 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dc089 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef74c56; op2val:0xbfe58e14;
op3val:0x3f5dc089; valaddr_reg:x12; val_offset:2850*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2850*FLEN/8, x13, x9, x10)

inst_972:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x774c56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x658e14 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dc089 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef74c56; op2val:0xbfe58e14;
op3val:0x3f5dc089; valaddr_reg:x12; val_offset:2853*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2853*FLEN/8, x13, x9, x10)

inst_973:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x774c56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x658e14 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dc089 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef74c56; op2val:0xbfe58e14;
op3val:0x3f5dc089; valaddr_reg:x12; val_offset:2856*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2856*FLEN/8, x13, x9, x10)

inst_974:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x774c56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x658e14 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dc089 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef74c56; op2val:0xbfe58e14;
op3val:0x3f5dc089; valaddr_reg:x12; val_offset:2859*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2859*FLEN/8, x13, x9, x10)

inst_975:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43fd07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x524206 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20f81c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43fd07; op2val:0xbf524206;
op3val:0x3f20f81c; valaddr_reg:x12; val_offset:2862*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2862*FLEN/8, x13, x9, x10)

inst_976:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43fd07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x524206 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20f81c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43fd07; op2val:0xbf524206;
op3val:0x3f20f81c; valaddr_reg:x12; val_offset:2865*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2865*FLEN/8, x13, x9, x10)

inst_977:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43fd07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x524206 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20f81c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43fd07; op2val:0xbf524206;
op3val:0x3f20f81c; valaddr_reg:x12; val_offset:2868*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2868*FLEN/8, x13, x9, x10)

inst_978:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43fd07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x524206 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20f81c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43fd07; op2val:0xbf524206;
op3val:0x3f20f81c; valaddr_reg:x12; val_offset:2871*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2871*FLEN/8, x13, x9, x10)

inst_979:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43fd07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x524206 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20f81c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43fd07; op2val:0xbf524206;
op3val:0x3f20f81c; valaddr_reg:x12; val_offset:2874*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2874*FLEN/8, x13, x9, x10)

inst_980:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c853 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x47858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x52180f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e86c853; op2val:0xc047858a;
op3val:0x3f52180f; valaddr_reg:x12; val_offset:2877*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2877*FLEN/8, x13, x9, x10)

inst_981:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c853 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x47858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x52180f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e86c853; op2val:0xc047858a;
op3val:0x3f52180f; valaddr_reg:x12; val_offset:2880*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2880*FLEN/8, x13, x9, x10)

inst_982:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c853 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x47858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x52180f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e86c853; op2val:0xc047858a;
op3val:0x3f52180f; valaddr_reg:x12; val_offset:2883*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2883*FLEN/8, x13, x9, x10)

inst_983:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c853 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x47858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x52180f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e86c853; op2val:0xc047858a;
op3val:0x3f52180f; valaddr_reg:x12; val_offset:2886*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2886*FLEN/8, x13, x9, x10)

inst_984:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c853 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x47858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x52180f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e86c853; op2val:0xc047858a;
op3val:0x3f52180f; valaddr_reg:x12; val_offset:2889*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2889*FLEN/8, x13, x9, x10)

inst_985:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x12cad3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a053e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30a209 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e92cad3; op2val:0xbf9a053e;
op3val:0x3eb0a209; valaddr_reg:x12; val_offset:2892*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2892*FLEN/8, x13, x9, x10)

inst_986:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x12cad3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a053e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30a209 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e92cad3; op2val:0xbf9a053e;
op3val:0x3eb0a209; valaddr_reg:x12; val_offset:2895*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2895*FLEN/8, x13, x9, x10)

inst_987:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x12cad3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a053e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30a209 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e92cad3; op2val:0xbf9a053e;
op3val:0x3eb0a209; valaddr_reg:x12; val_offset:2898*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2898*FLEN/8, x13, x9, x10)

inst_988:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x12cad3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a053e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30a209 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e92cad3; op2val:0xbf9a053e;
op3val:0x3eb0a209; valaddr_reg:x12; val_offset:2901*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2901*FLEN/8, x13, x9, x10)

inst_989:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x12cad3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a053e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30a209 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e92cad3; op2val:0xbf9a053e;
op3val:0x3eb0a209; valaddr_reg:x12; val_offset:2904*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2904*FLEN/8, x13, x9, x10)

inst_990:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a2d7d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39d9b8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a0209 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a2d7d; op2val:0xbeb9d9b8;
op3val:0x3eaa0209; valaddr_reg:x12; val_offset:2907*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2907*FLEN/8, x13, x9, x10)

inst_991:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a2d7d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39d9b8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a0209 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a2d7d; op2val:0xbeb9d9b8;
op3val:0x3eaa0209; valaddr_reg:x12; val_offset:2910*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2910*FLEN/8, x13, x9, x10)

inst_992:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a2d7d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39d9b8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a0209 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a2d7d; op2val:0xbeb9d9b8;
op3val:0x3eaa0209; valaddr_reg:x12; val_offset:2913*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2913*FLEN/8, x13, x9, x10)

inst_993:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a2d7d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39d9b8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a0209 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a2d7d; op2val:0xbeb9d9b8;
op3val:0x3eaa0209; valaddr_reg:x12; val_offset:2916*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2916*FLEN/8, x13, x9, x10)

inst_994:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a2d7d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39d9b8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a0209 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a2d7d; op2val:0xbeb9d9b8;
op3val:0x3eaa0209; valaddr_reg:x12; val_offset:2919*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2919*FLEN/8, x13, x9, x10)

inst_995:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a88a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76881b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x600da7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68a88a; op2val:0xbf76881b;
op3val:0x3f600da7; valaddr_reg:x12; val_offset:2922*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2922*FLEN/8, x13, x9, x10)

inst_996:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a88a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76881b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x600da7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68a88a; op2val:0xbf76881b;
op3val:0x3f600da7; valaddr_reg:x12; val_offset:2925*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2925*FLEN/8, x13, x9, x10)

inst_997:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a88a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76881b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x600da7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68a88a; op2val:0xbf76881b;
op3val:0x3f600da7; valaddr_reg:x12; val_offset:2928*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2928*FLEN/8, x13, x9, x10)

inst_998:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a88a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76881b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x600da7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68a88a; op2val:0xbf76881b;
op3val:0x3f600da7; valaddr_reg:x12; val_offset:2931*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2931*FLEN/8, x13, x9, x10)

inst_999:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a88a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76881b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x600da7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f68a88a; op2val:0xbf76881b;
op3val:0x3f600da7; valaddr_reg:x12; val_offset:2934*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2934*FLEN/8, x13, x9, x10)

inst_1000:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe29b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x700969 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42ec16 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecfe29b; op2val:0xbff00969;
op3val:0x3f42ec16; valaddr_reg:x12; val_offset:2937*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2937*FLEN/8, x13, x9, x10)

inst_1001:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe29b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x700969 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42ec16 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecfe29b; op2val:0xbff00969;
op3val:0x3f42ec16; valaddr_reg:x12; val_offset:2940*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2940*FLEN/8, x13, x9, x10)

inst_1002:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe29b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x700969 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42ec16 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecfe29b; op2val:0xbff00969;
op3val:0x3f42ec16; valaddr_reg:x12; val_offset:2943*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2943*FLEN/8, x13, x9, x10)

inst_1003:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe29b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x700969 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42ec16 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecfe29b; op2val:0xbff00969;
op3val:0x3f42ec16; valaddr_reg:x12; val_offset:2946*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2946*FLEN/8, x13, x9, x10)

inst_1004:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe29b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x700969 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42ec16 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecfe29b; op2val:0xbff00969;
op3val:0x3f42ec16; valaddr_reg:x12; val_offset:2949*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2949*FLEN/8, x13, x9, x10)

inst_1005:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7c0de1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07150e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05000d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dfc0de1; op2val:0xc087150e;
op3val:0x3f05000d; valaddr_reg:x12; val_offset:2952*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2952*FLEN/8, x13, x9, x10)

inst_1006:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7c0de1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07150e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05000d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dfc0de1; op2val:0xc087150e;
op3val:0x3f05000d; valaddr_reg:x12; val_offset:2955*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2955*FLEN/8, x13, x9, x10)

inst_1007:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7c0de1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07150e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05000d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dfc0de1; op2val:0xc087150e;
op3val:0x3f05000d; valaddr_reg:x12; val_offset:2958*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2958*FLEN/8, x13, x9, x10)

inst_1008:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7c0de1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07150e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05000d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dfc0de1; op2val:0xc087150e;
op3val:0x3f05000d; valaddr_reg:x12; val_offset:2961*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2961*FLEN/8, x13, x9, x10)

inst_1009:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7c0de1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07150e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05000d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dfc0de1; op2val:0xc087150e;
op3val:0x3f05000d; valaddr_reg:x12; val_offset:2964*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2964*FLEN/8, x13, x9, x10)

inst_1010:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d3d1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19fec2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x506bd9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2d3d1c; op2val:0xbe99fec2;
op3val:0x3e506bd9; valaddr_reg:x12; val_offset:2967*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2967*FLEN/8, x13, x9, x10)

inst_1011:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d3d1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19fec2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x506bd9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2d3d1c; op2val:0xbe99fec2;
op3val:0x3e506bd9; valaddr_reg:x12; val_offset:2970*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2970*FLEN/8, x13, x9, x10)

inst_1012:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d3d1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19fec2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x506bd9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2d3d1c; op2val:0xbe99fec2;
op3val:0x3e506bd9; valaddr_reg:x12; val_offset:2973*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2973*FLEN/8, x13, x9, x10)

inst_1013:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d3d1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19fec2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x506bd9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2d3d1c; op2val:0xbe99fec2;
op3val:0x3e506bd9; valaddr_reg:x12; val_offset:2976*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2976*FLEN/8, x13, x9, x10)

inst_1014:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d3d1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19fec2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x506bd9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2d3d1c; op2val:0xbe99fec2;
op3val:0x3e506bd9; valaddr_reg:x12; val_offset:2979*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2979*FLEN/8, x13, x9, x10)

inst_1015:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78753e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11120c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ccbed and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78753e; op2val:0xbe91120c;
op3val:0x3e8ccbed; valaddr_reg:x12; val_offset:2982*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2982*FLEN/8, x13, x9, x10)

inst_1016:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78753e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11120c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ccbed and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78753e; op2val:0xbe91120c;
op3val:0x3e8ccbed; valaddr_reg:x12; val_offset:2985*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2985*FLEN/8, x13, x9, x10)

inst_1017:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78753e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11120c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ccbed and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78753e; op2val:0xbe91120c;
op3val:0x3e8ccbed; valaddr_reg:x12; val_offset:2988*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2988*FLEN/8, x13, x9, x10)

inst_1018:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78753e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11120c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ccbed and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78753e; op2val:0xbe91120c;
op3val:0x3e8ccbed; valaddr_reg:x12; val_offset:2991*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2991*FLEN/8, x13, x9, x10)

inst_1019:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78753e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11120c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ccbed and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78753e; op2val:0xbe91120c;
op3val:0x3e8ccbed; valaddr_reg:x12; val_offset:2994*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2994*FLEN/8, x13, x9, x10)

inst_1020:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x724364 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65b8bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59651a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f724364; op2val:0xbf65b8bb;
op3val:0x3f59651a; valaddr_reg:x12; val_offset:2997*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2997*FLEN/8, x13, x9, x10)

inst_1021:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x724364 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65b8bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59651a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f724364; op2val:0xbf65b8bb;
op3val:0x3f59651a; valaddr_reg:x12; val_offset:3000*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3000*FLEN/8, x13, x9, x10)

inst_1022:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x724364 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65b8bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59651a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f724364; op2val:0xbf65b8bb;
op3val:0x3f59651a; valaddr_reg:x12; val_offset:3003*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3003*FLEN/8, x13, x9, x10)

inst_1023:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x724364 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65b8bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59651a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f724364; op2val:0xbf65b8bb;
op3val:0x3f59651a; valaddr_reg:x12; val_offset:3006*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3006*FLEN/8, x13, x9, x10)

inst_1024:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x724364 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65b8bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59651a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f724364; op2val:0xbf65b8bb;
op3val:0x3f59651a; valaddr_reg:x12; val_offset:3009*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3009*FLEN/8, x13, x9, x10)

inst_1025:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x44702b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x54c683 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x234537 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d44702b; op2val:0xc0d4c683;
op3val:0x3ea34537; valaddr_reg:x12; val_offset:3012*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3012*FLEN/8, x13, x9, x10)

inst_1026:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x44702b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x54c683 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x234537 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d44702b; op2val:0xc0d4c683;
op3val:0x3ea34537; valaddr_reg:x12; val_offset:3015*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3015*FLEN/8, x13, x9, x10)

inst_1027:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x44702b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x54c683 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x234537 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d44702b; op2val:0xc0d4c683;
op3val:0x3ea34537; valaddr_reg:x12; val_offset:3018*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3018*FLEN/8, x13, x9, x10)

inst_1028:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x44702b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x54c683 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x234537 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d44702b; op2val:0xc0d4c683;
op3val:0x3ea34537; valaddr_reg:x12; val_offset:3021*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3021*FLEN/8, x13, x9, x10)

inst_1029:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x44702b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x54c683 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x234537 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d44702b; op2val:0xc0d4c683;
op3val:0x3ea34537; valaddr_reg:x12; val_offset:3024*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3024*FLEN/8, x13, x9, x10)

inst_1030:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46e3b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x11a165 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6248ba and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f46e3b4; op2val:0xbf91a165;
op3val:0x3f6248ba; valaddr_reg:x12; val_offset:3027*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3027*FLEN/8, x13, x9, x10)

inst_1031:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46e3b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x11a165 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6248ba and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f46e3b4; op2val:0xbf91a165;
op3val:0x3f6248ba; valaddr_reg:x12; val_offset:3030*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3030*FLEN/8, x13, x9, x10)

inst_1032:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46e3b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x11a165 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6248ba and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f46e3b4; op2val:0xbf91a165;
op3val:0x3f6248ba; valaddr_reg:x12; val_offset:3033*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3033*FLEN/8, x13, x9, x10)

inst_1033:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46e3b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x11a165 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6248ba and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f46e3b4; op2val:0xbf91a165;
op3val:0x3f6248ba; valaddr_reg:x12; val_offset:3036*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3036*FLEN/8, x13, x9, x10)

inst_1034:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46e3b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x11a165 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6248ba and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f46e3b4; op2val:0xbf91a165;
op3val:0x3f6248ba; valaddr_reg:x12; val_offset:3039*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3039*FLEN/8, x13, x9, x10)

inst_1035:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5fa990 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x444831 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b7ce5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cdfa990; op2val:0xc1444831;
op3val:0x3eab7ce5; valaddr_reg:x12; val_offset:3042*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3042*FLEN/8, x13, x9, x10)

inst_1036:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5fa990 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x444831 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b7ce5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cdfa990; op2val:0xc1444831;
op3val:0x3eab7ce5; valaddr_reg:x12; val_offset:3045*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3045*FLEN/8, x13, x9, x10)

inst_1037:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5fa990 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x444831 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b7ce5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cdfa990; op2val:0xc1444831;
op3val:0x3eab7ce5; valaddr_reg:x12; val_offset:3048*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3048*FLEN/8, x13, x9, x10)

inst_1038:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5fa990 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x444831 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b7ce5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cdfa990; op2val:0xc1444831;
op3val:0x3eab7ce5; valaddr_reg:x12; val_offset:3051*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3051*FLEN/8, x13, x9, x10)

inst_1039:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5fa990 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x444831 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b7ce5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cdfa990; op2val:0xc1444831;
op3val:0x3eab7ce5; valaddr_reg:x12; val_offset:3054*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3054*FLEN/8, x13, x9, x10)

inst_1040:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37b5a2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x197057 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c3858 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e37b5a2; op2val:0xc0997057;
op3val:0x3f5c3858; valaddr_reg:x12; val_offset:3057*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3057*FLEN/8, x13, x9, x10)

inst_1041:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37b5a2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x197057 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c3858 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e37b5a2; op2val:0xc0997057;
op3val:0x3f5c3858; valaddr_reg:x12; val_offset:3060*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3060*FLEN/8, x13, x9, x10)

inst_1042:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37b5a2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x197057 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c3858 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e37b5a2; op2val:0xc0997057;
op3val:0x3f5c3858; valaddr_reg:x12; val_offset:3063*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3063*FLEN/8, x13, x9, x10)

inst_1043:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37b5a2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x197057 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c3858 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e37b5a2; op2val:0xc0997057;
op3val:0x3f5c3858; valaddr_reg:x12; val_offset:3066*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3066*FLEN/8, x13, x9, x10)

inst_1044:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37b5a2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x197057 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c3858 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e37b5a2; op2val:0xc0997057;
op3val:0x3f5c3858; valaddr_reg:x12; val_offset:3069*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3069*FLEN/8, x13, x9, x10)

inst_1045:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x401a8b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5c47d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x254cb5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec01a8b; op2val:0xbfdc47d2;
op3val:0x3f254cb5; valaddr_reg:x12; val_offset:3072*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3072*FLEN/8, x13, x9, x10)

inst_1046:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x401a8b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5c47d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x254cb5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec01a8b; op2val:0xbfdc47d2;
op3val:0x3f254cb5; valaddr_reg:x12; val_offset:3075*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3075*FLEN/8, x13, x9, x10)

inst_1047:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x401a8b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5c47d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x254cb5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec01a8b; op2val:0xbfdc47d2;
op3val:0x3f254cb5; valaddr_reg:x12; val_offset:3078*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3078*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_8)

inst_1048:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x401a8b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5c47d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x254cb5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec01a8b; op2val:0xbfdc47d2;
op3val:0x3f254cb5; valaddr_reg:x12; val_offset:3081*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3081*FLEN/8, x13, x9, x10)

inst_1049:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x401a8b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5c47d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x254cb5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec01a8b; op2val:0xbfdc47d2;
op3val:0x3f254cb5; valaddr_reg:x12; val_offset:3084*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3084*FLEN/8, x13, x9, x10)

inst_1050:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43d5ce and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5f1f3c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2aaf23 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43d5ce; op2val:0xbf5f1f3c;
op3val:0x3f2aaf23; valaddr_reg:x12; val_offset:3087*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3087*FLEN/8, x13, x9, x10)

inst_1051:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43d5ce and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5f1f3c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2aaf23 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43d5ce; op2val:0xbf5f1f3c;
op3val:0x3f2aaf23; valaddr_reg:x12; val_offset:3090*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3090*FLEN/8, x13, x9, x10)

inst_1052:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43d5ce and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5f1f3c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2aaf23 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43d5ce; op2val:0xbf5f1f3c;
op3val:0x3f2aaf23; valaddr_reg:x12; val_offset:3093*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3093*FLEN/8, x13, x9, x10)

inst_1053:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43d5ce and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5f1f3c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2aaf23 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43d5ce; op2val:0xbf5f1f3c;
op3val:0x3f2aaf23; valaddr_reg:x12; val_offset:3096*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3096*FLEN/8, x13, x9, x10)

inst_1054:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43d5ce and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5f1f3c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2aaf23 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43d5ce; op2val:0xbf5f1f3c;
op3val:0x3f2aaf23; valaddr_reg:x12; val_offset:3099*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3099*FLEN/8, x13, x9, x10)

inst_1055:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c198 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x57d94c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26bd72 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5c198; op2val:0xbfd7d94c;
op3val:0x3f26bd72; valaddr_reg:x12; val_offset:3102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3102*FLEN/8, x13, x9, x10)

inst_1056:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c198 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x57d94c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26bd72 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5c198; op2val:0xbfd7d94c;
op3val:0x3f26bd72; valaddr_reg:x12; val_offset:3105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3105*FLEN/8, x13, x9, x10)

inst_1057:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c198 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x57d94c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26bd72 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5c198; op2val:0xbfd7d94c;
op3val:0x3f26bd72; valaddr_reg:x12; val_offset:3108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3108*FLEN/8, x13, x9, x10)

inst_1058:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c198 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x57d94c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26bd72 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5c198; op2val:0xbfd7d94c;
op3val:0x3f26bd72; valaddr_reg:x12; val_offset:3111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3111*FLEN/8, x13, x9, x10)

inst_1059:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c198 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x57d94c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26bd72 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5c198; op2val:0xbfd7d94c;
op3val:0x3f26bd72; valaddr_reg:x12; val_offset:3114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3114*FLEN/8, x13, x9, x10)

inst_1060:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3f9f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33f467 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d1339 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d3f9f; op2val:0xbfb3f467;
op3val:0x3f5d1339; valaddr_reg:x12; val_offset:3117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3117*FLEN/8, x13, x9, x10)

inst_1061:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3f9f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33f467 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d1339 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d3f9f; op2val:0xbfb3f467;
op3val:0x3f5d1339; valaddr_reg:x12; val_offset:3120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3120*FLEN/8, x13, x9, x10)

inst_1062:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3f9f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33f467 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d1339 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d3f9f; op2val:0xbfb3f467;
op3val:0x3f5d1339; valaddr_reg:x12; val_offset:3123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3123*FLEN/8, x13, x9, x10)

inst_1063:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3f9f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33f467 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d1339 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d3f9f; op2val:0xbfb3f467;
op3val:0x3f5d1339; valaddr_reg:x12; val_offset:3126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3126*FLEN/8, x13, x9, x10)

inst_1064:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3f9f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33f467 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d1339 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d3f9f; op2val:0xbfb3f467;
op3val:0x3f5d1339; valaddr_reg:x12; val_offset:3129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3129*FLEN/8, x13, x9, x10)

inst_1065:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2cf3fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x056c43 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3447cd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2cf3fc; op2val:0xc0056c43;
op3val:0x3eb447cd; valaddr_reg:x12; val_offset:3132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3132*FLEN/8, x13, x9, x10)

inst_1066:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2cf3fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x056c43 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3447cd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2cf3fc; op2val:0xc0056c43;
op3val:0x3eb447cd; valaddr_reg:x12; val_offset:3135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3135*FLEN/8, x13, x9, x10)

inst_1067:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2cf3fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x056c43 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3447cd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2cf3fc; op2val:0xc0056c43;
op3val:0x3eb447cd; valaddr_reg:x12; val_offset:3138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3138*FLEN/8, x13, x9, x10)

inst_1068:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2cf3fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x056c43 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3447cd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2cf3fc; op2val:0xc0056c43;
op3val:0x3eb447cd; valaddr_reg:x12; val_offset:3141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3141*FLEN/8, x13, x9, x10)

inst_1069:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2cf3fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x056c43 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3447cd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2cf3fc; op2val:0xc0056c43;
op3val:0x3eb447cd; valaddr_reg:x12; val_offset:3144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3144*FLEN/8, x13, x9, x10)

inst_1070:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x483051 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x397d80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x110d0e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e483051; op2val:0xc0397d80;
op3val:0x3f110d0e; valaddr_reg:x12; val_offset:3147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3147*FLEN/8, x13, x9, x10)

inst_1071:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x483051 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x397d80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x110d0e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e483051; op2val:0xc0397d80;
op3val:0x3f110d0e; valaddr_reg:x12; val_offset:3150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3150*FLEN/8, x13, x9, x10)

inst_1072:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x483051 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x397d80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x110d0e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e483051; op2val:0xc0397d80;
op3val:0x3f110d0e; valaddr_reg:x12; val_offset:3153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3153*FLEN/8, x13, x9, x10)

inst_1073:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x483051 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x397d80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x110d0e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e483051; op2val:0xc0397d80;
op3val:0x3f110d0e; valaddr_reg:x12; val_offset:3156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3156*FLEN/8, x13, x9, x10)

inst_1074:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x483051 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x397d80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x110d0e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e483051; op2val:0xc0397d80;
op3val:0x3f110d0e; valaddr_reg:x12; val_offset:3159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3159*FLEN/8, x13, x9, x10)

inst_1075:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17fc6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x500e7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x770b64 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e17fc6c; op2val:0xc0500e7c;
op3val:0x3ef70b64; valaddr_reg:x12; val_offset:3162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3162*FLEN/8, x13, x9, x10)

inst_1076:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17fc6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x500e7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x770b64 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e17fc6c; op2val:0xc0500e7c;
op3val:0x3ef70b64; valaddr_reg:x12; val_offset:3165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3165*FLEN/8, x13, x9, x10)

inst_1077:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17fc6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x500e7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x770b64 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e17fc6c; op2val:0xc0500e7c;
op3val:0x3ef70b64; valaddr_reg:x12; val_offset:3168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3168*FLEN/8, x13, x9, x10)

inst_1078:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17fc6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x500e7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x770b64 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e17fc6c; op2val:0xc0500e7c;
op3val:0x3ef70b64; valaddr_reg:x12; val_offset:3171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3171*FLEN/8, x13, x9, x10)

inst_1079:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17fc6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x500e7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x770b64 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e17fc6c; op2val:0xc0500e7c;
op3val:0x3ef70b64; valaddr_reg:x12; val_offset:3174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3174*FLEN/8, x13, x9, x10)

inst_1080:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x509338 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0615f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a7dde and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed09338; op2val:0xbf8615f0;
op3val:0x3eda7dde; valaddr_reg:x12; val_offset:3177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3177*FLEN/8, x13, x9, x10)

inst_1081:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x509338 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0615f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a7dde and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed09338; op2val:0xbf8615f0;
op3val:0x3eda7dde; valaddr_reg:x12; val_offset:3180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3180*FLEN/8, x13, x9, x10)

inst_1082:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x509338 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0615f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a7dde and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed09338; op2val:0xbf8615f0;
op3val:0x3eda7dde; valaddr_reg:x12; val_offset:3183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3183*FLEN/8, x13, x9, x10)

inst_1083:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x509338 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0615f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a7dde and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed09338; op2val:0xbf8615f0;
op3val:0x3eda7dde; valaddr_reg:x12; val_offset:3186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3186*FLEN/8, x13, x9, x10)

inst_1084:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x509338 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0615f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a7dde and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed09338; op2val:0xbf8615f0;
op3val:0x3eda7dde; valaddr_reg:x12; val_offset:3189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3189*FLEN/8, x13, x9, x10)

inst_1085:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0509be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14e3a2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1abfdc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8509be; op2val:0xc014e3a2;
op3val:0x3f1abfdc; valaddr_reg:x12; val_offset:3192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3192*FLEN/8, x13, x9, x10)

inst_1086:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0509be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14e3a2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1abfdc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8509be; op2val:0xc014e3a2;
op3val:0x3f1abfdc; valaddr_reg:x12; val_offset:3195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3195*FLEN/8, x13, x9, x10)

inst_1087:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0509be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14e3a2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1abfdc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8509be; op2val:0xc014e3a2;
op3val:0x3f1abfdc; valaddr_reg:x12; val_offset:3198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3198*FLEN/8, x13, x9, x10)

inst_1088:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0509be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14e3a2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1abfdc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8509be; op2val:0xc014e3a2;
op3val:0x3f1abfdc; valaddr_reg:x12; val_offset:3201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3201*FLEN/8, x13, x9, x10)

inst_1089:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0509be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14e3a2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1abfdc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8509be; op2val:0xc014e3a2;
op3val:0x3f1abfdc; valaddr_reg:x12; val_offset:3204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3204*FLEN/8, x13, x9, x10)

inst_1090:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x672b16 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x090c5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x778275 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f672b16; op2val:0xbf890c5e;
op3val:0x3f778275; valaddr_reg:x12; val_offset:3207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3207*FLEN/8, x13, x9, x10)

inst_1091:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x672b16 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x090c5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x778275 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f672b16; op2val:0xbf890c5e;
op3val:0x3f778275; valaddr_reg:x12; val_offset:3210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3210*FLEN/8, x13, x9, x10)

inst_1092:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x672b16 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x090c5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x778275 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f672b16; op2val:0xbf890c5e;
op3val:0x3f778275; valaddr_reg:x12; val_offset:3213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3213*FLEN/8, x13, x9, x10)

inst_1093:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x672b16 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x090c5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x778275 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f672b16; op2val:0xbf890c5e;
op3val:0x3f778275; valaddr_reg:x12; val_offset:3216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3216*FLEN/8, x13, x9, x10)

inst_1094:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x672b16 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x090c5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x778275 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f672b16; op2val:0xbf890c5e;
op3val:0x3f778275; valaddr_reg:x12; val_offset:3219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3219*FLEN/8, x13, x9, x10)

inst_1095:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c2f05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a26c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75e666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c2f05; op2val:0xbf9a26c2;
op3val:0x3f75e666; valaddr_reg:x12; val_offset:3222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3222*FLEN/8, x13, x9, x10)

inst_1096:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c2f05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a26c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75e666 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c2f05; op2val:0xbf9a26c2;
op3val:0x3f75e666; valaddr_reg:x12; val_offset:3225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3225*FLEN/8, x13, x9, x10)

inst_1097:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c2f05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a26c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75e666 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c2f05; op2val:0xbf9a26c2;
op3val:0x3f75e666; valaddr_reg:x12; val_offset:3228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3228*FLEN/8, x13, x9, x10)

inst_1098:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c2f05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a26c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75e666 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c2f05; op2val:0xbf9a26c2;
op3val:0x3f75e666; valaddr_reg:x12; val_offset:3231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3231*FLEN/8, x13, x9, x10)

inst_1099:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c2f05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a26c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75e666 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c2f05; op2val:0xbf9a26c2;
op3val:0x3f75e666; valaddr_reg:x12; val_offset:3234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3234*FLEN/8, x13, x9, x10)

inst_1100:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62ccfd and fs2 == 1 and fe2 == 0x81 and fm2 == 0x15f8c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ddb4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de2ccfd; op2val:0xc095f8c4;
op3val:0x3f04ddb4; valaddr_reg:x12; val_offset:3237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3237*FLEN/8, x13, x9, x10)

inst_1101:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62ccfd and fs2 == 1 and fe2 == 0x81 and fm2 == 0x15f8c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ddb4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de2ccfd; op2val:0xc095f8c4;
op3val:0x3f04ddb4; valaddr_reg:x12; val_offset:3240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3240*FLEN/8, x13, x9, x10)

inst_1102:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62ccfd and fs2 == 1 and fe2 == 0x81 and fm2 == 0x15f8c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ddb4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de2ccfd; op2val:0xc095f8c4;
op3val:0x3f04ddb4; valaddr_reg:x12; val_offset:3243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3243*FLEN/8, x13, x9, x10)

inst_1103:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62ccfd and fs2 == 1 and fe2 == 0x81 and fm2 == 0x15f8c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ddb4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de2ccfd; op2val:0xc095f8c4;
op3val:0x3f04ddb4; valaddr_reg:x12; val_offset:3246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3246*FLEN/8, x13, x9, x10)

inst_1104:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62ccfd and fs2 == 1 and fe2 == 0x81 and fm2 == 0x15f8c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ddb4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de2ccfd; op2val:0xc095f8c4;
op3val:0x3f04ddb4; valaddr_reg:x12; val_offset:3249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3249*FLEN/8, x13, x9, x10)

inst_1105:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x75677f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0577c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fe330 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e75677f; op2val:0xc08577c7;
op3val:0x3f7fe330; valaddr_reg:x12; val_offset:3252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3252*FLEN/8, x13, x9, x10)

inst_1106:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x75677f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0577c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fe330 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e75677f; op2val:0xc08577c7;
op3val:0x3f7fe330; valaddr_reg:x12; val_offset:3255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3255*FLEN/8, x13, x9, x10)

inst_1107:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x75677f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0577c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fe330 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e75677f; op2val:0xc08577c7;
op3val:0x3f7fe330; valaddr_reg:x12; val_offset:3258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3258*FLEN/8, x13, x9, x10)

inst_1108:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x75677f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0577c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fe330 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e75677f; op2val:0xc08577c7;
op3val:0x3f7fe330; valaddr_reg:x12; val_offset:3261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3261*FLEN/8, x13, x9, x10)

inst_1109:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x75677f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0577c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fe330 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e75677f; op2val:0xc08577c7;
op3val:0x3f7fe330; valaddr_reg:x12; val_offset:3264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3264*FLEN/8, x13, x9, x10)

inst_1110:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a1da and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5508cc and fs3 == 0 and fe3 == 0x7b and fm3 == 0x61bca8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07a1da; op2val:0xbe5508cc;
op3val:0x3de1bca8; valaddr_reg:x12; val_offset:3267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3267*FLEN/8, x13, x9, x10)

inst_1111:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a1da and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5508cc and fs3 == 0 and fe3 == 0x7b and fm3 == 0x61bca8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07a1da; op2val:0xbe5508cc;
op3val:0x3de1bca8; valaddr_reg:x12; val_offset:3270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3270*FLEN/8, x13, x9, x10)

inst_1112:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a1da and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5508cc and fs3 == 0 and fe3 == 0x7b and fm3 == 0x61bca8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07a1da; op2val:0xbe5508cc;
op3val:0x3de1bca8; valaddr_reg:x12; val_offset:3273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3273*FLEN/8, x13, x9, x10)

inst_1113:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a1da and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5508cc and fs3 == 0 and fe3 == 0x7b and fm3 == 0x61bca8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07a1da; op2val:0xbe5508cc;
op3val:0x3de1bca8; valaddr_reg:x12; val_offset:3276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3276*FLEN/8, x13, x9, x10)

inst_1114:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a1da and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5508cc and fs3 == 0 and fe3 == 0x7b and fm3 == 0x61bca8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07a1da; op2val:0xbe5508cc;
op3val:0x3de1bca8; valaddr_reg:x12; val_offset:3279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3279*FLEN/8, x13, x9, x10)

inst_1115:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42d56f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402fa3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x124454 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec2d56f; op2val:0xbfc02fa3;
op3val:0x3f124454; valaddr_reg:x12; val_offset:3282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3282*FLEN/8, x13, x9, x10)

inst_1116:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42d56f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402fa3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x124454 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec2d56f; op2val:0xbfc02fa3;
op3val:0x3f124454; valaddr_reg:x12; val_offset:3285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3285*FLEN/8, x13, x9, x10)

inst_1117:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42d56f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402fa3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x124454 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec2d56f; op2val:0xbfc02fa3;
op3val:0x3f124454; valaddr_reg:x12; val_offset:3288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3288*FLEN/8, x13, x9, x10)

inst_1118:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42d56f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402fa3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x124454 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec2d56f; op2val:0xbfc02fa3;
op3val:0x3f124454; valaddr_reg:x12; val_offset:3291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3291*FLEN/8, x13, x9, x10)

inst_1119:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42d56f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402fa3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x124454 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec2d56f; op2val:0xbfc02fa3;
op3val:0x3f124454; valaddr_reg:x12; val_offset:3294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3294*FLEN/8, x13, x9, x10)

inst_1120:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08d02c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x579e50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6676e2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f08d02c; op2val:0xbfd79e50;
op3val:0x3f6676e2; valaddr_reg:x12; val_offset:3297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3297*FLEN/8, x13, x9, x10)

inst_1121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08d02c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x579e50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6676e2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f08d02c; op2val:0xbfd79e50;
op3val:0x3f6676e2; valaddr_reg:x12; val_offset:3300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3300*FLEN/8, x13, x9, x10)

inst_1122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08d02c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x579e50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6676e2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f08d02c; op2val:0xbfd79e50;
op3val:0x3f6676e2; valaddr_reg:x12; val_offset:3303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3303*FLEN/8, x13, x9, x10)

inst_1123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08d02c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x579e50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6676e2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f08d02c; op2val:0xbfd79e50;
op3val:0x3f6676e2; valaddr_reg:x12; val_offset:3306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3306*FLEN/8, x13, x9, x10)

inst_1124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08d02c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x579e50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6676e2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f08d02c; op2val:0xbfd79e50;
op3val:0x3f6676e2; valaddr_reg:x12; val_offset:3309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3309*FLEN/8, x13, x9, x10)

inst_1125:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x586755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ead60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x574916 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f586755; op2val:0xbf7ead60;
op3val:0x3f574916; valaddr_reg:x12; val_offset:3312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3312*FLEN/8, x13, x9, x10)

inst_1126:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x586755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ead60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x574916 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f586755; op2val:0xbf7ead60;
op3val:0x3f574916; valaddr_reg:x12; val_offset:3315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3315*FLEN/8, x13, x9, x10)

inst_1127:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x586755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ead60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x574916 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f586755; op2val:0xbf7ead60;
op3val:0x3f574916; valaddr_reg:x12; val_offset:3318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3318*FLEN/8, x13, x9, x10)

inst_1128:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x586755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ead60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x574916 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f586755; op2val:0xbf7ead60;
op3val:0x3f574916; valaddr_reg:x12; val_offset:3321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3321*FLEN/8, x13, x9, x10)

inst_1129:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x586755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ead60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x574916 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f586755; op2val:0xbf7ead60;
op3val:0x3f574916; valaddr_reg:x12; val_offset:3324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3324*FLEN/8, x13, x9, x10)

inst_1130:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2017fa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7b7cca and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d458d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2017fa; op2val:0xbf7b7cca;
op3val:0x3f1d458d; valaddr_reg:x12; val_offset:3327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3327*FLEN/8, x13, x9, x10)

inst_1131:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2017fa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7b7cca and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d458d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2017fa; op2val:0xbf7b7cca;
op3val:0x3f1d458d; valaddr_reg:x12; val_offset:3330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3330*FLEN/8, x13, x9, x10)

inst_1132:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2017fa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7b7cca and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d458d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2017fa; op2val:0xbf7b7cca;
op3val:0x3f1d458d; valaddr_reg:x12; val_offset:3333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3333*FLEN/8, x13, x9, x10)

inst_1133:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2017fa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7b7cca and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d458d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2017fa; op2val:0xbf7b7cca;
op3val:0x3f1d458d; valaddr_reg:x12; val_offset:3336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3336*FLEN/8, x13, x9, x10)

inst_1134:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2017fa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7b7cca and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d458d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2017fa; op2val:0xbf7b7cca;
op3val:0x3f1d458d; valaddr_reg:x12; val_offset:3339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3339*FLEN/8, x13, x9, x10)

inst_1135:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x750ed1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62c031 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x590f0f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df50ed1; op2val:0xc0e2c031;
op3val:0x3f590f0f; valaddr_reg:x12; val_offset:3342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3342*FLEN/8, x13, x9, x10)

inst_1136:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x750ed1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62c031 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x590f0f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df50ed1; op2val:0xc0e2c031;
op3val:0x3f590f0f; valaddr_reg:x12; val_offset:3345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3345*FLEN/8, x13, x9, x10)

inst_1137:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x750ed1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62c031 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x590f0f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df50ed1; op2val:0xc0e2c031;
op3val:0x3f590f0f; valaddr_reg:x12; val_offset:3348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3348*FLEN/8, x13, x9, x10)

inst_1138:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x750ed1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62c031 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x590f0f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df50ed1; op2val:0xc0e2c031;
op3val:0x3f590f0f; valaddr_reg:x12; val_offset:3351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3351*FLEN/8, x13, x9, x10)

inst_1139:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x750ed1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62c031 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x590f0f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df50ed1; op2val:0xc0e2c031;
op3val:0x3f590f0f; valaddr_reg:x12; val_offset:3354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3354*FLEN/8, x13, x9, x10)

inst_1140:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ef575 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77fb3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38fa3d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ef575; op2val:0xbf77fb3e;
op3val:0x3f38fa3d; valaddr_reg:x12; val_offset:3357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3357*FLEN/8, x13, x9, x10)

inst_1141:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ef575 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77fb3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38fa3d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ef575; op2val:0xbf77fb3e;
op3val:0x3f38fa3d; valaddr_reg:x12; val_offset:3360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3360*FLEN/8, x13, x9, x10)

inst_1142:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ef575 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77fb3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38fa3d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ef575; op2val:0xbf77fb3e;
op3val:0x3f38fa3d; valaddr_reg:x12; val_offset:3363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3363*FLEN/8, x13, x9, x10)

inst_1143:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ef575 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77fb3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38fa3d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ef575; op2val:0xbf77fb3e;
op3val:0x3f38fa3d; valaddr_reg:x12; val_offset:3366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3366*FLEN/8, x13, x9, x10)

inst_1144:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ef575 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77fb3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38fa3d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ef575; op2val:0xbf77fb3e;
op3val:0x3f38fa3d; valaddr_reg:x12; val_offset:3369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3369*FLEN/8, x13, x9, x10)

inst_1145:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a57a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x59ad71 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3683b2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f56a57a; op2val:0xbf59ad71;
op3val:0x3f3683b2; valaddr_reg:x12; val_offset:3372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3372*FLEN/8, x13, x9, x10)

inst_1146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a57a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x59ad71 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3683b2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f56a57a; op2val:0xbf59ad71;
op3val:0x3f3683b2; valaddr_reg:x12; val_offset:3375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3375*FLEN/8, x13, x9, x10)

inst_1147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a57a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x59ad71 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3683b2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f56a57a; op2val:0xbf59ad71;
op3val:0x3f3683b2; valaddr_reg:x12; val_offset:3378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3378*FLEN/8, x13, x9, x10)

inst_1148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a57a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x59ad71 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3683b2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f56a57a; op2val:0xbf59ad71;
op3val:0x3f3683b2; valaddr_reg:x12; val_offset:3381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3381*FLEN/8, x13, x9, x10)

inst_1149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a57a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x59ad71 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3683b2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f56a57a; op2val:0xbf59ad71;
op3val:0x3f3683b2; valaddr_reg:x12; val_offset:3384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3384*FLEN/8, x13, x9, x10)

inst_1150:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43cc0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d5eaa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04994b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43cc0b; op2val:0xbf2d5eaa;
op3val:0x3f04994b; valaddr_reg:x12; val_offset:3387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3387*FLEN/8, x13, x9, x10)

inst_1151:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43cc0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d5eaa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04994b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43cc0b; op2val:0xbf2d5eaa;
op3val:0x3f04994b; valaddr_reg:x12; val_offset:3390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3390*FLEN/8, x13, x9, x10)

inst_1152:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43cc0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d5eaa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04994b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43cc0b; op2val:0xbf2d5eaa;
op3val:0x3f04994b; valaddr_reg:x12; val_offset:3393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3393*FLEN/8, x13, x9, x10)

inst_1153:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43cc0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d5eaa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04994b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43cc0b; op2val:0xbf2d5eaa;
op3val:0x3f04994b; valaddr_reg:x12; val_offset:3396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3396*FLEN/8, x13, x9, x10)

inst_1154:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43cc0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d5eaa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04994b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43cc0b; op2val:0xbf2d5eaa;
op3val:0x3f04994b; valaddr_reg:x12; val_offset:3399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3399*FLEN/8, x13, x9, x10)

inst_1155:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1fb596 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1a9558 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77c896; op2val:0xbd9fb596;
op3val:0x3d9a9558; valaddr_reg:x12; val_offset:3402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3402*FLEN/8, x13, x9, x10)

inst_1156:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1fb596 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1a9558 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77c896; op2val:0xbd9fb596;
op3val:0x3d9a9558; valaddr_reg:x12; val_offset:3405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3405*FLEN/8, x13, x9, x10)

inst_1157:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1fb596 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1a9558 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77c896; op2val:0xbd9fb596;
op3val:0x3d9a9558; valaddr_reg:x12; val_offset:3408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3408*FLEN/8, x13, x9, x10)

inst_1158:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1fb596 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1a9558 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77c896; op2val:0xbd9fb596;
op3val:0x3d9a9558; valaddr_reg:x12; val_offset:3411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3411*FLEN/8, x13, x9, x10)

inst_1159:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1fb596 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1a9558 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77c896; op2val:0xbd9fb596;
op3val:0x3d9a9558; valaddr_reg:x12; val_offset:3414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3414*FLEN/8, x13, x9, x10)

inst_1160:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x218b4f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x49685d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7e3079 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f218b4f; op2val:0xbdc9685d;
op3val:0x3d7e3079; valaddr_reg:x12; val_offset:3417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3417*FLEN/8, x13, x9, x10)

inst_1161:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x218b4f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x49685d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7e3079 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f218b4f; op2val:0xbdc9685d;
op3val:0x3d7e3079; valaddr_reg:x12; val_offset:3420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3420*FLEN/8, x13, x9, x10)

inst_1162:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x218b4f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x49685d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7e3079 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f218b4f; op2val:0xbdc9685d;
op3val:0x3d7e3079; valaddr_reg:x12; val_offset:3423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3423*FLEN/8, x13, x9, x10)

inst_1163:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x218b4f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x49685d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7e3079 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f218b4f; op2val:0xbdc9685d;
op3val:0x3d7e3079; valaddr_reg:x12; val_offset:3426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3426*FLEN/8, x13, x9, x10)

inst_1164:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x218b4f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x49685d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7e3079 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f218b4f; op2val:0xbdc9685d;
op3val:0x3d7e3079; valaddr_reg:x12; val_offset:3429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3429*FLEN/8, x13, x9, x10)

inst_1165:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe3ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x05b292 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2701e2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9fe3ea; op2val:0xbf85b292;
op3val:0x3ea701e2; valaddr_reg:x12; val_offset:3432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3432*FLEN/8, x13, x9, x10)

inst_1166:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe3ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x05b292 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2701e2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9fe3ea; op2val:0xbf85b292;
op3val:0x3ea701e2; valaddr_reg:x12; val_offset:3435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3435*FLEN/8, x13, x9, x10)

inst_1167:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe3ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x05b292 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2701e2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9fe3ea; op2val:0xbf85b292;
op3val:0x3ea701e2; valaddr_reg:x12; val_offset:3438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3438*FLEN/8, x13, x9, x10)

inst_1168:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe3ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x05b292 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2701e2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9fe3ea; op2val:0xbf85b292;
op3val:0x3ea701e2; valaddr_reg:x12; val_offset:3441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3441*FLEN/8, x13, x9, x10)

inst_1169:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe3ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x05b292 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2701e2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9fe3ea; op2val:0xbf85b292;
op3val:0x3ea701e2; valaddr_reg:x12; val_offset:3444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3444*FLEN/8, x13, x9, x10)

inst_1170:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x073c96 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x53a845 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f9fa9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f073c96; op2val:0xbdd3a845;
op3val:0x3d5f9fa9; valaddr_reg:x12; val_offset:3447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3447*FLEN/8, x13, x9, x10)

inst_1171:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x073c96 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x53a845 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f9fa9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f073c96; op2val:0xbdd3a845;
op3val:0x3d5f9fa9; valaddr_reg:x12; val_offset:3450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3450*FLEN/8, x13, x9, x10)

inst_1172:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x073c96 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x53a845 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f9fa9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f073c96; op2val:0xbdd3a845;
op3val:0x3d5f9fa9; valaddr_reg:x12; val_offset:3453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3453*FLEN/8, x13, x9, x10)

inst_1173:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x073c96 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x53a845 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f9fa9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f073c96; op2val:0xbdd3a845;
op3val:0x3d5f9fa9; valaddr_reg:x12; val_offset:3456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3456*FLEN/8, x13, x9, x10)

inst_1174:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x073c96 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x53a845 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f9fa9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f073c96; op2val:0xbdd3a845;
op3val:0x3d5f9fa9; valaddr_reg:x12; val_offset:3459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3459*FLEN/8, x13, x9, x10)

inst_1175:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61d06f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4060e2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29b1c9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61d06f; op2val:0xbec060e2;
op3val:0x3ea9b1c9; valaddr_reg:x12; val_offset:3462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3462*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_9)

inst_1176:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61d06f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4060e2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29b1c9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61d06f; op2val:0xbec060e2;
op3val:0x3ea9b1c9; valaddr_reg:x12; val_offset:3465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3465*FLEN/8, x13, x9, x10)

inst_1177:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61d06f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4060e2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29b1c9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61d06f; op2val:0xbec060e2;
op3val:0x3ea9b1c9; valaddr_reg:x12; val_offset:3468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3468*FLEN/8, x13, x9, x10)

inst_1178:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61d06f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4060e2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29b1c9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61d06f; op2val:0xbec060e2;
op3val:0x3ea9b1c9; valaddr_reg:x12; val_offset:3471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3471*FLEN/8, x13, x9, x10)

inst_1179:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61d06f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4060e2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29b1c9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61d06f; op2val:0xbec060e2;
op3val:0x3ea9b1c9; valaddr_reg:x12; val_offset:3474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3474*FLEN/8, x13, x9, x10)

inst_1180:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x357a6d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b1dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x26ac78 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f357a6d; op2val:0xbeeb1dbe;
op3val:0x3ea6ac78; valaddr_reg:x12; val_offset:3477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3477*FLEN/8, x13, x9, x10)

inst_1181:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x357a6d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b1dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x26ac78 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f357a6d; op2val:0xbeeb1dbe;
op3val:0x3ea6ac78; valaddr_reg:x12; val_offset:3480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3480*FLEN/8, x13, x9, x10)

inst_1182:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x357a6d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b1dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x26ac78 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f357a6d; op2val:0xbeeb1dbe;
op3val:0x3ea6ac78; valaddr_reg:x12; val_offset:3483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3483*FLEN/8, x13, x9, x10)

inst_1183:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x357a6d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b1dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x26ac78 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f357a6d; op2val:0xbeeb1dbe;
op3val:0x3ea6ac78; valaddr_reg:x12; val_offset:3486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3486*FLEN/8, x13, x9, x10)

inst_1184:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x357a6d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b1dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x26ac78 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f357a6d; op2val:0xbeeb1dbe;
op3val:0x3ea6ac78; valaddr_reg:x12; val_offset:3489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3489*FLEN/8, x13, x9, x10)

inst_1185:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9973 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45d4da and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5636a6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a9973; op2val:0xc045d4da;
op3val:0x3f5636a6; valaddr_reg:x12; val_offset:3492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3492*FLEN/8, x13, x9, x10)

inst_1186:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9973 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45d4da and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5636a6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a9973; op2val:0xc045d4da;
op3val:0x3f5636a6; valaddr_reg:x12; val_offset:3495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3495*FLEN/8, x13, x9, x10)

inst_1187:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9973 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45d4da and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5636a6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a9973; op2val:0xc045d4da;
op3val:0x3f5636a6; valaddr_reg:x12; val_offset:3498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3498*FLEN/8, x13, x9, x10)

inst_1188:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9973 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45d4da and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5636a6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a9973; op2val:0xc045d4da;
op3val:0x3f5636a6; valaddr_reg:x12; val_offset:3501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3501*FLEN/8, x13, x9, x10)

inst_1189:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9973 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45d4da and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5636a6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8a9973; op2val:0xc045d4da;
op3val:0x3f5636a6; valaddr_reg:x12; val_offset:3504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3504*FLEN/8, x13, x9, x10)

inst_1190:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c89cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1c35f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x799e2a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c89cb; op2val:0xbf9c35f6;
op3val:0x3f799e2a; valaddr_reg:x12; val_offset:3507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3507*FLEN/8, x13, x9, x10)

inst_1191:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c89cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1c35f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x799e2a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c89cb; op2val:0xbf9c35f6;
op3val:0x3f799e2a; valaddr_reg:x12; val_offset:3510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3510*FLEN/8, x13, x9, x10)

inst_1192:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c89cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1c35f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x799e2a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c89cb; op2val:0xbf9c35f6;
op3val:0x3f799e2a; valaddr_reg:x12; val_offset:3513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3513*FLEN/8, x13, x9, x10)

inst_1193:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c89cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1c35f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x799e2a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c89cb; op2val:0xbf9c35f6;
op3val:0x3f799e2a; valaddr_reg:x12; val_offset:3516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3516*FLEN/8, x13, x9, x10)

inst_1194:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c89cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1c35f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x799e2a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c89cb; op2val:0xbf9c35f6;
op3val:0x3f799e2a; valaddr_reg:x12; val_offset:3519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3519*FLEN/8, x13, x9, x10)

inst_1195:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ffc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1953eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6bfadd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f44ffc1; op2val:0xbf9953eb;
op3val:0x3f6bfadd; valaddr_reg:x12; val_offset:3522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3522*FLEN/8, x13, x9, x10)

inst_1196:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ffc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1953eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6bfadd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f44ffc1; op2val:0xbf9953eb;
op3val:0x3f6bfadd; valaddr_reg:x12; val_offset:3525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3525*FLEN/8, x13, x9, x10)

inst_1197:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ffc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1953eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6bfadd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f44ffc1; op2val:0xbf9953eb;
op3val:0x3f6bfadd; valaddr_reg:x12; val_offset:3528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3528*FLEN/8, x13, x9, x10)

inst_1198:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ffc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1953eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6bfadd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f44ffc1; op2val:0xbf9953eb;
op3val:0x3f6bfadd; valaddr_reg:x12; val_offset:3531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3531*FLEN/8, x13, x9, x10)

inst_1199:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ffc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1953eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6bfadd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f44ffc1; op2val:0xbf9953eb;
op3val:0x3f6bfadd; valaddr_reg:x12; val_offset:3534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3534*FLEN/8, x13, x9, x10)

inst_1200:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19536d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x349615 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x585119 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f19536d; op2val:0xbd349615;
op3val:0x3cd85119; valaddr_reg:x12; val_offset:3537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3537*FLEN/8, x13, x9, x10)

inst_1201:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19536d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x349615 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x585119 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f19536d; op2val:0xbd349615;
op3val:0x3cd85119; valaddr_reg:x12; val_offset:3540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3540*FLEN/8, x13, x9, x10)

inst_1202:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19536d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x349615 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x585119 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f19536d; op2val:0xbd349615;
op3val:0x3cd85119; valaddr_reg:x12; val_offset:3543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3543*FLEN/8, x13, x9, x10)

inst_1203:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19536d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x349615 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x585119 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f19536d; op2val:0xbd349615;
op3val:0x3cd85119; valaddr_reg:x12; val_offset:3546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3546*FLEN/8, x13, x9, x10)

inst_1204:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19536d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x349615 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x585119 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f19536d; op2val:0xbd349615;
op3val:0x3cd85119; valaddr_reg:x12; val_offset:3549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3549*FLEN/8, x13, x9, x10)

inst_1205:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c04e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a8d8a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302b4c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22c04e; op2val:0xbf8a8d8a;
op3val:0x3f302b4c; valaddr_reg:x12; val_offset:3552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3552*FLEN/8, x13, x9, x10)

inst_1206:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c04e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a8d8a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302b4c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22c04e; op2val:0xbf8a8d8a;
op3val:0x3f302b4c; valaddr_reg:x12; val_offset:3555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3555*FLEN/8, x13, x9, x10)

inst_1207:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c04e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a8d8a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302b4c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22c04e; op2val:0xbf8a8d8a;
op3val:0x3f302b4c; valaddr_reg:x12; val_offset:3558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3558*FLEN/8, x13, x9, x10)

inst_1208:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c04e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a8d8a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302b4c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22c04e; op2val:0xbf8a8d8a;
op3val:0x3f302b4c; valaddr_reg:x12; val_offset:3561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3561*FLEN/8, x13, x9, x10)

inst_1209:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c04e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a8d8a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302b4c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22c04e; op2val:0xbf8a8d8a;
op3val:0x3f302b4c; valaddr_reg:x12; val_offset:3564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3564*FLEN/8, x13, x9, x10)

inst_1210:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082eba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c7d22 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3783ed and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f082eba; op2val:0xbfac7d22;
op3val:0x3f3783ed; valaddr_reg:x12; val_offset:3567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3567*FLEN/8, x13, x9, x10)

inst_1211:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082eba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c7d22 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3783ed and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f082eba; op2val:0xbfac7d22;
op3val:0x3f3783ed; valaddr_reg:x12; val_offset:3570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3570*FLEN/8, x13, x9, x10)

inst_1212:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082eba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c7d22 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3783ed and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f082eba; op2val:0xbfac7d22;
op3val:0x3f3783ed; valaddr_reg:x12; val_offset:3573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3573*FLEN/8, x13, x9, x10)

inst_1213:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082eba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c7d22 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3783ed and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f082eba; op2val:0xbfac7d22;
op3val:0x3f3783ed; valaddr_reg:x12; val_offset:3576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3576*FLEN/8, x13, x9, x10)

inst_1214:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082eba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c7d22 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3783ed and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f082eba; op2val:0xbfac7d22;
op3val:0x3f3783ed; valaddr_reg:x12; val_offset:3579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3579*FLEN/8, x13, x9, x10)

inst_1215:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0909b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06e551 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x106bb0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8909b8; op2val:0xbf86e551;
op3val:0x3e906bb0; valaddr_reg:x12; val_offset:3582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3582*FLEN/8, x13, x9, x10)

inst_1216:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0909b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06e551 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x106bb0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8909b8; op2val:0xbf86e551;
op3val:0x3e906bb0; valaddr_reg:x12; val_offset:3585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3585*FLEN/8, x13, x9, x10)

inst_1217:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0909b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06e551 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x106bb0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8909b8; op2val:0xbf86e551;
op3val:0x3e906bb0; valaddr_reg:x12; val_offset:3588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3588*FLEN/8, x13, x9, x10)

inst_1218:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0909b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06e551 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x106bb0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8909b8; op2val:0xbf86e551;
op3val:0x3e906bb0; valaddr_reg:x12; val_offset:3591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3591*FLEN/8, x13, x9, x10)

inst_1219:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0909b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06e551 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x106bb0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8909b8; op2val:0xbf86e551;
op3val:0x3e906bb0; valaddr_reg:x12; val_offset:3594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3594*FLEN/8, x13, x9, x10)

inst_1220:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x562e7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68625c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x426c6b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f562e7b; op2val:0xbf68625c;
op3val:0x3f426c6b; valaddr_reg:x12; val_offset:3597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3597*FLEN/8, x13, x9, x10)

inst_1221:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x562e7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68625c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x426c6b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f562e7b; op2val:0xbf68625c;
op3val:0x3f426c6b; valaddr_reg:x12; val_offset:3600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3600*FLEN/8, x13, x9, x10)

inst_1222:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x562e7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68625c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x426c6b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f562e7b; op2val:0xbf68625c;
op3val:0x3f426c6b; valaddr_reg:x12; val_offset:3603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3603*FLEN/8, x13, x9, x10)

inst_1223:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x562e7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68625c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x426c6b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f562e7b; op2val:0xbf68625c;
op3val:0x3f426c6b; valaddr_reg:x12; val_offset:3606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3606*FLEN/8, x13, x9, x10)

inst_1224:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x562e7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68625c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x426c6b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f562e7b; op2val:0xbf68625c;
op3val:0x3f426c6b; valaddr_reg:x12; val_offset:3609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3609*FLEN/8, x13, x9, x10)

inst_1225:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x27d72f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x39eb29 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x73c95d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea7d72f; op2val:0xbe39eb29;
op3val:0x3d73c95d; valaddr_reg:x12; val_offset:3612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3612*FLEN/8, x13, x9, x10)

inst_1226:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x27d72f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x39eb29 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x73c95d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea7d72f; op2val:0xbe39eb29;
op3val:0x3d73c95d; valaddr_reg:x12; val_offset:3615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3615*FLEN/8, x13, x9, x10)

inst_1227:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x27d72f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x39eb29 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x73c95d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea7d72f; op2val:0xbe39eb29;
op3val:0x3d73c95d; valaddr_reg:x12; val_offset:3618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3618*FLEN/8, x13, x9, x10)

inst_1228:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x27d72f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x39eb29 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x73c95d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea7d72f; op2val:0xbe39eb29;
op3val:0x3d73c95d; valaddr_reg:x12; val_offset:3621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3621*FLEN/8, x13, x9, x10)

inst_1229:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x27d72f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x39eb29 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x73c95d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea7d72f; op2val:0xbe39eb29;
op3val:0x3d73c95d; valaddr_reg:x12; val_offset:3624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3624*FLEN/8, x13, x9, x10)

inst_1230:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35500d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4dcb3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11c10e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5500d; op2val:0xbfcdcb3f;
op3val:0x3f11c10e; valaddr_reg:x12; val_offset:3627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3627*FLEN/8, x13, x9, x10)

inst_1231:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35500d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4dcb3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11c10e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5500d; op2val:0xbfcdcb3f;
op3val:0x3f11c10e; valaddr_reg:x12; val_offset:3630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3630*FLEN/8, x13, x9, x10)

inst_1232:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35500d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4dcb3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11c10e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5500d; op2val:0xbfcdcb3f;
op3val:0x3f11c10e; valaddr_reg:x12; val_offset:3633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3633*FLEN/8, x13, x9, x10)

inst_1233:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35500d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4dcb3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11c10e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5500d; op2val:0xbfcdcb3f;
op3val:0x3f11c10e; valaddr_reg:x12; val_offset:3636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3636*FLEN/8, x13, x9, x10)

inst_1234:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35500d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4dcb3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11c10e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb5500d; op2val:0xbfcdcb3f;
op3val:0x3f11c10e; valaddr_reg:x12; val_offset:3639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3639*FLEN/8, x13, x9, x10)

inst_1235:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x494386 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x21ca3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e64e9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc94386; op2val:0xc221ca3a;
op3val:0x3f7e64e9; valaddr_reg:x12; val_offset:3642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3642*FLEN/8, x13, x9, x10)

inst_1236:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x494386 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x21ca3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e64e9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc94386; op2val:0xc221ca3a;
op3val:0x3f7e64e9; valaddr_reg:x12; val_offset:3645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3645*FLEN/8, x13, x9, x10)

inst_1237:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x494386 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x21ca3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e64e9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc94386; op2val:0xc221ca3a;
op3val:0x3f7e64e9; valaddr_reg:x12; val_offset:3648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3648*FLEN/8, x13, x9, x10)

inst_1238:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x494386 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x21ca3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e64e9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc94386; op2val:0xc221ca3a;
op3val:0x3f7e64e9; valaddr_reg:x12; val_offset:3651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3651*FLEN/8, x13, x9, x10)

inst_1239:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x494386 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x21ca3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e64e9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc94386; op2val:0xc221ca3a;
op3val:0x3f7e64e9; valaddr_reg:x12; val_offset:3654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3654*FLEN/8, x13, x9, x10)

inst_1240:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x706b07 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70af1d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6208cc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f706b07; op2val:0xbe70af1d;
op3val:0x3e6208cc; valaddr_reg:x12; val_offset:3657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3657*FLEN/8, x13, x9, x10)

inst_1241:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x706b07 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70af1d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6208cc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f706b07; op2val:0xbe70af1d;
op3val:0x3e6208cc; valaddr_reg:x12; val_offset:3660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3660*FLEN/8, x13, x9, x10)

inst_1242:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x706b07 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70af1d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6208cc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f706b07; op2val:0xbe70af1d;
op3val:0x3e6208cc; valaddr_reg:x12; val_offset:3663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3663*FLEN/8, x13, x9, x10)

inst_1243:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x706b07 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70af1d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6208cc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f706b07; op2val:0xbe70af1d;
op3val:0x3e6208cc; valaddr_reg:x12; val_offset:3666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3666*FLEN/8, x13, x9, x10)

inst_1244:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x706b07 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70af1d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6208cc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f706b07; op2val:0xbe70af1d;
op3val:0x3e6208cc; valaddr_reg:x12; val_offset:3669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3669*FLEN/8, x13, x9, x10)

inst_1245:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ff2d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f41c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x747e44 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f16ff2d; op2val:0xbfcf41c7;
op3val:0x3f747e44; valaddr_reg:x12; val_offset:3672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3672*FLEN/8, x13, x9, x10)

inst_1246:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ff2d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f41c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x747e44 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f16ff2d; op2val:0xbfcf41c7;
op3val:0x3f747e44; valaddr_reg:x12; val_offset:3675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3675*FLEN/8, x13, x9, x10)

inst_1247:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ff2d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f41c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x747e44 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f16ff2d; op2val:0xbfcf41c7;
op3val:0x3f747e44; valaddr_reg:x12; val_offset:3678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3678*FLEN/8, x13, x9, x10)

inst_1248:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ff2d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f41c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x747e44 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f16ff2d; op2val:0xbfcf41c7;
op3val:0x3f747e44; valaddr_reg:x12; val_offset:3681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3681*FLEN/8, x13, x9, x10)

inst_1249:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ff2d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f41c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x747e44 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f16ff2d; op2val:0xbfcf41c7;
op3val:0x3f747e44; valaddr_reg:x12; val_offset:3684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3684*FLEN/8, x13, x9, x10)

inst_1250:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6735fb and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3c8fae and fs3 == 0 and fe3 == 0x78 and fm3 == 0x2a4d69 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee735fb; op2val:0xbcbc8fae;
op3val:0x3c2a4d69; valaddr_reg:x12; val_offset:3687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3687*FLEN/8, x13, x9, x10)

inst_1251:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6735fb and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3c8fae and fs3 == 0 and fe3 == 0x78 and fm3 == 0x2a4d69 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee735fb; op2val:0xbcbc8fae;
op3val:0x3c2a4d69; valaddr_reg:x12; val_offset:3690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3690*FLEN/8, x13, x9, x10)

inst_1252:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6735fb and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3c8fae and fs3 == 0 and fe3 == 0x78 and fm3 == 0x2a4d69 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee735fb; op2val:0xbcbc8fae;
op3val:0x3c2a4d69; valaddr_reg:x12; val_offset:3693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3693*FLEN/8, x13, x9, x10)

inst_1253:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6735fb and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3c8fae and fs3 == 0 and fe3 == 0x78 and fm3 == 0x2a4d69 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee735fb; op2val:0xbcbc8fae;
op3val:0x3c2a4d69; valaddr_reg:x12; val_offset:3696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3696*FLEN/8, x13, x9, x10)

inst_1254:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6735fb and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3c8fae and fs3 == 0 and fe3 == 0x78 and fm3 == 0x2a4d69 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee735fb; op2val:0xbcbc8fae;
op3val:0x3c2a4d69; valaddr_reg:x12; val_offset:3699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3699*FLEN/8, x13, x9, x10)

inst_1255:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x764d80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cf2a6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x266587 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef64d80; op2val:0xbfacf2a6;
op3val:0x3f266587; valaddr_reg:x12; val_offset:3702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3702*FLEN/8, x13, x9, x10)

inst_1256:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x764d80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cf2a6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x266587 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef64d80; op2val:0xbfacf2a6;
op3val:0x3f266587; valaddr_reg:x12; val_offset:3705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3705*FLEN/8, x13, x9, x10)

inst_1257:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x764d80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cf2a6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x266587 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef64d80; op2val:0xbfacf2a6;
op3val:0x3f266587; valaddr_reg:x12; val_offset:3708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3708*FLEN/8, x13, x9, x10)

inst_1258:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x764d80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cf2a6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x266587 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef64d80; op2val:0xbfacf2a6;
op3val:0x3f266587; valaddr_reg:x12; val_offset:3711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3711*FLEN/8, x13, x9, x10)

inst_1259:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x764d80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cf2a6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x266587 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef64d80; op2val:0xbfacf2a6;
op3val:0x3f266587; valaddr_reg:x12; val_offset:3714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3714*FLEN/8, x13, x9, x10)

inst_1260:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4021e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e671e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x11daef and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x534021e6; op2val:0x411e671e;
op3val:0x5311daef; valaddr_reg:x12; val_offset:3717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3717*FLEN/8, x13, x9, x10)

inst_1261:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4021e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e671e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x11daef and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x534021e6; op2val:0x411e671e;
op3val:0x5311daef; valaddr_reg:x12; val_offset:3720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3720*FLEN/8, x13, x9, x10)

inst_1262:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4021e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e671e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x11daef and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x534021e6; op2val:0x411e671e;
op3val:0x5311daef; valaddr_reg:x12; val_offset:3723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3723*FLEN/8, x13, x9, x10)

inst_1263:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4021e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e671e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x11daef and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x534021e6; op2val:0x411e671e;
op3val:0x5311daef; valaddr_reg:x12; val_offset:3726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3726*FLEN/8, x13, x9, x10)

inst_1264:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4021e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e671e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x11daef and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x534021e6; op2val:0x411e671e;
op3val:0x5311daef; valaddr_reg:x12; val_offset:3729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3729*FLEN/8, x13, x9, x10)

inst_1265:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66173b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10ee62 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b795a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e6173b; op2val:0x3f10ee62;
op3val:0x547b795a; valaddr_reg:x12; val_offset:3732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3732*FLEN/8, x13, x9, x10)

inst_1266:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66173b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10ee62 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b795a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e6173b; op2val:0x3f10ee62;
op3val:0x547b795a; valaddr_reg:x12; val_offset:3735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3735*FLEN/8, x13, x9, x10)

inst_1267:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66173b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10ee62 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b795a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e6173b; op2val:0x3f10ee62;
op3val:0x547b795a; valaddr_reg:x12; val_offset:3738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3738*FLEN/8, x13, x9, x10)

inst_1268:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66173b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10ee62 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b795a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e6173b; op2val:0x3f10ee62;
op3val:0x547b795a; valaddr_reg:x12; val_offset:3741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3741*FLEN/8, x13, x9, x10)

inst_1269:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66173b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10ee62 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b795a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e6173b; op2val:0x3f10ee62;
op3val:0x547b795a; valaddr_reg:x12; val_offset:3744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3744*FLEN/8, x13, x9, x10)

inst_1270:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6f8c68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016fc6 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x5c3501 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ef8c68; op2val:0x3f816fc6;
op3val:0x52dc3501; valaddr_reg:x12; val_offset:3747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3747*FLEN/8, x13, x9, x10)

inst_1271:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6f8c68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016fc6 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x5c3501 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ef8c68; op2val:0x3f816fc6;
op3val:0x52dc3501; valaddr_reg:x12; val_offset:3750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3750*FLEN/8, x13, x9, x10)

inst_1272:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6f8c68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016fc6 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x5c3501 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ef8c68; op2val:0x3f816fc6;
op3val:0x52dc3501; valaddr_reg:x12; val_offset:3753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3753*FLEN/8, x13, x9, x10)

inst_1273:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6f8c68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016fc6 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x5c3501 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ef8c68; op2val:0x3f816fc6;
op3val:0x52dc3501; valaddr_reg:x12; val_offset:3756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3756*FLEN/8, x13, x9, x10)

inst_1274:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6f8c68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016fc6 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x5c3501 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ef8c68; op2val:0x3f816fc6;
op3val:0x52dc3501; valaddr_reg:x12; val_offset:3759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3759*FLEN/8, x13, x9, x10)

inst_1275:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x794e87 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x799be5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4eacc7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53f94e87; op2val:0x40799be5;
op3val:0x52ceacc7; valaddr_reg:x12; val_offset:3762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3762*FLEN/8, x13, x9, x10)

inst_1276:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x794e87 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x799be5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4eacc7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53f94e87; op2val:0x40799be5;
op3val:0x52ceacc7; valaddr_reg:x12; val_offset:3765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3765*FLEN/8, x13, x9, x10)

inst_1277:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x794e87 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x799be5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4eacc7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53f94e87; op2val:0x40799be5;
op3val:0x52ceacc7; valaddr_reg:x12; val_offset:3768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3768*FLEN/8, x13, x9, x10)

inst_1278:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x794e87 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x799be5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4eacc7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53f94e87; op2val:0x40799be5;
op3val:0x52ceacc7; valaddr_reg:x12; val_offset:3771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3771*FLEN/8, x13, x9, x10)

inst_1279:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x794e87 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x799be5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4eacc7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53f94e87; op2val:0x40799be5;
op3val:0x52ceacc7; valaddr_reg:x12; val_offset:3774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3774*FLEN/8, x13, x9, x10)

inst_1280:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b6d62 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17647d and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x76540c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544b6d62; op2val:0x4017647d;
op3val:0x52f6540c; valaddr_reg:x12; val_offset:3777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3777*FLEN/8, x13, x9, x10)

inst_1281:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b6d62 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17647d and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x76540c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544b6d62; op2val:0x4017647d;
op3val:0x52f6540c; valaddr_reg:x12; val_offset:3780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3780*FLEN/8, x13, x9, x10)

inst_1282:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b6d62 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17647d and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x76540c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544b6d62; op2val:0x4017647d;
op3val:0x52f6540c; valaddr_reg:x12; val_offset:3783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3783*FLEN/8, x13, x9, x10)

inst_1283:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b6d62 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17647d and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x76540c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544b6d62; op2val:0x4017647d;
op3val:0x52f6540c; valaddr_reg:x12; val_offset:3786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3786*FLEN/8, x13, x9, x10)

inst_1284:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b6d62 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17647d and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x76540c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544b6d62; op2val:0x4017647d;
op3val:0x52f6540c; valaddr_reg:x12; val_offset:3789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3789*FLEN/8, x13, x9, x10)

inst_1285:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x02c7ba and fs2 == 0 and fe2 == 0x80 and fm2 == 0x147669 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50a02a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5402c7ba; op2val:0x40147669;
op3val:0x5450a02a; valaddr_reg:x12; val_offset:3792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3792*FLEN/8, x13, x9, x10)

inst_1286:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x02c7ba and fs2 == 0 and fe2 == 0x80 and fm2 == 0x147669 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50a02a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5402c7ba; op2val:0x40147669;
op3val:0x5450a02a; valaddr_reg:x12; val_offset:3795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3795*FLEN/8, x13, x9, x10)

inst_1287:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x02c7ba and fs2 == 0 and fe2 == 0x80 and fm2 == 0x147669 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50a02a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5402c7ba; op2val:0x40147669;
op3val:0x5450a02a; valaddr_reg:x12; val_offset:3798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3798*FLEN/8, x13, x9, x10)

inst_1288:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x02c7ba and fs2 == 0 and fe2 == 0x80 and fm2 == 0x147669 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50a02a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5402c7ba; op2val:0x40147669;
op3val:0x5450a02a; valaddr_reg:x12; val_offset:3801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3801*FLEN/8, x13, x9, x10)

inst_1289:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x02c7ba and fs2 == 0 and fe2 == 0x80 and fm2 == 0x147669 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50a02a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5402c7ba; op2val:0x40147669;
op3val:0x5450a02a; valaddr_reg:x12; val_offset:3804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3804*FLEN/8, x13, x9, x10)

inst_1290:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1ca555 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x467208 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x524b28 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541ca555; op2val:0x40467208;
op3val:0x52d24b28; valaddr_reg:x12; val_offset:3807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3807*FLEN/8, x13, x9, x10)

inst_1291:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1ca555 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x467208 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x524b28 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541ca555; op2val:0x40467208;
op3val:0x52d24b28; valaddr_reg:x12; val_offset:3810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3810*FLEN/8, x13, x9, x10)

inst_1292:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1ca555 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x467208 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x524b28 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541ca555; op2val:0x40467208;
op3val:0x52d24b28; valaddr_reg:x12; val_offset:3813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3813*FLEN/8, x13, x9, x10)

inst_1293:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1ca555 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x467208 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x524b28 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541ca555; op2val:0x40467208;
op3val:0x52d24b28; valaddr_reg:x12; val_offset:3816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3816*FLEN/8, x13, x9, x10)

inst_1294:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1ca555 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x467208 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x524b28 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541ca555; op2val:0x40467208;
op3val:0x52d24b28; valaddr_reg:x12; val_offset:3819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3819*FLEN/8, x13, x9, x10)

inst_1295:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x1a073c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x412b92 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x78bc65 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x529a073c; op2val:0x3f412b92;
op3val:0x54f8bc65; valaddr_reg:x12; val_offset:3822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3822*FLEN/8, x13, x9, x10)

inst_1296:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x1a073c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x412b92 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x78bc65 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x529a073c; op2val:0x3f412b92;
op3val:0x54f8bc65; valaddr_reg:x12; val_offset:3825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3825*FLEN/8, x13, x9, x10)

inst_1297:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x1a073c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x412b92 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x78bc65 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x529a073c; op2val:0x3f412b92;
op3val:0x54f8bc65; valaddr_reg:x12; val_offset:3828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3828*FLEN/8, x13, x9, x10)

inst_1298:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x1a073c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x412b92 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x78bc65 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x529a073c; op2val:0x3f412b92;
op3val:0x54f8bc65; valaddr_reg:x12; val_offset:3831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3831*FLEN/8, x13, x9, x10)

inst_1299:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x1a073c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x412b92 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x78bc65 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x529a073c; op2val:0x3f412b92;
op3val:0x54f8bc65; valaddr_reg:x12; val_offset:3834*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3834*FLEN/8, x13, x9, x10)

inst_1300:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x37b114 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f4ea3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023585 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b7b114; op2val:0x402f4ea3;
op3val:0x54823585; valaddr_reg:x12; val_offset:3837*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3837*FLEN/8, x13, x9, x10)

inst_1301:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x37b114 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f4ea3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023585 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b7b114; op2val:0x402f4ea3;
op3val:0x54823585; valaddr_reg:x12; val_offset:3840*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3840*FLEN/8, x13, x9, x10)

inst_1302:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x37b114 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f4ea3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023585 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b7b114; op2val:0x402f4ea3;
op3val:0x54823585; valaddr_reg:x12; val_offset:3843*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3843*FLEN/8, x13, x9, x10)

inst_1303:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x37b114 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f4ea3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023585 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b7b114; op2val:0x402f4ea3;
op3val:0x54823585; valaddr_reg:x12; val_offset:3846*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3846*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_10)

inst_1304:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x37b114 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f4ea3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023585 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b7b114; op2val:0x402f4ea3;
op3val:0x54823585; valaddr_reg:x12; val_offset:3849*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3849*FLEN/8, x13, x9, x10)

inst_1305:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4e01ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151a31 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0803df and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544e01ce; op2val:0x3f951a31;
op3val:0x548803df; valaddr_reg:x12; val_offset:3852*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3852*FLEN/8, x13, x9, x10)

inst_1306:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4e01ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151a31 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0803df and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544e01ce; op2val:0x3f951a31;
op3val:0x548803df; valaddr_reg:x12; val_offset:3855*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3855*FLEN/8, x13, x9, x10)

inst_1307:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4e01ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151a31 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0803df and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544e01ce; op2val:0x3f951a31;
op3val:0x548803df; valaddr_reg:x12; val_offset:3858*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3858*FLEN/8, x13, x9, x10)

inst_1308:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4e01ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151a31 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0803df and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544e01ce; op2val:0x3f951a31;
op3val:0x548803df; valaddr_reg:x12; val_offset:3861*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3861*FLEN/8, x13, x9, x10)

inst_1309:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4e01ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151a31 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0803df and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x544e01ce; op2val:0x3f951a31;
op3val:0x548803df; valaddr_reg:x12; val_offset:3864*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3864*FLEN/8, x13, x9, x10)

inst_1310:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x2cc4ce and fs2 == 0 and fe2 == 0x82 and fm2 == 0x022175 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20b5eb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x532cc4ce; op2val:0x41022175;
op3val:0x5420b5eb; valaddr_reg:x12; val_offset:3867*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3867*FLEN/8, x13, x9, x10)

inst_1311:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x2cc4ce and fs2 == 0 and fe2 == 0x82 and fm2 == 0x022175 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20b5eb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x532cc4ce; op2val:0x41022175;
op3val:0x5420b5eb; valaddr_reg:x12; val_offset:3870*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3870*FLEN/8, x13, x9, x10)

inst_1312:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x2cc4ce and fs2 == 0 and fe2 == 0x82 and fm2 == 0x022175 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20b5eb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x532cc4ce; op2val:0x41022175;
op3val:0x5420b5eb; valaddr_reg:x12; val_offset:3873*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3873*FLEN/8, x13, x9, x10)

inst_1313:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x2cc4ce and fs2 == 0 and fe2 == 0x82 and fm2 == 0x022175 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20b5eb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x532cc4ce; op2val:0x41022175;
op3val:0x5420b5eb; valaddr_reg:x12; val_offset:3876*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3876*FLEN/8, x13, x9, x10)

inst_1314:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x2cc4ce and fs2 == 0 and fe2 == 0x82 and fm2 == 0x022175 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20b5eb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x532cc4ce; op2val:0x41022175;
op3val:0x5420b5eb; valaddr_reg:x12; val_offset:3879*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3879*FLEN/8, x13, x9, x10)

inst_1315:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5d24d6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x07bf38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0abc63 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x535d24d6; op2val:0x4087bf38;
op3val:0x548abc63; valaddr_reg:x12; val_offset:3882*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3882*FLEN/8, x13, x9, x10)

inst_1316:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5d24d6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x07bf38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0abc63 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x535d24d6; op2val:0x4087bf38;
op3val:0x548abc63; valaddr_reg:x12; val_offset:3885*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3885*FLEN/8, x13, x9, x10)

inst_1317:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5d24d6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x07bf38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0abc63 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x535d24d6; op2val:0x4087bf38;
op3val:0x548abc63; valaddr_reg:x12; val_offset:3888*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3888*FLEN/8, x13, x9, x10)

inst_1318:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5d24d6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x07bf38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0abc63 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x535d24d6; op2val:0x4087bf38;
op3val:0x548abc63; valaddr_reg:x12; val_offset:3891*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3891*FLEN/8, x13, x9, x10)

inst_1319:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5d24d6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x07bf38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0abc63 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x535d24d6; op2val:0x4087bf38;
op3val:0x548abc63; valaddr_reg:x12; val_offset:3894*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3894*FLEN/8, x13, x9, x10)

inst_1320:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6bda7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5f3f08 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x19294e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ebda7c; op2val:0x3edf3f08;
op3val:0x5499294e; valaddr_reg:x12; val_offset:3897*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3897*FLEN/8, x13, x9, x10)

inst_1321:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6bda7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5f3f08 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x19294e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ebda7c; op2val:0x3edf3f08;
op3val:0x5499294e; valaddr_reg:x12; val_offset:3900*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3900*FLEN/8, x13, x9, x10)

inst_1322:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6bda7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5f3f08 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x19294e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ebda7c; op2val:0x3edf3f08;
op3val:0x5499294e; valaddr_reg:x12; val_offset:3903*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3903*FLEN/8, x13, x9, x10)

inst_1323:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6bda7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5f3f08 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x19294e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ebda7c; op2val:0x3edf3f08;
op3val:0x5499294e; valaddr_reg:x12; val_offset:3906*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3906*FLEN/8, x13, x9, x10)

inst_1324:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6bda7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5f3f08 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x19294e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ebda7c; op2val:0x3edf3f08;
op3val:0x5499294e; valaddr_reg:x12; val_offset:3909*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3909*FLEN/8, x13, x9, x10)

inst_1325:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5b5513 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6abb8b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5b8e3c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54db5513; op2val:0x3f6abb8b;
op3val:0x53db8e3c; valaddr_reg:x12; val_offset:3912*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3912*FLEN/8, x13, x9, x10)

inst_1326:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5b5513 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6abb8b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5b8e3c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54db5513; op2val:0x3f6abb8b;
op3val:0x53db8e3c; valaddr_reg:x12; val_offset:3915*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3915*FLEN/8, x13, x9, x10)

inst_1327:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5b5513 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6abb8b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5b8e3c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54db5513; op2val:0x3f6abb8b;
op3val:0x53db8e3c; valaddr_reg:x12; val_offset:3918*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3918*FLEN/8, x13, x9, x10)

inst_1328:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5b5513 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6abb8b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5b8e3c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54db5513; op2val:0x3f6abb8b;
op3val:0x53db8e3c; valaddr_reg:x12; val_offset:3921*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3921*FLEN/8, x13, x9, x10)

inst_1329:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5b5513 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6abb8b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5b8e3c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54db5513; op2val:0x3f6abb8b;
op3val:0x53db8e3c; valaddr_reg:x12; val_offset:3924*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3924*FLEN/8, x13, x9, x10)

inst_1330:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0e9bc9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x538ff9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0a2564 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x520e9bc9; op2val:0x41d38ff9;
op3val:0x548a2564; valaddr_reg:x12; val_offset:3927*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3927*FLEN/8, x13, x9, x10)

inst_1331:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0e9bc9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x538ff9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0a2564 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x520e9bc9; op2val:0x41d38ff9;
op3val:0x548a2564; valaddr_reg:x12; val_offset:3930*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3930*FLEN/8, x13, x9, x10)

inst_1332:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0e9bc9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x538ff9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0a2564 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x520e9bc9; op2val:0x41d38ff9;
op3val:0x548a2564; valaddr_reg:x12; val_offset:3933*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3933*FLEN/8, x13, x9, x10)

inst_1333:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0e9bc9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x538ff9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0a2564 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x520e9bc9; op2val:0x41d38ff9;
op3val:0x548a2564; valaddr_reg:x12; val_offset:3936*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3936*FLEN/8, x13, x9, x10)

inst_1334:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0e9bc9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x538ff9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0a2564 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x520e9bc9; op2val:0x41d38ff9;
op3val:0x548a2564; valaddr_reg:x12; val_offset:3939*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3939*FLEN/8, x13, x9, x10)

inst_1335:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x791bc6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61809f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1248b7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54791bc6; op2val:0x3f61809f;
op3val:0x549248b7; valaddr_reg:x12; val_offset:3942*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3942*FLEN/8, x13, x9, x10)

inst_1336:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x791bc6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61809f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1248b7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54791bc6; op2val:0x3f61809f;
op3val:0x549248b7; valaddr_reg:x12; val_offset:3945*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3945*FLEN/8, x13, x9, x10)

inst_1337:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x791bc6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61809f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1248b7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54791bc6; op2val:0x3f61809f;
op3val:0x549248b7; valaddr_reg:x12; val_offset:3948*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3948*FLEN/8, x13, x9, x10)

inst_1338:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x791bc6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61809f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1248b7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54791bc6; op2val:0x3f61809f;
op3val:0x549248b7; valaddr_reg:x12; val_offset:3951*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3951*FLEN/8, x13, x9, x10)

inst_1339:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x791bc6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61809f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1248b7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54791bc6; op2val:0x3f61809f;
op3val:0x549248b7; valaddr_reg:x12; val_offset:3954*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3954*FLEN/8, x13, x9, x10)

inst_1340:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x40d578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ed354 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x200681 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5440d578; op2val:0x3f7ed354;
op3val:0x54a00681; valaddr_reg:x12; val_offset:3957*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3957*FLEN/8, x13, x9, x10)

inst_1341:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x40d578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ed354 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x200681 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5440d578; op2val:0x3f7ed354;
op3val:0x54a00681; valaddr_reg:x12; val_offset:3960*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3960*FLEN/8, x13, x9, x10)

inst_1342:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x40d578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ed354 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x200681 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5440d578; op2val:0x3f7ed354;
op3val:0x54a00681; valaddr_reg:x12; val_offset:3963*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3963*FLEN/8, x13, x9, x10)

inst_1343:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x40d578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ed354 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x200681 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5440d578; op2val:0x3f7ed354;
op3val:0x54a00681; valaddr_reg:x12; val_offset:3966*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3966*FLEN/8, x13, x9, x10)

inst_1344:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x40d578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ed354 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x200681 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5440d578; op2val:0x3f7ed354;
op3val:0x54a00681; valaddr_reg:x12; val_offset:3969*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3969*FLEN/8, x13, x9, x10)

inst_1345:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x39c374 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x758c24 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69ba48 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b9c374; op2val:0x3df58c24;
op3val:0x54e9ba48; valaddr_reg:x12; val_offset:3972*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3972*FLEN/8, x13, x9, x10)

inst_1346:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x39c374 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x758c24 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69ba48 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b9c374; op2val:0x3df58c24;
op3val:0x54e9ba48; valaddr_reg:x12; val_offset:3975*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3975*FLEN/8, x13, x9, x10)

inst_1347:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x39c374 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x758c24 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69ba48 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b9c374; op2val:0x3df58c24;
op3val:0x54e9ba48; valaddr_reg:x12; val_offset:3978*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3978*FLEN/8, x13, x9, x10)

inst_1348:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x39c374 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x758c24 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69ba48 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b9c374; op2val:0x3df58c24;
op3val:0x54e9ba48; valaddr_reg:x12; val_offset:3981*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3981*FLEN/8, x13, x9, x10)

inst_1349:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x39c374 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x758c24 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69ba48 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b9c374; op2val:0x3df58c24;
op3val:0x54e9ba48; valaddr_reg:x12; val_offset:3984*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3984*FLEN/8, x13, x9, x10)

inst_1350:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1d7f2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654257 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x65e8d4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541d7f2f; op2val:0x3fe54257;
op3val:0x5465e8d4; valaddr_reg:x12; val_offset:3987*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3987*FLEN/8, x13, x9, x10)

inst_1351:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1d7f2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654257 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x65e8d4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541d7f2f; op2val:0x3fe54257;
op3val:0x5465e8d4; valaddr_reg:x12; val_offset:3990*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3990*FLEN/8, x13, x9, x10)

inst_1352:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1d7f2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654257 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x65e8d4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541d7f2f; op2val:0x3fe54257;
op3val:0x5465e8d4; valaddr_reg:x12; val_offset:3993*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3993*FLEN/8, x13, x9, x10)

inst_1353:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1d7f2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654257 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x65e8d4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541d7f2f; op2val:0x3fe54257;
op3val:0x5465e8d4; valaddr_reg:x12; val_offset:3996*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3996*FLEN/8, x13, x9, x10)

inst_1354:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1d7f2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654257 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x65e8d4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x541d7f2f; op2val:0x3fe54257;
op3val:0x5465e8d4; valaddr_reg:x12; val_offset:3999*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3999*FLEN/8, x13, x9, x10)

inst_1355:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x538ffb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70640e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x655952 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54d38ffb; op2val:0x3f70640e;
op3val:0x53e55952; valaddr_reg:x12; val_offset:4002*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4002*FLEN/8, x13, x9, x10)

inst_1356:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x538ffb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70640e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x655952 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54d38ffb; op2val:0x3f70640e;
op3val:0x53e55952; valaddr_reg:x12; val_offset:4005*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4005*FLEN/8, x13, x9, x10)

inst_1357:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x538ffb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70640e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x655952 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54d38ffb; op2val:0x3f70640e;
op3val:0x53e55952; valaddr_reg:x12; val_offset:4008*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4008*FLEN/8, x13, x9, x10)

inst_1358:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x538ffb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70640e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x655952 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54d38ffb; op2val:0x3f70640e;
op3val:0x53e55952; valaddr_reg:x12; val_offset:4011*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4011*FLEN/8, x13, x9, x10)

inst_1359:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x538ffb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70640e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x655952 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54d38ffb; op2val:0x3f70640e;
op3val:0x53e55952; valaddr_reg:x12; val_offset:4014*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4014*FLEN/8, x13, x9, x10)

inst_1360:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x6ced36 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3e6291 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1f9971 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x536ced36; op2val:0x40be6291;
op3val:0x541f9971; valaddr_reg:x12; val_offset:4017*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4017*FLEN/8, x13, x9, x10)

inst_1361:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x6ced36 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3e6291 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1f9971 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x536ced36; op2val:0x40be6291;
op3val:0x541f9971; valaddr_reg:x12; val_offset:4020*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4020*FLEN/8, x13, x9, x10)

inst_1362:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x6ced36 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3e6291 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1f9971 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x536ced36; op2val:0x40be6291;
op3val:0x541f9971; valaddr_reg:x12; val_offset:4023*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4023*FLEN/8, x13, x9, x10)

inst_1363:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x6ced36 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3e6291 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1f9971 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x536ced36; op2val:0x40be6291;
op3val:0x541f9971; valaddr_reg:x12; val_offset:4026*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4026*FLEN/8, x13, x9, x10)

inst_1364:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x6ced36 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3e6291 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1f9971 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x536ced36; op2val:0x40be6291;
op3val:0x541f9971; valaddr_reg:x12; val_offset:4029*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4029*FLEN/8, x13, x9, x10)

inst_1365:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x3379cf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2636b4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x45bc55 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x533379cf; op2val:0x402636b4;
op3val:0x54c5bc55; valaddr_reg:x12; val_offset:4032*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4032*FLEN/8, x13, x9, x10)

inst_1366:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x3379cf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2636b4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x45bc55 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x533379cf; op2val:0x402636b4;
op3val:0x54c5bc55; valaddr_reg:x12; val_offset:4035*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4035*FLEN/8, x13, x9, x10)

inst_1367:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x3379cf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2636b4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x45bc55 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x533379cf; op2val:0x402636b4;
op3val:0x54c5bc55; valaddr_reg:x12; val_offset:4038*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4038*FLEN/8, x13, x9, x10)

inst_1368:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x3379cf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2636b4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x45bc55 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x533379cf; op2val:0x402636b4;
op3val:0x54c5bc55; valaddr_reg:x12; val_offset:4041*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4041*FLEN/8, x13, x9, x10)

inst_1369:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x3379cf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2636b4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x45bc55 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x533379cf; op2val:0x402636b4;
op3val:0x54c5bc55; valaddr_reg:x12; val_offset:4044*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4044*FLEN/8, x13, x9, x10)

inst_1370:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51c6ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a9f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x203148 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54d1c6ab; op2val:0x3f56a9f9;
op3val:0x54203148; valaddr_reg:x12; val_offset:4047*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4047*FLEN/8, x13, x9, x10)

inst_1371:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51c6ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a9f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x203148 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54d1c6ab; op2val:0x3f56a9f9;
op3val:0x54203148; valaddr_reg:x12; val_offset:4050*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4050*FLEN/8, x13, x9, x10)

inst_1372:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51c6ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a9f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x203148 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54d1c6ab; op2val:0x3f56a9f9;
op3val:0x54203148; valaddr_reg:x12; val_offset:4053*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4053*FLEN/8, x13, x9, x10)

inst_1373:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51c6ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a9f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x203148 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54d1c6ab; op2val:0x3f56a9f9;
op3val:0x54203148; valaddr_reg:x12; val_offset:4056*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4056*FLEN/8, x13, x9, x10)

inst_1374:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51c6ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a9f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x203148 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54d1c6ab; op2val:0x3f56a9f9;
op3val:0x54203148; valaddr_reg:x12; val_offset:4059*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4059*FLEN/8, x13, x9, x10)

inst_1375:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x04edd6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x624c2b and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x27e7bb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5384edd6; op2val:0x40e24c2b;
op3val:0x5327e7bb; valaddr_reg:x12; val_offset:4062*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4062*FLEN/8, x13, x9, x10)

inst_1376:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x04edd6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x624c2b and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x27e7bb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5384edd6; op2val:0x40e24c2b;
op3val:0x5327e7bb; valaddr_reg:x12; val_offset:4065*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4065*FLEN/8, x13, x9, x10)

inst_1377:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x04edd6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x624c2b and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x27e7bb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5384edd6; op2val:0x40e24c2b;
op3val:0x5327e7bb; valaddr_reg:x12; val_offset:4068*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4068*FLEN/8, x13, x9, x10)

inst_1378:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x04edd6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x624c2b and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x27e7bb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5384edd6; op2val:0x40e24c2b;
op3val:0x5327e7bb; valaddr_reg:x12; val_offset:4071*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4071*FLEN/8, x13, x9, x10)

inst_1379:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x04edd6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x624c2b and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x27e7bb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5384edd6; op2val:0x40e24c2b;
op3val:0x5327e7bb; valaddr_reg:x12; val_offset:4074*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4074*FLEN/8, x13, x9, x10)

inst_1380:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7ab9d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f5802 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2cb270 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53fab9d8; op2val:0x406f5802;
op3val:0x532cb270; valaddr_reg:x12; val_offset:4077*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4077*FLEN/8, x13, x9, x10)

inst_1381:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7ab9d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f5802 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2cb270 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53fab9d8; op2val:0x406f5802;
op3val:0x532cb270; valaddr_reg:x12; val_offset:4080*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4080*FLEN/8, x13, x9, x10)

inst_1382:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7ab9d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f5802 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2cb270 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53fab9d8; op2val:0x406f5802;
op3val:0x532cb270; valaddr_reg:x12; val_offset:4083*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4083*FLEN/8, x13, x9, x10)

inst_1383:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7ab9d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f5802 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2cb270 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53fab9d8; op2val:0x406f5802;
op3val:0x532cb270; valaddr_reg:x12; val_offset:4086*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4086*FLEN/8, x13, x9, x10)

inst_1384:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7ab9d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f5802 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2cb270 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53fab9d8; op2val:0x406f5802;
op3val:0x532cb270; valaddr_reg:x12; val_offset:4089*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4089*FLEN/8, x13, x9, x10)

inst_1385:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5b7807 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ca2c9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b525 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x545b7807; op2val:0x3f7ca2c9;
op3val:0x5493b525; valaddr_reg:x12; val_offset:4092*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4092*FLEN/8, x13, x9, x10)

inst_1386:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5b7807 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ca2c9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b525 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x545b7807; op2val:0x3f7ca2c9;
op3val:0x5493b525; valaddr_reg:x12; val_offset:4095*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4095*FLEN/8, x13, x9, x10)

inst_1387:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5b7807 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ca2c9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b525 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x545b7807; op2val:0x3f7ca2c9;
op3val:0x5493b525; valaddr_reg:x12; val_offset:4098*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4098*FLEN/8, x13, x9, x10)

inst_1388:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5b7807 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ca2c9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b525 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x545b7807; op2val:0x3f7ca2c9;
op3val:0x5493b525; valaddr_reg:x12; val_offset:4101*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4101*FLEN/8, x13, x9, x10)

inst_1389:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5b7807 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ca2c9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b525 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x545b7807; op2val:0x3f7ca2c9;
op3val:0x5493b525; valaddr_reg:x12; val_offset:4104*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4104*FLEN/8, x13, x9, x10)

inst_1390:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7b4695 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x74c9c3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x7baaf5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53fb4695; op2val:0x4074c9c3;
op3val:0x52fbaaf5; valaddr_reg:x12; val_offset:4107*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4107*FLEN/8, x13, x9, x10)

inst_1391:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7b4695 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x74c9c3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x7baaf5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53fb4695; op2val:0x4074c9c3;
op3val:0x52fbaaf5; valaddr_reg:x12; val_offset:4110*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4110*FLEN/8, x13, x9, x10)

inst_1392:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7b4695 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x74c9c3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x7baaf5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53fb4695; op2val:0x4074c9c3;
op3val:0x52fbaaf5; valaddr_reg:x12; val_offset:4113*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4113*FLEN/8, x13, x9, x10)

inst_1393:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7b4695 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x74c9c3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x7baaf5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53fb4695; op2val:0x4074c9c3;
op3val:0x52fbaaf5; valaddr_reg:x12; val_offset:4116*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4116*FLEN/8, x13, x9, x10)

inst_1394:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7b4695 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x74c9c3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x7baaf5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53fb4695; op2val:0x4074c9c3;
op3val:0x52fbaaf5; valaddr_reg:x12; val_offset:4119*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4119*FLEN/8, x13, x9, x10)

inst_1395:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x335aae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2decb5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x44bc46 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b35aae; op2val:0x3fadecb5;
op3val:0x52c4bc46; valaddr_reg:x12; val_offset:4122*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4122*FLEN/8, x13, x9, x10)

inst_1396:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x335aae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2decb5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x44bc46 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b35aae; op2val:0x3fadecb5;
op3val:0x52c4bc46; valaddr_reg:x12; val_offset:4125*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4125*FLEN/8, x13, x9, x10)

inst_1397:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x335aae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2decb5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x44bc46 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b35aae; op2val:0x3fadecb5;
op3val:0x52c4bc46; valaddr_reg:x12; val_offset:4128*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4128*FLEN/8, x13, x9, x10)

inst_1398:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x335aae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2decb5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x44bc46 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b35aae; op2val:0x3fadecb5;
op3val:0x52c4bc46; valaddr_reg:x12; val_offset:4131*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4131*FLEN/8, x13, x9, x10)

inst_1399:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x335aae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2decb5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x44bc46 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b35aae; op2val:0x3fadecb5;
op3val:0x52c4bc46; valaddr_reg:x12; val_offset:4134*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4134*FLEN/8, x13, x9, x10)

inst_1400:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4ca682 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x64a420 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1270fe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53cca682; op2val:0x4064a420;
op3val:0x541270fe; valaddr_reg:x12; val_offset:4137*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4137*FLEN/8, x13, x9, x10)

inst_1401:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4ca682 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x64a420 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1270fe and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53cca682; op2val:0x4064a420;
op3val:0x541270fe; valaddr_reg:x12; val_offset:4140*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4140*FLEN/8, x13, x9, x10)

inst_1402:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4ca682 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x64a420 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1270fe and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53cca682; op2val:0x4064a420;
op3val:0x541270fe; valaddr_reg:x12; val_offset:4143*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4143*FLEN/8, x13, x9, x10)

inst_1403:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4ca682 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x64a420 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1270fe and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53cca682; op2val:0x4064a420;
op3val:0x541270fe; valaddr_reg:x12; val_offset:4146*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4146*FLEN/8, x13, x9, x10)

inst_1404:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4ca682 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x64a420 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1270fe and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53cca682; op2val:0x4064a420;
op3val:0x541270fe; valaddr_reg:x12; val_offset:4149*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4149*FLEN/8, x13, x9, x10)

inst_1405:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f5dd2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a5c2a and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x49ca9b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543f5dd2; op2val:0x401a5c2a;
op3val:0x5349ca9b; valaddr_reg:x12; val_offset:4152*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4152*FLEN/8, x13, x9, x10)

inst_1406:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f5dd2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a5c2a and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x49ca9b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543f5dd2; op2val:0x401a5c2a;
op3val:0x5349ca9b; valaddr_reg:x12; val_offset:4155*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4155*FLEN/8, x13, x9, x10)

inst_1407:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f5dd2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a5c2a and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x49ca9b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543f5dd2; op2val:0x401a5c2a;
op3val:0x5349ca9b; valaddr_reg:x12; val_offset:4158*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4158*FLEN/8, x13, x9, x10)

inst_1408:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f5dd2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a5c2a and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x49ca9b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543f5dd2; op2val:0x401a5c2a;
op3val:0x5349ca9b; valaddr_reg:x12; val_offset:4161*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4161*FLEN/8, x13, x9, x10)

inst_1409:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f5dd2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a5c2a and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x49ca9b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543f5dd2; op2val:0x401a5c2a;
op3val:0x5349ca9b; valaddr_reg:x12; val_offset:4164*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4164*FLEN/8, x13, x9, x10)

inst_1410:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5755ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50cd02 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20bb5d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x545755ff; op2val:0x3fd0cd02;
op3val:0x5420bb5d; valaddr_reg:x12; val_offset:4167*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4167*FLEN/8, x13, x9, x10)

inst_1411:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5755ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50cd02 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20bb5d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x545755ff; op2val:0x3fd0cd02;
op3val:0x5420bb5d; valaddr_reg:x12; val_offset:4170*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4170*FLEN/8, x13, x9, x10)

inst_1412:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5755ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50cd02 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20bb5d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x545755ff; op2val:0x3fd0cd02;
op3val:0x5420bb5d; valaddr_reg:x12; val_offset:4173*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4173*FLEN/8, x13, x9, x10)

inst_1413:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5755ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50cd02 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20bb5d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x545755ff; op2val:0x3fd0cd02;
op3val:0x5420bb5d; valaddr_reg:x12; val_offset:4176*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4176*FLEN/8, x13, x9, x10)

inst_1414:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5755ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50cd02 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20bb5d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x545755ff; op2val:0x3fd0cd02;
op3val:0x5420bb5d; valaddr_reg:x12; val_offset:4179*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4179*FLEN/8, x13, x9, x10)

inst_1415:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4097dc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x170e7b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0e5b88 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c097dc; op2val:0x3f170e7b;
op3val:0x548e5b88; valaddr_reg:x12; val_offset:4182*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4182*FLEN/8, x13, x9, x10)

inst_1416:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4097dc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x170e7b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0e5b88 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c097dc; op2val:0x3f170e7b;
op3val:0x548e5b88; valaddr_reg:x12; val_offset:4185*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4185*FLEN/8, x13, x9, x10)

inst_1417:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4097dc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x170e7b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0e5b88 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c097dc; op2val:0x3f170e7b;
op3val:0x548e5b88; valaddr_reg:x12; val_offset:4188*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4188*FLEN/8, x13, x9, x10)

inst_1418:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4097dc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x170e7b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0e5b88 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c097dc; op2val:0x3f170e7b;
op3val:0x548e5b88; valaddr_reg:x12; val_offset:4191*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4191*FLEN/8, x13, x9, x10)

inst_1419:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4097dc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x170e7b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0e5b88 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c097dc; op2val:0x3f170e7b;
op3val:0x548e5b88; valaddr_reg:x12; val_offset:4194*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4194*FLEN/8, x13, x9, x10)

inst_1420:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x656627 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x45a36c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2772f9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e56627; op2val:0x3ec5a36c;
op3val:0x54a772f9; valaddr_reg:x12; val_offset:4197*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4197*FLEN/8, x13, x9, x10)

inst_1421:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x656627 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x45a36c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2772f9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e56627; op2val:0x3ec5a36c;
op3val:0x54a772f9; valaddr_reg:x12; val_offset:4200*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4200*FLEN/8, x13, x9, x10)

inst_1422:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x656627 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x45a36c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2772f9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e56627; op2val:0x3ec5a36c;
op3val:0x54a772f9; valaddr_reg:x12; val_offset:4203*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4203*FLEN/8, x13, x9, x10)

inst_1423:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x656627 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x45a36c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2772f9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e56627; op2val:0x3ec5a36c;
op3val:0x54a772f9; valaddr_reg:x12; val_offset:4206*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4206*FLEN/8, x13, x9, x10)

inst_1424:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x656627 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x45a36c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2772f9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54e56627; op2val:0x3ec5a36c;
op3val:0x54a772f9; valaddr_reg:x12; val_offset:4209*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4209*FLEN/8, x13, x9, x10)

inst_1425:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x427ced and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f4d5f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13216f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c27ced; op2val:0x3f0f4d5f;
op3val:0x5493216f; valaddr_reg:x12; val_offset:4212*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4212*FLEN/8, x13, x9, x10)

inst_1426:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x427ced and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f4d5f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13216f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c27ced; op2val:0x3f0f4d5f;
op3val:0x5493216f; valaddr_reg:x12; val_offset:4215*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4215*FLEN/8, x13, x9, x10)

inst_1427:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x427ced and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f4d5f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13216f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c27ced; op2val:0x3f0f4d5f;
op3val:0x5493216f; valaddr_reg:x12; val_offset:4218*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4218*FLEN/8, x13, x9, x10)

inst_1428:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x427ced and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f4d5f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13216f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c27ced; op2val:0x3f0f4d5f;
op3val:0x5493216f; valaddr_reg:x12; val_offset:4221*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4221*FLEN/8, x13, x9, x10)

inst_1429:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x427ced and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f4d5f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13216f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c27ced; op2val:0x3f0f4d5f;
op3val:0x5493216f; valaddr_reg:x12; val_offset:4224*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4224*FLEN/8, x13, x9, x10)

inst_1430:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6265c2 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x542009 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5119d9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x546265c2; op2val:0x3ed42009;
op3val:0x54d119d9; valaddr_reg:x12; val_offset:4227*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4227*FLEN/8, x13, x9, x10)

inst_1431:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6265c2 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x542009 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5119d9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x546265c2; op2val:0x3ed42009;
op3val:0x54d119d9; valaddr_reg:x12; val_offset:4230*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4230*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_11)

inst_1432:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6265c2 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x542009 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5119d9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x546265c2; op2val:0x3ed42009;
op3val:0x54d119d9; valaddr_reg:x12; val_offset:4233*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4233*FLEN/8, x13, x9, x10)

inst_1433:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6265c2 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x542009 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5119d9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x546265c2; op2val:0x3ed42009;
op3val:0x54d119d9; valaddr_reg:x12; val_offset:4236*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4236*FLEN/8, x13, x9, x10)

inst_1434:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6265c2 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x542009 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5119d9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x546265c2; op2val:0x3ed42009;
op3val:0x54d119d9; valaddr_reg:x12; val_offset:4239*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4239*FLEN/8, x13, x9, x10)

inst_1435:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x27cc22 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0d56e4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x746b74 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a7cc22; op2val:0x3d8d56e4;
op3val:0x54f46b74; valaddr_reg:x12; val_offset:4242*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4242*FLEN/8, x13, x9, x10)

inst_1436:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x27cc22 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0d56e4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x746b74 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a7cc22; op2val:0x3d8d56e4;
op3val:0x54f46b74; valaddr_reg:x12; val_offset:4245*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4245*FLEN/8, x13, x9, x10)

inst_1437:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x27cc22 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0d56e4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x746b74 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a7cc22; op2val:0x3d8d56e4;
op3val:0x54f46b74; valaddr_reg:x12; val_offset:4248*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4248*FLEN/8, x13, x9, x10)

inst_1438:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x27cc22 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0d56e4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x746b74 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a7cc22; op2val:0x3d8d56e4;
op3val:0x54f46b74; valaddr_reg:x12; val_offset:4251*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4251*FLEN/8, x13, x9, x10)

inst_1439:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x27cc22 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0d56e4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x746b74 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a7cc22; op2val:0x3d8d56e4;
op3val:0x54f46b74; valaddr_reg:x12; val_offset:4254*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4254*FLEN/8, x13, x9, x10)

inst_1440:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3a5f88 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5227d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x338051 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ba5f88; op2val:0x3ed227d5;
op3val:0x54b38051; valaddr_reg:x12; val_offset:4257*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4257*FLEN/8, x13, x9, x10)

inst_1441:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3a5f88 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5227d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x338051 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ba5f88; op2val:0x3ed227d5;
op3val:0x54b38051; valaddr_reg:x12; val_offset:4260*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4260*FLEN/8, x13, x9, x10)

inst_1442:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3a5f88 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5227d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x338051 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ba5f88; op2val:0x3ed227d5;
op3val:0x54b38051; valaddr_reg:x12; val_offset:4263*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4263*FLEN/8, x13, x9, x10)

inst_1443:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3a5f88 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5227d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x338051 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ba5f88; op2val:0x3ed227d5;
op3val:0x54b38051; valaddr_reg:x12; val_offset:4266*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4266*FLEN/8, x13, x9, x10)

inst_1444:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3a5f88 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5227d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x338051 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ba5f88; op2val:0x3ed227d5;
op3val:0x54b38051; valaddr_reg:x12; val_offset:4269*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4269*FLEN/8, x13, x9, x10)

inst_1445:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x090f4d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33b6cf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fe437 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54090f4d; op2val:0x3f33b6cf;
op3val:0x54cfe437; valaddr_reg:x12; val_offset:4272*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4272*FLEN/8, x13, x9, x10)

inst_1446:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x090f4d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33b6cf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fe437 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54090f4d; op2val:0x3f33b6cf;
op3val:0x54cfe437; valaddr_reg:x12; val_offset:4275*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4275*FLEN/8, x13, x9, x10)

inst_1447:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x090f4d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33b6cf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fe437 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54090f4d; op2val:0x3f33b6cf;
op3val:0x54cfe437; valaddr_reg:x12; val_offset:4278*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4278*FLEN/8, x13, x9, x10)

inst_1448:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x090f4d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33b6cf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fe437 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54090f4d; op2val:0x3f33b6cf;
op3val:0x54cfe437; valaddr_reg:x12; val_offset:4281*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4281*FLEN/8, x13, x9, x10)

inst_1449:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x090f4d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33b6cf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fe437 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54090f4d; op2val:0x3f33b6cf;
op3val:0x54cfe437; valaddr_reg:x12; val_offset:4284*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4284*FLEN/8, x13, x9, x10)

inst_1450:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x43caa1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x119051 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x055ed3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5443caa1; op2val:0x40119051;
op3val:0x53855ed3; valaddr_reg:x12; val_offset:4287*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4287*FLEN/8, x13, x9, x10)

inst_1451:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x43caa1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x119051 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x055ed3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5443caa1; op2val:0x40119051;
op3val:0x53855ed3; valaddr_reg:x12; val_offset:4290*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4290*FLEN/8, x13, x9, x10)

inst_1452:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x43caa1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x119051 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x055ed3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5443caa1; op2val:0x40119051;
op3val:0x53855ed3; valaddr_reg:x12; val_offset:4293*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4293*FLEN/8, x13, x9, x10)

inst_1453:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x43caa1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x119051 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x055ed3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5443caa1; op2val:0x40119051;
op3val:0x53855ed3; valaddr_reg:x12; val_offset:4296*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4296*FLEN/8, x13, x9, x10)

inst_1454:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x43caa1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x119051 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x055ed3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5443caa1; op2val:0x40119051;
op3val:0x53855ed3; valaddr_reg:x12; val_offset:4299*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4299*FLEN/8, x13, x9, x10)

inst_1455:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x0705b8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x499575 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x2d6d6e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x530705b8; op2val:0x41499575;
op3val:0x53ad6d6e; valaddr_reg:x12; val_offset:4302*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4302*FLEN/8, x13, x9, x10)

inst_1456:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x0705b8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x499575 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x2d6d6e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x530705b8; op2val:0x41499575;
op3val:0x53ad6d6e; valaddr_reg:x12; val_offset:4305*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4305*FLEN/8, x13, x9, x10)

inst_1457:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x0705b8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x499575 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x2d6d6e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x530705b8; op2val:0x41499575;
op3val:0x53ad6d6e; valaddr_reg:x12; val_offset:4308*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4308*FLEN/8, x13, x9, x10)

inst_1458:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x0705b8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x499575 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x2d6d6e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x530705b8; op2val:0x41499575;
op3val:0x53ad6d6e; valaddr_reg:x12; val_offset:4311*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4311*FLEN/8, x13, x9, x10)

inst_1459:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x0705b8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x499575 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x2d6d6e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x530705b8; op2val:0x41499575;
op3val:0x53ad6d6e; valaddr_reg:x12; val_offset:4314*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4314*FLEN/8, x13, x9, x10)

inst_1460:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x067276 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dfbce and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2d078f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54067276; op2val:0x3f9dfbce;
op3val:0x54ad078f; valaddr_reg:x12; val_offset:4317*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4317*FLEN/8, x13, x9, x10)

inst_1461:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x067276 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dfbce and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2d078f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54067276; op2val:0x3f9dfbce;
op3val:0x54ad078f; valaddr_reg:x12; val_offset:4320*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4320*FLEN/8, x13, x9, x10)

inst_1462:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x067276 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dfbce and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2d078f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54067276; op2val:0x3f9dfbce;
op3val:0x54ad078f; valaddr_reg:x12; val_offset:4323*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4323*FLEN/8, x13, x9, x10)

inst_1463:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x067276 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dfbce and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2d078f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54067276; op2val:0x3f9dfbce;
op3val:0x54ad078f; valaddr_reg:x12; val_offset:4326*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4326*FLEN/8, x13, x9, x10)

inst_1464:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x067276 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dfbce and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2d078f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54067276; op2val:0x3f9dfbce;
op3val:0x54ad078f; valaddr_reg:x12; val_offset:4329*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4329*FLEN/8, x13, x9, x10)

inst_1465:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x122fd6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x51e9a0 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x021896 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54122fd6; op2val:0x4051e9a0;
op3val:0x53021896; valaddr_reg:x12; val_offset:4332*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4332*FLEN/8, x13, x9, x10)

inst_1466:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x122fd6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x51e9a0 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x021896 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54122fd6; op2val:0x4051e9a0;
op3val:0x53021896; valaddr_reg:x12; val_offset:4335*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4335*FLEN/8, x13, x9, x10)

inst_1467:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x122fd6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x51e9a0 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x021896 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54122fd6; op2val:0x4051e9a0;
op3val:0x53021896; valaddr_reg:x12; val_offset:4338*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4338*FLEN/8, x13, x9, x10)

inst_1468:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x122fd6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x51e9a0 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x021896 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54122fd6; op2val:0x4051e9a0;
op3val:0x53021896; valaddr_reg:x12; val_offset:4341*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4341*FLEN/8, x13, x9, x10)

inst_1469:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x122fd6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x51e9a0 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x021896 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54122fd6; op2val:0x4051e9a0;
op3val:0x53021896; valaddr_reg:x12; val_offset:4344*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4344*FLEN/8, x13, x9, x10)

inst_1470:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x71e19f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6feef0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x62b366 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e71e19f; op2val:0xbfefeef0;
op3val:0x3ee2b366; valaddr_reg:x12; val_offset:4347*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4347*FLEN/8, x13, x9, x10)

inst_1471:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x71e19f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6feef0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x62b366 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e71e19f; op2val:0xbfefeef0;
op3val:0x3ee2b366; valaddr_reg:x12; val_offset:4350*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4350*FLEN/8, x13, x9, x10)

inst_1472:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x71e19f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6feef0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x62b366 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e71e19f; op2val:0xbfefeef0;
op3val:0x3ee2b366; valaddr_reg:x12; val_offset:4353*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4353*FLEN/8, x13, x9, x10)

inst_1473:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x71e19f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6feef0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x62b366 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e71e19f; op2val:0xbfefeef0;
op3val:0x3ee2b366; valaddr_reg:x12; val_offset:4356*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4356*FLEN/8, x13, x9, x10)

inst_1474:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x71e19f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6feef0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x62b366 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e71e19f; op2val:0xbfefeef0;
op3val:0x3ee2b366; valaddr_reg:x12; val_offset:4359*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4359*FLEN/8, x13, x9, x10)

inst_1475:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f793 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79e76d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7309e0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78f793; op2val:0xbf79e76d;
op3val:0x3f7309e0; valaddr_reg:x12; val_offset:4362*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4362*FLEN/8, x13, x9, x10)

inst_1476:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f793 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79e76d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7309e0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78f793; op2val:0xbf79e76d;
op3val:0x3f7309e0; valaddr_reg:x12; val_offset:4365*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4365*FLEN/8, x13, x9, x10)

inst_1477:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f793 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79e76d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7309e0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78f793; op2val:0xbf79e76d;
op3val:0x3f7309e0; valaddr_reg:x12; val_offset:4368*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4368*FLEN/8, x13, x9, x10)

inst_1478:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f793 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79e76d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7309e0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78f793; op2val:0xbf79e76d;
op3val:0x3f7309e0; valaddr_reg:x12; val_offset:4371*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4371*FLEN/8, x13, x9, x10)

inst_1479:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f793 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79e76d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7309e0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78f793; op2val:0xbf79e76d;
op3val:0x3f7309e0; valaddr_reg:x12; val_offset:4374*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4374*FLEN/8, x13, x9, x10)

inst_1480:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eb092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2fc7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2491ec and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5eb092; op2val:0xbf3d2fc7;
op3val:0x3f2491ec; valaddr_reg:x12; val_offset:4377*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4377*FLEN/8, x13, x9, x10)

inst_1481:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eb092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2fc7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2491ec and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5eb092; op2val:0xbf3d2fc7;
op3val:0x3f2491ec; valaddr_reg:x12; val_offset:4380*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4380*FLEN/8, x13, x9, x10)

inst_1482:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eb092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2fc7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2491ec and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5eb092; op2val:0xbf3d2fc7;
op3val:0x3f2491ec; valaddr_reg:x12; val_offset:4383*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4383*FLEN/8, x13, x9, x10)

inst_1483:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eb092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2fc7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2491ec and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5eb092; op2val:0xbf3d2fc7;
op3val:0x3f2491ec; valaddr_reg:x12; val_offset:4386*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4386*FLEN/8, x13, x9, x10)

inst_1484:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eb092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2fc7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2491ec and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5eb092; op2val:0xbf3d2fc7;
op3val:0x3f2491ec; valaddr_reg:x12; val_offset:4389*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4389*FLEN/8, x13, x9, x10)

inst_1485:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f9112 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x397179 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ffef4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0f9112; op2val:0xbeb97179;
op3val:0x3d4ffef4; valaddr_reg:x12; val_offset:4392*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4392*FLEN/8, x13, x9, x10)

inst_1486:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f9112 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x397179 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ffef4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0f9112; op2val:0xbeb97179;
op3val:0x3d4ffef4; valaddr_reg:x12; val_offset:4395*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4395*FLEN/8, x13, x9, x10)

inst_1487:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f9112 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x397179 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ffef4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0f9112; op2val:0xbeb97179;
op3val:0x3d4ffef4; valaddr_reg:x12; val_offset:4398*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4398*FLEN/8, x13, x9, x10)

inst_1488:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f9112 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x397179 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ffef4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0f9112; op2val:0xbeb97179;
op3val:0x3d4ffef4; valaddr_reg:x12; val_offset:4401*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4401*FLEN/8, x13, x9, x10)

inst_1489:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f9112 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x397179 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ffef4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0f9112; op2val:0xbeb97179;
op3val:0x3d4ffef4; valaddr_reg:x12; val_offset:4404*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4404*FLEN/8, x13, x9, x10)

inst_1490:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46a7b5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7da8e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x44d6d1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6a7b5; op2val:0xbffda8e9;
op3val:0x3f44d6d1; valaddr_reg:x12; val_offset:4407*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4407*FLEN/8, x13, x9, x10)

inst_1491:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46a7b5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7da8e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x44d6d1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6a7b5; op2val:0xbffda8e9;
op3val:0x3f44d6d1; valaddr_reg:x12; val_offset:4410*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4410*FLEN/8, x13, x9, x10)

inst_1492:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46a7b5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7da8e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x44d6d1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6a7b5; op2val:0xbffda8e9;
op3val:0x3f44d6d1; valaddr_reg:x12; val_offset:4413*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4413*FLEN/8, x13, x9, x10)

inst_1493:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46a7b5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7da8e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x44d6d1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6a7b5; op2val:0xbffda8e9;
op3val:0x3f44d6d1; valaddr_reg:x12; val_offset:4416*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4416*FLEN/8, x13, x9, x10)

inst_1494:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46a7b5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7da8e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x44d6d1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6a7b5; op2val:0xbffda8e9;
op3val:0x3f44d6d1; valaddr_reg:x12; val_offset:4419*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4419*FLEN/8, x13, x9, x10)

inst_1495:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x123365 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ee721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x233904 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f123365; op2val:0xbf8ee721;
op3val:0x3f233904; valaddr_reg:x12; val_offset:4422*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4422*FLEN/8, x13, x9, x10)

inst_1496:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x123365 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ee721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x233904 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f123365; op2val:0xbf8ee721;
op3val:0x3f233904; valaddr_reg:x12; val_offset:4425*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4425*FLEN/8, x13, x9, x10)

inst_1497:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x123365 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ee721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x233904 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f123365; op2val:0xbf8ee721;
op3val:0x3f233904; valaddr_reg:x12; val_offset:4428*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4428*FLEN/8, x13, x9, x10)

inst_1498:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x123365 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ee721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x233904 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f123365; op2val:0xbf8ee721;
op3val:0x3f233904; valaddr_reg:x12; val_offset:4431*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4431*FLEN/8, x13, x9, x10)

inst_1499:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x123365 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ee721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x233904 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f123365; op2val:0xbf8ee721;
op3val:0x3f233904; valaddr_reg:x12; val_offset:4434*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4434*FLEN/8, x13, x9, x10)

inst_1500:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b6cbc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc599 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cd058 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2b6cbc; op2val:0xbfbcc599;
op3val:0x3f7cd058; valaddr_reg:x12; val_offset:4437*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4437*FLEN/8, x13, x9, x10)

inst_1501:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b6cbc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc599 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cd058 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2b6cbc; op2val:0xbfbcc599;
op3val:0x3f7cd058; valaddr_reg:x12; val_offset:4440*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4440*FLEN/8, x13, x9, x10)

inst_1502:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b6cbc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc599 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cd058 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2b6cbc; op2val:0xbfbcc599;
op3val:0x3f7cd058; valaddr_reg:x12; val_offset:4443*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4443*FLEN/8, x13, x9, x10)

inst_1503:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b6cbc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc599 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cd058 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2b6cbc; op2val:0xbfbcc599;
op3val:0x3f7cd058; valaddr_reg:x12; val_offset:4446*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4446*FLEN/8, x13, x9, x10)

inst_1504:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b6cbc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc599 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cd058 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2b6cbc; op2val:0xbfbcc599;
op3val:0x3f7cd058; valaddr_reg:x12; val_offset:4449*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4449*FLEN/8, x13, x9, x10)

inst_1505:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54c6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x553b99 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x313b16 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed4c6f9; op2val:0xbed53b99;
op3val:0x3e313b16; valaddr_reg:x12; val_offset:4452*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4452*FLEN/8, x13, x9, x10)

inst_1506:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54c6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x553b99 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x313b16 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed4c6f9; op2val:0xbed53b99;
op3val:0x3e313b16; valaddr_reg:x12; val_offset:4455*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4455*FLEN/8, x13, x9, x10)

inst_1507:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54c6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x553b99 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x313b16 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed4c6f9; op2val:0xbed53b99;
op3val:0x3e313b16; valaddr_reg:x12; val_offset:4458*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4458*FLEN/8, x13, x9, x10)

inst_1508:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54c6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x553b99 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x313b16 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed4c6f9; op2val:0xbed53b99;
op3val:0x3e313b16; valaddr_reg:x12; val_offset:4461*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4461*FLEN/8, x13, x9, x10)

inst_1509:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54c6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x553b99 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x313b16 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed4c6f9; op2val:0xbed53b99;
op3val:0x3e313b16; valaddr_reg:x12; val_offset:4464*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4464*FLEN/8, x13, x9, x10)

inst_1510:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0bdc86 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x679a9d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8bdc86; op2val:0xc053f645;
op3val:0x3f679a9d; valaddr_reg:x12; val_offset:4467*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4467*FLEN/8, x13, x9, x10)

inst_1511:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0bdc86 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x679a9d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8bdc86; op2val:0xc053f645;
op3val:0x3f679a9d; valaddr_reg:x12; val_offset:4470*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4470*FLEN/8, x13, x9, x10)

inst_1512:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0bdc86 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x679a9d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8bdc86; op2val:0xc053f645;
op3val:0x3f679a9d; valaddr_reg:x12; val_offset:4473*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4473*FLEN/8, x13, x9, x10)

inst_1513:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0bdc86 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x679a9d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8bdc86; op2val:0xc053f645;
op3val:0x3f679a9d; valaddr_reg:x12; val_offset:4476*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4476*FLEN/8, x13, x9, x10)

inst_1514:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0bdc86 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x679a9d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8bdc86; op2val:0xc053f645;
op3val:0x3f679a9d; valaddr_reg:x12; val_offset:4479*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4479*FLEN/8, x13, x9, x10)

inst_1515:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x707ae8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ddf8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x542c89 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef07ae8; op2val:0xbfe1ddf8;
op3val:0x3f542c89; valaddr_reg:x12; val_offset:4482*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4482*FLEN/8, x13, x9, x10)

inst_1516:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x707ae8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ddf8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x542c89 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef07ae8; op2val:0xbfe1ddf8;
op3val:0x3f542c89; valaddr_reg:x12; val_offset:4485*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4485*FLEN/8, x13, x9, x10)

inst_1517:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x707ae8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ddf8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x542c89 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef07ae8; op2val:0xbfe1ddf8;
op3val:0x3f542c89; valaddr_reg:x12; val_offset:4488*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4488*FLEN/8, x13, x9, x10)

inst_1518:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x707ae8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ddf8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x542c89 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef07ae8; op2val:0xbfe1ddf8;
op3val:0x3f542c89; valaddr_reg:x12; val_offset:4491*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4491*FLEN/8, x13, x9, x10)

inst_1519:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x707ae8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ddf8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x542c89 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef07ae8; op2val:0xbfe1ddf8;
op3val:0x3f542c89; valaddr_reg:x12; val_offset:4494*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4494*FLEN/8, x13, x9, x10)

inst_1520:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c505 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73f40a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dc4d6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94c505; op2val:0xbff3f40a;
op3val:0x3f0dc4d6; valaddr_reg:x12; val_offset:4497*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4497*FLEN/8, x13, x9, x10)

inst_1521:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c505 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73f40a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dc4d6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94c505; op2val:0xbff3f40a;
op3val:0x3f0dc4d6; valaddr_reg:x12; val_offset:4500*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4500*FLEN/8, x13, x9, x10)

inst_1522:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c505 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73f40a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dc4d6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94c505; op2val:0xbff3f40a;
op3val:0x3f0dc4d6; valaddr_reg:x12; val_offset:4503*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4503*FLEN/8, x13, x9, x10)

inst_1523:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c505 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73f40a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dc4d6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94c505; op2val:0xbff3f40a;
op3val:0x3f0dc4d6; valaddr_reg:x12; val_offset:4506*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4506*FLEN/8, x13, x9, x10)

inst_1524:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c505 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73f40a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dc4d6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94c505; op2val:0xbff3f40a;
op3val:0x3f0dc4d6; valaddr_reg:x12; val_offset:4509*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4509*FLEN/8, x13, x9, x10)

inst_1525:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bc007 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x55b282 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x522651 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d7bc007; op2val:0xc055b282;
op3val:0x3e522651; valaddr_reg:x12; val_offset:4512*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4512*FLEN/8, x13, x9, x10)

inst_1526:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bc007 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x55b282 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x522651 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d7bc007; op2val:0xc055b282;
op3val:0x3e522651; valaddr_reg:x12; val_offset:4515*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4515*FLEN/8, x13, x9, x10)

inst_1527:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bc007 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x55b282 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x522651 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d7bc007; op2val:0xc055b282;
op3val:0x3e522651; valaddr_reg:x12; val_offset:4518*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4518*FLEN/8, x13, x9, x10)

inst_1528:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bc007 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x55b282 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x522651 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d7bc007; op2val:0xc055b282;
op3val:0x3e522651; valaddr_reg:x12; val_offset:4521*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4521*FLEN/8, x13, x9, x10)

inst_1529:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bc007 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x55b282 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x522651 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d7bc007; op2val:0xc055b282;
op3val:0x3e522651; valaddr_reg:x12; val_offset:4524*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4524*FLEN/8, x13, x9, x10)

inst_1530:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61bd75 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4643a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ed42e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61bd75; op2val:0xbf4643a4;
op3val:0x3f2ed42e; valaddr_reg:x12; val_offset:4527*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4527*FLEN/8, x13, x9, x10)

inst_1531:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61bd75 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4643a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ed42e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61bd75; op2val:0xbf4643a4;
op3val:0x3f2ed42e; valaddr_reg:x12; val_offset:4530*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4530*FLEN/8, x13, x9, x10)

inst_1532:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61bd75 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4643a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ed42e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61bd75; op2val:0xbf4643a4;
op3val:0x3f2ed42e; valaddr_reg:x12; val_offset:4533*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4533*FLEN/8, x13, x9, x10)

inst_1533:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61bd75 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4643a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ed42e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61bd75; op2val:0xbf4643a4;
op3val:0x3f2ed42e; valaddr_reg:x12; val_offset:4536*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4536*FLEN/8, x13, x9, x10)

inst_1534:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61bd75 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4643a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ed42e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61bd75; op2val:0xbf4643a4;
op3val:0x3f2ed42e; valaddr_reg:x12; val_offset:4539*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4539*FLEN/8, x13, x9, x10)

inst_1535:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2e18e5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4ae60b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09fc17 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dae18e5; op2val:0xc0cae60b;
op3val:0x3f09fc17; valaddr_reg:x12; val_offset:4542*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4542*FLEN/8, x13, x9, x10)

inst_1536:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2e18e5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4ae60b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09fc17 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dae18e5; op2val:0xc0cae60b;
op3val:0x3f09fc17; valaddr_reg:x12; val_offset:4545*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4545*FLEN/8, x13, x9, x10)

inst_1537:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2e18e5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4ae60b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09fc17 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dae18e5; op2val:0xc0cae60b;
op3val:0x3f09fc17; valaddr_reg:x12; val_offset:4548*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4548*FLEN/8, x13, x9, x10)

inst_1538:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2e18e5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4ae60b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09fc17 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dae18e5; op2val:0xc0cae60b;
op3val:0x3f09fc17; valaddr_reg:x12; val_offset:4551*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4551*FLEN/8, x13, x9, x10)

inst_1539:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2e18e5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4ae60b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09fc17 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dae18e5; op2val:0xc0cae60b;
op3val:0x3f09fc17; valaddr_reg:x12; val_offset:4554*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4554*FLEN/8, x13, x9, x10)

inst_1540:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10db40 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7cb5f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0efeca and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f10db40; op2val:0xbf7cb5f7;
op3val:0x3f0efeca; valaddr_reg:x12; val_offset:4557*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4557*FLEN/8, x13, x9, x10)

inst_1541:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10db40 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7cb5f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0efeca and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f10db40; op2val:0xbf7cb5f7;
op3val:0x3f0efeca; valaddr_reg:x12; val_offset:4560*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4560*FLEN/8, x13, x9, x10)

inst_1542:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10db40 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7cb5f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0efeca and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f10db40; op2val:0xbf7cb5f7;
op3val:0x3f0efeca; valaddr_reg:x12; val_offset:4563*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4563*FLEN/8, x13, x9, x10)

inst_1543:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10db40 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7cb5f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0efeca and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f10db40; op2val:0xbf7cb5f7;
op3val:0x3f0efeca; valaddr_reg:x12; val_offset:4566*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4566*FLEN/8, x13, x9, x10)

inst_1544:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10db40 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7cb5f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0efeca and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f10db40; op2val:0xbf7cb5f7;
op3val:0x3f0efeca; valaddr_reg:x12; val_offset:4569*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4569*FLEN/8, x13, x9, x10)

inst_1545:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e143b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0c4928 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x027719 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6e143b; op2val:0xbe8c4928;
op3val:0x3d827719; valaddr_reg:x12; val_offset:4572*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4572*FLEN/8, x13, x9, x10)

inst_1546:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e143b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0c4928 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x027719 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6e143b; op2val:0xbe8c4928;
op3val:0x3d827719; valaddr_reg:x12; val_offset:4575*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4575*FLEN/8, x13, x9, x10)

inst_1547:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e143b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0c4928 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x027719 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6e143b; op2val:0xbe8c4928;
op3val:0x3d827719; valaddr_reg:x12; val_offset:4578*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4578*FLEN/8, x13, x9, x10)

inst_1548:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e143b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0c4928 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x027719 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6e143b; op2val:0xbe8c4928;
op3val:0x3d827719; valaddr_reg:x12; val_offset:4581*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4581*FLEN/8, x13, x9, x10)

inst_1549:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e143b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0c4928 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x027719 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6e143b; op2val:0xbe8c4928;
op3val:0x3d827719; valaddr_reg:x12; val_offset:4584*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4584*FLEN/8, x13, x9, x10)

inst_1550:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f4ee6 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x04eaf5 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x7880a6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eef4ee6; op2val:0xbd84eaf5;
op3val:0x3cf880a6; valaddr_reg:x12; val_offset:4587*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4587*FLEN/8, x13, x9, x10)

inst_1551:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f4ee6 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x04eaf5 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x7880a6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eef4ee6; op2val:0xbd84eaf5;
op3val:0x3cf880a6; valaddr_reg:x12; val_offset:4590*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4590*FLEN/8, x13, x9, x10)

inst_1552:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f4ee6 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x04eaf5 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x7880a6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eef4ee6; op2val:0xbd84eaf5;
op3val:0x3cf880a6; valaddr_reg:x12; val_offset:4593*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4593*FLEN/8, x13, x9, x10)

inst_1553:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f4ee6 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x04eaf5 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x7880a6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eef4ee6; op2val:0xbd84eaf5;
op3val:0x3cf880a6; valaddr_reg:x12; val_offset:4596*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4596*FLEN/8, x13, x9, x10)

inst_1554:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f4ee6 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x04eaf5 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x7880a6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eef4ee6; op2val:0xbd84eaf5;
op3val:0x3cf880a6; valaddr_reg:x12; val_offset:4599*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4599*FLEN/8, x13, x9, x10)

inst_1555:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ed70e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e03e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x657ce4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eced70e; op2val:0xc00e03e8;
op3val:0x3f657ce4; valaddr_reg:x12; val_offset:4602*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4602*FLEN/8, x13, x9, x10)

inst_1556:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ed70e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e03e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x657ce4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eced70e; op2val:0xc00e03e8;
op3val:0x3f657ce4; valaddr_reg:x12; val_offset:4605*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4605*FLEN/8, x13, x9, x10)

inst_1557:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ed70e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e03e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x657ce4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eced70e; op2val:0xc00e03e8;
op3val:0x3f657ce4; valaddr_reg:x12; val_offset:4608*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4608*FLEN/8, x13, x9, x10)

inst_1558:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ed70e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e03e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x657ce4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eced70e; op2val:0xc00e03e8;
op3val:0x3f657ce4; valaddr_reg:x12; val_offset:4611*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4611*FLEN/8, x13, x9, x10)

inst_1559:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ed70e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e03e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x657ce4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eced70e; op2val:0xc00e03e8;
op3val:0x3f657ce4; valaddr_reg:x12; val_offset:4614*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4614*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_12)

inst_1560:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3e32ec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4808f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x149e72 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3e32ec; op2val:0xc04808f7;
op3val:0x3f149e72; valaddr_reg:x12; val_offset:4617*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4617*FLEN/8, x13, x9, x10)

inst_1561:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3e32ec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4808f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x149e72 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3e32ec; op2val:0xc04808f7;
op3val:0x3f149e72; valaddr_reg:x12; val_offset:4620*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4620*FLEN/8, x13, x9, x10)

inst_1562:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3e32ec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4808f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x149e72 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3e32ec; op2val:0xc04808f7;
op3val:0x3f149e72; valaddr_reg:x12; val_offset:4623*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4623*FLEN/8, x13, x9, x10)

inst_1563:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3e32ec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4808f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x149e72 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3e32ec; op2val:0xc04808f7;
op3val:0x3f149e72; valaddr_reg:x12; val_offset:4626*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4626*FLEN/8, x13, x9, x10)

inst_1564:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3e32ec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4808f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x149e72 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3e32ec; op2val:0xc04808f7;
op3val:0x3f149e72; valaddr_reg:x12; val_offset:4629*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4629*FLEN/8, x13, x9, x10)

inst_1565:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x729bba and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3e1602 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x34246f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f729bba; op2val:0xbcbe1602;
op3val:0x3cb4246f; valaddr_reg:x12; val_offset:4632*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4632*FLEN/8, x13, x9, x10)

inst_1566:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x729bba and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3e1602 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x34246f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f729bba; op2val:0xbcbe1602;
op3val:0x3cb4246f; valaddr_reg:x12; val_offset:4635*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4635*FLEN/8, x13, x9, x10)

inst_1567:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x729bba and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3e1602 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x34246f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f729bba; op2val:0xbcbe1602;
op3val:0x3cb4246f; valaddr_reg:x12; val_offset:4638*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4638*FLEN/8, x13, x9, x10)

inst_1568:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x729bba and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3e1602 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x34246f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f729bba; op2val:0xbcbe1602;
op3val:0x3cb4246f; valaddr_reg:x12; val_offset:4641*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4641*FLEN/8, x13, x9, x10)

inst_1569:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x729bba and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3e1602 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x34246f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f729bba; op2val:0xbcbe1602;
op3val:0x3cb4246f; valaddr_reg:x12; val_offset:4644*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4644*FLEN/8, x13, x9, x10)

inst_1570:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7795ca and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5ff11c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5894ab and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7795ca; op2val:0xbedff11c;
op3val:0x3ed894ab; valaddr_reg:x12; val_offset:4647*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4647*FLEN/8, x13, x9, x10)

inst_1571:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7795ca and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5ff11c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5894ab and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7795ca; op2val:0xbedff11c;
op3val:0x3ed894ab; valaddr_reg:x12; val_offset:4650*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4650*FLEN/8, x13, x9, x10)

inst_1572:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7795ca and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5ff11c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5894ab and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7795ca; op2val:0xbedff11c;
op3val:0x3ed894ab; valaddr_reg:x12; val_offset:4653*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4653*FLEN/8, x13, x9, x10)

inst_1573:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7795ca and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5ff11c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5894ab and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7795ca; op2val:0xbedff11c;
op3val:0x3ed894ab; valaddr_reg:x12; val_offset:4656*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4656*FLEN/8, x13, x9, x10)

inst_1574:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7795ca and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5ff11c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5894ab and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7795ca; op2val:0xbedff11c;
op3val:0x3ed894ab; valaddr_reg:x12; val_offset:4659*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4659*FLEN/8, x13, x9, x10)

inst_1575:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x049c05 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x69ae39 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x721881 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f049c05; op2val:0xbe69ae39;
op3val:0x3df21881; valaddr_reg:x12; val_offset:4662*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4662*FLEN/8, x13, x9, x10)

inst_1576:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x049c05 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x69ae39 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x721881 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f049c05; op2val:0xbe69ae39;
op3val:0x3df21881; valaddr_reg:x12; val_offset:4665*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4665*FLEN/8, x13, x9, x10)

inst_1577:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x049c05 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x69ae39 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x721881 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f049c05; op2val:0xbe69ae39;
op3val:0x3df21881; valaddr_reg:x12; val_offset:4668*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4668*FLEN/8, x13, x9, x10)

inst_1578:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x049c05 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x69ae39 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x721881 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f049c05; op2val:0xbe69ae39;
op3val:0x3df21881; valaddr_reg:x12; val_offset:4671*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4671*FLEN/8, x13, x9, x10)

inst_1579:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x049c05 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x69ae39 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x721881 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f049c05; op2val:0xbe69ae39;
op3val:0x3df21881; valaddr_reg:x12; val_offset:4674*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4674*FLEN/8, x13, x9, x10)

inst_1580:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b76d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2553ef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48cd24 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b76d7; op2val:0xbfa553ef;
op3val:0x3f48cd24; valaddr_reg:x12; val_offset:4677*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4677*FLEN/8, x13, x9, x10)

inst_1581:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b76d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2553ef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48cd24 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b76d7; op2val:0xbfa553ef;
op3val:0x3f48cd24; valaddr_reg:x12; val_offset:4680*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4680*FLEN/8, x13, x9, x10)

inst_1582:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b76d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2553ef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48cd24 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b76d7; op2val:0xbfa553ef;
op3val:0x3f48cd24; valaddr_reg:x12; val_offset:4683*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4683*FLEN/8, x13, x9, x10)

inst_1583:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b76d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2553ef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48cd24 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b76d7; op2val:0xbfa553ef;
op3val:0x3f48cd24; valaddr_reg:x12; val_offset:4686*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4686*FLEN/8, x13, x9, x10)

inst_1584:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b76d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2553ef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48cd24 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b76d7; op2val:0xbfa553ef;
op3val:0x3f48cd24; valaddr_reg:x12; val_offset:4689*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4689*FLEN/8, x13, x9, x10)

inst_1585:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x391398 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0d6fa4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8103 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f391398; op2val:0xbf8d6fa4;
op3val:0x3f4c8103; valaddr_reg:x12; val_offset:4692*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4692*FLEN/8, x13, x9, x10)

inst_1586:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x391398 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0d6fa4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8103 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f391398; op2val:0xbf8d6fa4;
op3val:0x3f4c8103; valaddr_reg:x12; val_offset:4695*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4695*FLEN/8, x13, x9, x10)

inst_1587:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x391398 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0d6fa4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8103 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f391398; op2val:0xbf8d6fa4;
op3val:0x3f4c8103; valaddr_reg:x12; val_offset:4698*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4698*FLEN/8, x13, x9, x10)

inst_1588:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x391398 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0d6fa4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8103 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f391398; op2val:0xbf8d6fa4;
op3val:0x3f4c8103; valaddr_reg:x12; val_offset:4701*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4701*FLEN/8, x13, x9, x10)

inst_1589:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x391398 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0d6fa4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8103 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f391398; op2val:0xbf8d6fa4;
op3val:0x3f4c8103; valaddr_reg:x12; val_offset:4704*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4704*FLEN/8, x13, x9, x10)

inst_1590:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6008d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c18fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x249c5a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee008d7; op2val:0xbfbc18fa;
op3val:0x3f249c5a; valaddr_reg:x12; val_offset:4707*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4707*FLEN/8, x13, x9, x10)

inst_1591:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6008d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c18fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x249c5a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee008d7; op2val:0xbfbc18fa;
op3val:0x3f249c5a; valaddr_reg:x12; val_offset:4710*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4710*FLEN/8, x13, x9, x10)

inst_1592:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6008d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c18fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x249c5a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee008d7; op2val:0xbfbc18fa;
op3val:0x3f249c5a; valaddr_reg:x12; val_offset:4713*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4713*FLEN/8, x13, x9, x10)

inst_1593:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6008d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c18fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x249c5a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee008d7; op2val:0xbfbc18fa;
op3val:0x3f249c5a; valaddr_reg:x12; val_offset:4716*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4716*FLEN/8, x13, x9, x10)

inst_1594:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6008d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c18fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x249c5a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee008d7; op2val:0xbfbc18fa;
op3val:0x3f249c5a; valaddr_reg:x12; val_offset:4719*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4719*FLEN/8, x13, x9, x10)

inst_1595:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ee4d9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4300ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42293d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e7ee4d9; op2val:0xc04300ed;
op3val:0x3f42293d; valaddr_reg:x12; val_offset:4722*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4722*FLEN/8, x13, x9, x10)

inst_1596:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ee4d9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4300ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42293d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e7ee4d9; op2val:0xc04300ed;
op3val:0x3f42293d; valaddr_reg:x12; val_offset:4725*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4725*FLEN/8, x13, x9, x10)

inst_1597:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ee4d9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4300ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42293d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e7ee4d9; op2val:0xc04300ed;
op3val:0x3f42293d; valaddr_reg:x12; val_offset:4728*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4728*FLEN/8, x13, x9, x10)

inst_1598:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ee4d9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4300ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42293d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e7ee4d9; op2val:0xc04300ed;
op3val:0x3f42293d; valaddr_reg:x12; val_offset:4731*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4731*FLEN/8, x13, x9, x10)

inst_1599:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ee4d9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4300ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42293d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e7ee4d9; op2val:0xc04300ed;
op3val:0x3f42293d; valaddr_reg:x12; val_offset:4734*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4734*FLEN/8, x13, x9, x10)

inst_1600:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25f257 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x147187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x407365 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f25f257; op2val:0xbf947187;
op3val:0x3f407365; valaddr_reg:x12; val_offset:4737*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4737*FLEN/8, x13, x9, x10)

inst_1601:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25f257 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x147187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x407365 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f25f257; op2val:0xbf947187;
op3val:0x3f407365; valaddr_reg:x12; val_offset:4740*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4740*FLEN/8, x13, x9, x10)

inst_1602:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25f257 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x147187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x407365 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f25f257; op2val:0xbf947187;
op3val:0x3f407365; valaddr_reg:x12; val_offset:4743*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4743*FLEN/8, x13, x9, x10)

inst_1603:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25f257 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x147187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x407365 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f25f257; op2val:0xbf947187;
op3val:0x3f407365; valaddr_reg:x12; val_offset:4746*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4746*FLEN/8, x13, x9, x10)

inst_1604:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25f257 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x147187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x407365 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f25f257; op2val:0xbf947187;
op3val:0x3f407365; valaddr_reg:x12; val_offset:4749*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4749*FLEN/8, x13, x9, x10)

inst_1605:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1002b1 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x116f11 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x23a003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9002b1; op2val:0xc1116f11;
op3val:0x3e23a003; valaddr_reg:x12; val_offset:4752*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4752*FLEN/8, x13, x9, x10)

inst_1606:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1002b1 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x116f11 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x23a003 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9002b1; op2val:0xc1116f11;
op3val:0x3e23a003; valaddr_reg:x12; val_offset:4755*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4755*FLEN/8, x13, x9, x10)

inst_1607:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1002b1 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x116f11 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x23a003 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9002b1; op2val:0xc1116f11;
op3val:0x3e23a003; valaddr_reg:x12; val_offset:4758*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4758*FLEN/8, x13, x9, x10)

inst_1608:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1002b1 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x116f11 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x23a003 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9002b1; op2val:0xc1116f11;
op3val:0x3e23a003; valaddr_reg:x12; val_offset:4761*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4761*FLEN/8, x13, x9, x10)

inst_1609:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1002b1 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x116f11 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x23a003 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c9002b1; op2val:0xc1116f11;
op3val:0x3e23a003; valaddr_reg:x12; val_offset:4764*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4764*FLEN/8, x13, x9, x10)

inst_1610:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x19c511 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22bdaf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43814a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e19c511; op2val:0xc022bdaf;
op3val:0x3ec3814a; valaddr_reg:x12; val_offset:4767*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4767*FLEN/8, x13, x9, x10)

inst_1611:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x19c511 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22bdaf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43814a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e19c511; op2val:0xc022bdaf;
op3val:0x3ec3814a; valaddr_reg:x12; val_offset:4770*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4770*FLEN/8, x13, x9, x10)

inst_1612:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x19c511 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22bdaf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43814a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e19c511; op2val:0xc022bdaf;
op3val:0x3ec3814a; valaddr_reg:x12; val_offset:4773*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4773*FLEN/8, x13, x9, x10)

inst_1613:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x19c511 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22bdaf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43814a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e19c511; op2val:0xc022bdaf;
op3val:0x3ec3814a; valaddr_reg:x12; val_offset:4776*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4776*FLEN/8, x13, x9, x10)

inst_1614:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x19c511 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22bdaf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43814a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e19c511; op2val:0xc022bdaf;
op3val:0x3ec3814a; valaddr_reg:x12; val_offset:4779*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4779*FLEN/8, x13, x9, x10)

inst_1615:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x196169 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3713a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b60cd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f196169; op2val:0xbfb713a4;
op3val:0x3f5b60cd; valaddr_reg:x12; val_offset:4782*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4782*FLEN/8, x13, x9, x10)

inst_1616:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x196169 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3713a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b60cd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f196169; op2val:0xbfb713a4;
op3val:0x3f5b60cd; valaddr_reg:x12; val_offset:4785*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4785*FLEN/8, x13, x9, x10)

inst_1617:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x196169 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3713a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b60cd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f196169; op2val:0xbfb713a4;
op3val:0x3f5b60cd; valaddr_reg:x12; val_offset:4788*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4788*FLEN/8, x13, x9, x10)

inst_1618:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x196169 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3713a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b60cd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f196169; op2val:0xbfb713a4;
op3val:0x3f5b60cd; valaddr_reg:x12; val_offset:4791*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4791*FLEN/8, x13, x9, x10)

inst_1619:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x196169 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3713a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b60cd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f196169; op2val:0xbfb713a4;
op3val:0x3f5b60cd; valaddr_reg:x12; val_offset:4794*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4794*FLEN/8, x13, x9, x10)

inst_1620:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c5c56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41df4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0287f4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2c5c56; op2val:0xc041df4b;
op3val:0x3f0287f4; valaddr_reg:x12; val_offset:4797*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4797*FLEN/8, x13, x9, x10)

inst_1621:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c5c56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41df4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0287f4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2c5c56; op2val:0xc041df4b;
op3val:0x3f0287f4; valaddr_reg:x12; val_offset:4800*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4800*FLEN/8, x13, x9, x10)

inst_1622:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c5c56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41df4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0287f4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2c5c56; op2val:0xc041df4b;
op3val:0x3f0287f4; valaddr_reg:x12; val_offset:4803*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4803*FLEN/8, x13, x9, x10)

inst_1623:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c5c56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41df4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0287f4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2c5c56; op2val:0xc041df4b;
op3val:0x3f0287f4; valaddr_reg:x12; val_offset:4806*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4806*FLEN/8, x13, x9, x10)

inst_1624:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c5c56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41df4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0287f4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2c5c56; op2val:0xc041df4b;
op3val:0x3f0287f4; valaddr_reg:x12; val_offset:4809*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4809*FLEN/8, x13, x9, x10)

inst_1625:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x765668 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ceeba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5497f9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f765668; op2val:0xbf5ceeba;
op3val:0x3f5497f9; valaddr_reg:x12; val_offset:4812*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4812*FLEN/8, x13, x9, x10)

inst_1626:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x765668 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ceeba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5497f9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f765668; op2val:0xbf5ceeba;
op3val:0x3f5497f9; valaddr_reg:x12; val_offset:4815*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4815*FLEN/8, x13, x9, x10)

inst_1627:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x765668 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ceeba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5497f9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f765668; op2val:0xbf5ceeba;
op3val:0x3f5497f9; valaddr_reg:x12; val_offset:4818*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4818*FLEN/8, x13, x9, x10)

inst_1628:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x765668 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ceeba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5497f9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f765668; op2val:0xbf5ceeba;
op3val:0x3f5497f9; valaddr_reg:x12; val_offset:4821*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4821*FLEN/8, x13, x9, x10)

inst_1629:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x765668 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ceeba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5497f9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f765668; op2val:0xbf5ceeba;
op3val:0x3f5497f9; valaddr_reg:x12; val_offset:4824*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4824*FLEN/8, x13, x9, x10)

inst_1630:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66ba48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x205fba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x108ab4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f66ba48; op2val:0xbea05fba;
op3val:0x3e908ab4; valaddr_reg:x12; val_offset:4827*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4827*FLEN/8, x13, x9, x10)

inst_1631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66ba48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x205fba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x108ab4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f66ba48; op2val:0xbea05fba;
op3val:0x3e908ab4; valaddr_reg:x12; val_offset:4830*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4830*FLEN/8, x13, x9, x10)

inst_1632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66ba48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x205fba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x108ab4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f66ba48; op2val:0xbea05fba;
op3val:0x3e908ab4; valaddr_reg:x12; val_offset:4833*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4833*FLEN/8, x13, x9, x10)

inst_1633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66ba48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x205fba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x108ab4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f66ba48; op2val:0xbea05fba;
op3val:0x3e908ab4; valaddr_reg:x12; val_offset:4836*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4836*FLEN/8, x13, x9, x10)

inst_1634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66ba48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x205fba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x108ab4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f66ba48; op2val:0xbea05fba;
op3val:0x3e908ab4; valaddr_reg:x12; val_offset:4839*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4839*FLEN/8, x13, x9, x10)

inst_1635:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c6d8b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0057ab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4cf98f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dcc6d8b; op2val:0xc10057ab;
op3val:0x3f4cf98f; valaddr_reg:x12; val_offset:4842*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4842*FLEN/8, x13, x9, x10)

inst_1636:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c6d8b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0057ab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4cf98f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dcc6d8b; op2val:0xc10057ab;
op3val:0x3f4cf98f; valaddr_reg:x12; val_offset:4845*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4845*FLEN/8, x13, x9, x10)

inst_1637:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c6d8b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0057ab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4cf98f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dcc6d8b; op2val:0xc10057ab;
op3val:0x3f4cf98f; valaddr_reg:x12; val_offset:4848*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4848*FLEN/8, x13, x9, x10)

inst_1638:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c6d8b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0057ab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4cf98f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dcc6d8b; op2val:0xc10057ab;
op3val:0x3f4cf98f; valaddr_reg:x12; val_offset:4851*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4851*FLEN/8, x13, x9, x10)

inst_1639:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c6d8b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0057ab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4cf98f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dcc6d8b; op2val:0xc10057ab;
op3val:0x3f4cf98f; valaddr_reg:x12; val_offset:4854*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4854*FLEN/8, x13, x9, x10)

inst_1640:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fd596 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x552489 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d0a5f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fd596; op2val:0xc0552489;
op3val:0x3f2d0a5f; valaddr_reg:x12; val_offset:4857*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4857*FLEN/8, x13, x9, x10)

inst_1641:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fd596 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x552489 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d0a5f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fd596; op2val:0xc0552489;
op3val:0x3f2d0a5f; valaddr_reg:x12; val_offset:4860*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4860*FLEN/8, x13, x9, x10)

inst_1642:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fd596 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x552489 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d0a5f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fd596; op2val:0xc0552489;
op3val:0x3f2d0a5f; valaddr_reg:x12; val_offset:4863*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4863*FLEN/8, x13, x9, x10)

inst_1643:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fd596 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x552489 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d0a5f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fd596; op2val:0xc0552489;
op3val:0x3f2d0a5f; valaddr_reg:x12; val_offset:4866*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4866*FLEN/8, x13, x9, x10)

inst_1644:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fd596 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x552489 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d0a5f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4fd596; op2val:0xc0552489;
op3val:0x3f2d0a5f; valaddr_reg:x12; val_offset:4869*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4869*FLEN/8, x13, x9, x10)

inst_1645:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225a77 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5d03ae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c2a6e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea25a77; op2val:0xbedd03ae;
op3val:0x3e0c2a6e; valaddr_reg:x12; val_offset:4872*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4872*FLEN/8, x13, x9, x10)

inst_1646:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225a77 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5d03ae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c2a6e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea25a77; op2val:0xbedd03ae;
op3val:0x3e0c2a6e; valaddr_reg:x12; val_offset:4875*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4875*FLEN/8, x13, x9, x10)

inst_1647:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225a77 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5d03ae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c2a6e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea25a77; op2val:0xbedd03ae;
op3val:0x3e0c2a6e; valaddr_reg:x12; val_offset:4878*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4878*FLEN/8, x13, x9, x10)

inst_1648:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225a77 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5d03ae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c2a6e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea25a77; op2val:0xbedd03ae;
op3val:0x3e0c2a6e; valaddr_reg:x12; val_offset:4881*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4881*FLEN/8, x13, x9, x10)

inst_1649:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225a77 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5d03ae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c2a6e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea25a77; op2val:0xbedd03ae;
op3val:0x3e0c2a6e; valaddr_reg:x12; val_offset:4884*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4884*FLEN/8, x13, x9, x10)

inst_1650:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40f897 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x079831 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c6ba2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec0f897; op2val:0xbf079831;
op3val:0x3e4c6ba2; valaddr_reg:x12; val_offset:4887*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4887*FLEN/8, x13, x9, x10)

inst_1651:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40f897 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x079831 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c6ba2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec0f897; op2val:0xbf079831;
op3val:0x3e4c6ba2; valaddr_reg:x12; val_offset:4890*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4890*FLEN/8, x13, x9, x10)

inst_1652:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40f897 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x079831 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c6ba2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec0f897; op2val:0xbf079831;
op3val:0x3e4c6ba2; valaddr_reg:x12; val_offset:4893*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4893*FLEN/8, x13, x9, x10)

inst_1653:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40f897 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x079831 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c6ba2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec0f897; op2val:0xbf079831;
op3val:0x3e4c6ba2; valaddr_reg:x12; val_offset:4896*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4896*FLEN/8, x13, x9, x10)

inst_1654:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40f897 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x079831 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c6ba2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec0f897; op2val:0xbf079831;
op3val:0x3e4c6ba2; valaddr_reg:x12; val_offset:4899*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4899*FLEN/8, x13, x9, x10)

inst_1655:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fa1ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b33ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d6b41 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1fa1ee; op2val:0xbfcb33ac;
op3val:0x3f7d6b41; valaddr_reg:x12; val_offset:4902*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4902*FLEN/8, x13, x9, x10)

inst_1656:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fa1ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b33ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d6b41 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1fa1ee; op2val:0xbfcb33ac;
op3val:0x3f7d6b41; valaddr_reg:x12; val_offset:4905*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4905*FLEN/8, x13, x9, x10)

inst_1657:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fa1ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b33ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d6b41 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1fa1ee; op2val:0xbfcb33ac;
op3val:0x3f7d6b41; valaddr_reg:x12; val_offset:4908*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4908*FLEN/8, x13, x9, x10)

inst_1658:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fa1ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b33ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d6b41 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1fa1ee; op2val:0xbfcb33ac;
op3val:0x3f7d6b41; valaddr_reg:x12; val_offset:4911*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4911*FLEN/8, x13, x9, x10)

inst_1659:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fa1ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b33ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d6b41 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1fa1ee; op2val:0xbfcb33ac;
op3val:0x3f7d6b41; valaddr_reg:x12; val_offset:4914*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4914*FLEN/8, x13, x9, x10)

inst_1660:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79fcb9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58b625 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x539f1a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef9fcb9; op2val:0xbf58b625;
op3val:0x3ed39f1a; valaddr_reg:x12; val_offset:4917*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4917*FLEN/8, x13, x9, x10)

inst_1661:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79fcb9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58b625 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x539f1a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef9fcb9; op2val:0xbf58b625;
op3val:0x3ed39f1a; valaddr_reg:x12; val_offset:4920*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4920*FLEN/8, x13, x9, x10)

inst_1662:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79fcb9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58b625 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x539f1a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef9fcb9; op2val:0xbf58b625;
op3val:0x3ed39f1a; valaddr_reg:x12; val_offset:4923*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4923*FLEN/8, x13, x9, x10)

inst_1663:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79fcb9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58b625 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x539f1a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef9fcb9; op2val:0xbf58b625;
op3val:0x3ed39f1a; valaddr_reg:x12; val_offset:4926*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4926*FLEN/8, x13, x9, x10)

inst_1664:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79fcb9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58b625 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x539f1a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef9fcb9; op2val:0xbf58b625;
op3val:0x3ed39f1a; valaddr_reg:x12; val_offset:4929*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4929*FLEN/8, x13, x9, x10)

inst_1665:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50b4e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fd4a0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c6451 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f50b4e8; op2val:0xbf3fd4a0;
op3val:0x3f1c6451; valaddr_reg:x12; val_offset:4932*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4932*FLEN/8, x13, x9, x10)

inst_1666:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50b4e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fd4a0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c6451 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f50b4e8; op2val:0xbf3fd4a0;
op3val:0x3f1c6451; valaddr_reg:x12; val_offset:4935*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4935*FLEN/8, x13, x9, x10)

inst_1667:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50b4e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fd4a0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c6451 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f50b4e8; op2val:0xbf3fd4a0;
op3val:0x3f1c6451; valaddr_reg:x12; val_offset:4938*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4938*FLEN/8, x13, x9, x10)

inst_1668:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50b4e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fd4a0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c6451 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f50b4e8; op2val:0xbf3fd4a0;
op3val:0x3f1c6451; valaddr_reg:x12; val_offset:4941*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4941*FLEN/8, x13, x9, x10)

inst_1669:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50b4e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fd4a0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c6451 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f50b4e8; op2val:0xbf3fd4a0;
op3val:0x3f1c6451; valaddr_reg:x12; val_offset:4944*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4944*FLEN/8, x13, x9, x10)

inst_1670:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ec914; op2val:0xbfb6678a;
op3val:0x3f79134b; valaddr_reg:x12; val_offset:4947*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4947*FLEN/8, x13, x9, x10)

inst_1671:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ec914; op2val:0xbfb6678a;
op3val:0x3f79134b; valaddr_reg:x12; val_offset:4950*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4950*FLEN/8, x13, x9, x10)

inst_1672:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ec914; op2val:0xbfb6678a;
op3val:0x3f79134b; valaddr_reg:x12; val_offset:4953*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4953*FLEN/8, x13, x9, x10)

inst_1673:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ec914; op2val:0xbfb6678a;
op3val:0x3f79134b; valaddr_reg:x12; val_offset:4956*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4956*FLEN/8, x13, x9, x10)

inst_1674:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2ec914; op2val:0xbfb6678a;
op3val:0x3f79134b; valaddr_reg:x12; val_offset:4959*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4959*FLEN/8, x13, x9, x10)

inst_1675:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f301bb2; op2val:0xbf65aaff;
op3val:0x3f1dfe68; valaddr_reg:x12; val_offset:4962*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4962*FLEN/8, x13, x9, x10)

inst_1676:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f301bb2; op2val:0xbf65aaff;
op3val:0x3f1dfe68; valaddr_reg:x12; val_offset:4965*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4965*FLEN/8, x13, x9, x10)

inst_1677:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f301bb2; op2val:0xbf65aaff;
op3val:0x3f1dfe68; valaddr_reg:x12; val_offset:4968*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4968*FLEN/8, x13, x9, x10)

inst_1678:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f301bb2; op2val:0xbf65aaff;
op3val:0x3f1dfe68; valaddr_reg:x12; val_offset:4971*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4971*FLEN/8, x13, x9, x10)

inst_1679:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f301bb2; op2val:0xbf65aaff;
op3val:0x3f1dfe68; valaddr_reg:x12; val_offset:4974*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4974*FLEN/8, x13, x9, x10)

inst_1680:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec11307; op2val:0xbf2f4ae5;
op3val:0x3e84347e; valaddr_reg:x12; val_offset:4977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4977*FLEN/8, x13, x9, x10)

inst_1681:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec11307; op2val:0xbf2f4ae5;
op3val:0x3e84347e; valaddr_reg:x12; val_offset:4980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4980*FLEN/8, x13, x9, x10)

inst_1682:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e51b8c7; op2val:0xbe8fdea9;
op3val:0x3d6bb940; valaddr_reg:x12; val_offset:4983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4983*FLEN/8, x13, x9, x10)

inst_1683:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e51b8c7; op2val:0xbe8fdea9;
op3val:0x3d6bb940; valaddr_reg:x12; val_offset:4986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4986*FLEN/8, x13, x9, x10)

inst_1684:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e51b8c7; op2val:0xbe8fdea9;
op3val:0x3d6bb940; valaddr_reg:x12; val_offset:4989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4989*FLEN/8, x13, x9, x10)

inst_1685:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e51b8c7; op2val:0xbe8fdea9;
op3val:0x3d6bb940; valaddr_reg:x12; val_offset:4992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4992*FLEN/8, x13, x9, x10)

inst_1686:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e852c03; op2val:0xbe98e67e;
op3val:0x3d9f1412; valaddr_reg:x12; val_offset:4995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4995*FLEN/8, x13, x9, x10)

inst_1687:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e852c03; op2val:0xbe98e67e;
op3val:0x3d9f1412; valaddr_reg:x12; val_offset:4998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4998*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_13)

inst_1688:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4af4ae and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f2d24 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6304ef and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dcaf4ae; op2val:0xc10f2d24;
op3val:0x3f6304ef; valaddr_reg:x12; val_offset:5001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 5001*FLEN/8, x13, x9, x10)

inst_1689:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07eb17; op2val:0xbfb5a405;
op3val:0x3f40e09a; valaddr_reg:x12; val_offset:5004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 5004*FLEN/8, x13, x9, x10)

inst_1690:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07eb17; op2val:0xbfb5a405;
op3val:0x3f40e09a; valaddr_reg:x12; val_offset:5007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 5007*FLEN/8, x13, x9, x10)

inst_1691:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69982d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f10c7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a2461 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee9982d; op2val:0xbf6f10c7;
op3val:0x3eda2461; valaddr_reg:x12; val_offset:5010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 5010*FLEN/8, x13, x9, x10)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(1052840711,64,FLEN)
NAN_BOXED(3207547621,32,FLEN)
NAN_BOXED(1048851582,64,FLEN)
NAN_BOXED(1052840711,64,FLEN)
NAN_BOXED(1052840711,32,FLEN)
NAN_BOXED(1052840711,64,FLEN)
NAN_BOXED(1052840711,64,FLEN)
NAN_BOXED(3207547621,32,FLEN)
NAN_BOXED(1048851582,64,FLEN)
NAN_BOXED(1052840711,64,FLEN)
NAN_BOXED(3207547621,32,FLEN)
NAN_BOXED(1052840711,64,FLEN)
NAN_BOXED(1052840711,64,FLEN)
NAN_BOXED(3207547621,32,FLEN)
NAN_BOXED(1048851582,64,FLEN)
NAN_BOXED(1045543111,64,FLEN)
NAN_BOXED(3197099689,32,FLEN)
NAN_BOXED(3197099689,64,FLEN)
NAN_BOXED(1045543111,64,FLEN)
NAN_BOXED(3197099689,32,FLEN)
NAN_BOXED(3197099689,64,FLEN)
NAN_BOXED(1045543111,64,FLEN)
NAN_BOXED(3197099689,32,FLEN)
NAN_BOXED(1030469952,64,FLEN)
NAN_BOXED(1045543111,64,FLEN)
NAN_BOXED(1045543111,32,FLEN)
NAN_BOXED(1030469952,64,FLEN)
NAN_BOXED(1045543111,64,FLEN)
NAN_BOXED(3197099689,32,FLEN)
NAN_BOXED(1045543111,64,FLEN)
NAN_BOXED(1048914947,64,FLEN)
NAN_BOXED(1048914947,32,FLEN)
NAN_BOXED(1048914947,64,FLEN)
NAN_BOXED(1048914947,64,FLEN)
NAN_BOXED(1048914947,32,FLEN)
NAN_BOXED(1033835538,64,FLEN)
NAN_BOXED(1048914947,64,FLEN)
NAN_BOXED(3197691518,32,FLEN)
NAN_BOXED(1033835538,64,FLEN)
NAN_BOXED(1048914947,64,FLEN)
NAN_BOXED(3197691518,32,FLEN)
NAN_BOXED(1033835538,64,FLEN)
NAN_BOXED(1048914947,64,FLEN)
NAN_BOXED(3197691518,32,FLEN)
NAN_BOXED(1033835538,64,FLEN)
NAN_BOXED(1064866589,64,FLEN)
NAN_BOXED(3205292822,32,FLEN)
NAN_BOXED(1057541364,64,FLEN)
NAN_BOXED(1064866589,64,FLEN)
NAN_BOXED(3205292822,32,FLEN)
NAN_BOXED(1057541364,64,FLEN)
NAN_BOXED(1064866589,64,FLEN)
NAN_BOXED(3205292822,32,FLEN)
NAN_BOXED(1057541364,64,FLEN)
NAN_BOXED(1064866589,64,FLEN)
NAN_BOXED(3205292822,32,FLEN)
NAN_BOXED(1057541364,64,FLEN)
NAN_BOXED(1064866589,64,FLEN)
NAN_BOXED(3205292822,32,FLEN)
NAN_BOXED(1057541364,64,FLEN)
NAN_BOXED(1030226633,64,FLEN)
NAN_BOXED(3234221782,32,FLEN)
NAN_BOXED(1051965851,64,FLEN)
test_dataset_1:
NAN_BOXED(1030226633,32,FLEN)
NAN_BOXED(3234221782,32,FLEN)
NAN_BOXED(1051965851,32,FLEN)
NAN_BOXED(1030226633,32,FLEN)
NAN_BOXED(3234221782,32,FLEN)
NAN_BOXED(1051965851,32,FLEN)
NAN_BOXED(1030226633,32,FLEN)
NAN_BOXED(3234221782,32,FLEN)
NAN_BOXED(1051965851,32,FLEN)
NAN_BOXED(1030226633,32,FLEN)
NAN_BOXED(3234221782,32,FLEN)
NAN_BOXED(1051965851,32,FLEN)
NAN_BOXED(1036711086,32,FLEN)
NAN_BOXED(3238997284,32,FLEN)
NAN_BOXED(1063453935,32,FLEN)
NAN_BOXED(1036711086,32,FLEN)
NAN_BOXED(3238997284,32,FLEN)
NAN_BOXED(1063453935,32,FLEN)
NAN_BOXED(1036711086,32,FLEN)
NAN_BOXED(3238997284,32,FLEN)
NAN_BOXED(1063453935,32,FLEN)
NAN_BOXED(1036711086,32,FLEN)
NAN_BOXED(3238997284,32,FLEN)
NAN_BOXED(1063453935,32,FLEN)
NAN_BOXED(1036711086,32,FLEN)
NAN_BOXED(3238997284,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1057483543,32,FLEN)
NAN_BOXED(3216352261,32,FLEN)
NAN_BOXED(1061216410,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3216352261,32,FLEN)
NAN_BOXED(1061216410,32,FLEN)
NAN_BOXED(1057483543,32,FLEN)
NAN_BOXED(3216352261,32,FLEN)
NAN_BOXED(1061216410,32,FLEN)
NAN_BOXED(1057483543,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1061216410,32,FLEN)
NAN_BOXED(1057483543,32,FLEN)
NAN_BOXED(3216352261,32,FLEN)
NAN_BOXED(1061216410,32,FLEN)
NAN_BOXED(1055496237,32,FLEN)
NAN_BOXED(3211727047,32,FLEN)
NAN_BOXED(1054483553,32,FLEN)
NAN_BOXED(1055496237,32,FLEN)
NAN_BOXED(3211727047,32,FLEN)
NAN_BOXED(1054483553,32,FLEN)
NAN_BOXED(1055496237,32,FLEN)
NAN_BOXED(3211727047,32,FLEN)
NAN_BOXED(1054483553,32,FLEN)
NAN_BOXED(1055496237,32,FLEN)
NAN_BOXED(3211727047,32,FLEN)
NAN_BOXED(1054483553,32,FLEN)
NAN_BOXED(1055496237,32,FLEN)
NAN_BOXED(3211727047,32,FLEN)
NAN_BOXED(1054483553,32,FLEN)
NAN_BOXED(1065133196,32,FLEN)
NAN_BOXED(3209375366,32,FLEN)
NAN_BOXED(1061717093,32,FLEN)
NAN_BOXED(1065133196,32,FLEN)
NAN_BOXED(3209375366,32,FLEN)
NAN_BOXED(1061717093,32,FLEN)
NAN_BOXED(1065133196,32,FLEN)
NAN_BOXED(3209375366,32,FLEN)
NAN_BOXED(1061717093,32,FLEN)
NAN_BOXED(1065133196,32,FLEN)
NAN_BOXED(3209375366,32,FLEN)
NAN_BOXED(1061717093,32,FLEN)
NAN_BOXED(1065133196,32,FLEN)
NAN_BOXED(3209375366,32,FLEN)
NAN_BOXED(1061717093,32,FLEN)
NAN_BOXED(1060664279,32,FLEN)
NAN_BOXED(3186476973,32,FLEN)
NAN_BOXED(1034638110,32,FLEN)
NAN_BOXED(1060664279,32,FLEN)
NAN_BOXED(3186476973,32,FLEN)
NAN_BOXED(1034638110,32,FLEN)
NAN_BOXED(1060664279,32,FLEN)
NAN_BOXED(3186476973,32,FLEN)
NAN_BOXED(1034638110,32,FLEN)
NAN_BOXED(1060664279,32,FLEN)
NAN_BOXED(3186476973,32,FLEN)
NAN_BOXED(1034638110,32,FLEN)
NAN_BOXED(1060664279,32,FLEN)
NAN_BOXED(3186476973,32,FLEN)
NAN_BOXED(1034638110,32,FLEN)
NAN_BOXED(1047520682,32,FLEN)
NAN_BOXED(3227882781,32,FLEN)
NAN_BOXED(1062675501,32,FLEN)
NAN_BOXED(1047520682,32,FLEN)
NAN_BOXED(3227882781,32,FLEN)
NAN_BOXED(1062675501,32,FLEN)
NAN_BOXED(1047520682,32,FLEN)
NAN_BOXED(3227882781,32,FLEN)
NAN_BOXED(1062675501,32,FLEN)
NAN_BOXED(1047520682,32,FLEN)
NAN_BOXED(3227882781,32,FLEN)
NAN_BOXED(1062675501,32,FLEN)
NAN_BOXED(1047520682,32,FLEN)
NAN_BOXED(3227882781,32,FLEN)
NAN_BOXED(1062675501,32,FLEN)
NAN_BOXED(1045412018,32,FLEN)
NAN_BOXED(3230129138,32,FLEN)
NAN_BOXED(1063025085,32,FLEN)
NAN_BOXED(1045412018,32,FLEN)
NAN_BOXED(3230129138,32,FLEN)
NAN_BOXED(1063025085,32,FLEN)
NAN_BOXED(1045412018,32,FLEN)
NAN_BOXED(3230129138,32,FLEN)
NAN_BOXED(1063025085,32,FLEN)
NAN_BOXED(1045412018,32,FLEN)
NAN_BOXED(3230129138,32,FLEN)
NAN_BOXED(1063025085,32,FLEN)
NAN_BOXED(1045412018,32,FLEN)
NAN_BOXED(3230129138,32,FLEN)
NAN_BOXED(1063025085,32,FLEN)
NAN_BOXED(1053023555,32,FLEN)
NAN_BOXED(3222411855,32,FLEN)
NAN_BOXED(1063227555,32,FLEN)
NAN_BOXED(1053023555,32,FLEN)
NAN_BOXED(3222411855,32,FLEN)
NAN_BOXED(1063227555,32,FLEN)
NAN_BOXED(1053023555,32,FLEN)
NAN_BOXED(3222411855,32,FLEN)
NAN_BOXED(1063227555,32,FLEN)
NAN_BOXED(1053023555,32,FLEN)
NAN_BOXED(3222411855,32,FLEN)
NAN_BOXED(1063227555,32,FLEN)
NAN_BOXED(1053023555,32,FLEN)
NAN_BOXED(3222411855,32,FLEN)
NAN_BOXED(1063227555,32,FLEN)
NAN_BOXED(1065323438,32,FLEN)
NAN_BOXED(3187927657,32,FLEN)
NAN_BOXED(1040428665,32,FLEN)
NAN_BOXED(1065323438,32,FLEN)
NAN_BOXED(3187927657,32,FLEN)
NAN_BOXED(1040428665,32,FLEN)
NAN_BOXED(1065323438,32,FLEN)
NAN_BOXED(3187927657,32,FLEN)
NAN_BOXED(1040428665,32,FLEN)
NAN_BOXED(1065323438,32,FLEN)
NAN_BOXED(3187927657,32,FLEN)
NAN_BOXED(1040428665,32,FLEN)
NAN_BOXED(1065323438,32,FLEN)
NAN_BOXED(3187927657,32,FLEN)
NAN_BOXED(1040428665,32,FLEN)
NAN_BOXED(1061839121,32,FLEN)
NAN_BOXED(3212709003,32,FLEN)
NAN_BOXED(1061738041,32,FLEN)
NAN_BOXED(1061839121,32,FLEN)
NAN_BOXED(3212709003,32,FLEN)
NAN_BOXED(1061738041,32,FLEN)
NAN_BOXED(1061839121,32,FLEN)
NAN_BOXED(3212709003,32,FLEN)
NAN_BOXED(1061738041,32,FLEN)
NAN_BOXED(1061839121,32,FLEN)
NAN_BOXED(3212709003,32,FLEN)
NAN_BOXED(1061738041,32,FLEN)
NAN_BOXED(1061839121,32,FLEN)
NAN_BOXED(3212709003,32,FLEN)
NAN_BOXED(1061738041,32,FLEN)
NAN_BOXED(1016070555,32,FLEN)
NAN_BOXED(3236447155,32,FLEN)
NAN_BOXED(1040361353,32,FLEN)
NAN_BOXED(1016070555,32,FLEN)
NAN_BOXED(3236447155,32,FLEN)
NAN_BOXED(1040361353,32,FLEN)
NAN_BOXED(1016070555,32,FLEN)
NAN_BOXED(3236447155,32,FLEN)
NAN_BOXED(1040361353,32,FLEN)
NAN_BOXED(1016070555,32,FLEN)
NAN_BOXED(3236447155,32,FLEN)
NAN_BOXED(1040361353,32,FLEN)
NAN_BOXED(1016070555,32,FLEN)
NAN_BOXED(3236447155,32,FLEN)
NAN_BOXED(1040361353,32,FLEN)
NAN_BOXED(1060499480,32,FLEN)
NAN_BOXED(3177055305,32,FLEN)
NAN_BOXED(1025362241,32,FLEN)
NAN_BOXED(1060499480,32,FLEN)
NAN_BOXED(3177055305,32,FLEN)
NAN_BOXED(1025362241,32,FLEN)
NAN_BOXED(1060499480,32,FLEN)
NAN_BOXED(3177055305,32,FLEN)
NAN_BOXED(1025362241,32,FLEN)
NAN_BOXED(1060499480,32,FLEN)
NAN_BOXED(3177055305,32,FLEN)
NAN_BOXED(1025362241,32,FLEN)
NAN_BOXED(1060499480,32,FLEN)
NAN_BOXED(3177055305,32,FLEN)
NAN_BOXED(1025362241,32,FLEN)
NAN_BOXED(1055648486,32,FLEN)
NAN_BOXED(3207790079,32,FLEN)
NAN_BOXED(1050997607,32,FLEN)
NAN_BOXED(1055648486,32,FLEN)
NAN_BOXED(3207790079,32,FLEN)
NAN_BOXED(1050997607,32,FLEN)
NAN_BOXED(1055648486,32,FLEN)
NAN_BOXED(3207790079,32,FLEN)
NAN_BOXED(1050997607,32,FLEN)
NAN_BOXED(1055648486,32,FLEN)
NAN_BOXED(3207790079,32,FLEN)
NAN_BOXED(1050997607,32,FLEN)
NAN_BOXED(1055648486,32,FLEN)
NAN_BOXED(3207790079,32,FLEN)
NAN_BOXED(1050997607,32,FLEN)
NAN_BOXED(1061917585,32,FLEN)
NAN_BOXED(3180855925,32,FLEN)
NAN_BOXED(1030865702,32,FLEN)
NAN_BOXED(1061917585,32,FLEN)
NAN_BOXED(3180855925,32,FLEN)
NAN_BOXED(1030865702,32,FLEN)
NAN_BOXED(1061917585,32,FLEN)
NAN_BOXED(3180855925,32,FLEN)
NAN_BOXED(1030865702,32,FLEN)
NAN_BOXED(1061917585,32,FLEN)
NAN_BOXED(3180855925,32,FLEN)
NAN_BOXED(1030865702,32,FLEN)
NAN_BOXED(1061917585,32,FLEN)
NAN_BOXED(3180855925,32,FLEN)
NAN_BOXED(1030865702,32,FLEN)
NAN_BOXED(1050567725,32,FLEN)
NAN_BOXED(3185400192,32,FLEN)
NAN_BOXED(1023996892,32,FLEN)
NAN_BOXED(1050567725,32,FLEN)
NAN_BOXED(3185400192,32,FLEN)
NAN_BOXED(1023996892,32,FLEN)
NAN_BOXED(1050567725,32,FLEN)
NAN_BOXED(3185400192,32,FLEN)
NAN_BOXED(1023996892,32,FLEN)
NAN_BOXED(1050567725,32,FLEN)
NAN_BOXED(3185400192,32,FLEN)
NAN_BOXED(1023996892,32,FLEN)
NAN_BOXED(1050567725,32,FLEN)
NAN_BOXED(3185400192,32,FLEN)
NAN_BOXED(1023996892,32,FLEN)
NAN_BOXED(1037671926,32,FLEN)
NAN_BOXED(3235064823,32,FLEN)
NAN_BOXED(1060340370,32,FLEN)
NAN_BOXED(1037671926,32,FLEN)
NAN_BOXED(3235064823,32,FLEN)
NAN_BOXED(1060340370,32,FLEN)
NAN_BOXED(1037671926,32,FLEN)
NAN_BOXED(3235064823,32,FLEN)
NAN_BOXED(1060340370,32,FLEN)
NAN_BOXED(1037671926,32,FLEN)
NAN_BOXED(3235064823,32,FLEN)
NAN_BOXED(1060340370,32,FLEN)
NAN_BOXED(1037671926,32,FLEN)
NAN_BOXED(3235064823,32,FLEN)
NAN_BOXED(1060340370,32,FLEN)
NAN_BOXED(1059293454,32,FLEN)
NAN_BOXED(3215400600,32,FLEN)
NAN_BOXED(1062568935,32,FLEN)
NAN_BOXED(1059293454,32,FLEN)
NAN_BOXED(3215400600,32,FLEN)
NAN_BOXED(1062568935,32,FLEN)
NAN_BOXED(1059293454,32,FLEN)
NAN_BOXED(3215400600,32,FLEN)
NAN_BOXED(1062568935,32,FLEN)
NAN_BOXED(1059293454,32,FLEN)
NAN_BOXED(3215400600,32,FLEN)
NAN_BOXED(1062568935,32,FLEN)
NAN_BOXED(1059293454,32,FLEN)
NAN_BOXED(3215400600,32,FLEN)
NAN_BOXED(1062568935,32,FLEN)
NAN_BOXED(1062908743,32,FLEN)
NAN_BOXED(3213627928,32,FLEN)
NAN_BOXED(1064260352,32,FLEN)
NAN_BOXED(1062908743,32,FLEN)
NAN_BOXED(3213627928,32,FLEN)
NAN_BOXED(1064260352,32,FLEN)
NAN_BOXED(1062908743,32,FLEN)
NAN_BOXED(3213627928,32,FLEN)
NAN_BOXED(1064260352,32,FLEN)
NAN_BOXED(1062908743,32,FLEN)
NAN_BOXED(3213627928,32,FLEN)
NAN_BOXED(1064260352,32,FLEN)
NAN_BOXED(1062908743,32,FLEN)
NAN_BOXED(3213627928,32,FLEN)
NAN_BOXED(1064260352,32,FLEN)
NAN_BOXED(1060297249,32,FLEN)
NAN_BOXED(3205590594,32,FLEN)
NAN_BOXED(1053504810,32,FLEN)
NAN_BOXED(1060297249,32,FLEN)
NAN_BOXED(3205590594,32,FLEN)
NAN_BOXED(1053504810,32,FLEN)
NAN_BOXED(1060297249,32,FLEN)
NAN_BOXED(3205590594,32,FLEN)
NAN_BOXED(1053504810,32,FLEN)
NAN_BOXED(1060297249,32,FLEN)
NAN_BOXED(3205590594,32,FLEN)
NAN_BOXED(1053504810,32,FLEN)
NAN_BOXED(1060297249,32,FLEN)
NAN_BOXED(3205590594,32,FLEN)
NAN_BOXED(1053504810,32,FLEN)
NAN_BOXED(1065296456,32,FLEN)
NAN_BOXED(3198514457,32,FLEN)
NAN_BOXED(1050994125,32,FLEN)
NAN_BOXED(1065296456,32,FLEN)
NAN_BOXED(3198514457,32,FLEN)
NAN_BOXED(1050994125,32,FLEN)
NAN_BOXED(1065296456,32,FLEN)
NAN_BOXED(3198514457,32,FLEN)
NAN_BOXED(1050994125,32,FLEN)
NAN_BOXED(1065296456,32,FLEN)
NAN_BOXED(3198514457,32,FLEN)
NAN_BOXED(1050994125,32,FLEN)
NAN_BOXED(1065296456,32,FLEN)
NAN_BOXED(3198514457,32,FLEN)
NAN_BOXED(1050994125,32,FLEN)
NAN_BOXED(1059684247,32,FLEN)
NAN_BOXED(3213190840,32,FLEN)
NAN_BOXED(1060152984,32,FLEN)
NAN_BOXED(1059684247,32,FLEN)
NAN_BOXED(3213190840,32,FLEN)
NAN_BOXED(1060152984,32,FLEN)
NAN_BOXED(1059684247,32,FLEN)
NAN_BOXED(3213190840,32,FLEN)
NAN_BOXED(1060152984,32,FLEN)
NAN_BOXED(1059684247,32,FLEN)
NAN_BOXED(3213190840,32,FLEN)
NAN_BOXED(1060152984,32,FLEN)
NAN_BOXED(1059684247,32,FLEN)
NAN_BOXED(3213190840,32,FLEN)
NAN_BOXED(1060152984,32,FLEN)
NAN_BOXED(1043977829,32,FLEN)
NAN_BOXED(3224837577,32,FLEN)
NAN_BOXED(1057287650,32,FLEN)
NAN_BOXED(1043977829,32,FLEN)
NAN_BOXED(3224837577,32,FLEN)
NAN_BOXED(1057287650,32,FLEN)
NAN_BOXED(1043977829,32,FLEN)
NAN_BOXED(3224837577,32,FLEN)
NAN_BOXED(1057287650,32,FLEN)
NAN_BOXED(1043977829,32,FLEN)
NAN_BOXED(3224837577,32,FLEN)
NAN_BOXED(1057287650,32,FLEN)
NAN_BOXED(1043977829,32,FLEN)
NAN_BOXED(3224837577,32,FLEN)
NAN_BOXED(1057287650,32,FLEN)
NAN_BOXED(1060055086,32,FLEN)
NAN_BOXED(3208780524,32,FLEN)
NAN_BOXED(1057279711,32,FLEN)
NAN_BOXED(1060055086,32,FLEN)
NAN_BOXED(3208780524,32,FLEN)
NAN_BOXED(1057279711,32,FLEN)
NAN_BOXED(1060055086,32,FLEN)
NAN_BOXED(3208780524,32,FLEN)
NAN_BOXED(1057279711,32,FLEN)
NAN_BOXED(1060055086,32,FLEN)
NAN_BOXED(3208780524,32,FLEN)
NAN_BOXED(1057279711,32,FLEN)
NAN_BOXED(1060055086,32,FLEN)
NAN_BOXED(3208780524,32,FLEN)
NAN_BOXED(1057279711,32,FLEN)
NAN_BOXED(1050097051,32,FLEN)
NAN_BOXED(3226229384,32,FLEN)
NAN_BOXED(1064396899,32,FLEN)
NAN_BOXED(1050097051,32,FLEN)
NAN_BOXED(3226229384,32,FLEN)
NAN_BOXED(1064396899,32,FLEN)
NAN_BOXED(1050097051,32,FLEN)
NAN_BOXED(3226229384,32,FLEN)
NAN_BOXED(1064396899,32,FLEN)
NAN_BOXED(1050097051,32,FLEN)
NAN_BOXED(3226229384,32,FLEN)
NAN_BOXED(1064396899,32,FLEN)
NAN_BOXED(1050097051,32,FLEN)
NAN_BOXED(3226229384,32,FLEN)
NAN_BOXED(1064396899,32,FLEN)
NAN_BOXED(1020001280,32,FLEN)
NAN_BOXED(3256678261,32,FLEN)
NAN_BOXED(1064969595,32,FLEN)
NAN_BOXED(1020001280,32,FLEN)
NAN_BOXED(3256678261,32,FLEN)
NAN_BOXED(1064969595,32,FLEN)
NAN_BOXED(1020001280,32,FLEN)
NAN_BOXED(3256678261,32,FLEN)
NAN_BOXED(1064969595,32,FLEN)
NAN_BOXED(1020001280,32,FLEN)
NAN_BOXED(3256678261,32,FLEN)
NAN_BOXED(1064969595,32,FLEN)
NAN_BOXED(1020001280,32,FLEN)
NAN_BOXED(3256678261,32,FLEN)
NAN_BOXED(1064969595,32,FLEN)
NAN_BOXED(1048582877,32,FLEN)
NAN_BOXED(3206460987,32,FLEN)
NAN_BOXED(1042208651,32,FLEN)
NAN_BOXED(1048582877,32,FLEN)
NAN_BOXED(3206460987,32,FLEN)
NAN_BOXED(1042208651,32,FLEN)
NAN_BOXED(1048582877,32,FLEN)
NAN_BOXED(3206460987,32,FLEN)
NAN_BOXED(1042208651,32,FLEN)
NAN_BOXED(1048582877,32,FLEN)
NAN_BOXED(3206460987,32,FLEN)
NAN_BOXED(1042208651,32,FLEN)
NAN_BOXED(1048582877,32,FLEN)
NAN_BOXED(3206460987,32,FLEN)
NAN_BOXED(1042208651,32,FLEN)
NAN_BOXED(1065050093,32,FLEN)
NAN_BOXED(3193789174,32,FLEN)
NAN_BOXED(1046043425,32,FLEN)
NAN_BOXED(1065050093,32,FLEN)
NAN_BOXED(3193789174,32,FLEN)
NAN_BOXED(1046043425,32,FLEN)
NAN_BOXED(1065050093,32,FLEN)
NAN_BOXED(3193789174,32,FLEN)
NAN_BOXED(1046043425,32,FLEN)
NAN_BOXED(1065050093,32,FLEN)
NAN_BOXED(3193789174,32,FLEN)
NAN_BOXED(1046043425,32,FLEN)
NAN_BOXED(1065050093,32,FLEN)
NAN_BOXED(3193789174,32,FLEN)
NAN_BOXED(1046043425,32,FLEN)
NAN_BOXED(1059209659,32,FLEN)
NAN_BOXED(3207216333,32,FLEN)
NAN_BOXED(1054329953,32,FLEN)
NAN_BOXED(1059209659,32,FLEN)
NAN_BOXED(3207216333,32,FLEN)
NAN_BOXED(1054329953,32,FLEN)
NAN_BOXED(1059209659,32,FLEN)
NAN_BOXED(3207216333,32,FLEN)
NAN_BOXED(1054329953,32,FLEN)
NAN_BOXED(1059209659,32,FLEN)
NAN_BOXED(3207216333,32,FLEN)
NAN_BOXED(1054329953,32,FLEN)
NAN_BOXED(1059209659,32,FLEN)
NAN_BOXED(3207216333,32,FLEN)
NAN_BOXED(1054329953,32,FLEN)
NAN_BOXED(1065200905,32,FLEN)
NAN_BOXED(3212199436,32,FLEN)
NAN_BOXED(1064569265,32,FLEN)
NAN_BOXED(1065200905,32,FLEN)
NAN_BOXED(3212199436,32,FLEN)
NAN_BOXED(1064569265,32,FLEN)
NAN_BOXED(1065200905,32,FLEN)
NAN_BOXED(3212199436,32,FLEN)
NAN_BOXED(1064569265,32,FLEN)
NAN_BOXED(1065200905,32,FLEN)
NAN_BOXED(3212199436,32,FLEN)
NAN_BOXED(1064569265,32,FLEN)
NAN_BOXED(1065200905,32,FLEN)
NAN_BOXED(3212199436,32,FLEN)
NAN_BOXED(1064569265,32,FLEN)
NAN_BOXED(1062317890,32,FLEN)
NAN_BOXED(3177194008,32,FLEN)
NAN_BOXED(1027052872,32,FLEN)
NAN_BOXED(1062317890,32,FLEN)
NAN_BOXED(3177194008,32,FLEN)
NAN_BOXED(1027052872,32,FLEN)
NAN_BOXED(1062317890,32,FLEN)
NAN_BOXED(3177194008,32,FLEN)
NAN_BOXED(1027052872,32,FLEN)
NAN_BOXED(1062317890,32,FLEN)
NAN_BOXED(3177194008,32,FLEN)
NAN_BOXED(1027052872,32,FLEN)
NAN_BOXED(1062317890,32,FLEN)
NAN_BOXED(3177194008,32,FLEN)
NAN_BOXED(1027052872,32,FLEN)
NAN_BOXED(1062056129,32,FLEN)
NAN_BOXED(3197871845,32,FLEN)
NAN_BOXED(1048191035,32,FLEN)
NAN_BOXED(1062056129,32,FLEN)
NAN_BOXED(3197871845,32,FLEN)
NAN_BOXED(1048191035,32,FLEN)
NAN_BOXED(1062056129,32,FLEN)
NAN_BOXED(3197871845,32,FLEN)
NAN_BOXED(1048191035,32,FLEN)
NAN_BOXED(1062056129,32,FLEN)
NAN_BOXED(3197871845,32,FLEN)
NAN_BOXED(1048191035,32,FLEN)
NAN_BOXED(1062056129,32,FLEN)
NAN_BOXED(3197871845,32,FLEN)
NAN_BOXED(1048191035,32,FLEN)
NAN_BOXED(1032851679,32,FLEN)
NAN_BOXED(3209882202,32,FLEN)
NAN_BOXED(1030579059,32,FLEN)
NAN_BOXED(1032851679,32,FLEN)
NAN_BOXED(3209882202,32,FLEN)
NAN_BOXED(1030579059,32,FLEN)
NAN_BOXED(1032851679,32,FLEN)
NAN_BOXED(3209882202,32,FLEN)
NAN_BOXED(1030579059,32,FLEN)
NAN_BOXED(1032851679,32,FLEN)
NAN_BOXED(3209882202,32,FLEN)
NAN_BOXED(1030579059,32,FLEN)
NAN_BOXED(1032851679,32,FLEN)
NAN_BOXED(3209882202,32,FLEN)
NAN_BOXED(1030579059,32,FLEN)
NAN_BOXED(1059575447,32,FLEN)
NAN_BOXED(3212570437,32,FLEN)
NAN_BOXED(1059400773,32,FLEN)
NAN_BOXED(1059575447,32,FLEN)
NAN_BOXED(3212570437,32,FLEN)
NAN_BOXED(1059400773,32,FLEN)
NAN_BOXED(1059575447,32,FLEN)
NAN_BOXED(3212570437,32,FLEN)
NAN_BOXED(1059400773,32,FLEN)
NAN_BOXED(1059575447,32,FLEN)
NAN_BOXED(3212570437,32,FLEN)
NAN_BOXED(1059400773,32,FLEN)
NAN_BOXED(1059575447,32,FLEN)
NAN_BOXED(3212570437,32,FLEN)
NAN_BOXED(1059400773,32,FLEN)
NAN_BOXED(1056135752,32,FLEN)
NAN_BOXED(3203512702,32,FLEN)
NAN_BOXED(1046857810,32,FLEN)
NAN_BOXED(1056135752,32,FLEN)
NAN_BOXED(3203512702,32,FLEN)
NAN_BOXED(1046857810,32,FLEN)
NAN_BOXED(1056135752,32,FLEN)
NAN_BOXED(3203512702,32,FLEN)
NAN_BOXED(1046857810,32,FLEN)
NAN_BOXED(1056135752,32,FLEN)
NAN_BOXED(3203512702,32,FLEN)
NAN_BOXED(1046857810,32,FLEN)
NAN_BOXED(1056135752,32,FLEN)
NAN_BOXED(3203512702,32,FLEN)
NAN_BOXED(1046857810,32,FLEN)
NAN_BOXED(1063540389,32,FLEN)
NAN_BOXED(3197136130,32,FLEN)
NAN_BOXED(1048629752,32,FLEN)
NAN_BOXED(1063540389,32,FLEN)
NAN_BOXED(3197136130,32,FLEN)
NAN_BOXED(1048629752,32,FLEN)
NAN_BOXED(1063540389,32,FLEN)
NAN_BOXED(3197136130,32,FLEN)
NAN_BOXED(1048629752,32,FLEN)
NAN_BOXED(1063540389,32,FLEN)
NAN_BOXED(3197136130,32,FLEN)
NAN_BOXED(1048629752,32,FLEN)
NAN_BOXED(1063540389,32,FLEN)
NAN_BOXED(3197136130,32,FLEN)
NAN_BOXED(1048629752,32,FLEN)
NAN_BOXED(1045406671,32,FLEN)
NAN_BOXED(3207668367,32,FLEN)
NAN_BOXED(1041214538,32,FLEN)
NAN_BOXED(1045406671,32,FLEN)
NAN_BOXED(3207668367,32,FLEN)
NAN_BOXED(1041214538,32,FLEN)
NAN_BOXED(1045406671,32,FLEN)
NAN_BOXED(3207668367,32,FLEN)
NAN_BOXED(1041214538,32,FLEN)
NAN_BOXED(1045406671,32,FLEN)
NAN_BOXED(3207668367,32,FLEN)
NAN_BOXED(1041214538,32,FLEN)
NAN_BOXED(1045406671,32,FLEN)
NAN_BOXED(3207668367,32,FLEN)
NAN_BOXED(1041214538,32,FLEN)
NAN_BOXED(1064738640,32,FLEN)
NAN_BOXED(3177607591,32,FLEN)
NAN_BOXED(1029570720,32,FLEN)
NAN_BOXED(1064738640,32,FLEN)
NAN_BOXED(3177607591,32,FLEN)
NAN_BOXED(1029570720,32,FLEN)
NAN_BOXED(1064738640,32,FLEN)
NAN_BOXED(3177607591,32,FLEN)
NAN_BOXED(1029570720,32,FLEN)
NAN_BOXED(1064738640,32,FLEN)
NAN_BOXED(3177607591,32,FLEN)
NAN_BOXED(1029570720,32,FLEN)
NAN_BOXED(1064738640,32,FLEN)
NAN_BOXED(3177607591,32,FLEN)
NAN_BOXED(1029570720,32,FLEN)
NAN_BOXED(1063823471,32,FLEN)
NAN_BOXED(3208229865,32,FLEN)
NAN_BOXED(1059636538,32,FLEN)
NAN_BOXED(1063823471,32,FLEN)
NAN_BOXED(3208229865,32,FLEN)
NAN_BOXED(1059636538,32,FLEN)
NAN_BOXED(1063823471,32,FLEN)
NAN_BOXED(3208229865,32,FLEN)
NAN_BOXED(1059636538,32,FLEN)
NAN_BOXED(1063823471,32,FLEN)
NAN_BOXED(3208229865,32,FLEN)
NAN_BOXED(1059636538,32,FLEN)
NAN_BOXED(1063823471,32,FLEN)
NAN_BOXED(3208229865,32,FLEN)
NAN_BOXED(1059636538,32,FLEN)
NAN_BOXED(1053245852,32,FLEN)
NAN_BOXED(3193407470,32,FLEN)
NAN_BOXED(1034404327,32,FLEN)
NAN_BOXED(1053245852,32,FLEN)
NAN_BOXED(3193407470,32,FLEN)
NAN_BOXED(1034404327,32,FLEN)
NAN_BOXED(1053245852,32,FLEN)
NAN_BOXED(3193407470,32,FLEN)
NAN_BOXED(1034404327,32,FLEN)
NAN_BOXED(1053245852,32,FLEN)
NAN_BOXED(3193407470,32,FLEN)
NAN_BOXED(1034404327,32,FLEN)
NAN_BOXED(1053245852,32,FLEN)
NAN_BOXED(3193407470,32,FLEN)
NAN_BOXED(1034404327,32,FLEN)
NAN_BOXED(1059649641,32,FLEN)
NAN_BOXED(3186308065,32,FLEN)
NAN_BOXED(1033584199,32,FLEN)
NAN_BOXED(1059649641,32,FLEN)
NAN_BOXED(3186308065,32,FLEN)
NAN_BOXED(1033584199,32,FLEN)
NAN_BOXED(1059649641,32,FLEN)
NAN_BOXED(3186308065,32,FLEN)
NAN_BOXED(1033584199,32,FLEN)
NAN_BOXED(1059649641,32,FLEN)
NAN_BOXED(3186308065,32,FLEN)
NAN_BOXED(1033584199,32,FLEN)
NAN_BOXED(1059649641,32,FLEN)
NAN_BOXED(3186308065,32,FLEN)
NAN_BOXED(1033584199,32,FLEN)
NAN_BOXED(1055449825,32,FLEN)
NAN_BOXED(3217128279,32,FLEN)
NAN_BOXED(1060111168,32,FLEN)
NAN_BOXED(1055449825,32,FLEN)
NAN_BOXED(3217128279,32,FLEN)
NAN_BOXED(1060111168,32,FLEN)
NAN_BOXED(1055449825,32,FLEN)
NAN_BOXED(3217128279,32,FLEN)
NAN_BOXED(1060111168,32,FLEN)
NAN_BOXED(1055449825,32,FLEN)
NAN_BOXED(3217128279,32,FLEN)
NAN_BOXED(1060111168,32,FLEN)
NAN_BOXED(1055449825,32,FLEN)
NAN_BOXED(3217128279,32,FLEN)
NAN_BOXED(1060111168,32,FLEN)
NAN_BOXED(1060038194,32,FLEN)
NAN_BOXED(3214547518,32,FLEN)
NAN_BOXED(1062375633,32,FLEN)
NAN_BOXED(1060038194,32,FLEN)
NAN_BOXED(3214547518,32,FLEN)
NAN_BOXED(1062375633,32,FLEN)
NAN_BOXED(1060038194,32,FLEN)
NAN_BOXED(3214547518,32,FLEN)
NAN_BOXED(1062375633,32,FLEN)
NAN_BOXED(1060038194,32,FLEN)
NAN_BOXED(3214547518,32,FLEN)
NAN_BOXED(1062375633,32,FLEN)
NAN_BOXED(1060038194,32,FLEN)
NAN_BOXED(3214547518,32,FLEN)
NAN_BOXED(1062375633,32,FLEN)
NAN_BOXED(1064041300,32,FLEN)
NAN_BOXED(3211550607,32,FLEN)
NAN_BOXED(1062855624,32,FLEN)
NAN_BOXED(1064041300,32,FLEN)
NAN_BOXED(3211550607,32,FLEN)
NAN_BOXED(1062855624,32,FLEN)
NAN_BOXED(1064041300,32,FLEN)
NAN_BOXED(3211550607,32,FLEN)
NAN_BOXED(1062855624,32,FLEN)
NAN_BOXED(1064041300,32,FLEN)
NAN_BOXED(3211550607,32,FLEN)
NAN_BOXED(1062855624,32,FLEN)
NAN_BOXED(1064041300,32,FLEN)
NAN_BOXED(3211550607,32,FLEN)
NAN_BOXED(1062855624,32,FLEN)
NAN_BOXED(1050616962,32,FLEN)
NAN_BOXED(3157035171,32,FLEN)
NAN_BOXED(995525360,32,FLEN)
NAN_BOXED(1050616962,32,FLEN)
NAN_BOXED(3157035171,32,FLEN)
NAN_BOXED(995525360,32,FLEN)
NAN_BOXED(1050616962,32,FLEN)
NAN_BOXED(3157035171,32,FLEN)
NAN_BOXED(995525360,32,FLEN)
NAN_BOXED(1050616962,32,FLEN)
NAN_BOXED(3157035171,32,FLEN)
NAN_BOXED(995525360,32,FLEN)
NAN_BOXED(1050616962,32,FLEN)
NAN_BOXED(3157035171,32,FLEN)
NAN_BOXED(995525360,32,FLEN)
NAN_BOXED(1062643201,32,FLEN)
NAN_BOXED(3213967162,32,FLEN)
NAN_BOXED(1064538645,32,FLEN)
NAN_BOXED(1062643201,32,FLEN)
NAN_BOXED(3213967162,32,FLEN)
NAN_BOXED(1064538645,32,FLEN)
NAN_BOXED(1062643201,32,FLEN)
NAN_BOXED(3213967162,32,FLEN)
NAN_BOXED(1064538645,32,FLEN)
NAN_BOXED(1062643201,32,FLEN)
NAN_BOXED(3213967162,32,FLEN)
NAN_BOXED(1064538645,32,FLEN)
NAN_BOXED(1062643201,32,FLEN)
NAN_BOXED(3213967162,32,FLEN)
NAN_BOXED(1064538645,32,FLEN)
NAN_BOXED(1012526075,32,FLEN)
NAN_BOXED(3255584824,32,FLEN)
NAN_BOXED(1055839503,32,FLEN)
NAN_BOXED(1012526075,32,FLEN)
NAN_BOXED(3255584824,32,FLEN)
NAN_BOXED(1055839503,32,FLEN)
NAN_BOXED(1012526075,32,FLEN)
NAN_BOXED(3255584824,32,FLEN)
NAN_BOXED(1055839503,32,FLEN)
NAN_BOXED(1012526075,32,FLEN)
NAN_BOXED(3255584824,32,FLEN)
NAN_BOXED(1055839503,32,FLEN)
NAN_BOXED(1012526075,32,FLEN)
NAN_BOXED(3255584824,32,FLEN)
NAN_BOXED(1055839503,32,FLEN)
NAN_BOXED(1058543544,32,FLEN)
NAN_BOXED(3215216738,32,FLEN)
NAN_BOXED(1061371368,32,FLEN)
NAN_BOXED(1058543544,32,FLEN)
NAN_BOXED(3215216738,32,FLEN)
NAN_BOXED(1061371368,32,FLEN)
NAN_BOXED(1058543544,32,FLEN)
NAN_BOXED(3215216738,32,FLEN)
NAN_BOXED(1061371368,32,FLEN)
NAN_BOXED(1058543544,32,FLEN)
NAN_BOXED(3215216738,32,FLEN)
NAN_BOXED(1061371368,32,FLEN)
NAN_BOXED(1058543544,32,FLEN)
NAN_BOXED(3215216738,32,FLEN)
NAN_BOXED(1061371368,32,FLEN)
NAN_BOXED(1053811826,32,FLEN)
NAN_BOXED(3202025681,32,FLEN)
NAN_BOXED(1043455894,32,FLEN)
NAN_BOXED(1053811826,32,FLEN)
NAN_BOXED(3202025681,32,FLEN)
NAN_BOXED(1043455894,32,FLEN)
NAN_BOXED(1053811826,32,FLEN)
NAN_BOXED(3202025681,32,FLEN)
NAN_BOXED(1043455894,32,FLEN)
NAN_BOXED(1053811826,32,FLEN)
NAN_BOXED(3202025681,32,FLEN)
NAN_BOXED(1043455894,32,FLEN)
NAN_BOXED(1053811826,32,FLEN)
NAN_BOXED(3202025681,32,FLEN)
NAN_BOXED(1043455894,32,FLEN)
NAN_BOXED(1057708424,32,FLEN)
NAN_BOXED(3213359408,32,FLEN)
NAN_BOXED(1058277302,32,FLEN)
NAN_BOXED(1057708424,32,FLEN)
NAN_BOXED(3213359408,32,FLEN)
NAN_BOXED(1058277302,32,FLEN)
NAN_BOXED(1057708424,32,FLEN)
NAN_BOXED(3213359408,32,FLEN)
NAN_BOXED(1058277302,32,FLEN)
NAN_BOXED(1057708424,32,FLEN)
NAN_BOXED(3213359408,32,FLEN)
NAN_BOXED(1058277302,32,FLEN)
NAN_BOXED(1057708424,32,FLEN)
NAN_BOXED(3213359408,32,FLEN)
NAN_BOXED(1058277302,32,FLEN)
NAN_BOXED(1064418603,32,FLEN)
NAN_BOXED(3182823367,32,FLEN)
NAN_BOXED(1034675157,32,FLEN)
NAN_BOXED(1064418603,32,FLEN)
NAN_BOXED(3182823367,32,FLEN)
NAN_BOXED(1034675157,32,FLEN)
NAN_BOXED(1064418603,32,FLEN)
NAN_BOXED(3182823367,32,FLEN)
NAN_BOXED(1034675157,32,FLEN)
NAN_BOXED(1064418603,32,FLEN)
NAN_BOXED(3182823367,32,FLEN)
NAN_BOXED(1034675157,32,FLEN)
NAN_BOXED(1064418603,32,FLEN)
NAN_BOXED(3182823367,32,FLEN)
NAN_BOXED(1034675157,32,FLEN)
NAN_BOXED(1064804245,32,FLEN)
NAN_BOXED(3204843654,32,FLEN)
NAN_BOXED(1057072582,32,FLEN)
NAN_BOXED(1064804245,32,FLEN)
NAN_BOXED(3204843654,32,FLEN)
NAN_BOXED(1057072582,32,FLEN)
NAN_BOXED(1064804245,32,FLEN)
NAN_BOXED(3204843654,32,FLEN)
NAN_BOXED(1057072582,32,FLEN)
NAN_BOXED(1064804245,32,FLEN)
NAN_BOXED(3204843654,32,FLEN)
NAN_BOXED(1057072582,32,FLEN)
NAN_BOXED(1064804245,32,FLEN)
NAN_BOXED(3204843654,32,FLEN)
NAN_BOXED(1057072582,32,FLEN)
NAN_BOXED(1042641611,32,FLEN)
NAN_BOXED(3232510456,32,FLEN)
NAN_BOXED(1063162584,32,FLEN)
NAN_BOXED(1042641611,32,FLEN)
NAN_BOXED(3232510456,32,FLEN)
NAN_BOXED(1063162584,32,FLEN)
NAN_BOXED(1042641611,32,FLEN)
NAN_BOXED(3232510456,32,FLEN)
NAN_BOXED(1063162584,32,FLEN)
NAN_BOXED(1042641611,32,FLEN)
NAN_BOXED(3232510456,32,FLEN)
NAN_BOXED(1063162584,32,FLEN)
NAN_BOXED(1042641611,32,FLEN)
NAN_BOXED(3232510456,32,FLEN)
NAN_BOXED(1063162584,32,FLEN)
NAN_BOXED(1049191239,32,FLEN)
NAN_BOXED(3191837462,32,FLEN)
NAN_BOXED(1028497413,32,FLEN)
NAN_BOXED(1049191239,32,FLEN)
NAN_BOXED(3191837462,32,FLEN)
NAN_BOXED(1028497413,32,FLEN)
NAN_BOXED(1049191239,32,FLEN)
NAN_BOXED(3191837462,32,FLEN)
NAN_BOXED(1028497413,32,FLEN)
NAN_BOXED(1049191239,32,FLEN)
NAN_BOXED(3191837462,32,FLEN)
NAN_BOXED(1028497413,32,FLEN)
NAN_BOXED(1049191239,32,FLEN)
NAN_BOXED(3191837462,32,FLEN)
NAN_BOXED(1028497413,32,FLEN)
NAN_BOXED(1052589133,32,FLEN)
NAN_BOXED(3205682491,32,FLEN)
NAN_BOXED(1046025222,32,FLEN)
NAN_BOXED(1052589133,32,FLEN)
NAN_BOXED(3205682491,32,FLEN)
NAN_BOXED(1046025222,32,FLEN)
NAN_BOXED(1052589133,32,FLEN)
NAN_BOXED(3205682491,32,FLEN)
NAN_BOXED(1046025222,32,FLEN)
NAN_BOXED(1052589133,32,FLEN)
NAN_BOXED(3205682491,32,FLEN)
NAN_BOXED(1046025222,32,FLEN)
NAN_BOXED(1052589133,32,FLEN)
NAN_BOXED(3205682491,32,FLEN)
NAN_BOXED(1046025222,32,FLEN)
NAN_BOXED(1063564251,32,FLEN)
NAN_BOXED(3206678536,32,FLEN)
NAN_BOXED(1058062589,32,FLEN)
NAN_BOXED(1063564251,32,FLEN)
NAN_BOXED(3206678536,32,FLEN)
NAN_BOXED(1058062589,32,FLEN)
NAN_BOXED(1063564251,32,FLEN)
NAN_BOXED(3206678536,32,FLEN)
NAN_BOXED(1058062589,32,FLEN)
NAN_BOXED(1063564251,32,FLEN)
NAN_BOXED(3206678536,32,FLEN)
NAN_BOXED(1058062589,32,FLEN)
NAN_BOXED(1063564251,32,FLEN)
NAN_BOXED(3206678536,32,FLEN)
NAN_BOXED(1058062589,32,FLEN)
NAN_BOXED(1062849294,32,FLEN)
NAN_BOXED(3191530066,32,FLEN)
NAN_BOXED(1042218515,32,FLEN)
NAN_BOXED(1062849294,32,FLEN)
NAN_BOXED(3191530066,32,FLEN)
NAN_BOXED(1042218515,32,FLEN)
NAN_BOXED(1062849294,32,FLEN)
NAN_BOXED(3191530066,32,FLEN)
NAN_BOXED(1042218515,32,FLEN)
NAN_BOXED(1062849294,32,FLEN)
NAN_BOXED(3191530066,32,FLEN)
NAN_BOXED(1042218515,32,FLEN)
NAN_BOXED(1062849294,32,FLEN)
NAN_BOXED(3191530066,32,FLEN)
NAN_BOXED(1042218515,32,FLEN)
NAN_BOXED(1060407075,32,FLEN)
NAN_BOXED(3209069725,32,FLEN)
NAN_BOXED(1057750538,32,FLEN)
NAN_BOXED(1060407075,32,FLEN)
NAN_BOXED(3209069725,32,FLEN)
NAN_BOXED(1057750538,32,FLEN)
NAN_BOXED(1060407075,32,FLEN)
NAN_BOXED(3209069725,32,FLEN)
NAN_BOXED(1057750538,32,FLEN)
NAN_BOXED(1060407075,32,FLEN)
NAN_BOXED(3209069725,32,FLEN)
NAN_BOXED(1057750538,32,FLEN)
NAN_BOXED(1060407075,32,FLEN)
NAN_BOXED(3209069725,32,FLEN)
NAN_BOXED(1057750538,32,FLEN)
NAN_BOXED(976716720,32,FLEN)
NAN_BOXED(3277000012,32,FLEN)
NAN_BOXED(1041713939,32,FLEN)
NAN_BOXED(976716720,32,FLEN)
NAN_BOXED(3277000012,32,FLEN)
NAN_BOXED(1041713939,32,FLEN)
NAN_BOXED(976716720,32,FLEN)
NAN_BOXED(3277000012,32,FLEN)
NAN_BOXED(1041713939,32,FLEN)
NAN_BOXED(976716720,32,FLEN)
NAN_BOXED(3277000012,32,FLEN)
NAN_BOXED(1041713939,32,FLEN)
NAN_BOXED(976716720,32,FLEN)
NAN_BOXED(3277000012,32,FLEN)
NAN_BOXED(1041713939,32,FLEN)
NAN_BOXED(1019513797,32,FLEN)
NAN_BOXED(3249944055,32,FLEN)
NAN_BOXED(1057744077,32,FLEN)
NAN_BOXED(1019513797,32,FLEN)
NAN_BOXED(3249944055,32,FLEN)
NAN_BOXED(1057744077,32,FLEN)
NAN_BOXED(1019513797,32,FLEN)
NAN_BOXED(3249944055,32,FLEN)
NAN_BOXED(1057744077,32,FLEN)
NAN_BOXED(1019513797,32,FLEN)
NAN_BOXED(3249944055,32,FLEN)
NAN_BOXED(1057744077,32,FLEN)
NAN_BOXED(1019513797,32,FLEN)
NAN_BOXED(3249944055,32,FLEN)
NAN_BOXED(1057744077,32,FLEN)
NAN_BOXED(1057163267,32,FLEN)
NAN_BOXED(3204925980,32,FLEN)
NAN_BOXED(1049263697,32,FLEN)
NAN_BOXED(1057163267,32,FLEN)
NAN_BOXED(3204925980,32,FLEN)
NAN_BOXED(1049263697,32,FLEN)
NAN_BOXED(1057163267,32,FLEN)
NAN_BOXED(3204925980,32,FLEN)
NAN_BOXED(1049263697,32,FLEN)
NAN_BOXED(1057163267,32,FLEN)
NAN_BOXED(3204925980,32,FLEN)
NAN_BOXED(1049263697,32,FLEN)
NAN_BOXED(1057163267,32,FLEN)
NAN_BOXED(3204925980,32,FLEN)
NAN_BOXED(1049263697,32,FLEN)
NAN_BOXED(1057316217,32,FLEN)
NAN_BOXED(3215864413,32,FLEN)
NAN_BOXED(1060470666,32,FLEN)
NAN_BOXED(1057316217,32,FLEN)
NAN_BOXED(3215864413,32,FLEN)
NAN_BOXED(1060470666,32,FLEN)
NAN_BOXED(1057316217,32,FLEN)
NAN_BOXED(3215864413,32,FLEN)
NAN_BOXED(1060470666,32,FLEN)
NAN_BOXED(1057316217,32,FLEN)
NAN_BOXED(3215864413,32,FLEN)
NAN_BOXED(1060470666,32,FLEN)
NAN_BOXED(1057316217,32,FLEN)
NAN_BOXED(3215864413,32,FLEN)
NAN_BOXED(1060470666,32,FLEN)
NAN_BOXED(1058578753,32,FLEN)
NAN_BOXED(3216456804,32,FLEN)
NAN_BOXED(1062895247,32,FLEN)
NAN_BOXED(1058578753,32,FLEN)
NAN_BOXED(3216456804,32,FLEN)
NAN_BOXED(1062895247,32,FLEN)
NAN_BOXED(1058578753,32,FLEN)
NAN_BOXED(3216456804,32,FLEN)
NAN_BOXED(1062895247,32,FLEN)
NAN_BOXED(1058578753,32,FLEN)
NAN_BOXED(3216456804,32,FLEN)
NAN_BOXED(1062895247,32,FLEN)
NAN_BOXED(1058578753,32,FLEN)
NAN_BOXED(3216456804,32,FLEN)
NAN_BOXED(1062895247,32,FLEN)
NAN_BOXED(1059028193,32,FLEN)
NAN_BOXED(3164123531,32,FLEN)
NAN_BOXED(1010712963,32,FLEN)
NAN_BOXED(1059028193,32,FLEN)
NAN_BOXED(3164123531,32,FLEN)
NAN_BOXED(1010712963,32,FLEN)
NAN_BOXED(1059028193,32,FLEN)
NAN_BOXED(3164123531,32,FLEN)
NAN_BOXED(1010712963,32,FLEN)
NAN_BOXED(1059028193,32,FLEN)
NAN_BOXED(3164123531,32,FLEN)
NAN_BOXED(1010712963,32,FLEN)
NAN_BOXED(1059028193,32,FLEN)
NAN_BOXED(3164123531,32,FLEN)
NAN_BOXED(1010712963,32,FLEN)
NAN_BOXED(1025808409,32,FLEN)
NAN_BOXED(3239348164,32,FLEN)
NAN_BOXED(1052704370,32,FLEN)
NAN_BOXED(1025808409,32,FLEN)
NAN_BOXED(3239348164,32,FLEN)
NAN_BOXED(1052704370,32,FLEN)
NAN_BOXED(1025808409,32,FLEN)
NAN_BOXED(3239348164,32,FLEN)
NAN_BOXED(1052704370,32,FLEN)
NAN_BOXED(1025808409,32,FLEN)
NAN_BOXED(3239348164,32,FLEN)
NAN_BOXED(1052704370,32,FLEN)
NAN_BOXED(1025808409,32,FLEN)
NAN_BOXED(3239348164,32,FLEN)
NAN_BOXED(1052704370,32,FLEN)
NAN_BOXED(1056975975,32,FLEN)
NAN_BOXED(3215531721,32,FLEN)
NAN_BOXED(1059674484,32,FLEN)
NAN_BOXED(1056975975,32,FLEN)
NAN_BOXED(3215531721,32,FLEN)
NAN_BOXED(1059674484,32,FLEN)
NAN_BOXED(1056975975,32,FLEN)
NAN_BOXED(3215531721,32,FLEN)
NAN_BOXED(1059674484,32,FLEN)
NAN_BOXED(1056975975,32,FLEN)
NAN_BOXED(3215531721,32,FLEN)
NAN_BOXED(1059674484,32,FLEN)
NAN_BOXED(1056975975,32,FLEN)
NAN_BOXED(3215531721,32,FLEN)
NAN_BOXED(1059674484,32,FLEN)
NAN_BOXED(1063857738,32,FLEN)
NAN_BOXED(3209462998,32,FLEN)
NAN_BOXED(1060784610,32,FLEN)
NAN_BOXED(1063857738,32,FLEN)
NAN_BOXED(3209462998,32,FLEN)
NAN_BOXED(1060784610,32,FLEN)
NAN_BOXED(1063857738,32,FLEN)
NAN_BOXED(3209462998,32,FLEN)
NAN_BOXED(1060784610,32,FLEN)
NAN_BOXED(1063857738,32,FLEN)
NAN_BOXED(3209462998,32,FLEN)
NAN_BOXED(1060784610,32,FLEN)
NAN_BOXED(1063857738,32,FLEN)
NAN_BOXED(3209462998,32,FLEN)
NAN_BOXED(1060784610,32,FLEN)
NAN_BOXED(1046427243,32,FLEN)
NAN_BOXED(3206266408,32,FLEN)
NAN_BOXED(1040698304,32,FLEN)
NAN_BOXED(1046427243,32,FLEN)
NAN_BOXED(3206266408,32,FLEN)
NAN_BOXED(1040698304,32,FLEN)
NAN_BOXED(1046427243,32,FLEN)
NAN_BOXED(3206266408,32,FLEN)
NAN_BOXED(1040698304,32,FLEN)
NAN_BOXED(1046427243,32,FLEN)
NAN_BOXED(3206266408,32,FLEN)
NAN_BOXED(1040698304,32,FLEN)
NAN_BOXED(1046427243,32,FLEN)
NAN_BOXED(3206266408,32,FLEN)
NAN_BOXED(1040698304,32,FLEN)
NAN_BOXED(1059291167,32,FLEN)
NAN_BOXED(3198912915,32,FLEN)
NAN_BOXED(1046158565,32,FLEN)
NAN_BOXED(1059291167,32,FLEN)
NAN_BOXED(3198912915,32,FLEN)
NAN_BOXED(1046158565,32,FLEN)
NAN_BOXED(1059291167,32,FLEN)
NAN_BOXED(3198912915,32,FLEN)
NAN_BOXED(1046158565,32,FLEN)
NAN_BOXED(1059291167,32,FLEN)
NAN_BOXED(3198912915,32,FLEN)
NAN_BOXED(1046158565,32,FLEN)
NAN_BOXED(1059291167,32,FLEN)
NAN_BOXED(3198912915,32,FLEN)
NAN_BOXED(1046158565,32,FLEN)
NAN_BOXED(1046905117,32,FLEN)
NAN_BOXED(3215829359,32,FLEN)
NAN_BOXED(1050435024,32,FLEN)
NAN_BOXED(1046905117,32,FLEN)
NAN_BOXED(3215829359,32,FLEN)
NAN_BOXED(1050435024,32,FLEN)
NAN_BOXED(1046905117,32,FLEN)
NAN_BOXED(3215829359,32,FLEN)
NAN_BOXED(1050435024,32,FLEN)
NAN_BOXED(1046905117,32,FLEN)
NAN_BOXED(3215829359,32,FLEN)
NAN_BOXED(1050435024,32,FLEN)
NAN_BOXED(1046905117,32,FLEN)
NAN_BOXED(3215829359,32,FLEN)
NAN_BOXED(1050435024,32,FLEN)
NAN_BOXED(1051461062,32,FLEN)
NAN_BOXED(3208062071,32,FLEN)
NAN_BOXED(1047929155,32,FLEN)
NAN_BOXED(1051461062,32,FLEN)
NAN_BOXED(3208062071,32,FLEN)
NAN_BOXED(1047929155,32,FLEN)
NAN_BOXED(1051461062,32,FLEN)
NAN_BOXED(3208062071,32,FLEN)
NAN_BOXED(1047929155,32,FLEN)
NAN_BOXED(1051461062,32,FLEN)
NAN_BOXED(3208062071,32,FLEN)
NAN_BOXED(1047929155,32,FLEN)
NAN_BOXED(1051461062,32,FLEN)
NAN_BOXED(3208062071,32,FLEN)
NAN_BOXED(1047929155,32,FLEN)
NAN_BOXED(1059255842,32,FLEN)
NAN_BOXED(3203248875,32,FLEN)
NAN_BOXED(1050103747,32,FLEN)
NAN_BOXED(1059255842,32,FLEN)
NAN_BOXED(3203248875,32,FLEN)
NAN_BOXED(1050103747,32,FLEN)
NAN_BOXED(1059255842,32,FLEN)
NAN_BOXED(3203248875,32,FLEN)
NAN_BOXED(1050103747,32,FLEN)
NAN_BOXED(1059255842,32,FLEN)
NAN_BOXED(3203248875,32,FLEN)
NAN_BOXED(1050103747,32,FLEN)
NAN_BOXED(1059255842,32,FLEN)
NAN_BOXED(3203248875,32,FLEN)
NAN_BOXED(1050103747,32,FLEN)
NAN_BOXED(1060641300,32,FLEN)
NAN_BOXED(3208058250,32,FLEN)
NAN_BOXED(1057204770,32,FLEN)
NAN_BOXED(1060641300,32,FLEN)
NAN_BOXED(3208058250,32,FLEN)
NAN_BOXED(1057204770,32,FLEN)
NAN_BOXED(1060641300,32,FLEN)
NAN_BOXED(3208058250,32,FLEN)
NAN_BOXED(1057204770,32,FLEN)
NAN_BOXED(1060641300,32,FLEN)
NAN_BOXED(3208058250,32,FLEN)
NAN_BOXED(1057204770,32,FLEN)
NAN_BOXED(1060641300,32,FLEN)
NAN_BOXED(3208058250,32,FLEN)
NAN_BOXED(1057204770,32,FLEN)
NAN_BOXED(1047250769,32,FLEN)
NAN_BOXED(3215710072,32,FLEN)
NAN_BOXED(1050559638,32,FLEN)
NAN_BOXED(1047250769,32,FLEN)
NAN_BOXED(3215710072,32,FLEN)
NAN_BOXED(1050559638,32,FLEN)
NAN_BOXED(1047250769,32,FLEN)
NAN_BOXED(3215710072,32,FLEN)
NAN_BOXED(1050559638,32,FLEN)
NAN_BOXED(1047250769,32,FLEN)
NAN_BOXED(3215710072,32,FLEN)
NAN_BOXED(1050559638,32,FLEN)
NAN_BOXED(1047250769,32,FLEN)
NAN_BOXED(3215710072,32,FLEN)
NAN_BOXED(1050559638,32,FLEN)
NAN_BOXED(1060423196,32,FLEN)
NAN_BOXED(3181243614,32,FLEN)
NAN_BOXED(1029638535,32,FLEN)
NAN_BOXED(1060423196,32,FLEN)
NAN_BOXED(3181243614,32,FLEN)
NAN_BOXED(1029638535,32,FLEN)
NAN_BOXED(1060423196,32,FLEN)
NAN_BOXED(3181243614,32,FLEN)
NAN_BOXED(1029638535,32,FLEN)
NAN_BOXED(1060423196,32,FLEN)
NAN_BOXED(3181243614,32,FLEN)
NAN_BOXED(1029638535,32,FLEN)
NAN_BOXED(1060423196,32,FLEN)
NAN_BOXED(3181243614,32,FLEN)
NAN_BOXED(1029638535,32,FLEN)
NAN_BOXED(1051941772,32,FLEN)
NAN_BOXED(3214489914,32,FLEN)
NAN_BOXED(1054258079,32,FLEN)
NAN_BOXED(1051941772,32,FLEN)
NAN_BOXED(3214489914,32,FLEN)
NAN_BOXED(1054258079,32,FLEN)
NAN_BOXED(1051941772,32,FLEN)
NAN_BOXED(3214489914,32,FLEN)
NAN_BOXED(1054258079,32,FLEN)
NAN_BOXED(1051941772,32,FLEN)
NAN_BOXED(3214489914,32,FLEN)
NAN_BOXED(1054258079,32,FLEN)
NAN_BOXED(1051941772,32,FLEN)
NAN_BOXED(3214489914,32,FLEN)
NAN_BOXED(1054258079,32,FLEN)
NAN_BOXED(1065158924,32,FLEN)
NAN_BOXED(3203049597,32,FLEN)
NAN_BOXED(1055387855,32,FLEN)
NAN_BOXED(1065158924,32,FLEN)
NAN_BOXED(3203049597,32,FLEN)
NAN_BOXED(1055387855,32,FLEN)
NAN_BOXED(1065158924,32,FLEN)
NAN_BOXED(3203049597,32,FLEN)
NAN_BOXED(1055387855,32,FLEN)
NAN_BOXED(1065158924,32,FLEN)
NAN_BOXED(3203049597,32,FLEN)
NAN_BOXED(1055387855,32,FLEN)
NAN_BOXED(1065158924,32,FLEN)
NAN_BOXED(3203049597,32,FLEN)
NAN_BOXED(1055387855,32,FLEN)
NAN_BOXED(1061147297,32,FLEN)
NAN_BOXED(3202375059,32,FLEN)
NAN_BOXED(1051205227,32,FLEN)
NAN_BOXED(1061147297,32,FLEN)
NAN_BOXED(3202375059,32,FLEN)
NAN_BOXED(1051205227,32,FLEN)
NAN_BOXED(1061147297,32,FLEN)
NAN_BOXED(3202375059,32,FLEN)
NAN_BOXED(1051205227,32,FLEN)
NAN_BOXED(1061147297,32,FLEN)
NAN_BOXED(3202375059,32,FLEN)
NAN_BOXED(1051205227,32,FLEN)
NAN_BOXED(1061147297,32,FLEN)
NAN_BOXED(3202375059,32,FLEN)
NAN_BOXED(1051205227,32,FLEN)
NAN_BOXED(1057586388,32,FLEN)
NAN_BOXED(3199124505,32,FLEN)
NAN_BOXED(1044101203,32,FLEN)
NAN_BOXED(1057586388,32,FLEN)
NAN_BOXED(3199124505,32,FLEN)
NAN_BOXED(1044101203,32,FLEN)
NAN_BOXED(1057586388,32,FLEN)
NAN_BOXED(3199124505,32,FLEN)
NAN_BOXED(1044101203,32,FLEN)
NAN_BOXED(1057586388,32,FLEN)
NAN_BOXED(3199124505,32,FLEN)
NAN_BOXED(1044101203,32,FLEN)
NAN_BOXED(1057586388,32,FLEN)
NAN_BOXED(3199124505,32,FLEN)
NAN_BOXED(1044101203,32,FLEN)
NAN_BOXED(1052017445,32,FLEN)
NAN_BOXED(3205689906,32,FLEN)
NAN_BOXED(1045379876,32,FLEN)
NAN_BOXED(1052017445,32,FLEN)
NAN_BOXED(3205689906,32,FLEN)
NAN_BOXED(1045379876,32,FLEN)
NAN_BOXED(1052017445,32,FLEN)
NAN_BOXED(3205689906,32,FLEN)
NAN_BOXED(1045379876,32,FLEN)
NAN_BOXED(1052017445,32,FLEN)
NAN_BOXED(3205689906,32,FLEN)
NAN_BOXED(1045379876,32,FLEN)
NAN_BOXED(1052017445,32,FLEN)
NAN_BOXED(3205689906,32,FLEN)
NAN_BOXED(1045379876,32,FLEN)
NAN_BOXED(1059516682,32,FLEN)
NAN_BOXED(3205216968,32,FLEN)
NAN_BOXED(1052130653,32,FLEN)
NAN_BOXED(1059516682,32,FLEN)
NAN_BOXED(3205216968,32,FLEN)
NAN_BOXED(1052130653,32,FLEN)
NAN_BOXED(1059516682,32,FLEN)
NAN_BOXED(3205216968,32,FLEN)
NAN_BOXED(1052130653,32,FLEN)
NAN_BOXED(1059516682,32,FLEN)
NAN_BOXED(3205216968,32,FLEN)
NAN_BOXED(1052130653,32,FLEN)
NAN_BOXED(1059516682,32,FLEN)
NAN_BOXED(3205216968,32,FLEN)
NAN_BOXED(1052130653,32,FLEN)
NAN_BOXED(1048984446,32,FLEN)
NAN_BOXED(3207054371,32,FLEN)
NAN_BOXED(1043328847,32,FLEN)
NAN_BOXED(1048984446,32,FLEN)
NAN_BOXED(3207054371,32,FLEN)
NAN_BOXED(1043328847,32,FLEN)
NAN_BOXED(1048984446,32,FLEN)
NAN_BOXED(3207054371,32,FLEN)
NAN_BOXED(1043328847,32,FLEN)
NAN_BOXED(1048984446,32,FLEN)
NAN_BOXED(3207054371,32,FLEN)
NAN_BOXED(1043328847,32,FLEN)
NAN_BOXED(1048984446,32,FLEN)
NAN_BOXED(3207054371,32,FLEN)
NAN_BOXED(1043328847,32,FLEN)
NAN_BOXED(1059480432,32,FLEN)
NAN_BOXED(3195505362,32,FLEN)
NAN_BOXED(1042342956,32,FLEN)
NAN_BOXED(1059480432,32,FLEN)
NAN_BOXED(3195505362,32,FLEN)
NAN_BOXED(1042342956,32,FLEN)
NAN_BOXED(1059480432,32,FLEN)
NAN_BOXED(3195505362,32,FLEN)
NAN_BOXED(1042342956,32,FLEN)
NAN_BOXED(1059480432,32,FLEN)
NAN_BOXED(3195505362,32,FLEN)
NAN_BOXED(1042342956,32,FLEN)
NAN_BOXED(1059480432,32,FLEN)
NAN_BOXED(3195505362,32,FLEN)
NAN_BOXED(1042342956,32,FLEN)
NAN_BOXED(1040528892,32,FLEN)
NAN_BOXED(3222885462,32,FLEN)
NAN_BOXED(1050645068,32,FLEN)
NAN_BOXED(1040528892,32,FLEN)
NAN_BOXED(3222885462,32,FLEN)
NAN_BOXED(1050645068,32,FLEN)
NAN_BOXED(1040528892,32,FLEN)
NAN_BOXED(3222885462,32,FLEN)
NAN_BOXED(1050645068,32,FLEN)
NAN_BOXED(1040528892,32,FLEN)
NAN_BOXED(3222885462,32,FLEN)
NAN_BOXED(1050645068,32,FLEN)
NAN_BOXED(1040528892,32,FLEN)
NAN_BOXED(3222885462,32,FLEN)
NAN_BOXED(1050645068,32,FLEN)
NAN_BOXED(1019452262,32,FLEN)
NAN_BOXED(3219724623,32,FLEN)
NAN_BOXED(1026694087,32,FLEN)
NAN_BOXED(1019452262,32,FLEN)
NAN_BOXED(3219724623,32,FLEN)
NAN_BOXED(1026694087,32,FLEN)
NAN_BOXED(1019452262,32,FLEN)
NAN_BOXED(3219724623,32,FLEN)
NAN_BOXED(1026694087,32,FLEN)
NAN_BOXED(1019452262,32,FLEN)
NAN_BOXED(3219724623,32,FLEN)
NAN_BOXED(1026694087,32,FLEN)
NAN_BOXED(1019452262,32,FLEN)
NAN_BOXED(3219724623,32,FLEN)
NAN_BOXED(1026694087,32,FLEN)
NAN_BOXED(1056355949,32,FLEN)
NAN_BOXED(3212446884,32,FLEN)
NAN_BOXED(1055980118,32,FLEN)
NAN_BOXED(1056355949,32,FLEN)
NAN_BOXED(3212446884,32,FLEN)
NAN_BOXED(1055980118,32,FLEN)
NAN_BOXED(1056355949,32,FLEN)
NAN_BOXED(3212446884,32,FLEN)
NAN_BOXED(1055980118,32,FLEN)
NAN_BOXED(1056355949,32,FLEN)
NAN_BOXED(3212446884,32,FLEN)
NAN_BOXED(1055980118,32,FLEN)
NAN_BOXED(1056355949,32,FLEN)
NAN_BOXED(3212446884,32,FLEN)
NAN_BOXED(1055980118,32,FLEN)
NAN_BOXED(1062565302,32,FLEN)
NAN_BOXED(3192431709,32,FLEN)
NAN_BOXED(1042763011,32,FLEN)
NAN_BOXED(1062565302,32,FLEN)
NAN_BOXED(3192431709,32,FLEN)
NAN_BOXED(1042763011,32,FLEN)
NAN_BOXED(1062565302,32,FLEN)
NAN_BOXED(3192431709,32,FLEN)
NAN_BOXED(1042763011,32,FLEN)
NAN_BOXED(1062565302,32,FLEN)
NAN_BOXED(3192431709,32,FLEN)
NAN_BOXED(1042763011,32,FLEN)
NAN_BOXED(1062565302,32,FLEN)
NAN_BOXED(3192431709,32,FLEN)
NAN_BOXED(1042763011,32,FLEN)
NAN_BOXED(1031814663,32,FLEN)
NAN_BOXED(3238367984,32,FLEN)
NAN_BOXED(1057346475,32,FLEN)
NAN_BOXED(1031814663,32,FLEN)
NAN_BOXED(3238367984,32,FLEN)
NAN_BOXED(1057346475,32,FLEN)
NAN_BOXED(1031814663,32,FLEN)
NAN_BOXED(3238367984,32,FLEN)
NAN_BOXED(1057346475,32,FLEN)
NAN_BOXED(1031814663,32,FLEN)
NAN_BOXED(3238367984,32,FLEN)
NAN_BOXED(1057346475,32,FLEN)
NAN_BOXED(1031814663,32,FLEN)
NAN_BOXED(3238367984,32,FLEN)
NAN_BOXED(1057346475,32,FLEN)
NAN_BOXED(1050541431,32,FLEN)
NAN_BOXED(3211300317,32,FLEN)
NAN_BOXED(1049593153,32,FLEN)
NAN_BOXED(1050541431,32,FLEN)
NAN_BOXED(3211300317,32,FLEN)
NAN_BOXED(1049593153,32,FLEN)
NAN_BOXED(1050541431,32,FLEN)
NAN_BOXED(3211300317,32,FLEN)
NAN_BOXED(1049593153,32,FLEN)
NAN_BOXED(1050541431,32,FLEN)
NAN_BOXED(3211300317,32,FLEN)
NAN_BOXED(1049593153,32,FLEN)
NAN_BOXED(1050541431,32,FLEN)
NAN_BOXED(3211300317,32,FLEN)
NAN_BOXED(1049593153,32,FLEN)
NAN_BOXED(1049235229,32,FLEN)
NAN_BOXED(3225718949,32,FLEN)
NAN_BOXED(1062470441,32,FLEN)
NAN_BOXED(1049235229,32,FLEN)
NAN_BOXED(3225718949,32,FLEN)
NAN_BOXED(1062470441,32,FLEN)
NAN_BOXED(1049235229,32,FLEN)
NAN_BOXED(3225718949,32,FLEN)
NAN_BOXED(1062470441,32,FLEN)
NAN_BOXED(1049235229,32,FLEN)
NAN_BOXED(3225718949,32,FLEN)
NAN_BOXED(1062470441,32,FLEN)
NAN_BOXED(1049235229,32,FLEN)
NAN_BOXED(3225718949,32,FLEN)
NAN_BOXED(1062470441,32,FLEN)
NAN_BOXED(1046537794,32,FLEN)
NAN_BOXED(3220457683,32,FLEN)
NAN_BOXED(1054251889,32,FLEN)
NAN_BOXED(1046537794,32,FLEN)
NAN_BOXED(3220457683,32,FLEN)
NAN_BOXED(1054251889,32,FLEN)
NAN_BOXED(1046537794,32,FLEN)
NAN_BOXED(3220457683,32,FLEN)
NAN_BOXED(1054251889,32,FLEN)
NAN_BOXED(1046537794,32,FLEN)
NAN_BOXED(3220457683,32,FLEN)
NAN_BOXED(1054251889,32,FLEN)
NAN_BOXED(1046537794,32,FLEN)
NAN_BOXED(3220457683,32,FLEN)
NAN_BOXED(1054251889,32,FLEN)
NAN_BOXED(1051409462,32,FLEN)
NAN_BOXED(3218976105,32,FLEN)
NAN_BOXED(1058293497,32,FLEN)
NAN_BOXED(1051409462,32,FLEN)
NAN_BOXED(3218976105,32,FLEN)
NAN_BOXED(1058293497,32,FLEN)
NAN_BOXED(1051409462,32,FLEN)
NAN_BOXED(3218976105,32,FLEN)
NAN_BOXED(1058293497,32,FLEN)
NAN_BOXED(1051409462,32,FLEN)
NAN_BOXED(3218976105,32,FLEN)
NAN_BOXED(1058293497,32,FLEN)
NAN_BOXED(1051409462,32,FLEN)
NAN_BOXED(3218976105,32,FLEN)
NAN_BOXED(1058293497,32,FLEN)
NAN_BOXED(1052812680,32,FLEN)
NAN_BOXED(3206105355,32,FLEN)
NAN_BOXED(1046918092,32,FLEN)
NAN_BOXED(1052812680,32,FLEN)
NAN_BOXED(3206105355,32,FLEN)
NAN_BOXED(1046918092,32,FLEN)
NAN_BOXED(1052812680,32,FLEN)
NAN_BOXED(3206105355,32,FLEN)
NAN_BOXED(1046918092,32,FLEN)
NAN_BOXED(1052812680,32,FLEN)
NAN_BOXED(3206105355,32,FLEN)
NAN_BOXED(1046918092,32,FLEN)
NAN_BOXED(1052812680,32,FLEN)
NAN_BOXED(3206105355,32,FLEN)
NAN_BOXED(1046918092,32,FLEN)
NAN_BOXED(1052372124,32,FLEN)
NAN_BOXED(3208976850,32,FLEN)
NAN_BOXED(1049568725,32,FLEN)
NAN_BOXED(1052372124,32,FLEN)
NAN_BOXED(3208976850,32,FLEN)
NAN_BOXED(1049568725,32,FLEN)
NAN_BOXED(1052372124,32,FLEN)
NAN_BOXED(3208976850,32,FLEN)
NAN_BOXED(1049568725,32,FLEN)
NAN_BOXED(1052372124,32,FLEN)
NAN_BOXED(3208976850,32,FLEN)
NAN_BOXED(1049568725,32,FLEN)
NAN_BOXED(1052372124,32,FLEN)
NAN_BOXED(3208976850,32,FLEN)
NAN_BOXED(1049568725,32,FLEN)
NAN_BOXED(1064889795,32,FLEN)
NAN_BOXED(3210552442,32,FLEN)
NAN_BOXED(1062668474,32,FLEN)
NAN_BOXED(1064889795,32,FLEN)
NAN_BOXED(3210552442,32,FLEN)
NAN_BOXED(1062668474,32,FLEN)
NAN_BOXED(1064889795,32,FLEN)
NAN_BOXED(3210552442,32,FLEN)
NAN_BOXED(1062668474,32,FLEN)
NAN_BOXED(1064889795,32,FLEN)
NAN_BOXED(3210552442,32,FLEN)
NAN_BOXED(1062668474,32,FLEN)
NAN_BOXED(1064889795,32,FLEN)
NAN_BOXED(3210552442,32,FLEN)
NAN_BOXED(1062668474,32,FLEN)
NAN_BOXED(1057953315,32,FLEN)
NAN_BOXED(3206561938,32,FLEN)
NAN_BOXED(1051927515,32,FLEN)
NAN_BOXED(1057953315,32,FLEN)
NAN_BOXED(3206561938,32,FLEN)
NAN_BOXED(1051927515,32,FLEN)
NAN_BOXED(1057953315,32,FLEN)
NAN_BOXED(3206561938,32,FLEN)
NAN_BOXED(1051927515,32,FLEN)
NAN_BOXED(1057953315,32,FLEN)
NAN_BOXED(3206561938,32,FLEN)
NAN_BOXED(1051927515,32,FLEN)
NAN_BOXED(1057953315,32,FLEN)
NAN_BOXED(3206561938,32,FLEN)
NAN_BOXED(1051927515,32,FLEN)
NAN_BOXED(1061678365,32,FLEN)
NAN_BOXED(3201164051,32,FLEN)
NAN_BOXED(1050724918,32,FLEN)
NAN_BOXED(1061678365,32,FLEN)
NAN_BOXED(3201164051,32,FLEN)
NAN_BOXED(1050724918,32,FLEN)
NAN_BOXED(1061678365,32,FLEN)
NAN_BOXED(3201164051,32,FLEN)
NAN_BOXED(1050724918,32,FLEN)
NAN_BOXED(1061678365,32,FLEN)
NAN_BOXED(3201164051,32,FLEN)
NAN_BOXED(1050724918,32,FLEN)
NAN_BOXED(1061678365,32,FLEN)
NAN_BOXED(3201164051,32,FLEN)
NAN_BOXED(1050724918,32,FLEN)
NAN_BOXED(1052573501,32,FLEN)
NAN_BOXED(3223723734,32,FLEN)
NAN_BOXED(1064650893,32,FLEN)
NAN_BOXED(1052573501,32,FLEN)
NAN_BOXED(3223723734,32,FLEN)
NAN_BOXED(1064650893,32,FLEN)
NAN_BOXED(1052573501,32,FLEN)
NAN_BOXED(3223723734,32,FLEN)
NAN_BOXED(1064650893,32,FLEN)
NAN_BOXED(1052573501,32,FLEN)
NAN_BOXED(3223723734,32,FLEN)
NAN_BOXED(1064650893,32,FLEN)
NAN_BOXED(1052573501,32,FLEN)
NAN_BOXED(3223723734,32,FLEN)
NAN_BOXED(1064650893,32,FLEN)
NAN_BOXED(1057441324,32,FLEN)
NAN_BOXED(3216731695,32,FLEN)
NAN_BOXED(1061557495,32,FLEN)
NAN_BOXED(1057441324,32,FLEN)
NAN_BOXED(3216731695,32,FLEN)
NAN_BOXED(1061557495,32,FLEN)
NAN_BOXED(1057441324,32,FLEN)
NAN_BOXED(3216731695,32,FLEN)
NAN_BOXED(1061557495,32,FLEN)
NAN_BOXED(1057441324,32,FLEN)
NAN_BOXED(3216731695,32,FLEN)
NAN_BOXED(1061557495,32,FLEN)
NAN_BOXED(1057441324,32,FLEN)
NAN_BOXED(3216731695,32,FLEN)
NAN_BOXED(1061557495,32,FLEN)
NAN_BOXED(1064444847,32,FLEN)
NAN_BOXED(3211428786,32,FLEN)
NAN_BOXED(1063113006,32,FLEN)
NAN_BOXED(1064444847,32,FLEN)
NAN_BOXED(3211428786,32,FLEN)
NAN_BOXED(1063113006,32,FLEN)
NAN_BOXED(1064444847,32,FLEN)
NAN_BOXED(3211428786,32,FLEN)
NAN_BOXED(1063113006,32,FLEN)
NAN_BOXED(1064444847,32,FLEN)
NAN_BOXED(3211428786,32,FLEN)
NAN_BOXED(1063113006,32,FLEN)
NAN_BOXED(1064444847,32,FLEN)
NAN_BOXED(3211428786,32,FLEN)
NAN_BOXED(1063113006,32,FLEN)
NAN_BOXED(1060028952,32,FLEN)
NAN_BOXED(3214505661,32,FLEN)
NAN_BOXED(1062307359,32,FLEN)
NAN_BOXED(1060028952,32,FLEN)
NAN_BOXED(3214505661,32,FLEN)
NAN_BOXED(1062307359,32,FLEN)
NAN_BOXED(1060028952,32,FLEN)
NAN_BOXED(3214505661,32,FLEN)
NAN_BOXED(1062307359,32,FLEN)
NAN_BOXED(1060028952,32,FLEN)
NAN_BOXED(3214505661,32,FLEN)
NAN_BOXED(1062307359,32,FLEN)
NAN_BOXED(1060028952,32,FLEN)
NAN_BOXED(3214505661,32,FLEN)
NAN_BOXED(1062307359,32,FLEN)
NAN_BOXED(1062109171,32,FLEN)
NAN_BOXED(3214476883,32,FLEN)
NAN_BOXED(1064754981,32,FLEN)
NAN_BOXED(1062109171,32,FLEN)
NAN_BOXED(3214476883,32,FLEN)
NAN_BOXED(1064754981,32,FLEN)
NAN_BOXED(1062109171,32,FLEN)
NAN_BOXED(3214476883,32,FLEN)
NAN_BOXED(1064754981,32,FLEN)
NAN_BOXED(1062109171,32,FLEN)
NAN_BOXED(3214476883,32,FLEN)
NAN_BOXED(1064754981,32,FLEN)
NAN_BOXED(1062109171,32,FLEN)
NAN_BOXED(3214476883,32,FLEN)
NAN_BOXED(1064754981,32,FLEN)
NAN_BOXED(1057546271,32,FLEN)
NAN_BOXED(3214170947,32,FLEN)
NAN_BOXED(1058972860,32,FLEN)
NAN_BOXED(1057546271,32,FLEN)
NAN_BOXED(3214170947,32,FLEN)
NAN_BOXED(1058972860,32,FLEN)
NAN_BOXED(1057546271,32,FLEN)
NAN_BOXED(3214170947,32,FLEN)
NAN_BOXED(1058972860,32,FLEN)
NAN_BOXED(1057546271,32,FLEN)
NAN_BOXED(3214170947,32,FLEN)
NAN_BOXED(1058972860,32,FLEN)
NAN_BOXED(1057546271,32,FLEN)
NAN_BOXED(3214170947,32,FLEN)
NAN_BOXED(1058972860,32,FLEN)
NAN_BOXED(1053213425,32,FLEN)
NAN_BOXED(3213304249,32,FLEN)
NAN_BOXED(1053939192,32,FLEN)
NAN_BOXED(1053213425,32,FLEN)
NAN_BOXED(3213304249,32,FLEN)
NAN_BOXED(1053939192,32,FLEN)
NAN_BOXED(1053213425,32,FLEN)
NAN_BOXED(3213304249,32,FLEN)
NAN_BOXED(1053939192,32,FLEN)
NAN_BOXED(1053213425,32,FLEN)
NAN_BOXED(3213304249,32,FLEN)
NAN_BOXED(1053939192,32,FLEN)
NAN_BOXED(1053213425,32,FLEN)
NAN_BOXED(3213304249,32,FLEN)
NAN_BOXED(1053939192,32,FLEN)
NAN_BOXED(1061362815,32,FLEN)
NAN_BOXED(3187807386,32,FLEN)
NAN_BOXED(1036404824,32,FLEN)
NAN_BOXED(1061362815,32,FLEN)
NAN_BOXED(3187807386,32,FLEN)
NAN_BOXED(1036404824,32,FLEN)
NAN_BOXED(1061362815,32,FLEN)
NAN_BOXED(3187807386,32,FLEN)
NAN_BOXED(1036404824,32,FLEN)
NAN_BOXED(1061362815,32,FLEN)
NAN_BOXED(3187807386,32,FLEN)
NAN_BOXED(1036404824,32,FLEN)
NAN_BOXED(1061362815,32,FLEN)
NAN_BOXED(3187807386,32,FLEN)
NAN_BOXED(1036404824,32,FLEN)
NAN_BOXED(1065342132,32,FLEN)
NAN_BOXED(3206042382,32,FLEN)
NAN_BOXED(1058552139,32,FLEN)
NAN_BOXED(1065342132,32,FLEN)
NAN_BOXED(3206042382,32,FLEN)
NAN_BOXED(1058552139,32,FLEN)
NAN_BOXED(1065342132,32,FLEN)
NAN_BOXED(3206042382,32,FLEN)
NAN_BOXED(1058552139,32,FLEN)
NAN_BOXED(1065342132,32,FLEN)
NAN_BOXED(3206042382,32,FLEN)
NAN_BOXED(1058552139,32,FLEN)
NAN_BOXED(1065342132,32,FLEN)
NAN_BOXED(3206042382,32,FLEN)
NAN_BOXED(1058552139,32,FLEN)
NAN_BOXED(1060680290,32,FLEN)
NAN_BOXED(3209778612,32,FLEN)
NAN_BOXED(1058473847,32,FLEN)
NAN_BOXED(1060680290,32,FLEN)
NAN_BOXED(3209778612,32,FLEN)
NAN_BOXED(1058473847,32,FLEN)
NAN_BOXED(1060680290,32,FLEN)
NAN_BOXED(3209778612,32,FLEN)
NAN_BOXED(1058473847,32,FLEN)
NAN_BOXED(1060680290,32,FLEN)
NAN_BOXED(3209778612,32,FLEN)
NAN_BOXED(1058473847,32,FLEN)
NAN_BOXED(1060680290,32,FLEN)
NAN_BOXED(3209778612,32,FLEN)
NAN_BOXED(1058473847,32,FLEN)
NAN_BOXED(1063422587,32,FLEN)
NAN_BOXED(3192070585,32,FLEN)
NAN_BOXED(1043115347,32,FLEN)
NAN_BOXED(1063422587,32,FLEN)
NAN_BOXED(3192070585,32,FLEN)
NAN_BOXED(1043115347,32,FLEN)
NAN_BOXED(1063422587,32,FLEN)
NAN_BOXED(3192070585,32,FLEN)
NAN_BOXED(1043115347,32,FLEN)
NAN_BOXED(1063422587,32,FLEN)
NAN_BOXED(3192070585,32,FLEN)
NAN_BOXED(1043115347,32,FLEN)
NAN_BOXED(1063422587,32,FLEN)
NAN_BOXED(3192070585,32,FLEN)
NAN_BOXED(1043115347,32,FLEN)
NAN_BOXED(1059080556,32,FLEN)
NAN_BOXED(3217362861,32,FLEN)
NAN_BOXED(1064748194,32,FLEN)
NAN_BOXED(1059080556,32,FLEN)
NAN_BOXED(3217362861,32,FLEN)
NAN_BOXED(1064748194,32,FLEN)
NAN_BOXED(1059080556,32,FLEN)
NAN_BOXED(3217362861,32,FLEN)
NAN_BOXED(1064748194,32,FLEN)
NAN_BOXED(1059080556,32,FLEN)
NAN_BOXED(3217362861,32,FLEN)
NAN_BOXED(1064748194,32,FLEN)
NAN_BOXED(1059080556,32,FLEN)
NAN_BOXED(3217362861,32,FLEN)
NAN_BOXED(1064748194,32,FLEN)
NAN_BOXED(1053154029,32,FLEN)
NAN_BOXED(3222661502,32,FLEN)
NAN_BOXED(1063762372,32,FLEN)
NAN_BOXED(1053154029,32,FLEN)
NAN_BOXED(3222661502,32,FLEN)
NAN_BOXED(1063762372,32,FLEN)
NAN_BOXED(1053154029,32,FLEN)
NAN_BOXED(3222661502,32,FLEN)
NAN_BOXED(1063762372,32,FLEN)
NAN_BOXED(1053154029,32,FLEN)
NAN_BOXED(3222661502,32,FLEN)
NAN_BOXED(1063762372,32,FLEN)
NAN_BOXED(1053154029,32,FLEN)
NAN_BOXED(3222661502,32,FLEN)
NAN_BOXED(1063762372,32,FLEN)
NAN_BOXED(1055447247,32,FLEN)
NAN_BOXED(3216633815,32,FLEN)
NAN_BOXED(1059659476,32,FLEN)
NAN_BOXED(1055447247,32,FLEN)
NAN_BOXED(3216633815,32,FLEN)
NAN_BOXED(1059659476,32,FLEN)
NAN_BOXED(1055447247,32,FLEN)
NAN_BOXED(3216633815,32,FLEN)
NAN_BOXED(1059659476,32,FLEN)
NAN_BOXED(1055447247,32,FLEN)
NAN_BOXED(3216633815,32,FLEN)
NAN_BOXED(1059659476,32,FLEN)
NAN_BOXED(1055447247,32,FLEN)
NAN_BOXED(3216633815,32,FLEN)
NAN_BOXED(1059659476,32,FLEN)
NAN_BOXED(1054250180,32,FLEN)
NAN_BOXED(3184248062,32,FLEN)
NAN_BOXED(1026215191,32,FLEN)
NAN_BOXED(1054250180,32,FLEN)
NAN_BOXED(3184248062,32,FLEN)
NAN_BOXED(1026215191,32,FLEN)
NAN_BOXED(1054250180,32,FLEN)
NAN_BOXED(3184248062,32,FLEN)
NAN_BOXED(1026215191,32,FLEN)
NAN_BOXED(1054250180,32,FLEN)
NAN_BOXED(3184248062,32,FLEN)
NAN_BOXED(1026215191,32,FLEN)
NAN_BOXED(1054250180,32,FLEN)
NAN_BOXED(3184248062,32,FLEN)
NAN_BOXED(1026215191,32,FLEN)
NAN_BOXED(1043977566,32,FLEN)
NAN_BOXED(3226262530,32,FLEN)
NAN_BOXED(1058321852,32,FLEN)
NAN_BOXED(1043977566,32,FLEN)
NAN_BOXED(3226262530,32,FLEN)
NAN_BOXED(1058321852,32,FLEN)
NAN_BOXED(1043977566,32,FLEN)
NAN_BOXED(3226262530,32,FLEN)
NAN_BOXED(1058321852,32,FLEN)
NAN_BOXED(1043977566,32,FLEN)
NAN_BOXED(3226262530,32,FLEN)
NAN_BOXED(1058321852,32,FLEN)
NAN_BOXED(1043977566,32,FLEN)
NAN_BOXED(3226262530,32,FLEN)
NAN_BOXED(1058321852,32,FLEN)
NAN_BOXED(1044348822,32,FLEN)
NAN_BOXED(3220493556,32,FLEN)
NAN_BOXED(1052189928,32,FLEN)
NAN_BOXED(1044348822,32,FLEN)
NAN_BOXED(3220493556,32,FLEN)
NAN_BOXED(1052189928,32,FLEN)
NAN_BOXED(1044348822,32,FLEN)
NAN_BOXED(3220493556,32,FLEN)
NAN_BOXED(1052189928,32,FLEN)
NAN_BOXED(1044348822,32,FLEN)
NAN_BOXED(3220493556,32,FLEN)
NAN_BOXED(1052189928,32,FLEN)
NAN_BOXED(1044348822,32,FLEN)
NAN_BOXED(3220493556,32,FLEN)
NAN_BOXED(1052189928,32,FLEN)
NAN_BOXED(1059154995,32,FLEN)
NAN_BOXED(3215861147,32,FLEN)
NAN_BOXED(1062968964,32,FLEN)
NAN_BOXED(1059154995,32,FLEN)
NAN_BOXED(3215861147,32,FLEN)
NAN_BOXED(1062968964,32,FLEN)
NAN_BOXED(1059154995,32,FLEN)
NAN_BOXED(3215861147,32,FLEN)
NAN_BOXED(1062968964,32,FLEN)
NAN_BOXED(1059154995,32,FLEN)
NAN_BOXED(3215861147,32,FLEN)
NAN_BOXED(1062968964,32,FLEN)
NAN_BOXED(1059154995,32,FLEN)
NAN_BOXED(3215861147,32,FLEN)
NAN_BOXED(1062968964,32,FLEN)
NAN_BOXED(1053745474,32,FLEN)
NAN_BOXED(3213502835,32,FLEN)
NAN_BOXED(1054821850,32,FLEN)
NAN_BOXED(1053745474,32,FLEN)
NAN_BOXED(3213502835,32,FLEN)
NAN_BOXED(1054821850,32,FLEN)
NAN_BOXED(1053745474,32,FLEN)
NAN_BOXED(3213502835,32,FLEN)
NAN_BOXED(1054821850,32,FLEN)
NAN_BOXED(1053745474,32,FLEN)
NAN_BOXED(3213502835,32,FLEN)
NAN_BOXED(1054821850,32,FLEN)
NAN_BOXED(1053745474,32,FLEN)
NAN_BOXED(3213502835,32,FLEN)
NAN_BOXED(1054821850,32,FLEN)
NAN_BOXED(1026507225,32,FLEN)
NAN_BOXED(3208608260,32,FLEN)
NAN_BOXED(1023612329,32,FLEN)
NAN_BOXED(1026507225,32,FLEN)
NAN_BOXED(3208608260,32,FLEN)
NAN_BOXED(1023612329,32,FLEN)
NAN_BOXED(1026507225,32,FLEN)
NAN_BOXED(3208608260,32,FLEN)
NAN_BOXED(1023612329,32,FLEN)
NAN_BOXED(1026507225,32,FLEN)
NAN_BOXED(3208608260,32,FLEN)
NAN_BOXED(1023612329,32,FLEN)
NAN_BOXED(1026507225,32,FLEN)
NAN_BOXED(3208608260,32,FLEN)
NAN_BOXED(1023612329,32,FLEN)
NAN_BOXED(1053320264,32,FLEN)
NAN_BOXED(3218355691,32,FLEN)
NAN_BOXED(1059462465,32,FLEN)
NAN_BOXED(1053320264,32,FLEN)
NAN_BOXED(3218355691,32,FLEN)
NAN_BOXED(1059462465,32,FLEN)
NAN_BOXED(1053320264,32,FLEN)
NAN_BOXED(3218355691,32,FLEN)
NAN_BOXED(1059462465,32,FLEN)
NAN_BOXED(1053320264,32,FLEN)
NAN_BOXED(3218355691,32,FLEN)
NAN_BOXED(1059462465,32,FLEN)
NAN_BOXED(1053320264,32,FLEN)
NAN_BOXED(3218355691,32,FLEN)
NAN_BOXED(1059462465,32,FLEN)
NAN_BOXED(1037708793,32,FLEN)
NAN_BOXED(3239447488,32,FLEN)
NAN_BOXED(1065337319,32,FLEN)
NAN_BOXED(1037708793,32,FLEN)
NAN_BOXED(3239447488,32,FLEN)
NAN_BOXED(1065337319,32,FLEN)
NAN_BOXED(1037708793,32,FLEN)
NAN_BOXED(3239447488,32,FLEN)
NAN_BOXED(1065337319,32,FLEN)
NAN_BOXED(1037708793,32,FLEN)
NAN_BOXED(3239447488,32,FLEN)
NAN_BOXED(1065337319,32,FLEN)
NAN_BOXED(1037708793,32,FLEN)
NAN_BOXED(3239447488,32,FLEN)
NAN_BOXED(1065337319,32,FLEN)
NAN_BOXED(1063542646,32,FLEN)
NAN_BOXED(3204002427,32,FLEN)
NAN_BOXED(1054756323,32,FLEN)
NAN_BOXED(1063542646,32,FLEN)
NAN_BOXED(3204002427,32,FLEN)
NAN_BOXED(1054756323,32,FLEN)
NAN_BOXED(1063542646,32,FLEN)
NAN_BOXED(3204002427,32,FLEN)
NAN_BOXED(1054756323,32,FLEN)
NAN_BOXED(1063542646,32,FLEN)
NAN_BOXED(3204002427,32,FLEN)
NAN_BOXED(1054756323,32,FLEN)
NAN_BOXED(1063542646,32,FLEN)
NAN_BOXED(3204002427,32,FLEN)
NAN_BOXED(1054756323,32,FLEN)
NAN_BOXED(1053100209,32,FLEN)
NAN_BOXED(3222202415,32,FLEN)
NAN_BOXED(1062992653,32,FLEN)
NAN_BOXED(1053100209,32,FLEN)
NAN_BOXED(3222202415,32,FLEN)
NAN_BOXED(1062992653,32,FLEN)
NAN_BOXED(1053100209,32,FLEN)
NAN_BOXED(3222202415,32,FLEN)
NAN_BOXED(1062992653,32,FLEN)
NAN_BOXED(1053100209,32,FLEN)
NAN_BOXED(3222202415,32,FLEN)
NAN_BOXED(1062992653,32,FLEN)
NAN_BOXED(1053100209,32,FLEN)
NAN_BOXED(3222202415,32,FLEN)
NAN_BOXED(1062992653,32,FLEN)
NAN_BOXED(1052620775,32,FLEN)
NAN_BOXED(3197515973,32,FLEN)
NAN_BOXED(1038002088,32,FLEN)
NAN_BOXED(1052620775,32,FLEN)
NAN_BOXED(3197515973,32,FLEN)
NAN_BOXED(1038002088,32,FLEN)
NAN_BOXED(1052620775,32,FLEN)
NAN_BOXED(3197515973,32,FLEN)
NAN_BOXED(1038002088,32,FLEN)
NAN_BOXED(1052620775,32,FLEN)
NAN_BOXED(3197515973,32,FLEN)
NAN_BOXED(1038002088,32,FLEN)
NAN_BOXED(1052620775,32,FLEN)
NAN_BOXED(3197515973,32,FLEN)
NAN_BOXED(1038002088,32,FLEN)
NAN_BOXED(1059047527,32,FLEN)
NAN_BOXED(3211336004,32,FLEN)
NAN_BOXED(1058110763,32,FLEN)
NAN_BOXED(1059047527,32,FLEN)
NAN_BOXED(3211336004,32,FLEN)
NAN_BOXED(1058110763,32,FLEN)
NAN_BOXED(1059047527,32,FLEN)
NAN_BOXED(3211336004,32,FLEN)
NAN_BOXED(1058110763,32,FLEN)
NAN_BOXED(1059047527,32,FLEN)
NAN_BOXED(3211336004,32,FLEN)
NAN_BOXED(1058110763,32,FLEN)
NAN_BOXED(1059047527,32,FLEN)
NAN_BOXED(3211336004,32,FLEN)
NAN_BOXED(1058110763,32,FLEN)
NAN_BOXED(1061555930,32,FLEN)
NAN_BOXED(3211423871,32,FLEN)
NAN_BOXED(1060462748,32,FLEN)
NAN_BOXED(1061555930,32,FLEN)
NAN_BOXED(3211423871,32,FLEN)
NAN_BOXED(1060462748,32,FLEN)
NAN_BOXED(1061555930,32,FLEN)
NAN_BOXED(3211423871,32,FLEN)
NAN_BOXED(1060462748,32,FLEN)
NAN_BOXED(1061555930,32,FLEN)
NAN_BOXED(3211423871,32,FLEN)
NAN_BOXED(1060462748,32,FLEN)
NAN_BOXED(1061555930,32,FLEN)
NAN_BOXED(3211423871,32,FLEN)
NAN_BOXED(1060462748,32,FLEN)
NAN_BOXED(1021421269,32,FLEN)
NAN_BOXED(3249807706,32,FLEN)
NAN_BOXED(1058981555,32,FLEN)
NAN_BOXED(1021421269,32,FLEN)
NAN_BOXED(3249807706,32,FLEN)
NAN_BOXED(1058981555,32,FLEN)
NAN_BOXED(1021421269,32,FLEN)
NAN_BOXED(3249807706,32,FLEN)
NAN_BOXED(1058981555,32,FLEN)
NAN_BOXED(1021421269,32,FLEN)
NAN_BOXED(3249807706,32,FLEN)
NAN_BOXED(1058981555,32,FLEN)
NAN_BOXED(1021421269,32,FLEN)
NAN_BOXED(3249807706,32,FLEN)
NAN_BOXED(1058981555,32,FLEN)
NAN_BOXED(1025453212,32,FLEN)
NAN_BOXED(3222146225,32,FLEN)
NAN_BOXED(1034986821,32,FLEN)
NAN_BOXED(1025453212,32,FLEN)
NAN_BOXED(3222146225,32,FLEN)
NAN_BOXED(1034986821,32,FLEN)
NAN_BOXED(1025453212,32,FLEN)
NAN_BOXED(3222146225,32,FLEN)
NAN_BOXED(1034986821,32,FLEN)
NAN_BOXED(1025453212,32,FLEN)
NAN_BOXED(3222146225,32,FLEN)
NAN_BOXED(1034986821,32,FLEN)
NAN_BOXED(1025453212,32,FLEN)
NAN_BOXED(3222146225,32,FLEN)
NAN_BOXED(1034986821,32,FLEN)
NAN_BOXED(1053749758,32,FLEN)
NAN_BOXED(3219809943,32,FLEN)
NAN_BOXED(1060994081,32,FLEN)
NAN_BOXED(1053749758,32,FLEN)
NAN_BOXED(3219809943,32,FLEN)
NAN_BOXED(1060994081,32,FLEN)
NAN_BOXED(1053749758,32,FLEN)
NAN_BOXED(3219809943,32,FLEN)
NAN_BOXED(1060994081,32,FLEN)
NAN_BOXED(1053749758,32,FLEN)
NAN_BOXED(3219809943,32,FLEN)
NAN_BOXED(1060994081,32,FLEN)
NAN_BOXED(1053749758,32,FLEN)
NAN_BOXED(3219809943,32,FLEN)
NAN_BOXED(1060994081,32,FLEN)
NAN_BOXED(1016843942,32,FLEN)
NAN_BOXED(3251887482,32,FLEN)
NAN_BOXED(1057026591,32,FLEN)
NAN_BOXED(1016843942,32,FLEN)
NAN_BOXED(3251887482,32,FLEN)
NAN_BOXED(1057026591,32,FLEN)
NAN_BOXED(1016843942,32,FLEN)
NAN_BOXED(3251887482,32,FLEN)
NAN_BOXED(1057026591,32,FLEN)
NAN_BOXED(1016843942,32,FLEN)
NAN_BOXED(3251887482,32,FLEN)
NAN_BOXED(1057026591,32,FLEN)
NAN_BOXED(1016843942,32,FLEN)
NAN_BOXED(3251887482,32,FLEN)
NAN_BOXED(1057026591,32,FLEN)
NAN_BOXED(1058382421,32,FLEN)
NAN_BOXED(3214219481,32,FLEN)
NAN_BOXED(1059998724,32,FLEN)
NAN_BOXED(1058382421,32,FLEN)
NAN_BOXED(3214219481,32,FLEN)
NAN_BOXED(1059998724,32,FLEN)
NAN_BOXED(1058382421,32,FLEN)
NAN_BOXED(3214219481,32,FLEN)
NAN_BOXED(1059998724,32,FLEN)
NAN_BOXED(1058382421,32,FLEN)
NAN_BOXED(3214219481,32,FLEN)
NAN_BOXED(1059998724,32,FLEN)
NAN_BOXED(1058382421,32,FLEN)
NAN_BOXED(3214219481,32,FLEN)
NAN_BOXED(1059998724,32,FLEN)
NAN_BOXED(1015074442,32,FLEN)
NAN_BOXED(3254864826,32,FLEN)
NAN_BOXED(1057102940,32,FLEN)
NAN_BOXED(1015074442,32,FLEN)
NAN_BOXED(3254864826,32,FLEN)
NAN_BOXED(1057102940,32,FLEN)
NAN_BOXED(1015074442,32,FLEN)
NAN_BOXED(3254864826,32,FLEN)
NAN_BOXED(1057102940,32,FLEN)
NAN_BOXED(1015074442,32,FLEN)
NAN_BOXED(3254864826,32,FLEN)
NAN_BOXED(1057102940,32,FLEN)
NAN_BOXED(1015074442,32,FLEN)
NAN_BOXED(3254864826,32,FLEN)
NAN_BOXED(1057102940,32,FLEN)
NAN_BOXED(1060548248,32,FLEN)
NAN_BOXED(3208357213,32,FLEN)
NAN_BOXED(1057351562,32,FLEN)
NAN_BOXED(1060548248,32,FLEN)
NAN_BOXED(3208357213,32,FLEN)
NAN_BOXED(1057351562,32,FLEN)
NAN_BOXED(1060548248,32,FLEN)
NAN_BOXED(3208357213,32,FLEN)
NAN_BOXED(1057351562,32,FLEN)
NAN_BOXED(1060548248,32,FLEN)
NAN_BOXED(3208357213,32,FLEN)
NAN_BOXED(1057351562,32,FLEN)
NAN_BOXED(1060548248,32,FLEN)
NAN_BOXED(3208357213,32,FLEN)
NAN_BOXED(1057351562,32,FLEN)
NAN_BOXED(1063308308,32,FLEN)
NAN_BOXED(3202127125,32,FLEN)
NAN_BOXED(1052881482,32,FLEN)
NAN_BOXED(1063308308,32,FLEN)
NAN_BOXED(3202127125,32,FLEN)
NAN_BOXED(1052881482,32,FLEN)
NAN_BOXED(1063308308,32,FLEN)
NAN_BOXED(3202127125,32,FLEN)
NAN_BOXED(1052881482,32,FLEN)
NAN_BOXED(1063308308,32,FLEN)
NAN_BOXED(3202127125,32,FLEN)
NAN_BOXED(1052881482,32,FLEN)
NAN_BOXED(1063308308,32,FLEN)
NAN_BOXED(3202127125,32,FLEN)
NAN_BOXED(1052881482,32,FLEN)
NAN_BOXED(1057913063,32,FLEN)
NAN_BOXED(3215103307,32,FLEN)
NAN_BOXED(1060435761,32,FLEN)
NAN_BOXED(1057913063,32,FLEN)
NAN_BOXED(3215103307,32,FLEN)
NAN_BOXED(1060435761,32,FLEN)
NAN_BOXED(1057913063,32,FLEN)
NAN_BOXED(3215103307,32,FLEN)
NAN_BOXED(1060435761,32,FLEN)
NAN_BOXED(1057913063,32,FLEN)
NAN_BOXED(3215103307,32,FLEN)
NAN_BOXED(1060435761,32,FLEN)
NAN_BOXED(1057913063,32,FLEN)
NAN_BOXED(3215103307,32,FLEN)
NAN_BOXED(1060435761,32,FLEN)
NAN_BOXED(1046448226,32,FLEN)
NAN_BOXED(3209370727,32,FLEN)
NAN_BOXED(1043421683,32,FLEN)
NAN_BOXED(1046448226,32,FLEN)
NAN_BOXED(3209370727,32,FLEN)
NAN_BOXED(1043421683,32,FLEN)
NAN_BOXED(1046448226,32,FLEN)
NAN_BOXED(3209370727,32,FLEN)
NAN_BOXED(1043421683,32,FLEN)
NAN_BOXED(1046448226,32,FLEN)
NAN_BOXED(3209370727,32,FLEN)
NAN_BOXED(1043421683,32,FLEN)
NAN_BOXED(1046448226,32,FLEN)
NAN_BOXED(3209370727,32,FLEN)
NAN_BOXED(1043421683,32,FLEN)
NAN_BOXED(1065131701,32,FLEN)
NAN_BOXED(3203565425,32,FLEN)
NAN_BOXED(1055871919,32,FLEN)
NAN_BOXED(1065131701,32,FLEN)
NAN_BOXED(3203565425,32,FLEN)
NAN_BOXED(1055871919,32,FLEN)
NAN_BOXED(1065131701,32,FLEN)
NAN_BOXED(3203565425,32,FLEN)
NAN_BOXED(1055871919,32,FLEN)
NAN_BOXED(1065131701,32,FLEN)
NAN_BOXED(3203565425,32,FLEN)
NAN_BOXED(1055871919,32,FLEN)
NAN_BOXED(1065131701,32,FLEN)
NAN_BOXED(3203565425,32,FLEN)
NAN_BOXED(1055871919,32,FLEN)
NAN_BOXED(1060759821,32,FLEN)
NAN_BOXED(3182860264,32,FLEN)
NAN_BOXED(1032100353,32,FLEN)
NAN_BOXED(1060759821,32,FLEN)
NAN_BOXED(3182860264,32,FLEN)
NAN_BOXED(1032100353,32,FLEN)
NAN_BOXED(1060759821,32,FLEN)
NAN_BOXED(3182860264,32,FLEN)
NAN_BOXED(1032100353,32,FLEN)
NAN_BOXED(1060759821,32,FLEN)
NAN_BOXED(3182860264,32,FLEN)
NAN_BOXED(1032100353,32,FLEN)
NAN_BOXED(1060759821,32,FLEN)
NAN_BOXED(3182860264,32,FLEN)
NAN_BOXED(1032100353,32,FLEN)
NAN_BOXED(1046434741,32,FLEN)
NAN_BOXED(3227344133,32,FLEN)
NAN_BOXED(1061231722,32,FLEN)
NAN_BOXED(1046434741,32,FLEN)
NAN_BOXED(3227344133,32,FLEN)
NAN_BOXED(1061231722,32,FLEN)
NAN_BOXED(1046434741,32,FLEN)
NAN_BOXED(3227344133,32,FLEN)
NAN_BOXED(1061231722,32,FLEN)
NAN_BOXED(1046434741,32,FLEN)
NAN_BOXED(3227344133,32,FLEN)
NAN_BOXED(1061231722,32,FLEN)
NAN_BOXED(1046434741,32,FLEN)
NAN_BOXED(3227344133,32,FLEN)
NAN_BOXED(1061231722,32,FLEN)
NAN_BOXED(1060862148,32,FLEN)
NAN_BOXED(3214130392,32,FLEN)
NAN_BOXED(1062756679,32,FLEN)
NAN_BOXED(1060862148,32,FLEN)
NAN_BOXED(3214130392,32,FLEN)
NAN_BOXED(1062756679,32,FLEN)
NAN_BOXED(1060862148,32,FLEN)
NAN_BOXED(3214130392,32,FLEN)
NAN_BOXED(1062756679,32,FLEN)
NAN_BOXED(1060862148,32,FLEN)
NAN_BOXED(3214130392,32,FLEN)
NAN_BOXED(1062756679,32,FLEN)
NAN_BOXED(1060862148,32,FLEN)
NAN_BOXED(3214130392,32,FLEN)
NAN_BOXED(1062756679,32,FLEN)
NAN_BOXED(1010243197,32,FLEN)
NAN_BOXED(3262972042,32,FLEN)
NAN_BOXED(1060434333,32,FLEN)
NAN_BOXED(1010243197,32,FLEN)
NAN_BOXED(3262972042,32,FLEN)
NAN_BOXED(1060434333,32,FLEN)
NAN_BOXED(1010243197,32,FLEN)
NAN_BOXED(3262972042,32,FLEN)
NAN_BOXED(1060434333,32,FLEN)
NAN_BOXED(1010243197,32,FLEN)
NAN_BOXED(3262972042,32,FLEN)
NAN_BOXED(1060434333,32,FLEN)
NAN_BOXED(1010243197,32,FLEN)
NAN_BOXED(3262972042,32,FLEN)
NAN_BOXED(1060434333,32,FLEN)
NAN_BOXED(1053339468,32,FLEN)
NAN_BOXED(3215691964,32,FLEN)
NAN_BOXED(1057390222,32,FLEN)
NAN_BOXED(1053339468,32,FLEN)
NAN_BOXED(3215691964,32,FLEN)
NAN_BOXED(1057390222,32,FLEN)
NAN_BOXED(1053339468,32,FLEN)
NAN_BOXED(3215691964,32,FLEN)
NAN_BOXED(1057390222,32,FLEN)
NAN_BOXED(1053339468,32,FLEN)
NAN_BOXED(3215691964,32,FLEN)
NAN_BOXED(1057390222,32,FLEN)
NAN_BOXED(1053339468,32,FLEN)
NAN_BOXED(3215691964,32,FLEN)
NAN_BOXED(1057390222,32,FLEN)
NAN_BOXED(1052103355,32,FLEN)
NAN_BOXED(3213805893,32,FLEN)
NAN_BOXED(1053479855,32,FLEN)
NAN_BOXED(1052103355,32,FLEN)
NAN_BOXED(3213805893,32,FLEN)
NAN_BOXED(1053479855,32,FLEN)
NAN_BOXED(1052103355,32,FLEN)
NAN_BOXED(3213805893,32,FLEN)
NAN_BOXED(1053479855,32,FLEN)
NAN_BOXED(1052103355,32,FLEN)
NAN_BOXED(3213805893,32,FLEN)
NAN_BOXED(1053479855,32,FLEN)
NAN_BOXED(1052103355,32,FLEN)
NAN_BOXED(3213805893,32,FLEN)
NAN_BOXED(1053479855,32,FLEN)
NAN_BOXED(1048795001,32,FLEN)
NAN_BOXED(3227254951,32,FLEN)
NAN_BOXED(1063370501,32,FLEN)
NAN_BOXED(1048795001,32,FLEN)
NAN_BOXED(3227254951,32,FLEN)
NAN_BOXED(1063370501,32,FLEN)
NAN_BOXED(1048795001,32,FLEN)
NAN_BOXED(3227254951,32,FLEN)
NAN_BOXED(1063370501,32,FLEN)
NAN_BOXED(1048795001,32,FLEN)
NAN_BOXED(3227254951,32,FLEN)
NAN_BOXED(1063370501,32,FLEN)
NAN_BOXED(1048795001,32,FLEN)
NAN_BOXED(3227254951,32,FLEN)
NAN_BOXED(1063370501,32,FLEN)
NAN_BOXED(1047878156,32,FLEN)
NAN_BOXED(3225078531,32,FLEN)
NAN_BOXED(1060308478,32,FLEN)
NAN_BOXED(1047878156,32,FLEN)
NAN_BOXED(3225078531,32,FLEN)
NAN_BOXED(1060308478,32,FLEN)
NAN_BOXED(1047878156,32,FLEN)
NAN_BOXED(3225078531,32,FLEN)
NAN_BOXED(1060308478,32,FLEN)
NAN_BOXED(1047878156,32,FLEN)
NAN_BOXED(3225078531,32,FLEN)
NAN_BOXED(1060308478,32,FLEN)
NAN_BOXED(1047878156,32,FLEN)
NAN_BOXED(3225078531,32,FLEN)
NAN_BOXED(1060308478,32,FLEN)
NAN_BOXED(1055840604,32,FLEN)
NAN_BOXED(3216386070,32,FLEN)
NAN_BOXED(1059714030,32,FLEN)
NAN_BOXED(1055840604,32,FLEN)
NAN_BOXED(3216386070,32,FLEN)
NAN_BOXED(1059714030,32,FLEN)
NAN_BOXED(1055840604,32,FLEN)
NAN_BOXED(3216386070,32,FLEN)
NAN_BOXED(1059714030,32,FLEN)
NAN_BOXED(1055840604,32,FLEN)
NAN_BOXED(3216386070,32,FLEN)
NAN_BOXED(1059714030,32,FLEN)
NAN_BOXED(1055840604,32,FLEN)
NAN_BOXED(3216386070,32,FLEN)
NAN_BOXED(1059714030,32,FLEN)
NAN_BOXED(1060373366,32,FLEN)
NAN_BOXED(3207276603,32,FLEN)
NAN_BOXED(1055962420,32,FLEN)
NAN_BOXED(1060373366,32,FLEN)
NAN_BOXED(3207276603,32,FLEN)
NAN_BOXED(1055962420,32,FLEN)
NAN_BOXED(1060373366,32,FLEN)
NAN_BOXED(3207276603,32,FLEN)
NAN_BOXED(1055962420,32,FLEN)
NAN_BOXED(1060373366,32,FLEN)
NAN_BOXED(3207276603,32,FLEN)
NAN_BOXED(1055962420,32,FLEN)
NAN_BOXED(1060373366,32,FLEN)
NAN_BOXED(3207276603,32,FLEN)
NAN_BOXED(1055962420,32,FLEN)
NAN_BOXED(1057562938,32,FLEN)
NAN_BOXED(3214454524,32,FLEN)
NAN_BOXED(1059295980,32,FLEN)
NAN_BOXED(1057562938,32,FLEN)
NAN_BOXED(3214454524,32,FLEN)
NAN_BOXED(1059295980,32,FLEN)
NAN_BOXED(1057562938,32,FLEN)
NAN_BOXED(3214454524,32,FLEN)
NAN_BOXED(1059295980,32,FLEN)
NAN_BOXED(1057562938,32,FLEN)
NAN_BOXED(3214454524,32,FLEN)
NAN_BOXED(1059295980,32,FLEN)
NAN_BOXED(1057562938,32,FLEN)
NAN_BOXED(3214454524,32,FLEN)
NAN_BOXED(1059295980,32,FLEN)
NAN_BOXED(1048743195,32,FLEN)
NAN_BOXED(3217910257,32,FLEN)
NAN_BOXED(1053917707,32,FLEN)
NAN_BOXED(1048743195,32,FLEN)
NAN_BOXED(3217910257,32,FLEN)
NAN_BOXED(1053917707,32,FLEN)
NAN_BOXED(1048743195,32,FLEN)
NAN_BOXED(3217910257,32,FLEN)
NAN_BOXED(1053917707,32,FLEN)
NAN_BOXED(1048743195,32,FLEN)
NAN_BOXED(3217910257,32,FLEN)
NAN_BOXED(1053917707,32,FLEN)
NAN_BOXED(1048743195,32,FLEN)
NAN_BOXED(3217910257,32,FLEN)
NAN_BOXED(1053917707,32,FLEN)
NAN_BOXED(1064742040,32,FLEN)
NAN_BOXED(3209076084,32,FLEN)
NAN_BOXED(1061118261,32,FLEN)
NAN_BOXED(1064742040,32,FLEN)
NAN_BOXED(3209076084,32,FLEN)
NAN_BOXED(1061118261,32,FLEN)
NAN_BOXED(1064742040,32,FLEN)
NAN_BOXED(3209076084,32,FLEN)
NAN_BOXED(1061118261,32,FLEN)
NAN_BOXED(1064742040,32,FLEN)
NAN_BOXED(3209076084,32,FLEN)
NAN_BOXED(1061118261,32,FLEN)
NAN_BOXED(1064742040,32,FLEN)
NAN_BOXED(3209076084,32,FLEN)
NAN_BOXED(1061118261,32,FLEN)
NAN_BOXED(1057709286,32,FLEN)
NAN_BOXED(3189566814,32,FLEN)
NAN_BOXED(1034607528,32,FLEN)
NAN_BOXED(1057709286,32,FLEN)
NAN_BOXED(3189566814,32,FLEN)
NAN_BOXED(1034607528,32,FLEN)
NAN_BOXED(1057709286,32,FLEN)
NAN_BOXED(3189566814,32,FLEN)
NAN_BOXED(1034607528,32,FLEN)
NAN_BOXED(1057709286,32,FLEN)
NAN_BOXED(3189566814,32,FLEN)
NAN_BOXED(1034607528,32,FLEN)
NAN_BOXED(1057709286,32,FLEN)
NAN_BOXED(3189566814,32,FLEN)
NAN_BOXED(1034607528,32,FLEN)
NAN_BOXED(1038450537,32,FLEN)
NAN_BOXED(3229729549,32,FLEN)
NAN_BOXED(1055434784,32,FLEN)
NAN_BOXED(1038450537,32,FLEN)
NAN_BOXED(3229729549,32,FLEN)
NAN_BOXED(1055434784,32,FLEN)
NAN_BOXED(1038450537,32,FLEN)
NAN_BOXED(3229729549,32,FLEN)
NAN_BOXED(1055434784,32,FLEN)
NAN_BOXED(1038450537,32,FLEN)
NAN_BOXED(3229729549,32,FLEN)
NAN_BOXED(1055434784,32,FLEN)
NAN_BOXED(1038450537,32,FLEN)
NAN_BOXED(3229729549,32,FLEN)
NAN_BOXED(1055434784,32,FLEN)
NAN_BOXED(1065108931,32,FLEN)
NAN_BOXED(3194374670,32,FLEN)
NAN_BOXED(1046671271,32,FLEN)
NAN_BOXED(1065108931,32,FLEN)
NAN_BOXED(3194374670,32,FLEN)
NAN_BOXED(1046671271,32,FLEN)
NAN_BOXED(1065108931,32,FLEN)
NAN_BOXED(3194374670,32,FLEN)
NAN_BOXED(1046671271,32,FLEN)
NAN_BOXED(1065108931,32,FLEN)
NAN_BOXED(3194374670,32,FLEN)
NAN_BOXED(1046671271,32,FLEN)
NAN_BOXED(1065108931,32,FLEN)
NAN_BOXED(3194374670,32,FLEN)
NAN_BOXED(1046671271,32,FLEN)
NAN_BOXED(1058177071,32,FLEN)
NAN_BOXED(3208500573,32,FLEN)
NAN_BOXED(1054426490,32,FLEN)
NAN_BOXED(1058177071,32,FLEN)
NAN_BOXED(3208500573,32,FLEN)
NAN_BOXED(1054426490,32,FLEN)
NAN_BOXED(1058177071,32,FLEN)
NAN_BOXED(3208500573,32,FLEN)
NAN_BOXED(1054426490,32,FLEN)
NAN_BOXED(1058177071,32,FLEN)
NAN_BOXED(3208500573,32,FLEN)
NAN_BOXED(1054426490,32,FLEN)
NAN_BOXED(1058177071,32,FLEN)
NAN_BOXED(3208500573,32,FLEN)
NAN_BOXED(1054426490,32,FLEN)
NAN_BOXED(1049979205,32,FLEN)
NAN_BOXED(3215020000,32,FLEN)
NAN_BOXED(1052527526,32,FLEN)
NAN_BOXED(1049979205,32,FLEN)
NAN_BOXED(3215020000,32,FLEN)
NAN_BOXED(1052527526,32,FLEN)
NAN_BOXED(1049979205,32,FLEN)
NAN_BOXED(3215020000,32,FLEN)
NAN_BOXED(1052527526,32,FLEN)
NAN_BOXED(1049979205,32,FLEN)
NAN_BOXED(3215020000,32,FLEN)
NAN_BOXED(1052527526,32,FLEN)
NAN_BOXED(1049979205,32,FLEN)
NAN_BOXED(3215020000,32,FLEN)
NAN_BOXED(1052527526,32,FLEN)
NAN_BOXED(1057268626,32,FLEN)
NAN_BOXED(3190717378,32,FLEN)
NAN_BOXED(1035259546,32,FLEN)
NAN_BOXED(1057268626,32,FLEN)
NAN_BOXED(3190717378,32,FLEN)
NAN_BOXED(1035259546,32,FLEN)
NAN_BOXED(1057268626,32,FLEN)
NAN_BOXED(3190717378,32,FLEN)
NAN_BOXED(1035259546,32,FLEN)
NAN_BOXED(1057268626,32,FLEN)
NAN_BOXED(3190717378,32,FLEN)
NAN_BOXED(1035259546,32,FLEN)
NAN_BOXED(1057268626,32,FLEN)
NAN_BOXED(3190717378,32,FLEN)
NAN_BOXED(1035259546,32,FLEN)
NAN_BOXED(1058886049,32,FLEN)
NAN_BOXED(3212662341,32,FLEN)
NAN_BOXED(1058778800,32,FLEN)
NAN_BOXED(1058886049,32,FLEN)
NAN_BOXED(3212662341,32,FLEN)
NAN_BOXED(1058778800,32,FLEN)
NAN_BOXED(1058886049,32,FLEN)
NAN_BOXED(3212662341,32,FLEN)
NAN_BOXED(1058778800,32,FLEN)
NAN_BOXED(1058886049,32,FLEN)
NAN_BOXED(3212662341,32,FLEN)
NAN_BOXED(1058778800,32,FLEN)
NAN_BOXED(1058886049,32,FLEN)
NAN_BOXED(3212662341,32,FLEN)
NAN_BOXED(1058778800,32,FLEN)
NAN_BOXED(1041737513,32,FLEN)
NAN_BOXED(3232603893,32,FLEN)
NAN_BOXED(1062057027,32,FLEN)
NAN_BOXED(1041737513,32,FLEN)
NAN_BOXED(3232603893,32,FLEN)
NAN_BOXED(1062057027,32,FLEN)
NAN_BOXED(1041737513,32,FLEN)
NAN_BOXED(3232603893,32,FLEN)
NAN_BOXED(1062057027,32,FLEN)
NAN_BOXED(1041737513,32,FLEN)
NAN_BOXED(3232603893,32,FLEN)
NAN_BOXED(1062057027,32,FLEN)
NAN_BOXED(1041737513,32,FLEN)
NAN_BOXED(3232603893,32,FLEN)
NAN_BOXED(1062057027,32,FLEN)
NAN_BOXED(1060379633,32,FLEN)
NAN_BOXED(3195495784,32,FLEN)
NAN_BOXED(1043205711,32,FLEN)
NAN_BOXED(1060379633,32,FLEN)
NAN_BOXED(3195495784,32,FLEN)
NAN_BOXED(1043205711,32,FLEN)
NAN_BOXED(1060379633,32,FLEN)
NAN_BOXED(3195495784,32,FLEN)
NAN_BOXED(1043205711,32,FLEN)
NAN_BOXED(1060379633,32,FLEN)
NAN_BOXED(3195495784,32,FLEN)
NAN_BOXED(1043205711,32,FLEN)
NAN_BOXED(1060379633,32,FLEN)
NAN_BOXED(3195495784,32,FLEN)
NAN_BOXED(1043205711,32,FLEN)
NAN_BOXED(1064245009,32,FLEN)
NAN_BOXED(3191046664,32,FLEN)
NAN_BOXED(1042785938,32,FLEN)
NAN_BOXED(1064245009,32,FLEN)
NAN_BOXED(3191046664,32,FLEN)
NAN_BOXED(1042785938,32,FLEN)
NAN_BOXED(1064245009,32,FLEN)
NAN_BOXED(3191046664,32,FLEN)
NAN_BOXED(1042785938,32,FLEN)
NAN_BOXED(1064245009,32,FLEN)
NAN_BOXED(3191046664,32,FLEN)
NAN_BOXED(1042785938,32,FLEN)
NAN_BOXED(1064245009,32,FLEN)
NAN_BOXED(3191046664,32,FLEN)
NAN_BOXED(1042785938,32,FLEN)
NAN_BOXED(1050434194,32,FLEN)
NAN_BOXED(3220028428,32,FLEN)
NAN_BOXED(1058091699,32,FLEN)
NAN_BOXED(1050434194,32,FLEN)
NAN_BOXED(3220028428,32,FLEN)
NAN_BOXED(1058091699,32,FLEN)
NAN_BOXED(1050434194,32,FLEN)
NAN_BOXED(3220028428,32,FLEN)
NAN_BOXED(1058091699,32,FLEN)
NAN_BOXED(1050434194,32,FLEN)
NAN_BOXED(3220028428,32,FLEN)
NAN_BOXED(1058091699,32,FLEN)
NAN_BOXED(1050434194,32,FLEN)
NAN_BOXED(3220028428,32,FLEN)
NAN_BOXED(1058091699,32,FLEN)
NAN_BOXED(1060548874,32,FLEN)
NAN_BOXED(3197980887,32,FLEN)
NAN_BOXED(1046513801,32,FLEN)
NAN_BOXED(1060548874,32,FLEN)
NAN_BOXED(3197980887,32,FLEN)
NAN_BOXED(1046513801,32,FLEN)
NAN_BOXED(1060548874,32,FLEN)
NAN_BOXED(3197980887,32,FLEN)
NAN_BOXED(1046513801,32,FLEN)
NAN_BOXED(1060548874,32,FLEN)
NAN_BOXED(3197980887,32,FLEN)
NAN_BOXED(1046513801,32,FLEN)
NAN_BOXED(1060548874,32,FLEN)
NAN_BOXED(3197980887,32,FLEN)
NAN_BOXED(1046513801,32,FLEN)
NAN_BOXED(1035399091,32,FLEN)
NAN_BOXED(3239678082,32,FLEN)
NAN_BOXED(1062959372,32,FLEN)
NAN_BOXED(1035399091,32,FLEN)
NAN_BOXED(3239678082,32,FLEN)
NAN_BOXED(1062959372,32,FLEN)
NAN_BOXED(1035399091,32,FLEN)
NAN_BOXED(3239678082,32,FLEN)
NAN_BOXED(1062959372,32,FLEN)
NAN_BOXED(1035399091,32,FLEN)
NAN_BOXED(3239678082,32,FLEN)
NAN_BOXED(1062959372,32,FLEN)
NAN_BOXED(1035399091,32,FLEN)
NAN_BOXED(3239678082,32,FLEN)
NAN_BOXED(1062959372,32,FLEN)
NAN_BOXED(1057326784,32,FLEN)
NAN_BOXED(3210563305,32,FLEN)
NAN_BOXED(1055317241,32,FLEN)
NAN_BOXED(1057326784,32,FLEN)
NAN_BOXED(3210563305,32,FLEN)
NAN_BOXED(1055317241,32,FLEN)
NAN_BOXED(1057326784,32,FLEN)
NAN_BOXED(3210563305,32,FLEN)
NAN_BOXED(1055317241,32,FLEN)
NAN_BOXED(1057326784,32,FLEN)
NAN_BOXED(3210563305,32,FLEN)
NAN_BOXED(1055317241,32,FLEN)
NAN_BOXED(1057326784,32,FLEN)
NAN_BOXED(3210563305,32,FLEN)
NAN_BOXED(1055317241,32,FLEN)
NAN_BOXED(1057003498,32,FLEN)
NAN_BOXED(3215624809,32,FLEN)
NAN_BOXED(1059804369,32,FLEN)
NAN_BOXED(1057003498,32,FLEN)
NAN_BOXED(3215624809,32,FLEN)
NAN_BOXED(1059804369,32,FLEN)
NAN_BOXED(1057003498,32,FLEN)
NAN_BOXED(3215624809,32,FLEN)
NAN_BOXED(1059804369,32,FLEN)
NAN_BOXED(1057003498,32,FLEN)
NAN_BOXED(3215624809,32,FLEN)
NAN_BOXED(1059804369,32,FLEN)
NAN_BOXED(1057003498,32,FLEN)
NAN_BOXED(3215624809,32,FLEN)
NAN_BOXED(1059804369,32,FLEN)
NAN_BOXED(1062777447,32,FLEN)
NAN_BOXED(3204087990,32,FLEN)
NAN_BOXED(1054083884,32,FLEN)
NAN_BOXED(1062777447,32,FLEN)
NAN_BOXED(3204087990,32,FLEN)
NAN_BOXED(1054083884,32,FLEN)
NAN_BOXED(1062777447,32,FLEN)
NAN_BOXED(3204087990,32,FLEN)
NAN_BOXED(1054083884,32,FLEN)
NAN_BOXED(1062777447,32,FLEN)
NAN_BOXED(3204087990,32,FLEN)
NAN_BOXED(1054083884,32,FLEN)
NAN_BOXED(1062777447,32,FLEN)
NAN_BOXED(3204087990,32,FLEN)
NAN_BOXED(1054083884,32,FLEN)
NAN_BOXED(1044427125,32,FLEN)
NAN_BOXED(3231607541,32,FLEN)
NAN_BOXED(1064205330,32,FLEN)
NAN_BOXED(1044427125,32,FLEN)
NAN_BOXED(3231607541,32,FLEN)
NAN_BOXED(1064205330,32,FLEN)
NAN_BOXED(1044427125,32,FLEN)
NAN_BOXED(3231607541,32,FLEN)
NAN_BOXED(1064205330,32,FLEN)
NAN_BOXED(1044427125,32,FLEN)
NAN_BOXED(3231607541,32,FLEN)
NAN_BOXED(1064205330,32,FLEN)
NAN_BOXED(1044427125,32,FLEN)
NAN_BOXED(3231607541,32,FLEN)
NAN_BOXED(1064205330,32,FLEN)
NAN_BOXED(1061494133,32,FLEN)
NAN_BOXED(3195006019,32,FLEN)
NAN_BOXED(1043905643,32,FLEN)
NAN_BOXED(1061494133,32,FLEN)
NAN_BOXED(3195006019,32,FLEN)
NAN_BOXED(1043905643,32,FLEN)
NAN_BOXED(1061494133,32,FLEN)
NAN_BOXED(3195006019,32,FLEN)
NAN_BOXED(1043905643,32,FLEN)
NAN_BOXED(1061494133,32,FLEN)
NAN_BOXED(3195006019,32,FLEN)
NAN_BOXED(1043905643,32,FLEN)
NAN_BOXED(1061494133,32,FLEN)
NAN_BOXED(3195006019,32,FLEN)
NAN_BOXED(1043905643,32,FLEN)
NAN_BOXED(1045774170,32,FLEN)
NAN_BOXED(3217998905,32,FLEN)
NAN_BOXED(1051475055,32,FLEN)
NAN_BOXED(1045774170,32,FLEN)
NAN_BOXED(3217998905,32,FLEN)
NAN_BOXED(1051475055,32,FLEN)
NAN_BOXED(1045774170,32,FLEN)
NAN_BOXED(3217998905,32,FLEN)
NAN_BOXED(1051475055,32,FLEN)
NAN_BOXED(1045774170,32,FLEN)
NAN_BOXED(3217998905,32,FLEN)
NAN_BOXED(1051475055,32,FLEN)
NAN_BOXED(1045774170,32,FLEN)
NAN_BOXED(3217998905,32,FLEN)
NAN_BOXED(1051475055,32,FLEN)
NAN_BOXED(1064924502,32,FLEN)
NAN_BOXED(3197223175,32,FLEN)
NAN_BOXED(1049495438,32,FLEN)
NAN_BOXED(1064924502,32,FLEN)
NAN_BOXED(3197223175,32,FLEN)
NAN_BOXED(1049495438,32,FLEN)
NAN_BOXED(1064924502,32,FLEN)
NAN_BOXED(3197223175,32,FLEN)
NAN_BOXED(1049495438,32,FLEN)
NAN_BOXED(1064924502,32,FLEN)
NAN_BOXED(3197223175,32,FLEN)
NAN_BOXED(1049495438,32,FLEN)
NAN_BOXED(1064924502,32,FLEN)
NAN_BOXED(3197223175,32,FLEN)
NAN_BOXED(1049495438,32,FLEN)
NAN_BOXED(1018075831,32,FLEN)
NAN_BOXED(3181381883,32,FLEN)
NAN_BOXED(987385254,32,FLEN)
NAN_BOXED(1018075831,32,FLEN)
NAN_BOXED(3181381883,32,FLEN)
NAN_BOXED(987385254,32,FLEN)
NAN_BOXED(1018075831,32,FLEN)
NAN_BOXED(3181381883,32,FLEN)
NAN_BOXED(987385254,32,FLEN)
NAN_BOXED(1018075831,32,FLEN)
NAN_BOXED(3181381883,32,FLEN)
NAN_BOXED(987385254,32,FLEN)
NAN_BOXED(1018075831,32,FLEN)
NAN_BOXED(3181381883,32,FLEN)
NAN_BOXED(987385254,32,FLEN)
NAN_BOXED(1050211840,32,FLEN)
NAN_BOXED(3226189859,32,FLEN)
NAN_BOXED(1064532928,32,FLEN)
NAN_BOXED(1050211840,32,FLEN)
NAN_BOXED(3226189859,32,FLEN)
NAN_BOXED(1064532928,32,FLEN)
NAN_BOXED(1050211840,32,FLEN)
NAN_BOXED(3226189859,32,FLEN)
NAN_BOXED(1064532928,32,FLEN)
NAN_BOXED(1050211840,32,FLEN)
NAN_BOXED(3226189859,32,FLEN)
NAN_BOXED(1064532928,32,FLEN)
NAN_BOXED(1050211840,32,FLEN)
NAN_BOXED(3226189859,32,FLEN)
NAN_BOXED(1064532928,32,FLEN)
NAN_BOXED(1042397780,32,FLEN)
NAN_BOXED(3231592803,32,FLEN)
NAN_BOXED(1061675111,32,FLEN)
NAN_BOXED(1042397780,32,FLEN)
NAN_BOXED(3231592803,32,FLEN)
NAN_BOXED(1061675111,32,FLEN)
NAN_BOXED(1042397780,32,FLEN)
NAN_BOXED(3231592803,32,FLEN)
NAN_BOXED(1061675111,32,FLEN)
NAN_BOXED(1042397780,32,FLEN)
NAN_BOXED(3231592803,32,FLEN)
NAN_BOXED(1061675111,32,FLEN)
NAN_BOXED(1042397780,32,FLEN)
NAN_BOXED(3231592803,32,FLEN)
NAN_BOXED(1061675111,32,FLEN)
NAN_BOXED(1052074471,32,FLEN)
NAN_BOXED(3188328781,32,FLEN)
NAN_BOXED(1027840699,32,FLEN)
NAN_BOXED(1052074471,32,FLEN)
NAN_BOXED(3188328781,32,FLEN)
NAN_BOXED(1027840699,32,FLEN)
NAN_BOXED(1052074471,32,FLEN)
NAN_BOXED(3188328781,32,FLEN)
NAN_BOXED(1027840699,32,FLEN)
NAN_BOXED(1052074471,32,FLEN)
NAN_BOXED(3188328781,32,FLEN)
NAN_BOXED(1027840699,32,FLEN)
NAN_BOXED(1052074471,32,FLEN)
NAN_BOXED(3188328781,32,FLEN)
NAN_BOXED(1027840699,32,FLEN)
NAN_BOXED(1049836191,32,FLEN)
NAN_BOXED(3225459219,32,FLEN)
NAN_BOXED(1063094568,32,FLEN)
NAN_BOXED(1049836191,32,FLEN)
NAN_BOXED(3225459219,32,FLEN)
NAN_BOXED(1063094568,32,FLEN)
NAN_BOXED(1049836191,32,FLEN)
NAN_BOXED(3225459219,32,FLEN)
NAN_BOXED(1063094568,32,FLEN)
NAN_BOXED(1049836191,32,FLEN)
NAN_BOXED(3225459219,32,FLEN)
NAN_BOXED(1063094568,32,FLEN)
NAN_BOXED(1049836191,32,FLEN)
NAN_BOXED(3225459219,32,FLEN)
NAN_BOXED(1063094568,32,FLEN)
NAN_BOXED(1060445999,32,FLEN)
NAN_BOXED(3186450057,32,FLEN)
NAN_BOXED(1034416321,32,FLEN)
NAN_BOXED(1060445999,32,FLEN)
NAN_BOXED(3186450057,32,FLEN)
NAN_BOXED(1034416321,32,FLEN)
NAN_BOXED(1060445999,32,FLEN)
NAN_BOXED(3186450057,32,FLEN)
NAN_BOXED(1034416321,32,FLEN)
NAN_BOXED(1060445999,32,FLEN)
NAN_BOXED(3186450057,32,FLEN)
NAN_BOXED(1034416321,32,FLEN)
NAN_BOXED(1060445999,32,FLEN)
NAN_BOXED(3186450057,32,FLEN)
NAN_BOXED(1034416321,32,FLEN)
NAN_BOXED(1062841163,32,FLEN)
NAN_BOXED(3203037565,32,FLEN)
NAN_BOXED(1053253087,32,FLEN)
NAN_BOXED(1062841163,32,FLEN)
NAN_BOXED(3203037565,32,FLEN)
NAN_BOXED(1053253087,32,FLEN)
NAN_BOXED(1062841163,32,FLEN)
NAN_BOXED(3203037565,32,FLEN)
NAN_BOXED(1053253087,32,FLEN)
NAN_BOXED(1062841163,32,FLEN)
NAN_BOXED(3203037565,32,FLEN)
NAN_BOXED(1053253087,32,FLEN)
NAN_BOXED(1062841163,32,FLEN)
NAN_BOXED(3203037565,32,FLEN)
NAN_BOXED(1053253087,32,FLEN)
NAN_BOXED(1058408518,32,FLEN)
NAN_BOXED(3216454685,32,FLEN)
NAN_BOXED(1062649066,32,FLEN)
NAN_BOXED(1058408518,32,FLEN)
NAN_BOXED(3216454685,32,FLEN)
NAN_BOXED(1062649066,32,FLEN)
NAN_BOXED(1058408518,32,FLEN)
NAN_BOXED(3216454685,32,FLEN)
NAN_BOXED(1062649066,32,FLEN)
NAN_BOXED(1058408518,32,FLEN)
NAN_BOXED(3216454685,32,FLEN)
NAN_BOXED(1062649066,32,FLEN)
NAN_BOXED(1058408518,32,FLEN)
NAN_BOXED(3216454685,32,FLEN)
NAN_BOXED(1062649066,32,FLEN)
NAN_BOXED(1052857376,32,FLEN)
NAN_BOXED(3223460914,32,FLEN)
NAN_BOXED(1064622352,32,FLEN)
NAN_BOXED(1052857376,32,FLEN)
NAN_BOXED(3223460914,32,FLEN)
NAN_BOXED(1064622352,32,FLEN)
NAN_BOXED(1052857376,32,FLEN)
NAN_BOXED(3223460914,32,FLEN)
NAN_BOXED(1064622352,32,FLEN)
NAN_BOXED(1052857376,32,FLEN)
NAN_BOXED(3223460914,32,FLEN)
NAN_BOXED(1064622352,32,FLEN)
NAN_BOXED(1052857376,32,FLEN)
NAN_BOXED(3223460914,32,FLEN)
NAN_BOXED(1064622352,32,FLEN)
NAN_BOXED(1063537674,32,FLEN)
NAN_BOXED(3207738817,32,FLEN)
NAN_BOXED(1058991311,32,FLEN)
NAN_BOXED(1063537674,32,FLEN)
NAN_BOXED(3207738817,32,FLEN)
NAN_BOXED(1058991311,32,FLEN)
NAN_BOXED(1063537674,32,FLEN)
NAN_BOXED(3207738817,32,FLEN)
NAN_BOXED(1058991311,32,FLEN)
NAN_BOXED(1063537674,32,FLEN)
NAN_BOXED(3207738817,32,FLEN)
NAN_BOXED(1058991311,32,FLEN)
NAN_BOXED(1063537674,32,FLEN)
NAN_BOXED(3207738817,32,FLEN)
NAN_BOXED(1058991311,32,FLEN)
NAN_BOXED(1064145190,32,FLEN)
NAN_BOXED(3212967418,32,FLEN)
NAN_BOXED(1064387498,32,FLEN)
NAN_BOXED(1064145190,32,FLEN)
NAN_BOXED(3212967418,32,FLEN)
NAN_BOXED(1064387498,32,FLEN)
NAN_BOXED(1064145190,32,FLEN)
NAN_BOXED(3212967418,32,FLEN)
NAN_BOXED(1064387498,32,FLEN)
NAN_BOXED(1064145190,32,FLEN)
NAN_BOXED(3212967418,32,FLEN)
NAN_BOXED(1064387498,32,FLEN)
NAN_BOXED(1064145190,32,FLEN)
NAN_BOXED(3212967418,32,FLEN)
NAN_BOXED(1064387498,32,FLEN)
NAN_BOXED(1054439445,32,FLEN)
NAN_BOXED(3206237200,32,FLEN)
NAN_BOXED(1048833106,32,FLEN)
NAN_BOXED(1054439445,32,FLEN)
NAN_BOXED(3206237200,32,FLEN)
NAN_BOXED(1048833106,32,FLEN)
NAN_BOXED(1054439445,32,FLEN)
NAN_BOXED(3206237200,32,FLEN)
NAN_BOXED(1048833106,32,FLEN)
NAN_BOXED(1054439445,32,FLEN)
NAN_BOXED(3206237200,32,FLEN)
NAN_BOXED(1048833106,32,FLEN)
NAN_BOXED(1054439445,32,FLEN)
NAN_BOXED(3206237200,32,FLEN)
NAN_BOXED(1048833106,32,FLEN)
NAN_BOXED(1039723385,32,FLEN)
NAN_BOXED(3236162056,32,FLEN)
NAN_BOXED(1063099484,32,FLEN)
NAN_BOXED(1039723385,32,FLEN)
NAN_BOXED(3236162056,32,FLEN)
NAN_BOXED(1063099484,32,FLEN)
NAN_BOXED(1039723385,32,FLEN)
NAN_BOXED(3236162056,32,FLEN)
NAN_BOXED(1063099484,32,FLEN)
NAN_BOXED(1039723385,32,FLEN)
NAN_BOXED(3236162056,32,FLEN)
NAN_BOXED(1063099484,32,FLEN)
NAN_BOXED(1039723385,32,FLEN)
NAN_BOXED(3236162056,32,FLEN)
NAN_BOXED(1063099484,32,FLEN)
NAN_BOXED(1058110986,32,FLEN)
NAN_BOXED(3214565286,32,FLEN)
NAN_BOXED(1060075613,32,FLEN)
NAN_BOXED(1058110986,32,FLEN)
NAN_BOXED(3214565286,32,FLEN)
NAN_BOXED(1060075613,32,FLEN)
NAN_BOXED(1058110986,32,FLEN)
NAN_BOXED(3214565286,32,FLEN)
NAN_BOXED(1060075613,32,FLEN)
NAN_BOXED(1058110986,32,FLEN)
NAN_BOXED(3214565286,32,FLEN)
NAN_BOXED(1060075613,32,FLEN)
NAN_BOXED(1058110986,32,FLEN)
NAN_BOXED(3214565286,32,FLEN)
NAN_BOXED(1060075613,32,FLEN)
NAN_BOXED(1053601862,32,FLEN)
NAN_BOXED(3215158371,32,FLEN)
NAN_BOXED(1057139430,32,FLEN)
NAN_BOXED(1053601862,32,FLEN)
NAN_BOXED(3215158371,32,FLEN)
NAN_BOXED(1057139430,32,FLEN)
NAN_BOXED(1053601862,32,FLEN)
NAN_BOXED(3215158371,32,FLEN)
NAN_BOXED(1057139430,32,FLEN)
NAN_BOXED(1053601862,32,FLEN)
NAN_BOXED(3215158371,32,FLEN)
NAN_BOXED(1057139430,32,FLEN)
NAN_BOXED(1053601862,32,FLEN)
NAN_BOXED(3215158371,32,FLEN)
NAN_BOXED(1057139430,32,FLEN)
NAN_BOXED(1031520144,32,FLEN)
NAN_BOXED(3240290609,32,FLEN)
NAN_BOXED(1059075211,32,FLEN)
NAN_BOXED(1031520144,32,FLEN)
NAN_BOXED(3240290609,32,FLEN)
NAN_BOXED(1059075211,32,FLEN)
NAN_BOXED(1031520144,32,FLEN)
NAN_BOXED(3240290609,32,FLEN)
NAN_BOXED(1059075211,32,FLEN)
NAN_BOXED(1031520144,32,FLEN)
NAN_BOXED(3240290609,32,FLEN)
NAN_BOXED(1059075211,32,FLEN)
NAN_BOXED(1031520144,32,FLEN)
NAN_BOXED(3240290609,32,FLEN)
NAN_BOXED(1059075211,32,FLEN)
NAN_BOXED(1064417865,32,FLEN)
NAN_BOXED(3198427793,32,FLEN)
NAN_BOXED(1050344443,32,FLEN)
NAN_BOXED(1064417865,32,FLEN)
NAN_BOXED(3198427793,32,FLEN)
NAN_BOXED(1050344443,32,FLEN)
NAN_BOXED(1064417865,32,FLEN)
NAN_BOXED(3198427793,32,FLEN)
NAN_BOXED(1050344443,32,FLEN)
NAN_BOXED(1064417865,32,FLEN)
NAN_BOXED(3198427793,32,FLEN)
NAN_BOXED(1050344443,32,FLEN)
NAN_BOXED(1064417865,32,FLEN)
NAN_BOXED(3198427793,32,FLEN)
NAN_BOXED(1050344443,32,FLEN)
NAN_BOXED(1062818024,32,FLEN)
NAN_BOXED(3202242970,32,FLEN)
NAN_BOXED(1052557369,32,FLEN)
NAN_BOXED(1062818024,32,FLEN)
NAN_BOXED(3202242970,32,FLEN)
NAN_BOXED(1052557369,32,FLEN)
NAN_BOXED(1062818024,32,FLEN)
NAN_BOXED(3202242970,32,FLEN)
NAN_BOXED(1052557369,32,FLEN)
NAN_BOXED(1062818024,32,FLEN)
NAN_BOXED(3202242970,32,FLEN)
NAN_BOXED(1052557369,32,FLEN)
NAN_BOXED(1062818024,32,FLEN)
NAN_BOXED(3202242970,32,FLEN)
NAN_BOXED(1052557369,32,FLEN)
NAN_BOXED(1056768512,32,FLEN)
NAN_BOXED(3191447502,32,FLEN)
NAN_BOXED(1035433059,32,FLEN)
NAN_BOXED(1056768512,32,FLEN)
NAN_BOXED(3191447502,32,FLEN)
NAN_BOXED(1035433059,32,FLEN)
NAN_BOXED(1056768512,32,FLEN)
NAN_BOXED(3191447502,32,FLEN)
NAN_BOXED(1035433059,32,FLEN)
NAN_BOXED(1056768512,32,FLEN)
NAN_BOXED(3191447502,32,FLEN)
NAN_BOXED(1035433059,32,FLEN)
NAN_BOXED(1056768512,32,FLEN)
NAN_BOXED(3191447502,32,FLEN)
NAN_BOXED(1035433059,32,FLEN)
NAN_BOXED(1055122776,32,FLEN)
NAN_BOXED(3210349659,32,FLEN)
NAN_BOXED(1052908621,32,FLEN)
NAN_BOXED(1055122776,32,FLEN)
NAN_BOXED(3210349659,32,FLEN)
NAN_BOXED(1052908621,32,FLEN)
NAN_BOXED(1055122776,32,FLEN)
NAN_BOXED(3210349659,32,FLEN)
NAN_BOXED(1052908621,32,FLEN)
NAN_BOXED(1055122776,32,FLEN)
NAN_BOXED(3210349659,32,FLEN)
NAN_BOXED(1052908621,32,FLEN)
NAN_BOXED(1055122776,32,FLEN)
NAN_BOXED(3210349659,32,FLEN)
NAN_BOXED(1052908621,32,FLEN)
NAN_BOXED(1060936668,32,FLEN)
NAN_BOXED(3206268819,32,FLEN)
NAN_BOXED(1055230672,32,FLEN)
NAN_BOXED(1060936668,32,FLEN)
NAN_BOXED(3206268819,32,FLEN)
NAN_BOXED(1055230672,32,FLEN)
NAN_BOXED(1060936668,32,FLEN)
NAN_BOXED(3206268819,32,FLEN)
NAN_BOXED(1055230672,32,FLEN)
NAN_BOXED(1060936668,32,FLEN)
NAN_BOXED(3206268819,32,FLEN)
NAN_BOXED(1055230672,32,FLEN)
NAN_BOXED(1060936668,32,FLEN)
NAN_BOXED(3206268819,32,FLEN)
NAN_BOXED(1055230672,32,FLEN)
NAN_BOXED(1061088611,32,FLEN)
NAN_BOXED(3198892659,32,FLEN)
NAN_BOXED(1048537169,32,FLEN)
NAN_BOXED(1061088611,32,FLEN)
NAN_BOXED(3198892659,32,FLEN)
NAN_BOXED(1048537169,32,FLEN)
NAN_BOXED(1061088611,32,FLEN)
NAN_BOXED(3198892659,32,FLEN)
NAN_BOXED(1048537169,32,FLEN)
NAN_BOXED(1061088611,32,FLEN)
NAN_BOXED(3198892659,32,FLEN)
NAN_BOXED(1048537169,32,FLEN)
NAN_BOXED(1061088611,32,FLEN)
NAN_BOXED(3198892659,32,FLEN)
NAN_BOXED(1048537169,32,FLEN)
NAN_BOXED(1056394326,32,FLEN)
NAN_BOXED(3219492372,32,FLEN)
NAN_BOXED(1063108745,32,FLEN)
NAN_BOXED(1056394326,32,FLEN)
NAN_BOXED(3219492372,32,FLEN)
NAN_BOXED(1063108745,32,FLEN)
NAN_BOXED(1056394326,32,FLEN)
NAN_BOXED(3219492372,32,FLEN)
NAN_BOXED(1063108745,32,FLEN)
NAN_BOXED(1056394326,32,FLEN)
NAN_BOXED(3219492372,32,FLEN)
NAN_BOXED(1063108745,32,FLEN)
NAN_BOXED(1056394326,32,FLEN)
NAN_BOXED(3219492372,32,FLEN)
NAN_BOXED(1063108745,32,FLEN)
NAN_BOXED(1061420295,32,FLEN)
NAN_BOXED(3209839110,32,FLEN)
NAN_BOXED(1059125276,32,FLEN)
NAN_BOXED(1061420295,32,FLEN)
NAN_BOXED(3209839110,32,FLEN)
NAN_BOXED(1059125276,32,FLEN)
NAN_BOXED(1061420295,32,FLEN)
NAN_BOXED(3209839110,32,FLEN)
NAN_BOXED(1059125276,32,FLEN)
NAN_BOXED(1061420295,32,FLEN)
NAN_BOXED(3209839110,32,FLEN)
NAN_BOXED(1059125276,32,FLEN)
NAN_BOXED(1061420295,32,FLEN)
NAN_BOXED(3209839110,32,FLEN)
NAN_BOXED(1059125276,32,FLEN)
NAN_BOXED(1049020499,32,FLEN)
NAN_BOXED(3225912714,32,FLEN)
NAN_BOXED(1062344719,32,FLEN)
NAN_BOXED(1049020499,32,FLEN)
NAN_BOXED(3225912714,32,FLEN)
NAN_BOXED(1062344719,32,FLEN)
NAN_BOXED(1049020499,32,FLEN)
NAN_BOXED(3225912714,32,FLEN)
NAN_BOXED(1062344719,32,FLEN)
NAN_BOXED(1049020499,32,FLEN)
NAN_BOXED(3225912714,32,FLEN)
NAN_BOXED(1062344719,32,FLEN)
NAN_BOXED(1049020499,32,FLEN)
NAN_BOXED(3225912714,32,FLEN)
NAN_BOXED(1062344719,32,FLEN)
NAN_BOXED(1049807571,32,FLEN)
NAN_BOXED(3214542142,32,FLEN)
NAN_BOXED(1051763209,32,FLEN)
NAN_BOXED(1049807571,32,FLEN)
NAN_BOXED(3214542142,32,FLEN)
NAN_BOXED(1051763209,32,FLEN)
NAN_BOXED(1049807571,32,FLEN)
NAN_BOXED(3214542142,32,FLEN)
NAN_BOXED(1051763209,32,FLEN)
NAN_BOXED(1049807571,32,FLEN)
NAN_BOXED(3214542142,32,FLEN)
NAN_BOXED(1051763209,32,FLEN)
NAN_BOXED(1049807571,32,FLEN)
NAN_BOXED(3214542142,32,FLEN)
NAN_BOXED(1051763209,32,FLEN)
NAN_BOXED(1063923069,32,FLEN)
NAN_BOXED(3199850936,32,FLEN)
NAN_BOXED(1051329033,32,FLEN)
NAN_BOXED(1063923069,32,FLEN)
NAN_BOXED(3199850936,32,FLEN)
NAN_BOXED(1051329033,32,FLEN)
NAN_BOXED(1063923069,32,FLEN)
NAN_BOXED(3199850936,32,FLEN)
NAN_BOXED(1051329033,32,FLEN)
NAN_BOXED(1063923069,32,FLEN)
NAN_BOXED(3199850936,32,FLEN)
NAN_BOXED(1051329033,32,FLEN)
NAN_BOXED(1063923069,32,FLEN)
NAN_BOXED(3199850936,32,FLEN)
NAN_BOXED(1051329033,32,FLEN)
NAN_BOXED(1063823498,32,FLEN)
NAN_BOXED(3212216347,32,FLEN)
NAN_BOXED(1063259559,32,FLEN)
NAN_BOXED(1063823498,32,FLEN)
NAN_BOXED(3212216347,32,FLEN)
NAN_BOXED(1063259559,32,FLEN)
NAN_BOXED(1063823498,32,FLEN)
NAN_BOXED(3212216347,32,FLEN)
NAN_BOXED(1063259559,32,FLEN)
NAN_BOXED(1063823498,32,FLEN)
NAN_BOXED(3212216347,32,FLEN)
NAN_BOXED(1063259559,32,FLEN)
NAN_BOXED(1063823498,32,FLEN)
NAN_BOXED(3212216347,32,FLEN)
NAN_BOXED(1063259559,32,FLEN)
NAN_BOXED(1053811355,32,FLEN)
NAN_BOXED(3220179305,32,FLEN)
NAN_BOXED(1061350422,32,FLEN)
NAN_BOXED(1053811355,32,FLEN)
NAN_BOXED(3220179305,32,FLEN)
NAN_BOXED(1061350422,32,FLEN)
NAN_BOXED(1053811355,32,FLEN)
NAN_BOXED(3220179305,32,FLEN)
NAN_BOXED(1061350422,32,FLEN)
NAN_BOXED(1053811355,32,FLEN)
NAN_BOXED(3220179305,32,FLEN)
NAN_BOXED(1061350422,32,FLEN)
NAN_BOXED(1053811355,32,FLEN)
NAN_BOXED(3220179305,32,FLEN)
NAN_BOXED(1061350422,32,FLEN)
NAN_BOXED(1039928801,32,FLEN)
NAN_BOXED(3230078222,32,FLEN)
NAN_BOXED(1057292301,32,FLEN)
NAN_BOXED(1039928801,32,FLEN)
NAN_BOXED(3230078222,32,FLEN)
NAN_BOXED(1057292301,32,FLEN)
NAN_BOXED(1039928801,32,FLEN)
NAN_BOXED(3230078222,32,FLEN)
NAN_BOXED(1057292301,32,FLEN)
NAN_BOXED(1039928801,32,FLEN)
NAN_BOXED(3230078222,32,FLEN)
NAN_BOXED(1057292301,32,FLEN)
NAN_BOXED(1039928801,32,FLEN)
NAN_BOXED(3230078222,32,FLEN)
NAN_BOXED(1057292301,32,FLEN)
NAN_BOXED(1059929372,32,FLEN)
NAN_BOXED(3197763266,32,FLEN)
NAN_BOXED(1045457881,32,FLEN)
NAN_BOXED(1059929372,32,FLEN)
NAN_BOXED(3197763266,32,FLEN)
NAN_BOXED(1045457881,32,FLEN)
NAN_BOXED(1059929372,32,FLEN)
NAN_BOXED(3197763266,32,FLEN)
NAN_BOXED(1045457881,32,FLEN)
NAN_BOXED(1059929372,32,FLEN)
NAN_BOXED(3197763266,32,FLEN)
NAN_BOXED(1045457881,32,FLEN)
NAN_BOXED(1059929372,32,FLEN)
NAN_BOXED(3197763266,32,FLEN)
NAN_BOXED(1045457881,32,FLEN)
NAN_BOXED(1064858942,32,FLEN)
NAN_BOXED(3197178380,32,FLEN)
NAN_BOXED(1049414637,32,FLEN)
NAN_BOXED(1064858942,32,FLEN)
NAN_BOXED(3197178380,32,FLEN)
NAN_BOXED(1049414637,32,FLEN)
NAN_BOXED(1064858942,32,FLEN)
NAN_BOXED(3197178380,32,FLEN)
NAN_BOXED(1049414637,32,FLEN)
NAN_BOXED(1064858942,32,FLEN)
NAN_BOXED(3197178380,32,FLEN)
NAN_BOXED(1049414637,32,FLEN)
NAN_BOXED(1064858942,32,FLEN)
NAN_BOXED(3197178380,32,FLEN)
NAN_BOXED(1049414637,32,FLEN)
NAN_BOXED(1064452964,32,FLEN)
NAN_BOXED(3211114683,32,FLEN)
NAN_BOXED(1062823194,32,FLEN)
NAN_BOXED(1064452964,32,FLEN)
NAN_BOXED(3211114683,32,FLEN)
NAN_BOXED(1062823194,32,FLEN)
NAN_BOXED(1064452964,32,FLEN)
NAN_BOXED(3211114683,32,FLEN)
NAN_BOXED(1062823194,32,FLEN)
NAN_BOXED(1064452964,32,FLEN)
NAN_BOXED(3211114683,32,FLEN)
NAN_BOXED(1062823194,32,FLEN)
NAN_BOXED(1064452964,32,FLEN)
NAN_BOXED(3211114683,32,FLEN)
NAN_BOXED(1062823194,32,FLEN)
NAN_BOXED(1027895339,32,FLEN)
NAN_BOXED(3235169923,32,FLEN)
NAN_BOXED(1050887479,32,FLEN)
NAN_BOXED(1027895339,32,FLEN)
NAN_BOXED(3235169923,32,FLEN)
NAN_BOXED(1050887479,32,FLEN)
NAN_BOXED(1027895339,32,FLEN)
NAN_BOXED(3235169923,32,FLEN)
NAN_BOXED(1050887479,32,FLEN)
NAN_BOXED(1027895339,32,FLEN)
NAN_BOXED(3235169923,32,FLEN)
NAN_BOXED(1050887479,32,FLEN)
NAN_BOXED(1027895339,32,FLEN)
NAN_BOXED(3235169923,32,FLEN)
NAN_BOXED(1050887479,32,FLEN)
NAN_BOXED(1061610420,32,FLEN)
NAN_BOXED(3213992293,32,FLEN)
NAN_BOXED(1063405754,32,FLEN)
NAN_BOXED(1061610420,32,FLEN)
NAN_BOXED(3213992293,32,FLEN)
NAN_BOXED(1063405754,32,FLEN)
NAN_BOXED(1061610420,32,FLEN)
NAN_BOXED(3213992293,32,FLEN)
NAN_BOXED(1063405754,32,FLEN)
NAN_BOXED(1061610420,32,FLEN)
NAN_BOXED(3213992293,32,FLEN)
NAN_BOXED(1063405754,32,FLEN)
NAN_BOXED(1061610420,32,FLEN)
NAN_BOXED(3213992293,32,FLEN)
NAN_BOXED(1063405754,32,FLEN)
NAN_BOXED(1021290896,32,FLEN)
NAN_BOXED(3242477617,32,FLEN)
NAN_BOXED(1051426021,32,FLEN)
NAN_BOXED(1021290896,32,FLEN)
NAN_BOXED(3242477617,32,FLEN)
NAN_BOXED(1051426021,32,FLEN)
NAN_BOXED(1021290896,32,FLEN)
NAN_BOXED(3242477617,32,FLEN)
NAN_BOXED(1051426021,32,FLEN)
NAN_BOXED(1021290896,32,FLEN)
NAN_BOXED(3242477617,32,FLEN)
NAN_BOXED(1051426021,32,FLEN)
NAN_BOXED(1021290896,32,FLEN)
NAN_BOXED(3242477617,32,FLEN)
NAN_BOXED(1051426021,32,FLEN)
NAN_BOXED(1043838370,32,FLEN)
NAN_BOXED(3231281239,32,FLEN)
NAN_BOXED(1063008344,32,FLEN)
NAN_BOXED(1043838370,32,FLEN)
NAN_BOXED(3231281239,32,FLEN)
NAN_BOXED(1063008344,32,FLEN)
NAN_BOXED(1043838370,32,FLEN)
NAN_BOXED(3231281239,32,FLEN)
NAN_BOXED(1063008344,32,FLEN)
NAN_BOXED(1043838370,32,FLEN)
NAN_BOXED(3231281239,32,FLEN)
NAN_BOXED(1063008344,32,FLEN)
NAN_BOXED(1043838370,32,FLEN)
NAN_BOXED(3231281239,32,FLEN)
NAN_BOXED(1063008344,32,FLEN)
NAN_BOXED(1052777099,32,FLEN)
NAN_BOXED(3218884562,32,FLEN)
NAN_BOXED(1059409077,32,FLEN)
NAN_BOXED(1052777099,32,FLEN)
NAN_BOXED(3218884562,32,FLEN)
NAN_BOXED(1059409077,32,FLEN)
NAN_BOXED(1052777099,32,FLEN)
NAN_BOXED(3218884562,32,FLEN)
NAN_BOXED(1059409077,32,FLEN)
NAN_BOXED(1052777099,32,FLEN)
NAN_BOXED(3218884562,32,FLEN)
NAN_BOXED(1059409077,32,FLEN)
NAN_BOXED(1052777099,32,FLEN)
NAN_BOXED(3218884562,32,FLEN)
NAN_BOXED(1059409077,32,FLEN)
NAN_BOXED(1061410254,32,FLEN)
NAN_BOXED(3210682172,32,FLEN)
NAN_BOXED(1059761955,32,FLEN)
NAN_BOXED(1061410254,32,FLEN)
NAN_BOXED(3210682172,32,FLEN)
NAN_BOXED(1059761955,32,FLEN)
NAN_BOXED(1061410254,32,FLEN)
NAN_BOXED(3210682172,32,FLEN)
NAN_BOXED(1059761955,32,FLEN)
NAN_BOXED(1061410254,32,FLEN)
NAN_BOXED(3210682172,32,FLEN)
NAN_BOXED(1059761955,32,FLEN)
NAN_BOXED(1061410254,32,FLEN)
NAN_BOXED(3210682172,32,FLEN)
NAN_BOXED(1059761955,32,FLEN)
NAN_BOXED(1053147544,32,FLEN)
NAN_BOXED(3218594124,32,FLEN)
NAN_BOXED(1059503474,32,FLEN)
NAN_BOXED(1053147544,32,FLEN)
NAN_BOXED(3218594124,32,FLEN)
NAN_BOXED(1059503474,32,FLEN)
NAN_BOXED(1053147544,32,FLEN)
NAN_BOXED(3218594124,32,FLEN)
NAN_BOXED(1059503474,32,FLEN)
NAN_BOXED(1053147544,32,FLEN)
NAN_BOXED(3218594124,32,FLEN)
NAN_BOXED(1059503474,32,FLEN)
NAN_BOXED(1053147544,32,FLEN)
NAN_BOXED(3218594124,32,FLEN)
NAN_BOXED(1059503474,32,FLEN)
NAN_BOXED(1058881439,32,FLEN)
NAN_BOXED(3216241767,32,FLEN)
NAN_BOXED(1063064377,32,FLEN)
NAN_BOXED(1058881439,32,FLEN)
NAN_BOXED(3216241767,32,FLEN)
NAN_BOXED(1063064377,32,FLEN)
NAN_BOXED(1058881439,32,FLEN)
NAN_BOXED(3216241767,32,FLEN)
NAN_BOXED(1063064377,32,FLEN)
NAN_BOXED(1058881439,32,FLEN)
NAN_BOXED(3216241767,32,FLEN)
NAN_BOXED(1063064377,32,FLEN)
NAN_BOXED(1058881439,32,FLEN)
NAN_BOXED(3216241767,32,FLEN)
NAN_BOXED(1063064377,32,FLEN)
NAN_BOXED(1043133436,32,FLEN)
NAN_BOXED(3221580867,32,FLEN)
NAN_BOXED(1052002253,32,FLEN)
NAN_BOXED(1043133436,32,FLEN)
NAN_BOXED(3221580867,32,FLEN)
NAN_BOXED(1052002253,32,FLEN)
NAN_BOXED(1043133436,32,FLEN)
NAN_BOXED(3221580867,32,FLEN)
NAN_BOXED(1052002253,32,FLEN)
NAN_BOXED(1043133436,32,FLEN)
NAN_BOXED(3221580867,32,FLEN)
NAN_BOXED(1052002253,32,FLEN)
NAN_BOXED(1043133436,32,FLEN)
NAN_BOXED(3221580867,32,FLEN)
NAN_BOXED(1052002253,32,FLEN)
NAN_BOXED(1044918353,32,FLEN)
NAN_BOXED(3224993152,32,FLEN)
NAN_BOXED(1058082062,32,FLEN)
NAN_BOXED(1044918353,32,FLEN)
NAN_BOXED(3224993152,32,FLEN)
NAN_BOXED(1058082062,32,FLEN)
NAN_BOXED(1044918353,32,FLEN)
NAN_BOXED(3224993152,32,FLEN)
NAN_BOXED(1058082062,32,FLEN)
NAN_BOXED(1044918353,32,FLEN)
NAN_BOXED(3224993152,32,FLEN)
NAN_BOXED(1058082062,32,FLEN)
NAN_BOXED(1044918353,32,FLEN)
NAN_BOXED(3224993152,32,FLEN)
NAN_BOXED(1058082062,32,FLEN)
NAN_BOXED(1041759340,32,FLEN)
NAN_BOXED(3226472060,32,FLEN)
NAN_BOXED(1056377700,32,FLEN)
NAN_BOXED(1041759340,32,FLEN)
NAN_BOXED(3226472060,32,FLEN)
NAN_BOXED(1056377700,32,FLEN)
NAN_BOXED(1041759340,32,FLEN)
NAN_BOXED(3226472060,32,FLEN)
NAN_BOXED(1056377700,32,FLEN)
NAN_BOXED(1041759340,32,FLEN)
NAN_BOXED(3226472060,32,FLEN)
NAN_BOXED(1056377700,32,FLEN)
NAN_BOXED(1041759340,32,FLEN)
NAN_BOXED(3226472060,32,FLEN)
NAN_BOXED(1056377700,32,FLEN)
NAN_BOXED(1053856568,32,FLEN)
NAN_BOXED(3213235696,32,FLEN)
NAN_BOXED(1054506462,32,FLEN)
NAN_BOXED(1053856568,32,FLEN)
NAN_BOXED(3213235696,32,FLEN)
NAN_BOXED(1054506462,32,FLEN)
NAN_BOXED(1053856568,32,FLEN)
NAN_BOXED(3213235696,32,FLEN)
NAN_BOXED(1054506462,32,FLEN)
NAN_BOXED(1053856568,32,FLEN)
NAN_BOXED(3213235696,32,FLEN)
NAN_BOXED(1054506462,32,FLEN)
NAN_BOXED(1053856568,32,FLEN)
NAN_BOXED(3213235696,32,FLEN)
NAN_BOXED(1054506462,32,FLEN)
NAN_BOXED(1048906174,32,FLEN)
NAN_BOXED(3222594466,32,FLEN)
NAN_BOXED(1058717660,32,FLEN)
NAN_BOXED(1048906174,32,FLEN)
NAN_BOXED(3222594466,32,FLEN)
NAN_BOXED(1058717660,32,FLEN)
NAN_BOXED(1048906174,32,FLEN)
NAN_BOXED(3222594466,32,FLEN)
NAN_BOXED(1058717660,32,FLEN)
NAN_BOXED(1048906174,32,FLEN)
NAN_BOXED(3222594466,32,FLEN)
NAN_BOXED(1058717660,32,FLEN)
NAN_BOXED(1048906174,32,FLEN)
NAN_BOXED(3222594466,32,FLEN)
NAN_BOXED(1058717660,32,FLEN)
NAN_BOXED(1063725846,32,FLEN)
NAN_BOXED(3213429854,32,FLEN)
NAN_BOXED(1064796789,32,FLEN)
NAN_BOXED(1063725846,32,FLEN)
NAN_BOXED(3213429854,32,FLEN)
NAN_BOXED(1064796789,32,FLEN)
NAN_BOXED(1063725846,32,FLEN)
NAN_BOXED(3213429854,32,FLEN)
NAN_BOXED(1064796789,32,FLEN)
NAN_BOXED(1063725846,32,FLEN)
NAN_BOXED(3213429854,32,FLEN)
NAN_BOXED(1064796789,32,FLEN)
NAN_BOXED(1063725846,32,FLEN)
NAN_BOXED(3213429854,32,FLEN)
NAN_BOXED(1064796789,32,FLEN)
NAN_BOXED(1061957381,32,FLEN)
NAN_BOXED(3214550722,32,FLEN)
NAN_BOXED(1064691302,32,FLEN)
NAN_BOXED(1061957381,32,FLEN)
NAN_BOXED(3214550722,32,FLEN)
NAN_BOXED(1064691302,32,FLEN)
NAN_BOXED(1061957381,32,FLEN)
NAN_BOXED(3214550722,32,FLEN)
NAN_BOXED(1064691302,32,FLEN)
NAN_BOXED(1061957381,32,FLEN)
NAN_BOXED(3214550722,32,FLEN)
NAN_BOXED(1064691302,32,FLEN)
NAN_BOXED(1061957381,32,FLEN)
NAN_BOXED(3214550722,32,FLEN)
NAN_BOXED(1064691302,32,FLEN)
NAN_BOXED(1038273789,32,FLEN)
NAN_BOXED(3231054020,32,FLEN)
NAN_BOXED(1057283508,32,FLEN)
NAN_BOXED(1038273789,32,FLEN)
NAN_BOXED(3231054020,32,FLEN)
NAN_BOXED(1057283508,32,FLEN)
NAN_BOXED(1038273789,32,FLEN)
NAN_BOXED(3231054020,32,FLEN)
NAN_BOXED(1057283508,32,FLEN)
NAN_BOXED(1038273789,32,FLEN)
NAN_BOXED(3231054020,32,FLEN)
NAN_BOXED(1057283508,32,FLEN)
NAN_BOXED(1038273789,32,FLEN)
NAN_BOXED(3231054020,32,FLEN)
NAN_BOXED(1057283508,32,FLEN)
NAN_BOXED(1047881599,32,FLEN)
NAN_BOXED(3229972423,32,FLEN)
NAN_BOXED(1065345840,32,FLEN)
NAN_BOXED(1047881599,32,FLEN)
NAN_BOXED(3229972423,32,FLEN)
NAN_BOXED(1065345840,32,FLEN)
NAN_BOXED(1047881599,32,FLEN)
NAN_BOXED(3229972423,32,FLEN)
NAN_BOXED(1065345840,32,FLEN)
NAN_BOXED(1047881599,32,FLEN)
NAN_BOXED(3229972423,32,FLEN)
NAN_BOXED(1065345840,32,FLEN)
NAN_BOXED(1047881599,32,FLEN)
NAN_BOXED(3229972423,32,FLEN)
NAN_BOXED(1065345840,32,FLEN)
NAN_BOXED(1057464794,32,FLEN)
NAN_BOXED(3193243852,32,FLEN)
NAN_BOXED(1038204072,32,FLEN)
NAN_BOXED(1057464794,32,FLEN)
NAN_BOXED(3193243852,32,FLEN)
NAN_BOXED(1038204072,32,FLEN)
NAN_BOXED(1057464794,32,FLEN)
NAN_BOXED(3193243852,32,FLEN)
NAN_BOXED(1038204072,32,FLEN)
NAN_BOXED(1057464794,32,FLEN)
NAN_BOXED(3193243852,32,FLEN)
NAN_BOXED(1038204072,32,FLEN)
NAN_BOXED(1057464794,32,FLEN)
NAN_BOXED(3193243852,32,FLEN)
NAN_BOXED(1038204072,32,FLEN)
NAN_BOXED(1052956015,32,FLEN)
NAN_BOXED(3217043363,32,FLEN)
NAN_BOXED(1058161748,32,FLEN)
NAN_BOXED(1052956015,32,FLEN)
NAN_BOXED(3217043363,32,FLEN)
NAN_BOXED(1058161748,32,FLEN)
NAN_BOXED(1052956015,32,FLEN)
NAN_BOXED(3217043363,32,FLEN)
NAN_BOXED(1058161748,32,FLEN)
NAN_BOXED(1052956015,32,FLEN)
NAN_BOXED(3217043363,32,FLEN)
NAN_BOXED(1058161748,32,FLEN)
NAN_BOXED(1052956015,32,FLEN)
NAN_BOXED(3217043363,32,FLEN)
NAN_BOXED(1058161748,32,FLEN)
NAN_BOXED(1057542188,32,FLEN)
NAN_BOXED(3218579024,32,FLEN)
NAN_BOXED(1063679714,32,FLEN)
NAN_BOXED(1057542188,32,FLEN)
NAN_BOXED(3218579024,32,FLEN)
NAN_BOXED(1063679714,32,FLEN)
NAN_BOXED(1057542188,32,FLEN)
NAN_BOXED(3218579024,32,FLEN)
NAN_BOXED(1063679714,32,FLEN)
NAN_BOXED(1057542188,32,FLEN)
NAN_BOXED(3218579024,32,FLEN)
NAN_BOXED(1063679714,32,FLEN)
NAN_BOXED(1057542188,32,FLEN)
NAN_BOXED(3218579024,32,FLEN)
NAN_BOXED(1063679714,32,FLEN)
NAN_BOXED(1062758229,32,FLEN)
NAN_BOXED(3212750176,32,FLEN)
NAN_BOXED(1062684950,32,FLEN)
NAN_BOXED(1062758229,32,FLEN)
NAN_BOXED(3212750176,32,FLEN)
NAN_BOXED(1062684950,32,FLEN)
NAN_BOXED(1062758229,32,FLEN)
NAN_BOXED(3212750176,32,FLEN)
NAN_BOXED(1062684950,32,FLEN)
NAN_BOXED(1062758229,32,FLEN)
NAN_BOXED(3212750176,32,FLEN)
NAN_BOXED(1062684950,32,FLEN)
NAN_BOXED(1062758229,32,FLEN)
NAN_BOXED(3212750176,32,FLEN)
NAN_BOXED(1062684950,32,FLEN)
NAN_BOXED(1059067898,32,FLEN)
NAN_BOXED(3212541130,32,FLEN)
NAN_BOXED(1058882957,32,FLEN)
NAN_BOXED(1059067898,32,FLEN)
NAN_BOXED(3212541130,32,FLEN)
NAN_BOXED(1058882957,32,FLEN)
NAN_BOXED(1059067898,32,FLEN)
NAN_BOXED(3212541130,32,FLEN)
NAN_BOXED(1058882957,32,FLEN)
NAN_BOXED(1059067898,32,FLEN)
NAN_BOXED(3212541130,32,FLEN)
NAN_BOXED(1058882957,32,FLEN)
NAN_BOXED(1059067898,32,FLEN)
NAN_BOXED(3212541130,32,FLEN)
NAN_BOXED(1058882957,32,FLEN)
NAN_BOXED(1039470289,32,FLEN)
NAN_BOXED(3236085809,32,FLEN)
NAN_BOXED(1062801167,32,FLEN)
NAN_BOXED(1039470289,32,FLEN)
NAN_BOXED(3236085809,32,FLEN)
NAN_BOXED(1062801167,32,FLEN)
NAN_BOXED(1039470289,32,FLEN)
NAN_BOXED(3236085809,32,FLEN)
NAN_BOXED(1062801167,32,FLEN)
NAN_BOXED(1039470289,32,FLEN)
NAN_BOXED(3236085809,32,FLEN)
NAN_BOXED(1062801167,32,FLEN)
NAN_BOXED(1039470289,32,FLEN)
NAN_BOXED(3236085809,32,FLEN)
NAN_BOXED(1062801167,32,FLEN)
NAN_BOXED(1061090677,32,FLEN)
NAN_BOXED(3212311358,32,FLEN)
NAN_BOXED(1060698685,32,FLEN)
NAN_BOXED(1061090677,32,FLEN)
NAN_BOXED(3212311358,32,FLEN)
NAN_BOXED(1060698685,32,FLEN)
NAN_BOXED(1061090677,32,FLEN)
NAN_BOXED(3212311358,32,FLEN)
NAN_BOXED(1060698685,32,FLEN)
NAN_BOXED(1061090677,32,FLEN)
NAN_BOXED(3212311358,32,FLEN)
NAN_BOXED(1060698685,32,FLEN)
NAN_BOXED(1061090677,32,FLEN)
NAN_BOXED(3212311358,32,FLEN)
NAN_BOXED(1060698685,32,FLEN)
NAN_BOXED(1062643066,32,FLEN)
NAN_BOXED(3210325361,32,FLEN)
NAN_BOXED(1060537266,32,FLEN)
NAN_BOXED(1062643066,32,FLEN)
NAN_BOXED(3210325361,32,FLEN)
NAN_BOXED(1060537266,32,FLEN)
NAN_BOXED(1062643066,32,FLEN)
NAN_BOXED(3210325361,32,FLEN)
NAN_BOXED(1060537266,32,FLEN)
NAN_BOXED(1062643066,32,FLEN)
NAN_BOXED(3210325361,32,FLEN)
NAN_BOXED(1060537266,32,FLEN)
NAN_BOXED(1062643066,32,FLEN)
NAN_BOXED(3210325361,32,FLEN)
NAN_BOXED(1060537266,32,FLEN)
NAN_BOXED(1061407755,32,FLEN)
NAN_BOXED(3207421610,32,FLEN)
NAN_BOXED(1057265995,32,FLEN)
NAN_BOXED(1061407755,32,FLEN)
NAN_BOXED(3207421610,32,FLEN)
NAN_BOXED(1057265995,32,FLEN)
NAN_BOXED(1061407755,32,FLEN)
NAN_BOXED(3207421610,32,FLEN)
NAN_BOXED(1057265995,32,FLEN)
NAN_BOXED(1061407755,32,FLEN)
NAN_BOXED(3207421610,32,FLEN)
NAN_BOXED(1057265995,32,FLEN)
NAN_BOXED(1061407755,32,FLEN)
NAN_BOXED(3207421610,32,FLEN)
NAN_BOXED(1057265995,32,FLEN)
NAN_BOXED(1064814742,32,FLEN)
NAN_BOXED(3181360534,32,FLEN)
NAN_BOXED(1033540952,32,FLEN)
NAN_BOXED(1064814742,32,FLEN)
NAN_BOXED(3181360534,32,FLEN)
NAN_BOXED(1033540952,32,FLEN)
NAN_BOXED(1064814742,32,FLEN)
NAN_BOXED(3181360534,32,FLEN)
NAN_BOXED(1033540952,32,FLEN)
NAN_BOXED(1064814742,32,FLEN)
NAN_BOXED(3181360534,32,FLEN)
NAN_BOXED(1033540952,32,FLEN)
NAN_BOXED(1064814742,32,FLEN)
NAN_BOXED(3181360534,32,FLEN)
NAN_BOXED(1033540952,32,FLEN)
NAN_BOXED(1059162959,32,FLEN)
NAN_BOXED(3184093277,32,FLEN)
NAN_BOXED(1031680121,32,FLEN)
NAN_BOXED(1059162959,32,FLEN)
NAN_BOXED(3184093277,32,FLEN)
NAN_BOXED(1031680121,32,FLEN)
NAN_BOXED(1059162959,32,FLEN)
NAN_BOXED(3184093277,32,FLEN)
NAN_BOXED(1031680121,32,FLEN)
NAN_BOXED(1059162959,32,FLEN)
NAN_BOXED(3184093277,32,FLEN)
NAN_BOXED(1031680121,32,FLEN)
NAN_BOXED(1059162959,32,FLEN)
NAN_BOXED(3184093277,32,FLEN)
NAN_BOXED(1031680121,32,FLEN)
NAN_BOXED(1050665962,32,FLEN)
NAN_BOXED(3213210258,32,FLEN)
NAN_BOXED(1051132386,32,FLEN)
NAN_BOXED(1050665962,32,FLEN)
NAN_BOXED(3213210258,32,FLEN)
NAN_BOXED(1051132386,32,FLEN)
NAN_BOXED(1050665962,32,FLEN)
NAN_BOXED(3213210258,32,FLEN)
NAN_BOXED(1051132386,32,FLEN)
NAN_BOXED(1050665962,32,FLEN)
NAN_BOXED(3213210258,32,FLEN)
NAN_BOXED(1051132386,32,FLEN)
NAN_BOXED(1050665962,32,FLEN)
NAN_BOXED(3213210258,32,FLEN)
NAN_BOXED(1051132386,32,FLEN)
NAN_BOXED(1057438870,32,FLEN)
NAN_BOXED(3184764997,32,FLEN)
NAN_BOXED(1029676969,32,FLEN)
NAN_BOXED(1057438870,32,FLEN)
NAN_BOXED(3184764997,32,FLEN)
NAN_BOXED(1029676969,32,FLEN)
NAN_BOXED(1057438870,32,FLEN)
NAN_BOXED(3184764997,32,FLEN)
NAN_BOXED(1029676969,32,FLEN)
NAN_BOXED(1057438870,32,FLEN)
NAN_BOXED(3184764997,32,FLEN)
NAN_BOXED(1029676969,32,FLEN)
NAN_BOXED(1057438870,32,FLEN)
NAN_BOXED(3184764997,32,FLEN)
NAN_BOXED(1029676969,32,FLEN)
NAN_BOXED(1063374959,32,FLEN)
NAN_BOXED(3200278754,32,FLEN)
NAN_BOXED(1051308489,32,FLEN)
NAN_BOXED(1063374959,32,FLEN)
NAN_BOXED(3200278754,32,FLEN)
NAN_BOXED(1051308489,32,FLEN)
NAN_BOXED(1063374959,32,FLEN)
NAN_BOXED(3200278754,32,FLEN)
NAN_BOXED(1051308489,32,FLEN)
NAN_BOXED(1063374959,32,FLEN)
NAN_BOXED(3200278754,32,FLEN)
NAN_BOXED(1051308489,32,FLEN)
NAN_BOXED(1063374959,32,FLEN)
NAN_BOXED(3200278754,32,FLEN)
NAN_BOXED(1051308489,32,FLEN)
NAN_BOXED(1060469357,32,FLEN)
NAN_BOXED(3203079614,32,FLEN)
NAN_BOXED(1051110520,32,FLEN)
NAN_BOXED(1060469357,32,FLEN)
NAN_BOXED(3203079614,32,FLEN)
NAN_BOXED(1051110520,32,FLEN)
NAN_BOXED(1060469357,32,FLEN)
NAN_BOXED(3203079614,32,FLEN)
NAN_BOXED(1051110520,32,FLEN)
NAN_BOXED(1060469357,32,FLEN)
NAN_BOXED(3203079614,32,FLEN)
NAN_BOXED(1051110520,32,FLEN)
NAN_BOXED(1060469357,32,FLEN)
NAN_BOXED(3203079614,32,FLEN)
NAN_BOXED(1051110520,32,FLEN)
NAN_BOXED(1049270643,32,FLEN)
NAN_BOXED(3225801946,32,FLEN)
NAN_BOXED(1062614694,32,FLEN)
NAN_BOXED(1049270643,32,FLEN)
NAN_BOXED(3225801946,32,FLEN)
NAN_BOXED(1062614694,32,FLEN)
NAN_BOXED(1049270643,32,FLEN)
NAN_BOXED(3225801946,32,FLEN)
NAN_BOXED(1062614694,32,FLEN)
NAN_BOXED(1049270643,32,FLEN)
NAN_BOXED(3225801946,32,FLEN)
NAN_BOXED(1062614694,32,FLEN)
NAN_BOXED(1049270643,32,FLEN)
NAN_BOXED(3225801946,32,FLEN)
NAN_BOXED(1062614694,32,FLEN)
NAN_BOXED(1061980619,32,FLEN)
NAN_BOXED(3214685686,32,FLEN)
NAN_BOXED(1064934954,32,FLEN)
NAN_BOXED(1061980619,32,FLEN)
NAN_BOXED(3214685686,32,FLEN)
NAN_BOXED(1064934954,32,FLEN)
NAN_BOXED(1061980619,32,FLEN)
NAN_BOXED(3214685686,32,FLEN)
NAN_BOXED(1064934954,32,FLEN)
NAN_BOXED(1061980619,32,FLEN)
NAN_BOXED(3214685686,32,FLEN)
NAN_BOXED(1064934954,32,FLEN)
NAN_BOXED(1061980619,32,FLEN)
NAN_BOXED(3214685686,32,FLEN)
NAN_BOXED(1064934954,32,FLEN)
NAN_BOXED(1061486529,32,FLEN)
NAN_BOXED(3214496747,32,FLEN)
NAN_BOXED(1064041181,32,FLEN)
NAN_BOXED(1061486529,32,FLEN)
NAN_BOXED(3214496747,32,FLEN)
NAN_BOXED(1064041181,32,FLEN)
NAN_BOXED(1061486529,32,FLEN)
NAN_BOXED(3214496747,32,FLEN)
NAN_BOXED(1064041181,32,FLEN)
NAN_BOXED(1061486529,32,FLEN)
NAN_BOXED(3214496747,32,FLEN)
NAN_BOXED(1064041181,32,FLEN)
NAN_BOXED(1061486529,32,FLEN)
NAN_BOXED(3214496747,32,FLEN)
NAN_BOXED(1064041181,32,FLEN)
NAN_BOXED(1058624365,32,FLEN)
NAN_BOXED(3174340117,32,FLEN)
NAN_BOXED(1020809497,32,FLEN)
NAN_BOXED(1058624365,32,FLEN)
NAN_BOXED(3174340117,32,FLEN)
NAN_BOXED(1020809497,32,FLEN)
NAN_BOXED(1058624365,32,FLEN)
NAN_BOXED(3174340117,32,FLEN)
NAN_BOXED(1020809497,32,FLEN)
NAN_BOXED(1058624365,32,FLEN)
NAN_BOXED(3174340117,32,FLEN)
NAN_BOXED(1020809497,32,FLEN)
NAN_BOXED(1058624365,32,FLEN)
NAN_BOXED(3174340117,32,FLEN)
NAN_BOXED(1020809497,32,FLEN)
NAN_BOXED(1059242062,32,FLEN)
NAN_BOXED(3213528458,32,FLEN)
NAN_BOXED(1060121420,32,FLEN)
NAN_BOXED(1059242062,32,FLEN)
NAN_BOXED(3213528458,32,FLEN)
NAN_BOXED(1060121420,32,FLEN)
NAN_BOXED(1059242062,32,FLEN)
NAN_BOXED(3213528458,32,FLEN)
NAN_BOXED(1060121420,32,FLEN)
NAN_BOXED(1059242062,32,FLEN)
NAN_BOXED(3213528458,32,FLEN)
NAN_BOXED(1060121420,32,FLEN)
NAN_BOXED(1059242062,32,FLEN)
NAN_BOXED(3213528458,32,FLEN)
NAN_BOXED(1060121420,32,FLEN)
NAN_BOXED(1057500858,32,FLEN)
NAN_BOXED(3215752482,32,FLEN)
NAN_BOXED(1060602861,32,FLEN)
NAN_BOXED(1057500858,32,FLEN)
NAN_BOXED(3215752482,32,FLEN)
NAN_BOXED(1060602861,32,FLEN)
NAN_BOXED(1057500858,32,FLEN)
NAN_BOXED(3215752482,32,FLEN)
NAN_BOXED(1060602861,32,FLEN)
NAN_BOXED(1057500858,32,FLEN)
NAN_BOXED(3215752482,32,FLEN)
NAN_BOXED(1060602861,32,FLEN)
NAN_BOXED(1057500858,32,FLEN)
NAN_BOXED(3215752482,32,FLEN)
NAN_BOXED(1060602861,32,FLEN)
NAN_BOXED(1049168312,32,FLEN)
NAN_BOXED(3213288785,32,FLEN)
NAN_BOXED(1049652144,32,FLEN)
NAN_BOXED(1049168312,32,FLEN)
NAN_BOXED(3213288785,32,FLEN)
NAN_BOXED(1049652144,32,FLEN)
NAN_BOXED(1049168312,32,FLEN)
NAN_BOXED(3213288785,32,FLEN)
NAN_BOXED(1049652144,32,FLEN)
NAN_BOXED(1049168312,32,FLEN)
NAN_BOXED(3213288785,32,FLEN)
NAN_BOXED(1049652144,32,FLEN)
NAN_BOXED(1049168312,32,FLEN)
NAN_BOXED(3213288785,32,FLEN)
NAN_BOXED(1049652144,32,FLEN)
NAN_BOXED(1062612603,32,FLEN)
NAN_BOXED(3211289180,32,FLEN)
NAN_BOXED(1061317739,32,FLEN)
NAN_BOXED(1062612603,32,FLEN)
NAN_BOXED(3211289180,32,FLEN)
NAN_BOXED(1061317739,32,FLEN)
NAN_BOXED(1062612603,32,FLEN)
NAN_BOXED(3211289180,32,FLEN)
NAN_BOXED(1061317739,32,FLEN)
NAN_BOXED(1062612603,32,FLEN)
NAN_BOXED(3211289180,32,FLEN)
NAN_BOXED(1061317739,32,FLEN)
NAN_BOXED(1062612603,32,FLEN)
NAN_BOXED(3211289180,32,FLEN)
NAN_BOXED(1061317739,32,FLEN)
NAN_BOXED(1051186991,32,FLEN)
NAN_BOXED(3191466793,32,FLEN)
NAN_BOXED(1030998365,32,FLEN)
NAN_BOXED(1051186991,32,FLEN)
NAN_BOXED(3191466793,32,FLEN)
NAN_BOXED(1030998365,32,FLEN)
NAN_BOXED(1051186991,32,FLEN)
NAN_BOXED(3191466793,32,FLEN)
NAN_BOXED(1030998365,32,FLEN)
NAN_BOXED(1051186991,32,FLEN)
NAN_BOXED(3191466793,32,FLEN)
NAN_BOXED(1030998365,32,FLEN)
NAN_BOXED(1051186991,32,FLEN)
NAN_BOXED(3191466793,32,FLEN)
NAN_BOXED(1030998365,32,FLEN)
NAN_BOXED(1052069901,32,FLEN)
NAN_BOXED(3217935167,32,FLEN)
NAN_BOXED(1058128142,32,FLEN)
NAN_BOXED(1052069901,32,FLEN)
NAN_BOXED(3217935167,32,FLEN)
NAN_BOXED(1058128142,32,FLEN)
NAN_BOXED(1052069901,32,FLEN)
NAN_BOXED(3217935167,32,FLEN)
NAN_BOXED(1058128142,32,FLEN)
NAN_BOXED(1052069901,32,FLEN)
NAN_BOXED(3217935167,32,FLEN)
NAN_BOXED(1058128142,32,FLEN)
NAN_BOXED(1052069901,32,FLEN)
NAN_BOXED(3217935167,32,FLEN)
NAN_BOXED(1058128142,32,FLEN)
NAN_BOXED(1019822982,32,FLEN)
NAN_BOXED(3256994362,32,FLEN)
NAN_BOXED(1065247977,32,FLEN)
NAN_BOXED(1019822982,32,FLEN)
NAN_BOXED(3256994362,32,FLEN)
NAN_BOXED(1065247977,32,FLEN)
NAN_BOXED(1019822982,32,FLEN)
NAN_BOXED(3256994362,32,FLEN)
NAN_BOXED(1065247977,32,FLEN)
NAN_BOXED(1019822982,32,FLEN)
NAN_BOXED(3256994362,32,FLEN)
NAN_BOXED(1065247977,32,FLEN)
NAN_BOXED(1019822982,32,FLEN)
NAN_BOXED(3256994362,32,FLEN)
NAN_BOXED(1065247977,32,FLEN)
NAN_BOXED(1064332039,32,FLEN)
NAN_BOXED(3195055901,32,FLEN)
NAN_BOXED(1046612172,32,FLEN)
NAN_BOXED(1064332039,32,FLEN)
NAN_BOXED(3195055901,32,FLEN)
NAN_BOXED(1046612172,32,FLEN)
NAN_BOXED(1064332039,32,FLEN)
NAN_BOXED(3195055901,32,FLEN)
NAN_BOXED(1046612172,32,FLEN)
NAN_BOXED(1064332039,32,FLEN)
NAN_BOXED(3195055901,32,FLEN)
NAN_BOXED(1046612172,32,FLEN)
NAN_BOXED(1064332039,32,FLEN)
NAN_BOXED(3195055901,32,FLEN)
NAN_BOXED(1046612172,32,FLEN)
NAN_BOXED(1058471725,32,FLEN)
NAN_BOXED(3218031047,32,FLEN)
NAN_BOXED(1064599108,32,FLEN)
NAN_BOXED(1058471725,32,FLEN)
NAN_BOXED(3218031047,32,FLEN)
NAN_BOXED(1064599108,32,FLEN)
NAN_BOXED(1058471725,32,FLEN)
NAN_BOXED(3218031047,32,FLEN)
NAN_BOXED(1064599108,32,FLEN)
NAN_BOXED(1058471725,32,FLEN)
NAN_BOXED(3218031047,32,FLEN)
NAN_BOXED(1064599108,32,FLEN)
NAN_BOXED(1058471725,32,FLEN)
NAN_BOXED(3218031047,32,FLEN)
NAN_BOXED(1064599108,32,FLEN)
NAN_BOXED(1055340027,32,FLEN)
NAN_BOXED(3166474158,32,FLEN)
NAN_BOXED(1009405289,32,FLEN)
NAN_BOXED(1055340027,32,FLEN)
NAN_BOXED(3166474158,32,FLEN)
NAN_BOXED(1009405289,32,FLEN)
NAN_BOXED(1055340027,32,FLEN)
NAN_BOXED(3166474158,32,FLEN)
NAN_BOXED(1009405289,32,FLEN)
NAN_BOXED(1055340027,32,FLEN)
NAN_BOXED(3166474158,32,FLEN)
NAN_BOXED(1009405289,32,FLEN)
NAN_BOXED(1055340027,32,FLEN)
NAN_BOXED(3166474158,32,FLEN)
NAN_BOXED(1009405289,32,FLEN)
NAN_BOXED(1056329088,32,FLEN)
NAN_BOXED(3215782566,32,FLEN)
NAN_BOXED(1059480967,32,FLEN)
NAN_BOXED(1056329088,32,FLEN)
NAN_BOXED(3215782566,32,FLEN)
NAN_BOXED(1059480967,32,FLEN)
NAN_BOXED(1056329088,32,FLEN)
NAN_BOXED(3215782566,32,FLEN)
NAN_BOXED(1059480967,32,FLEN)
NAN_BOXED(1056329088,32,FLEN)
NAN_BOXED(3215782566,32,FLEN)
NAN_BOXED(1059480967,32,FLEN)
NAN_BOXED(1056329088,32,FLEN)
NAN_BOXED(3215782566,32,FLEN)
NAN_BOXED(1059480967,32,FLEN)
NAN_BOXED(1396711910,32,FLEN)
NAN_BOXED(1092511518,32,FLEN)
NAN_BOXED(1393679087,32,FLEN)
NAN_BOXED(1396711910,32,FLEN)
NAN_BOXED(1092511518,32,FLEN)
NAN_BOXED(1393679087,32,FLEN)
NAN_BOXED(1396711910,32,FLEN)
NAN_BOXED(1092511518,32,FLEN)
NAN_BOXED(1393679087,32,FLEN)
NAN_BOXED(1396711910,32,FLEN)
NAN_BOXED(1092511518,32,FLEN)
NAN_BOXED(1393679087,32,FLEN)
NAN_BOXED(1396711910,32,FLEN)
NAN_BOXED(1092511518,32,FLEN)
NAN_BOXED(1393679087,32,FLEN)
NAN_BOXED(1424365371,32,FLEN)
NAN_BOXED(1058074210,32,FLEN)
NAN_BOXED(1417378138,32,FLEN)
NAN_BOXED(1424365371,32,FLEN)
NAN_BOXED(1058074210,32,FLEN)
NAN_BOXED(1417378138,32,FLEN)
NAN_BOXED(1424365371,32,FLEN)
NAN_BOXED(1058074210,32,FLEN)
NAN_BOXED(1417378138,32,FLEN)
NAN_BOXED(1424365371,32,FLEN)
NAN_BOXED(1058074210,32,FLEN)
NAN_BOXED(1417378138,32,FLEN)
NAN_BOXED(1424365371,32,FLEN)
NAN_BOXED(1058074210,32,FLEN)
NAN_BOXED(1417378138,32,FLEN)
NAN_BOXED(1424985192,32,FLEN)
NAN_BOXED(1065447366,32,FLEN)
NAN_BOXED(1390163201,32,FLEN)
NAN_BOXED(1424985192,32,FLEN)
NAN_BOXED(1065447366,32,FLEN)
NAN_BOXED(1390163201,32,FLEN)
NAN_BOXED(1424985192,32,FLEN)
NAN_BOXED(1065447366,32,FLEN)
NAN_BOXED(1390163201,32,FLEN)
NAN_BOXED(1424985192,32,FLEN)
NAN_BOXED(1065447366,32,FLEN)
NAN_BOXED(1390163201,32,FLEN)
NAN_BOXED(1424985192,32,FLEN)
NAN_BOXED(1065447366,32,FLEN)
NAN_BOXED(1390163201,32,FLEN)
NAN_BOXED(1408847495,32,FLEN)
NAN_BOXED(1081711589,32,FLEN)
NAN_BOXED(1389276359,32,FLEN)
NAN_BOXED(1408847495,32,FLEN)
NAN_BOXED(1081711589,32,FLEN)
NAN_BOXED(1389276359,32,FLEN)
NAN_BOXED(1408847495,32,FLEN)
NAN_BOXED(1081711589,32,FLEN)
NAN_BOXED(1389276359,32,FLEN)
NAN_BOXED(1408847495,32,FLEN)
NAN_BOXED(1081711589,32,FLEN)
NAN_BOXED(1389276359,32,FLEN)
NAN_BOXED(1408847495,32,FLEN)
NAN_BOXED(1081711589,32,FLEN)
NAN_BOXED(1389276359,32,FLEN)
NAN_BOXED(1414229346,32,FLEN)
NAN_BOXED(1075274877,32,FLEN)
NAN_BOXED(1391875084,32,FLEN)
NAN_BOXED(1414229346,32,FLEN)
NAN_BOXED(1075274877,32,FLEN)
NAN_BOXED(1391875084,32,FLEN)
NAN_BOXED(1414229346,32,FLEN)
NAN_BOXED(1075274877,32,FLEN)
NAN_BOXED(1391875084,32,FLEN)
NAN_BOXED(1414229346,32,FLEN)
NAN_BOXED(1075274877,32,FLEN)
NAN_BOXED(1391875084,32,FLEN)
NAN_BOXED(1414229346,32,FLEN)
NAN_BOXED(1075274877,32,FLEN)
NAN_BOXED(1391875084,32,FLEN)
NAN_BOXED(1409468346,32,FLEN)
NAN_BOXED(1075082857,32,FLEN)
NAN_BOXED(1414570026,32,FLEN)
NAN_BOXED(1409468346,32,FLEN)
NAN_BOXED(1075082857,32,FLEN)
NAN_BOXED(1414570026,32,FLEN)
NAN_BOXED(1409468346,32,FLEN)
NAN_BOXED(1075082857,32,FLEN)
NAN_BOXED(1414570026,32,FLEN)
NAN_BOXED(1409468346,32,FLEN)
NAN_BOXED(1075082857,32,FLEN)
NAN_BOXED(1414570026,32,FLEN)
NAN_BOXED(1409468346,32,FLEN)
NAN_BOXED(1075082857,32,FLEN)
NAN_BOXED(1414570026,32,FLEN)
NAN_BOXED(1411163477,32,FLEN)
NAN_BOXED(1078358536,32,FLEN)
NAN_BOXED(1389513512,32,FLEN)
NAN_BOXED(1411163477,32,FLEN)
NAN_BOXED(1078358536,32,FLEN)
NAN_BOXED(1389513512,32,FLEN)
NAN_BOXED(1411163477,32,FLEN)
NAN_BOXED(1078358536,32,FLEN)
NAN_BOXED(1389513512,32,FLEN)
NAN_BOXED(1411163477,32,FLEN)
NAN_BOXED(1078358536,32,FLEN)
NAN_BOXED(1389513512,32,FLEN)
NAN_BOXED(1411163477,32,FLEN)
NAN_BOXED(1078358536,32,FLEN)
NAN_BOXED(1389513512,32,FLEN)
NAN_BOXED(1385826108,32,FLEN)
NAN_BOXED(1061235602,32,FLEN)
NAN_BOXED(1425587301,32,FLEN)
NAN_BOXED(1385826108,32,FLEN)
NAN_BOXED(1061235602,32,FLEN)
NAN_BOXED(1425587301,32,FLEN)
NAN_BOXED(1385826108,32,FLEN)
NAN_BOXED(1061235602,32,FLEN)
NAN_BOXED(1425587301,32,FLEN)
NAN_BOXED(1385826108,32,FLEN)
NAN_BOXED(1061235602,32,FLEN)
NAN_BOXED(1425587301,32,FLEN)
NAN_BOXED(1385826108,32,FLEN)
NAN_BOXED(1061235602,32,FLEN)
NAN_BOXED(1425587301,32,FLEN)
NAN_BOXED(1404547348,32,FLEN)
NAN_BOXED(1076842147,32,FLEN)
NAN_BOXED(1417819525,32,FLEN)
NAN_BOXED(1404547348,32,FLEN)
NAN_BOXED(1076842147,32,FLEN)
NAN_BOXED(1417819525,32,FLEN)
NAN_BOXED(1404547348,32,FLEN)
NAN_BOXED(1076842147,32,FLEN)
NAN_BOXED(1417819525,32,FLEN)
NAN_BOXED(1404547348,32,FLEN)
NAN_BOXED(1076842147,32,FLEN)
NAN_BOXED(1417819525,32,FLEN)
NAN_BOXED(1404547348,32,FLEN)
NAN_BOXED(1076842147,32,FLEN)
NAN_BOXED(1417819525,32,FLEN)
NAN_BOXED(1414398414,32,FLEN)
NAN_BOXED(1066736177,32,FLEN)
NAN_BOXED(1418200031,32,FLEN)
NAN_BOXED(1414398414,32,FLEN)
NAN_BOXED(1066736177,32,FLEN)
NAN_BOXED(1418200031,32,FLEN)
NAN_BOXED(1414398414,32,FLEN)
NAN_BOXED(1066736177,32,FLEN)
NAN_BOXED(1418200031,32,FLEN)
NAN_BOXED(1414398414,32,FLEN)
NAN_BOXED(1066736177,32,FLEN)
NAN_BOXED(1418200031,32,FLEN)
NAN_BOXED(1414398414,32,FLEN)
NAN_BOXED(1066736177,32,FLEN)
NAN_BOXED(1418200031,32,FLEN)
NAN_BOXED(1395442894,32,FLEN)
NAN_BOXED(1090658677,32,FLEN)
NAN_BOXED(1411429867,32,FLEN)
NAN_BOXED(1395442894,32,FLEN)
NAN_BOXED(1090658677,32,FLEN)
NAN_BOXED(1411429867,32,FLEN)
NAN_BOXED(1395442894,32,FLEN)
NAN_BOXED(1090658677,32,FLEN)
NAN_BOXED(1411429867,32,FLEN)
NAN_BOXED(1395442894,32,FLEN)
NAN_BOXED(1090658677,32,FLEN)
NAN_BOXED(1411429867,32,FLEN)
NAN_BOXED(1395442894,32,FLEN)
NAN_BOXED(1090658677,32,FLEN)
NAN_BOXED(1411429867,32,FLEN)
NAN_BOXED(1398613206,32,FLEN)
NAN_BOXED(1082638136,32,FLEN)
NAN_BOXED(1418378339,32,FLEN)
NAN_BOXED(1398613206,32,FLEN)
NAN_BOXED(1082638136,32,FLEN)
NAN_BOXED(1418378339,32,FLEN)
NAN_BOXED(1398613206,32,FLEN)
NAN_BOXED(1082638136,32,FLEN)
NAN_BOXED(1418378339,32,FLEN)
NAN_BOXED(1398613206,32,FLEN)
NAN_BOXED(1082638136,32,FLEN)
NAN_BOXED(1418378339,32,FLEN)
NAN_BOXED(1398613206,32,FLEN)
NAN_BOXED(1082638136,32,FLEN)
NAN_BOXED(1418378339,32,FLEN)
NAN_BOXED(1424743036,32,FLEN)
NAN_BOXED(1054818056,32,FLEN)
NAN_BOXED(1419323726,32,FLEN)
NAN_BOXED(1424743036,32,FLEN)
NAN_BOXED(1054818056,32,FLEN)
NAN_BOXED(1419323726,32,FLEN)
NAN_BOXED(1424743036,32,FLEN)
NAN_BOXED(1054818056,32,FLEN)
NAN_BOXED(1419323726,32,FLEN)
NAN_BOXED(1424743036,32,FLEN)
NAN_BOXED(1054818056,32,FLEN)
NAN_BOXED(1419323726,32,FLEN)
NAN_BOXED(1424743036,32,FLEN)
NAN_BOXED(1054818056,32,FLEN)
NAN_BOXED(1419323726,32,FLEN)
NAN_BOXED(1423660307,32,FLEN)
NAN_BOXED(1063959435,32,FLEN)
NAN_BOXED(1406897724,32,FLEN)
NAN_BOXED(1423660307,32,FLEN)
NAN_BOXED(1063959435,32,FLEN)
NAN_BOXED(1406897724,32,FLEN)
NAN_BOXED(1423660307,32,FLEN)
NAN_BOXED(1063959435,32,FLEN)
NAN_BOXED(1406897724,32,FLEN)
NAN_BOXED(1423660307,32,FLEN)
NAN_BOXED(1063959435,32,FLEN)
NAN_BOXED(1406897724,32,FLEN)
NAN_BOXED(1423660307,32,FLEN)
NAN_BOXED(1063959435,32,FLEN)
NAN_BOXED(1406897724,32,FLEN)
NAN_BOXED(1376689097,32,FLEN)
NAN_BOXED(1104383993,32,FLEN)
NAN_BOXED(1418339684,32,FLEN)
NAN_BOXED(1376689097,32,FLEN)
NAN_BOXED(1104383993,32,FLEN)
NAN_BOXED(1418339684,32,FLEN)
NAN_BOXED(1376689097,32,FLEN)
NAN_BOXED(1104383993,32,FLEN)
NAN_BOXED(1418339684,32,FLEN)
NAN_BOXED(1376689097,32,FLEN)
NAN_BOXED(1104383993,32,FLEN)
NAN_BOXED(1418339684,32,FLEN)
NAN_BOXED(1376689097,32,FLEN)
NAN_BOXED(1104383993,32,FLEN)
NAN_BOXED(1418339684,32,FLEN)
NAN_BOXED(1417223110,32,FLEN)
NAN_BOXED(1063354527,32,FLEN)
NAN_BOXED(1418873015,32,FLEN)
NAN_BOXED(1417223110,32,FLEN)
NAN_BOXED(1063354527,32,FLEN)
NAN_BOXED(1418873015,32,FLEN)
NAN_BOXED(1417223110,32,FLEN)
NAN_BOXED(1063354527,32,FLEN)
NAN_BOXED(1418873015,32,FLEN)
NAN_BOXED(1417223110,32,FLEN)
NAN_BOXED(1063354527,32,FLEN)
NAN_BOXED(1418873015,32,FLEN)
NAN_BOXED(1417223110,32,FLEN)
NAN_BOXED(1063354527,32,FLEN)
NAN_BOXED(1418873015,32,FLEN)
NAN_BOXED(1413535096,32,FLEN)
NAN_BOXED(1065276244,32,FLEN)
NAN_BOXED(1419773569,32,FLEN)
NAN_BOXED(1413535096,32,FLEN)
NAN_BOXED(1065276244,32,FLEN)
NAN_BOXED(1419773569,32,FLEN)
NAN_BOXED(1413535096,32,FLEN)
NAN_BOXED(1065276244,32,FLEN)
NAN_BOXED(1419773569,32,FLEN)
NAN_BOXED(1413535096,32,FLEN)
NAN_BOXED(1065276244,32,FLEN)
NAN_BOXED(1419773569,32,FLEN)
NAN_BOXED(1413535096,32,FLEN)
NAN_BOXED(1065276244,32,FLEN)
NAN_BOXED(1419773569,32,FLEN)
NAN_BOXED(1421460340,32,FLEN)
NAN_BOXED(1039502372,32,FLEN)
NAN_BOXED(1424603720,32,FLEN)
NAN_BOXED(1421460340,32,FLEN)
NAN_BOXED(1039502372,32,FLEN)
NAN_BOXED(1424603720,32,FLEN)
NAN_BOXED(1421460340,32,FLEN)
NAN_BOXED(1039502372,32,FLEN)
NAN_BOXED(1424603720,32,FLEN)
NAN_BOXED(1421460340,32,FLEN)
NAN_BOXED(1039502372,32,FLEN)
NAN_BOXED(1424603720,32,FLEN)
NAN_BOXED(1421460340,32,FLEN)
NAN_BOXED(1039502372,32,FLEN)
NAN_BOXED(1424603720,32,FLEN)
NAN_BOXED(1411219247,32,FLEN)
NAN_BOXED(1071989335,32,FLEN)
NAN_BOXED(1415964884,32,FLEN)
NAN_BOXED(1411219247,32,FLEN)
NAN_BOXED(1071989335,32,FLEN)
NAN_BOXED(1415964884,32,FLEN)
NAN_BOXED(1411219247,32,FLEN)
NAN_BOXED(1071989335,32,FLEN)
NAN_BOXED(1415964884,32,FLEN)
NAN_BOXED(1411219247,32,FLEN)
NAN_BOXED(1071989335,32,FLEN)
NAN_BOXED(1415964884,32,FLEN)
NAN_BOXED(1411219247,32,FLEN)
NAN_BOXED(1071989335,32,FLEN)
NAN_BOXED(1415964884,32,FLEN)
NAN_BOXED(1423151099,32,FLEN)
NAN_BOXED(1064330254,32,FLEN)
NAN_BOXED(1407539538,32,FLEN)
NAN_BOXED(1423151099,32,FLEN)
NAN_BOXED(1064330254,32,FLEN)
NAN_BOXED(1407539538,32,FLEN)
NAN_BOXED(1423151099,32,FLEN)
NAN_BOXED(1064330254,32,FLEN)
NAN_BOXED(1407539538,32,FLEN)
NAN_BOXED(1423151099,32,FLEN)
NAN_BOXED(1064330254,32,FLEN)
NAN_BOXED(1407539538,32,FLEN)
NAN_BOXED(1423151099,32,FLEN)
NAN_BOXED(1064330254,32,FLEN)
NAN_BOXED(1407539538,32,FLEN)
NAN_BOXED(1399647542,32,FLEN)
NAN_BOXED(1086218897,32,FLEN)
NAN_BOXED(1411357041,32,FLEN)
NAN_BOXED(1399647542,32,FLEN)
NAN_BOXED(1086218897,32,FLEN)
NAN_BOXED(1411357041,32,FLEN)
NAN_BOXED(1399647542,32,FLEN)
NAN_BOXED(1086218897,32,FLEN)
NAN_BOXED(1411357041,32,FLEN)
NAN_BOXED(1399647542,32,FLEN)
NAN_BOXED(1086218897,32,FLEN)
NAN_BOXED(1411357041,32,FLEN)
NAN_BOXED(1399647542,32,FLEN)
NAN_BOXED(1086218897,32,FLEN)
NAN_BOXED(1411357041,32,FLEN)
NAN_BOXED(1395882447,32,FLEN)
NAN_BOXED(1076246196,32,FLEN)
NAN_BOXED(1422244949,32,FLEN)
NAN_BOXED(1395882447,32,FLEN)
NAN_BOXED(1076246196,32,FLEN)
NAN_BOXED(1422244949,32,FLEN)
NAN_BOXED(1395882447,32,FLEN)
NAN_BOXED(1076246196,32,FLEN)
NAN_BOXED(1422244949,32,FLEN)
NAN_BOXED(1395882447,32,FLEN)
NAN_BOXED(1076246196,32,FLEN)
NAN_BOXED(1422244949,32,FLEN)
NAN_BOXED(1395882447,32,FLEN)
NAN_BOXED(1076246196,32,FLEN)
NAN_BOXED(1422244949,32,FLEN)
NAN_BOXED(1423034027,32,FLEN)
NAN_BOXED(1062644217,32,FLEN)
NAN_BOXED(1411395912,32,FLEN)
NAN_BOXED(1423034027,32,FLEN)
NAN_BOXED(1062644217,32,FLEN)
NAN_BOXED(1411395912,32,FLEN)
NAN_BOXED(1423034027,32,FLEN)
NAN_BOXED(1062644217,32,FLEN)
NAN_BOXED(1411395912,32,FLEN)
NAN_BOXED(1423034027,32,FLEN)
NAN_BOXED(1062644217,32,FLEN)
NAN_BOXED(1411395912,32,FLEN)
NAN_BOXED(1423034027,32,FLEN)
NAN_BOXED(1062644217,32,FLEN)
NAN_BOXED(1411395912,32,FLEN)
NAN_BOXED(1401220566,32,FLEN)
NAN_BOXED(1088572459,32,FLEN)
NAN_BOXED(1395124155,32,FLEN)
NAN_BOXED(1401220566,32,FLEN)
NAN_BOXED(1088572459,32,FLEN)
NAN_BOXED(1395124155,32,FLEN)
NAN_BOXED(1401220566,32,FLEN)
NAN_BOXED(1088572459,32,FLEN)
NAN_BOXED(1395124155,32,FLEN)
NAN_BOXED(1401220566,32,FLEN)
NAN_BOXED(1088572459,32,FLEN)
NAN_BOXED(1395124155,32,FLEN)
NAN_BOXED(1401220566,32,FLEN)
NAN_BOXED(1088572459,32,FLEN)
NAN_BOXED(1395124155,32,FLEN)
NAN_BOXED(1408940504,32,FLEN)
NAN_BOXED(1081038850,32,FLEN)
NAN_BOXED(1395438192,32,FLEN)
NAN_BOXED(1408940504,32,FLEN)
NAN_BOXED(1081038850,32,FLEN)
NAN_BOXED(1395438192,32,FLEN)
NAN_BOXED(1408940504,32,FLEN)
NAN_BOXED(1081038850,32,FLEN)
NAN_BOXED(1395438192,32,FLEN)
NAN_BOXED(1408940504,32,FLEN)
NAN_BOXED(1081038850,32,FLEN)
NAN_BOXED(1395438192,32,FLEN)
NAN_BOXED(1408940504,32,FLEN)
NAN_BOXED(1081038850,32,FLEN)
NAN_BOXED(1395438192,32,FLEN)
NAN_BOXED(1415280647,32,FLEN)
NAN_BOXED(1065132745,32,FLEN)
NAN_BOXED(1418966309,32,FLEN)
NAN_BOXED(1415280647,32,FLEN)
NAN_BOXED(1065132745,32,FLEN)
NAN_BOXED(1418966309,32,FLEN)
NAN_BOXED(1415280647,32,FLEN)
NAN_BOXED(1065132745,32,FLEN)
NAN_BOXED(1418966309,32,FLEN)
NAN_BOXED(1415280647,32,FLEN)
NAN_BOXED(1065132745,32,FLEN)
NAN_BOXED(1418966309,32,FLEN)
NAN_BOXED(1415280647,32,FLEN)
NAN_BOXED(1065132745,32,FLEN)
NAN_BOXED(1418966309,32,FLEN)
NAN_BOXED(1408976533,32,FLEN)
NAN_BOXED(1081395651,32,FLEN)
NAN_BOXED(1392225013,32,FLEN)
NAN_BOXED(1408976533,32,FLEN)
NAN_BOXED(1081395651,32,FLEN)
NAN_BOXED(1392225013,32,FLEN)
NAN_BOXED(1408976533,32,FLEN)
NAN_BOXED(1081395651,32,FLEN)
NAN_BOXED(1392225013,32,FLEN)
NAN_BOXED(1408976533,32,FLEN)
NAN_BOXED(1081395651,32,FLEN)
NAN_BOXED(1392225013,32,FLEN)
NAN_BOXED(1408976533,32,FLEN)
NAN_BOXED(1081395651,32,FLEN)
NAN_BOXED(1392225013,32,FLEN)
NAN_BOXED(1421040302,32,FLEN)
NAN_BOXED(1068362933,32,FLEN)
NAN_BOXED(1388624966,32,FLEN)
NAN_BOXED(1421040302,32,FLEN)
NAN_BOXED(1068362933,32,FLEN)
NAN_BOXED(1388624966,32,FLEN)
NAN_BOXED(1421040302,32,FLEN)
NAN_BOXED(1068362933,32,FLEN)
NAN_BOXED(1388624966,32,FLEN)
NAN_BOXED(1421040302,32,FLEN)
NAN_BOXED(1068362933,32,FLEN)
NAN_BOXED(1388624966,32,FLEN)
NAN_BOXED(1421040302,32,FLEN)
NAN_BOXED(1068362933,32,FLEN)
NAN_BOXED(1388624966,32,FLEN)
NAN_BOXED(1405920898,32,FLEN)
NAN_BOXED(1080337440,32,FLEN)
NAN_BOXED(1410494718,32,FLEN)
NAN_BOXED(1405920898,32,FLEN)
NAN_BOXED(1080337440,32,FLEN)
NAN_BOXED(1410494718,32,FLEN)
NAN_BOXED(1405920898,32,FLEN)
NAN_BOXED(1080337440,32,FLEN)
NAN_BOXED(1410494718,32,FLEN)
NAN_BOXED(1405920898,32,FLEN)
NAN_BOXED(1080337440,32,FLEN)
NAN_BOXED(1410494718,32,FLEN)
NAN_BOXED(1405920898,32,FLEN)
NAN_BOXED(1080337440,32,FLEN)
NAN_BOXED(1410494718,32,FLEN)
NAN_BOXED(1413438930,32,FLEN)
NAN_BOXED(1075469354,32,FLEN)
NAN_BOXED(1397344923,32,FLEN)
NAN_BOXED(1413438930,32,FLEN)
NAN_BOXED(1075469354,32,FLEN)
NAN_BOXED(1397344923,32,FLEN)
NAN_BOXED(1413438930,32,FLEN)
NAN_BOXED(1075469354,32,FLEN)
NAN_BOXED(1397344923,32,FLEN)
NAN_BOXED(1413438930,32,FLEN)
NAN_BOXED(1075469354,32,FLEN)
NAN_BOXED(1397344923,32,FLEN)
NAN_BOXED(1413438930,32,FLEN)
NAN_BOXED(1075469354,32,FLEN)
NAN_BOXED(1397344923,32,FLEN)
NAN_BOXED(1415009791,32,FLEN)
NAN_BOXED(1070648578,32,FLEN)
NAN_BOXED(1411431261,32,FLEN)
NAN_BOXED(1415009791,32,FLEN)
NAN_BOXED(1070648578,32,FLEN)
NAN_BOXED(1411431261,32,FLEN)
NAN_BOXED(1415009791,32,FLEN)
NAN_BOXED(1070648578,32,FLEN)
NAN_BOXED(1411431261,32,FLEN)
NAN_BOXED(1415009791,32,FLEN)
NAN_BOXED(1070648578,32,FLEN)
NAN_BOXED(1411431261,32,FLEN)
NAN_BOXED(1415009791,32,FLEN)
NAN_BOXED(1070648578,32,FLEN)
NAN_BOXED(1411431261,32,FLEN)
NAN_BOXED(1421907932,32,FLEN)
NAN_BOXED(1058475643,32,FLEN)
NAN_BOXED(1418615688,32,FLEN)
NAN_BOXED(1421907932,32,FLEN)
NAN_BOXED(1058475643,32,FLEN)
NAN_BOXED(1418615688,32,FLEN)
NAN_BOXED(1421907932,32,FLEN)
NAN_BOXED(1058475643,32,FLEN)
NAN_BOXED(1418615688,32,FLEN)
NAN_BOXED(1421907932,32,FLEN)
NAN_BOXED(1058475643,32,FLEN)
NAN_BOXED(1418615688,32,FLEN)
NAN_BOXED(1421907932,32,FLEN)
NAN_BOXED(1058475643,32,FLEN)
NAN_BOXED(1418615688,32,FLEN)
NAN_BOXED(1424320039,32,FLEN)
NAN_BOXED(1053139820,32,FLEN)
NAN_BOXED(1420260089,32,FLEN)
NAN_BOXED(1424320039,32,FLEN)
NAN_BOXED(1053139820,32,FLEN)
NAN_BOXED(1420260089,32,FLEN)
NAN_BOXED(1424320039,32,FLEN)
NAN_BOXED(1053139820,32,FLEN)
NAN_BOXED(1420260089,32,FLEN)
NAN_BOXED(1424320039,32,FLEN)
NAN_BOXED(1053139820,32,FLEN)
NAN_BOXED(1420260089,32,FLEN)
NAN_BOXED(1424320039,32,FLEN)
NAN_BOXED(1053139820,32,FLEN)
NAN_BOXED(1420260089,32,FLEN)
NAN_BOXED(1422032109,32,FLEN)
NAN_BOXED(1057967455,32,FLEN)
NAN_BOXED(1418928495,32,FLEN)
NAN_BOXED(1422032109,32,FLEN)
NAN_BOXED(1057967455,32,FLEN)
NAN_BOXED(1418928495,32,FLEN)
NAN_BOXED(1422032109,32,FLEN)
NAN_BOXED(1057967455,32,FLEN)
NAN_BOXED(1418928495,32,FLEN)
NAN_BOXED(1422032109,32,FLEN)
NAN_BOXED(1057967455,32,FLEN)
NAN_BOXED(1418928495,32,FLEN)
NAN_BOXED(1422032109,32,FLEN)
NAN_BOXED(1057967455,32,FLEN)
NAN_BOXED(1418928495,32,FLEN)
NAN_BOXED(1415734722,32,FLEN)
NAN_BOXED(1054089225,32,FLEN)
NAN_BOXED(1422989785,32,FLEN)
NAN_BOXED(1415734722,32,FLEN)
NAN_BOXED(1054089225,32,FLEN)
NAN_BOXED(1422989785,32,FLEN)
NAN_BOXED(1415734722,32,FLEN)
NAN_BOXED(1054089225,32,FLEN)
NAN_BOXED(1422989785,32,FLEN)
NAN_BOXED(1415734722,32,FLEN)
NAN_BOXED(1054089225,32,FLEN)
NAN_BOXED(1422989785,32,FLEN)
NAN_BOXED(1415734722,32,FLEN)
NAN_BOXED(1054089225,32,FLEN)
NAN_BOXED(1422989785,32,FLEN)
NAN_BOXED(1420282914,32,FLEN)
NAN_BOXED(1032672996,32,FLEN)
NAN_BOXED(1425304436,32,FLEN)
NAN_BOXED(1420282914,32,FLEN)
NAN_BOXED(1032672996,32,FLEN)
NAN_BOXED(1425304436,32,FLEN)
NAN_BOXED(1420282914,32,FLEN)
NAN_BOXED(1032672996,32,FLEN)
NAN_BOXED(1425304436,32,FLEN)
NAN_BOXED(1420282914,32,FLEN)
NAN_BOXED(1032672996,32,FLEN)
NAN_BOXED(1425304436,32,FLEN)
NAN_BOXED(1420282914,32,FLEN)
NAN_BOXED(1032672996,32,FLEN)
NAN_BOXED(1425304436,32,FLEN)
NAN_BOXED(1421500296,32,FLEN)
NAN_BOXED(1053960149,32,FLEN)
NAN_BOXED(1421049937,32,FLEN)
NAN_BOXED(1421500296,32,FLEN)
NAN_BOXED(1053960149,32,FLEN)
NAN_BOXED(1421049937,32,FLEN)
NAN_BOXED(1421500296,32,FLEN)
NAN_BOXED(1053960149,32,FLEN)
NAN_BOXED(1421049937,32,FLEN)
NAN_BOXED(1421500296,32,FLEN)
NAN_BOXED(1053960149,32,FLEN)
NAN_BOXED(1421049937,32,FLEN)
NAN_BOXED(1421500296,32,FLEN)
NAN_BOXED(1053960149,32,FLEN)
NAN_BOXED(1421049937,32,FLEN)
NAN_BOXED(1409879885,32,FLEN)
NAN_BOXED(1060353743,32,FLEN)
NAN_BOXED(1422910519,32,FLEN)
NAN_BOXED(1409879885,32,FLEN)
NAN_BOXED(1060353743,32,FLEN)
NAN_BOXED(1422910519,32,FLEN)
NAN_BOXED(1409879885,32,FLEN)
NAN_BOXED(1060353743,32,FLEN)
NAN_BOXED(1422910519,32,FLEN)
NAN_BOXED(1409879885,32,FLEN)
NAN_BOXED(1060353743,32,FLEN)
NAN_BOXED(1422910519,32,FLEN)
NAN_BOXED(1409879885,32,FLEN)
NAN_BOXED(1060353743,32,FLEN)
NAN_BOXED(1422910519,32,FLEN)
NAN_BOXED(1413728929,32,FLEN)
NAN_BOXED(1074892881,32,FLEN)
NAN_BOXED(1401249491,32,FLEN)
NAN_BOXED(1413728929,32,FLEN)
NAN_BOXED(1074892881,32,FLEN)
NAN_BOXED(1401249491,32,FLEN)
NAN_BOXED(1413728929,32,FLEN)
NAN_BOXED(1074892881,32,FLEN)
NAN_BOXED(1401249491,32,FLEN)
NAN_BOXED(1413728929,32,FLEN)
NAN_BOXED(1074892881,32,FLEN)
NAN_BOXED(1401249491,32,FLEN)
NAN_BOXED(1413728929,32,FLEN)
NAN_BOXED(1074892881,32,FLEN)
NAN_BOXED(1401249491,32,FLEN)
NAN_BOXED(1392969144,32,FLEN)
NAN_BOXED(1095341429,32,FLEN)
NAN_BOXED(1403874670,32,FLEN)
NAN_BOXED(1392969144,32,FLEN)
NAN_BOXED(1095341429,32,FLEN)
NAN_BOXED(1403874670,32,FLEN)
NAN_BOXED(1392969144,32,FLEN)
NAN_BOXED(1095341429,32,FLEN)
NAN_BOXED(1403874670,32,FLEN)
NAN_BOXED(1392969144,32,FLEN)
NAN_BOXED(1095341429,32,FLEN)
NAN_BOXED(1403874670,32,FLEN)
NAN_BOXED(1392969144,32,FLEN)
NAN_BOXED(1095341429,32,FLEN)
NAN_BOXED(1403874670,32,FLEN)
NAN_BOXED(1409708662,32,FLEN)
NAN_BOXED(1067318222,32,FLEN)
NAN_BOXED(1420625807,32,FLEN)
NAN_BOXED(1409708662,32,FLEN)
NAN_BOXED(1067318222,32,FLEN)
NAN_BOXED(1420625807,32,FLEN)
NAN_BOXED(1409708662,32,FLEN)
NAN_BOXED(1067318222,32,FLEN)
NAN_BOXED(1420625807,32,FLEN)
NAN_BOXED(1409708662,32,FLEN)
NAN_BOXED(1067318222,32,FLEN)
NAN_BOXED(1420625807,32,FLEN)
NAN_BOXED(1409708662,32,FLEN)
NAN_BOXED(1067318222,32,FLEN)
NAN_BOXED(1420625807,32,FLEN)
NAN_BOXED(1410478038,32,FLEN)
NAN_BOXED(1079110048,32,FLEN)
NAN_BOXED(1392646294,32,FLEN)
NAN_BOXED(1410478038,32,FLEN)
NAN_BOXED(1079110048,32,FLEN)
NAN_BOXED(1392646294,32,FLEN)
NAN_BOXED(1410478038,32,FLEN)
NAN_BOXED(1079110048,32,FLEN)
NAN_BOXED(1392646294,32,FLEN)
NAN_BOXED(1410478038,32,FLEN)
NAN_BOXED(1079110048,32,FLEN)
NAN_BOXED(1392646294,32,FLEN)
NAN_BOXED(1410478038,32,FLEN)
NAN_BOXED(1079110048,32,FLEN)
NAN_BOXED(1392646294,32,FLEN)
NAN_BOXED(1047650719,32,FLEN)
NAN_BOXED(3220172528,32,FLEN)
NAN_BOXED(1055044454,32,FLEN)
NAN_BOXED(1047650719,32,FLEN)
NAN_BOXED(3220172528,32,FLEN)
NAN_BOXED(1055044454,32,FLEN)
NAN_BOXED(1047650719,32,FLEN)
NAN_BOXED(3220172528,32,FLEN)
NAN_BOXED(1055044454,32,FLEN)
NAN_BOXED(1047650719,32,FLEN)
NAN_BOXED(3220172528,32,FLEN)
NAN_BOXED(1055044454,32,FLEN)
NAN_BOXED(1047650719,32,FLEN)
NAN_BOXED(3220172528,32,FLEN)
NAN_BOXED(1055044454,32,FLEN)
NAN_BOXED(1064892307,32,FLEN)
NAN_BOXED(3212437357,32,FLEN)
NAN_BOXED(1064503776,32,FLEN)
NAN_BOXED(1064892307,32,FLEN)
NAN_BOXED(3212437357,32,FLEN)
NAN_BOXED(1064503776,32,FLEN)
NAN_BOXED(1064892307,32,FLEN)
NAN_BOXED(3212437357,32,FLEN)
NAN_BOXED(1064503776,32,FLEN)
NAN_BOXED(1064892307,32,FLEN)
NAN_BOXED(3212437357,32,FLEN)
NAN_BOXED(1064503776,32,FLEN)
NAN_BOXED(1064892307,32,FLEN)
NAN_BOXED(3212437357,32,FLEN)
NAN_BOXED(1064503776,32,FLEN)
NAN_BOXED(1063170194,32,FLEN)
NAN_BOXED(3208458183,32,FLEN)
NAN_BOXED(1059361260,32,FLEN)
NAN_BOXED(1063170194,32,FLEN)
NAN_BOXED(3208458183,32,FLEN)
NAN_BOXED(1059361260,32,FLEN)
NAN_BOXED(1063170194,32,FLEN)
NAN_BOXED(3208458183,32,FLEN)
NAN_BOXED(1059361260,32,FLEN)
NAN_BOXED(1063170194,32,FLEN)
NAN_BOXED(3208458183,32,FLEN)
NAN_BOXED(1059361260,32,FLEN)
NAN_BOXED(1063170194,32,FLEN)
NAN_BOXED(3208458183,32,FLEN)
NAN_BOXED(1059361260,32,FLEN)
NAN_BOXED(1041207570,32,FLEN)
NAN_BOXED(3199824249,32,FLEN)
NAN_BOXED(1028652788,32,FLEN)
NAN_BOXED(1041207570,32,FLEN)
NAN_BOXED(3199824249,32,FLEN)
NAN_BOXED(1028652788,32,FLEN)
NAN_BOXED(1041207570,32,FLEN)
NAN_BOXED(3199824249,32,FLEN)
NAN_BOXED(1028652788,32,FLEN)
NAN_BOXED(1041207570,32,FLEN)
NAN_BOXED(3199824249,32,FLEN)
NAN_BOXED(1028652788,32,FLEN)
NAN_BOXED(1041207570,32,FLEN)
NAN_BOXED(3199824249,32,FLEN)
NAN_BOXED(1028652788,32,FLEN)
NAN_BOXED(1053206453,32,FLEN)
NAN_BOXED(3221072105,32,FLEN)
NAN_BOXED(1061476049,32,FLEN)
NAN_BOXED(1053206453,32,FLEN)
NAN_BOXED(3221072105,32,FLEN)
NAN_BOXED(1061476049,32,FLEN)
NAN_BOXED(1053206453,32,FLEN)
NAN_BOXED(3221072105,32,FLEN)
NAN_BOXED(1061476049,32,FLEN)
NAN_BOXED(1053206453,32,FLEN)
NAN_BOXED(3221072105,32,FLEN)
NAN_BOXED(1061476049,32,FLEN)
NAN_BOXED(1053206453,32,FLEN)
NAN_BOXED(3221072105,32,FLEN)
NAN_BOXED(1061476049,32,FLEN)
NAN_BOXED(1058157413,32,FLEN)
NAN_BOXED(3213813537,32,FLEN)
NAN_BOXED(1059272964,32,FLEN)
NAN_BOXED(1058157413,32,FLEN)
NAN_BOXED(3213813537,32,FLEN)
NAN_BOXED(1059272964,32,FLEN)
NAN_BOXED(1058157413,32,FLEN)
NAN_BOXED(3213813537,32,FLEN)
NAN_BOXED(1059272964,32,FLEN)
NAN_BOXED(1058157413,32,FLEN)
NAN_BOXED(3213813537,32,FLEN)
NAN_BOXED(1059272964,32,FLEN)
NAN_BOXED(1058157413,32,FLEN)
NAN_BOXED(3213813537,32,FLEN)
NAN_BOXED(1059272964,32,FLEN)
NAN_BOXED(1059810492,32,FLEN)
NAN_BOXED(3216819609,32,FLEN)
NAN_BOXED(1065144408,32,FLEN)
NAN_BOXED(1059810492,32,FLEN)
NAN_BOXED(3216819609,32,FLEN)
NAN_BOXED(1065144408,32,FLEN)
NAN_BOXED(1059810492,32,FLEN)
NAN_BOXED(3216819609,32,FLEN)
NAN_BOXED(1065144408,32,FLEN)
NAN_BOXED(1059810492,32,FLEN)
NAN_BOXED(3216819609,32,FLEN)
NAN_BOXED(1065144408,32,FLEN)
NAN_BOXED(1059810492,32,FLEN)
NAN_BOXED(3216819609,32,FLEN)
NAN_BOXED(1065144408,32,FLEN)
NAN_BOXED(1054131961,32,FLEN)
NAN_BOXED(3201645465,32,FLEN)
NAN_BOXED(1043413782,32,FLEN)
NAN_BOXED(1054131961,32,FLEN)
NAN_BOXED(3201645465,32,FLEN)
NAN_BOXED(1043413782,32,FLEN)
NAN_BOXED(1054131961,32,FLEN)
NAN_BOXED(3201645465,32,FLEN)
NAN_BOXED(1043413782,32,FLEN)
NAN_BOXED(1054131961,32,FLEN)
NAN_BOXED(3201645465,32,FLEN)
NAN_BOXED(1043413782,32,FLEN)
NAN_BOXED(1054131961,32,FLEN)
NAN_BOXED(3201645465,32,FLEN)
NAN_BOXED(1043413782,32,FLEN)
NAN_BOXED(1049353350,32,FLEN)
NAN_BOXED(3226728005,32,FLEN)
NAN_BOXED(1063754397,32,FLEN)
NAN_BOXED(1049353350,32,FLEN)
NAN_BOXED(3226728005,32,FLEN)
NAN_BOXED(1063754397,32,FLEN)
NAN_BOXED(1049353350,32,FLEN)
NAN_BOXED(3226728005,32,FLEN)
NAN_BOXED(1063754397,32,FLEN)
NAN_BOXED(1049353350,32,FLEN)
NAN_BOXED(3226728005,32,FLEN)
NAN_BOXED(1063754397,32,FLEN)
NAN_BOXED(1049353350,32,FLEN)
NAN_BOXED(3226728005,32,FLEN)
NAN_BOXED(1063754397,32,FLEN)
NAN_BOXED(1055947496,32,FLEN)
NAN_BOXED(3219250680,32,FLEN)
NAN_BOXED(1062481033,32,FLEN)
NAN_BOXED(1055947496,32,FLEN)
NAN_BOXED(3219250680,32,FLEN)
NAN_BOXED(1062481033,32,FLEN)
NAN_BOXED(1055947496,32,FLEN)
NAN_BOXED(3219250680,32,FLEN)
NAN_BOXED(1062481033,32,FLEN)
NAN_BOXED(1055947496,32,FLEN)
NAN_BOXED(3219250680,32,FLEN)
NAN_BOXED(1062481033,32,FLEN)
NAN_BOXED(1055947496,32,FLEN)
NAN_BOXED(3219250680,32,FLEN)
NAN_BOXED(1062481033,32,FLEN)
NAN_BOXED(1049937157,32,FLEN)
NAN_BOXED(3220435978,32,FLEN)
NAN_BOXED(1057866966,32,FLEN)
NAN_BOXED(1049937157,32,FLEN)
NAN_BOXED(3220435978,32,FLEN)
NAN_BOXED(1057866966,32,FLEN)
NAN_BOXED(1049937157,32,FLEN)
NAN_BOXED(3220435978,32,FLEN)
NAN_BOXED(1057866966,32,FLEN)
NAN_BOXED(1049937157,32,FLEN)
NAN_BOXED(3220435978,32,FLEN)
NAN_BOXED(1057866966,32,FLEN)
NAN_BOXED(1049937157,32,FLEN)
NAN_BOXED(3220435978,32,FLEN)
NAN_BOXED(1057866966,32,FLEN)
NAN_BOXED(1031520263,32,FLEN)
NAN_BOXED(3226841730,32,FLEN)
NAN_BOXED(1045571153,32,FLEN)
NAN_BOXED(1031520263,32,FLEN)
NAN_BOXED(3226841730,32,FLEN)
NAN_BOXED(1045571153,32,FLEN)
NAN_BOXED(1031520263,32,FLEN)
NAN_BOXED(3226841730,32,FLEN)
NAN_BOXED(1045571153,32,FLEN)
NAN_BOXED(1031520263,32,FLEN)
NAN_BOXED(3226841730,32,FLEN)
NAN_BOXED(1045571153,32,FLEN)
NAN_BOXED(1031520263,32,FLEN)
NAN_BOXED(3226841730,32,FLEN)
NAN_BOXED(1045571153,32,FLEN)
NAN_BOXED(1063370101,32,FLEN)
NAN_BOXED(3209053092,32,FLEN)
NAN_BOXED(1060033582,32,FLEN)
NAN_BOXED(1063370101,32,FLEN)
NAN_BOXED(3209053092,32,FLEN)
NAN_BOXED(1060033582,32,FLEN)
NAN_BOXED(1063370101,32,FLEN)
NAN_BOXED(3209053092,32,FLEN)
NAN_BOXED(1060033582,32,FLEN)
NAN_BOXED(1063370101,32,FLEN)
NAN_BOXED(3209053092,32,FLEN)
NAN_BOXED(1060033582,32,FLEN)
NAN_BOXED(1063370101,32,FLEN)
NAN_BOXED(3209053092,32,FLEN)
NAN_BOXED(1060033582,32,FLEN)
NAN_BOXED(1034819813,32,FLEN)
NAN_BOXED(3234522635,32,FLEN)
NAN_BOXED(1057618967,32,FLEN)
NAN_BOXED(1034819813,32,FLEN)
NAN_BOXED(3234522635,32,FLEN)
NAN_BOXED(1057618967,32,FLEN)
NAN_BOXED(1034819813,32,FLEN)
NAN_BOXED(3234522635,32,FLEN)
NAN_BOXED(1057618967,32,FLEN)
NAN_BOXED(1034819813,32,FLEN)
NAN_BOXED(3234522635,32,FLEN)
NAN_BOXED(1057618967,32,FLEN)
NAN_BOXED(1034819813,32,FLEN)
NAN_BOXED(3234522635,32,FLEN)
NAN_BOXED(1057618967,32,FLEN)
NAN_BOXED(1058069312,32,FLEN)
NAN_BOXED(3212621303,32,FLEN)
NAN_BOXED(1057947338,32,FLEN)
NAN_BOXED(1058069312,32,FLEN)
NAN_BOXED(3212621303,32,FLEN)
NAN_BOXED(1057947338,32,FLEN)
NAN_BOXED(1058069312,32,FLEN)
NAN_BOXED(3212621303,32,FLEN)
NAN_BOXED(1057947338,32,FLEN)
NAN_BOXED(1058069312,32,FLEN)
NAN_BOXED(3212621303,32,FLEN)
NAN_BOXED(1057947338,32,FLEN)
NAN_BOXED(1058069312,32,FLEN)
NAN_BOXED(3212621303,32,FLEN)
NAN_BOXED(1057947338,32,FLEN)
NAN_BOXED(1047401531,32,FLEN)
NAN_BOXED(3196864808,32,FLEN)
NAN_BOXED(1031960345,32,FLEN)
NAN_BOXED(1047401531,32,FLEN)
NAN_BOXED(3196864808,32,FLEN)
NAN_BOXED(1031960345,32,FLEN)
NAN_BOXED(1047401531,32,FLEN)
NAN_BOXED(3196864808,32,FLEN)
NAN_BOXED(1031960345,32,FLEN)
NAN_BOXED(1047401531,32,FLEN)
NAN_BOXED(3196864808,32,FLEN)
NAN_BOXED(1031960345,32,FLEN)
NAN_BOXED(1047401531,32,FLEN)
NAN_BOXED(3196864808,32,FLEN)
NAN_BOXED(1031960345,32,FLEN)
NAN_BOXED(1055870694,32,FLEN)
NAN_BOXED(3179604725,32,FLEN)
NAN_BOXED(1022918822,32,FLEN)
NAN_BOXED(1055870694,32,FLEN)
NAN_BOXED(3179604725,32,FLEN)
NAN_BOXED(1022918822,32,FLEN)
NAN_BOXED(1055870694,32,FLEN)
NAN_BOXED(3179604725,32,FLEN)
NAN_BOXED(1022918822,32,FLEN)
NAN_BOXED(1055870694,32,FLEN)
NAN_BOXED(3179604725,32,FLEN)
NAN_BOXED(1022918822,32,FLEN)
NAN_BOXED(1055870694,32,FLEN)
NAN_BOXED(3179604725,32,FLEN)
NAN_BOXED(1022918822,32,FLEN)
NAN_BOXED(1053742862,32,FLEN)
NAN_BOXED(3222143976,32,FLEN)
NAN_BOXED(1063615716,32,FLEN)
NAN_BOXED(1053742862,32,FLEN)
NAN_BOXED(3222143976,32,FLEN)
NAN_BOXED(1063615716,32,FLEN)
NAN_BOXED(1053742862,32,FLEN)
NAN_BOXED(3222143976,32,FLEN)
NAN_BOXED(1063615716,32,FLEN)
NAN_BOXED(1053742862,32,FLEN)
NAN_BOXED(3222143976,32,FLEN)
NAN_BOXED(1063615716,32,FLEN)
NAN_BOXED(1053742862,32,FLEN)
NAN_BOXED(3222143976,32,FLEN)
NAN_BOXED(1063615716,32,FLEN)
NAN_BOXED(1044263660,32,FLEN)
NAN_BOXED(3225946359,32,FLEN)
NAN_BOXED(1058315890,32,FLEN)
NAN_BOXED(1044263660,32,FLEN)
NAN_BOXED(3225946359,32,FLEN)
NAN_BOXED(1058315890,32,FLEN)
NAN_BOXED(1044263660,32,FLEN)
NAN_BOXED(3225946359,32,FLEN)
NAN_BOXED(1058315890,32,FLEN)
NAN_BOXED(1044263660,32,FLEN)
NAN_BOXED(3225946359,32,FLEN)
NAN_BOXED(1058315890,32,FLEN)
NAN_BOXED(1044263660,32,FLEN)
NAN_BOXED(3225946359,32,FLEN)
NAN_BOXED(1058315890,32,FLEN)
NAN_BOXED(1064475578,32,FLEN)
NAN_BOXED(3166574082,32,FLEN)
NAN_BOXED(1018438767,32,FLEN)
NAN_BOXED(1064475578,32,FLEN)
NAN_BOXED(3166574082,32,FLEN)
NAN_BOXED(1018438767,32,FLEN)
NAN_BOXED(1064475578,32,FLEN)
NAN_BOXED(3166574082,32,FLEN)
NAN_BOXED(1018438767,32,FLEN)
NAN_BOXED(1064475578,32,FLEN)
NAN_BOXED(3166574082,32,FLEN)
NAN_BOXED(1018438767,32,FLEN)
NAN_BOXED(1064475578,32,FLEN)
NAN_BOXED(3166574082,32,FLEN)
NAN_BOXED(1018438767,32,FLEN)
NAN_BOXED(1064801738,32,FLEN)
NAN_BOXED(3202347292,32,FLEN)
NAN_BOXED(1054381227,32,FLEN)
NAN_BOXED(1064801738,32,FLEN)
NAN_BOXED(3202347292,32,FLEN)
NAN_BOXED(1054381227,32,FLEN)
NAN_BOXED(1064801738,32,FLEN)
NAN_BOXED(3202347292,32,FLEN)
NAN_BOXED(1054381227,32,FLEN)
NAN_BOXED(1064801738,32,FLEN)
NAN_BOXED(3202347292,32,FLEN)
NAN_BOXED(1054381227,32,FLEN)
NAN_BOXED(1064801738,32,FLEN)
NAN_BOXED(3202347292,32,FLEN)
NAN_BOXED(1054381227,32,FLEN)
NAN_BOXED(1057266693,32,FLEN)
NAN_BOXED(3194596921,32,FLEN)
NAN_BOXED(1039276161,32,FLEN)
NAN_BOXED(1057266693,32,FLEN)
NAN_BOXED(3194596921,32,FLEN)
NAN_BOXED(1039276161,32,FLEN)
NAN_BOXED(1057266693,32,FLEN)
NAN_BOXED(3194596921,32,FLEN)
NAN_BOXED(1039276161,32,FLEN)
NAN_BOXED(1057266693,32,FLEN)
NAN_BOXED(3194596921,32,FLEN)
NAN_BOXED(1039276161,32,FLEN)
NAN_BOXED(1057266693,32,FLEN)
NAN_BOXED(3194596921,32,FLEN)
NAN_BOXED(1039276161,32,FLEN)
NAN_BOXED(1058764503,32,FLEN)
NAN_BOXED(3215283183,32,FLEN)
NAN_BOXED(1061735716,32,FLEN)
NAN_BOXED(1058764503,32,FLEN)
NAN_BOXED(3215283183,32,FLEN)
NAN_BOXED(1061735716,32,FLEN)
NAN_BOXED(1058764503,32,FLEN)
NAN_BOXED(3215283183,32,FLEN)
NAN_BOXED(1061735716,32,FLEN)
NAN_BOXED(1058764503,32,FLEN)
NAN_BOXED(3215283183,32,FLEN)
NAN_BOXED(1061735716,32,FLEN)
NAN_BOXED(1058764503,32,FLEN)
NAN_BOXED(3215283183,32,FLEN)
NAN_BOXED(1061735716,32,FLEN)
NAN_BOXED(1060705176,32,FLEN)
NAN_BOXED(3213717412,32,FLEN)
NAN_BOXED(1061978371,32,FLEN)
NAN_BOXED(1060705176,32,FLEN)
NAN_BOXED(3213717412,32,FLEN)
NAN_BOXED(1061978371,32,FLEN)
NAN_BOXED(1060705176,32,FLEN)
NAN_BOXED(3213717412,32,FLEN)
NAN_BOXED(1061978371,32,FLEN)
NAN_BOXED(1060705176,32,FLEN)
NAN_BOXED(3213717412,32,FLEN)
NAN_BOXED(1061978371,32,FLEN)
NAN_BOXED(1060705176,32,FLEN)
NAN_BOXED(3213717412,32,FLEN)
NAN_BOXED(1061978371,32,FLEN)
NAN_BOXED(1054869719,32,FLEN)
NAN_BOXED(3216775418,32,FLEN)
NAN_BOXED(1059363930,32,FLEN)
NAN_BOXED(1054869719,32,FLEN)
NAN_BOXED(3216775418,32,FLEN)
NAN_BOXED(1059363930,32,FLEN)
NAN_BOXED(1054869719,32,FLEN)
NAN_BOXED(3216775418,32,FLEN)
NAN_BOXED(1059363930,32,FLEN)
NAN_BOXED(1054869719,32,FLEN)
NAN_BOXED(3216775418,32,FLEN)
NAN_BOXED(1059363930,32,FLEN)
NAN_BOXED(1054869719,32,FLEN)
NAN_BOXED(3216775418,32,FLEN)
NAN_BOXED(1059363930,32,FLEN)
NAN_BOXED(1048503513,32,FLEN)
NAN_BOXED(3225616621,32,FLEN)
NAN_BOXED(1061300541,32,FLEN)
NAN_BOXED(1048503513,32,FLEN)
NAN_BOXED(3225616621,32,FLEN)
NAN_BOXED(1061300541,32,FLEN)
NAN_BOXED(1048503513,32,FLEN)
NAN_BOXED(3225616621,32,FLEN)
NAN_BOXED(1061300541,32,FLEN)
NAN_BOXED(1048503513,32,FLEN)
NAN_BOXED(3225616621,32,FLEN)
NAN_BOXED(1061300541,32,FLEN)
NAN_BOXED(1048503513,32,FLEN)
NAN_BOXED(3225616621,32,FLEN)
NAN_BOXED(1061300541,32,FLEN)
NAN_BOXED(1059451479,32,FLEN)
NAN_BOXED(3214176647,32,FLEN)
NAN_BOXED(1061188453,32,FLEN)
NAN_BOXED(1059451479,32,FLEN)
NAN_BOXED(3214176647,32,FLEN)
NAN_BOXED(1061188453,32,FLEN)
NAN_BOXED(1059451479,32,FLEN)
NAN_BOXED(3214176647,32,FLEN)
NAN_BOXED(1061188453,32,FLEN)
NAN_BOXED(1059451479,32,FLEN)
NAN_BOXED(3214176647,32,FLEN)
NAN_BOXED(1061188453,32,FLEN)
NAN_BOXED(1059451479,32,FLEN)
NAN_BOXED(3214176647,32,FLEN)
NAN_BOXED(1061188453,32,FLEN)
NAN_BOXED(1016070833,32,FLEN)
NAN_BOXED(3239145233,32,FLEN)
NAN_BOXED(1042522115,32,FLEN)
NAN_BOXED(1016070833,32,FLEN)
NAN_BOXED(3239145233,32,FLEN)
NAN_BOXED(1042522115,32,FLEN)
NAN_BOXED(1016070833,32,FLEN)
NAN_BOXED(3239145233,32,FLEN)
NAN_BOXED(1042522115,32,FLEN)
NAN_BOXED(1016070833,32,FLEN)
NAN_BOXED(3239145233,32,FLEN)
NAN_BOXED(1042522115,32,FLEN)
NAN_BOXED(1016070833,32,FLEN)
NAN_BOXED(3239145233,32,FLEN)
NAN_BOXED(1042522115,32,FLEN)
NAN_BOXED(1041876241,32,FLEN)
NAN_BOXED(3223502255,32,FLEN)
NAN_BOXED(1053000010,32,FLEN)
NAN_BOXED(1041876241,32,FLEN)
NAN_BOXED(3223502255,32,FLEN)
NAN_BOXED(1053000010,32,FLEN)
NAN_BOXED(1041876241,32,FLEN)
NAN_BOXED(3223502255,32,FLEN)
NAN_BOXED(1053000010,32,FLEN)
NAN_BOXED(1041876241,32,FLEN)
NAN_BOXED(3223502255,32,FLEN)
NAN_BOXED(1053000010,32,FLEN)
NAN_BOXED(1041876241,32,FLEN)
NAN_BOXED(3223502255,32,FLEN)
NAN_BOXED(1053000010,32,FLEN)
NAN_BOXED(1058627945,32,FLEN)
NAN_BOXED(3216446372,32,FLEN)
NAN_BOXED(1062953165,32,FLEN)
NAN_BOXED(1058627945,32,FLEN)
NAN_BOXED(3216446372,32,FLEN)
NAN_BOXED(1062953165,32,FLEN)
NAN_BOXED(1058627945,32,FLEN)
NAN_BOXED(3216446372,32,FLEN)
NAN_BOXED(1062953165,32,FLEN)
NAN_BOXED(1058627945,32,FLEN)
NAN_BOXED(3216446372,32,FLEN)
NAN_BOXED(1062953165,32,FLEN)
NAN_BOXED(1058627945,32,FLEN)
NAN_BOXED(3216446372,32,FLEN)
NAN_BOXED(1062953165,32,FLEN)
NAN_BOXED(1043094614,32,FLEN)
NAN_BOXED(3225542475,32,FLEN)
NAN_BOXED(1057130484,32,FLEN)
NAN_BOXED(1043094614,32,FLEN)
NAN_BOXED(3225542475,32,FLEN)
NAN_BOXED(1057130484,32,FLEN)
NAN_BOXED(1043094614,32,FLEN)
NAN_BOXED(3225542475,32,FLEN)
NAN_BOXED(1057130484,32,FLEN)
NAN_BOXED(1043094614,32,FLEN)
NAN_BOXED(3225542475,32,FLEN)
NAN_BOXED(1057130484,32,FLEN)
NAN_BOXED(1043094614,32,FLEN)
NAN_BOXED(3225542475,32,FLEN)
NAN_BOXED(1057130484,32,FLEN)
NAN_BOXED(1064719976,32,FLEN)
NAN_BOXED(3210538682,32,FLEN)
NAN_BOXED(1062508537,32,FLEN)
NAN_BOXED(1064719976,32,FLEN)
NAN_BOXED(3210538682,32,FLEN)
NAN_BOXED(1062508537,32,FLEN)
NAN_BOXED(1064719976,32,FLEN)
NAN_BOXED(3210538682,32,FLEN)
NAN_BOXED(1062508537,32,FLEN)
NAN_BOXED(1064719976,32,FLEN)
NAN_BOXED(3210538682,32,FLEN)
NAN_BOXED(1062508537,32,FLEN)
NAN_BOXED(1064719976,32,FLEN)
NAN_BOXED(3210538682,32,FLEN)
NAN_BOXED(1062508537,32,FLEN)
NAN_BOXED(1063696968,32,FLEN)
NAN_BOXED(3198181306,32,FLEN)
NAN_BOXED(1049660084,32,FLEN)
NAN_BOXED(1063696968,32,FLEN)
NAN_BOXED(3198181306,32,FLEN)
NAN_BOXED(1049660084,32,FLEN)
NAN_BOXED(1063696968,32,FLEN)
NAN_BOXED(3198181306,32,FLEN)
NAN_BOXED(1049660084,32,FLEN)
NAN_BOXED(1063696968,32,FLEN)
NAN_BOXED(3198181306,32,FLEN)
NAN_BOXED(1049660084,32,FLEN)
NAN_BOXED(1063696968,32,FLEN)
NAN_BOXED(3198181306,32,FLEN)
NAN_BOXED(1049660084,32,FLEN)
NAN_BOXED(1036807563,32,FLEN)
NAN_BOXED(3238025131,32,FLEN)
NAN_BOXED(1062009231,32,FLEN)
NAN_BOXED(1036807563,32,FLEN)
NAN_BOXED(3238025131,32,FLEN)
NAN_BOXED(1062009231,32,FLEN)
NAN_BOXED(1036807563,32,FLEN)
NAN_BOXED(3238025131,32,FLEN)
NAN_BOXED(1062009231,32,FLEN)
NAN_BOXED(1036807563,32,FLEN)
NAN_BOXED(3238025131,32,FLEN)
NAN_BOXED(1062009231,32,FLEN)
NAN_BOXED(1036807563,32,FLEN)
NAN_BOXED(3238025131,32,FLEN)
NAN_BOXED(1062009231,32,FLEN)
NAN_BOXED(1045419414,32,FLEN)
NAN_BOXED(3226805385,32,FLEN)
NAN_BOXED(1059916383,32,FLEN)
NAN_BOXED(1045419414,32,FLEN)
NAN_BOXED(3226805385,32,FLEN)
NAN_BOXED(1059916383,32,FLEN)
NAN_BOXED(1045419414,32,FLEN)
NAN_BOXED(3226805385,32,FLEN)
NAN_BOXED(1059916383,32,FLEN)
NAN_BOXED(1045419414,32,FLEN)
NAN_BOXED(3226805385,32,FLEN)
NAN_BOXED(1059916383,32,FLEN)
NAN_BOXED(1045419414,32,FLEN)
NAN_BOXED(3226805385,32,FLEN)
NAN_BOXED(1059916383,32,FLEN)
NAN_BOXED(1050827383,32,FLEN)
NAN_BOXED(3202155438,32,FLEN)
NAN_BOXED(1040984686,32,FLEN)
NAN_BOXED(1050827383,32,FLEN)
NAN_BOXED(3202155438,32,FLEN)
NAN_BOXED(1040984686,32,FLEN)
NAN_BOXED(1050827383,32,FLEN)
NAN_BOXED(3202155438,32,FLEN)
NAN_BOXED(1040984686,32,FLEN)
NAN_BOXED(1050827383,32,FLEN)
NAN_BOXED(3202155438,32,FLEN)
NAN_BOXED(1040984686,32,FLEN)
NAN_BOXED(1050827383,32,FLEN)
NAN_BOXED(3202155438,32,FLEN)
NAN_BOXED(1040984686,32,FLEN)
NAN_BOXED(1052833943,32,FLEN)
NAN_BOXED(3204945969,32,FLEN)
NAN_BOXED(1045195682,32,FLEN)
NAN_BOXED(1052833943,32,FLEN)
NAN_BOXED(3204945969,32,FLEN)
NAN_BOXED(1045195682,32,FLEN)
NAN_BOXED(1052833943,32,FLEN)
NAN_BOXED(3204945969,32,FLEN)
NAN_BOXED(1045195682,32,FLEN)
NAN_BOXED(1052833943,32,FLEN)
NAN_BOXED(3204945969,32,FLEN)
NAN_BOXED(1045195682,32,FLEN)
NAN_BOXED(1052833943,32,FLEN)
NAN_BOXED(3204945969,32,FLEN)
NAN_BOXED(1045195682,32,FLEN)
NAN_BOXED(1059037678,32,FLEN)
NAN_BOXED(3217765292,32,FLEN)
NAN_BOXED(1065184065,32,FLEN)
NAN_BOXED(1059037678,32,FLEN)
NAN_BOXED(3217765292,32,FLEN)
NAN_BOXED(1065184065,32,FLEN)
NAN_BOXED(1059037678,32,FLEN)
NAN_BOXED(3217765292,32,FLEN)
NAN_BOXED(1065184065,32,FLEN)
NAN_BOXED(1059037678,32,FLEN)
NAN_BOXED(3217765292,32,FLEN)
NAN_BOXED(1065184065,32,FLEN)
NAN_BOXED(1059037678,32,FLEN)
NAN_BOXED(3217765292,32,FLEN)
NAN_BOXED(1065184065,32,FLEN)
NAN_BOXED(1056570553,32,FLEN)
NAN_BOXED(3210262053,32,FLEN)
NAN_BOXED(1054056218,32,FLEN)
NAN_BOXED(1056570553,32,FLEN)
NAN_BOXED(3210262053,32,FLEN)
NAN_BOXED(1054056218,32,FLEN)
NAN_BOXED(1056570553,32,FLEN)
NAN_BOXED(3210262053,32,FLEN)
NAN_BOXED(1054056218,32,FLEN)
NAN_BOXED(1056570553,32,FLEN)
NAN_BOXED(3210262053,32,FLEN)
NAN_BOXED(1054056218,32,FLEN)
NAN_BOXED(1056570553,32,FLEN)
NAN_BOXED(3210262053,32,FLEN)
NAN_BOXED(1054056218,32,FLEN)
NAN_BOXED(1062253800,32,FLEN)
NAN_BOXED(3208631456,32,FLEN)
NAN_BOXED(1058825297,32,FLEN)
NAN_BOXED(1062253800,32,FLEN)
NAN_BOXED(3208631456,32,FLEN)
NAN_BOXED(1058825297,32,FLEN)
NAN_BOXED(1062253800,32,FLEN)
NAN_BOXED(3208631456,32,FLEN)
NAN_BOXED(1058825297,32,FLEN)
NAN_BOXED(1062253800,32,FLEN)
NAN_BOXED(3208631456,32,FLEN)
NAN_BOXED(1058825297,32,FLEN)
NAN_BOXED(1062253800,32,FLEN)
NAN_BOXED(3208631456,32,FLEN)
NAN_BOXED(1058825297,32,FLEN)
NAN_BOXED(1060030740,32,FLEN)
NAN_BOXED(3216402314,32,FLEN)
NAN_BOXED(1064899403,32,FLEN)
NAN_BOXED(1060030740,32,FLEN)
NAN_BOXED(3216402314,32,FLEN)
NAN_BOXED(1064899403,32,FLEN)
NAN_BOXED(1060030740,32,FLEN)
NAN_BOXED(3216402314,32,FLEN)
NAN_BOXED(1064899403,32,FLEN)
NAN_BOXED(1060030740,32,FLEN)
NAN_BOXED(3216402314,32,FLEN)
NAN_BOXED(1064899403,32,FLEN)
NAN_BOXED(1060030740,32,FLEN)
NAN_BOXED(3216402314,32,FLEN)
NAN_BOXED(1064899403,32,FLEN)
NAN_BOXED(1060117426,32,FLEN)
NAN_BOXED(3211111167,32,FLEN)
NAN_BOXED(1058930280,32,FLEN)
NAN_BOXED(1060117426,32,FLEN)
NAN_BOXED(3211111167,32,FLEN)
NAN_BOXED(1058930280,32,FLEN)
NAN_BOXED(1060117426,32,FLEN)
NAN_BOXED(3211111167,32,FLEN)
NAN_BOXED(1058930280,32,FLEN)
NAN_BOXED(1060117426,32,FLEN)
NAN_BOXED(3211111167,32,FLEN)
NAN_BOXED(1058930280,32,FLEN)
NAN_BOXED(1060117426,32,FLEN)
NAN_BOXED(3211111167,32,FLEN)
NAN_BOXED(1058930280,32,FLEN)
NAN_BOXED(1052840711,32,FLEN)
NAN_BOXED(3207547621,32,FLEN)
NAN_BOXED(1048851582,32,FLEN)
NAN_BOXED(1052840711,32,FLEN)
NAN_BOXED(3207547621,32,FLEN)
NAN_BOXED(1048851582,32,FLEN)
NAN_BOXED(1045543111,32,FLEN)
NAN_BOXED(3197099689,32,FLEN)
NAN_BOXED(1030469952,32,FLEN)
NAN_BOXED(1045543111,32,FLEN)
NAN_BOXED(3197099689,32,FLEN)
NAN_BOXED(1030469952,32,FLEN)
NAN_BOXED(1045543111,32,FLEN)
NAN_BOXED(3197099689,32,FLEN)
NAN_BOXED(1030469952,32,FLEN)
NAN_BOXED(1045543111,32,FLEN)
NAN_BOXED(3197099689,32,FLEN)
NAN_BOXED(1030469952,32,FLEN)
NAN_BOXED(1048914947,32,FLEN)
NAN_BOXED(3197691518,32,FLEN)
NAN_BOXED(1033835538,32,FLEN)
NAN_BOXED(1048914947,32,FLEN)
NAN_BOXED(3197691518,32,FLEN)
NAN_BOXED(1033835538,32,FLEN)
NAN_BOXED(1036711086,32,FLEN)
NAN_BOXED(3238997284,32,FLEN)
NAN_BOXED(1063453935,32,FLEN)
NAN_BOXED(1057483543,32,FLEN)
NAN_BOXED(3216352261,32,FLEN)
NAN_BOXED(1061216410,32,FLEN)
NAN_BOXED(1057483543,32,FLEN)
NAN_BOXED(3216352261,32,FLEN)
NAN_BOXED(1061216410,32,FLEN)
NAN_BOXED(1055496237,32,FLEN)
NAN_BOXED(3211727047,32,FLEN)
NAN_BOXED(1054483553,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_12:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_13:
    .fill 8*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
