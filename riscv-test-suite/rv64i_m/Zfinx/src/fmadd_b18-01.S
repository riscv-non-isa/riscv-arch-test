
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 04:35:29 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fmadd_b18 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fmadd_b18)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x30, rs2==x29, rs3==x28, rd==x31,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f222105; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==x31, rs2==x31, rs3==x31, rd==x30,fs1 == 0 and fe1 == 0xfe and fm1 == 0x1186f9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x31; op3:x31; dest:x30; op1val:0x7f1186f9; op2val:0x7f1186f9;
op3val:0x7f1186f9; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x30, x31, x31, x31, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x28, rs2==x30, rs3==x29, rd==x29,fs1 == 0 and fe1 == 0xfd and fm1 == 0x217fdd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x28; op2:x30; op3:x29; dest:x29; op1val:0x7ea17fdd; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x29, x28, x30, x29, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==x27, rs2==x28, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0xfc and fm1 == 0x46d91a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x27; op2:x28; op3:x27; dest:x27; op1val:0x7e46d91a; op2val:0x0;
op3val:0x7e46d91a; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x27, x27, x28, x27, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x26, rs2==x27, rs3==x30, rd==x26,fs1 == 0 and fe1 == 0xfd and fm1 == 0x445459 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x26; op2:x27; op3:x30; dest:x26; op1val:0x7ec45459; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x26, x26, x27, x30, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x29, rs2==x26, rs3==x26, rd==x28,fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7ea4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x29; op2:x26; op3:x26; dest:x28; op1val:0x7e9b7ea4; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x28, x29, x26, x26, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==x24, rs2==x25, rs3==x25, rd==x25,fs1 == 0 and fe1 == 0xfe and fm1 == 0x167d44 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x24; op2:x25; op3:x25; dest:x25; op1val:0x7f167d44; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x25, x24, x25, x25, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x25, rs2==x24, rs3==x23, rd==x24,fs1 == 0 and fe1 == 0xfc and fm1 == 0x68f1b4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x25; op2:x24; op3:x23; dest:x24; op1val:0x7e68f1b4; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x24, x25, x24, x23, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rd != rs3, rs1==x23, rs2==x23, rs3==x24, rd==x23,fs1 == 0 and fe1 == 0xfd and fm1 == 0x370362 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x23; op2:x23; op3:x24; dest:x23; op1val:0x7eb70362; op2val:0x7eb70362;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x23, x23, x23, x24, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x21, rs2==x20, rs3==x21, rd==x22,fs1 == 0 and fe1 == 0xfd and fm1 == 0x6004c9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x21; op2:x20; op3:x21; dest:x22; op1val:0x7ee004c9; op2val:0x80000000;
op3val:0x7ee004c9; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x22, x21, x20, x21, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e5b90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0x7f2e5b90; op2val:0x7f2e5b90;
op3val:0x7f2e5b90; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x19, x19, x19, x19, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x22, rs2==x22, rs3==x20, rd==x21,fs1 == 0 and fe1 == 0xfd and fm1 == 0x41ccbc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x22; op2:x22; op3:x20; dest:x21; op1val:0x7ec1ccbc; op2val:0x7ec1ccbc;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x21, x22, x22, x20, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x18, rs2==x21, rs3==x22, rd==x20,fs1 == 0 and fe1 == 0xfc and fm1 == 0x587392 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x18; op2:x21; op3:x22; dest:x20; op1val:0x7e587392; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x20, x18, x21, x22, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x20, rs2==x17, rs3==x16, rd==x18,fs1 == 0 and fe1 == 0xfe and fm1 == 0x111d49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x20; op2:x17; op3:x16; dest:x18; op1val:0x7f111d49; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x18, x20, x17, x16, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x18, rs3==x15, rd==x17,fs1 == 0 and fe1 == 0xfd and fm1 == 0x6d7424 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x16; op2:x18; op3:x15; dest:x17; op1val:0x7eed7424; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x17, x16, x18, x15, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x17, rs2==x15, rs3==x18, rd==x16,fs1 == 0 and fe1 == 0xfc and fm1 == 0x40638c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x17; op2:x15; op3:x18; dest:x16; op1val:0x7e40638c; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x16, x17, x15, x18, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rs3==x17, rd==x15,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2eabd8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x14; op2:x16; op3:x17; dest:x15; op1val:0x7f2eabd8; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x15, x14, x16, x17, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x15, rs2==x13, rs3==x12, rd==x14,fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cb1de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x15; op2:x13; op3:x12; dest:x14; op1val:0x7f3cb1de; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x14, x15, x13, x12, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x14, rs3==x11, rd==x13,fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b8fcb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x12; op2:x14; op3:x11; dest:x13; op1val:0x7f1b8fcb; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x13, x12, x14, x11, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x13, rs2==x11, rs3==x14, rd==x12,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3742 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x13; op2:x11; op3:x14; dest:x12; op1val:0x7f2d3742; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x12, x13, x11, x14, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x12, rs3==x13, rd==x11,fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e317d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x10; op2:x12; op3:x13; dest:x11; op1val:0x7e6e317d; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x11, x10, x12, x13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x12,test_dataset_1)

inst_21:
// rs1==x11, rs2==x9, rs3==x8, rd==x10,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c20b0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x11; op2:x9; op3:x8; dest:x10; op1val:0x7f0c20b0; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x10, x11, x9, x8, dyn, 0, 0, x12, 0*FLEN/8, x13, x1, x2)

inst_22:
// rs1==x8, rs2==x10, rs3==x7, rd==x9,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c93b2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x8; op2:x10; op3:x7; dest:x9; op1val:0x7f2c93b2; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x9, x8, x10, x7, dyn, 0, 0, x12, 3*FLEN/8, x13, x1, x2)

inst_23:
// rs1==x9, rs2==x7, rs3==x10, rd==x8,fs1 == 0 and fe1 == 0xfe and fm1 == 0x03532d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x9; op2:x7; op3:x10; dest:x8; op1val:0x7f03532d; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:6*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x8, x9, x7, x10, dyn, 0, 0, x12, 6*FLEN/8, x13, x1, x10)
RVTEST_SIGBASE(x9,signature_x9_0)

inst_24:
// rs1==x6, rs2==x8, rs3==x9, rd==x7,fs1 == 0 and fe1 == 0xfd and fm1 == 0x354d84 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x6; op2:x8; op3:x9; dest:x7; op1val:0x7eb54d84; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:9*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x7, x6, x8, x9, dyn, 0, 0, x12, 9*FLEN/8, x13, x9, x10)

inst_25:
// rs1==x7, rs2==x5, rs3==x4, rd==x6,fs1 == 0 and fe1 == 0xfb and fm1 == 0x1aad53 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x7; op2:x5; op3:x4; dest:x6; op1val:0x7d9aad53; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x6, x7, x5, x4, dyn, 0, 0, x12, 12*FLEN/8, x13, x9, x10)

inst_26:
// rs1==x4, rs2==x6, rs3==x3, rd==x5,fs1 == 0 and fe1 == 0xfd and fm1 == 0x26b8d3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x4; op2:x6; op3:x3; dest:x5; op1val:0x7ea6b8d3; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x5, x4, x6, x3, dyn, 0, 0, x12, 15*FLEN/8, x13, x9, x10)

inst_27:
// rs1==x5, rs2==x3, rs3==x6, rd==x4,fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a94a1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x5; op2:x3; op3:x6; dest:x4; op1val:0x7eea94a1; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x4, x5, x3, x6, dyn, 0, 0, x12, 18*FLEN/8, x13, x9, x10)

inst_28:
// rs1==x2, rs2==x4, rs3==x5, rd==x3,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f4c51 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x2; op2:x4; op3:x5; dest:x3; op1val:0x7f2f4c51; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x3, x2, x4, x5, dyn, 0, 0, x12, 21*FLEN/8, x13, x9, x10)

inst_29:
// rs1==x3, rs2==x1, rs3==x0, rd==x2,fs1 == 0 and fe1 == 0xfe and fm1 == 0x3996a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x3; op2:x1; op3:x0; dest:x2; op1val:0x7f3996a2; op2val:0x0;
op3val:0x0; valaddr_reg:x12; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x2, x3, x1, x0, dyn, 0, 0, x12, 24*FLEN/8, x13, x9, x10)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0xfd and fm1 == 0x372bf7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x7eb72bf7; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x1, x30, x29, dyn, 0, 0, x12, 27*FLEN/8, x13, x9, x10)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2623b6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x0, x30, x29, dyn, 0, 0, x12, 30*FLEN/8, x13, x9, x10)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0xfc and fm1 == 0x480ede and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x7e480ede; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x2, x29, dyn, 0, 0, x12, 33*FLEN/8, x13, x9, x10)

inst_33:
// rs2==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a90b9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x7f1a90b9; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x0, x29, dyn, 0, 0, x12, 36*FLEN/8, x13, x9, x10)

inst_34:
// rs3==x2,fs1 == 0 and fe1 == 0xfd and fm1 == 0x52b355 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x2; dest:x31; op1val:0x7ed2b355; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x2, dyn, 0, 0, x12, 39*FLEN/8, x13, x9, x10)

inst_35:
// rs3==x1,fs1 == 0 and fe1 == 0xf8 and fm1 == 0x2c8b5e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x7c2c8b5e; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:42*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x1, dyn, 0, 0, x12, 42*FLEN/8, x13, x9, x10)

inst_36:
// rd==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a2eec and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x7f0a2eec; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:45*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x1, x31, x30, x29, dyn, 0, 0, x12, 45*FLEN/8, x13, x9, x10)

inst_37:
// rd==x0,fs1 == 0 and fe1 == 0xfd and fm1 == 0x1925f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x7e9925f2; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:48*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x0, x31, x30, x29, dyn, 0, 0, x12, 48*FLEN/8, x13, x9, x10)

inst_38:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e5ec7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1e5ec7; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:51*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 51*FLEN/8, x13, x9, x10)

inst_39:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x004910 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f004910; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:54*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 54*FLEN/8, x13, x9, x10)

inst_40:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x60affa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a60affa; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:57*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57*FLEN/8, x13, x9, x10)

inst_41:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d88ad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd88ad; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:60*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 60*FLEN/8, x13, x9, x10)

inst_42:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x269468 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f269468; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:63*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 63*FLEN/8, x13, x9, x10)

inst_43:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b52d3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b52d3; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:66*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 66*FLEN/8, x13, x9, x10)

inst_44:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x79c1c6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e79c1c6; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:69*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 69*FLEN/8, x13, x9, x10)

inst_45:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x272166 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f272166; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:72*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 72*FLEN/8, x13, x9, x10)

inst_46:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x12bd51 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e12bd51; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:75*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 75*FLEN/8, x13, x9, x10)

inst_47:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x59ec92 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed9ec92; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:78*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 78*FLEN/8, x13, x9, x10)

inst_48:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3741cc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3741cc; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:81*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 81*FLEN/8, x13, x9, x10)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x39c489 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f39c489; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:84*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 84*FLEN/8, x13, x9, x10)

inst_50:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a35e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a35e0; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:87*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 87*FLEN/8, x13, x9, x10)

inst_51:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eac0532; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:90*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 90*FLEN/8, x13, x9, x10)

inst_52:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x772129 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d772129; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:93*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93*FLEN/8, x13, x9, x10)

inst_53:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x75cd4b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e75cd4b; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:96*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 96*FLEN/8, x13, x9, x10)

inst_54:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec30c98; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:99*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 99*FLEN/8, x13, x9, x10)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x331aa5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f331aa5; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 102*FLEN/8, x13, x9, x10)

inst_56:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x278349 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da78349; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 105*FLEN/8, x13, x9, x10)

inst_57:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed3afc5; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108*FLEN/8, x13, x9, x10)

inst_58:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07a8e7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f07a8e7; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 111*FLEN/8, x13, x9, x10)

inst_59:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed237a1; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 114*FLEN/8, x13, x9, x10)

inst_60:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c60ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1c60ac; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 117*FLEN/8, x13, x9, x10)

inst_61:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4f7809 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ecf7809; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 120*FLEN/8, x13, x9, x10)

inst_62:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x390e97 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f390e97; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 123*FLEN/8, x13, x9, x10)

inst_63:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x679f8e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee79f8e; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 126*FLEN/8, x13, x9, x10)

inst_64:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61a51b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee1a51b; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 129*FLEN/8, x13, x9, x10)

inst_65:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 132*FLEN/8, x13, x9, x10)

inst_66:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64f961 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee4f961; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 135*FLEN/8, x13, x9, x10)

inst_67:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x13cd52 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e93cd52; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 138*FLEN/8, x13, x9, x10)

inst_68:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d0ccb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edd0ccb; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 141*FLEN/8, x13, x9, x10)

inst_69:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ef919 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5ef919; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 144*FLEN/8, x13, x9, x10)

inst_70:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1173d9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1173d9; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 147*FLEN/8, x13, x9, x10)

inst_71:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0f6884 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0f6884; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 150*FLEN/8, x13, x9, x10)

inst_72:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b4e0d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeb4e0d; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 153*FLEN/8, x13, x9, x10)

inst_73:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c283d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efc283d; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 156*FLEN/8, x13, x9, x10)

inst_74:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36fce6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb6fce6; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 159*FLEN/8, x13, x9, x10)

inst_75:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x09f85f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d89f85f; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 162*FLEN/8, x13, x9, x10)

inst_76:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1175bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1175bf; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 165*FLEN/8, x13, x9, x10)

inst_77:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x285703 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f285703; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 168*FLEN/8, x13, x9, x10)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x314a05 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f314a05; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 171*FLEN/8, x13, x9, x10)

inst_79:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21c09a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f21c09a; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 174*FLEN/8, x13, x9, x10)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c7300 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2c7300; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 177*FLEN/8, x13, x9, x10)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x313b58 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f313b58; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 180*FLEN/8, x13, x9, x10)

inst_82:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4f9722 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ecf9722; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 183*FLEN/8, x13, x9, x10)

inst_83:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1641f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9641f7; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 186*FLEN/8, x13, x9, x10)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x076a16 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f076a16; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 189*FLEN/8, x13, x9, x10)

inst_85:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x53afdf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e53afdf; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 192*FLEN/8, x13, x9, x10)

inst_86:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bd52c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1bd52c; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 195*FLEN/8, x13, x9, x10)

inst_87:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2319ee and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2319ee; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 198*FLEN/8, x13, x9, x10)

inst_88:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bd8f4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2bd8f4; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 201*FLEN/8, x13, x9, x10)

inst_89:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x627bd0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee27bd0; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 204*FLEN/8, x13, x9, x10)

inst_90:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x365ad7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f365ad7; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 207*FLEN/8, x13, x9, x10)

inst_91:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e9a56 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ede9a56; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 210*FLEN/8, x13, x9, x10)

inst_92:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2d0427 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ead0427; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 213*FLEN/8, x13, x9, x10)

inst_93:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d88c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efd88c2; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 216*FLEN/8, x13, x9, x10)

inst_94:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f4810 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3f4810; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 219*FLEN/8, x13, x9, x10)

inst_95:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x300d7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f300d7e; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 222*FLEN/8, x13, x9, x10)

inst_96:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x185183 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f185183; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 225*FLEN/8, x13, x9, x10)

inst_97:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7d0cc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d7d0cc0; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 228*FLEN/8, x13, x9, x10)

inst_98:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b4f07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeb4f07; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 231*FLEN/8, x13, x9, x10)

inst_99:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3acb68 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebacb68; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 234*FLEN/8, x13, x9, x10)

inst_100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x71fa00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef1fa00; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 237*FLEN/8, x13, x9, x10)

inst_101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x224140 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f224140; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 240*FLEN/8, x13, x9, x10)

inst_102:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3aa6be and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3aa6be; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 243*FLEN/8, x13, x9, x10)

inst_103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c7228 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c7228; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 246*FLEN/8, x13, x9, x10)

inst_104:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33eb13 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db3eb13; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 249*FLEN/8, x13, x9, x10)

inst_105:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x29504d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e29504d; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 252*FLEN/8, x13, x9, x10)

inst_106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188f57 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f188f57; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 255*FLEN/8, x13, x9, x10)

inst_107:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7f6343 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7f6343; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 258*FLEN/8, x13, x9, x10)

inst_108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ca7c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ca7c2; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 261*FLEN/8, x13, x9, x10)

inst_109:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1a887c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9a887c; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 264*FLEN/8, x13, x9, x10)

inst_110:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x60ce7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de0ce7f; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 267*FLEN/8, x13, x9, x10)

inst_111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f3e7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f3e7; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 270*FLEN/8, x13, x9, x10)

inst_112:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0af584 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d0af584; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 273*FLEN/8, x13, x9, x10)

inst_113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5c5d53 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edc5d53; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 276*FLEN/8, x13, x9, x10)

inst_114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2eb91a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2eb91a; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 279*FLEN/8, x13, x9, x10)

inst_115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4d21cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ecd21cb; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 282*FLEN/8, x13, x9, x10)

inst_116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ac50 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f02ac50; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 285*FLEN/8, x13, x9, x10)

inst_117:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x24066c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ca4066c; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 288*FLEN/8, x13, x9, x10)

inst_118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73d707 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef3d707; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 291*FLEN/8, x13, x9, x10)

inst_119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68d57d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee8d57d; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 294*FLEN/8, x13, x9, x10)

inst_120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d2a79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edd2a79; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 297*FLEN/8, x13, x9, x10)

inst_121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x163972 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e963972; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 300*FLEN/8, x13, x9, x10)

inst_122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e223c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e223c; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 303*FLEN/8, x13, x9, x10)

inst_123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c425a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c425a; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 306*FLEN/8, x13, x9, x10)

inst_124:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5f97b9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cdf97b9; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 309*FLEN/8, x13, x9, x10)

inst_125:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x04ef49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c84ef49; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 312*FLEN/8, x13, x9, x10)

inst_126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x38849b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f38849b; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 315*FLEN/8, x13, x9, x10)

inst_127:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0e0ef6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0e0ef6; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 318*FLEN/8, x13, x9, x10)

inst_128:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e4d8f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbe4d8f; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 321*FLEN/8, x13, x9, x10)

inst_129:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x21b906 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e21b906; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 324*FLEN/8, x13, x9, x10)

inst_130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19be4b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f19be4b; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 327*FLEN/8, x13, x9, x10)

inst_131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33e5e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f33e5e8; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 330*FLEN/8, x13, x9, x10)

inst_132:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0bf9e4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c8bf9e4; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 333*FLEN/8, x13, x9, x10)

inst_133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x237008 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea37008; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 336*FLEN/8, x13, x9, x10)

inst_134:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1be782 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9be782; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 339*FLEN/8, x13, x9, x10)

inst_135:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x479e53 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e479e53; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 342*FLEN/8, x13, x9, x10)

inst_136:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2998cc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2998cc; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 345*FLEN/8, x13, x9, x10)

inst_137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786b62 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef86b62; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 348*FLEN/8, x13, x9, x10)

inst_138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06834b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e86834b; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 351*FLEN/8, x13, x9, x10)

inst_139:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0a7bf0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0a7bf0; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 354*FLEN/8, x13, x9, x10)

inst_140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41657b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec1657b; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 357*FLEN/8, x13, x9, x10)

inst_141:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x71f159 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cf1f159; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 360*FLEN/8, x13, x9, x10)

inst_142:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b03d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b03d8; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 363*FLEN/8, x13, x9, x10)

inst_143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3dbdbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3dbdbb; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 366*FLEN/8, x13, x9, x10)

inst_144:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x191af1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e191af1; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 369*FLEN/8, x13, x9, x10)

inst_145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x09af6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e89af6b; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 372*FLEN/8, x13, x9, x10)

inst_146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c7784 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c7784; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 375*FLEN/8, x13, x9, x10)

inst_147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20f56c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f20f56c; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 378*FLEN/8, x13, x9, x10)

inst_148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30593a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30593a; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 381*FLEN/8, x13, x9, x10)

inst_149:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x021e3b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e021e3b; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 384*FLEN/8, x13, x9, x10)

inst_150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0125a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0125a0; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 387*FLEN/8, x13, x9, x10)

inst_151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3993cf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3993cf; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 390*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_1)

inst_152:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x32551e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d32551e; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 393*FLEN/8, x13, x9, x10)

inst_153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01d4ab and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f01d4ab; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 396*FLEN/8, x13, x9, x10)

inst_154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22524e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f22524e; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 399*FLEN/8, x13, x9, x10)

inst_155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0372b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8372b0; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 402*FLEN/8, x13, x9, x10)

inst_156:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x408722 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e408722; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 405*FLEN/8, x13, x9, x10)

inst_157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x652afa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee52afa; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 408*FLEN/8, x13, x9, x10)

inst_158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29d93c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea9d93c; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 411*FLEN/8, x13, x9, x10)

inst_159:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0642e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0642e8; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 414*FLEN/8, x13, x9, x10)

inst_160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x351aa9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb51aa9; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 417*FLEN/8, x13, x9, x10)

inst_161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d6756 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9d6756; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 420*FLEN/8, x13, x9, x10)

inst_162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a8a0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eda8a0e; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 423*FLEN/8, x13, x9, x10)

inst_163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x434d6c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec34d6c; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 426*FLEN/8, x13, x9, x10)

inst_164:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6f30c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6f30c5; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 429*FLEN/8, x13, x9, x10)

inst_165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x092570 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e892570; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 432*FLEN/8, x13, x9, x10)

inst_166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20d4b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f20d4b8; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 435*FLEN/8, x13, x9, x10)

inst_167:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b75e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e40b75e; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 438*FLEN/8, x13, x9, x10)

inst_168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x57453d and fs2 == 0 and fe2 == 0x2b and fm2 == 0x1837c2 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed7453d; op2val:0x159837c2;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 441*FLEN/8, x13, x9, x10)

inst_169:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x18d146 and fs2 == 0 and fe2 == 0x30 and fm2 == 0x566cfd and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c18d146; op2val:0x18566cfd;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 444*FLEN/8, x13, x9, x10)

inst_170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e61dc and fs2 == 0 and fe2 == 0x2a and fm2 == 0x662419 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0e61dc; op2val:0x15662419;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 447*FLEN/8, x13, x9, x10)

inst_171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x00fdf0 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x7e0807 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e80fdf0; op2val:0x15fe0807;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 450*FLEN/8, x13, x9, x10)

inst_172:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c612e and fs2 == 0 and fe2 == 0x2e and fm2 == 0x696c97 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d0c612e; op2val:0x17696c97;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 453*FLEN/8, x13, x9, x10)

inst_173:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x57b7df and fs2 == 0 and fe2 == 0x2c and fm2 == 0x17e6de and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e57b7df; op2val:0x1617e6de;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 456*FLEN/8, x13, x9, x10)

inst_174:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x386b8e and fs2 == 0 and fe2 == 0x2c and fm2 == 0x31ae65 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e386b8e; op2val:0x1631ae65;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 459*FLEN/8, x13, x9, x10)

inst_175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x370036 and fs2 == 1 and fe2 == 0x2a and fm2 == 0x330f2e and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f370036; op2val:0x95330f2e;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 462*FLEN/8, x13, x9, x10)

inst_176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x07412e and fs2 == 1 and fe2 == 0x2b and fm2 == 0x7244dd and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e87412e; op2val:0x95f244dd;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 465*FLEN/8, x13, x9, x10)

inst_177:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5d1719 and fs2 == 1 and fe2 == 0x2c and fm2 == 0x143603 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5d1719; op2val:0x96143603;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 468*FLEN/8, x13, x9, x10)

inst_178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x09eee9 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x6d906e and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e89eee9; op2val:0x95ed906e;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 471*FLEN/8, x13, x9, x10)

inst_179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35ce50 and fs2 == 1 and fe2 == 0x2a and fm2 == 0x343c75 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f35ce50; op2val:0x95343c75;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 474*FLEN/8, x13, x9, x10)

inst_180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x735bf2 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x06a612 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef35bf2; op2val:0x9586a612;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 477*FLEN/8, x13, x9, x10)

inst_181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6e7e55 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x096551 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eee7e55; op2val:0x95896551;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 480*FLEN/8, x13, x9, x10)

inst_182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09661e and fs2 == 1 and fe2 == 0x2a and fm2 == 0x6e7cf1 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f09661e; op2val:0x956e7cf1;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 483*FLEN/8, x13, x9, x10)

inst_183:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14ffa5 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x5bebe8 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e94ffa5; op2val:0x95dbebe8;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 486*FLEN/8, x13, x9, x10)

inst_184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f22f1 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x4de949 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9f22f1; op2val:0x95cde949;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 489*FLEN/8, x13, x9, x10)

inst_185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79eb78 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x031d33 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9eb78; op2val:0x95831d33;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 492*FLEN/8, x13, x9, x10)

inst_186:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x15d64c and fs2 == 1 and fe2 == 0x33 and fm2 == 0x5ab0da and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a95d64c; op2val:0x99dab0da;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 495*FLEN/8, x13, x9, x10)

inst_187:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13b197 and fs2 == 1 and fe2 == 0x2c and fm2 == 0x5ddd52 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13b197; op2val:0x965ddd52;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 498*FLEN/8, x13, x9, x10)

inst_188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x006905 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x7f2ea0 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e806905; op2val:0x95ff2ea0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 501*FLEN/8, x13, x9, x10)

inst_189:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x37df17 and fs2 == 0 and fe2 == 0x2c and fm2 == 0x323622 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e37df17; op2val:0x16323622;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 504*FLEN/8, x13, x9, x10)

inst_190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x74c2e8 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x05e099 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef4c2e8; op2val:0x1585e099;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 507*FLEN/8, x13, x9, x10)

inst_191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x11669e and fs2 == 0 and fe2 == 0x2b and fm2 == 0x615cfa and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e91669e; op2val:0x15e15cfa;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 510*FLEN/8, x13, x9, x10)

inst_192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2814cf and fs2 == 0 and fe2 == 0x2a and fm2 == 0x42f40b and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2814cf; op2val:0x1542f40b;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 513*FLEN/8, x13, x9, x10)

inst_193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a2b8e and fs2 == 0 and fe2 == 0x2b and fm2 == 0x1631d8 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eda2b8e; op2val:0x159631d8;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 516*FLEN/8, x13, x9, x10)

inst_194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f21ce and fs2 == 0 and fe2 == 0x2b and fm2 == 0x4deac2 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9f21ce; op2val:0x15cdeac2;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 519*FLEN/8, x13, x9, x10)

inst_195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a7876 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x54218c and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a7876; op2val:0x15d4218c;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 522*FLEN/8, x13, x9, x10)

inst_196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06c054 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f06c054; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 525*FLEN/8, x13, x9, x10)

inst_197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209957 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea09957; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 528*FLEN/8, x13, x9, x10)

inst_198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e4880 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efe4880; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 531*FLEN/8, x13, x9, x10)

inst_199:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fb50a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d0fb50a; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 534*FLEN/8, x13, x9, x10)

inst_200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b03e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eab03e6; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 537*FLEN/8, x13, x9, x10)

inst_201:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x471615 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e471615; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 540*FLEN/8, x13, x9, x10)

inst_202:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7234e1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df234e1; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 543*FLEN/8, x13, x9, x10)

inst_203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a968c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca968c; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 546*FLEN/8, x13, x9, x10)

inst_204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b1c27 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebb1c27; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 549*FLEN/8, x13, x9, x10)

inst_205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x579458 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed79458; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 552*FLEN/8, x13, x9, x10)

inst_206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x110d95 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f110d95; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 555*FLEN/8, x13, x9, x10)

inst_207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29b43a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f29b43a; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 558*FLEN/8, x13, x9, x10)

inst_208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3deb73 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebdeb73; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 561*FLEN/8, x13, x9, x10)

inst_209:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6fa925 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6fa925; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 564*FLEN/8, x13, x9, x10)

inst_210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x33495f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb3495f; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 567*FLEN/8, x13, x9, x10)

inst_211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b5638 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b5638; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 570*FLEN/8, x13, x9, x10)

inst_212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2800cd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2800cd; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 573*FLEN/8, x13, x9, x10)

inst_213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bfbd1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1bfbd1; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 576*FLEN/8, x13, x9, x10)

inst_214:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x10628e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e10628e; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 579*FLEN/8, x13, x9, x10)

inst_215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fe381 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3fe381; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 582*FLEN/8, x13, x9, x10)

inst_216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x731b27 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef31b27; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 585*FLEN/8, x13, x9, x10)

inst_217:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x003494 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d803494; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 588*FLEN/8, x13, x9, x10)

inst_218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b4e72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0b4e72; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 591*FLEN/8, x13, x9, x10)

inst_219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d783f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3d783f; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 594*FLEN/8, x13, x9, x10)

inst_220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a4c33 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a4c33; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 597*FLEN/8, x13, x9, x10)

inst_221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02465e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f02465e; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 600*FLEN/8, x13, x9, x10)

inst_222:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x72d2f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e72d2f3; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 603*FLEN/8, x13, x9, x10)

inst_223:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x23fca7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e23fca7; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 606*FLEN/8, x13, x9, x10)

inst_224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09b9ea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3270e2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f09b9ea; op2val:0x3fb270e2;
op3val:0xff3fffff; valaddr_reg:x12; val_offset:609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 609*FLEN/8, x13, x9, x10)

inst_225:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x67c20e and fs2 == 0 and fe2 == 0x87 and fm2 == 0x54154f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ae7c20e; op2val:0x43d4154f;
op3val:0xff3ffffe; valaddr_reg:x12; val_offset:612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 612*FLEN/8, x13, x9, x10)

inst_226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1df6e4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b944e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1df6e4; op2val:0x3f9b944e;
op3val:0xff3fffff; valaddr_reg:x12; val_offset:615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 615*FLEN/8, x13, x9, x10)

inst_227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4ae285 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7243f7 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ecae285; op2val:0x3ff243f7;
op3val:0xff3fffff; valaddr_reg:x12; val_offset:618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 618*FLEN/8, x13, x9, x10)

inst_228:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x16325d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x23a019 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d96325d; op2val:0x4123a019;
op3val:0xff3fffff; valaddr_reg:x12; val_offset:621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 621*FLEN/8, x13, x9, x10)

inst_229:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x36a2e9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x068ffc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db6a2e9; op2val:0x41068ffc;
op3val:0xff3fffff; valaddr_reg:x12; val_offset:624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 624*FLEN/8, x13, x9, x10)

inst_230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x795162 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x452558 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef95162; op2val:0x3fc52558;
op3val:0xff3fffff; valaddr_reg:x12; val_offset:627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 627*FLEN/8, x13, x9, x10)

inst_231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27bdd4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1282d8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f27bdd4; op2val:0x3f9282d8;
op3val:0xff3fffff; valaddr_reg:x12; val_offset:630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 630*FLEN/8, x13, x9, x10)

inst_232:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5706d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6495e4 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5706d8; op2val:0x406495e4;
op3val:0xff3fffff; valaddr_reg:x12; val_offset:633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 633*FLEN/8, x13, x9, x10)

inst_233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bdff9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02cf78 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3bdff9; op2val:0x3f82cf78;
op3val:0xff3ffffe; valaddr_reg:x12; val_offset:636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 636*FLEN/8, x13, x9, x10)

inst_234:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19e0a5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1fb61f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d99e0a5; op2val:0x411fb61f;
op3val:0xff3fffff; valaddr_reg:x12; val_offset:639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 639*FLEN/8, x13, x9, x10)

inst_235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4c3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15e4cd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f23f4c3; op2val:0x3f95e4cd;
op3val:0xff3ffffe; valaddr_reg:x12; val_offset:642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 642*FLEN/8, x13, x9, x10)

inst_236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1854d1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x215521 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9854d1; op2val:0x40215521;
op3val:0xff3fffff; valaddr_reg:x12; val_offset:645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 645*FLEN/8, x13, x9, x10)

inst_237:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x79e4a2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x44b12c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d79e4a2; op2val:0x4144b12c;
op3val:0xff3ffffe; valaddr_reg:x12; val_offset:648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 648*FLEN/8, x13, x9, x10)

inst_238:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x52faef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e52faef; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 651*FLEN/8, x13, x9, x10)

inst_239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2df190 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eadf190; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 654*FLEN/8, x13, x9, x10)

inst_240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18212b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18212b; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 657*FLEN/8, x13, x9, x10)

inst_241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x25618f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f25618f; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 660*FLEN/8, x13, x9, x10)

inst_242:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4cef18 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dccef18; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 663*FLEN/8, x13, x9, x10)

inst_243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x480329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec80329; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 666*FLEN/8, x13, x9, x10)

inst_244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79e697 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9e697; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 669*FLEN/8, x13, x9, x10)

inst_245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0544b2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8544b2; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 672*FLEN/8, x13, x9, x10)

inst_246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2765d9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2765d9; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 675*FLEN/8, x13, x9, x10)

inst_247:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55d198 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55d198; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 678*FLEN/8, x13, x9, x10)

inst_248:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x643dc7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c643dc7; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 681*FLEN/8, x13, x9, x10)

inst_249:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x79d5cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cf9d5cb; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 684*FLEN/8, x13, x9, x10)

inst_250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02c05a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f02c05a; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 687*FLEN/8, x13, x9, x10)

inst_251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x566899 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed66899; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 690*FLEN/8, x13, x9, x10)

inst_252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35ba7d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f35ba7d; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 693*FLEN/8, x13, x9, x10)

inst_253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x342e24 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f342e24; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 696*FLEN/8, x13, x9, x10)

inst_254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2eb100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2eb100; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 699*FLEN/8, x13, x9, x10)

inst_255:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0109b4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d0109b4; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 702*FLEN/8, x13, x9, x10)

inst_256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0fd579 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0fd579; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 705*FLEN/8, x13, x9, x10)

inst_257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06a784 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f06a784; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 708*FLEN/8, x13, x9, x10)

inst_258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba8b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efba8b0; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 711*FLEN/8, x13, x9, x10)

inst_259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08c5cd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f08c5cd; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 714*FLEN/8, x13, x9, x10)

inst_260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d5201 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d5201; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 717*FLEN/8, x13, x9, x10)

inst_261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x75d070 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef5d070; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 720*FLEN/8, x13, x9, x10)

inst_262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f0540 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8f0540; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 723*FLEN/8, x13, x9, x10)

inst_263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4e908c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ece908c; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 726*FLEN/8, x13, x9, x10)

inst_264:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1f9fcf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1f9fcf; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 729*FLEN/8, x13, x9, x10)

inst_265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6174c8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee174c8; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 732*FLEN/8, x13, x9, x10)

inst_266:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5aa799 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bdaa799; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 735*FLEN/8, x13, x9, x10)

inst_267:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x67f8b9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de7f8b9; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 738*FLEN/8, x13, x9, x10)

inst_268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x000760 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e800760; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 741*FLEN/8, x13, x9, x10)

inst_269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x179b8e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f179b8e; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 744*FLEN/8, x13, x9, x10)

inst_270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1186f9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1186f9; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 747*FLEN/8, x13, x9, x10)

inst_271:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46d91a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46d91a; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 750*FLEN/8, x13, x9, x10)

inst_272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7ea4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9b7ea4; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 753*FLEN/8, x13, x9, x10)

inst_273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x167d44 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f167d44; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 756*FLEN/8, x13, x9, x10)

inst_274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x370362 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb70362; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 759*FLEN/8, x13, x9, x10)

inst_275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6004c9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee004c9; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 762*FLEN/8, x13, x9, x10)

inst_276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e5b90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2e5b90; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 765*FLEN/8, x13, x9, x10)

inst_277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41ccbc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec1ccbc; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 768*FLEN/8, x13, x9, x10)

inst_278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3996a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3996a2; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 771*FLEN/8, x13, x9, x10)

inst_279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2623b6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2623b6; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 774*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_2)

inst_280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a90b9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a90b9; op2val:0x0;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 777*FLEN/8, x13, x9, x10)

inst_281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1925f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9925f2; op2val:0x80000000;
op3val:0x71bffff8; valaddr_reg:x12; val_offset:780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 780*FLEN/8, x13, x9, x10)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2132943109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(2131855097,64,FLEN)
NAN_BOXED(2124513245,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2118572314,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2118572314,64,FLEN)
NAN_BOXED(2126795865,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2124119716,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2132180292,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2120806836,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2125923170,64,FLEN)
NAN_BOXED(2125923170,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2128610505,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2128610505,64,FLEN)
NAN_BOXED(2133744528,64,FLEN)
NAN_BOXED(2133744528,32,FLEN)
NAN_BOXED(2133744528,64,FLEN)
NAN_BOXED(2126630076,64,FLEN)
NAN_BOXED(2126630076,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2119725970,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2131828041,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2129490980,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2118149004,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2133765080,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2134684126,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2132512715,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2133669698,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
NAN_BOXED(2121150845,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,64,FLEN)
test_dataset_1:
NAN_BOXED(2131501232,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133627826,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130924333,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2125811076,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2107288915,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2124855507,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2129302689,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133806161,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134480546,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2125933559,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2118651614,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132447417,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2127737685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2083294046,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131373804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2123965938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132696775,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130725136,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2053156858,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2126350509,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133234792,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2117817043,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2121908678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133270886,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2115157329,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128211090,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2117550540,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134492297,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132424160,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2104959273,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2121649483,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134055589,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2108130121,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131208423,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132566188,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2127525897,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134445719,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2129108878,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128717083,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128935265,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2123615570,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128415947,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2120153369,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2115072985,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2114939012,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2129350157,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130454589,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2125921510,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2106194015,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131850687,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133350147,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133936645,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132918426,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133619456,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133932888,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2127533858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2123776503,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131192342,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2119413727,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132530476,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133006830,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133580020,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128772048,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134268631,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128517718,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2125268007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130544834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134853648,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133855614,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132300163,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2105347264,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2129350407,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2126170984,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2129787392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132951360,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2117772990,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131522088,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2108943123,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2116636749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132315991,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2122277699,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132584386,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2107279484,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2111884927,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131096551,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2097870212,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128371027,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133768474,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2127372747,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130881616,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2091124332,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2129909511,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2129188221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128423545,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2123774322,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2123244092,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134655578,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2095028153,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2089086793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134410395,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2114850550,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2109623695,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2116139270,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132393547,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134107624,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2089548260,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2124640264,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2107369346,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2118622803,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2116655308,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130209634,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2122744651,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2114616304,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2126603643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2096230745,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2107311064,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134752699,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2115574513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2122952555,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131523460,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132866412,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133875002,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2114068027,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130781600,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134479823,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2100450590,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130826411,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132955726,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2122543792,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2118158114,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128947962,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2125060412,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2114339560,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2125798057,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2124244822,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128251406,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2126728556,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2121216197,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2122917232,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132858040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2118170462,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128037181,32,FLEN)
NAN_BOXED(362297282,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2082001222,32,FLEN)
NAN_BOXED(408317181,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131648988,32,FLEN)
NAN_BOXED(359015449,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2122382832,32,FLEN)
NAN_BOXED(368969735,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2097963310,32,FLEN)
NAN_BOXED(392785047,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2119677919,32,FLEN)
NAN_BOXED(370665182,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2117626766,32,FLEN)
NAN_BOXED(372354661,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134310966,32,FLEN)
NAN_BOXED(2503151406,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2122793262,32,FLEN)
NAN_BOXED(2515682525,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2120029977,32,FLEN)
NAN_BOXED(2517906947,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2122968809,32,FLEN)
NAN_BOXED(2515374190,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134232656,32,FLEN)
NAN_BOXED(2503228533,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2129878002,32,FLEN)
NAN_BOXED(2508629522,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2129559125,32,FLEN)
NAN_BOXED(2508809553,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131322398,32,FLEN)
NAN_BOXED(2507046129,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2123693989,32,FLEN)
NAN_BOXED(2514217960,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2124358385,32,FLEN)
NAN_BOXED(2513299785,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130307960,32,FLEN)
NAN_BOXED(2508397875,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2056640076,32,FLEN)
NAN_BOXED(2581246170,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2115219863,32,FLEN)
NAN_BOXED(2522733906,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2122344709,32,FLEN)
NAN_BOXED(2516528800,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2117590807,32,FLEN)
NAN_BOXED(372389410,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2129969896,32,FLEN)
NAN_BOXED(361095321,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2123458206,32,FLEN)
NAN_BOXED(367090938,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133333199,32,FLEN)
NAN_BOXED(356709387,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128227214,32,FLEN)
NAN_BOXED(362164696,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2124358094,32,FLEN)
NAN_BOXED(365816514,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2124052598,32,FLEN)
NAN_BOXED(366223756,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131148884,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2124454231,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130593920,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2098181386,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2125136870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2118587925,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2113025249,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2127206028,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2126191655,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128057432,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131824021,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133439546,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2126375795,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2121247013,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2125678943,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132497976,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133328077,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132540369,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2115003022,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134893441,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2129861415,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2105554068,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131447410,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134734911,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2124041267,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130855518,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2121454323,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2116287655,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131343850,32,FLEN)
NAN_BOXED(1068658914,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2062008846,32,FLEN)
NAN_BOXED(1137972559,32,FLEN)
NAN_BOXED(4282384382,32,FLEN)
NAN_BOXED(2132670180,32,FLEN)
NAN_BOXED(1067160654,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2127225477,32,FLEN)
NAN_BOXED(1072841719,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2106995293,32,FLEN)
NAN_BOXED(1092853785,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2109121257,32,FLEN)
NAN_BOXED(1090949116,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2130268514,32,FLEN)
NAN_BOXED(1069884760,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2133310932,32,FLEN)
NAN_BOXED(1066566360,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2119632600,32,FLEN)
NAN_BOXED(1080333796,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2134630393,32,FLEN)
NAN_BOXED(1065537400,32,FLEN)
NAN_BOXED(4282384382,32,FLEN)
NAN_BOXED(2107236517,32,FLEN)
NAN_BOXED(1092597279,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2133062851,32,FLEN)
NAN_BOXED(1066788045,32,FLEN)
NAN_BOXED(4282384382,32,FLEN)
NAN_BOXED(2123912401,32,FLEN)
NAN_BOXED(1075926305,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2105140386,32,FLEN)
NAN_BOXED(1095020844,32,FLEN)
NAN_BOXED(4282384382,32,FLEN)
NAN_BOXED(2119367407,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2125328784,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132287787,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133156239,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2110582552,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2127037225,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130306711,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2122663090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133288409,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2119553432,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2086944199,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2096747979,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130886746,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2127980697,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134227581,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134126116,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133766400,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2097220020,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131744121,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131142532,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130421936,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131281357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133676545,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2130038896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2123302208,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2127466636,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2116001743,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128704712,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2077927321,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2112354489,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2122319712,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132253582,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2118572314,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2124119716,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132180292,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2125923170,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2128610505,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133744528,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2126630076,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2134480546,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2133205942,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2132447417,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
NAN_BOXED(2123965938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(1908408312,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 4*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
