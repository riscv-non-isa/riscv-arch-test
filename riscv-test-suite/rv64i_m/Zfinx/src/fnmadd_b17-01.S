
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 07:30:48 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fnmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fnmadd_b17 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fnmadd_b17)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x30, rs2==x31, rs3==x29, rd==x31,fs1 == 0 and fe1 == 0xfe and fm1 == 0x378efe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x35fb9d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x31; op3:x29; dest:x31; op1val:0x7f378efe; op2val:0x7f35fb9d;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x31, x29, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x29, rs2==x29, rs3==x31, rd==x30,fs1 == 0 and fe1 == 0xfb and fm1 == 0x025d06 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x206a70 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x29; op2:x29; op3:x31; dest:x30; op1val:0x7d825d06; op2val:0x7d825d06;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x30, x29, x29, x31, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x28, rs2==x28, rs3==x30, rd==x28,fs1 == 0 and fe1 == 0xfe and fm1 == 0x009696 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6ca617 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x28; op2:x28; op3:x30; dest:x28; op1val:0x7f009696; op2val:0x7f009696;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x28, x28, x28, x30, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==x27, rs2==x30, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x5f2ead and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x27; op2:x30; op3:x27; dest:x27; op1val:0x7ee90309; op2val:0x7edf2ead;
op3val:0x7ee90309; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x27, x27, x30, x27, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x26, rs2==x27, rs3==x28, rd==x26,fs1 == 0 and fe1 == 0xfd and fm1 == 0x25608b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x171dc0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x26; op2:x27; op3:x28; dest:x26; op1val:0x7ea5608b; op2val:0x7e971dc0;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x26, x26, x27, x28, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==x25, rs2==x25, rs3==x25, rd==x29,fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f015e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3648af and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x25; op2:x25; op3:x25; dest:x29; op1val:0x7f3f015e; op2val:0x7f3f015e;
op3val:0x7f3f015e; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x29, x25, x25, x25, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==x31, rs2==x24, rs3==x24, rd==x24,fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad2f1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4e0246 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x31; op2:x24; op3:x24; dest:x24; op1val:0x7eaad2f1; op2val:0x7e4e0246;
op3val:0x7e4e0246; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x24, x31, x24, x24, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x24, rs2==x26, rs3==x26, rd==x25,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x289f06 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3284ec and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x24; op2:x26; op3:x26; dest:x25; op1val:0x7ca89f06; op2val:0x7eb284ec;
op3val:0x7eb284ec; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x25, x24, x26, x26, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x22, rs2==x21, rs3==x20, rd==x23,fs1 == 0 and fe1 == 0xfd and fm1 == 0x11ecfc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2b393b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x22; op2:x21; op3:x20; dest:x23; op1val:0x7e91ecfc; op2val:0x7f2b393b;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x23, x22, x21, x20, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0xfd and fm1 == 0x573c68 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3557bf and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0x7ed73c68; op2val:0x7ed73c68;
op3val:0x7ed73c68; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x19, x19, x19, x19, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x23, rs2==x20, rs3==x22, rd==x22,fs1 == 0 and fe1 == 0xfc and fm1 == 0x79b5b2 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x51f799 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x23; op2:x20; op3:x22; dest:x22; op1val:0x7e79b5b2; op2val:0x7dd1f799;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x22, x23, x20, x22, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x18, rs2==x23, rs3==x18, rd==x21,fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fbf4a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x018006 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x18; op2:x23; op3:x18; dest:x21; op1val:0x7f3fbf4a; op2val:0x7f018006;
op3val:0x7f3fbf4a; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x21, x18, x23, x18, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x21, rs2==x22, rs3==x23, rd==x20,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b90d3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x18fa57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x21; op2:x22; op3:x23; dest:x20; op1val:0x7f2b90d3; op2val:0x7f18fa57;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x20, x21, x22, x23, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x20, rs2==x17, rs3==x21, rd==x18,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e10e3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x127958 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x20; op2:x17; op3:x21; dest:x18; op1val:0x7f2e10e3; op2val:0x7f127958;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x18, x20, x17, x21, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x18, rs3==x15, rd==x17,fs1 == 0 and fe1 == 0xfd and fm1 == 0x07daac and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3c58f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x16; op2:x18; op3:x15; dest:x17; op1val:0x7e87daac; op2val:0x7f3c58f5;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x17, x16, x18, x15, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x17, rs2==x15, rs3==x14, rd==x16,fs1 == 0 and fe1 == 0xfb and fm1 == 0x779461 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x10c4ce and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x17; op2:x15; op3:x14; dest:x16; op1val:0x7df79461; op2val:0x7f10c4ce;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x16, x17, x15, x14, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rs3==x17, rd==x15,fs1 == 0 and fe1 == 0xfd and fm1 == 0x312e1f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x4ba816 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x14; op2:x16; op3:x17; dest:x15; op1val:0x7eb12e1f; op2val:0x7ecba816;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x15, x14, x16, x17, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x15, rs2==x13, rs3==x16, rd==x14,fs1 == 0 and fe1 == 0xfe and fm1 == 0x319158 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x4052ad and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x15; op2:x13; op3:x16; dest:x14; op1val:0x7f319158; op2val:0x7ec052ad;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x14, x15, x13, x16, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x14, rs3==x11, rd==x13,fs1 == 0 and fe1 == 0xfd and fm1 == 0x07e829 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2981e2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x12; op2:x14; op3:x11; dest:x13; op1val:0x7e87e829; op2val:0x7f2981e2;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x13, x12, x14, x11, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x13, rs2==x11, rs3==x10, rd==x12,fs1 == 0 and fe1 == 0xfd and fm1 == 0x310756 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x59ffad and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x13; op2:x11; op3:x10; dest:x12; op1val:0x7eb10756; op2val:0x7ed9ffad;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x12, x13, x11, x10, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x12, rs3==x13, rd==x11,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0af6e3 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3adb90 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x10; op2:x12; op3:x13; dest:x11; op1val:0x7f0af6e3; op2val:0x7ebadb90;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x11, x10, x12, x13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x12,test_dataset_1)

inst_21:
// rs1==x11, rs2==x9, rs3==x12, rd==x10,fs1 == 0 and fe1 == 0xfc and fm1 == 0x79582c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x065158 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x11; op2:x9; op3:x12; dest:x10; op1val:0x7e79582c; op2val:0x7f065158;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x10, x11, x9, x12, dyn, 0, 0, x12, 0*FLEN/8, x13, x1, x2)

inst_22:
// rs1==x8, rs2==x10, rs3==x7, rd==x9,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e5316 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4dedfa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x8; op2:x10; op3:x7; dest:x9; op1val:0x7f2e5316; op2val:0x7e4dedfa;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x9, x8, x10, x7, dyn, 0, 0, x12, 3*FLEN/8, x13, x1, x2)

inst_23:
// rs1==x9, rs2==x7, rs3==x6, rd==x8,fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dbe95 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x37d03d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x9; op2:x7; op3:x6; dest:x8; op1val:0x7e6dbe95; op2val:0x7f37d03d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:6*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x8, x9, x7, x6, dyn, 0, 0, x12, 6*FLEN/8, x13, x1, x10)
RVTEST_SIGBASE(x9,signature_x9_0)

inst_24:
// rs1==x6, rs2==x8, rs3==x9, rd==x7,fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0xfd and fm2 == 0x46d0ac and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x6; op2:x8; op3:x9; dest:x7; op1val:0x7ec1a1ac; op2val:0x7ec6d0ac;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:9*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x7, x6, x8, x9, dyn, 0, 0, x12, 9*FLEN/8, x13, x9, x10)

inst_25:
// rs1==x7, rs2==x5, rs3==x8, rd==x6,fs1 == 0 and fe1 == 0xfd and fm1 == 0x61c550 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6f7f16 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x7; op2:x5; op3:x8; dest:x6; op1val:0x7ee1c550; op2val:0x7e6f7f16;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x6, x7, x5, x8, dyn, 0, 0, x12, 12*FLEN/8, x13, x9, x10)

inst_26:
// rs1==x4, rs2==x6, rs3==x3, rd==x5,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4490fe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x335b8d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x4; op2:x6; op3:x3; dest:x5; op1val:0x7ec490fe; op2val:0x7f335b8d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x5, x4, x6, x3, dyn, 0, 0, x12, 15*FLEN/8, x13, x9, x10)

inst_27:
// rs1==x5, rs2==x3, rs3==x2, rd==x4,fs1 == 0 and fe1 == 0xfa and fm1 == 0x678d99 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1d844c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x5; op2:x3; op3:x2; dest:x4; op1val:0x7d678d99; op2val:0x7f1d844c;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x4, x5, x3, x2, dyn, 0, 0, x12, 18*FLEN/8, x13, x9, x10)

inst_28:
// rs1==x2, rs2==x4, rs3==x5, rd==x3,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e44fd and fs2 == 0 and fe2 == 0xfc and fm2 == 0x12ff4e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x2; op2:x4; op3:x5; dest:x3; op1val:0x7f2e44fd; op2val:0x7e12ff4e;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x3, x2, x4, x5, dyn, 0, 0, x12, 21*FLEN/8, x13, x9, x10)

inst_29:
// rs1==x3, rs2==x1, rs3==x4, rd==x2,fs1 == 0 and fe1 == 0xfa and fm1 == 0x3481df and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7ab7a7 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x3; op2:x1; op3:x4; dest:x2; op1val:0x7d3481df; op2val:0x7efab7a7;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x2, x3, x1, x4, dyn, 0, 0, x12, 24*FLEN/8, x13, x9, x10)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e0a9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x281823 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x7e2e0a9e; op2val:0x7f281823;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x1, x30, x29, dyn, 0, 0, x12, 27*FLEN/8, x13, x9, x10)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0xfd and fm1 == 0x489656 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x23f501 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0x7f23f501;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x0, x30, x29, dyn, 0, 0, x12, 30*FLEN/8, x13, x9, x10)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0xfc and fm1 == 0x21a5d7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x29125a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x7e21a5d7; op2val:0x7f29125a;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x2, x29, dyn, 0, 0, x12, 33*FLEN/8, x13, x9, x10)

inst_33:
// rs2==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x09a812 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x43d400 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x7f09a812; op2val:0x0;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x0, x29, dyn, 0, 0, x12, 36*FLEN/8, x13, x9, x10)

inst_34:
// rs3==x1,fs1 == 0 and fe1 == 0xfc and fm1 == 0x04012d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x012bc4 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x7e04012d; op2val:0x7f012bc4;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x1, dyn, 0, 0, x12, 39*FLEN/8, x13, x9, x10)

inst_35:
// rs3==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x3746a3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x1bb7c9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x0; dest:x31; op1val:0x7f3746a3; op2val:0x7c9bb7c9;
op3val:0x0; valaddr_reg:x12; val_offset:42*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x0, dyn, 0, 0, x12, 42*FLEN/8, x13, x9, x10)

inst_36:
// rd==x1,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x01ea00 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x445eb5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x7c81ea00; op2val:0x7e445eb5;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:45*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x1, x31, x30, x29, dyn, 0, 0, x12, 45*FLEN/8, x13, x9, x10)

inst_37:
// rd==x0,fs1 == 0 and fe1 == 0xfb and fm1 == 0x71556c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0d1c84 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x7df1556c; op2val:0x7e0d1c84;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:48*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x0, x31, x30, x29, dyn, 0, 0, x12, 48*FLEN/8, x13, x9, x10)

inst_38:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x140eaa and fs2 == 0 and fe2 == 0xfa and fm2 == 0x04972f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e940eaa; op2val:0x7d04972f;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:51*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 51*FLEN/8, x13, x9, x10)

inst_39:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6894ce and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x5ed631 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de894ce; op2val:0x7cded631;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:54*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 54*FLEN/8, x13, x9, x10)

inst_40:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c407f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0e8d5f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eec407f; op2val:0x7f0e8d5f;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:57*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57*FLEN/8, x13, x9, x10)

inst_41:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x017d76 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x3d4d49 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e817d76; op2val:0x7cbd4d49;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:60*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 60*FLEN/8, x13, x9, x10)

inst_42:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1310f3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0e11db and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1310f3; op2val:0x7f0e11db;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:63*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 63*FLEN/8, x13, x9, x10)

inst_43:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11164e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2596ee and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f11164e; op2val:0x7f2596ee;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:66*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 66*FLEN/8, x13, x9, x10)

inst_44:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x358c1d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d3485 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb58c1d; op2val:0x7e2d3485;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:69*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 69*FLEN/8, x13, x9, x10)

inst_45:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x72ec45 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1cbf56 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e72ec45; op2val:0x7d9cbf56;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:72*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 72*FLEN/8, x13, x9, x10)

inst_46:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27f459 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x43e560 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f27f459; op2val:0x7dc3e560;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:75*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 75*FLEN/8, x13, x9, x10)

inst_47:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16e4ce and fs2 == 0 and fe2 == 0xfd and fm2 == 0x45af29 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96e4ce; op2val:0x7ec5af29;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:78*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 78*FLEN/8, x13, x9, x10)

inst_48:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3844b4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x46fc6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3844b4; op2val:0x7e46fc6d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:81*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 81*FLEN/8, x13, x9, x10)

inst_49:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x212fa5 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x5d9799 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea12fa5; op2val:0x7c5d9799;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:84*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 84*FLEN/8, x13, x9, x10)

inst_50:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x57ea20 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2e6e63 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd7ea20; op2val:0x7d2e6e63;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:87*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 87*FLEN/8, x13, x9, x10)

inst_51:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x778ca8 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x134261 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df78ca8; op2val:0x7d934261;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:90*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 90*FLEN/8, x13, x9, x10)

inst_52:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x432be8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3cd352 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec32be8; op2val:0x7f3cd352;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:93*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93*FLEN/8, x13, x9, x10)

inst_53:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ef2e6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x328a37 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3ef2e6; op2val:0x7e328a37;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:96*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 96*FLEN/8, x13, x9, x10)

inst_54:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x409980 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x6308fe and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e409980; op2val:0x7ee308fe;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:99*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 99*FLEN/8, x13, x9, x10)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19a3cb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x083942 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f19a3cb; op2val:0x7f083942;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 102*FLEN/8, x13, x9, x10)

inst_56:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x227041 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x4a0e92 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea27041; op2val:0x7eca0e92;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 105*FLEN/8, x13, x9, x10)

inst_57:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5a1bbe and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1cf370 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cda1bbe; op2val:0x7e9cf370;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108*FLEN/8, x13, x9, x10)

inst_58:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0af6b9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x38fc15 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0af6b9; op2val:0x7e38fc15;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 111*FLEN/8, x13, x9, x10)

inst_59:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0b977b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x31cfbf and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0b977b; op2val:0x7e31cfbf;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 114*FLEN/8, x13, x9, x10)

inst_60:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47f677 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3254ae and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec7f677; op2val:0x7eb254ae;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 117*FLEN/8, x13, x9, x10)

inst_61:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x766f73 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x232951 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef66f73; op2val:0x7e232951;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 120*FLEN/8, x13, x9, x10)

inst_62:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x38eb1b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0bf46a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f38eb1b; op2val:0x7f0bf46a;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 123*FLEN/8, x13, x9, x10)

inst_63:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x446aa0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x5f221f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec46aa0; op2val:0x7edf221f;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 126*FLEN/8, x13, x9, x10)

inst_64:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2084ae and fs2 == 0 and fe2 == 0xfd and fm2 == 0x499ff1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea084ae; op2val:0x7ec99ff1;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 129*FLEN/8, x13, x9, x10)

inst_65:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x100e76 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1a1c1b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d900e76; op2val:0x7f1a1c1b;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 132*FLEN/8, x13, x9, x10)

inst_66:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x476063 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x30eb20 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec76063; op2val:0x7f30eb20;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 135*FLEN/8, x13, x9, x10)

inst_67:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5e65e4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3cd606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5e65e4; op2val:0x7f3cd606;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 138*FLEN/8, x13, x9, x10)

inst_68:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6a262c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x039463 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c6a262c; op2val:0x7f039463;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 141*FLEN/8, x13, x9, x10)

inst_69:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6af2c7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2165be and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6af2c7; op2val:0x7f2165be;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 144*FLEN/8, x13, x9, x10)

inst_70:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x41315c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2d58ba and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c41315c; op2val:0x7ead58ba;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 147*FLEN/8, x13, x9, x10)

inst_71:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a9244 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1fef00 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eba9244; op2val:0x7e1fef00;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 150*FLEN/8, x13, x9, x10)

inst_72:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x62ae46 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5a6352 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d62ae46; op2val:0x7e5a6352;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 153*FLEN/8, x13, x9, x10)

inst_73:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x339269 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x6b27f7 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f339269; op2val:0x7d6b27f7;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 156*FLEN/8, x13, x9, x10)

inst_74:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13bb57 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x5b79eb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13bb57; op2val:0x7edb79eb;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 159*FLEN/8, x13, x9, x10)

inst_75:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31e0ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x10affc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb1e0ce; op2val:0x7f10affc;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 162*FLEN/8, x13, x9, x10)

inst_76:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3af9fa and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3b09f3 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbaf9fa; op2val:0x7dbb09f3;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 165*FLEN/8, x13, x9, x10)

inst_77:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2336ae and fs2 == 0 and fe2 == 0xfd and fm2 == 0x762408 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2336ae; op2val:0x7ef62408;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 168*FLEN/8, x13, x9, x10)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04fd41 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x17909f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f04fd41; op2val:0x7c97909f;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 171*FLEN/8, x13, x9, x10)

inst_79:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x153984 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0aea5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f153984; op2val:0x7f0aea5e;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 174*FLEN/8, x13, x9, x10)

inst_80:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x094fff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2f806f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e894fff; op2val:0x7eaf806f;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 177*FLEN/8, x13, x9, x10)

inst_81:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e8c3e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x4a19c2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e8c3e; op2val:0x7eca19c2;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 180*FLEN/8, x13, x9, x10)

inst_82:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x374d41 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1a6f68 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f374d41; op2val:0x7f1a6f68;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 183*FLEN/8, x13, x9, x10)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208358 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x63ea1b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f208358; op2val:0x7e63ea1b;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 186*FLEN/8, x13, x9, x10)

inst_84:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bb1f5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x473929 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebbb1f5; op2val:0x7e473929;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 189*FLEN/8, x13, x9, x10)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026519 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x305e0d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f026519; op2val:0x7f305e0d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 192*FLEN/8, x13, x9, x10)

inst_86:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d071f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x136004 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1d071f; op2val:0x7d936004;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 195*FLEN/8, x13, x9, x10)

inst_87:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f914f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x61068d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3f914f; op2val:0x7de1068d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 198*FLEN/8, x13, x9, x10)

inst_88:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4d54a3 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x04534d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d4d54a3; op2val:0x7d84534d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 201*FLEN/8, x13, x9, x10)

inst_89:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3dd17c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x78dd0e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3dd17c; op2val:0x7ef8dd0e;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 204*FLEN/8, x13, x9, x10)

inst_90:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x639f2c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x31f200 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e639f2c; op2val:0x7e31f200;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 207*FLEN/8, x13, x9, x10)

inst_91:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02c560 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x28844c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f02c560; op2val:0x7ea8844c;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 210*FLEN/8, x13, x9, x10)

inst_92:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c23d1 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x4fb3f7 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dac23d1; op2val:0x7ecfb3f7;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 213*FLEN/8, x13, x9, x10)

inst_93:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x111bf6 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x13b178 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f111bf6; op2val:0x7d93b178;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 216*FLEN/8, x13, x9, x10)

inst_94:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09599c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x459379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f09599c; op2val:0x7e459379;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 219*FLEN/8, x13, x9, x10)

inst_95:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x310056 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x070538 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb10056; op2val:0x7f070538;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 222*FLEN/8, x13, x9, x10)

inst_96:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f10c6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x164cf5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3f10c6; op2val:0x7f164cf5;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 225*FLEN/8, x13, x9, x10)

inst_97:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0xfd and fm2 == 0x296a13 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dde5beb; op2val:0x7ea96a13;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 228*FLEN/8, x13, x9, x10)

inst_98:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x294f17 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee48b04; op2val:0x7f294f17;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 231*FLEN/8, x13, x9, x10)

inst_99:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43e7e5 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x394394 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec3e7e5; op2val:0x7eb94394;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 234*FLEN/8, x13, x9, x10)

inst_100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x086888 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x33d732 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f086888; op2val:0x7f33d732;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 237*FLEN/8, x13, x9, x10)

inst_101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x38b31c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb5708e; op2val:0x7f38b31c;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 240*FLEN/8, x13, x9, x10)

inst_102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f285b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7cdbb5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f285b; op2val:0x7efcdbb5;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 243*FLEN/8, x13, x9, x10)

inst_103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2ccc93 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f23991a; op2val:0x7e2ccc93;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 246*FLEN/8, x13, x9, x10)

inst_104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1aa55e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x000f00 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9aa55e; op2val:0x7f000f00;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 249*FLEN/8, x13, x9, x10)

inst_105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c668 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x0e9cab and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef3c668; op2val:0x7c0e9cab;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 252*FLEN/8, x13, x9, x10)

inst_106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x089f67 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x299412 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f089f67; op2val:0x7f299412;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 255*FLEN/8, x13, x9, x10)

inst_107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1caf77 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x529595 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1caf77; op2val:0x7c529595;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 258*FLEN/8, x13, x9, x10)

inst_108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0e98 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x68dfdd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0e98; op2val:0x7ee8dfdd;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 261*FLEN/8, x13, x9, x10)

inst_109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29dbc6 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1a4d72 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f29dbc6; op2val:0x7d9a4d72;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 264*FLEN/8, x13, x9, x10)

inst_110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x13439e and fs2 == 0 and fe2 == 0xfc and fm2 == 0x193ec6 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f13439e; op2val:0x7e193ec6;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 267*FLEN/8, x13, x9, x10)

inst_111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x611c80 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x131155 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee11c80; op2val:0x7e131155;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 270*FLEN/8, x13, x9, x10)

inst_112:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x53c5ea and fs2 == 0 and fe2 == 0xfd and fm2 == 0x6b21de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd3c5ea; op2val:0x7eeb21de;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 273*FLEN/8, x13, x9, x10)

inst_113:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x42d5b3 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x59615d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e42d5b3; op2val:0x7ed9615d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 276*FLEN/8, x13, x9, x10)

inst_114:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d7025 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x399f35 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1d7025; op2val:0x7f399f35;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 279*FLEN/8, x13, x9, x10)

inst_115:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x1549ed and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3a6708 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b1549ed; op2val:0x7eba6708;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 282*FLEN/8, x13, x9, x10)

inst_116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7cd38d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x10e584 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efcd38d; op2val:0x7f10e584;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 285*FLEN/8, x13, x9, x10)

inst_117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x018fe2 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x009916 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f018fe2; op2val:0x7e809916;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 288*FLEN/8, x13, x9, x10)

inst_118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x411d26 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x292182 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec11d26; op2val:0x7ca92182;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 291*FLEN/8, x13, x9, x10)

inst_119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x10c2a0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0566bc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f10c2a0; op2val:0x7e0566bc;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 294*FLEN/8, x13, x9, x10)

inst_120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1699a5 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1b5313 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1699a5; op2val:0x7e9b5313;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 297*FLEN/8, x13, x9, x10)

inst_121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x172f60 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x25e482 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f172f60; op2val:0x7f25e482;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 300*FLEN/8, x13, x9, x10)

inst_122:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x79b52d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x128f0a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df9b52d; op2val:0x7e928f0a;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 303*FLEN/8, x13, x9, x10)

inst_123:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x626bbf and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x7f98a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e626bbf; op2val:0x7bff98a2;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 306*FLEN/8, x13, x9, x10)

inst_124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x39a5be and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0cb873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f39a5be; op2val:0x7e8cb873;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 309*FLEN/8, x13, x9, x10)

inst_125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x12d07b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2a090e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e92d07b; op2val:0x7eaa090e;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 312*FLEN/8, x13, x9, x10)

inst_126:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cdfe3 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x793db5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6cdfe3; op2val:0x7ef93db5;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 315*FLEN/8, x13, x9, x10)

inst_127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4ecf80 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2f9f7c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ececf80; op2val:0x7f2f9f7c;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 318*FLEN/8, x13, x9, x10)

inst_128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x699a1d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1e4774; op2val:0x7e699a1d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 321*FLEN/8, x13, x9, x10)

inst_129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7ae8c2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18cd2c; op2val:0x7efae8c2;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 324*FLEN/8, x13, x9, x10)

inst_130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x216a51 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0ec4f4 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f216a51; op2val:0x7d8ec4f4;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 327*FLEN/8, x13, x9, x10)

inst_131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16313a and fs2 == 0 and fe2 == 0xfd and fm2 == 0x4bb2ed and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96313a; op2val:0x7ecbb2ed;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 330*FLEN/8, x13, x9, x10)

inst_132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x717980 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1930a7; op2val:0x7ef17980;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 333*FLEN/8, x13, x9, x10)

inst_133:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x32e0b8 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2fb1d5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e32e0b8; op2val:0x7eafb1d5;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 336*FLEN/8, x13, x9, x10)

inst_134:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x551c11 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x37e38d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e551c11; op2val:0x7f37e38d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 339*FLEN/8, x13, x9, x10)

inst_135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x119e42 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1d2ca1; op2val:0x7e919e42;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 342*FLEN/8, x13, x9, x10)

inst_136:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x748650 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x6dba7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e748650; op2val:0x7d6dba7a;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 345*FLEN/8, x13, x9, x10)

inst_137:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7fbd5a and fs2 == 0 and fe2 == 0xfd and fm2 == 0x29bb3f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dffbd5a; op2val:0x7ea9bb3f;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 348*FLEN/8, x13, x9, x10)

inst_138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bc20f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x30f97b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2bc20f; op2val:0x7f30f97b;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 351*FLEN/8, x13, x9, x10)

inst_139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x759d39 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x327dc5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef59d39; op2val:0x7f327dc5;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 354*FLEN/8, x13, x9, x10)

inst_140:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x18ea60 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36a99d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d98ea60; op2val:0x7e36a99d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 357*FLEN/8, x13, x9, x10)

inst_141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024430 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0f88e2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f024430; op2val:0x7e8f88e2;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 360*FLEN/8, x13, x9, x10)

inst_142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18a8a3 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x33137e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18a8a3; op2val:0x7e33137e;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 363*FLEN/8, x13, x9, x10)

inst_143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x730941 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x19b32b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef30941; op2val:0x7e99b32b;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 366*FLEN/8, x13, x9, x10)

inst_144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x036cdc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x28b006 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e836cdc; op2val:0x7f28b006;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 369*FLEN/8, x13, x9, x10)

inst_145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x410035 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x047a0e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec10035; op2val:0x7f047a0e;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 372*FLEN/8, x13, x9, x10)

inst_146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e924d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x10317f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0e924d; op2val:0x7f10317f;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 375*FLEN/8, x13, x9, x10)

inst_147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33a12d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x10adb7 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f33a12d; op2val:0x7f10adb7;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 378*FLEN/8, x13, x9, x10)

inst_148:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ff410 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x6f08e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5ff410; op2val:0x7eef08e1;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 381*FLEN/8, x13, x9, x10)

inst_149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1841 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x17bf8e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8d1841; op2val:0x7e97bf8e;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 384*FLEN/8, x13, x9, x10)

inst_150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37e179 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x07eff5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f37e179; op2val:0x7e87eff5;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 387*FLEN/8, x13, x9, x10)

inst_151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b9082 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0f3193 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2b9082; op2val:0x7e0f3193;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 390*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_1)

inst_152:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x432858 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x2c36a0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc32858; op2val:0x7cac36a0;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 393*FLEN/8, x13, x9, x10)

inst_153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x09ec51 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x30300d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e89ec51; op2val:0x7f30300d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 396*FLEN/8, x13, x9, x10)

inst_154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12383d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x27969b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f12383d; op2val:0x7ea7969b;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 399*FLEN/8, x13, x9, x10)

inst_155:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x35d6d3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2009a6 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e35d6d3; op2val:0x7f2009a6;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 402*FLEN/8, x13, x9, x10)

inst_156:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5a9d1e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x74eae1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5a9d1e; op2val:0x7ef4eae1;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 405*FLEN/8, x13, x9, x10)

inst_157:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x72f50a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x31d379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e72f50a; op2val:0x7f31d379;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 408*FLEN/8, x13, x9, x10)

inst_158:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a6b4b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1ceffb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dda6b4b; op2val:0x7e1ceffb;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 411*FLEN/8, x13, x9, x10)

inst_159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x216ec2 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4022a5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea16ec2; op2val:0x7e4022a5;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 414*FLEN/8, x13, x9, x10)

inst_160:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d4c36 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x38634d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3d4c36; op2val:0x7e38634d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 417*FLEN/8, x13, x9, x10)

inst_161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01332c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0f26a6 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e81332c; op2val:0x7e8f26a6;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 420*FLEN/8, x13, x9, x10)

inst_162:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3d81ae and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5d3fc5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3d81ae; op2val:0x7ddd3fc5;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 423*FLEN/8, x13, x9, x10)

inst_163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2508d5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1587bf and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea508d5; op2val:0x7f1587bf;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 426*FLEN/8, x13, x9, x10)

inst_164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48d404 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x224fd2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec8d404; op2val:0x7f224fd2;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 429*FLEN/8, x13, x9, x10)

inst_165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x137d83 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x6a6268 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f137d83; op2val:0x7eea6268;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 432*FLEN/8, x13, x9, x10)

inst_166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f7dce and fs2 == 0 and fe2 == 0xfd and fm2 == 0x16a4ee and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3f7dce; op2val:0x7e96a4ee;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 435*FLEN/8, x13, x9, x10)

inst_167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6de1eb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x73550a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eede1eb; op2val:0x7e73550a;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 438*FLEN/8, x13, x9, x10)

inst_168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x61cace and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5742e; op2val:0x7ee1cace;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 441*FLEN/8, x13, x9, x10)

inst_169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3ddfe3 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3d1b74; op2val:0x7f3ddfe3;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 444*FLEN/8, x13, x9, x10)

inst_170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e8ea8 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1e2094 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eae8ea8; op2val:0x7e9e2094;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 447*FLEN/8, x13, x9, x10)

inst_171:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x264755 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d0dcb9f; op2val:0x7da64755;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 450*FLEN/8, x13, x9, x10)

inst_172:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x33fa51 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc4ee6c; op2val:0x7f33fa51;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 453*FLEN/8, x13, x9, x10)

inst_173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2fb283 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x6d93e5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2fb283; op2val:0x7d6d93e5;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 456*FLEN/8, x13, x9, x10)

inst_174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x5962c2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1933be; op2val:0x7bd962c2;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 459*FLEN/8, x13, x9, x10)

inst_175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06a56e and fs2 == 0 and fe2 == 0xfc and fm2 == 0x04f85c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e86a56e; op2val:0x7e04f85c;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 462*FLEN/8, x13, x9, x10)

inst_176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x009841 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0d3190 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f009841; op2val:0x7d8d3190;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 465*FLEN/8, x13, x9, x10)

inst_177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x795ad3 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x18e211 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef95ad3; op2val:0x7d18e211;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 468*FLEN/8, x13, x9, x10)

inst_178:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x38e1d6 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e397e0b; op2val:0x7eb8e1d6;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 471*FLEN/8, x13, x9, x10)

inst_179:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54f0ed and fs2 == 0 and fe2 == 0xfd and fm2 == 0x40d43a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd4f0ed; op2val:0x7ec0d43a;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 474*FLEN/8, x13, x9, x10)

inst_180:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x194c56 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x305db9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e194c56; op2val:0x7f305db9;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 477*FLEN/8, x13, x9, x10)

inst_181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48c9ad and fs2 == 0 and fe2 == 0xfe and fm2 == 0x02ea14 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec8c9ad; op2val:0x7f02ea14;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 480*FLEN/8, x13, x9, x10)

inst_182:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56fcf2 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3cf7ae and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd6fcf2; op2val:0x7ebcf7ae;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 483*FLEN/8, x13, x9, x10)

inst_183:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x263fe8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db2f9b7; op2val:0x7da63fe8;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 486*FLEN/8, x13, x9, x10)

inst_184:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x254961 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d234c07; op2val:0x7e254961;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 489*FLEN/8, x13, x9, x10)

inst_185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f1cb5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x24da2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef1cb5; op2val:0x7f24da2f;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 492*FLEN/8, x13, x9, x10)

inst_186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09c6b9 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x42b8bf and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f09c6b9; op2val:0x7ec2b8bf;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 495*FLEN/8, x13, x9, x10)

inst_187:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7a5ced and fs2 == 0 and fe2 == 0xfb and fm2 == 0x21f6d5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfa5ced; op2val:0x7da1f6d5;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 498*FLEN/8, x13, x9, x10)

inst_188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70d18f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x218584 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef0d18f; op2val:0x7e218584;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 501*FLEN/8, x13, x9, x10)

inst_189:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6465ff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x257396 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6465ff; op2val:0x7ea57396;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 504*FLEN/8, x13, x9, x10)

inst_190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18e44f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x192a82 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98e44f; op2val:0x7f192a82;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 507*FLEN/8, x13, x9, x10)

inst_191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x57fc56 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x358c26 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed7fc56; op2val:0x7eb58c26;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 510*FLEN/8, x13, x9, x10)

inst_192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12f2b3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3d7b70 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f12f2b3; op2val:0x7f3d7b70;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 513*FLEN/8, x13, x9, x10)

inst_193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06fe3b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0637ff and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f06fe3b; op2val:0x7f0637ff;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 516*FLEN/8, x13, x9, x10)

inst_194:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x3c1961 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x53dcbf and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cbc1961; op2val:0x7ed3dcbf;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 519*FLEN/8, x13, x9, x10)

inst_195:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x15418a and fs2 == 0 and fe2 == 0xfd and fm2 == 0x5ea2f9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e15418a; op2val:0x7edea2f9;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 522*FLEN/8, x13, x9, x10)

inst_196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x702a82 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0e808c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef02a82; op2val:0x7f0e808c;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 525*FLEN/8, x13, x9, x10)

inst_197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x367531 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x12d0cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb67531; op2val:0x7d12d0cc;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 528*FLEN/8, x13, x9, x10)

inst_198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e081d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x20694d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1e081d; op2val:0x7f20694d;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 531*FLEN/8, x13, x9, x10)

inst_199:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x6a8329 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x16707e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cea8329; op2val:0x7e16707e;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 534*FLEN/8, x13, x9, x10)

inst_200:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x025d06 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x206a70 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d825d06; op2val:0x7f206a70;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 537*FLEN/8, x13, x9, x10)

inst_201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x009696 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6ca617 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f009696; op2val:0x7e6ca617;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 540*FLEN/8, x13, x9, x10)

inst_202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x5f2ead and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee90309; op2val:0x7edf2ead;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 543*FLEN/8, x13, x9, x10)

inst_203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f015e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3648af and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3f015e; op2val:0x7f3648af;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 546*FLEN/8, x13, x9, x10)

inst_204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad2f1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4e0246 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaad2f1; op2val:0x7e4e0246;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 549*FLEN/8, x13, x9, x10)

inst_205:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x289f06 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3284ec and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ca89f06; op2val:0x7eb284ec;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 552*FLEN/8, x13, x9, x10)

inst_206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x573c68 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3557bf and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed73c68; op2val:0x7e3557bf;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 555*FLEN/8, x13, x9, x10)

inst_207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fbf4a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x018006 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3fbf4a; op2val:0x7f018006;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 558*FLEN/8, x13, x9, x10)

inst_208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x489656 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x23f501 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec89656; op2val:0x7f23f501;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 561*FLEN/8, x13, x9, x10)

inst_209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09a812 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x43d400 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f09a812; op2val:0x7cc3d400;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 564*FLEN/8, x13, x9, x10)

inst_210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3746a3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x1bb7c9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3746a3; op2val:0x7c9bb7c9;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 567*FLEN/8, x13, x9, x10)

inst_211:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71556c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0d1c84 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df1556c; op2val:0x7e0d1c84;
op3val:0xff7fffff; valaddr_reg:x12; val_offset:570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 570*FLEN/8, x13, x9, x10)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2134347518,64,FLEN)
NAN_BOXED(2134244253,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2105695494,64,FLEN)
NAN_BOXED(2105695494,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130744982,64,FLEN)
NAN_BOXED(2130744982,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129199881,64,FLEN)
NAN_BOXED(2128555693,64,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(2124767371,64,FLEN)
NAN_BOXED(2123832768,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134835550,64,FLEN)
NAN_BOXED(2134835550,64,FLEN)
NAN_BOXED(2134835550,32,FLEN)
NAN_BOXED(2125124337,64,FLEN)
NAN_BOXED(2119041606,64,FLEN)
NAN_BOXED(2119041606,32,FLEN)
NAN_BOXED(2091425542,64,FLEN)
NAN_BOXED(2125628652,64,FLEN)
NAN_BOXED(2125628652,32,FLEN)
NAN_BOXED(2123492604,64,FLEN)
NAN_BOXED(2133539131,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2128034920,64,FLEN)
NAN_BOXED(2128034920,64,FLEN)
NAN_BOXED(2128034920,32,FLEN)
NAN_BOXED(2121905586,64,FLEN)
NAN_BOXED(2110912409,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134884170,64,FLEN)
NAN_BOXED(2130804742,64,FLEN)
NAN_BOXED(2134884170,32,FLEN)
NAN_BOXED(2133561555,64,FLEN)
NAN_BOXED(2132343383,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133725411,64,FLEN)
NAN_BOXED(2131917144,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122832556,64,FLEN)
NAN_BOXED(2134661365,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2113377377,64,FLEN)
NAN_BOXED(2131805390,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2125540895,64,FLEN)
NAN_BOXED(2127276054,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133954904,64,FLEN)
NAN_BOXED(2126533293,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122836009,64,FLEN)
NAN_BOXED(2133426658,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2125530966,64,FLEN)
NAN_BOXED(2128215981,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131424995,64,FLEN)
NAN_BOXED(2126175120,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
test_dataset_1:
NAN_BOXED(2121881644,32,FLEN)
NAN_BOXED(2131120472,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133742358,32,FLEN)
NAN_BOXED(2119036410,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2121121429,32,FLEN)
NAN_BOXED(2134364221,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(2126958764,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2128725328,32,FLEN)
NAN_BOXED(2121236246,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126811390,32,FLEN)
NAN_BOXED(2134072205,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2103938457,32,FLEN)
NAN_BOXED(2132640844,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133738749,32,FLEN)
NAN_BOXED(2115174222,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2100593119,32,FLEN)
NAN_BOXED(2130360231,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2116946590,32,FLEN)
NAN_BOXED(2133334051,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2133062913,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2116134359,32,FLEN)
NAN_BOXED(2133398106,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131339282,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2114191661,32,FLEN)
NAN_BOXED(2130783172,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134328995,32,FLEN)
NAN_BOXED(2090579913,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2088888832,32,FLEN)
NAN_BOXED(2118409909,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2112968044,32,FLEN)
NAN_BOXED(2114788484,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2123632298,32,FLEN)
NAN_BOXED(2097452847,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2112394446,32,FLEN)
NAN_BOXED(2094978609,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129412223,32,FLEN)
NAN_BOXED(2131660127,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122415478,32,FLEN)
NAN_BOXED(2092780873,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131955955,32,FLEN)
NAN_BOXED(2131628507,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131826254,32,FLEN)
NAN_BOXED(2133169902,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2125827101,32,FLEN)
NAN_BOXED(2116891781,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2121460805,32,FLEN)
NAN_BOXED(2107424598,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133324889,32,FLEN)
NAN_BOXED(2109990240,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2123818190,32,FLEN)
NAN_BOXED(2126884649,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134394036,32,FLEN)
NAN_BOXED(2118581357,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2124492709,32,FLEN)
NAN_BOXED(2086508441,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2111302176,32,FLEN)
NAN_BOXED(2100194915,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2113375400,32,FLEN)
NAN_BOXED(2106802785,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126719976,32,FLEN)
NAN_BOXED(2134692690,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134831846,32,FLEN)
NAN_BOXED(2117241399,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2118162816,32,FLEN)
NAN_BOXED(2128808190,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132386763,32,FLEN)
NAN_BOXED(2131245378,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2124574785,32,FLEN)
NAN_BOXED(2127171218,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2094668734,32,FLEN)
NAN_BOXED(2124215152,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131424953,32,FLEN)
NAN_BOXED(2117663765,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2114688891,32,FLEN)
NAN_BOXED(2117193663,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2127033975,32,FLEN)
NAN_BOXED(2125616302,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130079603,32,FLEN)
NAN_BOXED(2116233553,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134436635,32,FLEN)
NAN_BOXED(2131489898,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126801568,32,FLEN)
NAN_BOXED(2128552479,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2124448942,32,FLEN)
NAN_BOXED(2127142897,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2106592886,32,FLEN)
NAN_BOXED(2132417563,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126995555,32,FLEN)
NAN_BOXED(2133912352,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2120115684,32,FLEN)
NAN_BOXED(2134693382,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2087331372,32,FLEN)
NAN_BOXED(2130941027,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2120938183,32,FLEN)
NAN_BOXED(2132895166,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2084647260,32,FLEN)
NAN_BOXED(2125289658,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126156356,32,FLEN)
NAN_BOXED(2116022016,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2103619142,32,FLEN)
NAN_BOXED(2119852882,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134086249,32,FLEN)
NAN_BOXED(2104174583,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2115222359,32,FLEN)
NAN_BOXED(2128312811,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2125586638,32,FLEN)
NAN_BOXED(2131800060,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2109405690,32,FLEN)
NAN_BOXED(2109409779,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133014190,32,FLEN)
NAN_BOXED(2130060296,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131033409,32,FLEN)
NAN_BOXED(2090307743,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132097412,32,FLEN)
NAN_BOXED(2131421790,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122928127,32,FLEN)
NAN_BOXED(2125430895,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2119076926,32,FLEN)
NAN_BOXED(2127174082,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134330689,32,FLEN)
NAN_BOXED(2132438888,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132837208,32,FLEN)
NAN_BOXED(2120477211,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126230005,32,FLEN)
NAN_BOXED(2118596905,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130863385,32,FLEN)
NAN_BOXED(2133876237,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132608799,32,FLEN)
NAN_BOXED(2106810372,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134872399,32,FLEN)
NAN_BOXED(2111899277,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2102219939,32,FLEN)
NAN_BOXED(2105824077,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134757756,32,FLEN)
NAN_BOXED(2130238734,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2120458028,32,FLEN)
NAN_BOXED(2117202432,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130888032,32,FLEN)
NAN_BOXED(2124973132,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2108433361,32,FLEN)
NAN_BOXED(2127541239,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131827702,32,FLEN)
NAN_BOXED(2106831224,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131319196,32,FLEN)
NAN_BOXED(2118488953,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2125529174,32,FLEN)
NAN_BOXED(2131166520,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134839494,32,FLEN)
NAN_BOXED(2132167925,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(2125031955,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(2133413655,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126768101,32,FLEN)
NAN_BOXED(2126070676,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131257480,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(2134422300,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131699803,32,FLEN)
NAN_BOXED(2130500533,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2116865171,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2124064094,32,FLEN)
NAN_BOXED(2130710272,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129905256,32,FLEN)
NAN_BOXED(2081332395,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131271527,32,FLEN)
NAN_BOXED(2133431314,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132586359,32,FLEN)
NAN_BOXED(2085787029,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131496600,32,FLEN)
NAN_BOXED(2129190877,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133449670,32,FLEN)
NAN_BOXED(2107264370,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131968926,32,FLEN)
NAN_BOXED(2115583686,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2128682112,32,FLEN)
NAN_BOXED(2115178837,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2111030762,32,FLEN)
NAN_BOXED(2129338846,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2118309299,32,FLEN)
NAN_BOXED(2128175453,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2115858469,32,FLEN)
NAN_BOXED(2134482741,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2064992749,32,FLEN)
NAN_BOXED(2126145288,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130498445,32,FLEN)
NAN_BOXED(2131813764,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130808802,32,FLEN)
NAN_BOXED(2122357014,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126585126,32,FLEN)
NAN_BOXED(2091458946,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131804832,32,FLEN)
NAN_BOXED(2114283196,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132187557,32,FLEN)
NAN_BOXED(2124108563,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132225888,32,FLEN)
NAN_BOXED(2133189762,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2113516845,32,FLEN)
NAN_BOXED(2123534090,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2120379327,32,FLEN)
NAN_BOXED(2080348322,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134484414,32,FLEN)
NAN_BOXED(2123151475,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2123550843,32,FLEN)
NAN_BOXED(2125072654,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2121064419,32,FLEN)
NAN_BOXED(2130263477,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2127482752,32,FLEN)
NAN_BOXED(2133827452,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2130372802,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132896337,32,FLEN)
NAN_BOXED(2106508532,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2123772218,32,FLEN)
NAN_BOXED(2127278829,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2129754496,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2117263544,32,FLEN)
NAN_BOXED(2125443541,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2119506961,32,FLEN)
NAN_BOXED(2134369165,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2123472450,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2121565776,32,FLEN)
NAN_BOXED(2104343162,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2113912154,32,FLEN)
NAN_BOXED(2125052735,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133574159,32,FLEN)
NAN_BOXED(2133916027,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130025785,32,FLEN)
NAN_BOXED(2134015429,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2107173472,32,FLEN)
NAN_BOXED(2117511581,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130854960,32,FLEN)
NAN_BOXED(2123335906,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132322467,32,FLEN)
NAN_BOXED(2117276542,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129856833,32,FLEN)
NAN_BOXED(2124002091,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122542300,32,FLEN)
NAN_BOXED(2133372934,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126577717,32,FLEN)
NAN_BOXED(2130999822,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131661389,32,FLEN)
NAN_BOXED(2131767679,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134090029,32,FLEN)
NAN_BOXED(2131799479,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2120217616,32,FLEN)
NAN_BOXED(2129594593,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2123176001,32,FLEN)
NAN_BOXED(2123874190,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134368633,32,FLEN)
NAN_BOXED(2122838005,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133561474,32,FLEN)
NAN_BOXED(2114924947,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2109941848,32,FLEN)
NAN_BOXED(2091660960,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122968145,32,FLEN)
NAN_BOXED(2133864461,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131900477,32,FLEN)
NAN_BOXED(2124912283,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2117457619,32,FLEN)
NAN_BOXED(2132806054,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2119867678,32,FLEN)
NAN_BOXED(2129980129,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2121463050,32,FLEN)
NAN_BOXED(2133971833,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2111466315,32,FLEN)
NAN_BOXED(2115825659,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2124508866,32,FLEN)
NAN_BOXED(2118132389,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2117946422,32,FLEN)
NAN_BOXED(2117624653,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122396460,32,FLEN)
NAN_BOXED(2123310758,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2101182894,32,FLEN)
NAN_BOXED(2111651781,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2124744917,32,FLEN)
NAN_BOXED(2132117439,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2127090692,32,FLEN)
NAN_BOXED(2132955090,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131983747,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134867406,32,FLEN)
NAN_BOXED(2123801838,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129519083,32,FLEN)
NAN_BOXED(2121487626,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(2134761443,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2125369000,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(2134112849,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133832323,32,FLEN)
NAN_BOXED(2104333285,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(2077844162,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122753390,32,FLEN)
NAN_BOXED(2114254940,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130745409,32,FLEN)
NAN_BOXED(2106405264,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130270931,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2111107309,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2115587158,32,FLEN)
NAN_BOXED(2133876153,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2127088045,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2111241458,32,FLEN)
NAN_BOXED(2126313390,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(2116372833,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129599669,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131347129,32,FLEN)
NAN_BOXED(2126690495,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2113559789,32,FLEN)
NAN_BOXED(2107766485,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129711503,32,FLEN)
NAN_BOXED(2116126084,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2120508927,32,FLEN)
NAN_BOXED(2124772246,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2123949135,32,FLEN)
NAN_BOXED(2132355714,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2128084054,32,FLEN)
NAN_BOXED(2125827110,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131948211,32,FLEN)
NAN_BOXED(2134735728,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131164731,32,FLEN)
NAN_BOXED(2131113983,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2092702049,32,FLEN)
NAN_BOXED(2127813823,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2115322250,32,FLEN)
NAN_BOXED(2128519929,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129668738,32,FLEN)
NAN_BOXED(2131656844,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2125886769,32,FLEN)
NAN_BOXED(2098385100,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132674589,32,FLEN)
NAN_BOXED(2132830541,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2095743785,32,FLEN)
NAN_BOXED(2115399806,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2105695494,32,FLEN)
NAN_BOXED(2132830832,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130744982,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(2128555693,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134835550,32,FLEN)
NAN_BOXED(2134263983,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2125124337,32,FLEN)
NAN_BOXED(2119041606,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2091425542,32,FLEN)
NAN_BOXED(2125628652,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2128034920,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134884170,32,FLEN)
NAN_BOXED(2130804742,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2127074902,32,FLEN)
NAN_BOXED(2133062913,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131339282,32,FLEN)
NAN_BOXED(2093208576,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134328995,32,FLEN)
NAN_BOXED(2090579913,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2112968044,32,FLEN)
NAN_BOXED(2114788484,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 120*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
