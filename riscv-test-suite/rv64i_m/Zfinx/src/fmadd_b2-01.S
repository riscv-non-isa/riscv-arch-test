
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 04:35:29 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fmadd_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fmadd_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x30, rs2==x29, rs3==x28, rd==x31,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000050 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4ccccd and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000021 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x50; op2val:0xbecccccd;
op3val:0x21; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==x31, rs2==x31, rs3==x31, rd==x30,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6d2308 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x31; op3:x31; dest:x30; op1val:0x5f; op2val:0x5f;
op3val:0x5f; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x30, x31, x31, x31, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x28, rs2==x30, rs3==x29, rd==x29,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02e05c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x28; op2:x30; op3:x29; dest:x29; op1val:0x59; op2val:0xbf82e05c;
op3val:0x5f; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x29, x28, x30, x29, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==x27, rs2==x28, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000054 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x36db6e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000044 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x27; op2:x28; op3:x27; dest:x27; op1val:0x54; op2val:0xbf36db6e;
op3val:0x54; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x27, x27, x28, x27, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x26, rs2==x27, rs3==x30, rd==x26,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000004 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x300000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x26; op2:x27; op3:x30; dest:x26; op1val:0x4; op2val:0xc1300000;
op3val:0x3c; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x26, x26, x27, x30, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x29, rs2==x26, rs3==x26, rd==x28,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000020 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x500000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000054 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x29; op2:x26; op3:x26; dest:x28; op1val:0x20; op2val:0xbfd00000;
op3val:0xbfd00000; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x28, x29, x26, x26, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==x24, rs2==x25, rs3==x25, rd==x25,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x449249 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000015 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x24; op2:x25; op3:x25; dest:x25; op1val:0x7; op2val:0x40c49249;
op3val:0x40c49249; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x25, x24, x25, x25, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x25, rs2==x24, rs3==x23, rd==x24,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2aaaab and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000030 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x25; op2:x24; op3:x23; dest:x24; op1val:0xf; op2val:0x40aaaaab;
op3val:0x30; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x24, x25, x24, x23, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rd != rs3, rs1==x23, rs2==x23, rs3==x24, rd==x23,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6b0432 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x23; op2:x23; op3:x24; dest:x23; op1val:0x3d; op2val:0x3d;
op3val:0x20; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x23, x23, x23, x24, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x21, rs2==x20, rs3==x21, rd==x22,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000031 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x105398 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000046 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x21; op2:x20; op3:x21; dest:x22; op1val:0x31; op2val:0x41105398;
op3val:0x31; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x22, x21, x20, x21, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000e and fs2 == 0 and fe2 == 0x85 and fm2 == 0x07b6db and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0xe; op2val:0xe;
op3val:0xe; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x19, x19, x19, x19, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x22, rs2==x22, rs3==x20, rd==x21,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000020 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x7fc000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000002 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x22; op2:x22; op3:x20; dest:x21; op1val:0x20; op2val:0x20;
op3val:0x2; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x21, x22, x22, x20, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x18, rs2==x21, rs3==x22, rd==x20,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005e and fs2 == 0 and fe2 == 0x84 and fm2 == 0x2d1b3c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x18; op2:x21; op3:x22; dest:x20; op1val:0x5e; op2val:0x422d1b3c;
op3val:0x1c; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x20, x18, x21, x22, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x20, rs2==x17, rs3==x16, rd==x18,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000035 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x19e305 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000024 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x20; op2:x17; op3:x16; dest:x18; op1val:0x35; op2val:0x4319e305;
op3val:0x24; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x18, x20, x17, x16, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x18, rs3==x15, rd==x17,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000018 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x29a2ab and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000063 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x16; op2:x18; op3:x15; dest:x17; op1val:0x18; op2val:0x4429a2ab;
op3val:0x63; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x17, x16, x18, x15, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x17, rs2==x15, rs3==x18, rd==x16,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000032 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x23bc29 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000015 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x17; op2:x15; op3:x18; dest:x16; op1val:0x32; op2val:0x4423bc29;
op3val:0x15; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x16, x17, x15, x18, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rs3==x17, rd==x15,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000062 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x27287d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x14; op2:x16; op3:x17; dest:x15; op1val:0x62; op2val:0x4427287d;
op3val:0xa; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x15, x14, x16, x17, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x15, rs2==x13, rs3==x12, rd==x14,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000012 and fs2 == 0 and fe2 == 0x8b and fm2 == 0x636aab and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000050 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x15; op2:x13; op3:x12; dest:x14; op1val:0x12; op2val:0x45e36aab;
op3val:0x50; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x14, x15, x13, x12, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x14, rs3==x11, rd==x13,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000050 and fs2 == 0 and fe2 == 0x8a and fm2 == 0x4cc166 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000039 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x12; op2:x14; op3:x11; dest:x13; op1val:0x50; op2val:0x454cc166;
op3val:0x39; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x13, x12, x14, x11, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x13, rs2==x11, rs3==x14, rd==x12,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000011 and fs2 == 0 and fe2 == 0x8d and fm2 == 0x70eef1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000011 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x13; op2:x11; op3:x14; dest:x12; op1val:0x11; op2val:0x46f0eef1;
op3val:0x11; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x12, x13, x11, x14, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x12, rs3==x13, rd==x11,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x92 and fm2 == 0x7ffff0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x10; op2:x12; op3:x13; dest:x11; op1val:0x1; op2val:0x497ffff0;
op3val:0x1; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x11, x10, x12, x13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x12,test_dataset_1)

inst_21:
// rs1==x11, rs2==x9, rs3==x8, rd==x10,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001b and fs2 == 0 and fe2 == 0x8f and fm2 == 0x17b3a1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x11; op2:x9; op3:x8; dest:x10; op1val:0x1b; op2val:0x4797b3a1;
op3val:0x1c; valaddr_reg:x12; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x10, x11, x9, x8, dyn, 0, 0, x12, 0*FLEN/8, x13, x1, x2)

inst_22:
// rs1==x8, rs2==x10, rs3==x7, rd==x9,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000016 and fs2 == 0 and fe2 == 0x90 and fm2 == 0x3a2e4c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000016 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x8; op2:x10; op3:x7; dest:x9; op1val:0x16; op2val:0x483a2e4c;
op3val:0x16; valaddr_reg:x12; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x9, x8, x10, x7, dyn, 0, 0, x12, 3*FLEN/8, x13, x1, x2)

inst_23:
// rs1==x9, rs2==x7, rs3==x10, rd==x8,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0d7943 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000029 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x9; op2:x7; op3:x10; dest:x8; op1val:0x26; op2val:0xbf8d7943;
op3val:0x29; valaddr_reg:x12; val_offset:6*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x8, x9, x7, x10, dyn, 0, 0, x12, 6*FLEN/8, x13, x1, x10)
RVTEST_SIGBASE(x9,signature_x9_0)

inst_24:
// rs1==x6, rs2==x8, rs3==x9, rd==x7,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x313b14 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000046 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x6; op2:x8; op3:x9; dest:x7; op1val:0x1a; op2val:0xc0313b14;
op3val:0x46; valaddr_reg:x12; val_offset:9*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x7, x6, x8, x9, dyn, 0, 0, x12, 9*FLEN/8, x13, x9, x10)

inst_25:
// rs1==x7, rs2==x5, rs3==x4, rd==x6,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000057 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a1d6d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000051 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x7; op2:x5; op3:x4; dest:x6; op1val:0x57; op2val:0xbf7a1d6d;
op3val:0x51; valaddr_reg:x12; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x6, x7, x5, x4, dyn, 0, 0, x12, 12*FLEN/8, x13, x9, x10)

inst_26:
// rs1==x4, rs2==x6, rs3==x3, rd==x5,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x17b426 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000018 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x4; op2:x6; op3:x3; dest:x5; op1val:0x1b; op2val:0xbf97b426;
op3val:0x18; valaddr_reg:x12; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x5, x4, x6, x3, dyn, 0, 0, x12, 15*FLEN/8, x13, x9, x10)

inst_27:
// rs1==x5, rs2==x3, rs3==x6, rd==x4,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x719e34 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x5; op2:x3; op3:x6; dest:x4; op1val:0x59; op2val:0xbef19e34;
op3val:0x1a; valaddr_reg:x12; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x4, x5, x3, x6, dyn, 0, 0, x12, 18*FLEN/8, x13, x9, x10)

inst_28:
// rs1==x2, rs2==x4, rs3==x5, rd==x3,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000032 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35c28f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000027 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x2; op2:x4; op3:x5; dest:x3; op1val:0x32; op2val:0xbfb5c28f;
op3val:0x27; valaddr_reg:x12; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x3, x2, x4, x5, dyn, 0, 0, x12, 21*FLEN/8, x13, x9, x10)

inst_29:
// rs1==x3, rs2==x1, rs3==x0, rd==x2,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x140000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x3; op2:x1; op3:x0; dest:x2; op1val:0x3; op2val:0xc2140000;
op3val:0x0; valaddr_reg:x12; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x2, x3, x1, x0, dyn, 0, 0, x12, 24*FLEN/8, x13, x9, x10)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000036 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x31c71c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000016 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x36; op2val:0xc031c71c;
op3val:0x16; valaddr_reg:x12; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x1, x30, x29, dyn, 0, 0, x12, 27*FLEN/8, x13, x9, x10)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000013 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7435e5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000022 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0xc17435e5;
op3val:0x22; valaddr_reg:x12; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x0, x30, x29, dyn, 0, 0, x12, 30*FLEN/8, x13, x9, x10)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000009 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x76aaab and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x9; op2val:0xc276aaab;
op3val:0x2b; valaddr_reg:x12; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x2, x29, dyn, 0, 0, x12, 33*FLEN/8, x13, x9, x10)

inst_33:
// rs2==x0,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000027 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x620d21 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x27; op2val:0x0;
op3val:0x4e; valaddr_reg:x12; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x0, x29, dyn, 0, 0, x12, 36*FLEN/8, x13, x9, x10)

inst_34:
// rs3==x2,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004c and fs2 == 1 and fe2 == 0x83 and fm2 == 0x57af28 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x2; dest:x31; op1val:0x4c; op2val:0xc1d7af28;
op3val:0x1; valaddr_reg:x12; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x2, dyn, 0, 0, x12, 39*FLEN/8, x13, x9, x10)

inst_35:
// rs3==x1,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004d and fs2 == 1 and fe2 == 0x84 and fm2 == 0x594c78 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000057 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x4d; op2val:0xc2594c78;
op3val:0x57; valaddr_reg:x12; val_offset:42*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x1, dyn, 0, 0, x12, 42*FLEN/8, x13, x9, x10)

inst_36:
// rd==x1,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005b and fs2 == 1 and fe2 == 0x85 and fm2 == 0x3502d0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x5b; op2val:0xc2b502d0;
op3val:0x2c; valaddr_reg:x12; val_offset:45*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x1, x31, x30, x29, dyn, 0, 0, x12, 45*FLEN/8, x13, x9, x10)

inst_37:
// rd==x0,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000009 and fs2 == 1 and fe2 == 0x89 and fm2 == 0x641c72 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000028 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x9; op2val:0xc4e41c72;
op3val:0x28; valaddr_reg:x12; val_offset:48*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x0, x31, x30, x29, dyn, 0, 0, x12, 48*FLEN/8, x13, x9, x10)

inst_38:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002e and fs2 == 1 and fe2 == 0x88 and fm2 == 0x324dea and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000028 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2e; op2val:0xc4324dea;
op3val:0x28; valaddr_reg:x12; val_offset:51*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 51*FLEN/8, x13, x9, x10)

inst_39:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003e and fs2 == 1 and fe2 == 0x89 and fm2 == 0x044f7c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e; op2val:0xc4844f7c;
op3val:0x5a; valaddr_reg:x12; val_offset:54*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 54*FLEN/8, x13, x9, x10)

inst_40:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000029 and fs2 == 1 and fe2 == 0x8a and fm2 == 0x47d76a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000018 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x29; op2val:0xc547d76a;
op3val:0x18; valaddr_reg:x12; val_offset:57*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57*FLEN/8, x13, x9, x10)

inst_41:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003e and fs2 == 1 and fe2 == 0x8b and fm2 == 0x0428e7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e; op2val:0xc58428e7;
op3val:0x3d; valaddr_reg:x12; val_offset:60*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 60*FLEN/8, x13, x9, x10)

inst_42:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005b and fs2 == 1 and fe2 == 0x8b and fm2 == 0x340d46 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000017 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5b; op2val:0xc5b40d46;
op3val:0x17; valaddr_reg:x12; val_offset:63*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 63*FLEN/8, x13, x9, x10)

inst_43:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000008 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x000108 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000021 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x8; op2val:0xc8000108;
op3val:0x21; valaddr_reg:x12; val_offset:66*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 66*FLEN/8, x13, x9, x10)

inst_44:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x92 and fm2 == 0x2aacab and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000060 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3; op2val:0xc92aacab;
op3val:0x60; valaddr_reg:x12; val_offset:69*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 69*FLEN/8, x13, x9, x10)

inst_45:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002e and fs2 == 1 and fe2 == 0x8f and fm2 == 0x3216d3 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000034 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2e; op2val:0xc7b216d3;
op3val:0x34; valaddr_reg:x12; val_offset:72*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 72*FLEN/8, x13, x9, x10)

inst_46:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x0bfffd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000047 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800003; op2val:0xb70bfffd;
op3val:0x3f800047; valaddr_reg:x12; val_offset:75*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 75*FLEN/8, x13, x9, x10)

inst_47:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000036 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x33ffb4 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800036; op2val:0xb6b3ffb4;
op3val:0x3f80002f; valaddr_reg:x12; val_offset:78*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 78*FLEN/8, x13, x9, x10)

inst_48:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x0dffca and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00004b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800031; op2val:0xb70dffca;
op3val:0x3f80004b; valaddr_reg:x12; val_offset:81*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 81*FLEN/8, x13, x9, x10)

inst_49:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000002 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x47fffd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00003a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800002; op2val:0xb6c7fffd;
op3val:0x3f80003a; valaddr_reg:x12; val_offset:84*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 84*FLEN/8, x13, x9, x10)

inst_50:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000006 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x15fff9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00005b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800006; op2val:0xb715fff9;
op3val:0x3f80005b; valaddr_reg:x12; val_offset:87*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 87*FLEN/8, x13, x9, x10)

inst_51:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000018 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x3fffdc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000050 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800018; op2val:0xb6bfffdc;
op3val:0x3f800050; valaddr_reg:x12; val_offset:90*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 90*FLEN/8, x13, x9, x10)

inst_52:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00001a and fs2 == 0 and fe2 == 0x6d and fm2 == 0x3fffd9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000010 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80001a; op2val:0x36bfffd9;
op3val:0x3f800010; valaddr_reg:x12; val_offset:93*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93*FLEN/8, x13, x9, x10)

inst_53:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000061 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x3fff6f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800061; op2val:0x373fff6f;
op3val:0x3f800020; valaddr_reg:x12; val_offset:96*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 96*FLEN/8, x13, x9, x10)

inst_54:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00003c and fs2 == 0 and fe2 == 0x6f and fm2 == 0x52ff9d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80003c; op2val:0x37d2ff9d;
op3val:0x3f80002d; valaddr_reg:x12; val_offset:99*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 99*FLEN/8, x13, x9, x10)

inst_55:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000042 and fs2 == 0 and fe2 == 0x70 and fm2 == 0x68ff88 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800042; op2val:0x3868ff88;
op3val:0x3f80002e; valaddr_reg:x12; val_offset:102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 102*FLEN/8, x13, x9, x10)

inst_56:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000044 and fs2 == 0 and fe2 == 0x71 and fm2 == 0x77bf7c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000021 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800044; op2val:0x38f7bf7c;
op3val:0x3f800021; valaddr_reg:x12; val_offset:105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 105*FLEN/8, x13, x9, x10)

inst_57:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00003c and fs2 == 0 and fe2 == 0x72 and fm2 == 0x7e3f89 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80003c; op2val:0x397e3f89;
op3val:0x3f80000e; valaddr_reg:x12; val_offset:108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108*FLEN/8, x13, x9, x10)

inst_58:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004c and fs2 == 0 and fe2 == 0x73 and fm2 == 0x79ff6c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000060 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80004c; op2val:0x39f9ff6c;
op3val:0x3f800060; valaddr_reg:x12; val_offset:111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 111*FLEN/8, x13, x9, x10)

inst_59:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000030 and fs2 == 0 and fe2 == 0x74 and fm2 == 0x7ecfa0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000026 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800030; op2val:0x3a7ecfa0;
op3val:0x3f800026; valaddr_reg:x12; val_offset:114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 114*FLEN/8, x13, x9, x10)

inst_60:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000005 and fs2 == 0 and fe2 == 0x75 and fm2 == 0x7f1ff6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000038 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800005; op2val:0x3aff1ff6;
op3val:0x3f800038; valaddr_reg:x12; val_offset:117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 117*FLEN/8, x13, x9, x10)

inst_61:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00000c and fs2 == 0 and fe2 == 0x76 and fm2 == 0x7fc9e8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00001b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80000c; op2val:0x3b7fc9e8;
op3val:0x3f80001b; valaddr_reg:x12; val_offset:120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 120*FLEN/8, x13, x9, x10)

inst_62:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00002c and fs2 == 0 and fe2 == 0x77 and fm2 == 0x7fbda8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000042 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80002c; op2val:0x3bffbda8;
op3val:0x3f800042; valaddr_reg:x12; val_offset:123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 123*FLEN/8, x13, x9, x10)

inst_63:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004f and fs2 == 0 and fe2 == 0x78 and fm2 == 0x7fe7e2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80004f; op2val:0x3c7fe7e2;
op3val:0x3f80002f; valaddr_reg:x12; val_offset:126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 126*FLEN/8, x13, x9, x10)

inst_64:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000013 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x7ff4da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800013; op2val:0x3cfff4da;
op3val:0x3f80002c; valaddr_reg:x12; val_offset:129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 129*FLEN/8, x13, x9, x10)

inst_65:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000024 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7ff478 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00005a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800024; op2val:0x3d7ff478;
op3val:0x3f80005a; valaddr_reg:x12; val_offset:132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 132*FLEN/8, x13, x9, x10)

inst_66:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000046 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ffeb4 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800046; op2val:0x3dfffeb4;
op3val:0x3f80000c; valaddr_reg:x12; val_offset:135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 135*FLEN/8, x13, x9, x10)

inst_67:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000028 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ffcf0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000058 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800028; op2val:0x3e7ffcf0;
op3val:0x3f800058; valaddr_reg:x12; val_offset:138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 138*FLEN/8, x13, x9, x10)

inst_68:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000029 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fff0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000028 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800029; op2val:0x3effff0e;
op3val:0x3f800028; valaddr_reg:x12; val_offset:141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 141*FLEN/8, x13, x9, x10)

inst_69:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000017 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffde and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800017; op2val:0xbfffffde;
op3val:0x3f80000b; valaddr_reg:x12; val_offset:144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 144*FLEN/8, x13, x9, x10)

inst_70:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000051 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fff74 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000014 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800051; op2val:0xbfffff74;
op3val:0x3f800014; valaddr_reg:x12; val_offset:147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 147*FLEN/8, x13, x9, x10)

inst_71:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00005d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffa3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000059 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80005d; op2val:0xbfffffa3;
op3val:0x3f800059; valaddr_reg:x12; val_offset:150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 150*FLEN/8, x13, x9, x10)

inst_72:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000028 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ffff6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00003e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800028; op2val:0xbffffff6;
op3val:0x3f80003e; valaddr_reg:x12; val_offset:153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 153*FLEN/8, x13, x9, x10)

inst_73:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000015 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000021 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00005d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800015; op2val:0xc0000021;
op3val:0x3f80005d; valaddr_reg:x12; val_offset:156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 156*FLEN/8, x13, x9, x10)

inst_74:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00000e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800007; op2val:0xc000000e;
op3val:0x3f80000b; valaddr_reg:x12; val_offset:159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 159*FLEN/8, x13, x9, x10)

inst_75:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffeb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000045 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80004d; op2val:0xbfffffeb;
op3val:0x3f800045; valaddr_reg:x12; val_offset:162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 162*FLEN/8, x13, x9, x10)

inst_76:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000034 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00000e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000005 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800034; op2val:0xc000000e;
op3val:0x3f800005; valaddr_reg:x12; val_offset:165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 165*FLEN/8, x13, x9, x10)

inst_77:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000090 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00005f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80001f; op2val:0xc0000090;
op3val:0x3f80005f; valaddr_reg:x12; val_offset:168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 168*FLEN/8, x13, x9, x10)

inst_78:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0000c9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80004d; op2val:0xc00000c9;
op3val:0x3f80002d; valaddr_reg:x12; val_offset:171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 171*FLEN/8, x13, x9, x10)

inst_79:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000021 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0001fc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00003b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800021; op2val:0xc00001fc;
op3val:0x3f80003b; valaddr_reg:x12; val_offset:174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 174*FLEN/8, x13, x9, x10)

inst_80:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000054 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0003c7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000036 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800054; op2val:0xc00003c7;
op3val:0x3f800036; valaddr_reg:x12; val_offset:177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 177*FLEN/8, x13, x9, x10)

inst_81:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000013 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0007f1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000008 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800013; op2val:0xc00007f1;
op3val:0x3f800008; valaddr_reg:x12; val_offset:180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 180*FLEN/8, x13, x9, x10)

inst_82:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000052 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000fb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000005 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800052; op2val:0xc0000fb0;
op3val:0x3f800005; valaddr_reg:x12; val_offset:183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 183*FLEN/8, x13, x9, x10)

inst_83:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000040 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x001fd5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800040; op2val:0xc0001fd5;
op3val:0x3f80002b; valaddr_reg:x12; val_offset:186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 186*FLEN/8, x13, x9, x10)

inst_84:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00001b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x003fed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000011 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80001b; op2val:0xc0003fed;
op3val:0x3f800011; valaddr_reg:x12; val_offset:189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 189*FLEN/8, x13, x9, x10)

inst_85:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00005e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x007fc6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000049 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f80005e; op2val:0xc0007fc6;
op3val:0x3f800049; valaddr_reg:x12; val_offset:192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 192*FLEN/8, x13, x9, x10)

inst_86:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000011 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x010017 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000051 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800011; op2val:0xc0010017;
op3val:0x3f800051; valaddr_reg:x12; val_offset:195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 195*FLEN/8, x13, x9, x10)

inst_87:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000035 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x01ffd1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800035; op2val:0xc001ffd1;
op3val:0x3f80000e; valaddr_reg:x12; val_offset:198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 198*FLEN/8, x13, x9, x10)

inst_88:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000016 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x040005 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000038 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800016; op2val:0xc0040005;
op3val:0x3f800038; valaddr_reg:x12; val_offset:201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 201*FLEN/8, x13, x9, x10)

inst_89:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000030 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x07ffd7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000014 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800030; op2val:0xc007ffd7;
op3val:0x3f800014; valaddr_reg:x12; val_offset:204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 204*FLEN/8, x13, x9, x10)

inst_90:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000008 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x100012 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000036 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800008; op2val:0xc0100012;
op3val:0x3f800036; valaddr_reg:x12; val_offset:207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 207*FLEN/8, x13, x9, x10)

inst_91:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1fffda and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000013 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f800026; op2val:0xc01fffda;
op3val:0x3f800013; valaddr_reg:x12; val_offset:210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 210*FLEN/8, x13, x9, x10)

inst_92:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c02d9 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000050 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b; op2val:0xbfac02d9;
op3val:0x50; valaddr_reg:x12; val_offset:213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 213*FLEN/8, x13, x9, x10)

inst_93:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000016 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3a2e8c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000043 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x16; op2val:0xc03a2e8c;
op3val:0x43; valaddr_reg:x12; val_offset:216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 216*FLEN/8, x13, x9, x10)

inst_94:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ba938 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b; op2val:0xbf7ba938;
op3val:0x3f; valaddr_reg:x12; val_offset:219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 219*FLEN/8, x13, x9, x10)

inst_95:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x747e90 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x59; op2val:0xbf747e90;
op3val:0x5e; valaddr_reg:x12; val_offset:222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 222*FLEN/8, x13, x9, x10)

inst_96:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000029 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0c7ce1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x29; op2val:0xbf8c7ce1;
op3val:0x3e; valaddr_reg:x12; val_offset:225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 225*FLEN/8, x13, x9, x10)

inst_97:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000024 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0e38e4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000026 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x24; op2val:0xbe0e38e4;
op3val:0x26; valaddr_reg:x12; val_offset:228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 228*FLEN/8, x13, x9, x10)

inst_98:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5a3ac1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000034 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d; op2val:0x3e5a3ac1;
op3val:0x34; valaddr_reg:x12; val_offset:231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 231*FLEN/8, x13, x9, x10)

inst_99:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000013 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x400000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x13; op2val:0x40c00000;
op3val:0xf; valaddr_reg:x12; val_offset:234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 234*FLEN/8, x13, x9, x10)

inst_100:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000031 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x758d10 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000045 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x31; op2val:0x40758d10;
op3val:0x45; valaddr_reg:x12; val_offset:237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 237*FLEN/8, x13, x9, x10)

inst_101:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000017 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x1642c8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000051 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x17; op2val:0x419642c8;
op3val:0x51; valaddr_reg:x12; val_offset:240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 240*FLEN/8, x13, x9, x10)

inst_102:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000040 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x754000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x40; op2val:0x41754000;
op3val:0x2c; valaddr_reg:x12; val_offset:243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 243*FLEN/8, x13, x9, x10)

inst_103:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000018 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x29c000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x18; op2val:0x42a9c000;
op3val:0xc; valaddr_reg:x12; val_offset:246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 246*FLEN/8, x13, x9, x10)

inst_104:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x85 and fm2 == 0x00f3cf and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000023 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f; op2val:0x4280f3cf;
op3val:0x23; valaddr_reg:x12; val_offset:249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 249*FLEN/8, x13, x9, x10)

inst_105:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000042 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x761f08 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000047 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x42; op2val:0x42f61f08;
op3val:0x47; valaddr_reg:x12; val_offset:252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 252*FLEN/8, x13, x9, x10)

inst_106:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000041 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7b5a96 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x41; op2val:0x437b5a96;
op3val:0x2f; valaddr_reg:x12; val_offset:255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 255*FLEN/8, x13, x9, x10)

inst_107:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000009 and fs2 == 0 and fe2 == 0x8a and fm2 == 0x633e39 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x9; op2val:0x45633e39;
op3val:0x2e; valaddr_reg:x12; val_offset:258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 258*FLEN/8, x13, x9, x10)

inst_108:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x37e114 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x59; op2val:0x4437e114;
op3val:0x4c; valaddr_reg:x12; val_offset:261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 261*FLEN/8, x13, x9, x10)

inst_109:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000055 and fs2 == 0 and fe2 == 0x89 and fm2 == 0x40bf3f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000005 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x55; op2val:0x44c0bf3f;
op3val:0x5; valaddr_reg:x12; val_offset:264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 264*FLEN/8, x13, x9, x10)

inst_110:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000062 and fs2 == 0 and fe2 == 0x8a and fm2 == 0x2728a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000028 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x62; op2val:0x452728a7;
op3val:0x28; valaddr_reg:x12; val_offset:267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 267*FLEN/8, x13, x9, x10)

inst_111:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002f and fs2 == 0 and fe2 == 0x8c and fm2 == 0x2e4636 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000048 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2f; op2val:0x462e4636;
op3val:0x48; valaddr_reg:x12; val_offset:270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 270*FLEN/8, x13, x9, x10)

inst_112:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005b and fs2 == 0 and fe2 == 0x8c and fm2 == 0x340784 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000056 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5b; op2val:0x46340784;
op3val:0x56; valaddr_reg:x12; val_offset:273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 273*FLEN/8, x13, x9, x10)

inst_113:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000024 and fs2 == 0 and fe2 == 0x8e and fm2 == 0x638c80 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x24; op2val:0x47638c80;
op3val:0x3f; valaddr_reg:x12; val_offset:276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 276*FLEN/8, x13, x9, x10)

inst_114:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000022 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x70ef80 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000063 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x22; op2val:0x47f0ef80;
op3val:0x63; valaddr_reg:x12; val_offset:279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 279*FLEN/8, x13, x9, x10)

inst_115:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x055748 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x59; op2val:0xbf855748;
op3val:0x5c; valaddr_reg:x12; val_offset:282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 282*FLEN/8, x13, x9, x10)

inst_116:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1e50d8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x26; op2val:0xbf9e50d8;
op3val:0x2c; valaddr_reg:x12; val_offset:285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 285*FLEN/8, x13, x9, x10)

inst_117:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000054 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2aaaab and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000017 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54; op2val:0xbeaaaaab;
op3val:0x17; valaddr_reg:x12; val_offset:288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 288*FLEN/8, x13, x9, x10)

inst_118:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x162fc9 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000002 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4b; op2val:0xbe162fc9;
op3val:0x2; valaddr_reg:x12; val_offset:291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 291*FLEN/8, x13, x9, x10)

inst_119:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x38a7de and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000047 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d; op2val:0xbfb8a7de;
op3val:0x47; valaddr_reg:x12; val_offset:294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 294*FLEN/8, x13, x9, x10)

inst_120:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000021 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x11745d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x21; op2val:0xc011745d;
op3val:0x2a; valaddr_reg:x12; val_offset:297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 297*FLEN/8, x13, x9, x10)

inst_121:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000056 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x165359 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000024 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x56; op2val:0xbf965359;
op3val:0x24; valaddr_reg:x12; val_offset:300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 300*FLEN/8, x13, x9, x10)

inst_122:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x311111 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000025 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c; op2val:0xc0311111;
op3val:0x25; valaddr_reg:x12; val_offset:303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 303*FLEN/8, x13, x9, x10)

inst_123:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000041 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x276276 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000053 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x41; op2val:0xc0a76276;
op3val:0x53; valaddr_reg:x12; val_offset:306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 306*FLEN/8, x13, x9, x10)

inst_124:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000057 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4d9bf4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x57; op2val:0xc0cd9bf4;
op3val:0x2e; valaddr_reg:x12; val_offset:309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 309*FLEN/8, x13, x9, x10)

inst_125:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3c9f4a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000024 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2d; op2val:0xc1bc9f4a;
op3val:0x24; valaddr_reg:x12; val_offset:312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 312*FLEN/8, x13, x9, x10)

inst_126:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000053 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x49d4d2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53; op2val:0xc1c9d4d2;
op3val:0x2d; valaddr_reg:x12; val_offset:315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 315*FLEN/8, x13, x9, x10)

inst_127:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x2ebca2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000035 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f; op2val:0xc22ebca2;
op3val:0x35; valaddr_reg:x12; val_offset:318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 318*FLEN/8, x13, x9, x10)

inst_128:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002d and fs2 == 1 and fe2 == 0x86 and fm2 == 0x3693e9 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000017 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2d; op2val:0xc33693e9;
op3val:0x17; valaddr_reg:x12; val_offset:321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 321*FLEN/8, x13, x9, x10)

inst_129:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x38c0b8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x59; op2val:0xc338c0b8;
op3val:0x3a; valaddr_reg:x12; val_offset:324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 324*FLEN/8, x13, x9, x10)

inst_130:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002f and fs2 == 1 and fe2 == 0x88 and fm2 == 0x2e882c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2f; op2val:0xc42e882c;
op3val:0x2b; valaddr_reg:x12; val_offset:327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 327*FLEN/8, x13, x9, x10)

inst_131:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000043 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x749ca8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000013 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x43; op2val:0xc4749ca8;
op3val:0x13; valaddr_reg:x12; val_offset:330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 330*FLEN/8, x13, x9, x10)

inst_132:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000044 and fs2 == 1 and fe2 == 0x89 and fm2 == 0x70fbc4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000016 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x44; op2val:0xc4f0fbc4;
op3val:0x16; valaddr_reg:x12; val_offset:333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 333*FLEN/8, x13, x9, x10)

inst_133:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001a and fs2 == 1 and fe2 == 0x8c and fm2 == 0x1d913b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1a; op2val:0xc61d913b;
op3val:0x2f; valaddr_reg:x12; val_offset:336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 336*FLEN/8, x13, x9, x10)

inst_134:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003e and fs2 == 1 and fe2 == 0x8c and fm2 == 0x04237c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000025 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e; op2val:0xc604237c;
op3val:0x25; valaddr_reg:x12; val_offset:339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 339*FLEN/8, x13, x9, x10)

inst_135:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 1 and fe2 == 0x8c and fm2 == 0x38178d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x59; op2val:0xc638178d;
op3val:0xb; valaddr_reg:x12; val_offset:342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 342*FLEN/8, x13, x9, x10)

inst_136:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005d and fs2 == 1 and fe2 == 0x8d and fm2 == 0x302dea and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000056 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5d; op2val:0xc6b02dea;
op3val:0x56; valaddr_reg:x12; val_offset:345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 345*FLEN/8, x13, x9, x10)

inst_137:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005e and fs2 == 1 and fe2 == 0x8e and fm2 == 0x2e4cd7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000036 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5e; op2val:0xc72e4cd7;
op3val:0x36; valaddr_reg:x12; val_offset:348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 348*FLEN/8, x13, x9, x10)

inst_138:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000016 and fs2 == 0 and fe2 == 0x91 and fm2 == 0x3a2e16 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x16; op2val:0x48ba2e16;
op3val:0x4f; valaddr_reg:x12; val_offset:351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 351*FLEN/8, x13, x9, x10)

inst_139:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004b and fs2 == 0 and fe2 == 0x8f and fm2 == 0x5a7396 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000043 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4b; op2val:0x47da7396;
op3val:0x43; valaddr_reg:x12; val_offset:354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 354*FLEN/8, x13, x9, x10)

inst_140:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000056 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x3e82a2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000036 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x56; op2val:0x47be82a2;
op3val:0x36; valaddr_reg:x12; val_offset:357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 357*FLEN/8, x13, x9, x10)

inst_141:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000027 and fs2 == 0 and fe2 == 0x90 and fm2 == 0x520c8f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000050 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x27; op2val:0x48520c8f;
op3val:0x50; valaddr_reg:x12; val_offset:360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 360*FLEN/8, x13, x9, x10)

inst_142:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000047 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x66c202 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000052 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x47; op2val:0x47e6c202;
op3val:0x52; valaddr_reg:x12; val_offset:363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 363*FLEN/8, x13, x9, x10)

inst_143:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000023 and fs2 == 0 and fe2 == 0x90 and fm2 == 0x6a0dbb and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x23; op2val:0x486a0dbb;
op3val:0x5d; valaddr_reg:x12; val_offset:366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 366*FLEN/8, x13, x9, x10)

inst_144:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000004 and fs2 == 0 and fe2 == 0x93 and fm2 == 0x7fff4a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4; op2val:0x49ffff4a;
op3val:0x1a; valaddr_reg:x12; val_offset:369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 369*FLEN/8, x13, x9, x10)

inst_145:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000015 and fs2 == 0 and fe2 == 0x91 and fm2 == 0x430af8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x15; op2val:0x48c30af8;
op3val:0x4c; valaddr_reg:x12; val_offset:372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 372*FLEN/8, x13, x9, x10)

inst_146:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000039 and fs2 == 0 and fe2 == 0x90 and fm2 == 0x0fb6aa and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000050 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39; op2val:0x480fb6aa;
op3val:0x50; valaddr_reg:x12; val_offset:375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 375*FLEN/8, x13, x9, x10)

inst_147:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000054 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x4308fe and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000018 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54; op2val:0x47c308fe;
op3val:0x18; valaddr_reg:x12; val_offset:378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 378*FLEN/8, x13, x9, x10)

inst_148:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001d and fs2 == 0 and fe2 == 0x91 and fm2 == 0x0d38f4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000062 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1d; op2val:0x488d38f4;
op3val:0x62; valaddr_reg:x12; val_offset:381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 381*FLEN/8, x13, x9, x10)

inst_149:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000058 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x3a22c4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000018 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x58; op2val:0x47ba22c4;
op3val:0x18; valaddr_reg:x12; val_offset:384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 384*FLEN/8, x13, x9, x10)

inst_150:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000051 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x4a2bac and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x51; op2val:0x47ca2bac;
op3val:0x5c; valaddr_reg:x12; val_offset:387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 387*FLEN/8, x13, x9, x10)

inst_151:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000006 and fs2 == 0 and fe2 == 0x93 and fm2 == 0x2a7fad and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6; op2val:0x49aa7fad;
op3val:0x3d; valaddr_reg:x12; val_offset:390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 390*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_1)

inst_152:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001d and fs2 == 0 and fe2 == 0x91 and fm2 == 0x0cf713 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000016 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1d; op2val:0x488cf713;
op3val:0x16; valaddr_reg:x12; val_offset:393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 393*FLEN/8, x13, x9, x10)

inst_153:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x93 and fm2 == 0x11b6c6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000012 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7; op2val:0x4991b6c6;
op3val:0x12; valaddr_reg:x12; val_offset:396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 396*FLEN/8, x13, x9, x10)

inst_154:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x92 and fm2 == 0x07774b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000029 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xf; op2val:0x4907774b;
op3val:0x29; valaddr_reg:x12; val_offset:399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 399*FLEN/8, x13, x9, x10)

inst_155:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000018 and fs2 == 0 and fe2 == 0x91 and fm2 == 0x27ffac and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x18; op2val:0x48a7ffac;
op3val:0x3e; valaddr_reg:x12; val_offset:402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 402*FLEN/8, x13, x9, x10)

inst_156:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000019 and fs2 == 0 and fe2 == 0x91 and fm2 == 0x1eb7f6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000047 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x19; op2val:0x489eb7f6;
op3val:0x47; valaddr_reg:x12; val_offset:405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 405*FLEN/8, x13, x9, x10)

inst_157:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000005 and fs2 == 0 and fe2 == 0x93 and fm2 == 0x3fffa8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000036 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5; op2val:0x49bfffa8;
op3val:0x36; valaddr_reg:x12; val_offset:408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 408*FLEN/8, x13, x9, x10)

inst_158:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003c and fs2 == 0 and fe2 == 0x8f and fm2 == 0x6eee8d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c; op2val:0x47eeee8d;
op3val:0x2d; valaddr_reg:x12; val_offset:411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 411*FLEN/8, x13, x9, x10)

inst_159:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000031 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x7ac5a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000055 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x31; op2val:0x47fac5a7;
op3val:0x55; valaddr_reg:x12; val_offset:414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 414*FLEN/8, x13, x9, x10)

inst_160:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004f and fs2 == 0 and fe2 == 0x8e and fm2 == 0x4f6451 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4f; op2val:0x474f6451;
op3val:0xa; valaddr_reg:x12; val_offset:417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 417*FLEN/8, x13, x9, x10)

inst_161:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004c and fs2 == 1 and fe2 == 0x8f and fm2 == 0x579460 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4c; op2val:0xc7d79460;
op3val:0x1b; valaddr_reg:x12; val_offset:420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 420*FLEN/8, x13, x9, x10)

inst_162:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x91 and fm2 == 0x042164 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1f; op2val:0xc8842164;
op3val:0x5c; valaddr_reg:x12; val_offset:423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 423*FLEN/8, x13, x9, x10)

inst_163:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000030 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x2aaaa5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x30; op2val:0xc82aaaa5;
op3val:0x1; valaddr_reg:x12; val_offset:426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 426*FLEN/8, x13, x9, x10)

inst_164:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002d and fs2 == 1 and fe2 == 0x90 and fm2 == 0x360b9e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000034 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2d; op2val:0xc8360b9e;
op3val:0x34; valaddr_reg:x12; val_offset:429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 429*FLEN/8, x13, x9, x10)

inst_165:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000024 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x638e79 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000035 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x24; op2val:0xc8638e79;
op3val:0x35; valaddr_reg:x12; val_offset:432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 432*FLEN/8, x13, x9, x10)

inst_166:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x92 and fm2 == 0x0888c4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000059 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xf; op2val:0xc90888c4;
op3val:0x59; valaddr_reg:x12; val_offset:435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 435*FLEN/8, x13, x9, x10)

inst_167:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000047 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x66c296 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000030 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x47; op2val:0xc7e6c296;
op3val:0x30; valaddr_reg:x12; val_offset:438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 438*FLEN/8, x13, x9, x10)

inst_168:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000005 and fs2 == 1 and fe2 == 0x93 and fm2 == 0x4ccc70 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000047 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5; op2val:0xc9cccc70;
op3val:0x47; valaddr_reg:x12; val_offset:441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 441*FLEN/8, x13, x9, x10)

inst_169:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004f and fs2 == 1 and fe2 == 0x8f and fm2 == 0x4f6313 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000027 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4f; op2val:0xc7cf6313;
op3val:0x27; valaddr_reg:x12; val_offset:444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 444*FLEN/8, x13, x9, x10)

inst_170:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000d and fs2 == 1 and fe2 == 0x92 and fm2 == 0x1d8790 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000026 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xd; op2val:0xc91d8790;
op3val:0x26; valaddr_reg:x12; val_offset:447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 447*FLEN/8, x13, x9, x10)

inst_171:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000046 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x6a07c7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000042 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x46; op2val:0xc7ea07c7;
op3val:0x42; valaddr_reg:x12; val_offset:450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 450*FLEN/8, x13, x9, x10)

inst_172:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002c and fs2 == 1 and fe2 == 0x90 and fm2 == 0x3a2354 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2c; op2val:0xc83a2354;
op3val:0x4b; valaddr_reg:x12; val_offset:453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 453*FLEN/8, x13, x9, x10)

inst_173:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x57798f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x26; op2val:0xc857798f;
op3val:0x2e; valaddr_reg:x12; val_offset:456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 456*FLEN/8, x13, x9, x10)

inst_174:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000011 and fs2 == 1 and fe2 == 0x91 and fm2 == 0x70b518 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000036 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x11; op2val:0xc8f0b518;
op3val:0x36; valaddr_reg:x12; val_offset:459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 459*FLEN/8, x13, x9, x10)

inst_175:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000035 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x1a43f6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000049 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x35; op2val:0xc81a43f6;
op3val:0x49; valaddr_reg:x12; val_offset:462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 462*FLEN/8, x13, x9, x10)

inst_176:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000053 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x44a0cc and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000045 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53; op2val:0xc7c4a0cc;
op3val:0x45; valaddr_reg:x12; val_offset:465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 465*FLEN/8, x13, x9, x10)

inst_177:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000030 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x2955a4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x30; op2val:0xc82955a4;
op3val:0x3c; valaddr_reg:x12; val_offset:468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 468*FLEN/8, x13, x9, x10)

inst_178:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000013 and fs2 == 1 and fe2 == 0x91 and fm2 == 0x543607 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000015 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x13; op2val:0xc8d43607;
op3val:0x15; valaddr_reg:x12; val_offset:471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 471*FLEN/8, x13, x9, x10)

inst_179:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004d and fs2 == 1 and fe2 == 0x8f and fm2 == 0x4e218f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000031 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4d; op2val:0xc7ce218f;
op3val:0x31; valaddr_reg:x12; val_offset:474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 474*FLEN/8, x13, x9, x10)

inst_180:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000049 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x5269a0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x49; op2val:0xc7d269a0;
op3val:0x3e; valaddr_reg:x12; val_offset:477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 477*FLEN/8, x13, x9, x10)

inst_181:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001a and fs2 == 1 and fe2 == 0x91 and fm2 == 0x09d8b2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000012 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1a; op2val:0xc889d8b2;
op3val:0x12; valaddr_reg:x12; val_offset:480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 480*FLEN/8, x13, x9, x10)

inst_182:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004e and fs2 == 1 and fe2 == 0x8f and fm2 == 0x1d89eb and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4e; op2val:0xc79d89eb;
op3val:0xc; valaddr_reg:x12; val_offset:483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 483*FLEN/8, x13, x9, x10)

inst_183:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002d and fs2 == 1 and fe2 == 0x8f and fm2 == 0x360c50 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000055 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2d; op2val:0xc7b60c50;
op3val:0x55; valaddr_reg:x12; val_offset:486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 486*FLEN/8, x13, x9, x10)

inst_184:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x3fffff and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000031 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800001; op2val:0xb6bfffff;
op3val:0x800031; valaddr_reg:x12; val_offset:489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 489*FLEN/8, x13, x9, x10)

inst_185:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00000e and fs2 == 1 and fe2 == 0x6d and fm2 == 0x1fffef and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00002a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80000e; op2val:0xb69fffef;
op3val:0x80002a; valaddr_reg:x12; val_offset:492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 492*FLEN/8, x13, x9, x10)

inst_186:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000049 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x15ffaa and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00004f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800049; op2val:0xb715ffaa;
op3val:0x80004f; valaddr_reg:x12; val_offset:495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 495*FLEN/8, x13, x9, x10)

inst_187:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000046 and fs2 == 1 and fe2 == 0x6b and fm2 == 0x2fffa0 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000013 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800046; op2val:0xb5afffa0;
op3val:0x800013; valaddr_reg:x12; val_offset:498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 498*FLEN/8, x13, x9, x10)

inst_188:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00002a and fs2 == 1 and fe2 == 0x6e and fm2 == 0x01ffd5 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000051 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80002a; op2val:0xb701ffd5;
op3val:0x800051; valaddr_reg:x12; val_offset:501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 501*FLEN/8, x13, x9, x10)

inst_189:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000049 and fs2 == 1 and fe2 == 0x6c and fm2 == 0x07ffb2 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000031 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800049; op2val:0xb607ffb2;
op3val:0x800031; valaddr_reg:x12; val_offset:504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 504*FLEN/8, x13, x9, x10)

inst_190:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000037 and fs2 == 0 and fe2 == 0x6a and fm2 == 0x7fff92 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000038 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800037; op2val:0x357fff92;
op3val:0x800038; valaddr_reg:x12; val_offset:507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 507*FLEN/8, x13, x9, x10)

inst_191:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00001d and fs2 == 0 and fe2 == 0x6d and fm2 == 0x7fffc6 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000040 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80001d; op2val:0x36ffffc6;
op3val:0x800040; valaddr_reg:x12; val_offset:510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 510*FLEN/8, x13, x9, x10)

inst_192:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000026 and fs2 == 0 and fe2 == 0x6f and fm2 == 0x41ffc6 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800026; op2val:0x37c1ffc6;
op3val:0x80003e; valaddr_reg:x12; val_offset:513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 513*FLEN/8, x13, x9, x10)

inst_193:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00005b and fs2 == 0 and fe2 == 0x70 and fm2 == 0x677f5b and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000031 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80005b; op2val:0x38677f5b;
op3val:0x800031; valaddr_reg:x12; val_offset:516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 516*FLEN/8, x13, x9, x10)

inst_194:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000032 and fs2 == 0 and fe2 == 0x71 and fm2 == 0x7abf9e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000015 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800032; op2val:0x38fabf9e;
op3val:0x800015; valaddr_reg:x12; val_offset:519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 519*FLEN/8, x13, x9, x10)

inst_195:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004d and fs2 == 0 and fe2 == 0x72 and fm2 == 0x765f6c and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00004d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80004d; op2val:0x39765f6c;
op3val:0x80004d; valaddr_reg:x12; val_offset:522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 522*FLEN/8, x13, x9, x10)

inst_196:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000022 and fs2 == 0 and fe2 == 0x73 and fm2 == 0x7a0fbe and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00005f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800022; op2val:0x39fa0fbe;
op3val:0x80005f; valaddr_reg:x12; val_offset:525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 525*FLEN/8, x13, x9, x10)

inst_197:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000027 and fs2 == 0 and fe2 == 0x74 and fm2 == 0x7dffb3 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000040 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800027; op2val:0x3a7dffb3;
op3val:0x800040; valaddr_reg:x12; val_offset:528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 528*FLEN/8, x13, x9, x10)

inst_198:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000021 and fs2 == 0 and fe2 == 0x75 and fm2 == 0x7f27be and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000036 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800021; op2val:0x3aff27be;
op3val:0x800036; valaddr_reg:x12; val_offset:531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 531*FLEN/8, x13, x9, x10)

inst_199:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x76 and fm2 == 0x7fadfa and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000029 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800003; op2val:0x3b7fadfa;
op3val:0x800029; valaddr_reg:x12; val_offset:534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 534*FLEN/8, x13, x9, x10)

inst_200:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000028 and fs2 == 0 and fe2 == 0x77 and fm2 == 0x7fc0b0 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800028; op2val:0x3bffc0b0;
op3val:0x80003f; valaddr_reg:x12; val_offset:537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 537*FLEN/8, x13, x9, x10)

inst_201:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000025 and fs2 == 0 and fe2 == 0x78 and fm2 == 0x7ff636 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000013 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800025; op2val:0x3c7ff636;
op3val:0x800013; valaddr_reg:x12; val_offset:540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 540*FLEN/8, x13, x9, x10)

inst_202:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003e and fs2 == 0 and fe2 == 0x79 and fm2 == 0x7ffe84 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000004 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80003e; op2val:0x3cfffe84;
op3val:0x800004; valaddr_reg:x12; val_offset:543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 543*FLEN/8, x13, x9, x10)

inst_203:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000010 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7ff540 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000055 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800010; op2val:0x3d7ff540;
op3val:0x800055; valaddr_reg:x12; val_offset:546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 546*FLEN/8, x13, x9, x10)

inst_204:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000050 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ffbd0 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000039 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800050; op2val:0x3dfffbd0;
op3val:0x800039; valaddr_reg:x12; val_offset:549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 549*FLEN/8, x13, x9, x10)

inst_205:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000020 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ffe90 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000026 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800020; op2val:0x3e7ffe90;
op3val:0x800026; valaddr_reg:x12; val_offset:552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 552*FLEN/8, x13, x9, x10)

inst_206:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000006 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fffac and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000012 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800006; op2val:0x3effffac;
op3val:0x800012; valaddr_reg:x12; val_offset:555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 555*FLEN/8, x13, x9, x10)

inst_207:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000033 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fff9d and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000002 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800033; op2val:0xbfffff9d;
op3val:0x800002; valaddr_reg:x12; val_offset:558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 558*FLEN/8, x13, x9, x10)

inst_208:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffcb and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000045 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80003e; op2val:0xbfffffcb;
op3val:0x800045; valaddr_reg:x12; val_offset:561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 561*FLEN/8, x13, x9, x10)

inst_209:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000048 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fff98 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000024 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800048; op2val:0xbfffff98;
op3val:0x800024; valaddr_reg:x12; val_offset:564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 564*FLEN/8, x13, x9, x10)

inst_210:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000020 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000002 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800020; op2val:0xc0000002;
op3val:0x80003d; valaddr_reg:x12; val_offset:567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 567*FLEN/8, x13, x9, x10)

inst_211:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000005 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000013 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800005; op2val:0xc0000013;
op3val:0x800020; valaddr_reg:x12; val_offset:570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 570*FLEN/8, x13, x9, x10)

inst_212:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffc5 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000023 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80003f; op2val:0xbfffffc5;
op3val:0x800023; valaddr_reg:x12; val_offset:573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 573*FLEN/8, x13, x9, x10)

inst_213:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000014 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00003a and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00005d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800014; op2val:0xc000003a;
op3val:0x80005d; valaddr_reg:x12; val_offset:576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 576*FLEN/8, x13, x9, x10)

inst_214:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000025 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00002e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000026 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800025; op2val:0xc000002e;
op3val:0x800026; valaddr_reg:x12; val_offset:579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 579*FLEN/8, x13, x9, x10)

inst_215:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000040 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000067 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00004e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800040; op2val:0xc0000067;
op3val:0x80004e; valaddr_reg:x12; val_offset:582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 582*FLEN/8, x13, x9, x10)

inst_216:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0000e4 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000043 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80003d; op2val:0xc00000e4;
op3val:0x800043; valaddr_reg:x12; val_offset:585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 585*FLEN/8, x13, x9, x10)

inst_217:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000053 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0001d4 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00004e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800053; op2val:0xc00001d4;
op3val:0x80004e; valaddr_reg:x12; val_offset:588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 588*FLEN/8, x13, x9, x10)

inst_218:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000060 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0003a8 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000010 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800060; op2val:0xc00003a8;
op3val:0x800010; valaddr_reg:x12; val_offset:591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 591*FLEN/8, x13, x9, x10)

inst_219:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00082e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000062 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800003; op2val:0xc000082e;
op3val:0x800062; valaddr_reg:x12; val_offset:594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 594*FLEN/8, x13, x9, x10)

inst_220:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000011 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x001002 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000027 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800011; op2val:0xc0001002;
op3val:0x800027; valaddr_reg:x12; val_offset:597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 597*FLEN/8, x13, x9, x10)

inst_221:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000025 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x001ffd and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000045 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800025; op2val:0xc0001ffd;
op3val:0x800045; valaddr_reg:x12; val_offset:600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 600*FLEN/8, x13, x9, x10)

inst_222:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00005b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x003fbb and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00002c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80005b; op2val:0xc0003fbb;
op3val:0x80002c; valaddr_reg:x12; val_offset:603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 603*FLEN/8, x13, x9, x10)

inst_223:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x007fc4 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000026 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80004f; op2val:0xc0007fc4;
op3val:0x800026; valaddr_reg:x12; val_offset:606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 606*FLEN/8, x13, x9, x10)

inst_224:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00005e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00ffc3 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000044 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80005e; op2val:0xc000ffc3;
op3val:0x800044; valaddr_reg:x12; val_offset:609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 609*FLEN/8, x13, x9, x10)

inst_225:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000004 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02001a and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800004; op2val:0xc002001a;
op3val:0x80003c; valaddr_reg:x12; val_offset:612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 612*FLEN/8, x13, x9, x10)

inst_226:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00002d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03ffe9 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00002f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80002d; op2val:0xc003ffe9;
op3val:0x80002f; valaddr_reg:x12; val_offset:615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 615*FLEN/8, x13, x9, x10)

inst_227:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000058 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x07ffd3 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000060 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800058; op2val:0xc007ffd3;
op3val:0x800060; valaddr_reg:x12; val_offset:618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 618*FLEN/8, x13, x9, x10)

inst_228:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0fffb3 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000011 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x80004c; op2val:0xc00fffb3;
op3val:0x800011; valaddr_reg:x12; val_offset:621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 621*FLEN/8, x13, x9, x10)

inst_229:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000005 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ffffa and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x800005; op2val:0xc01ffffa;
op3val:0x800001; valaddr_reg:x12; val_offset:624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 624*FLEN/8, x13, x9, x10)

inst_230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000021 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff2c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000047 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000021; op2val:0x3f7fff2c;
op3val:0x7f000047; valaddr_reg:x12; val_offset:627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 627*FLEN/8, x13, x9, x10)

inst_231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00003b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000058 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00003b; op2val:0x3f7ffed4;
op3val:0x7f000058; valaddr_reg:x12; val_offset:630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 630*FLEN/8, x13, x9, x10)

inst_232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff2a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000058 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00000e; op2val:0x3f7fff2a;
op3val:0x7f000058; valaddr_reg:x12; val_offset:633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 633*FLEN/8, x13, x9, x10)

inst_233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000046 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff30 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000019 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000046; op2val:0x3f7fff30;
op3val:0x7f000019; valaddr_reg:x12; val_offset:636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 636*FLEN/8, x13, x9, x10)

inst_234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000002 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff6c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000037 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000002; op2val:0x3f7fff6c;
op3val:0x7f000037; valaddr_reg:x12; val_offset:639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 639*FLEN/8, x13, x9, x10)

inst_235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000037 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffeb6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00004d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000037; op2val:0x3f7ffeb6;
op3val:0x7f00004d; valaddr_reg:x12; val_offset:642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 642*FLEN/8, x13, x9, x10)

inst_236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00004a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffe38 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000059 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00004a; op2val:0x3f7ffe38;
op3val:0x7f000059; valaddr_reg:x12; val_offset:645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 645*FLEN/8, x13, x9, x10)

inst_237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffda6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000051 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00005b; op2val:0x3f7ffda6;
op3val:0x7f000051; valaddr_reg:x12; val_offset:648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 648*FLEN/8, x13, x9, x10)

inst_238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000054 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffcda and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00003e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000054; op2val:0x3f7ffcda;
op3val:0x7f00003e; valaddr_reg:x12; val_offset:651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 651*FLEN/8, x13, x9, x10)

inst_239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000032 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffb20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00003d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000032; op2val:0x3f7ffb20;
op3val:0x7f00003d; valaddr_reg:x12; val_offset:654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 654*FLEN/8, x13, x9, x10)

inst_240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000033 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ff6e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000058 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000033; op2val:0x3f7ff6e8;
op3val:0x7f000058; valaddr_reg:x12; val_offset:657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 657*FLEN/8, x13, x9, x10)

inst_241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fef10 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00001a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00005d; op2val:0x3f7fef10;
op3val:0x7f00001a; valaddr_reg:x12; val_offset:660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 660*FLEN/8, x13, x9, x10)

inst_242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000026 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fdf3a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00003c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000026; op2val:0x3f7fdf3a;
op3val:0x7f00003c; valaddr_reg:x12; val_offset:663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 663*FLEN/8, x13, x9, x10)

inst_243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000062 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fbf28 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000009 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000062; op2val:0x3f7fbf28;
op3val:0x7f000009; valaddr_reg:x12; val_offset:666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 666*FLEN/8, x13, x9, x10)

inst_244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000027 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7f7fae and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000027; op2val:0x3f7f7fae;
op3val:0x7f000001; valaddr_reg:x12; val_offset:669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 669*FLEN/8, x13, x9, x10)

inst_245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000059 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7efedd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000038 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000059; op2val:0x3f7efedd;
op3val:0x7f000038; valaddr_reg:x12; val_offset:672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 672*FLEN/8, x13, x9, x10)

inst_246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00004b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7dff1f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000025 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00004b; op2val:0x3f7dff1f;
op3val:0x7f000025; valaddr_reg:x12; val_offset:675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 675*FLEN/8, x13, x9, x10)

inst_247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000053 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7bfee1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00003d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000053; op2val:0x3f7bfee1;
op3val:0x7f00003d; valaddr_reg:x12; val_offset:678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 678*FLEN/8, x13, x9, x10)

inst_248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000028 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x77ff8b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000013 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000028; op2val:0x3f77ff8b;
op3val:0x7f000013; valaddr_reg:x12; val_offset:681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 681*FLEN/8, x13, x9, x10)

inst_249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000016 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6fff59 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00003e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000016; op2val:0x3f6fff59;
op3val:0x7f00003e; valaddr_reg:x12; val_offset:684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 684*FLEN/8, x13, x9, x10)

inst_250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000059 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ffed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000047 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000059; op2val:0x3f5ffed4;
op3val:0x7f000047; valaddr_reg:x12; val_offset:687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 687*FLEN/8, x13, x9, x10)

inst_251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000040 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3fff48 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00002b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000040; op2val:0x3f3fff48;
op3val:0x7f00002b; valaddr_reg:x12; val_offset:690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 690*FLEN/8, x13, x9, x10)

inst_252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000045 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fff22 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000014 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000045; op2val:0x3effff22;
op3val:0x7f000014; valaddr_reg:x12; val_offset:693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 693*FLEN/8, x13, x9, x10)

inst_253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000037 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fffd2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00004b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000037; op2val:0xc03fffd2;
op3val:0x7f00004b; valaddr_reg:x12; val_offset:696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 696*FLEN/8, x13, x9, x10)

inst_254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000046 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fff99 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000046; op2val:0xc03fff99;
op3val:0x7f000007; valaddr_reg:x12; val_offset:699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 699*FLEN/8, x13, x9, x10)

inst_255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000009 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x40001f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00005e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000009; op2val:0xc040001f;
op3val:0x7f00005e; valaddr_reg:x12; val_offset:702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 702*FLEN/8, x13, x9, x10)

inst_256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00001e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fffe0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000023 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00001e; op2val:0xc03fffe0;
op3val:0x7f000023; valaddr_reg:x12; val_offset:705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 705*FLEN/8, x13, x9, x10)

inst_257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fffec and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000009 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00000b; op2val:0xc03fffec;
op3val:0x7f000009; valaddr_reg:x12; val_offset:708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 708*FLEN/8, x13, x9, x10)

inst_258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000055 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fff72 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000004 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000055; op2val:0xc03fff72;
op3val:0x7f000004; valaddr_reg:x12; val_offset:711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 711*FLEN/8, x13, x9, x10)

inst_259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00002b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fffce and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00005d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00002b; op2val:0xc03fffce;
op3val:0x7f00005d; valaddr_reg:x12; val_offset:714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 714*FLEN/8, x13, x9, x10)

inst_260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000037 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fff72 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000009 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000037; op2val:0xc03fff72;
op3val:0x7f000009; valaddr_reg:x12; val_offset:717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 717*FLEN/8, x13, x9, x10)

inst_261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000034 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fff5f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00005a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000034; op2val:0xc03fff5f;
op3val:0x7f00005a; valaddr_reg:x12; val_offset:720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 720*FLEN/8, x13, x9, x10)

inst_262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3ffea5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00003f; op2val:0xc03ffea5;
op3val:0x7f000007; valaddr_reg:x12; val_offset:723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 723*FLEN/8, x13, x9, x10)

inst_263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000010 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3ffdf0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000010 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000010; op2val:0xc03ffdf0;
op3val:0x7f000010; valaddr_reg:x12; val_offset:726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 726*FLEN/8, x13, x9, x10)

inst_264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00001d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3ffbfc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00004f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00001d; op2val:0xc03ffbfc;
op3val:0x7f00004f; valaddr_reg:x12; val_offset:729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 729*FLEN/8, x13, x9, x10)

inst_265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000053 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3ff78b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000053; op2val:0xc03ff78b;
op3val:0x7f00000f; valaddr_reg:x12; val_offset:732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 732*FLEN/8, x13, x9, x10)

inst_266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fef7f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000012 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00005c; op2val:0xc03fef7f;
op3val:0x7f000012; valaddr_reg:x12; val_offset:735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 735*FLEN/8, x13, x9, x10)

inst_267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fdff4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00005b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000026; op2val:0xc03fdff4;
op3val:0x7f00005b; valaddr_reg:x12; val_offset:738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 738*FLEN/8, x13, x9, x10)

inst_268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000039 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fbfb4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000014 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000039; op2val:0xc03fbfb4;
op3val:0x7f000014; valaddr_reg:x12; val_offset:741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 741*FLEN/8, x13, x9, x10)

inst_269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000018 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f8003 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00004f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000018; op2val:0xc03f8003;
op3val:0x7f00004f; valaddr_reg:x12; val_offset:744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 744*FLEN/8, x13, x9, x10)

inst_270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000018 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3efff6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000035 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000018; op2val:0xc03efff6;
op3val:0x7f000035; valaddr_reg:x12; val_offset:747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 747*FLEN/8, x13, x9, x10)

inst_271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000015 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3dffe5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000009 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000015; op2val:0xc03dffe5;
op3val:0x7f000009; valaddr_reg:x12; val_offset:750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 750*FLEN/8, x13, x9, x10)

inst_272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000050 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3bff98 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00001c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000050; op2val:0xc03bff98;
op3val:0x7f00001c; valaddr_reg:x12; val_offset:753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 753*FLEN/8, x13, x9, x10)

inst_273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000006 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x38001b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000048 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000006; op2val:0xc038001b;
op3val:0x7f000048; valaddr_reg:x12; val_offset:756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 756*FLEN/8, x13, x9, x10)

inst_274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x300017 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000055 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00000e; op2val:0xc0300017;
op3val:0x7f000055; valaddr_reg:x12; val_offset:759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 759*FLEN/8, x13, x9, x10)

inst_275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ffff2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000060 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f000031; op2val:0xc01ffff2;
op3val:0x7f000060; valaddr_reg:x12; val_offset:762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 762*FLEN/8, x13, x9, x10)

inst_276:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6d2308 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f; op2val:0xbeed2308;
op3val:0x2e; valaddr_reg:x12; val_offset:765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 765*FLEN/8, x13, x9, x10)

inst_277:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000054 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x36db6e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000044 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54; op2val:0xbf36db6e;
op3val:0x44; valaddr_reg:x12; val_offset:768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 768*FLEN/8, x13, x9, x10)

inst_278:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000020 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x500000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000054 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x20; op2val:0xbfd00000;
op3val:0x54; valaddr_reg:x12; val_offset:771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 771*FLEN/8, x13, x9, x10)

inst_279:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x449249 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000015 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7; op2val:0x40c49249;
op3val:0x15; valaddr_reg:x12; val_offset:774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 774*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_2)

inst_280:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6b0432 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d; op2val:0x406b0432;
op3val:0x20; valaddr_reg:x12; val_offset:777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 777*FLEN/8, x13, x9, x10)

inst_281:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000031 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x105398 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000046 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x31; op2val:0x41105398;
op3val:0x46; valaddr_reg:x12; val_offset:780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 780*FLEN/8, x13, x9, x10)

inst_282:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000e and fs2 == 0 and fe2 == 0x85 and fm2 == 0x07b6db and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xe; op2val:0x4287b6db;
op3val:0x4a; valaddr_reg:x12; val_offset:783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 783*FLEN/8, x13, x9, x10)

inst_283:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000020 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x7fc000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000002 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x20; op2val:0x427fc000;
op3val:0x2; valaddr_reg:x12; val_offset:786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 786*FLEN/8, x13, x9, x10)

inst_284:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x140000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3; op2val:0xc2140000;
op3val:0x2f; valaddr_reg:x12; val_offset:789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 789*FLEN/8, x13, x9, x10)

inst_285:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000013 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7435e5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000022 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x13; op2val:0xc17435e5;
op3val:0x22; valaddr_reg:x12; val_offset:792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 792*FLEN/8, x13, x9, x10)

inst_286:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000027 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x620d21 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x27; op2val:0xc1e20d21;
op3val:0x4e; valaddr_reg:x12; val_offset:795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 795*FLEN/8, x13, x9, x10)

inst_287:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000009 and fs2 == 1 and fe2 == 0x89 and fm2 == 0x641c72 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000028 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x9; op2val:0xc4e41c72;
op3val:0x28; valaddr_reg:x12; val_offset:798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 798*FLEN/8, x13, x9, x10)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(80,64,FLEN)
NAN_BOXED(3201092813,32,FLEN)
NAN_BOXED(33,64,FLEN)
NAN_BOXED(95,64,FLEN)
NAN_BOXED(95,32,FLEN)
NAN_BOXED(95,64,FLEN)
NAN_BOXED(89,64,FLEN)
NAN_BOXED(3213025372,32,FLEN)
NAN_BOXED(95,64,FLEN)
NAN_BOXED(84,64,FLEN)
NAN_BOXED(3208043374,32,FLEN)
NAN_BOXED(84,64,FLEN)
NAN_BOXED(4,64,FLEN)
NAN_BOXED(3241148416,32,FLEN)
NAN_BOXED(60,64,FLEN)
NAN_BOXED(32,64,FLEN)
NAN_BOXED(3218079744,32,FLEN)
NAN_BOXED(3218079744,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(1086624329,64,FLEN)
NAN_BOXED(1086624329,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(1084926635,64,FLEN)
NAN_BOXED(48,64,FLEN)
NAN_BOXED(61,64,FLEN)
NAN_BOXED(61,64,FLEN)
NAN_BOXED(32,64,FLEN)
NAN_BOXED(49,64,FLEN)
NAN_BOXED(1091589016,64,FLEN)
NAN_BOXED(49,64,FLEN)
NAN_BOXED(14,64,FLEN)
NAN_BOXED(14,64,FLEN)
NAN_BOXED(14,64,FLEN)
NAN_BOXED(32,64,FLEN)
NAN_BOXED(32,64,FLEN)
NAN_BOXED(2,64,FLEN)
NAN_BOXED(94,64,FLEN)
NAN_BOXED(1110252348,64,FLEN)
NAN_BOXED(28,64,FLEN)
NAN_BOXED(53,64,FLEN)
NAN_BOXED(1125769989,64,FLEN)
NAN_BOXED(36,64,FLEN)
NAN_BOXED(24,64,FLEN)
NAN_BOXED(1143579307,64,FLEN)
NAN_BOXED(99,64,FLEN)
NAN_BOXED(50,64,FLEN)
NAN_BOXED(1143192617,64,FLEN)
NAN_BOXED(21,64,FLEN)
NAN_BOXED(98,64,FLEN)
NAN_BOXED(1143416957,64,FLEN)
NAN_BOXED(10,64,FLEN)
NAN_BOXED(18,64,FLEN)
NAN_BOXED(1172531883,64,FLEN)
NAN_BOXED(80,64,FLEN)
NAN_BOXED(80,64,FLEN)
NAN_BOXED(1162658150,64,FLEN)
NAN_BOXED(57,64,FLEN)
NAN_BOXED(17,64,FLEN)
NAN_BOXED(1190194929,64,FLEN)
NAN_BOXED(17,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(1233125360,64,FLEN)
NAN_BOXED(1,64,FLEN)
test_dataset_1:
NAN_BOXED(27,32,FLEN)
NAN_BOXED(1201124257,32,FLEN)
NAN_BOXED(28,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(1211772492,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(3213719875,32,FLEN)
NAN_BOXED(41,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(3224451860,32,FLEN)
NAN_BOXED(70,32,FLEN)
NAN_BOXED(87,32,FLEN)
NAN_BOXED(3212451181,32,FLEN)
NAN_BOXED(81,32,FLEN)
NAN_BOXED(27,32,FLEN)
NAN_BOXED(3214390310,32,FLEN)
NAN_BOXED(24,32,FLEN)
NAN_BOXED(89,32,FLEN)
NAN_BOXED(3203505716,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(50,32,FLEN)
NAN_BOXED(3216360079,32,FLEN)
NAN_BOXED(39,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(3256090624,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(54,32,FLEN)
NAN_BOXED(3224487708,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3245618661,32,FLEN)
NAN_BOXED(34,32,FLEN)
NAN_BOXED(9,32,FLEN)
NAN_BOXED(3262556843,32,FLEN)
NAN_BOXED(43,32,FLEN)
NAN_BOXED(39,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(78,32,FLEN)
NAN_BOXED(76,32,FLEN)
NAN_BOXED(3252137768,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(77,32,FLEN)
NAN_BOXED(3260632184,32,FLEN)
NAN_BOXED(87,32,FLEN)
NAN_BOXED(91,32,FLEN)
NAN_BOXED(3266642640,32,FLEN)
NAN_BOXED(44,32,FLEN)
NAN_BOXED(9,32,FLEN)
NAN_BOXED(3303283826,32,FLEN)
NAN_BOXED(40,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(3291631082,32,FLEN)
NAN_BOXED(40,32,FLEN)
NAN_BOXED(62,32,FLEN)
NAN_BOXED(3297005436,32,FLEN)
NAN_BOXED(90,32,FLEN)
NAN_BOXED(41,32,FLEN)
NAN_BOXED(3309819754,32,FLEN)
NAN_BOXED(24,32,FLEN)
NAN_BOXED(62,32,FLEN)
NAN_BOXED(3313772775,32,FLEN)
NAN_BOXED(61,32,FLEN)
NAN_BOXED(91,32,FLEN)
NAN_BOXED(3316911430,32,FLEN)
NAN_BOXED(23,32,FLEN)
NAN_BOXED(8,32,FLEN)
NAN_BOXED(3355443464,32,FLEN)
NAN_BOXED(33,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(3375017131,32,FLEN)
NAN_BOXED(96,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(3350337235,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(3071016957,32,FLEN)
NAN_BOXED(1065353287,32,FLEN)
NAN_BOXED(1065353270,32,FLEN)
NAN_BOXED(3065249716,32,FLEN)
NAN_BOXED(1065353263,32,FLEN)
NAN_BOXED(1065353265,32,FLEN)
NAN_BOXED(3071147978,32,FLEN)
NAN_BOXED(1065353291,32,FLEN)
NAN_BOXED(1065353218,32,FLEN)
NAN_BOXED(3066560509,32,FLEN)
NAN_BOXED(1065353274,32,FLEN)
NAN_BOXED(1065353222,32,FLEN)
NAN_BOXED(3071672313,32,FLEN)
NAN_BOXED(1065353307,32,FLEN)
NAN_BOXED(1065353240,32,FLEN)
NAN_BOXED(3066036188,32,FLEN)
NAN_BOXED(1065353296,32,FLEN)
NAN_BOXED(1065353242,32,FLEN)
NAN_BOXED(918552537,32,FLEN)
NAN_BOXED(1065353232,32,FLEN)
NAN_BOXED(1065353313,32,FLEN)
NAN_BOXED(926941039,32,FLEN)
NAN_BOXED(1065353248,32,FLEN)
NAN_BOXED(1065353276,32,FLEN)
NAN_BOXED(936574877,32,FLEN)
NAN_BOXED(1065353261,32,FLEN)
NAN_BOXED(1065353282,32,FLEN)
NAN_BOXED(946405256,32,FLEN)
NAN_BOXED(1065353262,32,FLEN)
NAN_BOXED(1065353284,32,FLEN)
NAN_BOXED(955760508,32,FLEN)
NAN_BOXED(1065353249,32,FLEN)
NAN_BOXED(1065353276,32,FLEN)
NAN_BOXED(964575113,32,FLEN)
NAN_BOXED(1065353230,32,FLEN)
NAN_BOXED(1065353292,32,FLEN)
NAN_BOXED(972685164,32,FLEN)
NAN_BOXED(1065353312,32,FLEN)
NAN_BOXED(1065353264,32,FLEN)
NAN_BOXED(981389216,32,FLEN)
NAN_BOXED(1065353254,32,FLEN)
NAN_BOXED(1065353221,32,FLEN)
NAN_BOXED(989798390,32,FLEN)
NAN_BOXED(1065353272,32,FLEN)
NAN_BOXED(1065353228,32,FLEN)
NAN_BOXED(998230504,32,FLEN)
NAN_BOXED(1065353243,32,FLEN)
NAN_BOXED(1065353260,32,FLEN)
NAN_BOXED(1006615976,32,FLEN)
NAN_BOXED(1065353282,32,FLEN)
NAN_BOXED(1065353295,32,FLEN)
NAN_BOXED(1015015394,32,FLEN)
NAN_BOXED(1065353263,32,FLEN)
NAN_BOXED(1065353235,32,FLEN)
NAN_BOXED(1023407322,32,FLEN)
NAN_BOXED(1065353260,32,FLEN)
NAN_BOXED(1065353252,32,FLEN)
NAN_BOXED(1031795832,32,FLEN)
NAN_BOXED(1065353306,32,FLEN)
NAN_BOXED(1065353286,32,FLEN)
NAN_BOXED(1040187060,32,FLEN)
NAN_BOXED(1065353228,32,FLEN)
NAN_BOXED(1065353256,32,FLEN)
NAN_BOXED(1048575216,32,FLEN)
NAN_BOXED(1065353304,32,FLEN)
NAN_BOXED(1065353257,32,FLEN)
NAN_BOXED(1056964366,32,FLEN)
NAN_BOXED(1065353256,32,FLEN)
NAN_BOXED(1065353239,32,FLEN)
NAN_BOXED(3221225438,32,FLEN)
NAN_BOXED(1065353227,32,FLEN)
NAN_BOXED(1065353297,32,FLEN)
NAN_BOXED(3221225332,32,FLEN)
NAN_BOXED(1065353236,32,FLEN)
NAN_BOXED(1065353309,32,FLEN)
NAN_BOXED(3221225379,32,FLEN)
NAN_BOXED(1065353305,32,FLEN)
NAN_BOXED(1065353256,32,FLEN)
NAN_BOXED(3221225462,32,FLEN)
NAN_BOXED(1065353278,32,FLEN)
NAN_BOXED(1065353237,32,FLEN)
NAN_BOXED(3221225505,32,FLEN)
NAN_BOXED(1065353309,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(3221225486,32,FLEN)
NAN_BOXED(1065353227,32,FLEN)
NAN_BOXED(1065353293,32,FLEN)
NAN_BOXED(3221225451,32,FLEN)
NAN_BOXED(1065353285,32,FLEN)
NAN_BOXED(1065353268,32,FLEN)
NAN_BOXED(3221225486,32,FLEN)
NAN_BOXED(1065353221,32,FLEN)
NAN_BOXED(1065353247,32,FLEN)
NAN_BOXED(3221225616,32,FLEN)
NAN_BOXED(1065353311,32,FLEN)
NAN_BOXED(1065353293,32,FLEN)
NAN_BOXED(3221225673,32,FLEN)
NAN_BOXED(1065353261,32,FLEN)
NAN_BOXED(1065353249,32,FLEN)
NAN_BOXED(3221225980,32,FLEN)
NAN_BOXED(1065353275,32,FLEN)
NAN_BOXED(1065353300,32,FLEN)
NAN_BOXED(3221226439,32,FLEN)
NAN_BOXED(1065353270,32,FLEN)
NAN_BOXED(1065353235,32,FLEN)
NAN_BOXED(3221227505,32,FLEN)
NAN_BOXED(1065353224,32,FLEN)
NAN_BOXED(1065353298,32,FLEN)
NAN_BOXED(3221229488,32,FLEN)
NAN_BOXED(1065353221,32,FLEN)
NAN_BOXED(1065353280,32,FLEN)
NAN_BOXED(3221233621,32,FLEN)
NAN_BOXED(1065353259,32,FLEN)
NAN_BOXED(1065353243,32,FLEN)
NAN_BOXED(3221241837,32,FLEN)
NAN_BOXED(1065353233,32,FLEN)
NAN_BOXED(1065353310,32,FLEN)
NAN_BOXED(3221258182,32,FLEN)
NAN_BOXED(1065353289,32,FLEN)
NAN_BOXED(1065353233,32,FLEN)
NAN_BOXED(3221291031,32,FLEN)
NAN_BOXED(1065353297,32,FLEN)
NAN_BOXED(1065353269,32,FLEN)
NAN_BOXED(3221356497,32,FLEN)
NAN_BOXED(1065353230,32,FLEN)
NAN_BOXED(1065353238,32,FLEN)
NAN_BOXED(3221487621,32,FLEN)
NAN_BOXED(1065353272,32,FLEN)
NAN_BOXED(1065353264,32,FLEN)
NAN_BOXED(3221749719,32,FLEN)
NAN_BOXED(1065353236,32,FLEN)
NAN_BOXED(1065353224,32,FLEN)
NAN_BOXED(3222274066,32,FLEN)
NAN_BOXED(1065353270,32,FLEN)
NAN_BOXED(1065353254,32,FLEN)
NAN_BOXED(3223322586,32,FLEN)
NAN_BOXED(1065353235,32,FLEN)
NAN_BOXED(59,32,FLEN)
NAN_BOXED(3215721177,32,FLEN)
NAN_BOXED(80,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(3225038476,32,FLEN)
NAN_BOXED(67,32,FLEN)
NAN_BOXED(59,32,FLEN)
NAN_BOXED(3212552504,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(89,32,FLEN)
NAN_BOXED(3212082832,32,FLEN)
NAN_BOXED(94,32,FLEN)
NAN_BOXED(41,32,FLEN)
NAN_BOXED(3213655265,32,FLEN)
NAN_BOXED(62,32,FLEN)
NAN_BOXED(36,32,FLEN)
NAN_BOXED(3188603108,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(61,32,FLEN)
NAN_BOXED(1046100673,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(1086324736,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(49,32,FLEN)
NAN_BOXED(1081445648,32,FLEN)
NAN_BOXED(69,32,FLEN)
NAN_BOXED(23,32,FLEN)
NAN_BOXED(1100366536,32,FLEN)
NAN_BOXED(81,32,FLEN)
NAN_BOXED(64,32,FLEN)
NAN_BOXED(1098203136,32,FLEN)
NAN_BOXED(44,32,FLEN)
NAN_BOXED(24,32,FLEN)
NAN_BOXED(1118420992,32,FLEN)
NAN_BOXED(12,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(1115747279,32,FLEN)
NAN_BOXED(35,32,FLEN)
NAN_BOXED(66,32,FLEN)
NAN_BOXED(1123426056,32,FLEN)
NAN_BOXED(71,32,FLEN)
NAN_BOXED(65,32,FLEN)
NAN_BOXED(1132157590,32,FLEN)
NAN_BOXED(47,32,FLEN)
NAN_BOXED(9,32,FLEN)
NAN_BOXED(1164131897,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(89,32,FLEN)
NAN_BOXED(1144512788,32,FLEN)
NAN_BOXED(76,32,FLEN)
NAN_BOXED(85,32,FLEN)
NAN_BOXED(1153482559,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(98,32,FLEN)
NAN_BOXED(1160194215,32,FLEN)
NAN_BOXED(40,32,FLEN)
NAN_BOXED(47,32,FLEN)
NAN_BOXED(1177437750,32,FLEN)
NAN_BOXED(72,32,FLEN)
NAN_BOXED(91,32,FLEN)
NAN_BOXED(1177814916,32,FLEN)
NAN_BOXED(86,32,FLEN)
NAN_BOXED(36,32,FLEN)
NAN_BOXED(1197706368,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(34,32,FLEN)
NAN_BOXED(1206972288,32,FLEN)
NAN_BOXED(99,32,FLEN)
NAN_BOXED(89,32,FLEN)
NAN_BOXED(3213186888,32,FLEN)
NAN_BOXED(92,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(3214823640,32,FLEN)
NAN_BOXED(44,32,FLEN)
NAN_BOXED(84,32,FLEN)
NAN_BOXED(3198855851,32,FLEN)
NAN_BOXED(23,32,FLEN)
NAN_BOXED(75,32,FLEN)
NAN_BOXED(3189125065,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(61,32,FLEN)
NAN_BOXED(3216549854,32,FLEN)
NAN_BOXED(71,32,FLEN)
NAN_BOXED(33,32,FLEN)
NAN_BOXED(3222369373,32,FLEN)
NAN_BOXED(42,32,FLEN)
NAN_BOXED(86,32,FLEN)
NAN_BOXED(3214299993,32,FLEN)
NAN_BOXED(36,32,FLEN)
NAN_BOXED(60,32,FLEN)
NAN_BOXED(3224441105,32,FLEN)
NAN_BOXED(37,32,FLEN)
NAN_BOXED(65,32,FLEN)
NAN_BOXED(3232195190,32,FLEN)
NAN_BOXED(83,32,FLEN)
NAN_BOXED(87,32,FLEN)
NAN_BOXED(3234700276,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(45,32,FLEN)
NAN_BOXED(3250364234,32,FLEN)
NAN_BOXED(36,32,FLEN)
NAN_BOXED(83,32,FLEN)
NAN_BOXED(3251229906,32,FLEN)
NAN_BOXED(45,32,FLEN)
NAN_BOXED(95,32,FLEN)
NAN_BOXED(3257842850,32,FLEN)
NAN_BOXED(53,32,FLEN)
NAN_BOXED(45,32,FLEN)
NAN_BOXED(3275133929,32,FLEN)
NAN_BOXED(23,32,FLEN)
NAN_BOXED(89,32,FLEN)
NAN_BOXED(3275276472,32,FLEN)
NAN_BOXED(58,32,FLEN)
NAN_BOXED(47,32,FLEN)
NAN_BOXED(3291383852,32,FLEN)
NAN_BOXED(43,32,FLEN)
NAN_BOXED(67,32,FLEN)
NAN_BOXED(3295976616,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(68,32,FLEN)
NAN_BOXED(3304127428,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(3323826491,32,FLEN)
NAN_BOXED(47,32,FLEN)
NAN_BOXED(62,32,FLEN)
NAN_BOXED(3322159996,32,FLEN)
NAN_BOXED(37,32,FLEN)
NAN_BOXED(89,32,FLEN)
NAN_BOXED(3325564813,32,FLEN)
NAN_BOXED(11,32,FLEN)
NAN_BOXED(93,32,FLEN)
NAN_BOXED(3333434858,32,FLEN)
NAN_BOXED(86,32,FLEN)
NAN_BOXED(94,32,FLEN)
NAN_BOXED(3341700311,32,FLEN)
NAN_BOXED(54,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(1220161046,32,FLEN)
NAN_BOXED(79,32,FLEN)
NAN_BOXED(75,32,FLEN)
NAN_BOXED(1205498774,32,FLEN)
NAN_BOXED(67,32,FLEN)
NAN_BOXED(86,32,FLEN)
NAN_BOXED(1203667618,32,FLEN)
NAN_BOXED(54,32,FLEN)
NAN_BOXED(39,32,FLEN)
NAN_BOXED(1213336719,32,FLEN)
NAN_BOXED(80,32,FLEN)
NAN_BOXED(71,32,FLEN)
NAN_BOXED(1206305282,32,FLEN)
NAN_BOXED(82,32,FLEN)
NAN_BOXED(35,32,FLEN)
NAN_BOXED(1214909883,32,FLEN)
NAN_BOXED(93,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(1241513802,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(21,32,FLEN)
NAN_BOXED(1220741880,32,FLEN)
NAN_BOXED(76,32,FLEN)
NAN_BOXED(57,32,FLEN)
NAN_BOXED(1208989354,32,FLEN)
NAN_BOXED(80,32,FLEN)
NAN_BOXED(84,32,FLEN)
NAN_BOXED(1203964158,32,FLEN)
NAN_BOXED(24,32,FLEN)
NAN_BOXED(29,32,FLEN)
NAN_BOXED(1217214708,32,FLEN)
NAN_BOXED(98,32,FLEN)
NAN_BOXED(88,32,FLEN)
NAN_BOXED(1203380932,32,FLEN)
NAN_BOXED(24,32,FLEN)
NAN_BOXED(81,32,FLEN)
NAN_BOXED(1204431788,32,FLEN)
NAN_BOXED(92,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(1235910573,32,FLEN)
NAN_BOXED(61,32,FLEN)
NAN_BOXED(29,32,FLEN)
NAN_BOXED(1217197843,32,FLEN)
NAN_BOXED(22,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1234286278,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(1225226059,32,FLEN)
NAN_BOXED(41,32,FLEN)
NAN_BOXED(24,32,FLEN)
NAN_BOXED(1218969516,32,FLEN)
NAN_BOXED(62,32,FLEN)
NAN_BOXED(25,32,FLEN)
NAN_BOXED(1218361334,32,FLEN)
NAN_BOXED(71,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(1237319592,32,FLEN)
NAN_BOXED(54,32,FLEN)
NAN_BOXED(60,32,FLEN)
NAN_BOXED(1206840973,32,FLEN)
NAN_BOXED(45,32,FLEN)
NAN_BOXED(49,32,FLEN)
NAN_BOXED(1207616935,32,FLEN)
NAN_BOXED(85,32,FLEN)
NAN_BOXED(79,32,FLEN)
NAN_BOXED(1196385361,32,FLEN)
NAN_BOXED(10,32,FLEN)
NAN_BOXED(76,32,FLEN)
NAN_BOXED(3352794208,32,FLEN)
NAN_BOXED(27,32,FLEN)
NAN_BOXED(31,32,FLEN)
NAN_BOXED(3364102500,32,FLEN)
NAN_BOXED(92,32,FLEN)
NAN_BOXED(48,32,FLEN)
NAN_BOXED(3358239397,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(45,32,FLEN)
NAN_BOXED(3358985118,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(36,32,FLEN)
NAN_BOXED(3361967737,32,FLEN)
NAN_BOXED(53,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(3372779716,32,FLEN)
NAN_BOXED(89,32,FLEN)
NAN_BOXED(71,32,FLEN)
NAN_BOXED(3353789078,32,FLEN)
NAN_BOXED(48,32,FLEN)
NAN_BOXED(5,32,FLEN)
NAN_BOXED(3385642096,32,FLEN)
NAN_BOXED(71,32,FLEN)
NAN_BOXED(79,32,FLEN)
NAN_BOXED(3352257299,32,FLEN)
NAN_BOXED(39,32,FLEN)
NAN_BOXED(13,32,FLEN)
NAN_BOXED(3374155664,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(70,32,FLEN)
NAN_BOXED(3354003399,32,FLEN)
NAN_BOXED(66,32,FLEN)
NAN_BOXED(44,32,FLEN)
NAN_BOXED(3359253332,32,FLEN)
NAN_BOXED(75,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(3361175951,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(17,32,FLEN)
NAN_BOXED(3371218200,32,FLEN)
NAN_BOXED(54,32,FLEN)
NAN_BOXED(53,32,FLEN)
NAN_BOXED(3357164534,32,FLEN)
NAN_BOXED(73,32,FLEN)
NAN_BOXED(83,32,FLEN)
NAN_BOXED(3351552204,32,FLEN)
NAN_BOXED(69,32,FLEN)
NAN_BOXED(48,32,FLEN)
NAN_BOXED(3358152100,32,FLEN)
NAN_BOXED(60,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(3369350663,32,FLEN)
NAN_BOXED(21,32,FLEN)
NAN_BOXED(77,32,FLEN)
NAN_BOXED(3352174991,32,FLEN)
NAN_BOXED(49,32,FLEN)
NAN_BOXED(73,32,FLEN)
NAN_BOXED(3352455584,32,FLEN)
NAN_BOXED(62,32,FLEN)
NAN_BOXED(26,32,FLEN)
NAN_BOXED(3364477106,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(78,32,FLEN)
NAN_BOXED(3348990443,32,FLEN)
NAN_BOXED(12,32,FLEN)
NAN_BOXED(45,32,FLEN)
NAN_BOXED(3350596688,32,FLEN)
NAN_BOXED(85,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(3066036223,32,FLEN)
NAN_BOXED(8388657,32,FLEN)
NAN_BOXED(8388622,32,FLEN)
NAN_BOXED(3063939055,32,FLEN)
NAN_BOXED(8388650,32,FLEN)
NAN_BOXED(8388681,32,FLEN)
NAN_BOXED(3071672234,32,FLEN)
NAN_BOXED(8388687,32,FLEN)
NAN_BOXED(8388678,32,FLEN)
NAN_BOXED(3048210336,32,FLEN)
NAN_BOXED(8388627,32,FLEN)
NAN_BOXED(8388650,32,FLEN)
NAN_BOXED(3070361557,32,FLEN)
NAN_BOXED(8388689,32,FLEN)
NAN_BOXED(8388681,32,FLEN)
NAN_BOXED(3053977522,32,FLEN)
NAN_BOXED(8388657,32,FLEN)
NAN_BOXED(8388663,32,FLEN)
NAN_BOXED(897580946,32,FLEN)
NAN_BOXED(8388664,32,FLEN)
NAN_BOXED(8388637,32,FLEN)
NAN_BOXED(922746822,32,FLEN)
NAN_BOXED(8388672,32,FLEN)
NAN_BOXED(8388646,32,FLEN)
NAN_BOXED(935460806,32,FLEN)
NAN_BOXED(8388670,32,FLEN)
NAN_BOXED(8388699,32,FLEN)
NAN_BOXED(946306907,32,FLEN)
NAN_BOXED(8388657,32,FLEN)
NAN_BOXED(8388658,32,FLEN)
NAN_BOXED(955957150,32,FLEN)
NAN_BOXED(8388629,32,FLEN)
NAN_BOXED(8388685,32,FLEN)
NAN_BOXED(964058988,32,FLEN)
NAN_BOXED(8388685,32,FLEN)
NAN_BOXED(8388642,32,FLEN)
NAN_BOXED(972689342,32,FLEN)
NAN_BOXED(8388703,32,FLEN)
NAN_BOXED(8388647,32,FLEN)
NAN_BOXED(981335987,32,FLEN)
NAN_BOXED(8388672,32,FLEN)
NAN_BOXED(8388641,32,FLEN)
NAN_BOXED(989800382,32,FLEN)
NAN_BOXED(8388662,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(998223354,32,FLEN)
NAN_BOXED(8388649,32,FLEN)
NAN_BOXED(8388648,32,FLEN)
NAN_BOXED(1006616752,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(8388645,32,FLEN)
NAN_BOXED(1015019062,32,FLEN)
NAN_BOXED(8388627,32,FLEN)
NAN_BOXED(8388670,32,FLEN)
NAN_BOXED(1023409796,32,FLEN)
NAN_BOXED(8388612,32,FLEN)
NAN_BOXED(8388624,32,FLEN)
NAN_BOXED(1031796032,32,FLEN)
NAN_BOXED(8388693,32,FLEN)
NAN_BOXED(8388688,32,FLEN)
NAN_BOXED(1040186320,32,FLEN)
NAN_BOXED(8388665,32,FLEN)
NAN_BOXED(8388640,32,FLEN)
NAN_BOXED(1048575632,32,FLEN)
NAN_BOXED(8388646,32,FLEN)
NAN_BOXED(8388614,32,FLEN)
NAN_BOXED(1056964524,32,FLEN)
NAN_BOXED(8388626,32,FLEN)
NAN_BOXED(8388659,32,FLEN)
NAN_BOXED(3221225373,32,FLEN)
NAN_BOXED(8388610,32,FLEN)
NAN_BOXED(8388670,32,FLEN)
NAN_BOXED(3221225419,32,FLEN)
NAN_BOXED(8388677,32,FLEN)
NAN_BOXED(8388680,32,FLEN)
NAN_BOXED(3221225368,32,FLEN)
NAN_BOXED(8388644,32,FLEN)
NAN_BOXED(8388640,32,FLEN)
NAN_BOXED(3221225474,32,FLEN)
NAN_BOXED(8388669,32,FLEN)
NAN_BOXED(8388613,32,FLEN)
NAN_BOXED(3221225491,32,FLEN)
NAN_BOXED(8388640,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(3221225413,32,FLEN)
NAN_BOXED(8388643,32,FLEN)
NAN_BOXED(8388628,32,FLEN)
NAN_BOXED(3221225530,32,FLEN)
NAN_BOXED(8388701,32,FLEN)
NAN_BOXED(8388645,32,FLEN)
NAN_BOXED(3221225518,32,FLEN)
NAN_BOXED(8388646,32,FLEN)
NAN_BOXED(8388672,32,FLEN)
NAN_BOXED(3221225575,32,FLEN)
NAN_BOXED(8388686,32,FLEN)
NAN_BOXED(8388669,32,FLEN)
NAN_BOXED(3221225700,32,FLEN)
NAN_BOXED(8388675,32,FLEN)
NAN_BOXED(8388691,32,FLEN)
NAN_BOXED(3221225940,32,FLEN)
NAN_BOXED(8388686,32,FLEN)
NAN_BOXED(8388704,32,FLEN)
NAN_BOXED(3221226408,32,FLEN)
NAN_BOXED(8388624,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(3221227566,32,FLEN)
NAN_BOXED(8388706,32,FLEN)
NAN_BOXED(8388625,32,FLEN)
NAN_BOXED(3221229570,32,FLEN)
NAN_BOXED(8388647,32,FLEN)
NAN_BOXED(8388645,32,FLEN)
NAN_BOXED(3221233661,32,FLEN)
NAN_BOXED(8388677,32,FLEN)
NAN_BOXED(8388699,32,FLEN)
NAN_BOXED(3221241787,32,FLEN)
NAN_BOXED(8388652,32,FLEN)
NAN_BOXED(8388687,32,FLEN)
NAN_BOXED(3221258180,32,FLEN)
NAN_BOXED(8388646,32,FLEN)
NAN_BOXED(8388702,32,FLEN)
NAN_BOXED(3221290947,32,FLEN)
NAN_BOXED(8388676,32,FLEN)
NAN_BOXED(8388612,32,FLEN)
NAN_BOXED(3221356570,32,FLEN)
NAN_BOXED(8388668,32,FLEN)
NAN_BOXED(8388653,32,FLEN)
NAN_BOXED(3221487593,32,FLEN)
NAN_BOXED(8388655,32,FLEN)
NAN_BOXED(8388696,32,FLEN)
NAN_BOXED(3221749715,32,FLEN)
NAN_BOXED(8388704,32,FLEN)
NAN_BOXED(8388684,32,FLEN)
NAN_BOXED(3222273971,32,FLEN)
NAN_BOXED(8388625,32,FLEN)
NAN_BOXED(8388613,32,FLEN)
NAN_BOXED(3223322618,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2130706465,32,FLEN)
NAN_BOXED(1065353004,32,FLEN)
NAN_BOXED(2130706503,32,FLEN)
NAN_BOXED(2130706491,32,FLEN)
NAN_BOXED(1065352916,32,FLEN)
NAN_BOXED(2130706520,32,FLEN)
NAN_BOXED(2130706446,32,FLEN)
NAN_BOXED(1065353002,32,FLEN)
NAN_BOXED(2130706520,32,FLEN)
NAN_BOXED(2130706502,32,FLEN)
NAN_BOXED(1065353008,32,FLEN)
NAN_BOXED(2130706457,32,FLEN)
NAN_BOXED(2130706434,32,FLEN)
NAN_BOXED(1065353068,32,FLEN)
NAN_BOXED(2130706487,32,FLEN)
NAN_BOXED(2130706487,32,FLEN)
NAN_BOXED(1065352886,32,FLEN)
NAN_BOXED(2130706509,32,FLEN)
NAN_BOXED(2130706506,32,FLEN)
NAN_BOXED(1065352760,32,FLEN)
NAN_BOXED(2130706521,32,FLEN)
NAN_BOXED(2130706523,32,FLEN)
NAN_BOXED(1065352614,32,FLEN)
NAN_BOXED(2130706513,32,FLEN)
NAN_BOXED(2130706516,32,FLEN)
NAN_BOXED(1065352410,32,FLEN)
NAN_BOXED(2130706494,32,FLEN)
NAN_BOXED(2130706482,32,FLEN)
NAN_BOXED(1065351968,32,FLEN)
NAN_BOXED(2130706493,32,FLEN)
NAN_BOXED(2130706483,32,FLEN)
NAN_BOXED(1065350888,32,FLEN)
NAN_BOXED(2130706520,32,FLEN)
NAN_BOXED(2130706525,32,FLEN)
NAN_BOXED(1065348880,32,FLEN)
NAN_BOXED(2130706458,32,FLEN)
NAN_BOXED(2130706470,32,FLEN)
NAN_BOXED(1065344826,32,FLEN)
NAN_BOXED(2130706492,32,FLEN)
NAN_BOXED(2130706530,32,FLEN)
NAN_BOXED(1065336616,32,FLEN)
NAN_BOXED(2130706441,32,FLEN)
NAN_BOXED(2130706471,32,FLEN)
NAN_BOXED(1065320366,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2130706521,32,FLEN)
NAN_BOXED(1065287389,32,FLEN)
NAN_BOXED(2130706488,32,FLEN)
NAN_BOXED(2130706507,32,FLEN)
NAN_BOXED(1065221919,32,FLEN)
NAN_BOXED(2130706469,32,FLEN)
NAN_BOXED(2130706515,32,FLEN)
NAN_BOXED(1065090785,32,FLEN)
NAN_BOXED(2130706493,32,FLEN)
NAN_BOXED(2130706472,32,FLEN)
NAN_BOXED(1064828811,32,FLEN)
NAN_BOXED(2130706451,32,FLEN)
NAN_BOXED(2130706454,32,FLEN)
NAN_BOXED(1064304473,32,FLEN)
NAN_BOXED(2130706494,32,FLEN)
NAN_BOXED(2130706521,32,FLEN)
NAN_BOXED(1063255764,32,FLEN)
NAN_BOXED(2130706503,32,FLEN)
NAN_BOXED(2130706496,32,FLEN)
NAN_BOXED(1061158728,32,FLEN)
NAN_BOXED(2130706475,32,FLEN)
NAN_BOXED(2130706501,32,FLEN)
NAN_BOXED(1056964386,32,FLEN)
NAN_BOXED(2130706452,32,FLEN)
NAN_BOXED(2130706487,32,FLEN)
NAN_BOXED(3225419730,32,FLEN)
NAN_BOXED(2130706507,32,FLEN)
NAN_BOXED(2130706502,32,FLEN)
NAN_BOXED(3225419673,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2130706441,32,FLEN)
NAN_BOXED(3225419807,32,FLEN)
NAN_BOXED(2130706526,32,FLEN)
NAN_BOXED(2130706462,32,FLEN)
NAN_BOXED(3225419744,32,FLEN)
NAN_BOXED(2130706467,32,FLEN)
NAN_BOXED(2130706443,32,FLEN)
NAN_BOXED(3225419756,32,FLEN)
NAN_BOXED(2130706441,32,FLEN)
NAN_BOXED(2130706517,32,FLEN)
NAN_BOXED(3225419634,32,FLEN)
NAN_BOXED(2130706436,32,FLEN)
NAN_BOXED(2130706475,32,FLEN)
NAN_BOXED(3225419726,32,FLEN)
NAN_BOXED(2130706525,32,FLEN)
NAN_BOXED(2130706487,32,FLEN)
NAN_BOXED(3225419634,32,FLEN)
NAN_BOXED(2130706441,32,FLEN)
NAN_BOXED(2130706484,32,FLEN)
NAN_BOXED(3225419615,32,FLEN)
NAN_BOXED(2130706522,32,FLEN)
NAN_BOXED(2130706495,32,FLEN)
NAN_BOXED(3225419429,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2130706448,32,FLEN)
NAN_BOXED(3225419248,32,FLEN)
NAN_BOXED(2130706448,32,FLEN)
NAN_BOXED(2130706461,32,FLEN)
NAN_BOXED(3225418748,32,FLEN)
NAN_BOXED(2130706511,32,FLEN)
NAN_BOXED(2130706515,32,FLEN)
NAN_BOXED(3225417611,32,FLEN)
NAN_BOXED(2130706447,32,FLEN)
NAN_BOXED(2130706524,32,FLEN)
NAN_BOXED(3225415551,32,FLEN)
NAN_BOXED(2130706450,32,FLEN)
NAN_BOXED(2130706470,32,FLEN)
NAN_BOXED(3225411572,32,FLEN)
NAN_BOXED(2130706523,32,FLEN)
NAN_BOXED(2130706489,32,FLEN)
NAN_BOXED(3225403316,32,FLEN)
NAN_BOXED(2130706452,32,FLEN)
NAN_BOXED(2130706456,32,FLEN)
NAN_BOXED(3225387011,32,FLEN)
NAN_BOXED(2130706511,32,FLEN)
NAN_BOXED(2130706456,32,FLEN)
NAN_BOXED(3225354230,32,FLEN)
NAN_BOXED(2130706485,32,FLEN)
NAN_BOXED(2130706453,32,FLEN)
NAN_BOXED(3225288677,32,FLEN)
NAN_BOXED(2130706441,32,FLEN)
NAN_BOXED(2130706512,32,FLEN)
NAN_BOXED(3225157528,32,FLEN)
NAN_BOXED(2130706460,32,FLEN)
NAN_BOXED(2130706438,32,FLEN)
NAN_BOXED(3224895515,32,FLEN)
NAN_BOXED(2130706504,32,FLEN)
NAN_BOXED(2130706446,32,FLEN)
NAN_BOXED(3224371223,32,FLEN)
NAN_BOXED(2130706517,32,FLEN)
NAN_BOXED(2130706481,32,FLEN)
NAN_BOXED(3223322610,32,FLEN)
NAN_BOXED(2130706528,32,FLEN)
NAN_BOXED(95,32,FLEN)
NAN_BOXED(3203212040,32,FLEN)
NAN_BOXED(46,32,FLEN)
NAN_BOXED(84,32,FLEN)
NAN_BOXED(3208043374,32,FLEN)
NAN_BOXED(68,32,FLEN)
NAN_BOXED(32,32,FLEN)
NAN_BOXED(3218079744,32,FLEN)
NAN_BOXED(84,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1086624329,32,FLEN)
NAN_BOXED(21,32,FLEN)
NAN_BOXED(61,32,FLEN)
NAN_BOXED(1080755250,32,FLEN)
NAN_BOXED(32,32,FLEN)
NAN_BOXED(49,32,FLEN)
NAN_BOXED(1091589016,32,FLEN)
NAN_BOXED(70,32,FLEN)
NAN_BOXED(14,32,FLEN)
NAN_BOXED(1116190427,32,FLEN)
NAN_BOXED(74,32,FLEN)
NAN_BOXED(32,32,FLEN)
NAN_BOXED(1115668480,32,FLEN)
NAN_BOXED(2,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(3256090624,32,FLEN)
NAN_BOXED(47,32,FLEN)
NAN_BOXED(19,32,FLEN)
NAN_BOXED(3245618661,32,FLEN)
NAN_BOXED(34,32,FLEN)
NAN_BOXED(39,32,FLEN)
NAN_BOXED(3252817185,32,FLEN)
NAN_BOXED(78,32,FLEN)
NAN_BOXED(9,32,FLEN)
NAN_BOXED(3303283826,32,FLEN)
NAN_BOXED(40,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 16*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
