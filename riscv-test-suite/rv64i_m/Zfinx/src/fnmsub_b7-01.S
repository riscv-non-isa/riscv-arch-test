
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 07:40:16 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fnmsub.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fnmsub_b7 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fnmsub_b7)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x30, rs2==x31, rs3==x29, rd==x31,fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e1c2f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07d476 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38c2b9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x31; op3:x29; dest:x31; op1val:0x7e2e1c2f; op2val:0xc087d476;
op3val:0x7f38c2b9; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x31, x29, dyn, 96, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x29, rs2==x30, rs3==x31, rd==x29,fs1 == 0 and fe1 == 0xfb and fm1 == 0x420b54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x328842 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x075328 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x29; op2:x30; op3:x31; dest:x29; op1val:0x7dc20b54; op2val:0xc0b28842;
op3val:0x7f075328; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x29, x29, x30, x31, dyn, 96, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x28, rs2==x28, rs3==x30, rd==x28,fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x28; op2:x28; op3:x30; dest:x28; op1val:0x7d82d835; op2val:0x7d82d835;
op3val:0x7e3e08e0; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x28, x28, x28, x30, dyn, 96, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==x31, rs2==x27, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x31; op2:x27; op3:x27; dest:x27; op1val:0x7f3fd529; op2val:0xbe569c36;
op3val:0xbe569c36; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x27, x31, x27, x27, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 == rs3 != rd, rs1==x26, rs2==x26, rs3==x26, rd==x30,fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x26; op2:x26; op3:x26; dest:x30; op1val:0x7ef67a3b; op2val:0x7ef67a3b;
op3val:0x7ef67a3b; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x30, x26, x26, x26, dyn, 96, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x25, rs2==x29, rs3==x25, rd==x26,fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x25; op2:x29; op3:x25; dest:x26; op1val:0x7eae00ba; op2val:0xbf8bd260;
op3val:0x7eae00ba; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x26, x25, x29, x25, dyn, 96, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x27, rs2==x24, rs3==x24, rd==x25,fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x27; op2:x24; op3:x24; dest:x25; op1val:0x7e13a21e; op2val:0xc08a4105;
op3val:0xc08a4105; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x25, x27, x24, x24, dyn, 96, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rd == rs3 != rs2, rs1==x23, rs2==x25, rs3==x23, rd==x23,fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x23; op2:x25; op3:x23; dest:x23; op1val:0x7d8992a2; op2val:0xc0275676;
op3val:0x7d8992a2; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x23, x23, x25, x23, dyn, 96, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==x22, rs2==x22, rs3==x22, rd==x22,fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x22; op2:x22; op3:x22; dest:x22; op1val:0x7c75a735; op2val:0x7c75a735;
op3val:0x7c75a735; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x22, x22, x22, x22, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x24, rs2==x23, rs3==x21, rd==x21,fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c8afc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d9df0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d3243 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x24; op2:x23; op3:x21; dest:x21; op1val:0x7e9c8afc; op2val:0xc00d9df0;
op3val:0x7f2d3243; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x21, x24, x23, x21, dyn, 96, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x21, rs2==x20, rs3==x28, rd==x24,fs1 == 0 and fe1 == 0xfd and fm1 == 0x1190a0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x199c78 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2eb0d1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x21; op2:x20; op3:x28; dest:x24; op1val:0x7e9190a0; op2val:0xbe999c78;
op3val:0x7daeb0d1; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x24, x21, x20, x28, dyn, 96, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x19, rs2==x19, rs3==x18, rd==x20,fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x19; op2:x19; op3:x18; dest:x20; op1val:0x7e466afe; op2val:0x7e466afe;
op3val:0x7f3e633d; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x20, x19, x19, x18, dyn, 96, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x18, rs2==x21, rs3==x20, rd==x19,fs1 == 0 and fe1 == 0xfa and fm1 == 0x41cef4 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1d4815 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e24fd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x18; op2:x21; op3:x20; dest:x19; op1val:0x7d41cef4; op2val:0xc11d4815;
op3val:0x7eee24fd; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x19, x18, x21, x20, dyn, 96, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x20, rs2==x17, rs3==x19, rd==x18,fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d8c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x603fc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7dc386 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x20; op2:x17; op3:x19; dest:x18; op1val:0x7e90d8c5; op2val:0xbfe03fc7;
op3val:0x7efdc386; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x18, x20, x17, x19, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x18, rs3==x15, rd==x17,fs1 == 0 and fe1 == 0xfd and fm1 == 0x01f5dd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02ba3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04bacd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x16; op2:x18; op3:x15; dest:x17; op1val:0x7e81f5dd; op2val:0xc002ba3e;
op3val:0x7f04bacd; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x17, x16, x18, x15, dyn, 96, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x17, rs2==x15, rs3==x14, rd==x16,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1227 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x27232f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x797e34 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x17; op2:x15; op3:x14; dest:x16; op1val:0x7ebf1227; op2val:0xbfa7232f;
op3val:0x7ef97e34; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x16, x17, x15, x14, dyn, 96, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rs3==x17, rd==x15,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d1061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25299a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f4f5d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x14; op2:x16; op3:x17; dest:x15; op1val:0x7f2d1061; op2val:0xbf25299a;
op3val:0x7edf4f5d; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x15, x14, x16, x17, dyn, 96, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x15, rs2==x13, rs3==x16, rd==x14,fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a52ec and fs2 == 1 and fe2 == 0x7d and fm2 == 0x67e1c6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x45c160 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x15; op2:x13; op3:x16; dest:x14; op1val:0x7dda52ec; op2val:0xbee7e1c6;
op3val:0x7d45c160; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x14, x15, x13, x16, dyn, 96, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x14, rs3==x11, rd==x13,fs1 == 0 and fe1 == 0xfe and fm1 == 0x35a451 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x043b82 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ba5e6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x12; op2:x14; op3:x11; dest:x13; op1val:0x7f35a451; op2val:0xbf043b82;
op3val:0x7ebba5e6; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x13, x12, x14, x11, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x13, rs2==x11, rs3==x10, rd==x12,fs1 == 0 and fe1 == 0xfc and fm1 == 0x14e13e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c2a84 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35a3f8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x13; op2:x11; op3:x10; dest:x12; op1val:0x7e14e13e; op2val:0xc09c2a84;
op3val:0x7f35a3f8; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x12, x13, x11, x10, dyn, 96, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x12, rs3==x13, rd==x11,fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5241 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x212887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bf4ed and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x10; op2:x12; op3:x13; dest:x11; op1val:0x7ede5241; op2val:0xbfa12887;
op3val:0x7f0bf4ed; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x11, x10, x12, x13, dyn, 96, 0, x3, 60*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x12,test_dataset_1)

inst_21:
// rs1==x11, rs2==x9, rs3==x12, rd==x10,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2924ed and fs2 == 1 and fe2 == 0x7d and fm2 == 0x260466 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5b61b5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x11; op2:x9; op3:x12; dest:x10; op1val:0x7f2924ed; op2val:0xbea60466;
op3val:0x7e5b61b5; valaddr_reg:x12; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x10, x11, x9, x12, dyn, 96, 0, x12, 0*FLEN/8, x13, x1, x2)

inst_22:
// rs1==x8, rs2==x10, rs3==x7, rd==x9,fs1 == 0 and fe1 == 0xfd and fm1 == 0x08f8b6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1d8c50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x289736 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x8; op2:x10; op3:x7; dest:x9; op1val:0x7e88f8b6; op2val:0xc01d8c50;
op3val:0x7f289736; valaddr_reg:x12; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x9, x8, x10, x7, dyn, 96, 0, x12, 3*FLEN/8, x13, x1, x2)

inst_23:
// rs1==x9, rs2==x7, rs3==x6, rd==x8,fs1 == 0 and fe1 == 0xfb and fm1 == 0x4f529d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3532e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12bea4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x9; op2:x7; op3:x6; dest:x8; op1val:0x7dcf529d; op2val:0xc0b532e8;
op3val:0x7f12bea4; valaddr_reg:x12; val_offset:6*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x8, x9, x7, x6, dyn, 96, 0, x12, 6*FLEN/8, x13, x1, x10)
RVTEST_SIGBASE(x9,signature_x9_0)

inst_24:
// rs1==x6, rs2==x8, rs3==x9, rd==x7,fs1 == 0 and fe1 == 0xfb and fm1 == 0x15f05d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62402e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0483c9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x6; op2:x8; op3:x9; dest:x7; op1val:0x7d95f05d; op2val:0xc0e2402e;
op3val:0x7f0483c9; valaddr_reg:x12; val_offset:9*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x7, x6, x8, x9, dyn, 96, 0, x12, 9*FLEN/8, x13, x9, x10)

inst_25:
// rs1==x7, rs2==x5, rs3==x8, rd==x6,fs1 == 0 and fe1 == 0xfe and fm1 == 0x06cfd9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2d2ef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x366662 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x7; op2:x5; op3:x8; dest:x6; op1val:0x7f06cfd9; op2val:0xbfad2ef6;
op3val:0x7f366662; valaddr_reg:x12; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x6, x7, x5, x8, dyn, 96, 0, x12, 12*FLEN/8, x13, x9, x10)

inst_26:
// rs1==x4, rs2==x6, rs3==x3, rd==x5,fs1 == 0 and fe1 == 0xfe and fm1 == 0x21f35d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18d959 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4163ff and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x4; op2:x6; op3:x3; dest:x5; op1val:0x7f21f35d; op2val:0xbf18d959;
op3val:0x7ec163ff; valaddr_reg:x12; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x5, x4, x6, x3, dyn, 96, 0, x12, 15*FLEN/8, x13, x9, x10)

inst_27:
// rs1==x5, rs2==x3, rs3==x2, rd==x4,fs1 == 0 and fe1 == 0xfc and fm1 == 0x17cb34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x427de0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x66a542 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x5; op2:x3; op3:x2; dest:x4; op1val:0x7e17cb34; op2val:0xbf427de0;
op3val:0x7de6a542; valaddr_reg:x12; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x4, x5, x3, x2, dyn, 96, 0, x12, 18*FLEN/8, x13, x9, x10)

inst_28:
// rs1==x2, rs2==x4, rs3==x5, rd==x3,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b074e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76d5a9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x43c279 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x2; op2:x4; op3:x5; dest:x3; op1val:0x7ecb074e; op2val:0xbf76d5a9;
op3val:0x7ec3c279; valaddr_reg:x12; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x3, x2, x4, x5, dyn, 96, 0, x12, 21*FLEN/8, x13, x9, x10)

inst_29:
// rs1==x3, rs2==x1, rs3==x4, rd==x2,fs1 == 0 and fe1 == 0xfa and fm1 == 0x5b67a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a57e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6b19 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x3; op2:x1; op3:x4; dest:x2; op1val:0x7d5b67a0; op2val:0xc14a57e5;
op3val:0x7f2d6b19; valaddr_reg:x12; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x2, x3, x1, x4, dyn, 96, 0, x12, 24*FLEN/8, x13, x9, x10)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0xfd and fm1 == 0x42d924 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30e83a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a60a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x7ec2d924; op2val:0xbfb0e83a;
op3val:0x7f06a60a; valaddr_reg:x12; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x1, x30, x29, dyn, 96, 0, x12, 27*FLEN/8, x13, x9, x10)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0xbf8ded2e;
op3val:0x7e3b4dfe; valaddr_reg:x12; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x0, x30, x29, dyn, 96, 0, x12, 30*FLEN/8, x13, x9, x10)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0xf8 and fm1 == 0x126d0d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x666e32 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03cd01 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x7c126d0d; op2val:0xc1e66e32;
op3val:0x7e83cd01; valaddr_reg:x12; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x2, x29, dyn, 96, 0, x12, 33*FLEN/8, x13, x9, x10)

inst_33:
// rs2==x0,fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x7e4cef54; op2val:0x0;
op3val:0x7ea29618; valaddr_reg:x12; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x0, x29, dyn, 96, 0, x12, 36*FLEN/8, x13, x9, x10)

inst_34:
// rs3==x1,fs1 == 0 and fe1 == 0xfd and fm1 == 0x10bd56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0da990 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20304e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x7e90bd56; op2val:0xc00da990;
op3val:0x7f20304e; valaddr_reg:x12; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x1, dyn, 96, 0, x12, 39*FLEN/8, x13, x9, x10)

inst_35:
// rs3==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x0; dest:x31; op1val:0x7f2b296b; op2val:0xbe494e1c;
op3val:0x0; valaddr_reg:x12; val_offset:42*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x0, dyn, 96, 0, x12, 42*FLEN/8, x13, x9, x10)

inst_36:
// rd==x1,fs1 == 0 and fe1 == 0xfd and fm1 == 0x182a54 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x56b7cf and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7f4148 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x7e982a54; op2val:0xbed6b7cf;
op3val:0x7dff4148; valaddr_reg:x12; val_offset:45*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x1, x31, x30, x29, dyn, 96, 0, x12, 45*FLEN/8, x13, x9, x10)

inst_37:
// rd==x0,fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x7efea866; op2val:0xbfbc2825;
op3val:0x7f3b2b9b; valaddr_reg:x12; val_offset:48*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x0, x31, x30, x29, dyn, 96, 0, x12, 48*FLEN/8, x13, x9, x10)

inst_38:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1afd1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7312ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1329c3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1afd1d; op2val:0xc07312ff;
op3val:0x7f1329c3; valaddr_reg:x12; val_offset:51*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 51*FLEN/8, x13, x9, x10)

inst_39:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x666f32 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x34700f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x226b0e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e666f32; op2val:0xbd34700f;
op3val:0x7c226b0e; valaddr_reg:x12; val_offset:54*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 54*FLEN/8, x13, x9, x10)

inst_40:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12bec8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64fb22 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0341df and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f12bec8; op2val:0xbee4fb22;
op3val:0x7e8341df; valaddr_reg:x12; val_offset:57*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 57*FLEN/8, x13, x9, x10)

inst_41:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x02ae3a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x23d78d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2745f0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e02ae3a; op2val:0xc023d78d;
op3val:0x7ea745f0; valaddr_reg:x12; val_offset:60*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 60*FLEN/8, x13, x9, x10)

inst_42:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e31f5db; op2val:0xbfe28967;
op3val:0x7e9d7a90; valaddr_reg:x12; val_offset:63*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 63*FLEN/8, x13, x9, x10)

inst_43:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eab48d4; op2val:0xbf6fe0a2;
op3val:0x7ea07f4a; valaddr_reg:x12; val_offset:66*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 66*FLEN/8, x13, x9, x10)

inst_44:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61fcc2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7b34ce and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5dc16f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee1fcc2; op2val:0xbefb34ce;
op3val:0x7e5dc16f; valaddr_reg:x12; val_offset:69*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 69*FLEN/8, x13, x9, x10)

inst_45:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x121772 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6578e7 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x02f3f8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d921772; op2val:0xbf6578e7;
op3val:0x7d82f3f8; valaddr_reg:x12; val_offset:72*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 72*FLEN/8, x13, x9, x10)

inst_46:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x239eb4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c7e58 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x480aed and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da39eb4; op2val:0xc09c7e58;
op3val:0x7ec80aed; valaddr_reg:x12; val_offset:75*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 75*FLEN/8, x13, x9, x10)

inst_47:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a4d8c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0f8696 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1b140f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8a4d8c; op2val:0xc00f8696;
op3val:0x7f1b140f; valaddr_reg:x12; val_offset:78*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 78*FLEN/8, x13, x9, x10)

inst_48:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41e3fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x338693 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07f854 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec1e3fa; op2val:0xbfb38693;
op3val:0x7f07f854; valaddr_reg:x12; val_offset:81*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 81*FLEN/8, x13, x9, x10)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c2c79 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0397ce and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4174b0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c2c79; op2val:0xbd8397ce;
op3val:0x7d4174b0; valaddr_reg:x12; val_offset:84*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 84*FLEN/8, x13, x9, x10)

inst_50:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x502f82 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x049553 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x57a3de and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c502f82; op2val:0xc1049553;
op3val:0x7dd7a3de; valaddr_reg:x12; val_offset:87*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 87*FLEN/8, x13, x9, x10)

inst_51:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x145a12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3e11a6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c4a28 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e945a12; op2val:0xbfbe11a6;
op3val:0x7edc4a28; valaddr_reg:x12; val_offset:90*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 90*FLEN/8, x13, x9, x10)

inst_52:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ecce4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71ef4d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x06f460 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0ecce4; op2val:0xbef1ef4d;
op3val:0x7e86f460; valaddr_reg:x12; val_offset:93*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 93*FLEN/8, x13, x9, x10)

inst_53:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3945d0 and fs2 == 1 and fe2 == 0x76 and fm2 == 0x47af30 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x10840f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3945d0; op2val:0xbb47af30;
op3val:0x7b10840f; valaddr_reg:x12; val_offset:96*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 96*FLEN/8, x13, x9, x10)

inst_54:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x207343 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x00b64e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2157c9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f207343; op2val:0xbe80b64e;
op3val:0x7e2157c9; valaddr_reg:x12; val_offset:99*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 99*FLEN/8, x13, x9, x10)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2808ce and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1b03ba and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4b7f8f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2808ce; op2val:0xbd1b03ba;
op3val:0x7ccb7f8f; valaddr_reg:x12; val_offset:102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 102*FLEN/8, x13, x9, x10)

inst_56:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x394fae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x496ae5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11ccf0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f394fae; op2val:0xbf496ae5;
op3val:0x7f11ccf0; valaddr_reg:x12; val_offset:105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 105*FLEN/8, x13, x9, x10)

inst_57:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e2b14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x15e986 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5eb917 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3e2b14; op2val:0xbf15e986;
op3val:0x7edeb917; valaddr_reg:x12; val_offset:108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 108*FLEN/8, x13, x9, x10)

inst_58:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x088c83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2e8e76 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a36fc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e088c83; op2val:0xc0ae8e76;
op3val:0x7f3a36fc; valaddr_reg:x12; val_offset:111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 111*FLEN/8, x13, x9, x10)

inst_59:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x298b8f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4151e0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x000870 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea98b8f; op2val:0xbe4151e0;
op3val:0x7d800870; valaddr_reg:x12; val_offset:114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 114*FLEN/8, x13, x9, x10)

inst_60:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x687969 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x523fce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3eed89 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee87969; op2val:0xbf523fce;
op3val:0x7ebeed89; valaddr_reg:x12; val_offset:117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 117*FLEN/8, x13, x9, x10)

inst_61:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35b43e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x273191 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6d5787 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb5b43e; op2val:0xbea73191;
op3val:0x7ded5787; valaddr_reg:x12; val_offset:120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 120*FLEN/8, x13, x9, x10)

inst_62:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b6d02 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x184bfd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f00b7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbb6d02; op2val:0xc0984bfd;
op3val:0x7edf00b7; valaddr_reg:x12; val_offset:123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 123*FLEN/8, x13, x9, x10)

inst_63:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2dd528 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0f04f9 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x423ae4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eadd528; op2val:0xbe8f04f9;
op3val:0x7dc23ae4; valaddr_reg:x12; val_offset:126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 126*FLEN/8, x13, x9, x10)

inst_64:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x28c2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x534f40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0b4cf7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea8c2ff; op2val:0xbfd34f40;
op3val:0x7f0b4cf7; valaddr_reg:x12; val_offset:129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 129*FLEN/8, x13, x9, x10)

inst_65:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x095fbb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28a10b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x34fa7d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f095fbb; op2val:0xbf28a10b;
op3val:0x7eb4fa7d; valaddr_reg:x12; val_offset:132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 132*FLEN/8, x13, x9, x10)

inst_66:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17337c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a94aa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0a8cde and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e97337c; op2val:0xbf6a94aa;
op3val:0x7e8a8cde; valaddr_reg:x12; val_offset:135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 135*FLEN/8, x13, x9, x10)

inst_67:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2d32f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60337c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x17af6d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2d32f7; op2val:0xbf60337c;
op3val:0x7e17af6d; valaddr_reg:x12; val_offset:138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 138*FLEN/8, x13, x9, x10)

inst_68:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b5958 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7842da and fs3 == 0 and fe3 == 0xfb and fm3 == 0x262b4d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eab5958; op2val:0xbe7842da;
op3val:0x7da62b4d; valaddr_reg:x12; val_offset:141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 141*FLEN/8, x13, x9, x10)

inst_69:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3a21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0fde and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07ff65 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0b3a21; op2val:0xbf7a0fde;
op3val:0x7f07ff65; valaddr_reg:x12; val_offset:144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 144*FLEN/8, x13, x9, x10)

inst_70:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ad2b2 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x177e4a and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0af61f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eead2b2; op2val:0xbd177e4a;
op3val:0x7c8af61f; valaddr_reg:x12; val_offset:147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 147*FLEN/8, x13, x9, x10)

inst_71:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd04c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1804d2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x260c9f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8bd04c; op2val:0xbf9804d2;
op3val:0x7ea60c9f; valaddr_reg:x12; val_offset:150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 150*FLEN/8, x13, x9, x10)

inst_72:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0f5d14 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x25e6e4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39d098 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8f5d14; op2val:0xc125e6e4;
op3val:0x7f39d098; valaddr_reg:x12; val_offset:153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 153*FLEN/8, x13, x9, x10)

inst_73:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1114c8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a450f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x40fde0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1114c8; op2val:0xbf2a450f;
op3val:0x7ec0fde0; valaddr_reg:x12; val_offset:156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 156*FLEN/8, x13, x9, x10)

inst_74:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07648d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11b440 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1a1e91 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f07648d; op2val:0xbe91b440;
op3val:0x7e1a1e91; valaddr_reg:x12; val_offset:159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 159*FLEN/8, x13, x9, x10)

inst_75:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3034a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x12a75c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49e26c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3034a2; op2val:0xc012a75c;
op3val:0x7ec9e26c; valaddr_reg:x12; val_offset:162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 162*FLEN/8, x13, x9, x10)

inst_76:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ed6ae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ebb57 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x788d65 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0ed6ae; op2val:0xbf5ebb57;
op3val:0x7ef88d65; valaddr_reg:x12; val_offset:165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 165*FLEN/8, x13, x9, x10)

inst_77:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x244bd3 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x37709b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b74f1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ba44bd3; op2val:0xc2b7709b;
op3val:0x7eeb74f1; valaddr_reg:x12; val_offset:168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 168*FLEN/8, x13, x9, x10)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7fda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x515d9b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0eb630 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2e7fda; op2val:0xbf515d9b;
op3val:0x7f0eb630; valaddr_reg:x12; val_offset:171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 171*FLEN/8, x13, x9, x10)

inst_79:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x321868 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0778f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c7e09 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f321868; op2val:0xbf8778f4;
op3val:0x7f3c7e09; valaddr_reg:x12; val_offset:174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 174*FLEN/8, x13, x9, x10)

inst_80:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bc6f2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29a240 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63a66a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2bc6f2; op2val:0xbfa9a240;
op3val:0x7e63a66a; valaddr_reg:x12; val_offset:177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 177*FLEN/8, x13, x9, x10)

inst_81:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x522d92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x646f26 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b8bd7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed22d92; op2val:0xbfe46f26;
op3val:0x7f3b8bd7; valaddr_reg:x12; val_offset:180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 180*FLEN/8, x13, x9, x10)

inst_82:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x232b7a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c0d2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8dcb1e; op2val:0xc0232b7a;
op3val:0x7f34c0d2; valaddr_reg:x12; val_offset:183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 183*FLEN/8, x13, x9, x10)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234aea and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b66c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x463fd0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234aea; op2val:0xbf1b66c2;
op3val:0x7ec63fd0; valaddr_reg:x12; val_offset:186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 186*FLEN/8, x13, x9, x10)

inst_84:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700b05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x43f817 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37c106 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef00b05; op2val:0xbfc3f817;
op3val:0x7f37c106; valaddr_reg:x12; val_offset:189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 189*FLEN/8, x13, x9, x10)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x166373 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x415f53 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6331f4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f166373; op2val:0xbec15f53;
op3val:0x7e6331f4; valaddr_reg:x12; val_offset:192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 192*FLEN/8, x13, x9, x10)

inst_86:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2260a9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d0137 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x165442 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2260a9; op2val:0xbe6d0137;
op3val:0x7e165442; valaddr_reg:x12; val_offset:195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 195*FLEN/8, x13, x9, x10)

inst_87:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e11bf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25d24d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x380c4c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e11bf; op2val:0xc025d24d;
op3val:0x7f380c4c; valaddr_reg:x12; val_offset:198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 198*FLEN/8, x13, x9, x10)

inst_88:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22a277 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3c9501 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6f9bf2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f22a277; op2val:0xbebc9501;
op3val:0x7e6f9bf2; valaddr_reg:x12; val_offset:201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 201*FLEN/8, x13, x9, x10)

inst_89:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f19b2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x070f39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b67a3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5f19b2; op2val:0xc0070f39;
op3val:0x7eeb67a3; valaddr_reg:x12; val_offset:204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 204*FLEN/8, x13, x9, x10)

inst_90:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21c953 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fe858 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0364a1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f21c953; op2val:0xbf4fe858;
op3val:0x7f0364a1; valaddr_reg:x12; val_offset:207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 207*FLEN/8, x13, x9, x10)

inst_91:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b8ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x471c14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bc845 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f33b8ad; op2val:0xbf471c14;
op3val:0x7f0bc845; valaddr_reg:x12; val_offset:210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 210*FLEN/8, x13, x9, x10)

inst_92:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d9df6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ca571 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x684bbc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1d9df6; op2val:0xbf3ca571;
op3val:0x7ee84bbc; valaddr_reg:x12; val_offset:213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 213*FLEN/8, x13, x9, x10)

inst_93:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b140c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x171595 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x24291a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8b140c; op2val:0xbf971595;
op3val:0x7ea4291a; valaddr_reg:x12; val_offset:216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 216*FLEN/8, x13, x9, x10)

inst_94:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c2348 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2fcd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b1c4d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebc2348; op2val:0xbf8a2fcd;
op3val:0x7ecb1c4d; valaddr_reg:x12; val_offset:219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 219*FLEN/8, x13, x9, x10)

inst_95:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20eedb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x24389c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4e7935 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f20eedb; op2val:0xbea4389c;
op3val:0x7e4e7935; valaddr_reg:x12; val_offset:222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 222*FLEN/8, x13, x9, x10)

inst_96:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x52d2c7 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2aec85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0cc2c0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d52d2c7; op2val:0xc12aec85;
op3val:0x7f0cc2c0; valaddr_reg:x12; val_offset:225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 225*FLEN/8, x13, x9, x10)

inst_97:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5009d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x465633 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x212daa and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5009d7; op2val:0xbfc65633;
op3val:0x7ea12daa; valaddr_reg:x12; val_offset:228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 228*FLEN/8, x13, x9, x10)

inst_98:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33c6fa and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62be6e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f3b63 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db3c6fa; op2val:0xc0e2be6e;
op3val:0x7f1f3b63; valaddr_reg:x12; val_offset:231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 231*FLEN/8, x13, x9, x10)

inst_99:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x526383 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x084582 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5ffbfb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e526383; op2val:0xbf884582;
op3val:0x7e5ffbfb; valaddr_reg:x12; val_offset:234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 234*FLEN/8, x13, x9, x10)

inst_100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a693b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x208215 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x41a077 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a693b; op2val:0xbf208215;
op3val:0x7ec1a077; valaddr_reg:x12; val_offset:237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 237*FLEN/8, x13, x9, x10)

inst_101:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x54fd1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4d0497 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2a9283 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e54fd1e; op2val:0xc04d0497;
op3val:0x7f2a9283; valaddr_reg:x12; val_offset:240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 240*FLEN/8, x13, x9, x10)

inst_102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e21df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60a463 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ac32e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9e21df; op2val:0xbf60a463;
op3val:0x7e8ac32e; valaddr_reg:x12; val_offset:243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 243*FLEN/8, x13, x9, x10)

inst_103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395d94 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x518582 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x17b612 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f395d94; op2val:0xbf518582;
op3val:0x7f17b612; valaddr_reg:x12; val_offset:246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 246*FLEN/8, x13, x9, x10)

inst_104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f7f8a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b31ba and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3fec23 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f7f8a; op2val:0xbeab31ba;
op3val:0x7e3fec23; valaddr_reg:x12; val_offset:249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 249*FLEN/8, x13, x9, x10)

inst_105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c25fe and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3bcbbf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x651810 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1c25fe; op2val:0xbf3bcbbf;
op3val:0x7ee51810; valaddr_reg:x12; val_offset:252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 252*FLEN/8, x13, x9, x10)

inst_106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f4ea2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x630bb6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0d4a04 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1f4ea2; op2val:0xbee30bb6;
op3val:0x7e8d4a04; valaddr_reg:x12; val_offset:255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 255*FLEN/8, x13, x9, x10)

inst_107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15e839 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0213cf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x18570d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15e839; op2val:0xbf8213cf;
op3val:0x7f18570d; valaddr_reg:x12; val_offset:258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 258*FLEN/8, x13, x9, x10)

inst_108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14f81b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58038b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b66cd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e94f81b; op2val:0xbfd8038b;
op3val:0x7efb66cd; valaddr_reg:x12; val_offset:261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 261*FLEN/8, x13, x9, x10)

inst_109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15ce5c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22ead4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eac02 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15ce5c; op2val:0xbfa2ead4;
op3val:0x7f3eac02; valaddr_reg:x12; val_offset:264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 264*FLEN/8, x13, x9, x10)

inst_110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30ba02 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5aacdd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16f5bb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30ba02; op2val:0xbf5aacdd;
op3val:0x7f16f5bb; valaddr_reg:x12; val_offset:267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 267*FLEN/8, x13, x9, x10)

inst_111:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5221f9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ec065 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6a5989 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd221f9; op2val:0xc08ec065;
op3val:0x7eea5989; valaddr_reg:x12; val_offset:270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 270*FLEN/8, x13, x9, x10)

inst_112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03870c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x021d71 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x05b36a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03870c; op2val:0xbe021d71;
op3val:0x7d85b36a; valaddr_reg:x12; val_offset:273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 273*FLEN/8, x13, x9, x10)

inst_113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31ac5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x70529b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x26caee and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb1ac5f; op2val:0xbff0529b;
op3val:0x7f26caee; valaddr_reg:x12; val_offset:276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 276*FLEN/8, x13, x9, x10)

inst_114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dd7a3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02cfaf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31a913 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2dd7a3; op2val:0xbf82cfaf;
op3val:0x7f31a913; valaddr_reg:x12; val_offset:279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 279*FLEN/8, x13, x9, x10)

inst_115:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0e6204 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x519284 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x691f07 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8e6204; op2val:0xc0d19284;
op3val:0x7ee91f07; valaddr_reg:x12; val_offset:282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 282*FLEN/8, x13, x9, x10)

inst_116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2614fd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x412b5a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7aa3e6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2614fd; op2val:0xbf412b5a;
op3val:0x7efaa3e6; valaddr_reg:x12; val_offset:285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 285*FLEN/8, x13, x9, x10)

inst_117:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x75b2ba and fs2 == 1 and fe2 == 0x7b and fm2 == 0x77d04c and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x6dd75c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e75b2ba; op2val:0xbdf7d04c;
op3val:0x7cedd75c; valaddr_reg:x12; val_offset:288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 288*FLEN/8, x13, x9, x10)

inst_118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3099a4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f195a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x24f0ee and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3099a4; op2val:0xbf6f195a;
op3val:0x7f24f0ee; valaddr_reg:x12; val_offset:291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 291*FLEN/8, x13, x9, x10)

inst_119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7affa3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f7139 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ca3cf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efaffa3; op2val:0xbf0f7139;
op3val:0x7e8ca3cf; valaddr_reg:x12; val_offset:294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 294*FLEN/8, x13, x9, x10)

inst_120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f0fb5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bc8f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c7142 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1f0fb5; op2val:0xbf7bc8f4;
op3val:0x7f1c7142; valaddr_reg:x12; val_offset:297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 297*FLEN/8, x13, x9, x10)

inst_121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b252f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x53da48 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x664c95 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0b252f; op2val:0xbf53da48;
op3val:0x7ee64c95; valaddr_reg:x12; val_offset:300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 300*FLEN/8, x13, x9, x10)

inst_122:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7537d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6dccdf and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63c8ef and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7537d6; op2val:0xbf6dccdf;
op3val:0x7e63c8ef; valaddr_reg:x12; val_offset:303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 303*FLEN/8, x13, x9, x10)

inst_123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0946d5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a03fc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7af9c4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8946d5; op2val:0xbf6a03fc;
op3val:0x7e7af9c4; valaddr_reg:x12; val_offset:306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 306*FLEN/8, x13, x9, x10)

inst_124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b364 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x607517 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2f184f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec7b364; op2val:0xbe607517;
op3val:0x7daf184f; valaddr_reg:x12; val_offset:309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 309*FLEN/8, x13, x9, x10)

inst_125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a8170 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x770672 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x05a65f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0a8170; op2val:0xbef70672;
op3val:0x7e85a65f; valaddr_reg:x12; val_offset:312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 312*FLEN/8, x13, x9, x10)

inst_126:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x755b75 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4428 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x43c635 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df55b75; op2val:0xbfcc4428;
op3val:0x7e43c635; valaddr_reg:x12; val_offset:315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 315*FLEN/8, x13, x9, x10)

inst_127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x157cfe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0dc9a3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25972e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e957cfe; op2val:0xbf8dc9a3;
op3val:0x7ea5972e; valaddr_reg:x12; val_offset:318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 318*FLEN/8, x13, x9, x10)

inst_128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162ed7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x029e84 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x194190 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f162ed7; op2val:0xbe029e84;
op3val:0x7d994190; valaddr_reg:x12; val_offset:321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 321*FLEN/8, x13, x9, x10)

inst_129:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2af59a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2891e9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x61253d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2af59a; op2val:0xbfa891e9;
op3val:0x7e61253d; valaddr_reg:x12; val_offset:324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 324*FLEN/8, x13, x9, x10)

inst_130:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x07b179 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07ba67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0fe2c9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e07b179; op2val:0xc087ba67;
op3val:0x7f0fe2c9; valaddr_reg:x12; val_offset:327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 327*FLEN/8, x13, x9, x10)

inst_131:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x277072 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ef63b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1c4b97 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da77072; op2val:0xbeeef63b;
op3val:0x7d1c4b97; valaddr_reg:x12; val_offset:330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 330*FLEN/8, x13, x9, x10)

inst_132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x557298 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2985e0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d5846 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed57298; op2val:0xbfa985e0;
op3val:0x7f0d5846; valaddr_reg:x12; val_offset:333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 333*FLEN/8, x13, x9, x10)

inst_133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e6a36 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d9764 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x56d6eb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1e6a36; op2val:0xbf2d9764;
op3val:0x7ed6d6eb; valaddr_reg:x12; val_offset:336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 336*FLEN/8, x13, x9, x10)

inst_134:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7af3fb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2cbaf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x295332 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7af3fb; op2val:0xc02cbaf4;
op3val:0x7f295332; valaddr_reg:x12; val_offset:339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 339*FLEN/8, x13, x9, x10)

inst_135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d5723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x26896f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x37e4c4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0d5723; op2val:0xbf26896f;
op3val:0x7eb7e4c4; valaddr_reg:x12; val_offset:342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 342*FLEN/8, x13, x9, x10)

inst_136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58215c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54e017 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33b8d2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8215c; op2val:0xbfd4e017;
op3val:0x7f33b8d2; valaddr_reg:x12; val_offset:345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 345*FLEN/8, x13, x9, x10)

inst_137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f7e14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f07dc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x32cc96 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3f7e14; op2val:0xbf6f07dc;
op3val:0x7f32cc96; valaddr_reg:x12; val_offset:348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 348*FLEN/8, x13, x9, x10)

inst_138:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4bc1b7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dafc1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7b0361 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dcbc1b7; op2val:0xc01dafc1;
op3val:0x7e7b0361; valaddr_reg:x12; val_offset:351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 351*FLEN/8, x13, x9, x10)

inst_139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c9a88 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x541f4f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x01c320 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9c9a88; op2val:0xbed41f4f;
op3val:0x7e01c320; valaddr_reg:x12; val_offset:354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 354*FLEN/8, x13, x9, x10)

inst_140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125073 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x23864f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3aebfa and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f125073; op2val:0xbda3864f;
op3val:0x7d3aebfa; valaddr_reg:x12; val_offset:357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 357*FLEN/8, x13, x9, x10)

inst_141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a6406 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28ea23 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60daf6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2a6406; op2val:0xbf28ea23;
op3val:0x7ee0daf6; valaddr_reg:x12; val_offset:360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 360*FLEN/8, x13, x9, x10)

inst_142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6baf59 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d06ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f4bc3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eebaf59; op2val:0xbf2d06ce;
op3val:0x7e9f4bc3; valaddr_reg:x12; val_offset:363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 363*FLEN/8, x13, x9, x10)

inst_143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33cf6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1e17e3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5e1598 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f33cf6c; op2val:0xbf1e17e3;
op3val:0x7ede1598; valaddr_reg:x12; val_offset:366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 366*FLEN/8, x13, x9, x10)

inst_144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03bb5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x312842 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2c2373; op2val:0xbf83bb5d;
op3val:0x7f312842; valaddr_reg:x12; val_offset:369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 369*FLEN/8, x13, x9, x10)

inst_145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04e2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35dcee and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3cce5b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f04e2ff; op2val:0xbfb5dcee;
op3val:0x7f3cce5b; valaddr_reg:x12; val_offset:372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 372*FLEN/8, x13, x9, x10)

inst_146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c0477 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fa5b4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cc108 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebc0477; op2val:0xbf3fa5b4;
op3val:0x7e8cc108; valaddr_reg:x12; val_offset:375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 375*FLEN/8, x13, x9, x10)

inst_147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x220c6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2025e5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4abf7f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f220c6a; op2val:0xbf2025e5;
op3val:0x7ecabf7f; valaddr_reg:x12; val_offset:378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 378*FLEN/8, x13, x9, x10)

inst_148:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6d2bf9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0cf386 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0295a9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6d2bf9; op2val:0xc00cf386;
op3val:0x7f0295a9; valaddr_reg:x12; val_offset:381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 381*FLEN/8, x13, x9, x10)

inst_149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36bc41 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x09993b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x447040 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb6bc41; op2val:0xbe89993b;
op3val:0x7dc47040; valaddr_reg:x12; val_offset:384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 384*FLEN/8, x13, x9, x10)

inst_150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20dd6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18c1e6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ffa9e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f20dd6a; op2val:0xbf18c1e6;
op3val:0x7ebffa9e; valaddr_reg:x12; val_offset:387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 387*FLEN/8, x13, x9, x10)

inst_151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8a7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c9d85 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4ced0a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3a8a7e; op2val:0xbf0c9d85;
op3val:0x7ecced0a; valaddr_reg:x12; val_offset:390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 390*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_1)

inst_152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33dfb8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1e050d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e0f41 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f33dfb8; op2val:0xbe9e050d;
op3val:0x7e5e0f41; valaddr_reg:x12; val_offset:393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 393*FLEN/8, x13, x9, x10)

inst_153:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27090d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1aee25 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4a2da9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e27090d; op2val:0xc01aee25;
op3val:0x7eca2da9; valaddr_reg:x12; val_offset:396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 396*FLEN/8, x13, x9, x10)

inst_154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x133609 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x09b51b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1e6020 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f133609; op2val:0xbf89b51b;
op3val:0x7f1e6020; valaddr_reg:x12; val_offset:399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 399*FLEN/8, x13, x9, x10)

inst_155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x789da9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x448a7d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3edf34 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef89da9; op2val:0xbe448a7d;
op3val:0x7dbedf34; valaddr_reg:x12; val_offset:402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 402*FLEN/8, x13, x9, x10)

inst_156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x175320 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x35a312 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x56bc56 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e975320; op2val:0xbdb5a312;
op3val:0x7cd6bc56; valaddr_reg:x12; val_offset:405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 405*FLEN/8, x13, x9, x10)

inst_157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ea689 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22c32f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35644c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8ea689; op2val:0xc022c32f;
op3val:0x7f35644c; valaddr_reg:x12; val_offset:408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 408*FLEN/8, x13, x9, x10)

inst_158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0543e0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00e517 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x063264 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8543e0; op2val:0xc000e517;
op3val:0x7f063264; valaddr_reg:x12; val_offset:411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 411*FLEN/8, x13, x9, x10)

inst_159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ea107 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6c02b1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5bfef4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeea107; op2val:0xbe6c02b1;
op3val:0x7ddbfef4; valaddr_reg:x12; val_offset:414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 414*FLEN/8, x13, x9, x10)

inst_160:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d82d835; op2val:0xc039e73f;
op3val:0x7e3e08e0; valaddr_reg:x12; val_offset:417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 417*FLEN/8, x13, x9, x10)

inst_161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3fd529; op2val:0xbe569c36;
op3val:0x7e20d13f; valaddr_reg:x12; val_offset:420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 420*FLEN/8, x13, x9, x10)

inst_162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef67a3b; op2val:0xbf371e70;
op3val:0x7eb04eaf; valaddr_reg:x12; val_offset:423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 423*FLEN/8, x13, x9, x10)

inst_163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eae00ba; op2val:0xbf8bd260;
op3val:0x7ebe12c6; valaddr_reg:x12; val_offset:426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 426*FLEN/8, x13, x9, x10)

inst_164:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13a21e; op2val:0xc08a4105;
op3val:0x7f1f75c7; valaddr_reg:x12; val_offset:429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 429*FLEN/8, x13, x9, x10)

inst_165:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8992a2; op2val:0xc0275676;
op3val:0x7e33da3d; valaddr_reg:x12; val_offset:432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 432*FLEN/8, x13, x9, x10)

inst_166:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c75a735; op2val:0xc15581bc;
op3val:0x7e4ce09d; valaddr_reg:x12; val_offset:435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 435*FLEN/8, x13, x9, x10)

inst_167:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e466afe; op2val:0xc075a3a7;
op3val:0x7f3e633d; valaddr_reg:x12; val_offset:438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 438*FLEN/8, x13, x9, x10)

inst_168:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e28ecea; op2val:0xbf8ded2e;
op3val:0x7e3b4dfe; valaddr_reg:x12; val_offset:441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 441*FLEN/8, x13, x9, x10)

inst_169:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4cef54; op2val:0xbfcb1960;
op3val:0x7ea29618; valaddr_reg:x12; val_offset:444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 444*FLEN/8, x13, x9, x10)

inst_170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2b296b; op2val:0xbe494e1c;
op3val:0x7e0697be; valaddr_reg:x12; val_offset:447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 447*FLEN/8, x13, x9, x10)

inst_171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efea866; op2val:0xbfbc2825;
op3val:0x7f3b2b9b; valaddr_reg:x12; val_offset:450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 450*FLEN/8, x13, x9, x10)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2116951087,64,FLEN)
NAN_BOXED(3230127222,32,FLEN)
NAN_BOXED(2134426297,64,FLEN)
NAN_BOXED(2109868884,64,FLEN)
NAN_BOXED(3232925762,32,FLEN)
NAN_BOXED(2131186472,64,FLEN)
NAN_BOXED(2105727029,64,FLEN)
NAN_BOXED(2105727029,32,FLEN)
NAN_BOXED(2117994720,64,FLEN)
NAN_BOXED(2134889769,64,FLEN)
NAN_BOXED(3193347126,32,FLEN)
NAN_BOXED(3193347126,64,FLEN)
NAN_BOXED(2130082363,64,FLEN)
NAN_BOXED(2130082363,32,FLEN)
NAN_BOXED(2130082363,64,FLEN)
NAN_BOXED(2125332666,64,FLEN)
NAN_BOXED(3213611616,32,FLEN)
NAN_BOXED(2125332666,64,FLEN)
NAN_BOXED(2115215902,64,FLEN)
NAN_BOXED(3230286085,32,FLEN)
NAN_BOXED(3230286085,64,FLEN)
NAN_BOXED(2106167970,64,FLEN)
NAN_BOXED(3223803510,32,FLEN)
NAN_BOXED(2106167970,64,FLEN)
NAN_BOXED(2088085301,64,FLEN)
NAN_BOXED(2088085301,32,FLEN)
NAN_BOXED(2088085301,64,FLEN)
NAN_BOXED(2124188412,64,FLEN)
NAN_BOXED(3222117872,32,FLEN)
NAN_BOXED(2133668419,64,FLEN)
NAN_BOXED(2123468960,64,FLEN)
NAN_BOXED(3197738104,32,FLEN)
NAN_BOXED(2108600529,64,FLEN)
NAN_BOXED(2118544126,64,FLEN)
NAN_BOXED(2118544126,32,FLEN)
NAN_BOXED(2134795069,64,FLEN)
NAN_BOXED(2101464820,64,FLEN)
NAN_BOXED(3239921685,32,FLEN)
NAN_BOXED(2129536253,64,FLEN)
NAN_BOXED(2123421893,64,FLEN)
NAN_BOXED(3219144647,32,FLEN)
NAN_BOXED(2130559878,64,FLEN)
NAN_BOXED(2122446301,64,FLEN)
NAN_BOXED(3221404222,32,FLEN)
NAN_BOXED(2131016397,64,FLEN)
NAN_BOXED(2126451239,64,FLEN)
NAN_BOXED(3215401775,32,FLEN)
NAN_BOXED(2130279988,64,FLEN)
NAN_BOXED(2133659745,64,FLEN)
NAN_BOXED(3206883738,32,FLEN)
NAN_BOXED(2128564061,64,FLEN)
NAN_BOXED(2111460076,64,FLEN)
NAN_BOXED(3202867654,32,FLEN)
NAN_BOXED(2101723488,64,FLEN)
NAN_BOXED(2134221905,64,FLEN)
NAN_BOXED(3204725634,32,FLEN)
NAN_BOXED(2126226918,64,FLEN)
NAN_BOXED(2115297598,64,FLEN)
NAN_BOXED(3231459972,32,FLEN)
NAN_BOXED(2134221816,64,FLEN)
NAN_BOXED(2128499265,64,FLEN)
NAN_BOXED(3215009927,32,FLEN)
NAN_BOXED(2131490029,64,FLEN)
test_dataset_1:
NAN_BOXED(2133402861,32,FLEN)
NAN_BOXED(3198551142,32,FLEN)
NAN_BOXED(2119918005,32,FLEN)
NAN_BOXED(2122905782,32,FLEN)
NAN_BOXED(3223161936,32,FLEN)
NAN_BOXED(2133366582,32,FLEN)
NAN_BOXED(2110739101,32,FLEN)
NAN_BOXED(3233100520,32,FLEN)
NAN_BOXED(2131934884,32,FLEN)
NAN_BOXED(2106978397,32,FLEN)
NAN_BOXED(3236053038,32,FLEN)
NAN_BOXED(2131002313,32,FLEN)
NAN_BOXED(2131152857,32,FLEN)
NAN_BOXED(3215798006,32,FLEN)
NAN_BOXED(2134271586,32,FLEN)
NAN_BOXED(2132931421,32,FLEN)
NAN_BOXED(3206076761,32,FLEN)
NAN_BOXED(2126603263,32,FLEN)
NAN_BOXED(2115488564,32,FLEN)
NAN_BOXED(3208805856,32,FLEN)
NAN_BOXED(2112267586,32,FLEN)
NAN_BOXED(2127234894,32,FLEN)
NAN_BOXED(3212236201,32,FLEN)
NAN_BOXED(2126758521,32,FLEN)
NAN_BOXED(2103142304,32,FLEN)
NAN_BOXED(3242874853,32,FLEN)
NAN_BOXED(2133682969,32,FLEN)
NAN_BOXED(2126698788,32,FLEN)
NAN_BOXED(3216042042,32,FLEN)
NAN_BOXED(2131142154,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3213749550,32,FLEN)
NAN_BOXED(2117815806,32,FLEN)
NAN_BOXED(2081582349,32,FLEN)
NAN_BOXED(3253104178,32,FLEN)
NAN_BOXED(2122566913,32,FLEN)
NAN_BOXED(2118971220,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2124584472,32,FLEN)
NAN_BOXED(2123414870,32,FLEN)
NAN_BOXED(3222120848,32,FLEN)
NAN_BOXED(2132815950,32,FLEN)
NAN_BOXED(2133535083,32,FLEN)
NAN_BOXED(3192475164,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2123901524,32,FLEN)
NAN_BOXED(3201742799,32,FLEN)
NAN_BOXED(2113880392,32,FLEN)
NAN_BOXED(2130618470,32,FLEN)
NAN_BOXED(3216779301,32,FLEN)
NAN_BOXED(2134584219,32,FLEN)
NAN_BOXED(2115697949,32,FLEN)
NAN_BOXED(3228766975,32,FLEN)
NAN_BOXED(2131962307,32,FLEN)
NAN_BOXED(2120642354,32,FLEN)
NAN_BOXED(3174330383,32,FLEN)
NAN_BOXED(2082630414,32,FLEN)
NAN_BOXED(2131934920,32,FLEN)
NAN_BOXED(3202677538,32,FLEN)
NAN_BOXED(2122531295,32,FLEN)
NAN_BOXED(2114104890,32,FLEN)
NAN_BOXED(3223574413,32,FLEN)
NAN_BOXED(2124891632,32,FLEN)
NAN_BOXED(2117203419,32,FLEN)
NAN_BOXED(3219294567,32,FLEN)
NAN_BOXED(2124249744,32,FLEN)
NAN_BOXED(2125154516,32,FLEN)
NAN_BOXED(3211780258,32,FLEN)
NAN_BOXED(2124447562,32,FLEN)
NAN_BOXED(2128739522,32,FLEN)
NAN_BOXED(3204134094,32,FLEN)
NAN_BOXED(2120073583,32,FLEN)
NAN_BOXED(2106726258,32,FLEN)
NAN_BOXED(3211098343,32,FLEN)
NAN_BOXED(2105734136,32,FLEN)
NAN_BOXED(2107874996,32,FLEN)
NAN_BOXED(3231481432,32,FLEN)
NAN_BOXED(2127039213,32,FLEN)
NAN_BOXED(2122993036,32,FLEN)
NAN_BOXED(3222242966,32,FLEN)
NAN_BOXED(2132481039,32,FLEN)
NAN_BOXED(2126636026,32,FLEN)
NAN_BOXED(3216213651,32,FLEN)
NAN_BOXED(2131228756,32,FLEN)
NAN_BOXED(2134649977,32,FLEN)
NAN_BOXED(3179517902,32,FLEN)
NAN_BOXED(2101441712,32,FLEN)
NAN_BOXED(2085629826,32,FLEN)
NAN_BOXED(3238303059,32,FLEN)
NAN_BOXED(2111284190,32,FLEN)
NAN_BOXED(2123651602,32,FLEN)
NAN_BOXED(3216904614,32,FLEN)
NAN_BOXED(2128366120,32,FLEN)
NAN_BOXED(2131676388,32,FLEN)
NAN_BOXED(3203526477,32,FLEN)
NAN_BOXED(2122773600,32,FLEN)
NAN_BOXED(2134459856,32,FLEN)
NAN_BOXED(3142037296,32,FLEN)
NAN_BOXED(2064679951,32,FLEN)
NAN_BOXED(2132833091,32,FLEN)
NAN_BOXED(3196106318,32,FLEN)
NAN_BOXED(2116114377,32,FLEN)
NAN_BOXED(2133330126,32,FLEN)
NAN_BOXED(3172664250,32,FLEN)
NAN_BOXED(2093711247,32,FLEN)
NAN_BOXED(2134462382,32,FLEN)
NAN_BOXED(3209259749,32,FLEN)
NAN_BOXED(2131873008,32,FLEN)
NAN_BOXED(2134780692,32,FLEN)
NAN_BOXED(3205884294,32,FLEN)
NAN_BOXED(2128525591,32,FLEN)
NAN_BOXED(2114489475,32,FLEN)
NAN_BOXED(3232665206,32,FLEN)
NAN_BOXED(2134521596,32,FLEN)
NAN_BOXED(2125040527,32,FLEN)
NAN_BOXED(3191951840,32,FLEN)
NAN_BOXED(2105542768,32,FLEN)
NAN_BOXED(2129164649,32,FLEN)
NAN_BOXED(3209838542,32,FLEN)
NAN_BOXED(2126441865,32,FLEN)
NAN_BOXED(2125837374,32,FLEN)
NAN_BOXED(3198628241,32,FLEN)
NAN_BOXED(2112706439,32,FLEN)
NAN_BOXED(2109435138,32,FLEN)
NAN_BOXED(3231206397,32,FLEN)
NAN_BOXED(2128543927,32,FLEN)
NAN_BOXED(2125321512,32,FLEN)
NAN_BOXED(3197043961,32,FLEN)
NAN_BOXED(2109881060,32,FLEN)
NAN_BOXED(2124989183,32,FLEN)
NAN_BOXED(3218296640,32,FLEN)
NAN_BOXED(2131447031,32,FLEN)
NAN_BOXED(2131320763,32,FLEN)
NAN_BOXED(3207110923,32,FLEN)
NAN_BOXED(2125789821,32,FLEN)
NAN_BOXED(2123838332,32,FLEN)
NAN_BOXED(3211433130,32,FLEN)
NAN_BOXED(2123009246,32,FLEN)
NAN_BOXED(2116891383,32,FLEN)
NAN_BOXED(3210752892,32,FLEN)
NAN_BOXED(2115481453,32,FLEN)
NAN_BOXED(2125158744,32,FLEN)
NAN_BOXED(3195552474,32,FLEN)
NAN_BOXED(2108042061,32,FLEN)
NAN_BOXED(2131442209,32,FLEN)
NAN_BOXED(3212447710,32,FLEN)
NAN_BOXED(2131230565,32,FLEN)
NAN_BOXED(2129318578,32,FLEN)
NAN_BOXED(3172433482,32,FLEN)
NAN_BOXED(2089481759,32,FLEN)
NAN_BOXED(2123092044,32,FLEN)
NAN_BOXED(3214410962,32,FLEN)
NAN_BOXED(2124811423,32,FLEN)
NAN_BOXED(2106547476,32,FLEN)
NAN_BOXED(3240486628,32,FLEN)
NAN_BOXED(2134495384,32,FLEN)
NAN_BOXED(2131825864,32,FLEN)
NAN_BOXED(3207218447,32,FLEN)
NAN_BOXED(2126577120,32,FLEN)
NAN_BOXED(2131190925,32,FLEN)
NAN_BOXED(3197219904,32,FLEN)
NAN_BOXED(2115640977,32,FLEN)
NAN_BOXED(2117088418,32,FLEN)
NAN_BOXED(3222447964,32,FLEN)
NAN_BOXED(2127159916,32,FLEN)
NAN_BOXED(2131678894,32,FLEN)
NAN_BOXED(3210656599,32,FLEN)
NAN_BOXED(2130218341,32,FLEN)
NAN_BOXED(2074364883,32,FLEN)
NAN_BOXED(3266801819,32,FLEN)
NAN_BOXED(2129360113,32,FLEN)
NAN_BOXED(2133753818,32,FLEN)
NAN_BOXED(3209780635,32,FLEN)
NAN_BOXED(2131670576,32,FLEN)
NAN_BOXED(2133989480,32,FLEN)
NAN_BOXED(3213326580,32,FLEN)
NAN_BOXED(2134670857,32,FLEN)
NAN_BOXED(2116798194,32,FLEN)
NAN_BOXED(3215565376,32,FLEN)
NAN_BOXED(2120459882,32,FLEN)
NAN_BOXED(2127703442,32,FLEN)
NAN_BOXED(3219418918,32,FLEN)
NAN_BOXED(2134608855,32,FLEN)
NAN_BOXED(2123221790,32,FLEN)
NAN_BOXED(3223530362,32,FLEN)
NAN_BOXED(2134163666,32,FLEN)
NAN_BOXED(2133019370,32,FLEN)
NAN_BOXED(3206244034,32,FLEN)
NAN_BOXED(2126921680,32,FLEN)
NAN_BOXED(2129660677,32,FLEN)
NAN_BOXED(3217291287,32,FLEN)
NAN_BOXED(2134360326,32,FLEN)
NAN_BOXED(2132173683,32,FLEN)
NAN_BOXED(3200343891,32,FLEN)
NAN_BOXED(2120430068,32,FLEN)
NAN_BOXED(2132959401,32,FLEN)
NAN_BOXED(3194814775,32,FLEN)
NAN_BOXED(2115392578,32,FLEN)
NAN_BOXED(2123239871,32,FLEN)
NAN_BOXED(3223704141,32,FLEN)
NAN_BOXED(2134379596,32,FLEN)
NAN_BOXED(2132976247,32,FLEN)
NAN_BOXED(3200029953,32,FLEN)
NAN_BOXED(2121243634,32,FLEN)
NAN_BOXED(2120161714,32,FLEN)
NAN_BOXED(3221688121,32,FLEN)
NAN_BOXED(2129356707,32,FLEN)
NAN_BOXED(2132920659,32,FLEN)
NAN_BOXED(3209685080,32,FLEN)
NAN_BOXED(2130928801,32,FLEN)
NAN_BOXED(2134096045,32,FLEN)
NAN_BOXED(3209108500,32,FLEN)
NAN_BOXED(2131478597,32,FLEN)
NAN_BOXED(2132647414,32,FLEN)
NAN_BOXED(3208422769,32,FLEN)
NAN_BOXED(2129152956,32,FLEN)
NAN_BOXED(2123043852,32,FLEN)
NAN_BOXED(3214349717,32,FLEN)
NAN_BOXED(2124687642,32,FLEN)
NAN_BOXED(2126259016,32,FLEN)
NAN_BOXED(3213504461,32,FLEN)
NAN_BOXED(2127240269,32,FLEN)
NAN_BOXED(2132864731,32,FLEN)
NAN_BOXED(3198433436,32,FLEN)
NAN_BOXED(2119072053,32,FLEN)
NAN_BOXED(2102579911,32,FLEN)
NAN_BOXED(3240815749,32,FLEN)
NAN_BOXED(2131542720,32,FLEN)
NAN_BOXED(2119174615,32,FLEN)
NAN_BOXED(3217446451,32,FLEN)
NAN_BOXED(2124492202,32,FLEN)
NAN_BOXED(2108933882,32,FLEN)
NAN_BOXED(3236085358,32,FLEN)
NAN_BOXED(2132753251,32,FLEN)
NAN_BOXED(2119328643,32,FLEN)
NAN_BOXED(3213378946,32,FLEN)
NAN_BOXED(2120219643,32,FLEN)
NAN_BOXED(2132437307,32,FLEN)
NAN_BOXED(3206578709,32,FLEN)
NAN_BOXED(2126618743,32,FLEN)
NAN_BOXED(2119499038,32,FLEN)
NAN_BOXED(3226272919,32,FLEN)
NAN_BOXED(2133496451,32,FLEN)
NAN_BOXED(2124292575,32,FLEN)
NAN_BOXED(3210781795,32,FLEN)
NAN_BOXED(2123023150,32,FLEN)
NAN_BOXED(2134465940,32,FLEN)
NAN_BOXED(3209790850,32,FLEN)
NAN_BOXED(2132260370,32,FLEN)
NAN_BOXED(2131722122,32,FLEN)
NAN_BOXED(3198890426,32,FLEN)
NAN_BOXED(2118118435,32,FLEN)
NAN_BOXED(2132551166,32,FLEN)
NAN_BOXED(3208367039,32,FLEN)
NAN_BOXED(2128943120,32,FLEN)
NAN_BOXED(2132758178,32,FLEN)
NAN_BOXED(3202550710,32,FLEN)
NAN_BOXED(2123188740,32,FLEN)
NAN_BOXED(2132142137,32,FLEN)
NAN_BOXED(3212973007,32,FLEN)
NAN_BOXED(2132301581,32,FLEN)
NAN_BOXED(2123692059,32,FLEN)
NAN_BOXED(3218604939,32,FLEN)
NAN_BOXED(2130405069,32,FLEN)
NAN_BOXED(2132135516,32,FLEN)
NAN_BOXED(3215125204,32,FLEN)
NAN_BOXED(2134813698,32,FLEN)
NAN_BOXED(2133899778,32,FLEN)
NAN_BOXED(3210390749,32,FLEN)
NAN_BOXED(2132211131,32,FLEN)
NAN_BOXED(2110923257,32,FLEN)
NAN_BOXED(3230580837,32,FLEN)
NAN_BOXED(2129287561,32,FLEN)
NAN_BOXED(2130937612,32,FLEN)
NAN_BOXED(3187809649,32,FLEN)
NAN_BOXED(2105914218,32,FLEN)
NAN_BOXED(2125573215,32,FLEN)
NAN_BOXED(3220198043,32,FLEN)
NAN_BOXED(2133248750,32,FLEN)
NAN_BOXED(2133710755,32,FLEN)
NAN_BOXED(3213021103,32,FLEN)
NAN_BOXED(2133960979,32,FLEN)
NAN_BOXED(2106483204,32,FLEN)
NAN_BOXED(3234960004,32,FLEN)
NAN_BOXED(2129207047,32,FLEN)
NAN_BOXED(2133202173,32,FLEN)
NAN_BOXED(3208719194,32,FLEN)
NAN_BOXED(2130355174,32,FLEN)
NAN_BOXED(2121642682,32,FLEN)
NAN_BOXED(3187134540,32,FLEN)
NAN_BOXED(2095961948,32,FLEN)
NAN_BOXED(2133891492,32,FLEN)
NAN_BOXED(3211729242,32,FLEN)
NAN_BOXED(2133127406,32,FLEN)
NAN_BOXED(2130378659,32,FLEN)
NAN_BOXED(3205460281,32,FLEN)
NAN_BOXED(2123146191,32,FLEN)
NAN_BOXED(2132742069,32,FLEN)
NAN_BOXED(3212560628,32,FLEN)
NAN_BOXED(2132570434,32,FLEN)
NAN_BOXED(2131436847,32,FLEN)
NAN_BOXED(3209943624,32,FLEN)
NAN_BOXED(2129022101,32,FLEN)
NAN_BOXED(2121611222,32,FLEN)
NAN_BOXED(3211644127,32,FLEN)
NAN_BOXED(2120468719,32,FLEN)
NAN_BOXED(2122925781,32,FLEN)
NAN_BOXED(3211396092,32,FLEN)
NAN_BOXED(2121988548,32,FLEN)
NAN_BOXED(2127016804,32,FLEN)
NAN_BOXED(3193992471,32,FLEN)
NAN_BOXED(2108627023,32,FLEN)
NAN_BOXED(2131394928,32,FLEN)
NAN_BOXED(3203860082,32,FLEN)
NAN_BOXED(2122688095,32,FLEN)
NAN_BOXED(2113231733,32,FLEN)
NAN_BOXED(3217835048,32,FLEN)
NAN_BOXED(2118370869,32,FLEN)
NAN_BOXED(2123726078,32,FLEN)
NAN_BOXED(3213740451,32,FLEN)
NAN_BOXED(2124781358,32,FLEN)
NAN_BOXED(2132160215,32,FLEN)
NAN_BOXED(3187842692,32,FLEN)
NAN_BOXED(2107195792,32,FLEN)
NAN_BOXED(2116744602,32,FLEN)
NAN_BOXED(3215495657,32,FLEN)
NAN_BOXED(2120295741,32,FLEN)
NAN_BOXED(2114433401,32,FLEN)
NAN_BOXED(3230120551,32,FLEN)
NAN_BOXED(2131747529,32,FLEN)
NAN_BOXED(2108125298,32,FLEN)
NAN_BOXED(3203331643,32,FLEN)
NAN_BOXED(2099006359,32,FLEN)
NAN_BOXED(2127917720,32,FLEN)
NAN_BOXED(3215558112,32,FLEN)
NAN_BOXED(2131580998,32,FLEN)
NAN_BOXED(2132699702,32,FLEN)
NAN_BOXED(3207436132,32,FLEN)
NAN_BOXED(2128008939,32,FLEN)
NAN_BOXED(2121987067,32,FLEN)
NAN_BOXED(3224156916,32,FLEN)
NAN_BOXED(2133414706,32,FLEN)
NAN_BOXED(2131580707,32,FLEN)
NAN_BOXED(3206973807,32,FLEN)
NAN_BOXED(2125980868,32,FLEN)
NAN_BOXED(2128093532,32,FLEN)
NAN_BOXED(3218399255,32,FLEN)
NAN_BOXED(2134096082,32,FLEN)
NAN_BOXED(2134867476,32,FLEN)
NAN_BOXED(3211724764,32,FLEN)
NAN_BOXED(2134035606,32,FLEN)
NAN_BOXED(2110505399,32,FLEN)
NAN_BOXED(3223171009,32,FLEN)
NAN_BOXED(2121991009,32,FLEN)
NAN_BOXED(2124192392,32,FLEN)
NAN_BOXED(3201572687,32,FLEN)
NAN_BOXED(2114044704,32,FLEN)
NAN_BOXED(2131906675,32,FLEN)
NAN_BOXED(3181610575,32,FLEN)
NAN_BOXED(2101013498,32,FLEN)
NAN_BOXED(2133484550,32,FLEN)
NAN_BOXED(3207129635,32,FLEN)
NAN_BOXED(2128665334,32,FLEN)
NAN_BOXED(2129375065,32,FLEN)
NAN_BOXED(3207399118,32,FLEN)
NAN_BOXED(2124368835,32,FLEN)
NAN_BOXED(2134101868,32,FLEN)
NAN_BOXED(3206420451,32,FLEN)
NAN_BOXED(2128483736,32,FLEN)
NAN_BOXED(2133599091,32,FLEN)
NAN_BOXED(3213081437,32,FLEN)
NAN_BOXED(2133928002,32,FLEN)
NAN_BOXED(2131026687,32,FLEN)
NAN_BOXED(3216366830,32,FLEN)
NAN_BOXED(2134691419,32,FLEN)
NAN_BOXED(2126251127,32,FLEN)
NAN_BOXED(3208619444,32,FLEN)
NAN_BOXED(2123153672,32,FLEN)
NAN_BOXED(2132937834,32,FLEN)
NAN_BOXED(3206555109,32,FLEN)
NAN_BOXED(2127216511,32,FLEN)
NAN_BOXED(2121083897,32,FLEN)
NAN_BOXED(3222074246,32,FLEN)
NAN_BOXED(2130875817,32,FLEN)
NAN_BOXED(2125904961,32,FLEN)
NAN_BOXED(3196688699,32,FLEN)
NAN_BOXED(2110025792,32,FLEN)
NAN_BOXED(2132860266,32,FLEN)
NAN_BOXED(3206070758,32,FLEN)
NAN_BOXED(2126510750,32,FLEN)
NAN_BOXED(2134542974,32,FLEN)
NAN_BOXED(3205275013,32,FLEN)
NAN_BOXED(2127359242,32,FLEN)
NAN_BOXED(2134106040,32,FLEN)
NAN_BOXED(3198027021,32,FLEN)
NAN_BOXED(2120093505,32,FLEN)
NAN_BOXED(2116487437,32,FLEN)
NAN_BOXED(3222990373,32,FLEN)
NAN_BOXED(2127179177,32,FLEN)
NAN_BOXED(2131965449,32,FLEN)
NAN_BOXED(3213473051,32,FLEN)
NAN_BOXED(2132697120,32,FLEN)
NAN_BOXED(2130222505,32,FLEN)
NAN_BOXED(3192162941,32,FLEN)
NAN_BOXED(2109660980,32,FLEN)
NAN_BOXED(2123846432,32,FLEN)
NAN_BOXED(3182797586,32,FLEN)
NAN_BOXED(2094447702,32,FLEN)
NAN_BOXED(2123277961,32,FLEN)
NAN_BOXED(3223503663,32,FLEN)
NAN_BOXED(2134205516,32,FLEN)
NAN_BOXED(2122662880,32,FLEN)
NAN_BOXED(3221284119,32,FLEN)
NAN_BOXED(2131112548,32,FLEN)
NAN_BOXED(2129568007,32,FLEN)
NAN_BOXED(3194749617,32,FLEN)
NAN_BOXED(2111569652,32,FLEN)
NAN_BOXED(2105727029,32,FLEN)
NAN_BOXED(3225020223,32,FLEN)
NAN_BOXED(2117994720,32,FLEN)
NAN_BOXED(2134889769,32,FLEN)
NAN_BOXED(3193347126,32,FLEN)
NAN_BOXED(2116079935,32,FLEN)
NAN_BOXED(2130082363,32,FLEN)
NAN_BOXED(3208060528,32,FLEN)
NAN_BOXED(2125483695,32,FLEN)
NAN_BOXED(2125332666,32,FLEN)
NAN_BOXED(3213611616,32,FLEN)
NAN_BOXED(2126385862,32,FLEN)
NAN_BOXED(2115215902,32,FLEN)
NAN_BOXED(3230286085,32,FLEN)
NAN_BOXED(2132768199,32,FLEN)
NAN_BOXED(2106167970,32,FLEN)
NAN_BOXED(3223803510,32,FLEN)
NAN_BOXED(2117327421,32,FLEN)
NAN_BOXED(2088085301,32,FLEN)
NAN_BOXED(3243606460,32,FLEN)
NAN_BOXED(2118967453,32,FLEN)
NAN_BOXED(2118544126,32,FLEN)
NAN_BOXED(3228935079,32,FLEN)
NAN_BOXED(2134795069,32,FLEN)
NAN_BOXED(2116611306,32,FLEN)
NAN_BOXED(3213749550,32,FLEN)
NAN_BOXED(2117815806,32,FLEN)
NAN_BOXED(2118971220,32,FLEN)
NAN_BOXED(3217758560,32,FLEN)
NAN_BOXED(2124584472,32,FLEN)
NAN_BOXED(2133535083,32,FLEN)
NAN_BOXED(3192475164,32,FLEN)
NAN_BOXED(2114361278,32,FLEN)
NAN_BOXED(2130618470,32,FLEN)
NAN_BOXED(3216779301,32,FLEN)
NAN_BOXED(2134584219,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 40*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
