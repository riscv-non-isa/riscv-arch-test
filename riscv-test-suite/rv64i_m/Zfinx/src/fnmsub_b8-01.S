
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 07:40:16 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fnmsub.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fnmsub_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fnmsub_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x30, rs2==x31, rs3==x29, rd==x31,fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x31; op3:x29; dest:x31; op1val:0x3f45f69a; op2val:0xbd47b766;
op3val:0x3d1a7085; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x31, x29, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x29, rs2==x30, rs3==x31, rd==x29,fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x29; op2:x30; op3:x31; dest:x29; op1val:0x3f45f69a; op2val:0xbd47b766;
op3val:0x3d1a7085; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x29, x29, x30, x31, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x28, rs2==x28, rs3==x30, rd==x28,fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x28; op2:x28; op3:x30; dest:x28; op1val:0x3f45f69a; op2val:0x3f45f69a;
op3val:0x3d1a7085; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x28, x28, x28, x30, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==x31, rs2==x27, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x31; op2:x27; op3:x27; dest:x27; op1val:0x3f45f69a; op2val:0xbd47b766;
op3val:0xbd47b766; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x27, x31, x27, x27, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 == rs3 != rd, rs1==x26, rs2==x26, rs3==x26, rd==x30,fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x26; op2:x26; op3:x26; dest:x30; op1val:0x3f45f69a; op2val:0x3f45f69a;
op3val:0x3f45f69a; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x30, x26, x26, x26, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x25, rs2==x29, rs3==x25, rd==x26,fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x25; op2:x29; op3:x25; dest:x26; op1val:0x3f5fa8c7; op2val:0xbeacfcc5;
op3val:0x3f5fa8c7; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x26, x25, x29, x25, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x27, rs2==x24, rs3==x24, rd==x25,fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x27; op2:x24; op3:x24; dest:x25; op1val:0x3f5fa8c7; op2val:0xbeacfcc5;
op3val:0xbeacfcc5; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x25, x27, x24, x24, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rd == rs3 != rs2, rs1==x23, rs2==x25, rs3==x23, rd==x23,fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x23; op2:x25; op3:x23; dest:x23; op1val:0x3f5fa8c7; op2val:0xbeacfcc5;
op3val:0x3f5fa8c7; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x23, x23, x25, x23, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==x22, rs2==x22, rs3==x22, rd==x22,fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x22; op2:x22; op3:x22; dest:x22; op1val:0x3f5fa8c7; op2val:0x3f5fa8c7;
op3val:0x3f5fa8c7; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x22, x22, x22, x22, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x24, rs2==x23, rs3==x21, rd==x21,fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x24; op2:x23; op3:x21; dest:x21; op1val:0x3f5fa8c7; op2val:0xbeacfcc5;
op3val:0x3e97223c; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x21, x24, x23, x21, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x21, rs2==x20, rs3==x28, rd==x24,fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a314c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52983c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40a7b5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x21; op2:x20; op3:x28; dest:x24; op1val:0x3f6a314c; op2val:0xbf52983c;
op3val:0x3f40a7b5; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x24, x21, x20, x28, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x19, rs2==x19, rs3==x18, rd==x20,fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a314c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52983c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40a7b5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x19; op2:x19; op3:x18; dest:x20; op1val:0x3f6a314c; op2val:0x3f6a314c;
op3val:0x3f40a7b5; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x20, x19, x19, x18, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x18, rs2==x21, rs3==x20, rd==x19,fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a314c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52983c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40a7b5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x18; op2:x21; op3:x20; dest:x19; op1val:0x3f6a314c; op2val:0xbf52983c;
op3val:0x3f40a7b5; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x19, x18, x21, x20, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x20, rs2==x17, rs3==x19, rd==x18,fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a314c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52983c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40a7b5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x20; op2:x17; op3:x19; dest:x18; op1val:0x3f6a314c; op2val:0xbf52983c;
op3val:0x3f40a7b5; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x18, x20, x17, x19, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x18, rs3==x15, rd==x17,fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a314c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52983c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40a7b5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x16; op2:x18; op3:x15; dest:x17; op1val:0x3f6a314c; op2val:0xbf52983c;
op3val:0x3f40a7b5; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x17, x16, x18, x15, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x17, rs2==x15, rs3==x14, rd==x16,fs1 == 0 and fe1 == 0x74 and fm1 == 0x6472bf and fs2 == 1 and fe2 == 0x88 and fm2 == 0x62cdc3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a64ea and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x17; op2:x15; op3:x14; dest:x16; op1val:0x3a6472bf; op2val:0xc462cdc3;
op3val:0x3f4a64ea; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x16, x17, x15, x14, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rs3==x17, rd==x15,fs1 == 0 and fe1 == 0x74 and fm1 == 0x6472bf and fs2 == 1 and fe2 == 0x88 and fm2 == 0x62cdc3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a64ea and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x14; op2:x16; op3:x17; dest:x15; op1val:0x3a6472bf; op2val:0xc462cdc3;
op3val:0x3f4a64ea; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x15, x14, x16, x17, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x15, rs2==x13, rs3==x16, rd==x14,fs1 == 0 and fe1 == 0x74 and fm1 == 0x6472bf and fs2 == 1 and fe2 == 0x88 and fm2 == 0x62cdc3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a64ea and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x15; op2:x13; op3:x16; dest:x14; op1val:0x3a6472bf; op2val:0xc462cdc3;
op3val:0x3f4a64ea; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x14, x15, x13, x16, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x14, rs3==x11, rd==x13,fs1 == 0 and fe1 == 0x74 and fm1 == 0x6472bf and fs2 == 1 and fe2 == 0x88 and fm2 == 0x62cdc3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a64ea and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x12; op2:x14; op3:x11; dest:x13; op1val:0x3a6472bf; op2val:0xc462cdc3;
op3val:0x3f4a64ea; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x13, x12, x14, x11, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x13, rs2==x11, rs3==x10, rd==x12,fs1 == 0 and fe1 == 0x74 and fm1 == 0x6472bf and fs2 == 1 and fe2 == 0x88 and fm2 == 0x62cdc3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a64ea and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x13; op2:x11; op3:x10; dest:x12; op1val:0x3a6472bf; op2val:0xc462cdc3;
op3val:0x3f4a64ea; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x12, x13, x11, x10, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x12, rs3==x13, rd==x11,fs1 == 0 and fe1 == 0x7d and fm1 == 0x375d05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x414fb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a7635 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x10; op2:x12; op3:x13; dest:x11; op1val:0x3eb75d05; op2val:0xbfc14fb1;
op3val:0x3f0a7635; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x11, x10, x12, x13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x12,test_dataset_1)

inst_21:
// rs1==x11, rs2==x9, rs3==x12, rd==x10,fs1 == 0 and fe1 == 0x7d and fm1 == 0x375d05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x414fb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a7635 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x11; op2:x9; op3:x12; dest:x10; op1val:0x3eb75d05; op2val:0xbfc14fb1;
op3val:0x3f0a7635; valaddr_reg:x12; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x10, x11, x9, x12, dyn, 32, 0, x12, 0*FLEN/8, x13, x1, x2)

inst_22:
// rs1==x8, rs2==x10, rs3==x7, rd==x9,fs1 == 0 and fe1 == 0x7d and fm1 == 0x375d05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x414fb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a7635 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x8; op2:x10; op3:x7; dest:x9; op1val:0x3eb75d05; op2val:0xbfc14fb1;
op3val:0x3f0a7635; valaddr_reg:x12; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x9, x8, x10, x7, dyn, 64, 0, x12, 3*FLEN/8, x13, x1, x2)

inst_23:
// rs1==x9, rs2==x7, rs3==x6, rd==x8,fs1 == 0 and fe1 == 0x7d and fm1 == 0x375d05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x414fb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a7635 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x9; op2:x7; op3:x6; dest:x8; op1val:0x3eb75d05; op2val:0xbfc14fb1;
op3val:0x3f0a7635; valaddr_reg:x12; val_offset:6*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x8, x9, x7, x6, dyn, 96, 0, x12, 6*FLEN/8, x13, x1, x10)
RVTEST_SIGBASE(x9,signature_x9_0)

inst_24:
// rs1==x6, rs2==x8, rs3==x9, rd==x7,fs1 == 0 and fe1 == 0x7d and fm1 == 0x375d05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x414fb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a7635 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x6; op2:x8; op3:x9; dest:x7; op1val:0x3eb75d05; op2val:0xbfc14fb1;
op3val:0x3f0a7635; valaddr_reg:x12; val_offset:9*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x7, x6, x8, x9, dyn, 128, 0, x12, 9*FLEN/8, x13, x9, x10)

inst_25:
// rs1==x7, rs2==x5, rs3==x8, rd==x6,fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bff83 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c68b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0148d0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x7; op2:x5; op3:x8; dest:x6; op1val:0x3f0bff83; op2val:0xbf6c68b6;
op3val:0x3f0148d0; valaddr_reg:x12; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x6, x7, x5, x8, dyn, 0, 0, x12, 12*FLEN/8, x13, x9, x10)

inst_26:
// rs1==x4, rs2==x6, rs3==x3, rd==x5,fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bff83 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c68b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0148d0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x4; op2:x6; op3:x3; dest:x5; op1val:0x3f0bff83; op2val:0xbf6c68b6;
op3val:0x3f0148d0; valaddr_reg:x12; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x5, x4, x6, x3, dyn, 32, 0, x12, 15*FLEN/8, x13, x9, x10)

inst_27:
// rs1==x5, rs2==x3, rs3==x2, rd==x4,fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bff83 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c68b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0148d0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x5; op2:x3; op3:x2; dest:x4; op1val:0x3f0bff83; op2val:0xbf6c68b6;
op3val:0x3f0148d0; valaddr_reg:x12; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x4, x5, x3, x2, dyn, 64, 0, x12, 18*FLEN/8, x13, x9, x10)

inst_28:
// rs1==x2, rs2==x4, rs3==x5, rd==x3,fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bff83 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c68b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0148d0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x2; op2:x4; op3:x5; dest:x3; op1val:0x3f0bff83; op2val:0xbf6c68b6;
op3val:0x3f0148d0; valaddr_reg:x12; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x3, x2, x4, x5, dyn, 96, 0, x12, 21*FLEN/8, x13, x9, x10)

inst_29:
// rs1==x3, rs2==x1, rs3==x4, rd==x2,fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bff83 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c68b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0148d0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x3; op2:x1; op3:x4; dest:x2; op1val:0x3f0bff83; op2val:0xbf6c68b6;
op3val:0x3f0148d0; valaddr_reg:x12; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x2, x3, x1, x4, dyn, 128, 0, x12, 24*FLEN/8, x13, x9, x10)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x3f4ec9f5; op2val:0xbe56d8a7;
op3val:0x3e2d8bd4; valaddr_reg:x12; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x1, x30, x29, dyn, 0, 0, x12, 27*FLEN/8, x13, x9, x10)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0xbe56d8a7;
op3val:0x3e2d8bd4; valaddr_reg:x12; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x0, x30, x29, dyn, 32, 0, x12, 30*FLEN/8, x13, x9, x10)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x3f4ec9f5; op2val:0xbe56d8a7;
op3val:0x3e2d8bd4; valaddr_reg:x12; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x2, x29, dyn, 64, 0, x12, 33*FLEN/8, x13, x9, x10)

inst_33:
// rs2==x0,fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x3f4ec9f5; op2val:0x0;
op3val:0x3e2d8bd4; valaddr_reg:x12; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x0, x29, dyn, 96, 0, x12, 36*FLEN/8, x13, x9, x10)

inst_34:
// rs3==x1,fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x3f4ec9f5; op2val:0xbe56d8a7;
op3val:0x3e2d8bd4; valaddr_reg:x12; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x1, dyn, 128, 0, x12, 39*FLEN/8, x13, x9, x10)

inst_35:
// rs3==x0,fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x0; dest:x31; op1val:0x3f69123a; op2val:0xbf5755fa;
op3val:0x0; valaddr_reg:x12; val_offset:42*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x0, dyn, 0, 0, x12, 42*FLEN/8, x13, x9, x10)

inst_36:
// rd==x1,fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x3f69123a; op2val:0xbf5755fa;
op3val:0x3f440c95; valaddr_reg:x12; val_offset:45*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x1, x31, x30, x29, dyn, 32, 0, x12, 45*FLEN/8, x13, x9, x10)

inst_37:
// rd==x0,fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x3f69123a; op2val:0xbf5755fa;
op3val:0x3f440c95; valaddr_reg:x12; val_offset:48*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x0, x31, x30, x29, dyn, 64, 0, x12, 48*FLEN/8, x13, x9, x10)

inst_38:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69123a; op2val:0xbf5755fa;
op3val:0x3f440c95; valaddr_reg:x12; val_offset:51*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 51*FLEN/8, x13, x9, x10)

inst_39:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69123a; op2val:0xbf5755fa;
op3val:0x3f440c95; valaddr_reg:x12; val_offset:54*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 54*FLEN/8, x13, x9, x10)

inst_40:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ae1d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f895e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bb520 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ae1d9; op2val:0xbf3f895e;
op3val:0x3f3bb520; valaddr_reg:x12; val_offset:57*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57*FLEN/8, x13, x9, x10)

inst_41:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ae1d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f895e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bb520 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ae1d9; op2val:0xbf3f895e;
op3val:0x3f3bb520; valaddr_reg:x12; val_offset:60*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 60*FLEN/8, x13, x9, x10)

inst_42:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ae1d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f895e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bb520 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ae1d9; op2val:0xbf3f895e;
op3val:0x3f3bb520; valaddr_reg:x12; val_offset:63*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 63*FLEN/8, x13, x9, x10)

inst_43:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ae1d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f895e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bb520 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ae1d9; op2val:0xbf3f895e;
op3val:0x3f3bb520; valaddr_reg:x12; val_offset:66*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 66*FLEN/8, x13, x9, x10)

inst_44:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ae1d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f895e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bb520 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ae1d9; op2val:0xbf3f895e;
op3val:0x3f3bb520; valaddr_reg:x12; val_offset:69*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 69*FLEN/8, x13, x9, x10)

inst_45:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x17a357 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x294e60 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x489283 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f17a357; op2val:0xbe294e60;
op3val:0x3dc89283; valaddr_reg:x12; val_offset:72*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 72*FLEN/8, x13, x9, x10)

inst_46:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x17a357 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x294e60 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x489283 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f17a357; op2val:0xbe294e60;
op3val:0x3dc89283; valaddr_reg:x12; val_offset:75*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 75*FLEN/8, x13, x9, x10)

inst_47:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x17a357 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x294e60 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x489283 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f17a357; op2val:0xbe294e60;
op3val:0x3dc89283; valaddr_reg:x12; val_offset:78*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 78*FLEN/8, x13, x9, x10)

inst_48:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x17a357 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x294e60 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x489283 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f17a357; op2val:0xbe294e60;
op3val:0x3dc89283; valaddr_reg:x12; val_offset:81*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 81*FLEN/8, x13, x9, x10)

inst_49:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x17a357 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x294e60 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x489283 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f17a357; op2val:0xbe294e60;
op3val:0x3dc89283; valaddr_reg:x12; val_offset:84*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 84*FLEN/8, x13, x9, x10)

inst_50:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ef4e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36b300 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62e287 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1ef4e9; op2val:0xbfb6b300;
op3val:0x3f62e287; valaddr_reg:x12; val_offset:87*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 87*FLEN/8, x13, x9, x10)

inst_51:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ef4e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36b300 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62e287 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1ef4e9; op2val:0xbfb6b300;
op3val:0x3f62e287; valaddr_reg:x12; val_offset:90*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 90*FLEN/8, x13, x9, x10)

inst_52:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ef4e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36b300 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62e287 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1ef4e9; op2val:0xbfb6b300;
op3val:0x3f62e287; valaddr_reg:x12; val_offset:93*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 93*FLEN/8, x13, x9, x10)

inst_53:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ef4e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36b300 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62e287 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1ef4e9; op2val:0xbfb6b300;
op3val:0x3f62e287; valaddr_reg:x12; val_offset:96*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 96*FLEN/8, x13, x9, x10)

inst_54:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ef4e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36b300 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62e287 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1ef4e9; op2val:0xbfb6b300;
op3val:0x3f62e287; valaddr_reg:x12; val_offset:99*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 99*FLEN/8, x13, x9, x10)

inst_55:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ddc55 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x3983f7 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x099619 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ddc55; op2val:0xbc3983f7;
op3val:0x3c099619; valaddr_reg:x12; val_offset:102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 102*FLEN/8, x13, x9, x10)

inst_56:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ddc55 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x3983f7 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x099619 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ddc55; op2val:0xbc3983f7;
op3val:0x3c099619; valaddr_reg:x12; val_offset:105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 105*FLEN/8, x13, x9, x10)

inst_57:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ddc55 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x3983f7 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x099619 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ddc55; op2val:0xbc3983f7;
op3val:0x3c099619; valaddr_reg:x12; val_offset:108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 108*FLEN/8, x13, x9, x10)

inst_58:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ddc55 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x3983f7 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x099619 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ddc55; op2val:0xbc3983f7;
op3val:0x3c099619; valaddr_reg:x12; val_offset:111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 111*FLEN/8, x13, x9, x10)

inst_59:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ddc55 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x3983f7 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x099619 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ddc55; op2val:0xbc3983f7;
op3val:0x3c099619; valaddr_reg:x12; val_offset:114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 114*FLEN/8, x13, x9, x10)

inst_60:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fd96b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4f91bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x427958 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6fd96b; op2val:0xbecf91bc;
op3val:0x3ec27958; valaddr_reg:x12; val_offset:117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 117*FLEN/8, x13, x9, x10)

inst_61:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fd96b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4f91bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x427958 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6fd96b; op2val:0xbecf91bc;
op3val:0x3ec27958; valaddr_reg:x12; val_offset:120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 120*FLEN/8, x13, x9, x10)

inst_62:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fd96b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4f91bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x427958 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6fd96b; op2val:0xbecf91bc;
op3val:0x3ec27958; valaddr_reg:x12; val_offset:123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 123*FLEN/8, x13, x9, x10)

inst_63:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fd96b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4f91bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x427958 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6fd96b; op2val:0xbecf91bc;
op3val:0x3ec27958; valaddr_reg:x12; val_offset:126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 126*FLEN/8, x13, x9, x10)

inst_64:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fd96b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4f91bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x427958 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6fd96b; op2val:0xbecf91bc;
op3val:0x3ec27958; valaddr_reg:x12; val_offset:129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 129*FLEN/8, x13, x9, x10)

inst_65:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6f7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b6916 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2da5f6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f6f7b; op2val:0xbf0b6916;
op3val:0x3eada5f6; valaddr_reg:x12; val_offset:132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 132*FLEN/8, x13, x9, x10)

inst_66:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6f7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b6916 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2da5f6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f6f7b; op2val:0xbf0b6916;
op3val:0x3eada5f6; valaddr_reg:x12; val_offset:135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 135*FLEN/8, x13, x9, x10)

inst_67:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6f7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b6916 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2da5f6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f6f7b; op2val:0xbf0b6916;
op3val:0x3eada5f6; valaddr_reg:x12; val_offset:138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 138*FLEN/8, x13, x9, x10)

inst_68:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6f7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b6916 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2da5f6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f6f7b; op2val:0xbf0b6916;
op3val:0x3eada5f6; valaddr_reg:x12; val_offset:141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 141*FLEN/8, x13, x9, x10)

inst_69:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6f7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b6916 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2da5f6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f6f7b; op2val:0xbf0b6916;
op3val:0x3eada5f6; valaddr_reg:x12; val_offset:144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 144*FLEN/8, x13, x9, x10)

inst_70:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x295c16 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ee924 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e0dd9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f295c16; op2val:0xbeeee924;
op3val:0x3e9e0dd9; valaddr_reg:x12; val_offset:147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 147*FLEN/8, x13, x9, x10)

inst_71:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x295c16 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ee924 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e0dd9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f295c16; op2val:0xbeeee924;
op3val:0x3e9e0dd9; valaddr_reg:x12; val_offset:150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 150*FLEN/8, x13, x9, x10)

inst_72:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x295c16 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ee924 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e0dd9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f295c16; op2val:0xbeeee924;
op3val:0x3e9e0dd9; valaddr_reg:x12; val_offset:153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 153*FLEN/8, x13, x9, x10)

inst_73:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x295c16 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ee924 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e0dd9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f295c16; op2val:0xbeeee924;
op3val:0x3e9e0dd9; valaddr_reg:x12; val_offset:156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 156*FLEN/8, x13, x9, x10)

inst_74:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x295c16 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ee924 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e0dd9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f295c16; op2val:0xbeeee924;
op3val:0x3e9e0dd9; valaddr_reg:x12; val_offset:159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 159*FLEN/8, x13, x9, x10)

inst_75:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x009e8f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x327aa0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3357b8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f009e8f; op2val:0xbf327aa0;
op3val:0x3eb357b8; valaddr_reg:x12; val_offset:162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 162*FLEN/8, x13, x9, x10)

inst_76:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x009e8f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x327aa0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3357b8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f009e8f; op2val:0xbf327aa0;
op3val:0x3eb357b8; valaddr_reg:x12; val_offset:165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 165*FLEN/8, x13, x9, x10)

inst_77:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x009e8f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x327aa0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3357b8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f009e8f; op2val:0xbf327aa0;
op3val:0x3eb357b8; valaddr_reg:x12; val_offset:168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 168*FLEN/8, x13, x9, x10)

inst_78:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x009e8f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x327aa0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3357b8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f009e8f; op2val:0xbf327aa0;
op3val:0x3eb357b8; valaddr_reg:x12; val_offset:171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 171*FLEN/8, x13, x9, x10)

inst_79:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x009e8f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x327aa0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3357b8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f009e8f; op2val:0xbf327aa0;
op3val:0x3eb357b8; valaddr_reg:x12; val_offset:174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 174*FLEN/8, x13, x9, x10)

inst_80:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x49fbec and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07c670 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5640d7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc9fbec; op2val:0xc087c670;
op3val:0x3ed640d7; valaddr_reg:x12; val_offset:177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 177*FLEN/8, x13, x9, x10)

inst_81:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x49fbec and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07c670 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5640d7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc9fbec; op2val:0xc087c670;
op3val:0x3ed640d7; valaddr_reg:x12; val_offset:180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 180*FLEN/8, x13, x9, x10)

inst_82:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x49fbec and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07c670 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5640d7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc9fbec; op2val:0xc087c670;
op3val:0x3ed640d7; valaddr_reg:x12; val_offset:183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 183*FLEN/8, x13, x9, x10)

inst_83:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x49fbec and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07c670 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5640d7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc9fbec; op2val:0xc087c670;
op3val:0x3ed640d7; valaddr_reg:x12; val_offset:186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 186*FLEN/8, x13, x9, x10)

inst_84:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x49fbec and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07c670 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5640d7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc9fbec; op2val:0xc087c670;
op3val:0x3ed640d7; valaddr_reg:x12; val_offset:189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 189*FLEN/8, x13, x9, x10)

inst_85:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b9cd8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b9a64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f8537 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5b9cd8; op2val:0xbf8b9a64;
op3val:0x3f6f8537; valaddr_reg:x12; val_offset:192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 192*FLEN/8, x13, x9, x10)

inst_86:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b9cd8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b9a64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f8537 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5b9cd8; op2val:0xbf8b9a64;
op3val:0x3f6f8537; valaddr_reg:x12; val_offset:195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 195*FLEN/8, x13, x9, x10)

inst_87:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b9cd8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b9a64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f8537 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5b9cd8; op2val:0xbf8b9a64;
op3val:0x3f6f8537; valaddr_reg:x12; val_offset:198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 198*FLEN/8, x13, x9, x10)

inst_88:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b9cd8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b9a64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f8537 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5b9cd8; op2val:0xbf8b9a64;
op3val:0x3f6f8537; valaddr_reg:x12; val_offset:201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 201*FLEN/8, x13, x9, x10)

inst_89:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b9cd8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b9a64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f8537 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5b9cd8; op2val:0xbf8b9a64;
op3val:0x3f6f8537; valaddr_reg:x12; val_offset:204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 204*FLEN/8, x13, x9, x10)

inst_90:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5cf92b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x17a68b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02e6bb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d5cf92b; op2val:0xc117a68b;
op3val:0x3f02e6bb; valaddr_reg:x12; val_offset:207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 207*FLEN/8, x13, x9, x10)

inst_91:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5cf92b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x17a68b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02e6bb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d5cf92b; op2val:0xc117a68b;
op3val:0x3f02e6bb; valaddr_reg:x12; val_offset:210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 210*FLEN/8, x13, x9, x10)

inst_92:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5cf92b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x17a68b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02e6bb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d5cf92b; op2val:0xc117a68b;
op3val:0x3f02e6bb; valaddr_reg:x12; val_offset:213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 213*FLEN/8, x13, x9, x10)

inst_93:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5cf92b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x17a68b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02e6bb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d5cf92b; op2val:0xc117a68b;
op3val:0x3f02e6bb; valaddr_reg:x12; val_offset:216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 216*FLEN/8, x13, x9, x10)

inst_94:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5cf92b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x17a68b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02e6bb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d5cf92b; op2val:0xc117a68b;
op3val:0x3f02e6bb; valaddr_reg:x12; val_offset:219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 219*FLEN/8, x13, x9, x10)

inst_95:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e5f95 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0912ce and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5d00a0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e5f95; op2val:0xbd8912ce;
op3val:0x3d5d00a0; valaddr_reg:x12; val_offset:222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 222*FLEN/8, x13, x9, x10)

inst_96:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e5f95 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0912ce and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5d00a0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e5f95; op2val:0xbd8912ce;
op3val:0x3d5d00a0; valaddr_reg:x12; val_offset:225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 225*FLEN/8, x13, x9, x10)

inst_97:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e5f95 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0912ce and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5d00a0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e5f95; op2val:0xbd8912ce;
op3val:0x3d5d00a0; valaddr_reg:x12; val_offset:228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 228*FLEN/8, x13, x9, x10)

inst_98:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e5f95 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0912ce and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5d00a0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e5f95; op2val:0xbd8912ce;
op3val:0x3d5d00a0; valaddr_reg:x12; val_offset:231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 231*FLEN/8, x13, x9, x10)

inst_99:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e5f95 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0912ce and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5d00a0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4e5f95; op2val:0xbd8912ce;
op3val:0x3d5d00a0; valaddr_reg:x12; val_offset:234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 234*FLEN/8, x13, x9, x10)

inst_100:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x579252 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24cf2a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ac82f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed79252; op2val:0xbf24cf2a;
op3val:0x3e8ac82f; valaddr_reg:x12; val_offset:237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 237*FLEN/8, x13, x9, x10)

inst_101:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x579252 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24cf2a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ac82f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed79252; op2val:0xbf24cf2a;
op3val:0x3e8ac82f; valaddr_reg:x12; val_offset:240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 240*FLEN/8, x13, x9, x10)

inst_102:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x579252 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24cf2a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ac82f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed79252; op2val:0xbf24cf2a;
op3val:0x3e8ac82f; valaddr_reg:x12; val_offset:243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 243*FLEN/8, x13, x9, x10)

inst_103:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x579252 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24cf2a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ac82f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed79252; op2val:0xbf24cf2a;
op3val:0x3e8ac82f; valaddr_reg:x12; val_offset:246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 246*FLEN/8, x13, x9, x10)

inst_104:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x579252 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24cf2a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ac82f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed79252; op2val:0xbf24cf2a;
op3val:0x3e8ac82f; valaddr_reg:x12; val_offset:249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 249*FLEN/8, x13, x9, x10)

inst_105:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73cb68 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x400737 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36df6e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df3cb68; op2val:0xc0c00737;
op3val:0x3f36df6e; valaddr_reg:x12; val_offset:252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 252*FLEN/8, x13, x9, x10)

inst_106:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73cb68 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x400737 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36df6e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df3cb68; op2val:0xc0c00737;
op3val:0x3f36df6e; valaddr_reg:x12; val_offset:255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 255*FLEN/8, x13, x9, x10)

inst_107:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73cb68 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x400737 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36df6e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df3cb68; op2val:0xc0c00737;
op3val:0x3f36df6e; valaddr_reg:x12; val_offset:258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 258*FLEN/8, x13, x9, x10)

inst_108:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73cb68 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x400737 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36df6e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df3cb68; op2val:0xc0c00737;
op3val:0x3f36df6e; valaddr_reg:x12; val_offset:261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 261*FLEN/8, x13, x9, x10)

inst_109:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73cb68 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x400737 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36df6e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df3cb68; op2val:0xc0c00737;
op3val:0x3f36df6e; valaddr_reg:x12; val_offset:264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 264*FLEN/8, x13, x9, x10)

inst_110:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24af85 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x42136e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x79b306 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f24af85; op2val:0xbe42136e;
op3val:0x3df9b306; valaddr_reg:x12; val_offset:267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 267*FLEN/8, x13, x9, x10)

inst_111:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24af85 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x42136e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x79b306 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f24af85; op2val:0xbe42136e;
op3val:0x3df9b306; valaddr_reg:x12; val_offset:270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 270*FLEN/8, x13, x9, x10)

inst_112:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24af85 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x42136e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x79b306 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f24af85; op2val:0xbe42136e;
op3val:0x3df9b306; valaddr_reg:x12; val_offset:273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 273*FLEN/8, x13, x9, x10)

inst_113:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24af85 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x42136e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x79b306 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f24af85; op2val:0xbe42136e;
op3val:0x3df9b306; valaddr_reg:x12; val_offset:276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 276*FLEN/8, x13, x9, x10)

inst_114:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24af85 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x42136e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x79b306 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f24af85; op2val:0xbe42136e;
op3val:0x3df9b306; valaddr_reg:x12; val_offset:279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 279*FLEN/8, x13, x9, x10)

inst_115:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d723a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b82ef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x715c92 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5d723a; op2val:0xbe8b82ef;
op3val:0x3e715c92; valaddr_reg:x12; val_offset:282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 282*FLEN/8, x13, x9, x10)

inst_116:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d723a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b82ef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x715c92 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5d723a; op2val:0xbe8b82ef;
op3val:0x3e715c92; valaddr_reg:x12; val_offset:285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 285*FLEN/8, x13, x9, x10)

inst_117:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d723a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b82ef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x715c92 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5d723a; op2val:0xbe8b82ef;
op3val:0x3e715c92; valaddr_reg:x12; val_offset:288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 288*FLEN/8, x13, x9, x10)

inst_118:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d723a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b82ef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x715c92 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5d723a; op2val:0xbe8b82ef;
op3val:0x3e715c92; valaddr_reg:x12; val_offset:291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 291*FLEN/8, x13, x9, x10)

inst_119:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d723a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b82ef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x715c92 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5d723a; op2val:0xbe8b82ef;
op3val:0x3e715c92; valaddr_reg:x12; val_offset:294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 294*FLEN/8, x13, x9, x10)

inst_120:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67029b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2fc972 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ea08f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67029b; op2val:0xbeafc972;
op3val:0x3e9ea08f; valaddr_reg:x12; val_offset:297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 297*FLEN/8, x13, x9, x10)

inst_121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67029b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2fc972 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ea08f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67029b; op2val:0xbeafc972;
op3val:0x3e9ea08f; valaddr_reg:x12; val_offset:300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 300*FLEN/8, x13, x9, x10)

inst_122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67029b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2fc972 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ea08f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67029b; op2val:0xbeafc972;
op3val:0x3e9ea08f; valaddr_reg:x12; val_offset:303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 303*FLEN/8, x13, x9, x10)

inst_123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67029b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2fc972 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ea08f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67029b; op2val:0xbeafc972;
op3val:0x3e9ea08f; valaddr_reg:x12; val_offset:306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 306*FLEN/8, x13, x9, x10)

inst_124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67029b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2fc972 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ea08f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67029b; op2val:0xbeafc972;
op3val:0x3e9ea08f; valaddr_reg:x12; val_offset:309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 309*FLEN/8, x13, x9, x10)

inst_125:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x188065 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2be59a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ccd14 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e988065; op2val:0xbe2be59a;
op3val:0x3d4ccd14; valaddr_reg:x12; val_offset:312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 312*FLEN/8, x13, x9, x10)

inst_126:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x188065 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2be59a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ccd14 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e988065; op2val:0xbe2be59a;
op3val:0x3d4ccd14; valaddr_reg:x12; val_offset:315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 315*FLEN/8, x13, x9, x10)

inst_127:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x188065 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2be59a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ccd14 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e988065; op2val:0xbe2be59a;
op3val:0x3d4ccd14; valaddr_reg:x12; val_offset:318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 318*FLEN/8, x13, x9, x10)

inst_128:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x188065 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2be59a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ccd14 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e988065; op2val:0xbe2be59a;
op3val:0x3d4ccd14; valaddr_reg:x12; val_offset:321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 321*FLEN/8, x13, x9, x10)

inst_129:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x188065 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2be59a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ccd14 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e988065; op2val:0xbe2be59a;
op3val:0x3d4ccd14; valaddr_reg:x12; val_offset:324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 324*FLEN/8, x13, x9, x10)

inst_130:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x204361 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4afb96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e2555 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e204361; op2val:0xc04afb96;
op3val:0x3efe2555; valaddr_reg:x12; val_offset:327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 327*FLEN/8, x13, x9, x10)

inst_131:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x204361 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4afb96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e2555 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e204361; op2val:0xc04afb96;
op3val:0x3efe2555; valaddr_reg:x12; val_offset:330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 330*FLEN/8, x13, x9, x10)

inst_132:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x204361 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4afb96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e2555 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e204361; op2val:0xc04afb96;
op3val:0x3efe2555; valaddr_reg:x12; val_offset:333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 333*FLEN/8, x13, x9, x10)

inst_133:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x204361 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4afb96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e2555 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e204361; op2val:0xc04afb96;
op3val:0x3efe2555; valaddr_reg:x12; val_offset:336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 336*FLEN/8, x13, x9, x10)

inst_134:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x204361 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4afb96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e2555 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e204361; op2val:0xc04afb96;
op3val:0x3efe2555; valaddr_reg:x12; val_offset:339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 339*FLEN/8, x13, x9, x10)

inst_135:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d66ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07936b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x598f1f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4d66ee; op2val:0xbf87936b;
op3val:0x3f598f1f; valaddr_reg:x12; val_offset:342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 342*FLEN/8, x13, x9, x10)

inst_136:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d66ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07936b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x598f1f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4d66ee; op2val:0xbf87936b;
op3val:0x3f598f1f; valaddr_reg:x12; val_offset:345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 345*FLEN/8, x13, x9, x10)

inst_137:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d66ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07936b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x598f1f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4d66ee; op2val:0xbf87936b;
op3val:0x3f598f1f; valaddr_reg:x12; val_offset:348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 348*FLEN/8, x13, x9, x10)

inst_138:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d66ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07936b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x598f1f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4d66ee; op2val:0xbf87936b;
op3val:0x3f598f1f; valaddr_reg:x12; val_offset:351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 351*FLEN/8, x13, x9, x10)

inst_139:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d66ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07936b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x598f1f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4d66ee; op2val:0xbf87936b;
op3val:0x3f598f1f; valaddr_reg:x12; val_offset:354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 354*FLEN/8, x13, x9, x10)

inst_140:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x714b96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x052427 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7afcb2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef14b96; op2val:0xbf852427;
op3val:0x3efafcb2; valaddr_reg:x12; val_offset:357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 357*FLEN/8, x13, x9, x10)

inst_141:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x714b96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x052427 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7afcb2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef14b96; op2val:0xbf852427;
op3val:0x3efafcb2; valaddr_reg:x12; val_offset:360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 360*FLEN/8, x13, x9, x10)

inst_142:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x714b96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x052427 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7afcb2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef14b96; op2val:0xbf852427;
op3val:0x3efafcb2; valaddr_reg:x12; val_offset:363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 363*FLEN/8, x13, x9, x10)

inst_143:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x714b96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x052427 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7afcb2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef14b96; op2val:0xbf852427;
op3val:0x3efafcb2; valaddr_reg:x12; val_offset:366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 366*FLEN/8, x13, x9, x10)

inst_144:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x714b96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x052427 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7afcb2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef14b96; op2val:0xbf852427;
op3val:0x3efafcb2; valaddr_reg:x12; val_offset:369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 369*FLEN/8, x13, x9, x10)

inst_145:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6db75d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5572e7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x463443 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6db75d; op2val:0xbdd572e7;
op3val:0x3dc63443; valaddr_reg:x12; val_offset:372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 372*FLEN/8, x13, x9, x10)

inst_146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6db75d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5572e7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x463443 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6db75d; op2val:0xbdd572e7;
op3val:0x3dc63443; valaddr_reg:x12; val_offset:375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 375*FLEN/8, x13, x9, x10)

inst_147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6db75d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5572e7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x463443 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6db75d; op2val:0xbdd572e7;
op3val:0x3dc63443; valaddr_reg:x12; val_offset:378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 378*FLEN/8, x13, x9, x10)

inst_148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6db75d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5572e7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x463443 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6db75d; op2val:0xbdd572e7;
op3val:0x3dc63443; valaddr_reg:x12; val_offset:381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 381*FLEN/8, x13, x9, x10)

inst_149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6db75d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5572e7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x463443 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6db75d; op2val:0xbdd572e7;
op3val:0x3dc63443; valaddr_reg:x12; val_offset:384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 384*FLEN/8, x13, x9, x10)

inst_150:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c33cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b3d6f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18efe4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efc33cf; op2val:0xbf1b3d6f;
op3val:0x3e98efe4; valaddr_reg:x12; val_offset:387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 387*FLEN/8, x13, x9, x10)

inst_151:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c33cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b3d6f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18efe4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efc33cf; op2val:0xbf1b3d6f;
op3val:0x3e98efe4; valaddr_reg:x12; val_offset:390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 390*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_1)

inst_152:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c33cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b3d6f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18efe4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efc33cf; op2val:0xbf1b3d6f;
op3val:0x3e98efe4; valaddr_reg:x12; val_offset:393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 393*FLEN/8, x13, x9, x10)

inst_153:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c33cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b3d6f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18efe4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efc33cf; op2val:0xbf1b3d6f;
op3val:0x3e98efe4; valaddr_reg:x12; val_offset:396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 396*FLEN/8, x13, x9, x10)

inst_154:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c33cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b3d6f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18efe4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efc33cf; op2val:0xbf1b3d6f;
op3val:0x3e98efe4; valaddr_reg:x12; val_offset:399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 399*FLEN/8, x13, x9, x10)

inst_155:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47b106 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x782566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4190ab and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47b106; op2val:0xbf782566;
op3val:0x3f4190ab; valaddr_reg:x12; val_offset:402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 402*FLEN/8, x13, x9, x10)

inst_156:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47b106 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x782566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4190ab and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47b106; op2val:0xbf782566;
op3val:0x3f4190ab; valaddr_reg:x12; val_offset:405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 405*FLEN/8, x13, x9, x10)

inst_157:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47b106 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x782566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4190ab and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47b106; op2val:0xbf782566;
op3val:0x3f4190ab; valaddr_reg:x12; val_offset:408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 408*FLEN/8, x13, x9, x10)

inst_158:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47b106 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x782566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4190ab and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47b106; op2val:0xbf782566;
op3val:0x3f4190ab; valaddr_reg:x12; val_offset:411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 411*FLEN/8, x13, x9, x10)

inst_159:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47b106 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x782566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4190ab and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f47b106; op2val:0xbf782566;
op3val:0x3f4190ab; valaddr_reg:x12; val_offset:414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 414*FLEN/8, x13, x9, x10)

inst_160:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf30f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2913 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2821fe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7cf30f; op2val:0xbf2a2913;
op3val:0x3f2821fe; valaddr_reg:x12; val_offset:417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 417*FLEN/8, x13, x9, x10)

inst_161:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf30f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2913 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2821fe and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7cf30f; op2val:0xbf2a2913;
op3val:0x3f2821fe; valaddr_reg:x12; val_offset:420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 420*FLEN/8, x13, x9, x10)

inst_162:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf30f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2913 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2821fe and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7cf30f; op2val:0xbf2a2913;
op3val:0x3f2821fe; valaddr_reg:x12; val_offset:423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 423*FLEN/8, x13, x9, x10)

inst_163:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf30f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2913 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2821fe and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7cf30f; op2val:0xbf2a2913;
op3val:0x3f2821fe; valaddr_reg:x12; val_offset:426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 426*FLEN/8, x13, x9, x10)

inst_164:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf30f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2913 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2821fe and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7cf30f; op2val:0xbf2a2913;
op3val:0x3f2821fe; valaddr_reg:x12; val_offset:429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 429*FLEN/8, x13, x9, x10)

inst_165:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bb039 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x495558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x139bef and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3bb039; op2val:0xbf495558;
op3val:0x3f139bef; valaddr_reg:x12; val_offset:432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 432*FLEN/8, x13, x9, x10)

inst_166:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bb039 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x495558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x139bef and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3bb039; op2val:0xbf495558;
op3val:0x3f139bef; valaddr_reg:x12; val_offset:435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 435*FLEN/8, x13, x9, x10)

inst_167:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bb039 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x495558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x139bef and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3bb039; op2val:0xbf495558;
op3val:0x3f139bef; valaddr_reg:x12; val_offset:438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 438*FLEN/8, x13, x9, x10)

inst_168:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bb039 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x495558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x139bef and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3bb039; op2val:0xbf495558;
op3val:0x3f139bef; valaddr_reg:x12; val_offset:441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 441*FLEN/8, x13, x9, x10)

inst_169:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bb039 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x495558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x139bef and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3bb039; op2val:0xbf495558;
op3val:0x3f139bef; valaddr_reg:x12; val_offset:444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 444*FLEN/8, x13, x9, x10)

inst_170:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f81c6 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0825d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29a903 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f81c6; op2val:0xbe8825d1;
op3val:0x3e29a903; valaddr_reg:x12; val_offset:447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 447*FLEN/8, x13, x9, x10)

inst_171:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f81c6 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0825d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29a903 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f81c6; op2val:0xbe8825d1;
op3val:0x3e29a903; valaddr_reg:x12; val_offset:450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 450*FLEN/8, x13, x9, x10)

inst_172:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f81c6 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0825d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29a903 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f81c6; op2val:0xbe8825d1;
op3val:0x3e29a903; valaddr_reg:x12; val_offset:453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 453*FLEN/8, x13, x9, x10)

inst_173:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f81c6 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0825d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29a903 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f81c6; op2val:0xbe8825d1;
op3val:0x3e29a903; valaddr_reg:x12; val_offset:456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 456*FLEN/8, x13, x9, x10)

inst_174:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f81c6 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0825d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29a903 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1f81c6; op2val:0xbe8825d1;
op3val:0x3e29a903; valaddr_reg:x12; val_offset:459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 459*FLEN/8, x13, x9, x10)

inst_175:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5e462c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732bed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5322c0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dde462c; op2val:0xc0f32bed;
op3val:0x3f5322c0; valaddr_reg:x12; val_offset:462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 462*FLEN/8, x13, x9, x10)

inst_176:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5e462c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732bed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5322c0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dde462c; op2val:0xc0f32bed;
op3val:0x3f5322c0; valaddr_reg:x12; val_offset:465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 465*FLEN/8, x13, x9, x10)

inst_177:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5e462c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732bed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5322c0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dde462c; op2val:0xc0f32bed;
op3val:0x3f5322c0; valaddr_reg:x12; val_offset:468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 468*FLEN/8, x13, x9, x10)

inst_178:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5e462c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732bed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5322c0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dde462c; op2val:0xc0f32bed;
op3val:0x3f5322c0; valaddr_reg:x12; val_offset:471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 471*FLEN/8, x13, x9, x10)

inst_179:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5e462c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732bed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5322c0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dde462c; op2val:0xc0f32bed;
op3val:0x3f5322c0; valaddr_reg:x12; val_offset:474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 474*FLEN/8, x13, x9, x10)

inst_180:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a8e72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30c7cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x55751e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a8e72; op2val:0xbfb0c7cd;
op3val:0x3f55751e; valaddr_reg:x12; val_offset:477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 477*FLEN/8, x13, x9, x10)

inst_181:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a8e72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30c7cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x55751e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a8e72; op2val:0xbfb0c7cd;
op3val:0x3f55751e; valaddr_reg:x12; val_offset:480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 480*FLEN/8, x13, x9, x10)

inst_182:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a8e72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30c7cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x55751e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a8e72; op2val:0xbfb0c7cd;
op3val:0x3f55751e; valaddr_reg:x12; val_offset:483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 483*FLEN/8, x13, x9, x10)

inst_183:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a8e72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30c7cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x55751e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a8e72; op2val:0xbfb0c7cd;
op3val:0x3f55751e; valaddr_reg:x12; val_offset:486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 486*FLEN/8, x13, x9, x10)

inst_184:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a8e72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30c7cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x55751e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a8e72; op2val:0xbfb0c7cd;
op3val:0x3f55751e; valaddr_reg:x12; val_offset:489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 489*FLEN/8, x13, x9, x10)

inst_185:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c74cb and fs2 == 1 and fe2 == 0x7b and fm2 == 0x18f201 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x4e10bf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eac74cb; op2val:0xbd98f201;
op3val:0x3cce10bf; valaddr_reg:x12; val_offset:492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 492*FLEN/8, x13, x9, x10)

inst_186:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c74cb and fs2 == 1 and fe2 == 0x7b and fm2 == 0x18f201 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x4e10bf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eac74cb; op2val:0xbd98f201;
op3val:0x3cce10bf; valaddr_reg:x12; val_offset:495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 495*FLEN/8, x13, x9, x10)

inst_187:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c74cb and fs2 == 1 and fe2 == 0x7b and fm2 == 0x18f201 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x4e10bf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eac74cb; op2val:0xbd98f201;
op3val:0x3cce10bf; valaddr_reg:x12; val_offset:498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 498*FLEN/8, x13, x9, x10)

inst_188:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c74cb and fs2 == 1 and fe2 == 0x7b and fm2 == 0x18f201 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x4e10bf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eac74cb; op2val:0xbd98f201;
op3val:0x3cce10bf; valaddr_reg:x12; val_offset:501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 501*FLEN/8, x13, x9, x10)

inst_189:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c74cb and fs2 == 1 and fe2 == 0x7b and fm2 == 0x18f201 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x4e10bf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eac74cb; op2val:0xbd98f201;
op3val:0x3cce10bf; valaddr_reg:x12; val_offset:504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 504*FLEN/8, x13, x9, x10)

inst_190:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c564b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x15cb74 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6f213e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c564b; op2val:0xbe95cb74;
op3val:0x3e6f213e; valaddr_reg:x12; val_offset:507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 507*FLEN/8, x13, x9, x10)

inst_191:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c564b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x15cb74 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6f213e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c564b; op2val:0xbe95cb74;
op3val:0x3e6f213e; valaddr_reg:x12; val_offset:510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 510*FLEN/8, x13, x9, x10)

inst_192:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c564b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x15cb74 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6f213e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c564b; op2val:0xbe95cb74;
op3val:0x3e6f213e; valaddr_reg:x12; val_offset:513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 513*FLEN/8, x13, x9, x10)

inst_193:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c564b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x15cb74 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6f213e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c564b; op2val:0xbe95cb74;
op3val:0x3e6f213e; valaddr_reg:x12; val_offset:516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 516*FLEN/8, x13, x9, x10)

inst_194:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c564b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x15cb74 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6f213e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4c564b; op2val:0xbe95cb74;
op3val:0x3e6f213e; valaddr_reg:x12; val_offset:519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 519*FLEN/8, x13, x9, x10)

inst_195:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x333044 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3473a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c9dc5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f333044; op2val:0xbfb473a5;
op3val:0x3f7c9dc5; valaddr_reg:x12; val_offset:522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 522*FLEN/8, x13, x9, x10)

inst_196:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x333044 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3473a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c9dc5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f333044; op2val:0xbfb473a5;
op3val:0x3f7c9dc5; valaddr_reg:x12; val_offset:525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 525*FLEN/8, x13, x9, x10)

inst_197:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x333044 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3473a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c9dc5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f333044; op2val:0xbfb473a5;
op3val:0x3f7c9dc5; valaddr_reg:x12; val_offset:528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 528*FLEN/8, x13, x9, x10)

inst_198:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x333044 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3473a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c9dc5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f333044; op2val:0xbfb473a5;
op3val:0x3f7c9dc5; valaddr_reg:x12; val_offset:531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 531*FLEN/8, x13, x9, x10)

inst_199:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x333044 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3473a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c9dc5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f333044; op2val:0xbfb473a5;
op3val:0x3f7c9dc5; valaddr_reg:x12; val_offset:534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 534*FLEN/8, x13, x9, x10)

inst_200:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x715bd2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x32b765 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x287ec0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e715bd2; op2val:0xc032b765;
op3val:0x3f287ec0; valaddr_reg:x12; val_offset:537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 537*FLEN/8, x13, x9, x10)

inst_201:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x715bd2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x32b765 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x287ec0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e715bd2; op2val:0xc032b765;
op3val:0x3f287ec0; valaddr_reg:x12; val_offset:540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 540*FLEN/8, x13, x9, x10)

inst_202:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x715bd2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x32b765 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x287ec0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e715bd2; op2val:0xc032b765;
op3val:0x3f287ec0; valaddr_reg:x12; val_offset:543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 543*FLEN/8, x13, x9, x10)

inst_203:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x715bd2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x32b765 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x287ec0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e715bd2; op2val:0xc032b765;
op3val:0x3f287ec0; valaddr_reg:x12; val_offset:546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 546*FLEN/8, x13, x9, x10)

inst_204:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x715bd2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x32b765 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x287ec0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e715bd2; op2val:0xc032b765;
op3val:0x3f287ec0; valaddr_reg:x12; val_offset:549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 549*FLEN/8, x13, x9, x10)

inst_205:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x547096 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e1c55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107c0a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f547096; op2val:0xbf2e1c55;
op3val:0x3f107c0a; valaddr_reg:x12; val_offset:552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 552*FLEN/8, x13, x9, x10)

inst_206:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x547096 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e1c55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107c0a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f547096; op2val:0xbf2e1c55;
op3val:0x3f107c0a; valaddr_reg:x12; val_offset:555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 555*FLEN/8, x13, x9, x10)

inst_207:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x547096 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e1c55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107c0a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f547096; op2val:0xbf2e1c55;
op3val:0x3f107c0a; valaddr_reg:x12; val_offset:558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 558*FLEN/8, x13, x9, x10)

inst_208:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x547096 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e1c55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107c0a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f547096; op2val:0xbf2e1c55;
op3val:0x3f107c0a; valaddr_reg:x12; val_offset:561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 561*FLEN/8, x13, x9, x10)

inst_209:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x547096 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e1c55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107c0a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f547096; op2val:0xbf2e1c55;
op3val:0x3f107c0a; valaddr_reg:x12; val_offset:564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 564*FLEN/8, x13, x9, x10)

inst_210:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ae0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x448fa7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x17039f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f44ae0b; op2val:0xbf448fa7;
op3val:0x3f17039f; valaddr_reg:x12; val_offset:567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 567*FLEN/8, x13, x9, x10)

inst_211:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ae0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x448fa7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x17039f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f44ae0b; op2val:0xbf448fa7;
op3val:0x3f17039f; valaddr_reg:x12; val_offset:570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 570*FLEN/8, x13, x9, x10)

inst_212:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ae0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x448fa7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x17039f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f44ae0b; op2val:0xbf448fa7;
op3val:0x3f17039f; valaddr_reg:x12; val_offset:573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 573*FLEN/8, x13, x9, x10)

inst_213:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ae0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x448fa7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x17039f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f44ae0b; op2val:0xbf448fa7;
op3val:0x3f17039f; valaddr_reg:x12; val_offset:576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 576*FLEN/8, x13, x9, x10)

inst_214:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ae0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x448fa7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x17039f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f44ae0b; op2val:0xbf448fa7;
op3val:0x3f17039f; valaddr_reg:x12; val_offset:579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 579*FLEN/8, x13, x9, x10)

inst_215:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dcf72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x067dbc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x150078 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0dcf72; op2val:0xbf867dbc;
op3val:0x3f150078; valaddr_reg:x12; val_offset:582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 582*FLEN/8, x13, x9, x10)

inst_216:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dcf72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x067dbc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x150078 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0dcf72; op2val:0xbf867dbc;
op3val:0x3f150078; valaddr_reg:x12; val_offset:585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 585*FLEN/8, x13, x9, x10)

inst_217:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dcf72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x067dbc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x150078 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0dcf72; op2val:0xbf867dbc;
op3val:0x3f150078; valaddr_reg:x12; val_offset:588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 588*FLEN/8, x13, x9, x10)

inst_218:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dcf72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x067dbc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x150078 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0dcf72; op2val:0xbf867dbc;
op3val:0x3f150078; valaddr_reg:x12; val_offset:591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 591*FLEN/8, x13, x9, x10)

inst_219:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dcf72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x067dbc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x150078 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0dcf72; op2val:0xbf867dbc;
op3val:0x3f150078; valaddr_reg:x12; val_offset:594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 594*FLEN/8, x13, x9, x10)

inst_220:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x52aefc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d3eee and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3614da and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed2aefc; op2val:0xbfdd3eee;
op3val:0x3f3614da; valaddr_reg:x12; val_offset:597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 597*FLEN/8, x13, x9, x10)

inst_221:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x52aefc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d3eee and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3614da and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed2aefc; op2val:0xbfdd3eee;
op3val:0x3f3614da; valaddr_reg:x12; val_offset:600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 600*FLEN/8, x13, x9, x10)

inst_222:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x52aefc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d3eee and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3614da and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed2aefc; op2val:0xbfdd3eee;
op3val:0x3f3614da; valaddr_reg:x12; val_offset:603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 603*FLEN/8, x13, x9, x10)

inst_223:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x52aefc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d3eee and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3614da and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed2aefc; op2val:0xbfdd3eee;
op3val:0x3f3614da; valaddr_reg:x12; val_offset:606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 606*FLEN/8, x13, x9, x10)

inst_224:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x52aefc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d3eee and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3614da and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed2aefc; op2val:0xbfdd3eee;
op3val:0x3f3614da; valaddr_reg:x12; val_offset:609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 609*FLEN/8, x13, x9, x10)

inst_225:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67a6c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0164e6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a2cab and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67a6c2; op2val:0xbf8164e6;
op3val:0x3f6a2cab; valaddr_reg:x12; val_offset:612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 612*FLEN/8, x13, x9, x10)

inst_226:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67a6c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0164e6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a2cab and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67a6c2; op2val:0xbf8164e6;
op3val:0x3f6a2cab; valaddr_reg:x12; val_offset:615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 615*FLEN/8, x13, x9, x10)

inst_227:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67a6c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0164e6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a2cab and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67a6c2; op2val:0xbf8164e6;
op3val:0x3f6a2cab; valaddr_reg:x12; val_offset:618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 618*FLEN/8, x13, x9, x10)

inst_228:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67a6c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0164e6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a2cab and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67a6c2; op2val:0xbf8164e6;
op3val:0x3f6a2cab; valaddr_reg:x12; val_offset:621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 621*FLEN/8, x13, x9, x10)

inst_229:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67a6c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0164e6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a2cab and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f67a6c2; op2val:0xbf8164e6;
op3val:0x3f6a2cab; valaddr_reg:x12; val_offset:624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 624*FLEN/8, x13, x9, x10)

inst_230:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64bae1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x094272 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7546c2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f64bae1; op2val:0xbf094272;
op3val:0x3ef546c2; valaddr_reg:x12; val_offset:627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 627*FLEN/8, x13, x9, x10)

inst_231:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64bae1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x094272 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7546c2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f64bae1; op2val:0xbf094272;
op3val:0x3ef546c2; valaddr_reg:x12; val_offset:630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 630*FLEN/8, x13, x9, x10)

inst_232:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64bae1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x094272 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7546c2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f64bae1; op2val:0xbf094272;
op3val:0x3ef546c2; valaddr_reg:x12; val_offset:633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 633*FLEN/8, x13, x9, x10)

inst_233:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64bae1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x094272 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7546c2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f64bae1; op2val:0xbf094272;
op3val:0x3ef546c2; valaddr_reg:x12; val_offset:636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 636*FLEN/8, x13, x9, x10)

inst_234:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64bae1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x094272 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7546c2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f64bae1; op2val:0xbf094272;
op3val:0x3ef546c2; valaddr_reg:x12; val_offset:639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 639*FLEN/8, x13, x9, x10)

inst_235:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23cc4c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e12a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x44ea56 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23cc4c; op2val:0xbe99e12a;
op3val:0x3e44ea56; valaddr_reg:x12; val_offset:642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 642*FLEN/8, x13, x9, x10)

inst_236:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23cc4c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e12a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x44ea56 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23cc4c; op2val:0xbe99e12a;
op3val:0x3e44ea56; valaddr_reg:x12; val_offset:645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 645*FLEN/8, x13, x9, x10)

inst_237:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23cc4c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e12a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x44ea56 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23cc4c; op2val:0xbe99e12a;
op3val:0x3e44ea56; valaddr_reg:x12; val_offset:648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 648*FLEN/8, x13, x9, x10)

inst_238:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23cc4c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e12a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x44ea56 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23cc4c; op2val:0xbe99e12a;
op3val:0x3e44ea56; valaddr_reg:x12; val_offset:651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 651*FLEN/8, x13, x9, x10)

inst_239:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23cc4c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e12a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x44ea56 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23cc4c; op2val:0xbe99e12a;
op3val:0x3e44ea56; valaddr_reg:x12; val_offset:654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 654*FLEN/8, x13, x9, x10)

inst_240:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d7ab1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x16e627 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1569c7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd7ab1; op2val:0xbf16e627;
op3val:0x3e9569c7; valaddr_reg:x12; val_offset:657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 657*FLEN/8, x13, x9, x10)

inst_241:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d7ab1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x16e627 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1569c7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd7ab1; op2val:0xbf16e627;
op3val:0x3e9569c7; valaddr_reg:x12; val_offset:660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 660*FLEN/8, x13, x9, x10)

inst_242:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d7ab1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x16e627 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1569c7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd7ab1; op2val:0xbf16e627;
op3val:0x3e9569c7; valaddr_reg:x12; val_offset:663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 663*FLEN/8, x13, x9, x10)

inst_243:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d7ab1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x16e627 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1569c7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd7ab1; op2val:0xbf16e627;
op3val:0x3e9569c7; valaddr_reg:x12; val_offset:666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 666*FLEN/8, x13, x9, x10)

inst_244:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d7ab1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x16e627 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1569c7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd7ab1; op2val:0xbf16e627;
op3val:0x3e9569c7; valaddr_reg:x12; val_offset:669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 669*FLEN/8, x13, x9, x10)

inst_245:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2340f5 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3c1405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fe0f1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca340f5; op2val:0xc23c1405;
op3val:0x3f6fe0f1; valaddr_reg:x12; val_offset:672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 672*FLEN/8, x13, x9, x10)

inst_246:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2340f5 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3c1405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fe0f1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca340f5; op2val:0xc23c1405;
op3val:0x3f6fe0f1; valaddr_reg:x12; val_offset:675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 675*FLEN/8, x13, x9, x10)

inst_247:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2340f5 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3c1405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fe0f1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca340f5; op2val:0xc23c1405;
op3val:0x3f6fe0f1; valaddr_reg:x12; val_offset:678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 678*FLEN/8, x13, x9, x10)

inst_248:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2340f5 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3c1405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fe0f1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca340f5; op2val:0xc23c1405;
op3val:0x3f6fe0f1; valaddr_reg:x12; val_offset:681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 681*FLEN/8, x13, x9, x10)

inst_249:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2340f5 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3c1405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fe0f1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca340f5; op2val:0xc23c1405;
op3val:0x3f6fe0f1; valaddr_reg:x12; val_offset:684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 684*FLEN/8, x13, x9, x10)

inst_250:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ba9ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5fda3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c0f5a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ba9ad; op2val:0xbf5fda3f;
op3val:0x3f5c0f5a; valaddr_reg:x12; val_offset:687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 687*FLEN/8, x13, x9, x10)

inst_251:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ba9ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5fda3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c0f5a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ba9ad; op2val:0xbf5fda3f;
op3val:0x3f5c0f5a; valaddr_reg:x12; val_offset:690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 690*FLEN/8, x13, x9, x10)

inst_252:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ba9ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5fda3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c0f5a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ba9ad; op2val:0xbf5fda3f;
op3val:0x3f5c0f5a; valaddr_reg:x12; val_offset:693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 693*FLEN/8, x13, x9, x10)

inst_253:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ba9ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5fda3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c0f5a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ba9ad; op2val:0xbf5fda3f;
op3val:0x3f5c0f5a; valaddr_reg:x12; val_offset:696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 696*FLEN/8, x13, x9, x10)

inst_254:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ba9ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5fda3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c0f5a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7ba9ad; op2val:0xbf5fda3f;
op3val:0x3f5c0f5a; valaddr_reg:x12; val_offset:699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 699*FLEN/8, x13, x9, x10)

inst_255:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d1948 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31d966 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a47c9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d1948; op2val:0xbf31d966;
op3val:0x3eda47c9; valaddr_reg:x12; val_offset:702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 702*FLEN/8, x13, x9, x10)

inst_256:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d1948 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31d966 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a47c9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d1948; op2val:0xbf31d966;
op3val:0x3eda47c9; valaddr_reg:x12; val_offset:705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 705*FLEN/8, x13, x9, x10)

inst_257:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d1948 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31d966 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a47c9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d1948; op2val:0xbf31d966;
op3val:0x3eda47c9; valaddr_reg:x12; val_offset:708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 708*FLEN/8, x13, x9, x10)

inst_258:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d1948 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31d966 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a47c9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d1948; op2val:0xbf31d966;
op3val:0x3eda47c9; valaddr_reg:x12; val_offset:711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 711*FLEN/8, x13, x9, x10)

inst_259:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d1948 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31d966 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a47c9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1d1948; op2val:0xbf31d966;
op3val:0x3eda47c9; valaddr_reg:x12; val_offset:714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 714*FLEN/8, x13, x9, x10)

inst_260:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0332f2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x21fb62 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2607bf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8332f2; op2val:0xc021fb62;
op3val:0x3f2607bf; valaddr_reg:x12; val_offset:717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 717*FLEN/8, x13, x9, x10)

inst_261:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0332f2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x21fb62 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2607bf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8332f2; op2val:0xc021fb62;
op3val:0x3f2607bf; valaddr_reg:x12; val_offset:720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 720*FLEN/8, x13, x9, x10)

inst_262:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0332f2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x21fb62 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2607bf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8332f2; op2val:0xc021fb62;
op3val:0x3f2607bf; valaddr_reg:x12; val_offset:723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 723*FLEN/8, x13, x9, x10)

inst_263:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0332f2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x21fb62 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2607bf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8332f2; op2val:0xc021fb62;
op3val:0x3f2607bf; valaddr_reg:x12; val_offset:726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 726*FLEN/8, x13, x9, x10)

inst_264:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0332f2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x21fb62 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2607bf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8332f2; op2val:0xc021fb62;
op3val:0x3f2607bf; valaddr_reg:x12; val_offset:729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 729*FLEN/8, x13, x9, x10)

inst_265:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0f83e7 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x63a721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f3f4f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0f83e7; op2val:0xc1e3a721;
op3val:0x3f7f3f4f; valaddr_reg:x12; val_offset:732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 732*FLEN/8, x13, x9, x10)

inst_266:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0f83e7 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x63a721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f3f4f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0f83e7; op2val:0xc1e3a721;
op3val:0x3f7f3f4f; valaddr_reg:x12; val_offset:735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 735*FLEN/8, x13, x9, x10)

inst_267:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0f83e7 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x63a721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f3f4f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0f83e7; op2val:0xc1e3a721;
op3val:0x3f7f3f4f; valaddr_reg:x12; val_offset:738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 738*FLEN/8, x13, x9, x10)

inst_268:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0f83e7 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x63a721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f3f4f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0f83e7; op2val:0xc1e3a721;
op3val:0x3f7f3f4f; valaddr_reg:x12; val_offset:741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 741*FLEN/8, x13, x9, x10)

inst_269:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0f83e7 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x63a721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f3f4f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0f83e7; op2val:0xc1e3a721;
op3val:0x3f7f3f4f; valaddr_reg:x12; val_offset:744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 744*FLEN/8, x13, x9, x10)

inst_270:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2843e8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x19d428 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a3811 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2843e8; op2val:0xc099d428;
op3val:0x3f4a3811; valaddr_reg:x12; val_offset:747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 747*FLEN/8, x13, x9, x10)

inst_271:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2843e8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x19d428 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a3811 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2843e8; op2val:0xc099d428;
op3val:0x3f4a3811; valaddr_reg:x12; val_offset:750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 750*FLEN/8, x13, x9, x10)

inst_272:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2843e8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x19d428 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a3811 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2843e8; op2val:0xc099d428;
op3val:0x3f4a3811; valaddr_reg:x12; val_offset:753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 753*FLEN/8, x13, x9, x10)

inst_273:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2843e8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x19d428 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a3811 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2843e8; op2val:0xc099d428;
op3val:0x3f4a3811; valaddr_reg:x12; val_offset:756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 756*FLEN/8, x13, x9, x10)

inst_274:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2843e8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x19d428 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a3811 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2843e8; op2val:0xc099d428;
op3val:0x3f4a3811; valaddr_reg:x12; val_offset:759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 759*FLEN/8, x13, x9, x10)

inst_275:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fa20e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x77e050 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77855a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dffa20e; op2val:0xc0f7e050;
op3val:0x3f77855a; valaddr_reg:x12; val_offset:762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 762*FLEN/8, x13, x9, x10)

inst_276:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fa20e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x77e050 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77855a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dffa20e; op2val:0xc0f7e050;
op3val:0x3f77855a; valaddr_reg:x12; val_offset:765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 765*FLEN/8, x13, x9, x10)

inst_277:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fa20e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x77e050 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77855a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dffa20e; op2val:0xc0f7e050;
op3val:0x3f77855a; valaddr_reg:x12; val_offset:768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 768*FLEN/8, x13, x9, x10)

inst_278:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fa20e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x77e050 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77855a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dffa20e; op2val:0xc0f7e050;
op3val:0x3f77855a; valaddr_reg:x12; val_offset:771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 771*FLEN/8, x13, x9, x10)

inst_279:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fa20e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x77e050 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77855a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dffa20e; op2val:0xc0f7e050;
op3val:0x3f77855a; valaddr_reg:x12; val_offset:774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 774*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_2)

inst_280:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0eb16e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5d068a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7665a3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0eb16e; op2val:0xc0dd068a;
op3val:0x3e7665a3; valaddr_reg:x12; val_offset:777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 777*FLEN/8, x13, x9, x10)

inst_281:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0eb16e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5d068a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7665a3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0eb16e; op2val:0xc0dd068a;
op3val:0x3e7665a3; valaddr_reg:x12; val_offset:780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 780*FLEN/8, x13, x9, x10)

inst_282:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0eb16e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5d068a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7665a3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0eb16e; op2val:0xc0dd068a;
op3val:0x3e7665a3; valaddr_reg:x12; val_offset:783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 783*FLEN/8, x13, x9, x10)

inst_283:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0eb16e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5d068a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7665a3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0eb16e; op2val:0xc0dd068a;
op3val:0x3e7665a3; valaddr_reg:x12; val_offset:786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 786*FLEN/8, x13, x9, x10)

inst_284:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0eb16e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5d068a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7665a3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0eb16e; op2val:0xc0dd068a;
op3val:0x3e7665a3; valaddr_reg:x12; val_offset:789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 789*FLEN/8, x13, x9, x10)

inst_285:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x1c4e31 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x301850 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x570934 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c1c4e31; op2val:0xc2301850;
op3val:0x3ed70934; valaddr_reg:x12; val_offset:792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 792*FLEN/8, x13, x9, x10)

inst_286:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x1c4e31 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x301850 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x570934 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c1c4e31; op2val:0xc2301850;
op3val:0x3ed70934; valaddr_reg:x12; val_offset:795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 795*FLEN/8, x13, x9, x10)

inst_287:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x1c4e31 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x301850 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x570934 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c1c4e31; op2val:0xc2301850;
op3val:0x3ed70934; valaddr_reg:x12; val_offset:798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 798*FLEN/8, x13, x9, x10)

inst_288:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x1c4e31 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x301850 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x570934 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c1c4e31; op2val:0xc2301850;
op3val:0x3ed70934; valaddr_reg:x12; val_offset:801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 801*FLEN/8, x13, x9, x10)

inst_289:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x1c4e31 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x301850 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x570934 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c1c4e31; op2val:0xc2301850;
op3val:0x3ed70934; valaddr_reg:x12; val_offset:804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 804*FLEN/8, x13, x9, x10)

inst_290:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x527bd3 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x161b26 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x76d5c2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f527bd3; op2val:0xbd161b26;
op3val:0x3cf6d5c2; valaddr_reg:x12; val_offset:807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 807*FLEN/8, x13, x9, x10)

inst_291:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x527bd3 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x161b26 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x76d5c2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f527bd3; op2val:0xbd161b26;
op3val:0x3cf6d5c2; valaddr_reg:x12; val_offset:810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 810*FLEN/8, x13, x9, x10)

inst_292:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x527bd3 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x161b26 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x76d5c2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f527bd3; op2val:0xbd161b26;
op3val:0x3cf6d5c2; valaddr_reg:x12; val_offset:813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 813*FLEN/8, x13, x9, x10)

inst_293:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x527bd3 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x161b26 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x76d5c2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f527bd3; op2val:0xbd161b26;
op3val:0x3cf6d5c2; valaddr_reg:x12; val_offset:816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 816*FLEN/8, x13, x9, x10)

inst_294:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x527bd3 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x161b26 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x76d5c2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f527bd3; op2val:0xbd161b26;
op3val:0x3cf6d5c2; valaddr_reg:x12; val_offset:819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 819*FLEN/8, x13, x9, x10)

inst_295:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ef84a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x521731 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6aa942 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0ef84a; op2val:0xbfd21731;
op3val:0x3f6aa942; valaddr_reg:x12; val_offset:822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 822*FLEN/8, x13, x9, x10)

inst_296:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ef84a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x521731 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6aa942 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0ef84a; op2val:0xbfd21731;
op3val:0x3f6aa942; valaddr_reg:x12; val_offset:825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 825*FLEN/8, x13, x9, x10)

inst_297:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ef84a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x521731 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6aa942 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0ef84a; op2val:0xbfd21731;
op3val:0x3f6aa942; valaddr_reg:x12; val_offset:828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 828*FLEN/8, x13, x9, x10)

inst_298:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ef84a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x521731 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6aa942 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0ef84a; op2val:0xbfd21731;
op3val:0x3f6aa942; valaddr_reg:x12; val_offset:831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 831*FLEN/8, x13, x9, x10)

inst_299:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ef84a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x521731 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6aa942 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0ef84a; op2val:0xbfd21731;
op3val:0x3f6aa942; valaddr_reg:x12; val_offset:834*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 834*FLEN/8, x13, x9, x10)

inst_300:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4a08c7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x23188f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00b6f9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eca08c7; op2val:0xbfa3188f;
op3val:0x3f00b6f9; valaddr_reg:x12; val_offset:837*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 837*FLEN/8, x13, x9, x10)

inst_301:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4a08c7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x23188f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00b6f9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eca08c7; op2val:0xbfa3188f;
op3val:0x3f00b6f9; valaddr_reg:x12; val_offset:840*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 840*FLEN/8, x13, x9, x10)

inst_302:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4a08c7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x23188f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00b6f9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eca08c7; op2val:0xbfa3188f;
op3val:0x3f00b6f9; valaddr_reg:x12; val_offset:843*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 843*FLEN/8, x13, x9, x10)

inst_303:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4a08c7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x23188f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00b6f9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eca08c7; op2val:0xbfa3188f;
op3val:0x3f00b6f9; valaddr_reg:x12; val_offset:846*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 846*FLEN/8, x13, x9, x10)

inst_304:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4a08c7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x23188f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00b6f9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eca08c7; op2val:0xbfa3188f;
op3val:0x3f00b6f9; valaddr_reg:x12; val_offset:849*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 849*FLEN/8, x13, x9, x10)

inst_305:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06dd2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d6d55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587169 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f06dd2b; op2val:0xbfcd6d55;
op3val:0x3f587169; valaddr_reg:x12; val_offset:852*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 852*FLEN/8, x13, x9, x10)

inst_306:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06dd2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d6d55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587169 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f06dd2b; op2val:0xbfcd6d55;
op3val:0x3f587169; valaddr_reg:x12; val_offset:855*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 855*FLEN/8, x13, x9, x10)

inst_307:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06dd2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d6d55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587169 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f06dd2b; op2val:0xbfcd6d55;
op3val:0x3f587169; valaddr_reg:x12; val_offset:858*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 858*FLEN/8, x13, x9, x10)

inst_308:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06dd2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d6d55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587169 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f06dd2b; op2val:0xbfcd6d55;
op3val:0x3f587169; valaddr_reg:x12; val_offset:861*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 861*FLEN/8, x13, x9, x10)

inst_309:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06dd2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d6d55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587169 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f06dd2b; op2val:0xbfcd6d55;
op3val:0x3f587169; valaddr_reg:x12; val_offset:864*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 864*FLEN/8, x13, x9, x10)

inst_310:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60c32a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x747f36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56a9b4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60c32a; op2val:0xbef47f36;
op3val:0x3ed6a9b4; valaddr_reg:x12; val_offset:867*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 867*FLEN/8, x13, x9, x10)

inst_311:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60c32a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x747f36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56a9b4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60c32a; op2val:0xbef47f36;
op3val:0x3ed6a9b4; valaddr_reg:x12; val_offset:870*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 870*FLEN/8, x13, x9, x10)

inst_312:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60c32a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x747f36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56a9b4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60c32a; op2val:0xbef47f36;
op3val:0x3ed6a9b4; valaddr_reg:x12; val_offset:873*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 873*FLEN/8, x13, x9, x10)

inst_313:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60c32a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x747f36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56a9b4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60c32a; op2val:0xbef47f36;
op3val:0x3ed6a9b4; valaddr_reg:x12; val_offset:876*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 876*FLEN/8, x13, x9, x10)

inst_314:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60c32a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x747f36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56a9b4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f60c32a; op2val:0xbef47f36;
op3val:0x3ed6a9b4; valaddr_reg:x12; val_offset:879*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 879*FLEN/8, x13, x9, x10)

inst_315:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c1c8f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4c20 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fa0d9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c1c8f; op2val:0xbfcc4c20;
op3val:0x3f5fa0d9; valaddr_reg:x12; val_offset:882*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 882*FLEN/8, x13, x9, x10)

inst_316:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c1c8f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4c20 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fa0d9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c1c8f; op2val:0xbfcc4c20;
op3val:0x3f5fa0d9; valaddr_reg:x12; val_offset:885*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 885*FLEN/8, x13, x9, x10)

inst_317:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c1c8f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4c20 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fa0d9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c1c8f; op2val:0xbfcc4c20;
op3val:0x3f5fa0d9; valaddr_reg:x12; val_offset:888*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 888*FLEN/8, x13, x9, x10)

inst_318:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c1c8f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4c20 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fa0d9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c1c8f; op2val:0xbfcc4c20;
op3val:0x3f5fa0d9; valaddr_reg:x12; val_offset:891*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 891*FLEN/8, x13, x9, x10)

inst_319:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c1c8f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4c20 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fa0d9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0c1c8f; op2val:0xbfcc4c20;
op3val:0x3f5fa0d9; valaddr_reg:x12; val_offset:894*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 894*FLEN/8, x13, x9, x10)

inst_320:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f7e00 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ab7d5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0c8816 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f7e00; op2val:0xbefab7d5;
op3val:0x3e8c8816; valaddr_reg:x12; val_offset:897*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 897*FLEN/8, x13, x9, x10)

inst_321:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f7e00 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ab7d5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0c8816 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f7e00; op2val:0xbefab7d5;
op3val:0x3e8c8816; valaddr_reg:x12; val_offset:900*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 900*FLEN/8, x13, x9, x10)

inst_322:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f7e00 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ab7d5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0c8816 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f7e00; op2val:0xbefab7d5;
op3val:0x3e8c8816; valaddr_reg:x12; val_offset:903*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 903*FLEN/8, x13, x9, x10)

inst_323:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f7e00 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ab7d5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0c8816 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f7e00; op2val:0xbefab7d5;
op3val:0x3e8c8816; valaddr_reg:x12; val_offset:906*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 906*FLEN/8, x13, x9, x10)

inst_324:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f7e00 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ab7d5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0c8816 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f7e00; op2val:0xbefab7d5;
op3val:0x3e8c8816; valaddr_reg:x12; val_offset:909*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 909*FLEN/8, x13, x9, x10)

inst_325:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11ab5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6ddc4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x075901 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e91ab5f; op2val:0xbfeddc4b;
op3val:0x3f075901; valaddr_reg:x12; val_offset:912*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 912*FLEN/8, x13, x9, x10)

inst_326:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11ab5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6ddc4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x075901 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e91ab5f; op2val:0xbfeddc4b;
op3val:0x3f075901; valaddr_reg:x12; val_offset:915*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 915*FLEN/8, x13, x9, x10)

inst_327:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11ab5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6ddc4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x075901 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e91ab5f; op2val:0xbfeddc4b;
op3val:0x3f075901; valaddr_reg:x12; val_offset:918*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 918*FLEN/8, x13, x9, x10)

inst_328:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11ab5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6ddc4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x075901 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e91ab5f; op2val:0xbfeddc4b;
op3val:0x3f075901; valaddr_reg:x12; val_offset:921*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 921*FLEN/8, x13, x9, x10)

inst_329:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11ab5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6ddc4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x075901 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e91ab5f; op2val:0xbfeddc4b;
op3val:0x3f075901; valaddr_reg:x12; val_offset:924*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 924*FLEN/8, x13, x9, x10)

inst_330:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b3302 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06f4b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a216 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b3302; op2val:0xbf86f4b1;
op3val:0x3f23a216; valaddr_reg:x12; val_offset:927*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 927*FLEN/8, x13, x9, x10)

inst_331:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b3302 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06f4b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a216 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b3302; op2val:0xbf86f4b1;
op3val:0x3f23a216; valaddr_reg:x12; val_offset:930*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 930*FLEN/8, x13, x9, x10)

inst_332:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b3302 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06f4b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a216 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b3302; op2val:0xbf86f4b1;
op3val:0x3f23a216; valaddr_reg:x12; val_offset:933*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 933*FLEN/8, x13, x9, x10)

inst_333:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b3302 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06f4b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a216 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b3302; op2val:0xbf86f4b1;
op3val:0x3f23a216; valaddr_reg:x12; val_offset:936*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 936*FLEN/8, x13, x9, x10)

inst_334:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b3302 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06f4b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a216 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b3302; op2val:0xbf86f4b1;
op3val:0x3f23a216; valaddr_reg:x12; val_offset:939*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 939*FLEN/8, x13, x9, x10)

inst_335:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x464458 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04a136 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7030 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f464458; op2val:0xbf84a136;
op3val:0x3f4d7030; valaddr_reg:x12; val_offset:942*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 942*FLEN/8, x13, x9, x10)

inst_336:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x464458 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04a136 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7030 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f464458; op2val:0xbf84a136;
op3val:0x3f4d7030; valaddr_reg:x12; val_offset:945*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 945*FLEN/8, x13, x9, x10)

inst_337:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x464458 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04a136 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7030 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f464458; op2val:0xbf84a136;
op3val:0x3f4d7030; valaddr_reg:x12; val_offset:948*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 948*FLEN/8, x13, x9, x10)

inst_338:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x464458 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04a136 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7030 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f464458; op2val:0xbf84a136;
op3val:0x3f4d7030; valaddr_reg:x12; val_offset:951*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 951*FLEN/8, x13, x9, x10)

inst_339:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x464458 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04a136 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7030 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f464458; op2val:0xbf84a136;
op3val:0x3f4d7030; valaddr_reg:x12; val_offset:954*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 954*FLEN/8, x13, x9, x10)

inst_340:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dc46f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4e224a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x644e1d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0dc46f; op2val:0xbfce224a;
op3val:0x3f644e1d; valaddr_reg:x12; val_offset:957*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 957*FLEN/8, x13, x9, x10)

inst_341:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dc46f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4e224a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x644e1d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0dc46f; op2val:0xbfce224a;
op3val:0x3f644e1d; valaddr_reg:x12; val_offset:960*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 960*FLEN/8, x13, x9, x10)

inst_342:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dc46f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4e224a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x644e1d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0dc46f; op2val:0xbfce224a;
op3val:0x3f644e1d; valaddr_reg:x12; val_offset:963*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 963*FLEN/8, x13, x9, x10)

inst_343:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dc46f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4e224a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x644e1d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0dc46f; op2val:0xbfce224a;
op3val:0x3f644e1d; valaddr_reg:x12; val_offset:966*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 966*FLEN/8, x13, x9, x10)

inst_344:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dc46f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4e224a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x644e1d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0dc46f; op2val:0xbfce224a;
op3val:0x3f644e1d; valaddr_reg:x12; val_offset:969*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 969*FLEN/8, x13, x9, x10)

inst_345:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cba51 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07d539 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1556ef and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cba51; op2val:0xbf87d539;
op3val:0x3e9556ef; valaddr_reg:x12; val_offset:972*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 972*FLEN/8, x13, x9, x10)

inst_346:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cba51 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07d539 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1556ef and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cba51; op2val:0xbf87d539;
op3val:0x3e9556ef; valaddr_reg:x12; val_offset:975*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 975*FLEN/8, x13, x9, x10)

inst_347:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cba51 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07d539 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1556ef and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cba51; op2val:0xbf87d539;
op3val:0x3e9556ef; valaddr_reg:x12; val_offset:978*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 978*FLEN/8, x13, x9, x10)

inst_348:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cba51 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07d539 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1556ef and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cba51; op2val:0xbf87d539;
op3val:0x3e9556ef; valaddr_reg:x12; val_offset:981*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 981*FLEN/8, x13, x9, x10)

inst_349:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cba51 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07d539 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1556ef and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cba51; op2val:0xbf87d539;
op3val:0x3e9556ef; valaddr_reg:x12; val_offset:984*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 984*FLEN/8, x13, x9, x10)

inst_350:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46e711 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x210492 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a35be and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6e711; op2val:0xc0210492;
op3val:0x3f7a35be; valaddr_reg:x12; val_offset:987*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 987*FLEN/8, x13, x9, x10)

inst_351:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46e711 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x210492 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a35be and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6e711; op2val:0xc0210492;
op3val:0x3f7a35be; valaddr_reg:x12; val_offset:990*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 990*FLEN/8, x13, x9, x10)

inst_352:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46e711 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x210492 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a35be and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6e711; op2val:0xc0210492;
op3val:0x3f7a35be; valaddr_reg:x12; val_offset:993*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 993*FLEN/8, x13, x9, x10)

inst_353:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46e711 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x210492 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a35be and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6e711; op2val:0xc0210492;
op3val:0x3f7a35be; valaddr_reg:x12; val_offset:996*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 996*FLEN/8, x13, x9, x10)

inst_354:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46e711 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x210492 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a35be and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6e711; op2val:0xc0210492;
op3val:0x3f7a35be; valaddr_reg:x12; val_offset:999*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 999*FLEN/8, x13, x9, x10)

inst_355:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22ca77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x647ebd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x114cea and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22ca77; op2val:0xbf647ebd;
op3val:0x3f114cea; valaddr_reg:x12; val_offset:1002*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1002*FLEN/8, x13, x9, x10)

inst_356:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22ca77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x647ebd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x114cea and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22ca77; op2val:0xbf647ebd;
op3val:0x3f114cea; valaddr_reg:x12; val_offset:1005*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1005*FLEN/8, x13, x9, x10)

inst_357:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22ca77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x647ebd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x114cea and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22ca77; op2val:0xbf647ebd;
op3val:0x3f114cea; valaddr_reg:x12; val_offset:1008*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1008*FLEN/8, x13, x9, x10)

inst_358:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22ca77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x647ebd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x114cea and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22ca77; op2val:0xbf647ebd;
op3val:0x3f114cea; valaddr_reg:x12; val_offset:1011*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1011*FLEN/8, x13, x9, x10)

inst_359:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22ca77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x647ebd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x114cea and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22ca77; op2val:0xbf647ebd;
op3val:0x3f114cea; valaddr_reg:x12; val_offset:1014*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1014*FLEN/8, x13, x9, x10)

inst_360:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x681b27 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1188aa and fs3 == 0 and fe3 == 0x7a and fm3 == 0x03f34a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f681b27; op2val:0xbd1188aa;
op3val:0x3d03f34a; valaddr_reg:x12; val_offset:1017*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1017*FLEN/8, x13, x9, x10)

inst_361:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x681b27 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1188aa and fs3 == 0 and fe3 == 0x7a and fm3 == 0x03f34a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f681b27; op2val:0xbd1188aa;
op3val:0x3d03f34a; valaddr_reg:x12; val_offset:1020*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1020*FLEN/8, x13, x9, x10)

inst_362:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x681b27 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1188aa and fs3 == 0 and fe3 == 0x7a and fm3 == 0x03f34a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f681b27; op2val:0xbd1188aa;
op3val:0x3d03f34a; valaddr_reg:x12; val_offset:1023*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1023*FLEN/8, x13, x9, x10)

inst_363:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x681b27 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1188aa and fs3 == 0 and fe3 == 0x7a and fm3 == 0x03f34a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f681b27; op2val:0xbd1188aa;
op3val:0x3d03f34a; valaddr_reg:x12; val_offset:1026*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1026*FLEN/8, x13, x9, x10)

inst_364:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x681b27 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1188aa and fs3 == 0 and fe3 == 0x7a and fm3 == 0x03f34a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f681b27; op2val:0xbd1188aa;
op3val:0x3d03f34a; valaddr_reg:x12; val_offset:1029*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1029*FLEN/8, x13, x9, x10)

inst_365:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7a3bd1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0245f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ead7e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e7a3bd1; op2val:0xc00245f2;
op3val:0x3efead7e; valaddr_reg:x12; val_offset:1032*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1032*FLEN/8, x13, x9, x10)

inst_366:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7a3bd1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0245f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ead7e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e7a3bd1; op2val:0xc00245f2;
op3val:0x3efead7e; valaddr_reg:x12; val_offset:1035*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1035*FLEN/8, x13, x9, x10)

inst_367:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7a3bd1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0245f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ead7e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e7a3bd1; op2val:0xc00245f2;
op3val:0x3efead7e; valaddr_reg:x12; val_offset:1038*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1038*FLEN/8, x13, x9, x10)

inst_368:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7a3bd1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0245f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ead7e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e7a3bd1; op2val:0xc00245f2;
op3val:0x3efead7e; valaddr_reg:x12; val_offset:1041*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1041*FLEN/8, x13, x9, x10)

inst_369:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7a3bd1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0245f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ead7e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e7a3bd1; op2val:0xc00245f2;
op3val:0x3efead7e; valaddr_reg:x12; val_offset:1044*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1044*FLEN/8, x13, x9, x10)

inst_370:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16f3db and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2d8356 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4ca079 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e96f3db; op2val:0xc02d8356;
op3val:0x3f4ca079; valaddr_reg:x12; val_offset:1047*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1047*FLEN/8, x13, x9, x10)

inst_371:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16f3db and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2d8356 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4ca079 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e96f3db; op2val:0xc02d8356;
op3val:0x3f4ca079; valaddr_reg:x12; val_offset:1050*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1050*FLEN/8, x13, x9, x10)

inst_372:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16f3db and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2d8356 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4ca079 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e96f3db; op2val:0xc02d8356;
op3val:0x3f4ca079; valaddr_reg:x12; val_offset:1053*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1053*FLEN/8, x13, x9, x10)

inst_373:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16f3db and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2d8356 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4ca079 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e96f3db; op2val:0xc02d8356;
op3val:0x3f4ca079; valaddr_reg:x12; val_offset:1056*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1056*FLEN/8, x13, x9, x10)

inst_374:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16f3db and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2d8356 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4ca079 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e96f3db; op2val:0xc02d8356;
op3val:0x3f4ca079; valaddr_reg:x12; val_offset:1059*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1059*FLEN/8, x13, x9, x10)

inst_375:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4543c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d8f5e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72d218 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4543c9; op2val:0xbf1d8f5e;
op3val:0x3ef2d218; valaddr_reg:x12; val_offset:1062*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1062*FLEN/8, x13, x9, x10)

inst_376:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4543c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d8f5e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72d218 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4543c9; op2val:0xbf1d8f5e;
op3val:0x3ef2d218; valaddr_reg:x12; val_offset:1065*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1065*FLEN/8, x13, x9, x10)

inst_377:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4543c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d8f5e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72d218 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4543c9; op2val:0xbf1d8f5e;
op3val:0x3ef2d218; valaddr_reg:x12; val_offset:1068*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1068*FLEN/8, x13, x9, x10)

inst_378:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4543c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d8f5e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72d218 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4543c9; op2val:0xbf1d8f5e;
op3val:0x3ef2d218; valaddr_reg:x12; val_offset:1071*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1071*FLEN/8, x13, x9, x10)

inst_379:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4543c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d8f5e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72d218 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4543c9; op2val:0xbf1d8f5e;
op3val:0x3ef2d218; valaddr_reg:x12; val_offset:1074*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1074*FLEN/8, x13, x9, x10)

inst_380:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0318d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x305496 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3498cc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8318d9; op2val:0xbfb05496;
op3val:0x3eb498cc; valaddr_reg:x12; val_offset:1077*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1077*FLEN/8, x13, x9, x10)

inst_381:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0318d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x305496 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3498cc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8318d9; op2val:0xbfb05496;
op3val:0x3eb498cc; valaddr_reg:x12; val_offset:1080*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1080*FLEN/8, x13, x9, x10)

inst_382:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0318d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x305496 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3498cc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8318d9; op2val:0xbfb05496;
op3val:0x3eb498cc; valaddr_reg:x12; val_offset:1083*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1083*FLEN/8, x13, x9, x10)

inst_383:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0318d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x305496 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3498cc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8318d9; op2val:0xbfb05496;
op3val:0x3eb498cc; valaddr_reg:x12; val_offset:1086*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1086*FLEN/8, x13, x9, x10)

inst_384:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0318d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x305496 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3498cc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8318d9; op2val:0xbfb05496;
op3val:0x3eb498cc; valaddr_reg:x12; val_offset:1089*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1089*FLEN/8, x13, x9, x10)

inst_385:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e49e0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4763fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x460ebc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7e49e0; op2val:0xbec763fa;
op3val:0x3ec60ebc; valaddr_reg:x12; val_offset:1092*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1092*FLEN/8, x13, x9, x10)

inst_386:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e49e0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4763fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x460ebc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7e49e0; op2val:0xbec763fa;
op3val:0x3ec60ebc; valaddr_reg:x12; val_offset:1095*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1095*FLEN/8, x13, x9, x10)

inst_387:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e49e0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4763fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x460ebc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7e49e0; op2val:0xbec763fa;
op3val:0x3ec60ebc; valaddr_reg:x12; val_offset:1098*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1098*FLEN/8, x13, x9, x10)

inst_388:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e49e0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4763fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x460ebc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7e49e0; op2val:0xbec763fa;
op3val:0x3ec60ebc; valaddr_reg:x12; val_offset:1101*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1101*FLEN/8, x13, x9, x10)

inst_389:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e49e0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4763fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x460ebc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7e49e0; op2val:0xbec763fa;
op3val:0x3ec60ebc; valaddr_reg:x12; val_offset:1104*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1104*FLEN/8, x13, x9, x10)

inst_390:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3aac32 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x343fa7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x036f7e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dbaac32; op2val:0xc0343fa7;
op3val:0x3e836f7e; valaddr_reg:x12; val_offset:1107*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1107*FLEN/8, x13, x9, x10)

inst_391:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3aac32 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x343fa7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x036f7e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dbaac32; op2val:0xc0343fa7;
op3val:0x3e836f7e; valaddr_reg:x12; val_offset:1110*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1110*FLEN/8, x13, x9, x10)

inst_392:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3aac32 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x343fa7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x036f7e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dbaac32; op2val:0xc0343fa7;
op3val:0x3e836f7e; valaddr_reg:x12; val_offset:1113*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1113*FLEN/8, x13, x9, x10)

inst_393:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3aac32 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x343fa7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x036f7e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dbaac32; op2val:0xc0343fa7;
op3val:0x3e836f7e; valaddr_reg:x12; val_offset:1116*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1116*FLEN/8, x13, x9, x10)

inst_394:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3aac32 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x343fa7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x036f7e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dbaac32; op2val:0xc0343fa7;
op3val:0x3e836f7e; valaddr_reg:x12; val_offset:1119*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1119*FLEN/8, x13, x9, x10)

inst_395:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0128de and fs3 == 0 and fe3 == 0x79 and fm3 == 0x15a8ee and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9450f1; op2val:0xbe8128de;
op3val:0x3c95a8ee; valaddr_reg:x12; val_offset:1122*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1122*FLEN/8, x13, x9, x10)

inst_396:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0128de and fs3 == 0 and fe3 == 0x79 and fm3 == 0x15a8ee and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9450f1; op2val:0xbe8128de;
op3val:0x3c95a8ee; valaddr_reg:x12; val_offset:1125*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1125*FLEN/8, x13, x9, x10)

inst_397:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0128de and fs3 == 0 and fe3 == 0x79 and fm3 == 0x15a8ee and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9450f1; op2val:0xbe8128de;
op3val:0x3c95a8ee; valaddr_reg:x12; val_offset:1128*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1128*FLEN/8, x13, x9, x10)

inst_398:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0128de and fs3 == 0 and fe3 == 0x79 and fm3 == 0x15a8ee and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9450f1; op2val:0xbe8128de;
op3val:0x3c95a8ee; valaddr_reg:x12; val_offset:1131*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1131*FLEN/8, x13, x9, x10)

inst_399:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0128de and fs3 == 0 and fe3 == 0x79 and fm3 == 0x15a8ee and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d9450f1; op2val:0xbe8128de;
op3val:0x3c95a8ee; valaddr_reg:x12; val_offset:1134*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1134*FLEN/8, x13, x9, x10)

inst_400:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46bdaf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x680286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x341ddc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f46bdaf; op2val:0xbf680286;
op3val:0x3f341ddc; valaddr_reg:x12; val_offset:1137*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1137*FLEN/8, x13, x9, x10)

inst_401:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46bdaf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x680286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x341ddc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f46bdaf; op2val:0xbf680286;
op3val:0x3f341ddc; valaddr_reg:x12; val_offset:1140*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1140*FLEN/8, x13, x9, x10)

inst_402:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46bdaf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x680286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x341ddc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f46bdaf; op2val:0xbf680286;
op3val:0x3f341ddc; valaddr_reg:x12; val_offset:1143*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1143*FLEN/8, x13, x9, x10)

inst_403:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46bdaf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x680286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x341ddc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f46bdaf; op2val:0xbf680286;
op3val:0x3f341ddc; valaddr_reg:x12; val_offset:1146*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1146*FLEN/8, x13, x9, x10)

inst_404:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46bdaf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x680286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x341ddc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f46bdaf; op2val:0xbf680286;
op3val:0x3f341ddc; valaddr_reg:x12; val_offset:1149*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1149*FLEN/8, x13, x9, x10)

inst_405:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67c33c and fs2 == 1 and fe2 == 0x7a and fm2 == 0x51e608 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3e06a5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7c33c; op2val:0xbd51e608;
op3val:0x3cbe06a5; valaddr_reg:x12; val_offset:1152*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1152*FLEN/8, x13, x9, x10)

inst_406:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67c33c and fs2 == 1 and fe2 == 0x7a and fm2 == 0x51e608 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3e06a5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7c33c; op2val:0xbd51e608;
op3val:0x3cbe06a5; valaddr_reg:x12; val_offset:1155*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1155*FLEN/8, x13, x9, x10)

inst_407:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67c33c and fs2 == 1 and fe2 == 0x7a and fm2 == 0x51e608 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3e06a5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7c33c; op2val:0xbd51e608;
op3val:0x3cbe06a5; valaddr_reg:x12; val_offset:1158*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1158*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_3)

inst_408:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67c33c and fs2 == 1 and fe2 == 0x7a and fm2 == 0x51e608 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3e06a5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7c33c; op2val:0xbd51e608;
op3val:0x3cbe06a5; valaddr_reg:x12; val_offset:1161*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1161*FLEN/8, x13, x9, x10)

inst_409:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67c33c and fs2 == 1 and fe2 == 0x7a and fm2 == 0x51e608 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3e06a5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee7c33c; op2val:0xbd51e608;
op3val:0x3cbe06a5; valaddr_reg:x12; val_offset:1164*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1164*FLEN/8, x13, x9, x10)

inst_410:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3e3244 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6fee68 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f217896; op2val:0xbdbe3244;
op3val:0x3d6fee68; valaddr_reg:x12; val_offset:1167*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1167*FLEN/8, x13, x9, x10)

inst_411:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3e3244 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6fee68 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f217896; op2val:0xbdbe3244;
op3val:0x3d6fee68; valaddr_reg:x12; val_offset:1170*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1170*FLEN/8, x13, x9, x10)

inst_412:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3e3244 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6fee68 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f217896; op2val:0xbdbe3244;
op3val:0x3d6fee68; valaddr_reg:x12; val_offset:1173*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1173*FLEN/8, x13, x9, x10)

inst_413:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3e3244 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6fee68 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f217896; op2val:0xbdbe3244;
op3val:0x3d6fee68; valaddr_reg:x12; val_offset:1176*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1176*FLEN/8, x13, x9, x10)

inst_414:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3e3244 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6fee68 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f217896; op2val:0xbdbe3244;
op3val:0x3d6fee68; valaddr_reg:x12; val_offset:1179*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1179*FLEN/8, x13, x9, x10)

inst_415:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x191b1b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f0e46 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x77aae9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e191b1b; op2val:0xc04f0e46;
op3val:0x3ef7aae9; valaddr_reg:x12; val_offset:1182*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1182*FLEN/8, x13, x9, x10)

inst_416:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x191b1b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f0e46 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x77aae9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e191b1b; op2val:0xc04f0e46;
op3val:0x3ef7aae9; valaddr_reg:x12; val_offset:1185*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1185*FLEN/8, x13, x9, x10)

inst_417:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x191b1b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f0e46 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x77aae9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e191b1b; op2val:0xc04f0e46;
op3val:0x3ef7aae9; valaddr_reg:x12; val_offset:1188*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1188*FLEN/8, x13, x9, x10)

inst_418:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x191b1b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f0e46 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x77aae9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e191b1b; op2val:0xc04f0e46;
op3val:0x3ef7aae9; valaddr_reg:x12; val_offset:1191*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1191*FLEN/8, x13, x9, x10)

inst_419:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x191b1b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f0e46 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x77aae9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e191b1b; op2val:0xc04f0e46;
op3val:0x3ef7aae9; valaddr_reg:x12; val_offset:1194*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1194*FLEN/8, x13, x9, x10)

inst_420:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ff14c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6a9f75 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2fea1f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebff14c; op2val:0xbdea9f75;
op3val:0x3d2fea1f; valaddr_reg:x12; val_offset:1197*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1197*FLEN/8, x13, x9, x10)

inst_421:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ff14c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6a9f75 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2fea1f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebff14c; op2val:0xbdea9f75;
op3val:0x3d2fea1f; valaddr_reg:x12; val_offset:1200*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1200*FLEN/8, x13, x9, x10)

inst_422:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ff14c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6a9f75 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2fea1f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebff14c; op2val:0xbdea9f75;
op3val:0x3d2fea1f; valaddr_reg:x12; val_offset:1203*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1203*FLEN/8, x13, x9, x10)

inst_423:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ff14c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6a9f75 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2fea1f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebff14c; op2val:0xbdea9f75;
op3val:0x3d2fea1f; valaddr_reg:x12; val_offset:1206*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1206*FLEN/8, x13, x9, x10)

inst_424:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ff14c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6a9f75 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2fea1f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebff14c; op2val:0xbdea9f75;
op3val:0x3d2fea1f; valaddr_reg:x12; val_offset:1209*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1209*FLEN/8, x13, x9, x10)

inst_425:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ded93 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ff1c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3444ae and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ded93; op2val:0xc04ff1c1;
op3val:0x3f3444ae; valaddr_reg:x12; val_offset:1212*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1212*FLEN/8, x13, x9, x10)

inst_426:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ded93 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ff1c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3444ae and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ded93; op2val:0xc04ff1c1;
op3val:0x3f3444ae; valaddr_reg:x12; val_offset:1215*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1215*FLEN/8, x13, x9, x10)

inst_427:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ded93 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ff1c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3444ae and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ded93; op2val:0xc04ff1c1;
op3val:0x3f3444ae; valaddr_reg:x12; val_offset:1218*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1218*FLEN/8, x13, x9, x10)

inst_428:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ded93 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ff1c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3444ae and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ded93; op2val:0xc04ff1c1;
op3val:0x3f3444ae; valaddr_reg:x12; val_offset:1221*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1221*FLEN/8, x13, x9, x10)

inst_429:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ded93 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ff1c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3444ae and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5ded93; op2val:0xc04ff1c1;
op3val:0x3f3444ae; valaddr_reg:x12; val_offset:1224*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1224*FLEN/8, x13, x9, x10)

inst_430:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1dfc75 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x26cfd1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4de3e9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1dfc75; op2val:0xc0a6cfd1;
op3val:0x3f4de3e9; valaddr_reg:x12; val_offset:1227*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1227*FLEN/8, x13, x9, x10)

inst_431:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1dfc75 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x26cfd1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4de3e9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1dfc75; op2val:0xc0a6cfd1;
op3val:0x3f4de3e9; valaddr_reg:x12; val_offset:1230*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1230*FLEN/8, x13, x9, x10)

inst_432:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1dfc75 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x26cfd1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4de3e9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1dfc75; op2val:0xc0a6cfd1;
op3val:0x3f4de3e9; valaddr_reg:x12; val_offset:1233*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1233*FLEN/8, x13, x9, x10)

inst_433:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1dfc75 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x26cfd1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4de3e9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1dfc75; op2val:0xc0a6cfd1;
op3val:0x3f4de3e9; valaddr_reg:x12; val_offset:1236*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1236*FLEN/8, x13, x9, x10)

inst_434:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1dfc75 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x26cfd1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4de3e9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1dfc75; op2val:0xc0a6cfd1;
op3val:0x3f4de3e9; valaddr_reg:x12; val_offset:1239*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1239*FLEN/8, x13, x9, x10)

inst_435:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214980 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x06a161 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x29a44a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f214980; op2val:0xbd86a161;
op3val:0x3d29a44a; valaddr_reg:x12; val_offset:1242*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1242*FLEN/8, x13, x9, x10)

inst_436:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214980 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x06a161 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x29a44a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f214980; op2val:0xbd86a161;
op3val:0x3d29a44a; valaddr_reg:x12; val_offset:1245*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1245*FLEN/8, x13, x9, x10)

inst_437:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214980 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x06a161 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x29a44a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f214980; op2val:0xbd86a161;
op3val:0x3d29a44a; valaddr_reg:x12; val_offset:1248*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1248*FLEN/8, x13, x9, x10)

inst_438:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214980 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x06a161 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x29a44a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f214980; op2val:0xbd86a161;
op3val:0x3d29a44a; valaddr_reg:x12; val_offset:1251*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1251*FLEN/8, x13, x9, x10)

inst_439:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214980 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x06a161 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x29a44a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f214980; op2val:0xbd86a161;
op3val:0x3d29a44a; valaddr_reg:x12; val_offset:1254*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1254*FLEN/8, x13, x9, x10)

inst_440:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1c9d81 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ff30d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302159 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1c9d81; op2val:0xc08ff30d;
op3val:0x3f302159; valaddr_reg:x12; val_offset:1257*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1257*FLEN/8, x13, x9, x10)

inst_441:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1c9d81 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ff30d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302159 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1c9d81; op2val:0xc08ff30d;
op3val:0x3f302159; valaddr_reg:x12; val_offset:1260*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1260*FLEN/8, x13, x9, x10)

inst_442:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1c9d81 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ff30d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302159 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1c9d81; op2val:0xc08ff30d;
op3val:0x3f302159; valaddr_reg:x12; val_offset:1263*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1263*FLEN/8, x13, x9, x10)

inst_443:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1c9d81 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ff30d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302159 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1c9d81; op2val:0xc08ff30d;
op3val:0x3f302159; valaddr_reg:x12; val_offset:1266*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1266*FLEN/8, x13, x9, x10)

inst_444:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1c9d81 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ff30d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302159 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1c9d81; op2val:0xc08ff30d;
op3val:0x3f302159; valaddr_reg:x12; val_offset:1269*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1269*FLEN/8, x13, x9, x10)

inst_445:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35a219 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b9f95 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x46207b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f35a219; op2val:0xbf0b9f95;
op3val:0x3ec6207b; valaddr_reg:x12; val_offset:1272*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1272*FLEN/8, x13, x9, x10)

inst_446:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35a219 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b9f95 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x46207b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f35a219; op2val:0xbf0b9f95;
op3val:0x3ec6207b; valaddr_reg:x12; val_offset:1275*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1275*FLEN/8, x13, x9, x10)

inst_447:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35a219 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b9f95 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x46207b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f35a219; op2val:0xbf0b9f95;
op3val:0x3ec6207b; valaddr_reg:x12; val_offset:1278*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1278*FLEN/8, x13, x9, x10)

inst_448:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35a219 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b9f95 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x46207b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f35a219; op2val:0xbf0b9f95;
op3val:0x3ec6207b; valaddr_reg:x12; val_offset:1281*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1281*FLEN/8, x13, x9, x10)

inst_449:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35a219 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b9f95 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x46207b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f35a219; op2val:0xbf0b9f95;
op3val:0x3ec6207b; valaddr_reg:x12; val_offset:1284*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1284*FLEN/8, x13, x9, x10)

inst_450:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x212396 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00617d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x219e51 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e212396; op2val:0xc000617d;
op3val:0x3ea19e51; valaddr_reg:x12; val_offset:1287*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1287*FLEN/8, x13, x9, x10)

inst_451:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x212396 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00617d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x219e51 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e212396; op2val:0xc000617d;
op3val:0x3ea19e51; valaddr_reg:x12; val_offset:1290*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1290*FLEN/8, x13, x9, x10)

inst_452:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x212396 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00617d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x219e51 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e212396; op2val:0xc000617d;
op3val:0x3ea19e51; valaddr_reg:x12; val_offset:1293*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1293*FLEN/8, x13, x9, x10)

inst_453:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x212396 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00617d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x219e51 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e212396; op2val:0xc000617d;
op3val:0x3ea19e51; valaddr_reg:x12; val_offset:1296*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1296*FLEN/8, x13, x9, x10)

inst_454:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x212396 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00617d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x219e51 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e212396; op2val:0xc000617d;
op3val:0x3ea19e51; valaddr_reg:x12; val_offset:1299*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1299*FLEN/8, x13, x9, x10)

inst_455:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x02f8c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x081673 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0b3f45 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d82f8c0; op2val:0xc0881673;
op3val:0x3e8b3f45; valaddr_reg:x12; val_offset:1302*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1302*FLEN/8, x13, x9, x10)

inst_456:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x02f8c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x081673 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0b3f45 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d82f8c0; op2val:0xc0881673;
op3val:0x3e8b3f45; valaddr_reg:x12; val_offset:1305*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1305*FLEN/8, x13, x9, x10)

inst_457:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x02f8c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x081673 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0b3f45 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d82f8c0; op2val:0xc0881673;
op3val:0x3e8b3f45; valaddr_reg:x12; val_offset:1308*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1308*FLEN/8, x13, x9, x10)

inst_458:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x02f8c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x081673 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0b3f45 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d82f8c0; op2val:0xc0881673;
op3val:0x3e8b3f45; valaddr_reg:x12; val_offset:1311*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1311*FLEN/8, x13, x9, x10)

inst_459:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x02f8c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x081673 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0b3f45 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d82f8c0; op2val:0xc0881673;
op3val:0x3e8b3f45; valaddr_reg:x12; val_offset:1314*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1314*FLEN/8, x13, x9, x10)

inst_460:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37602e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d30ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4a45ae and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e37602e; op2val:0xc00d30ac;
op3val:0x3eca45ae; valaddr_reg:x12; val_offset:1317*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1317*FLEN/8, x13, x9, x10)

inst_461:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37602e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d30ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4a45ae and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e37602e; op2val:0xc00d30ac;
op3val:0x3eca45ae; valaddr_reg:x12; val_offset:1320*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1320*FLEN/8, x13, x9, x10)

inst_462:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37602e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d30ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4a45ae and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e37602e; op2val:0xc00d30ac;
op3val:0x3eca45ae; valaddr_reg:x12; val_offset:1323*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1323*FLEN/8, x13, x9, x10)

inst_463:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37602e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d30ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4a45ae and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e37602e; op2val:0xc00d30ac;
op3val:0x3eca45ae; valaddr_reg:x12; val_offset:1326*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1326*FLEN/8, x13, x9, x10)

inst_464:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37602e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d30ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4a45ae and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e37602e; op2val:0xc00d30ac;
op3val:0x3eca45ae; valaddr_reg:x12; val_offset:1329*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1329*FLEN/8, x13, x9, x10)

inst_465:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2347f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c881 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x128f43 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2347f7; op2val:0xbf65c881;
op3val:0x3f128f43; valaddr_reg:x12; val_offset:1332*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1332*FLEN/8, x13, x9, x10)

inst_466:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2347f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c881 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x128f43 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2347f7; op2val:0xbf65c881;
op3val:0x3f128f43; valaddr_reg:x12; val_offset:1335*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1335*FLEN/8, x13, x9, x10)

inst_467:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2347f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c881 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x128f43 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2347f7; op2val:0xbf65c881;
op3val:0x3f128f43; valaddr_reg:x12; val_offset:1338*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1338*FLEN/8, x13, x9, x10)

inst_468:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2347f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c881 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x128f43 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2347f7; op2val:0xbf65c881;
op3val:0x3f128f43; valaddr_reg:x12; val_offset:1341*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1341*FLEN/8, x13, x9, x10)

inst_469:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2347f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c881 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x128f43 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2347f7; op2val:0xbf65c881;
op3val:0x3f128f43; valaddr_reg:x12; val_offset:1344*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1344*FLEN/8, x13, x9, x10)

inst_470:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x029324 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c6e15 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x712f98 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f029324; op2val:0xbf6c6e15;
op3val:0x3ef12f98; valaddr_reg:x12; val_offset:1347*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1347*FLEN/8, x13, x9, x10)

inst_471:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x029324 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c6e15 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x712f98 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f029324; op2val:0xbf6c6e15;
op3val:0x3ef12f98; valaddr_reg:x12; val_offset:1350*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1350*FLEN/8, x13, x9, x10)

inst_472:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x029324 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c6e15 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x712f98 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f029324; op2val:0xbf6c6e15;
op3val:0x3ef12f98; valaddr_reg:x12; val_offset:1353*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1353*FLEN/8, x13, x9, x10)

inst_473:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x029324 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c6e15 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x712f98 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f029324; op2val:0xbf6c6e15;
op3val:0x3ef12f98; valaddr_reg:x12; val_offset:1356*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1356*FLEN/8, x13, x9, x10)

inst_474:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x029324 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c6e15 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x712f98 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f029324; op2val:0xbf6c6e15;
op3val:0x3ef12f98; valaddr_reg:x12; val_offset:1359*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1359*FLEN/8, x13, x9, x10)

inst_475:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25b0c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x109906 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3b2ced and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e25b0c0; op2val:0xc0909906;
op3val:0x3f3b2ced; valaddr_reg:x12; val_offset:1362*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1362*FLEN/8, x13, x9, x10)

inst_476:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25b0c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x109906 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3b2ced and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e25b0c0; op2val:0xc0909906;
op3val:0x3f3b2ced; valaddr_reg:x12; val_offset:1365*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1365*FLEN/8, x13, x9, x10)

inst_477:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25b0c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x109906 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3b2ced and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e25b0c0; op2val:0xc0909906;
op3val:0x3f3b2ced; valaddr_reg:x12; val_offset:1368*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1368*FLEN/8, x13, x9, x10)

inst_478:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25b0c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x109906 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3b2ced and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e25b0c0; op2val:0xc0909906;
op3val:0x3f3b2ced; valaddr_reg:x12; val_offset:1371*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1371*FLEN/8, x13, x9, x10)

inst_479:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25b0c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x109906 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3b2ced and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e25b0c0; op2val:0xc0909906;
op3val:0x3f3b2ced; valaddr_reg:x12; val_offset:1374*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1374*FLEN/8, x13, x9, x10)

inst_480:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e6e6f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12b4be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x08a352 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6e6e6f; op2val:0xbe92b4be;
op3val:0x3e88a352; valaddr_reg:x12; val_offset:1377*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1377*FLEN/8, x13, x9, x10)

inst_481:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e6e6f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12b4be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x08a352 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6e6e6f; op2val:0xbe92b4be;
op3val:0x3e88a352; valaddr_reg:x12; val_offset:1380*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1380*FLEN/8, x13, x9, x10)

inst_482:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e6e6f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12b4be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x08a352 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6e6e6f; op2val:0xbe92b4be;
op3val:0x3e88a352; valaddr_reg:x12; val_offset:1383*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1383*FLEN/8, x13, x9, x10)

inst_483:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e6e6f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12b4be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x08a352 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6e6e6f; op2val:0xbe92b4be;
op3val:0x3e88a352; valaddr_reg:x12; val_offset:1386*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1386*FLEN/8, x13, x9, x10)

inst_484:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e6e6f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12b4be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x08a352 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6e6e6f; op2val:0xbe92b4be;
op3val:0x3e88a352; valaddr_reg:x12; val_offset:1389*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1389*FLEN/8, x13, x9, x10)

inst_485:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3aa762 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bbc92 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x148c38 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3aa762; op2val:0xbf4bbc92;
op3val:0x3f148c38; valaddr_reg:x12; val_offset:1392*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1392*FLEN/8, x13, x9, x10)

inst_486:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3aa762 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bbc92 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x148c38 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3aa762; op2val:0xbf4bbc92;
op3val:0x3f148c38; valaddr_reg:x12; val_offset:1395*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1395*FLEN/8, x13, x9, x10)

inst_487:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3aa762 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bbc92 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x148c38 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3aa762; op2val:0xbf4bbc92;
op3val:0x3f148c38; valaddr_reg:x12; val_offset:1398*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1398*FLEN/8, x13, x9, x10)

inst_488:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3aa762 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bbc92 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x148c38 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3aa762; op2val:0xbf4bbc92;
op3val:0x3f148c38; valaddr_reg:x12; val_offset:1401*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1401*FLEN/8, x13, x9, x10)

inst_489:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3aa762 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bbc92 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x148c38 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3aa762; op2val:0xbf4bbc92;
op3val:0x3f148c38; valaddr_reg:x12; val_offset:1404*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1404*FLEN/8, x13, x9, x10)

inst_490:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620980 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x45edc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2ec33f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f620980; op2val:0xbe45edc2;
op3val:0x3e2ec33f; valaddr_reg:x12; val_offset:1407*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1407*FLEN/8, x13, x9, x10)

inst_491:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620980 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x45edc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2ec33f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f620980; op2val:0xbe45edc2;
op3val:0x3e2ec33f; valaddr_reg:x12; val_offset:1410*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1410*FLEN/8, x13, x9, x10)

inst_492:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620980 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x45edc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2ec33f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f620980; op2val:0xbe45edc2;
op3val:0x3e2ec33f; valaddr_reg:x12; val_offset:1413*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1413*FLEN/8, x13, x9, x10)

inst_493:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620980 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x45edc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2ec33f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f620980; op2val:0xbe45edc2;
op3val:0x3e2ec33f; valaddr_reg:x12; val_offset:1416*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1416*FLEN/8, x13, x9, x10)

inst_494:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620980 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x45edc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2ec33f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f620980; op2val:0xbe45edc2;
op3val:0x3e2ec33f; valaddr_reg:x12; val_offset:1419*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1419*FLEN/8, x13, x9, x10)

inst_495:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39ded3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79c21c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3556ab and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39ded3; op2val:0xbf79c21c;
op3val:0x3f3556ab; valaddr_reg:x12; val_offset:1422*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1422*FLEN/8, x13, x9, x10)

inst_496:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39ded3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79c21c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3556ab and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39ded3; op2val:0xbf79c21c;
op3val:0x3f3556ab; valaddr_reg:x12; val_offset:1425*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1425*FLEN/8, x13, x9, x10)

inst_497:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39ded3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79c21c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3556ab and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39ded3; op2val:0xbf79c21c;
op3val:0x3f3556ab; valaddr_reg:x12; val_offset:1428*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1428*FLEN/8, x13, x9, x10)

inst_498:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39ded3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79c21c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3556ab and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39ded3; op2val:0xbf79c21c;
op3val:0x3f3556ab; valaddr_reg:x12; val_offset:1431*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1431*FLEN/8, x13, x9, x10)

inst_499:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39ded3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79c21c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3556ab and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f39ded3; op2val:0xbf79c21c;
op3val:0x3f3556ab; valaddr_reg:x12; val_offset:1434*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1434*FLEN/8, x13, x9, x10)

inst_500:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48796a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221144 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7dd4b5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e48796a; op2val:0xc0221144;
op3val:0x3efdd4b5; valaddr_reg:x12; val_offset:1437*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1437*FLEN/8, x13, x9, x10)

inst_501:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48796a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221144 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7dd4b5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e48796a; op2val:0xc0221144;
op3val:0x3efdd4b5; valaddr_reg:x12; val_offset:1440*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1440*FLEN/8, x13, x9, x10)

inst_502:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48796a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221144 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7dd4b5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e48796a; op2val:0xc0221144;
op3val:0x3efdd4b5; valaddr_reg:x12; val_offset:1443*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1443*FLEN/8, x13, x9, x10)

inst_503:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48796a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221144 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7dd4b5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e48796a; op2val:0xc0221144;
op3val:0x3efdd4b5; valaddr_reg:x12; val_offset:1446*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1446*FLEN/8, x13, x9, x10)

inst_504:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48796a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221144 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7dd4b5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e48796a; op2val:0xc0221144;
op3val:0x3efdd4b5; valaddr_reg:x12; val_offset:1449*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1449*FLEN/8, x13, x9, x10)

inst_505:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3900f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e230c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x648fd7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3900f5; op2val:0xbe1e230c;
op3val:0x3de48fd7; valaddr_reg:x12; val_offset:1452*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1452*FLEN/8, x13, x9, x10)

inst_506:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3900f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e230c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x648fd7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3900f5; op2val:0xbe1e230c;
op3val:0x3de48fd7; valaddr_reg:x12; val_offset:1455*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1455*FLEN/8, x13, x9, x10)

inst_507:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3900f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e230c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x648fd7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3900f5; op2val:0xbe1e230c;
op3val:0x3de48fd7; valaddr_reg:x12; val_offset:1458*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1458*FLEN/8, x13, x9, x10)

inst_508:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3900f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e230c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x648fd7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3900f5; op2val:0xbe1e230c;
op3val:0x3de48fd7; valaddr_reg:x12; val_offset:1461*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1461*FLEN/8, x13, x9, x10)

inst_509:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3900f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e230c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x648fd7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3900f5; op2val:0xbe1e230c;
op3val:0x3de48fd7; valaddr_reg:x12; val_offset:1464*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1464*FLEN/8, x13, x9, x10)

inst_510:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x169415 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0afa1b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237de0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f169415; op2val:0xbf8afa1b;
op3val:0x3f237de0; valaddr_reg:x12; val_offset:1467*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1467*FLEN/8, x13, x9, x10)

inst_511:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x169415 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0afa1b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237de0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f169415; op2val:0xbf8afa1b;
op3val:0x3f237de0; valaddr_reg:x12; val_offset:1470*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1470*FLEN/8, x13, x9, x10)

inst_512:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x169415 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0afa1b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237de0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f169415; op2val:0xbf8afa1b;
op3val:0x3f237de0; valaddr_reg:x12; val_offset:1473*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1473*FLEN/8, x13, x9, x10)

inst_513:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x169415 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0afa1b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237de0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f169415; op2val:0xbf8afa1b;
op3val:0x3f237de0; valaddr_reg:x12; val_offset:1476*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1476*FLEN/8, x13, x9, x10)

inst_514:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x169415 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0afa1b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237de0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f169415; op2val:0xbf8afa1b;
op3val:0x3f237de0; valaddr_reg:x12; val_offset:1479*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1479*FLEN/8, x13, x9, x10)

inst_515:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d88e7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42534c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x56df9a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0d88e7; op2val:0xc0c2534c;
op3val:0x3e56df9a; valaddr_reg:x12; val_offset:1482*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1482*FLEN/8, x13, x9, x10)

inst_516:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d88e7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42534c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x56df9a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0d88e7; op2val:0xc0c2534c;
op3val:0x3e56df9a; valaddr_reg:x12; val_offset:1485*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1485*FLEN/8, x13, x9, x10)

inst_517:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d88e7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42534c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x56df9a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0d88e7; op2val:0xc0c2534c;
op3val:0x3e56df9a; valaddr_reg:x12; val_offset:1488*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1488*FLEN/8, x13, x9, x10)

inst_518:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d88e7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42534c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x56df9a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0d88e7; op2val:0xc0c2534c;
op3val:0x3e56df9a; valaddr_reg:x12; val_offset:1491*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1491*FLEN/8, x13, x9, x10)

inst_519:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d88e7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42534c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x56df9a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0d88e7; op2val:0xc0c2534c;
op3val:0x3e56df9a; valaddr_reg:x12; val_offset:1494*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1494*FLEN/8, x13, x9, x10)

inst_520:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01568d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e0a0a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40069e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81568d; op2val:0xc03e0a0a;
op3val:0x3f40069e; valaddr_reg:x12; val_offset:1497*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1497*FLEN/8, x13, x9, x10)

inst_521:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01568d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e0a0a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40069e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81568d; op2val:0xc03e0a0a;
op3val:0x3f40069e; valaddr_reg:x12; val_offset:1500*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1500*FLEN/8, x13, x9, x10)

inst_522:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01568d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e0a0a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40069e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81568d; op2val:0xc03e0a0a;
op3val:0x3f40069e; valaddr_reg:x12; val_offset:1503*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1503*FLEN/8, x13, x9, x10)

inst_523:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01568d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e0a0a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40069e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81568d; op2val:0xc03e0a0a;
op3val:0x3f40069e; valaddr_reg:x12; val_offset:1506*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1506*FLEN/8, x13, x9, x10)

inst_524:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01568d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e0a0a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40069e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e81568d; op2val:0xc03e0a0a;
op3val:0x3f40069e; valaddr_reg:x12; val_offset:1509*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1509*FLEN/8, x13, x9, x10)

inst_525:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f3558 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0a43a7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4e8a93 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3f3558; op2val:0xc00a43a7;
op3val:0x3ece8a93; valaddr_reg:x12; val_offset:1512*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1512*FLEN/8, x13, x9, x10)

inst_526:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f3558 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0a43a7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4e8a93 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3f3558; op2val:0xc00a43a7;
op3val:0x3ece8a93; valaddr_reg:x12; val_offset:1515*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1515*FLEN/8, x13, x9, x10)

inst_527:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f3558 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0a43a7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4e8a93 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3f3558; op2val:0xc00a43a7;
op3val:0x3ece8a93; valaddr_reg:x12; val_offset:1518*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1518*FLEN/8, x13, x9, x10)

inst_528:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f3558 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0a43a7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4e8a93 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3f3558; op2val:0xc00a43a7;
op3val:0x3ece8a93; valaddr_reg:x12; val_offset:1521*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1521*FLEN/8, x13, x9, x10)

inst_529:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f3558 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0a43a7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4e8a93 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e3f3558; op2val:0xc00a43a7;
op3val:0x3ece8a93; valaddr_reg:x12; val_offset:1524*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1524*FLEN/8, x13, x9, x10)

inst_530:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e5c9a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6d913d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21cea7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2e5c9a; op2val:0xc06d913d;
op3val:0x3f21cea7; valaddr_reg:x12; val_offset:1527*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1527*FLEN/8, x13, x9, x10)

inst_531:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e5c9a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6d913d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21cea7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2e5c9a; op2val:0xc06d913d;
op3val:0x3f21cea7; valaddr_reg:x12; val_offset:1530*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1530*FLEN/8, x13, x9, x10)

inst_532:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e5c9a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6d913d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21cea7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2e5c9a; op2val:0xc06d913d;
op3val:0x3f21cea7; valaddr_reg:x12; val_offset:1533*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1533*FLEN/8, x13, x9, x10)

inst_533:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e5c9a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6d913d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21cea7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2e5c9a; op2val:0xc06d913d;
op3val:0x3f21cea7; valaddr_reg:x12; val_offset:1536*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1536*FLEN/8, x13, x9, x10)

inst_534:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e5c9a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6d913d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21cea7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2e5c9a; op2val:0xc06d913d;
op3val:0x3f21cea7; valaddr_reg:x12; val_offset:1539*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1539*FLEN/8, x13, x9, x10)

inst_535:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x607ecb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x713414 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x538509 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e607ecb; op2val:0xbf713414;
op3val:0x3e538509; valaddr_reg:x12; val_offset:1542*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1542*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_4)

inst_536:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x607ecb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x713414 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x538509 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e607ecb; op2val:0xbf713414;
op3val:0x3e538509; valaddr_reg:x12; val_offset:1545*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1545*FLEN/8, x13, x9, x10)

inst_537:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x607ecb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x713414 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x538509 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e607ecb; op2val:0xbf713414;
op3val:0x3e538509; valaddr_reg:x12; val_offset:1548*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1548*FLEN/8, x13, x9, x10)

inst_538:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x607ecb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x713414 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x538509 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e607ecb; op2val:0xbf713414;
op3val:0x3e538509; valaddr_reg:x12; val_offset:1551*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1551*FLEN/8, x13, x9, x10)

inst_539:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x607ecb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x713414 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x538509 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e607ecb; op2val:0xbf713414;
op3val:0x3e538509; valaddr_reg:x12; val_offset:1554*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1554*FLEN/8, x13, x9, x10)

inst_540:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1cafed and fs2 == 1 and fe2 == 0x7e and fm2 == 0x106dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30cc42 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1cafed; op2val:0xbf106dbe;
op3val:0x3eb0cc42; valaddr_reg:x12; val_offset:1557*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1557*FLEN/8, x13, x9, x10)

inst_541:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1cafed and fs2 == 1 and fe2 == 0x7e and fm2 == 0x106dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30cc42 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1cafed; op2val:0xbf106dbe;
op3val:0x3eb0cc42; valaddr_reg:x12; val_offset:1560*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1560*FLEN/8, x13, x9, x10)

inst_542:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1cafed and fs2 == 1 and fe2 == 0x7e and fm2 == 0x106dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30cc42 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1cafed; op2val:0xbf106dbe;
op3val:0x3eb0cc42; valaddr_reg:x12; val_offset:1563*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1563*FLEN/8, x13, x9, x10)

inst_543:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1cafed and fs2 == 1 and fe2 == 0x7e and fm2 == 0x106dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30cc42 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1cafed; op2val:0xbf106dbe;
op3val:0x3eb0cc42; valaddr_reg:x12; val_offset:1566*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1566*FLEN/8, x13, x9, x10)

inst_544:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1cafed and fs2 == 1 and fe2 == 0x7e and fm2 == 0x106dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30cc42 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1cafed; op2val:0xbf106dbe;
op3val:0x3eb0cc42; valaddr_reg:x12; val_offset:1569*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1569*FLEN/8, x13, x9, x10)

inst_545:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6108ba and fs2 == 1 and fe2 == 0x7a and fm2 == 0x00ec8c and fs3 == 0 and fe3 == 0x77 and fm3 == 0x62a899 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6108ba; op2val:0xbd00ec8c;
op3val:0x3be2a899; valaddr_reg:x12; val_offset:1572*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1572*FLEN/8, x13, x9, x10)

inst_546:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6108ba and fs2 == 1 and fe2 == 0x7a and fm2 == 0x00ec8c and fs3 == 0 and fe3 == 0x77 and fm3 == 0x62a899 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6108ba; op2val:0xbd00ec8c;
op3val:0x3be2a899; valaddr_reg:x12; val_offset:1575*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1575*FLEN/8, x13, x9, x10)

inst_547:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6108ba and fs2 == 1 and fe2 == 0x7a and fm2 == 0x00ec8c and fs3 == 0 and fe3 == 0x77 and fm3 == 0x62a899 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6108ba; op2val:0xbd00ec8c;
op3val:0x3be2a899; valaddr_reg:x12; val_offset:1578*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1578*FLEN/8, x13, x9, x10)

inst_548:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6108ba and fs2 == 1 and fe2 == 0x7a and fm2 == 0x00ec8c and fs3 == 0 and fe3 == 0x77 and fm3 == 0x62a899 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6108ba; op2val:0xbd00ec8c;
op3val:0x3be2a899; valaddr_reg:x12; val_offset:1581*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1581*FLEN/8, x13, x9, x10)

inst_549:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6108ba and fs2 == 1 and fe2 == 0x7a and fm2 == 0x00ec8c and fs3 == 0 and fe3 == 0x77 and fm3 == 0x62a899 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6108ba; op2val:0xbd00ec8c;
op3val:0x3be2a899; valaddr_reg:x12; val_offset:1584*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1584*FLEN/8, x13, x9, x10)

inst_550:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x22ea8b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2bf854 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ae169 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da2ea8b; op2val:0xc02bf854;
op3val:0x3e5ae169; valaddr_reg:x12; val_offset:1587*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1587*FLEN/8, x13, x9, x10)

inst_551:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x22ea8b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2bf854 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ae169 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da2ea8b; op2val:0xc02bf854;
op3val:0x3e5ae169; valaddr_reg:x12; val_offset:1590*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1590*FLEN/8, x13, x9, x10)

inst_552:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x22ea8b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2bf854 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ae169 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da2ea8b; op2val:0xc02bf854;
op3val:0x3e5ae169; valaddr_reg:x12; val_offset:1593*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1593*FLEN/8, x13, x9, x10)

inst_553:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x22ea8b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2bf854 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ae169 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da2ea8b; op2val:0xc02bf854;
op3val:0x3e5ae169; valaddr_reg:x12; val_offset:1596*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1596*FLEN/8, x13, x9, x10)

inst_554:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x22ea8b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2bf854 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ae169 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da2ea8b; op2val:0xc02bf854;
op3val:0x3e5ae169; valaddr_reg:x12; val_offset:1599*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1599*FLEN/8, x13, x9, x10)

inst_555:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfa56 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x672839 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x47889c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cfa56; op2val:0xbee72839;
op3val:0x3ec7889c; valaddr_reg:x12; val_offset:1602*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1602*FLEN/8, x13, x9, x10)

inst_556:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfa56 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x672839 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x47889c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cfa56; op2val:0xbee72839;
op3val:0x3ec7889c; valaddr_reg:x12; val_offset:1605*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1605*FLEN/8, x13, x9, x10)

inst_557:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfa56 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x672839 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x47889c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cfa56; op2val:0xbee72839;
op3val:0x3ec7889c; valaddr_reg:x12; val_offset:1608*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1608*FLEN/8, x13, x9, x10)

inst_558:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfa56 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x672839 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x47889c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cfa56; op2val:0xbee72839;
op3val:0x3ec7889c; valaddr_reg:x12; val_offset:1611*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1611*FLEN/8, x13, x9, x10)

inst_559:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfa56 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x672839 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x47889c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cfa56; op2val:0xbee72839;
op3val:0x3ec7889c; valaddr_reg:x12; val_offset:1614*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1614*FLEN/8, x13, x9, x10)

inst_560:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x214287 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x398330 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x69b76e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea14287; op2val:0xc0398330;
op3val:0x3f69b76e; valaddr_reg:x12; val_offset:1617*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1617*FLEN/8, x13, x9, x10)

inst_561:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x214287 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x398330 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x69b76e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea14287; op2val:0xc0398330;
op3val:0x3f69b76e; valaddr_reg:x12; val_offset:1620*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1620*FLEN/8, x13, x9, x10)

inst_562:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x214287 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x398330 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x69b76e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea14287; op2val:0xc0398330;
op3val:0x3f69b76e; valaddr_reg:x12; val_offset:1623*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1623*FLEN/8, x13, x9, x10)

inst_563:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x214287 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x398330 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x69b76e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea14287; op2val:0xc0398330;
op3val:0x3f69b76e; valaddr_reg:x12; val_offset:1626*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1626*FLEN/8, x13, x9, x10)

inst_564:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x214287 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x398330 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x69b76e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea14287; op2val:0xc0398330;
op3val:0x3f69b76e; valaddr_reg:x12; val_offset:1629*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1629*FLEN/8, x13, x9, x10)

inst_565:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098d15 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7a3532 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x06705c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f098d15; op2val:0xbe7a3532;
op3val:0x3e06705c; valaddr_reg:x12; val_offset:1632*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1632*FLEN/8, x13, x9, x10)

inst_566:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098d15 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7a3532 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x06705c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f098d15; op2val:0xbe7a3532;
op3val:0x3e06705c; valaddr_reg:x12; val_offset:1635*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1635*FLEN/8, x13, x9, x10)

inst_567:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098d15 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7a3532 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x06705c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f098d15; op2val:0xbe7a3532;
op3val:0x3e06705c; valaddr_reg:x12; val_offset:1638*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1638*FLEN/8, x13, x9, x10)

inst_568:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098d15 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7a3532 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x06705c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f098d15; op2val:0xbe7a3532;
op3val:0x3e06705c; valaddr_reg:x12; val_offset:1641*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1641*FLEN/8, x13, x9, x10)

inst_569:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098d15 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7a3532 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x06705c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f098d15; op2val:0xbe7a3532;
op3val:0x3e06705c; valaddr_reg:x12; val_offset:1644*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1644*FLEN/8, x13, x9, x10)

inst_570:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41ae84 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a2b5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x18f485 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc1ae84; op2val:0xbf4a2b5f;
op3val:0x3d98f485; valaddr_reg:x12; val_offset:1647*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1647*FLEN/8, x13, x9, x10)

inst_571:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41ae84 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a2b5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x18f485 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc1ae84; op2val:0xbf4a2b5f;
op3val:0x3d98f485; valaddr_reg:x12; val_offset:1650*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1650*FLEN/8, x13, x9, x10)

inst_572:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41ae84 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a2b5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x18f485 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc1ae84; op2val:0xbf4a2b5f;
op3val:0x3d98f485; valaddr_reg:x12; val_offset:1653*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1653*FLEN/8, x13, x9, x10)

inst_573:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41ae84 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a2b5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x18f485 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc1ae84; op2val:0xbf4a2b5f;
op3val:0x3d98f485; valaddr_reg:x12; val_offset:1656*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1656*FLEN/8, x13, x9, x10)

inst_574:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41ae84 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a2b5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x18f485 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc1ae84; op2val:0xbf4a2b5f;
op3val:0x3d98f485; valaddr_reg:x12; val_offset:1659*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1659*FLEN/8, x13, x9, x10)

inst_575:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6844ff and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5db999 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x492bf5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6844ff; op2val:0xbeddb999;
op3val:0x3ec92bf5; valaddr_reg:x12; val_offset:1662*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1662*FLEN/8, x13, x9, x10)

inst_576:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6844ff and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5db999 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x492bf5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6844ff; op2val:0xbeddb999;
op3val:0x3ec92bf5; valaddr_reg:x12; val_offset:1665*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1665*FLEN/8, x13, x9, x10)

inst_577:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6844ff and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5db999 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x492bf5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6844ff; op2val:0xbeddb999;
op3val:0x3ec92bf5; valaddr_reg:x12; val_offset:1668*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1668*FLEN/8, x13, x9, x10)

inst_578:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6844ff and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5db999 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x492bf5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6844ff; op2val:0xbeddb999;
op3val:0x3ec92bf5; valaddr_reg:x12; val_offset:1671*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1671*FLEN/8, x13, x9, x10)

inst_579:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6844ff and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5db999 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x492bf5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6844ff; op2val:0xbeddb999;
op3val:0x3ec92bf5; valaddr_reg:x12; val_offset:1674*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1674*FLEN/8, x13, x9, x10)

inst_580:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0a3ab5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x24a785 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31d020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0a3ab5; op2val:0xc024a785;
op3val:0x3eb1d020; valaddr_reg:x12; val_offset:1677*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1677*FLEN/8, x13, x9, x10)

inst_581:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0a3ab5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x24a785 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31d020 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0a3ab5; op2val:0xc024a785;
op3val:0x3eb1d020; valaddr_reg:x12; val_offset:1680*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1680*FLEN/8, x13, x9, x10)

inst_582:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0a3ab5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x24a785 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31d020 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0a3ab5; op2val:0xc024a785;
op3val:0x3eb1d020; valaddr_reg:x12; val_offset:1683*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1683*FLEN/8, x13, x9, x10)

inst_583:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0a3ab5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x24a785 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31d020 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0a3ab5; op2val:0xc024a785;
op3val:0x3eb1d020; valaddr_reg:x12; val_offset:1686*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1686*FLEN/8, x13, x9, x10)

inst_584:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0a3ab5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x24a785 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31d020 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0a3ab5; op2val:0xc024a785;
op3val:0x3eb1d020; valaddr_reg:x12; val_offset:1689*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1689*FLEN/8, x13, x9, x10)

inst_585:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e19c1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x34ed54 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761706 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e19c1; op2val:0xbfb4ed54;
op3val:0x3f761706; valaddr_reg:x12; val_offset:1692*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1692*FLEN/8, x13, x9, x10)

inst_586:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e19c1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x34ed54 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761706 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e19c1; op2val:0xbfb4ed54;
op3val:0x3f761706; valaddr_reg:x12; val_offset:1695*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1695*FLEN/8, x13, x9, x10)

inst_587:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e19c1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x34ed54 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761706 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e19c1; op2val:0xbfb4ed54;
op3val:0x3f761706; valaddr_reg:x12; val_offset:1698*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1698*FLEN/8, x13, x9, x10)

inst_588:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e19c1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x34ed54 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761706 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e19c1; op2val:0xbfb4ed54;
op3val:0x3f761706; valaddr_reg:x12; val_offset:1701*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1701*FLEN/8, x13, x9, x10)

inst_589:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e19c1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x34ed54 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761706 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e19c1; op2val:0xbfb4ed54;
op3val:0x3f761706; valaddr_reg:x12; val_offset:1704*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1704*FLEN/8, x13, x9, x10)

inst_590:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2443ca and fs2 == 1 and fe2 == 0x7f and fm2 == 0x60e846 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x10505c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da443ca; op2val:0xbfe0e846;
op3val:0x3e10505c; valaddr_reg:x12; val_offset:1707*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1707*FLEN/8, x13, x9, x10)

inst_591:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2443ca and fs2 == 1 and fe2 == 0x7f and fm2 == 0x60e846 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x10505c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da443ca; op2val:0xbfe0e846;
op3val:0x3e10505c; valaddr_reg:x12; val_offset:1710*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1710*FLEN/8, x13, x9, x10)

inst_592:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2443ca and fs2 == 1 and fe2 == 0x7f and fm2 == 0x60e846 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x10505c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da443ca; op2val:0xbfe0e846;
op3val:0x3e10505c; valaddr_reg:x12; val_offset:1713*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1713*FLEN/8, x13, x9, x10)

inst_593:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2443ca and fs2 == 1 and fe2 == 0x7f and fm2 == 0x60e846 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x10505c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da443ca; op2val:0xbfe0e846;
op3val:0x3e10505c; valaddr_reg:x12; val_offset:1716*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1716*FLEN/8, x13, x9, x10)

inst_594:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2443ca and fs2 == 1 and fe2 == 0x7f and fm2 == 0x60e846 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x10505c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da443ca; op2val:0xbfe0e846;
op3val:0x3e10505c; valaddr_reg:x12; val_offset:1719*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1719*FLEN/8, x13, x9, x10)

inst_595:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3155cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a3571 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223d75 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb155cf; op2val:0xbfea3571;
op3val:0x3f223d75; valaddr_reg:x12; val_offset:1722*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1722*FLEN/8, x13, x9, x10)

inst_596:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3155cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a3571 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223d75 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb155cf; op2val:0xbfea3571;
op3val:0x3f223d75; valaddr_reg:x12; val_offset:1725*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1725*FLEN/8, x13, x9, x10)

inst_597:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3155cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a3571 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223d75 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb155cf; op2val:0xbfea3571;
op3val:0x3f223d75; valaddr_reg:x12; val_offset:1728*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1728*FLEN/8, x13, x9, x10)

inst_598:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3155cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a3571 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223d75 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb155cf; op2val:0xbfea3571;
op3val:0x3f223d75; valaddr_reg:x12; val_offset:1731*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1731*FLEN/8, x13, x9, x10)

inst_599:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3155cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a3571 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223d75 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb155cf; op2val:0xbfea3571;
op3val:0x3f223d75; valaddr_reg:x12; val_offset:1734*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1734*FLEN/8, x13, x9, x10)

inst_600:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fac36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2d5d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3da3ed and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2fac36; op2val:0xbf8a2d5d;
op3val:0x3e3da3ed; valaddr_reg:x12; val_offset:1737*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1737*FLEN/8, x13, x9, x10)

inst_601:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fac36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2d5d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3da3ed and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2fac36; op2val:0xbf8a2d5d;
op3val:0x3e3da3ed; valaddr_reg:x12; val_offset:1740*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1740*FLEN/8, x13, x9, x10)

inst_602:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fac36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2d5d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3da3ed and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2fac36; op2val:0xbf8a2d5d;
op3val:0x3e3da3ed; valaddr_reg:x12; val_offset:1743*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1743*FLEN/8, x13, x9, x10)

inst_603:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fac36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2d5d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3da3ed and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2fac36; op2val:0xbf8a2d5d;
op3val:0x3e3da3ed; valaddr_reg:x12; val_offset:1746*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1746*FLEN/8, x13, x9, x10)

inst_604:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fac36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2d5d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3da3ed and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e2fac36; op2val:0xbf8a2d5d;
op3val:0x3e3da3ed; valaddr_reg:x12; val_offset:1749*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1749*FLEN/8, x13, x9, x10)

inst_605:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cf22b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3a1c70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4cef37 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cf22b; op2val:0xbfba1c70;
op3val:0x3eccef37; valaddr_reg:x12; val_offset:1752*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1752*FLEN/8, x13, x9, x10)

inst_606:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cf22b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3a1c70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4cef37 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cf22b; op2val:0xbfba1c70;
op3val:0x3eccef37; valaddr_reg:x12; val_offset:1755*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1755*FLEN/8, x13, x9, x10)

inst_607:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cf22b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3a1c70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4cef37 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cf22b; op2val:0xbfba1c70;
op3val:0x3eccef37; valaddr_reg:x12; val_offset:1758*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1758*FLEN/8, x13, x9, x10)

inst_608:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cf22b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3a1c70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4cef37 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cf22b; op2val:0xbfba1c70;
op3val:0x3eccef37; valaddr_reg:x12; val_offset:1761*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1761*FLEN/8, x13, x9, x10)

inst_609:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cf22b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3a1c70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4cef37 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cf22b; op2val:0xbfba1c70;
op3val:0x3eccef37; valaddr_reg:x12; val_offset:1764*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1764*FLEN/8, x13, x9, x10)

inst_610:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e42b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0444b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34125a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e42b8; op2val:0xbf8444b6;
op3val:0x3f34125a; valaddr_reg:x12; val_offset:1767*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1767*FLEN/8, x13, x9, x10)

inst_611:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e42b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0444b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34125a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e42b8; op2val:0xbf8444b6;
op3val:0x3f34125a; valaddr_reg:x12; val_offset:1770*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1770*FLEN/8, x13, x9, x10)

inst_612:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e42b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0444b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34125a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e42b8; op2val:0xbf8444b6;
op3val:0x3f34125a; valaddr_reg:x12; val_offset:1773*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1773*FLEN/8, x13, x9, x10)

inst_613:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e42b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0444b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34125a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e42b8; op2val:0xbf8444b6;
op3val:0x3f34125a; valaddr_reg:x12; val_offset:1776*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1776*FLEN/8, x13, x9, x10)

inst_614:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e42b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0444b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34125a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2e42b8; op2val:0xbf8444b6;
op3val:0x3f34125a; valaddr_reg:x12; val_offset:1779*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1779*FLEN/8, x13, x9, x10)

inst_615:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247b71 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x061db6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5768 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f247b71; op2val:0xbf861db6;
op3val:0x3f2c5768; valaddr_reg:x12; val_offset:1782*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1782*FLEN/8, x13, x9, x10)

inst_616:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247b71 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x061db6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5768 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f247b71; op2val:0xbf861db6;
op3val:0x3f2c5768; valaddr_reg:x12; val_offset:1785*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1785*FLEN/8, x13, x9, x10)

inst_617:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247b71 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x061db6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5768 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f247b71; op2val:0xbf861db6;
op3val:0x3f2c5768; valaddr_reg:x12; val_offset:1788*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1788*FLEN/8, x13, x9, x10)

inst_618:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247b71 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x061db6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5768 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f247b71; op2val:0xbf861db6;
op3val:0x3f2c5768; valaddr_reg:x12; val_offset:1791*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1791*FLEN/8, x13, x9, x10)

inst_619:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247b71 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x061db6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5768 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f247b71; op2val:0xbf861db6;
op3val:0x3f2c5768; valaddr_reg:x12; val_offset:1794*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1794*FLEN/8, x13, x9, x10)

inst_620:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75bb79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c4b7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d148 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5bb79; op2val:0xbfec4b7b;
op3val:0x3f62d148; valaddr_reg:x12; val_offset:1797*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1797*FLEN/8, x13, x9, x10)

inst_621:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75bb79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c4b7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d148 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5bb79; op2val:0xbfec4b7b;
op3val:0x3f62d148; valaddr_reg:x12; val_offset:1800*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1800*FLEN/8, x13, x9, x10)

inst_622:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75bb79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c4b7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d148 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5bb79; op2val:0xbfec4b7b;
op3val:0x3f62d148; valaddr_reg:x12; val_offset:1803*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1803*FLEN/8, x13, x9, x10)

inst_623:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75bb79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c4b7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d148 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5bb79; op2val:0xbfec4b7b;
op3val:0x3f62d148; valaddr_reg:x12; val_offset:1806*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1806*FLEN/8, x13, x9, x10)

inst_624:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75bb79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c4b7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d148 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5bb79; op2val:0xbfec4b7b;
op3val:0x3f62d148; valaddr_reg:x12; val_offset:1809*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1809*FLEN/8, x13, x9, x10)

inst_625:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ea6d3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26e66a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8ea6d3; op2val:0xc015c202;
op3val:0x3f26e66a; valaddr_reg:x12; val_offset:1812*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1812*FLEN/8, x13, x9, x10)

inst_626:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ea6d3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26e66a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8ea6d3; op2val:0xc015c202;
op3val:0x3f26e66a; valaddr_reg:x12; val_offset:1815*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1815*FLEN/8, x13, x9, x10)

inst_627:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ea6d3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26e66a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8ea6d3; op2val:0xc015c202;
op3val:0x3f26e66a; valaddr_reg:x12; val_offset:1818*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1818*FLEN/8, x13, x9, x10)

inst_628:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ea6d3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26e66a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8ea6d3; op2val:0xc015c202;
op3val:0x3f26e66a; valaddr_reg:x12; val_offset:1821*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1821*FLEN/8, x13, x9, x10)

inst_629:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ea6d3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26e66a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8ea6d3; op2val:0xc015c202;
op3val:0x3f26e66a; valaddr_reg:x12; val_offset:1824*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1824*FLEN/8, x13, x9, x10)

inst_630:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x571b6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6300ba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebdee and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f571b6c; op2val:0xbf6300ba;
op3val:0x3f3ebdee; valaddr_reg:x12; val_offset:1827*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1827*FLEN/8, x13, x9, x10)

inst_631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x571b6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6300ba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebdee and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f571b6c; op2val:0xbf6300ba;
op3val:0x3f3ebdee; valaddr_reg:x12; val_offset:1830*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1830*FLEN/8, x13, x9, x10)

inst_632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x571b6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6300ba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebdee and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f571b6c; op2val:0xbf6300ba;
op3val:0x3f3ebdee; valaddr_reg:x12; val_offset:1833*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1833*FLEN/8, x13, x9, x10)

inst_633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x571b6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6300ba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebdee and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f571b6c; op2val:0xbf6300ba;
op3val:0x3f3ebdee; valaddr_reg:x12; val_offset:1836*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1836*FLEN/8, x13, x9, x10)

inst_634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x571b6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6300ba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebdee and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f571b6c; op2val:0xbf6300ba;
op3val:0x3f3ebdee; valaddr_reg:x12; val_offset:1839*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1839*FLEN/8, x13, x9, x10)

inst_635:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c5755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6e6c19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x119b36 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1c5755; op2val:0xbf6e6c19;
op3val:0x3f119b36; valaddr_reg:x12; val_offset:1842*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1842*FLEN/8, x13, x9, x10)

inst_636:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c5755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6e6c19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x119b36 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1c5755; op2val:0xbf6e6c19;
op3val:0x3f119b36; valaddr_reg:x12; val_offset:1845*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1845*FLEN/8, x13, x9, x10)

inst_637:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c5755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6e6c19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x119b36 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1c5755; op2val:0xbf6e6c19;
op3val:0x3f119b36; valaddr_reg:x12; val_offset:1848*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1848*FLEN/8, x13, x9, x10)

inst_638:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c5755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6e6c19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x119b36 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1c5755; op2val:0xbf6e6c19;
op3val:0x3f119b36; valaddr_reg:x12; val_offset:1851*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1851*FLEN/8, x13, x9, x10)

inst_639:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c5755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6e6c19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x119b36 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1c5755; op2val:0xbf6e6c19;
op3val:0x3f119b36; valaddr_reg:x12; val_offset:1854*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1854*FLEN/8, x13, x9, x10)

inst_640:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f0628 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x044423 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x667512 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f0628; op2val:0xc0844423;
op3val:0x3f667512; valaddr_reg:x12; val_offset:1857*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1857*FLEN/8, x13, x9, x10)

inst_641:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f0628 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x044423 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x667512 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f0628; op2val:0xc0844423;
op3val:0x3f667512; valaddr_reg:x12; val_offset:1860*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1860*FLEN/8, x13, x9, x10)

inst_642:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f0628 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x044423 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x667512 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f0628; op2val:0xc0844423;
op3val:0x3f667512; valaddr_reg:x12; val_offset:1863*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1863*FLEN/8, x13, x9, x10)

inst_643:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f0628 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x044423 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x667512 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f0628; op2val:0xc0844423;
op3val:0x3f667512; valaddr_reg:x12; val_offset:1866*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1866*FLEN/8, x13, x9, x10)

inst_644:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f0628 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x044423 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x667512 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5f0628; op2val:0xc0844423;
op3val:0x3f667512; valaddr_reg:x12; val_offset:1869*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1869*FLEN/8, x13, x9, x10)

inst_645:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x470376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68c419 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f396 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f470376; op2val:0xbf68c419;
op3val:0x3f34f396; valaddr_reg:x12; val_offset:1872*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1872*FLEN/8, x13, x9, x10)

inst_646:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x470376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68c419 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f396 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f470376; op2val:0xbf68c419;
op3val:0x3f34f396; valaddr_reg:x12; val_offset:1875*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1875*FLEN/8, x13, x9, x10)

inst_647:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x470376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68c419 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f396 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f470376; op2val:0xbf68c419;
op3val:0x3f34f396; valaddr_reg:x12; val_offset:1878*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1878*FLEN/8, x13, x9, x10)

inst_648:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x470376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68c419 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f396 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f470376; op2val:0xbf68c419;
op3val:0x3f34f396; valaddr_reg:x12; val_offset:1881*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1881*FLEN/8, x13, x9, x10)

inst_649:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x470376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68c419 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f396 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f470376; op2val:0xbf68c419;
op3val:0x3f34f396; valaddr_reg:x12; val_offset:1884*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1884*FLEN/8, x13, x9, x10)

inst_650:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52c4d7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1bd6a3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x004de5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f52c4d7; op2val:0xbe9bd6a3;
op3val:0x3e804de5; valaddr_reg:x12; val_offset:1887*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1887*FLEN/8, x13, x9, x10)

inst_651:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52c4d7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1bd6a3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x004de5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f52c4d7; op2val:0xbe9bd6a3;
op3val:0x3e804de5; valaddr_reg:x12; val_offset:1890*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1890*FLEN/8, x13, x9, x10)

inst_652:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52c4d7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1bd6a3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x004de5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f52c4d7; op2val:0xbe9bd6a3;
op3val:0x3e804de5; valaddr_reg:x12; val_offset:1893*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1893*FLEN/8, x13, x9, x10)

inst_653:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52c4d7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1bd6a3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x004de5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f52c4d7; op2val:0xbe9bd6a3;
op3val:0x3e804de5; valaddr_reg:x12; val_offset:1896*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1896*FLEN/8, x13, x9, x10)

inst_654:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52c4d7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1bd6a3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x004de5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f52c4d7; op2val:0xbe9bd6a3;
op3val:0x3e804de5; valaddr_reg:x12; val_offset:1899*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1899*FLEN/8, x13, x9, x10)

inst_655:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6417ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0859f1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72f9b3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6417ec; op2val:0xbf8859f1;
op3val:0x3f72f9b3; valaddr_reg:x12; val_offset:1902*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1902*FLEN/8, x13, x9, x10)

inst_656:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6417ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0859f1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72f9b3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6417ec; op2val:0xbf8859f1;
op3val:0x3f72f9b3; valaddr_reg:x12; val_offset:1905*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1905*FLEN/8, x13, x9, x10)

inst_657:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6417ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0859f1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72f9b3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6417ec; op2val:0xbf8859f1;
op3val:0x3f72f9b3; valaddr_reg:x12; val_offset:1908*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1908*FLEN/8, x13, x9, x10)

inst_658:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6417ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0859f1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72f9b3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6417ec; op2val:0xbf8859f1;
op3val:0x3f72f9b3; valaddr_reg:x12; val_offset:1911*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1911*FLEN/8, x13, x9, x10)

inst_659:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6417ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0859f1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72f9b3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6417ec; op2val:0xbf8859f1;
op3val:0x3f72f9b3; valaddr_reg:x12; val_offset:1914*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1914*FLEN/8, x13, x9, x10)

inst_660:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x636734 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18113f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x071499 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee36734; op2val:0xbf18113f;
op3val:0x3e871499; valaddr_reg:x12; val_offset:1917*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1917*FLEN/8, x13, x9, x10)

inst_661:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x636734 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18113f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x071499 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee36734; op2val:0xbf18113f;
op3val:0x3e871499; valaddr_reg:x12; val_offset:1920*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1920*FLEN/8, x13, x9, x10)

inst_662:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x636734 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18113f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x071499 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee36734; op2val:0xbf18113f;
op3val:0x3e871499; valaddr_reg:x12; val_offset:1923*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1923*FLEN/8, x13, x9, x10)

inst_663:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x636734 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18113f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x071499 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee36734; op2val:0xbf18113f;
op3val:0x3e871499; valaddr_reg:x12; val_offset:1926*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1926*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_5)

inst_664:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x636734 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18113f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x071499 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee36734; op2val:0xbf18113f;
op3val:0x3e871499; valaddr_reg:x12; val_offset:1929*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1929*FLEN/8, x13, x9, x10)

inst_665:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x331eda and fs2 == 1 and fe2 == 0x80 and fm2 == 0x212d3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x618c1a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e331eda; op2val:0xc0212d3a;
op3val:0x3ee18c1a; valaddr_reg:x12; val_offset:1932*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1932*FLEN/8, x13, x9, x10)

inst_666:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x331eda and fs2 == 1 and fe2 == 0x80 and fm2 == 0x212d3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x618c1a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e331eda; op2val:0xc0212d3a;
op3val:0x3ee18c1a; valaddr_reg:x12; val_offset:1935*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1935*FLEN/8, x13, x9, x10)

inst_667:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x331eda and fs2 == 1 and fe2 == 0x80 and fm2 == 0x212d3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x618c1a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e331eda; op2val:0xc0212d3a;
op3val:0x3ee18c1a; valaddr_reg:x12; val_offset:1938*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1938*FLEN/8, x13, x9, x10)

inst_668:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x331eda and fs2 == 1 and fe2 == 0x80 and fm2 == 0x212d3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x618c1a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e331eda; op2val:0xc0212d3a;
op3val:0x3ee18c1a; valaddr_reg:x12; val_offset:1941*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1941*FLEN/8, x13, x9, x10)

inst_669:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x331eda and fs2 == 1 and fe2 == 0x80 and fm2 == 0x212d3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x618c1a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e331eda; op2val:0xc0212d3a;
op3val:0x3ee18c1a; valaddr_reg:x12; val_offset:1944*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1944*FLEN/8, x13, x9, x10)

inst_670:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c5956 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x33a120 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x71dde2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2c5956; op2val:0xbe33a120;
op3val:0x3df1dde2; valaddr_reg:x12; val_offset:1947*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1947*FLEN/8, x13, x9, x10)

inst_671:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c5956 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x33a120 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x71dde2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2c5956; op2val:0xbe33a120;
op3val:0x3df1dde2; valaddr_reg:x12; val_offset:1950*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1950*FLEN/8, x13, x9, x10)

inst_672:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c5956 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x33a120 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x71dde2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2c5956; op2val:0xbe33a120;
op3val:0x3df1dde2; valaddr_reg:x12; val_offset:1953*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1953*FLEN/8, x13, x9, x10)

inst_673:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c5956 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x33a120 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x71dde2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2c5956; op2val:0xbe33a120;
op3val:0x3df1dde2; valaddr_reg:x12; val_offset:1956*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1956*FLEN/8, x13, x9, x10)

inst_674:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c5956 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x33a120 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x71dde2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2c5956; op2val:0xbe33a120;
op3val:0x3df1dde2; valaddr_reg:x12; val_offset:1959*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1959*FLEN/8, x13, x9, x10)

inst_675:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07179f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ccd19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05677c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e87179f; op2val:0xbffccd19;
op3val:0x3f05677c; valaddr_reg:x12; val_offset:1962*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1962*FLEN/8, x13, x9, x10)

inst_676:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07179f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ccd19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05677c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e87179f; op2val:0xbffccd19;
op3val:0x3f05677c; valaddr_reg:x12; val_offset:1965*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1965*FLEN/8, x13, x9, x10)

inst_677:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07179f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ccd19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05677c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e87179f; op2val:0xbffccd19;
op3val:0x3f05677c; valaddr_reg:x12; val_offset:1968*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1968*FLEN/8, x13, x9, x10)

inst_678:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07179f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ccd19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05677c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e87179f; op2val:0xbffccd19;
op3val:0x3f05677c; valaddr_reg:x12; val_offset:1971*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1971*FLEN/8, x13, x9, x10)

inst_679:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07179f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ccd19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05677c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e87179f; op2val:0xbffccd19;
op3val:0x3f05677c; valaddr_reg:x12; val_offset:1974*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1974*FLEN/8, x13, x9, x10)

inst_680:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5fd383 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x15ca94 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x02f739 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edfd383; op2val:0xbe15ca94;
op3val:0x3d82f739; valaddr_reg:x12; val_offset:1977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1977*FLEN/8, x13, x9, x10)

inst_681:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5fd383 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x15ca94 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x02f739 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edfd383; op2val:0xbe15ca94;
op3val:0x3d82f739; valaddr_reg:x12; val_offset:1980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1980*FLEN/8, x13, x9, x10)

inst_682:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5fd383 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x15ca94 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x02f739 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edfd383; op2val:0xbe15ca94;
op3val:0x3d82f739; valaddr_reg:x12; val_offset:1983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1983*FLEN/8, x13, x9, x10)

inst_683:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5fd383 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x15ca94 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x02f739 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edfd383; op2val:0xbe15ca94;
op3val:0x3d82f739; valaddr_reg:x12; val_offset:1986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1986*FLEN/8, x13, x9, x10)

inst_684:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5fd383 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x15ca94 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x02f739 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3edfd383; op2val:0xbe15ca94;
op3val:0x3d82f739; valaddr_reg:x12; val_offset:1989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1989*FLEN/8, x13, x9, x10)

inst_685:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d39bb and fs2 == 1 and fe2 == 0x83 and fm2 == 0x5017e0 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0ccf10 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b2d39bb; op2val:0xc1d017e0;
op3val:0x3d8ccf10; valaddr_reg:x12; val_offset:1992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1992*FLEN/8, x13, x9, x10)

inst_686:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d39bb and fs2 == 1 and fe2 == 0x83 and fm2 == 0x5017e0 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0ccf10 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b2d39bb; op2val:0xc1d017e0;
op3val:0x3d8ccf10; valaddr_reg:x12; val_offset:1995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1995*FLEN/8, x13, x9, x10)

inst_687:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d39bb and fs2 == 1 and fe2 == 0x83 and fm2 == 0x5017e0 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0ccf10 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b2d39bb; op2val:0xc1d017e0;
op3val:0x3d8ccf10; valaddr_reg:x12; val_offset:1998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1998*FLEN/8, x13, x9, x10)

inst_688:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d39bb and fs2 == 1 and fe2 == 0x83 and fm2 == 0x5017e0 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0ccf10 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b2d39bb; op2val:0xc1d017e0;
op3val:0x3d8ccf10; valaddr_reg:x12; val_offset:2001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2001*FLEN/8, x13, x9, x10)

inst_689:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d39bb and fs2 == 1 and fe2 == 0x83 and fm2 == 0x5017e0 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0ccf10 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3b2d39bb; op2val:0xc1d017e0;
op3val:0x3d8ccf10; valaddr_reg:x12; val_offset:2004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2004*FLEN/8, x13, x9, x10)

inst_690:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e0a61 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46af73 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5434 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5e0a61; op2val:0xbf46af73;
op3val:0x3f2c5434; valaddr_reg:x12; val_offset:2007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2007*FLEN/8, x13, x9, x10)

inst_691:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e0a61 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46af73 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5434 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5e0a61; op2val:0xbf46af73;
op3val:0x3f2c5434; valaddr_reg:x12; val_offset:2010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2010*FLEN/8, x13, x9, x10)

inst_692:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e0a61 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46af73 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5434 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5e0a61; op2val:0xbf46af73;
op3val:0x3f2c5434; valaddr_reg:x12; val_offset:2013*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2013*FLEN/8, x13, x9, x10)

inst_693:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e0a61 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46af73 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5434 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5e0a61; op2val:0xbf46af73;
op3val:0x3f2c5434; valaddr_reg:x12; val_offset:2016*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2016*FLEN/8, x13, x9, x10)

inst_694:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e0a61 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46af73 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5434 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5e0a61; op2val:0xbf46af73;
op3val:0x3f2c5434; valaddr_reg:x12; val_offset:2019*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2019*FLEN/8, x13, x9, x10)

inst_695:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1798fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33a14b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x54bef5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1798fa; op2val:0xbfb3a14b;
op3val:0x3f54bef5; valaddr_reg:x12; val_offset:2022*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2022*FLEN/8, x13, x9, x10)

inst_696:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1798fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33a14b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x54bef5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1798fa; op2val:0xbfb3a14b;
op3val:0x3f54bef5; valaddr_reg:x12; val_offset:2025*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2025*FLEN/8, x13, x9, x10)

inst_697:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1798fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33a14b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x54bef5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1798fa; op2val:0xbfb3a14b;
op3val:0x3f54bef5; valaddr_reg:x12; val_offset:2028*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2028*FLEN/8, x13, x9, x10)

inst_698:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1798fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33a14b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x54bef5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1798fa; op2val:0xbfb3a14b;
op3val:0x3f54bef5; valaddr_reg:x12; val_offset:2031*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2031*FLEN/8, x13, x9, x10)

inst_699:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1798fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33a14b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x54bef5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1798fa; op2val:0xbfb3a14b;
op3val:0x3f54bef5; valaddr_reg:x12; val_offset:2034*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2034*FLEN/8, x13, x9, x10)

inst_700:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x73a83f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c9a25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x706c55 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e73a83f; op2val:0xc07c9a25;
op3val:0x3f706c55; valaddr_reg:x12; val_offset:2037*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2037*FLEN/8, x13, x9, x10)

inst_701:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x73a83f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c9a25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x706c55 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e73a83f; op2val:0xc07c9a25;
op3val:0x3f706c55; valaddr_reg:x12; val_offset:2040*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2040*FLEN/8, x13, x9, x10)

inst_702:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x73a83f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c9a25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x706c55 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e73a83f; op2val:0xc07c9a25;
op3val:0x3f706c55; valaddr_reg:x12; val_offset:2043*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2043*FLEN/8, x13, x9, x10)

inst_703:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x73a83f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c9a25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x706c55 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e73a83f; op2val:0xc07c9a25;
op3val:0x3f706c55; valaddr_reg:x12; val_offset:2046*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2046*FLEN/8, x13, x9, x10)

inst_704:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x73a83f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c9a25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x706c55 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e73a83f; op2val:0xc07c9a25;
op3val:0x3f706c55; valaddr_reg:x12; val_offset:2049*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2049*FLEN/8, x13, x9, x10)

inst_705:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x667fb9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6bab2f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x543161 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de67fb9; op2val:0xc06bab2f;
op3val:0x3ed43161; valaddr_reg:x12; val_offset:2052*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2052*FLEN/8, x13, x9, x10)

inst_706:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x667fb9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6bab2f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x543161 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de67fb9; op2val:0xc06bab2f;
op3val:0x3ed43161; valaddr_reg:x12; val_offset:2055*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2055*FLEN/8, x13, x9, x10)

inst_707:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x667fb9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6bab2f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x543161 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de67fb9; op2val:0xc06bab2f;
op3val:0x3ed43161; valaddr_reg:x12; val_offset:2058*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2058*FLEN/8, x13, x9, x10)

inst_708:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x667fb9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6bab2f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x543161 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de67fb9; op2val:0xc06bab2f;
op3val:0x3ed43161; valaddr_reg:x12; val_offset:2061*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2061*FLEN/8, x13, x9, x10)

inst_709:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x667fb9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6bab2f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x543161 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de67fb9; op2val:0xc06bab2f;
op3val:0x3ed43161; valaddr_reg:x12; val_offset:2064*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2064*FLEN/8, x13, x9, x10)

inst_710:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c0dd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x41ed03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15cd7d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5c0dd; op2val:0xbfc1ed03;
op3val:0x3f15cd7d; valaddr_reg:x12; val_offset:2067*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2067*FLEN/8, x13, x9, x10)

inst_711:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c0dd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x41ed03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15cd7d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5c0dd; op2val:0xbfc1ed03;
op3val:0x3f15cd7d; valaddr_reg:x12; val_offset:2070*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2070*FLEN/8, x13, x9, x10)

inst_712:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c0dd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x41ed03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15cd7d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5c0dd; op2val:0xbfc1ed03;
op3val:0x3f15cd7d; valaddr_reg:x12; val_offset:2073*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2073*FLEN/8, x13, x9, x10)

inst_713:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c0dd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x41ed03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15cd7d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5c0dd; op2val:0xbfc1ed03;
op3val:0x3f15cd7d; valaddr_reg:x12; val_offset:2076*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2076*FLEN/8, x13, x9, x10)

inst_714:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c0dd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x41ed03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15cd7d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec5c0dd; op2val:0xbfc1ed03;
op3val:0x3f15cd7d; valaddr_reg:x12; val_offset:2079*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2079*FLEN/8, x13, x9, x10)

inst_715:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x020622 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5486e7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57e333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d820622; op2val:0xc0d486e7;
op3val:0x3ed7e333; valaddr_reg:x12; val_offset:2082*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2082*FLEN/8, x13, x9, x10)

inst_716:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x020622 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5486e7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57e333 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d820622; op2val:0xc0d486e7;
op3val:0x3ed7e333; valaddr_reg:x12; val_offset:2085*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2085*FLEN/8, x13, x9, x10)

inst_717:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x020622 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5486e7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57e333 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d820622; op2val:0xc0d486e7;
op3val:0x3ed7e333; valaddr_reg:x12; val_offset:2088*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2088*FLEN/8, x13, x9, x10)

inst_718:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x020622 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5486e7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57e333 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d820622; op2val:0xc0d486e7;
op3val:0x3ed7e333; valaddr_reg:x12; val_offset:2091*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2091*FLEN/8, x13, x9, x10)

inst_719:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x020622 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5486e7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57e333 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d820622; op2val:0xc0d486e7;
op3val:0x3ed7e333; valaddr_reg:x12; val_offset:2094*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2094*FLEN/8, x13, x9, x10)

inst_720:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53db2c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f4fca and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1e528e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd3db2c; op2val:0xbf3f4fca;
op3val:0x3d9e528e; valaddr_reg:x12; val_offset:2097*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2097*FLEN/8, x13, x9, x10)

inst_721:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53db2c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f4fca and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1e528e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd3db2c; op2val:0xbf3f4fca;
op3val:0x3d9e528e; valaddr_reg:x12; val_offset:2100*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2100*FLEN/8, x13, x9, x10)

inst_722:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53db2c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f4fca and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1e528e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd3db2c; op2val:0xbf3f4fca;
op3val:0x3d9e528e; valaddr_reg:x12; val_offset:2103*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2103*FLEN/8, x13, x9, x10)

inst_723:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53db2c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f4fca and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1e528e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd3db2c; op2val:0xbf3f4fca;
op3val:0x3d9e528e; valaddr_reg:x12; val_offset:2106*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2106*FLEN/8, x13, x9, x10)

inst_724:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53db2c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f4fca and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1e528e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dd3db2c; op2val:0xbf3f4fca;
op3val:0x3d9e528e; valaddr_reg:x12; val_offset:2109*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2109*FLEN/8, x13, x9, x10)

inst_725:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1da2aa and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5d4efe and fs3 == 0 and fe3 == 0x79 and fm3 == 0x084611 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9da2aa; op2val:0xbd5d4efe;
op3val:0x3c884611; valaddr_reg:x12; val_offset:2112*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2112*FLEN/8, x13, x9, x10)

inst_726:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1da2aa and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5d4efe and fs3 == 0 and fe3 == 0x79 and fm3 == 0x084611 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9da2aa; op2val:0xbd5d4efe;
op3val:0x3c884611; valaddr_reg:x12; val_offset:2115*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2115*FLEN/8, x13, x9, x10)

inst_727:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1da2aa and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5d4efe and fs3 == 0 and fe3 == 0x79 and fm3 == 0x084611 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9da2aa; op2val:0xbd5d4efe;
op3val:0x3c884611; valaddr_reg:x12; val_offset:2118*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2118*FLEN/8, x13, x9, x10)

inst_728:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1da2aa and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5d4efe and fs3 == 0 and fe3 == 0x79 and fm3 == 0x084611 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9da2aa; op2val:0xbd5d4efe;
op3val:0x3c884611; valaddr_reg:x12; val_offset:2121*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2121*FLEN/8, x13, x9, x10)

inst_729:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1da2aa and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5d4efe and fs3 == 0 and fe3 == 0x79 and fm3 == 0x084611 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9da2aa; op2val:0xbd5d4efe;
op3val:0x3c884611; valaddr_reg:x12; val_offset:2124*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2124*FLEN/8, x13, x9, x10)

inst_730:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02a7b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1ede60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2229fa and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f02a7b0; op2val:0xbf9ede60;
op3val:0x3f2229fa; valaddr_reg:x12; val_offset:2127*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2127*FLEN/8, x13, x9, x10)

inst_731:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02a7b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1ede60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2229fa and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f02a7b0; op2val:0xbf9ede60;
op3val:0x3f2229fa; valaddr_reg:x12; val_offset:2130*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2130*FLEN/8, x13, x9, x10)

inst_732:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02a7b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1ede60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2229fa and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f02a7b0; op2val:0xbf9ede60;
op3val:0x3f2229fa; valaddr_reg:x12; val_offset:2133*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2133*FLEN/8, x13, x9, x10)

inst_733:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02a7b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1ede60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2229fa and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f02a7b0; op2val:0xbf9ede60;
op3val:0x3f2229fa; valaddr_reg:x12; val_offset:2136*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2136*FLEN/8, x13, x9, x10)

inst_734:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02a7b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1ede60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2229fa and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f02a7b0; op2val:0xbf9ede60;
op3val:0x3f2229fa; valaddr_reg:x12; val_offset:2139*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2139*FLEN/8, x13, x9, x10)

inst_735:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1fbdc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41a606 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x71ab54 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1fbdc5; op2val:0xc041a606;
op3val:0x3ef1ab54; valaddr_reg:x12; val_offset:2142*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2142*FLEN/8, x13, x9, x10)

inst_736:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1fbdc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41a606 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x71ab54 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1fbdc5; op2val:0xc041a606;
op3val:0x3ef1ab54; valaddr_reg:x12; val_offset:2145*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2145*FLEN/8, x13, x9, x10)

inst_737:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1fbdc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41a606 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x71ab54 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1fbdc5; op2val:0xc041a606;
op3val:0x3ef1ab54; valaddr_reg:x12; val_offset:2148*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2148*FLEN/8, x13, x9, x10)

inst_738:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1fbdc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41a606 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x71ab54 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1fbdc5; op2val:0xc041a606;
op3val:0x3ef1ab54; valaddr_reg:x12; val_offset:2151*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2151*FLEN/8, x13, x9, x10)

inst_739:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1fbdc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41a606 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x71ab54 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1fbdc5; op2val:0xc041a606;
op3val:0x3ef1ab54; valaddr_reg:x12; val_offset:2154*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2154*FLEN/8, x13, x9, x10)

inst_740:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30f157 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6cf2b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x23c63b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f30f157; op2val:0xbeecf2b1;
op3val:0x3ea3c63b; valaddr_reg:x12; val_offset:2157*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2157*FLEN/8, x13, x9, x10)

inst_741:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30f157 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6cf2b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x23c63b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f30f157; op2val:0xbeecf2b1;
op3val:0x3ea3c63b; valaddr_reg:x12; val_offset:2160*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2160*FLEN/8, x13, x9, x10)

inst_742:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30f157 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6cf2b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x23c63b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f30f157; op2val:0xbeecf2b1;
op3val:0x3ea3c63b; valaddr_reg:x12; val_offset:2163*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2163*FLEN/8, x13, x9, x10)

inst_743:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30f157 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6cf2b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x23c63b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f30f157; op2val:0xbeecf2b1;
op3val:0x3ea3c63b; valaddr_reg:x12; val_offset:2166*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2166*FLEN/8, x13, x9, x10)

inst_744:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30f157 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6cf2b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x23c63b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f30f157; op2val:0xbeecf2b1;
op3val:0x3ea3c63b; valaddr_reg:x12; val_offset:2169*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2169*FLEN/8, x13, x9, x10)

inst_745:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x062d29 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54fbae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f429f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f062d29; op2val:0xbfd4fbae;
op3val:0x3f5f429f; valaddr_reg:x12; val_offset:2172*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2172*FLEN/8, x13, x9, x10)

inst_746:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x062d29 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54fbae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f429f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f062d29; op2val:0xbfd4fbae;
op3val:0x3f5f429f; valaddr_reg:x12; val_offset:2175*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2175*FLEN/8, x13, x9, x10)

inst_747:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x062d29 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54fbae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f429f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f062d29; op2val:0xbfd4fbae;
op3val:0x3f5f429f; valaddr_reg:x12; val_offset:2178*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2178*FLEN/8, x13, x9, x10)

inst_748:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x062d29 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54fbae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f429f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f062d29; op2val:0xbfd4fbae;
op3val:0x3f5f429f; valaddr_reg:x12; val_offset:2181*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2181*FLEN/8, x13, x9, x10)

inst_749:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x062d29 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54fbae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f429f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f062d29; op2val:0xbfd4fbae;
op3val:0x3f5f429f; valaddr_reg:x12; val_offset:2184*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2184*FLEN/8, x13, x9, x10)

inst_750:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x260dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x455af1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000396 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e260dc5; op2val:0xc0455af1;
op3val:0x3f000396; valaddr_reg:x12; val_offset:2187*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2187*FLEN/8, x13, x9, x10)

inst_751:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x260dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x455af1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000396 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e260dc5; op2val:0xc0455af1;
op3val:0x3f000396; valaddr_reg:x12; val_offset:2190*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2190*FLEN/8, x13, x9, x10)

inst_752:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x260dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x455af1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000396 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e260dc5; op2val:0xc0455af1;
op3val:0x3f000396; valaddr_reg:x12; val_offset:2193*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2193*FLEN/8, x13, x9, x10)

inst_753:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x260dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x455af1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000396 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e260dc5; op2val:0xc0455af1;
op3val:0x3f000396; valaddr_reg:x12; val_offset:2196*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2196*FLEN/8, x13, x9, x10)

inst_754:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x260dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x455af1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000396 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e260dc5; op2val:0xc0455af1;
op3val:0x3f000396; valaddr_reg:x12; val_offset:2199*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2199*FLEN/8, x13, x9, x10)

inst_755:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x68eae9 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0336b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ec3f0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce8eae9; op2val:0xc18336b1;
op3val:0x3eeec3f0; valaddr_reg:x12; val_offset:2202*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2202*FLEN/8, x13, x9, x10)

inst_756:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x68eae9 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0336b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ec3f0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce8eae9; op2val:0xc18336b1;
op3val:0x3eeec3f0; valaddr_reg:x12; val_offset:2205*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2205*FLEN/8, x13, x9, x10)

inst_757:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x68eae9 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0336b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ec3f0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce8eae9; op2val:0xc18336b1;
op3val:0x3eeec3f0; valaddr_reg:x12; val_offset:2208*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2208*FLEN/8, x13, x9, x10)

inst_758:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x68eae9 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0336b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ec3f0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce8eae9; op2val:0xc18336b1;
op3val:0x3eeec3f0; valaddr_reg:x12; val_offset:2211*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2211*FLEN/8, x13, x9, x10)

inst_759:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x68eae9 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0336b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ec3f0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ce8eae9; op2val:0xc18336b1;
op3val:0x3eeec3f0; valaddr_reg:x12; val_offset:2214*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2214*FLEN/8, x13, x9, x10)

inst_760:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x01584e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x34167f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35faea and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d81584e; op2val:0xc134167f;
op3val:0x3f35faea; valaddr_reg:x12; val_offset:2217*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2217*FLEN/8, x13, x9, x10)

inst_761:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x01584e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x34167f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35faea and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d81584e; op2val:0xc134167f;
op3val:0x3f35faea; valaddr_reg:x12; val_offset:2220*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2220*FLEN/8, x13, x9, x10)

inst_762:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x01584e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x34167f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35faea and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d81584e; op2val:0xc134167f;
op3val:0x3f35faea; valaddr_reg:x12; val_offset:2223*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2223*FLEN/8, x13, x9, x10)

inst_763:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x01584e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x34167f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35faea and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d81584e; op2val:0xc134167f;
op3val:0x3f35faea; valaddr_reg:x12; val_offset:2226*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2226*FLEN/8, x13, x9, x10)

inst_764:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x01584e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x34167f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35faea and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d81584e; op2val:0xc134167f;
op3val:0x3f35faea; valaddr_reg:x12; val_offset:2229*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2229*FLEN/8, x13, x9, x10)

inst_765:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x485250 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ae7c8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x726dc7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f485250; op2val:0xbf1ae7c8;
op3val:0x3ef26dc7; valaddr_reg:x12; val_offset:2232*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2232*FLEN/8, x13, x9, x10)

inst_766:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x485250 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ae7c8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x726dc7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f485250; op2val:0xbf1ae7c8;
op3val:0x3ef26dc7; valaddr_reg:x12; val_offset:2235*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2235*FLEN/8, x13, x9, x10)

inst_767:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x485250 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ae7c8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x726dc7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f485250; op2val:0xbf1ae7c8;
op3val:0x3ef26dc7; valaddr_reg:x12; val_offset:2238*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2238*FLEN/8, x13, x9, x10)

inst_768:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x485250 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ae7c8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x726dc7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f485250; op2val:0xbf1ae7c8;
op3val:0x3ef26dc7; valaddr_reg:x12; val_offset:2241*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2241*FLEN/8, x13, x9, x10)

inst_769:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x485250 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ae7c8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x726dc7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f485250; op2val:0xbf1ae7c8;
op3val:0x3ef26dc7; valaddr_reg:x12; val_offset:2244*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2244*FLEN/8, x13, x9, x10)

inst_770:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6edfc9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x403002 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3354a3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6edfc9; op2val:0xbf403002;
op3val:0x3e3354a3; valaddr_reg:x12; val_offset:2247*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2247*FLEN/8, x13, x9, x10)

inst_771:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6edfc9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x403002 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3354a3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6edfc9; op2val:0xbf403002;
op3val:0x3e3354a3; valaddr_reg:x12; val_offset:2250*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2250*FLEN/8, x13, x9, x10)

inst_772:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6edfc9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x403002 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3354a3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6edfc9; op2val:0xbf403002;
op3val:0x3e3354a3; valaddr_reg:x12; val_offset:2253*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2253*FLEN/8, x13, x9, x10)

inst_773:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6edfc9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x403002 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3354a3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6edfc9; op2val:0xbf403002;
op3val:0x3e3354a3; valaddr_reg:x12; val_offset:2256*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2256*FLEN/8, x13, x9, x10)

inst_774:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6edfc9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x403002 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3354a3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e6edfc9; op2val:0xbf403002;
op3val:0x3e3354a3; valaddr_reg:x12; val_offset:2259*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2259*FLEN/8, x13, x9, x10)

inst_775:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34831d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ef863 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x603021 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb4831d; op2val:0xc01ef863;
op3val:0x3f603021; valaddr_reg:x12; val_offset:2262*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2262*FLEN/8, x13, x9, x10)

inst_776:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34831d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ef863 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x603021 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb4831d; op2val:0xc01ef863;
op3val:0x3f603021; valaddr_reg:x12; val_offset:2265*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2265*FLEN/8, x13, x9, x10)

inst_777:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34831d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ef863 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x603021 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb4831d; op2val:0xc01ef863;
op3val:0x3f603021; valaddr_reg:x12; val_offset:2268*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2268*FLEN/8, x13, x9, x10)

inst_778:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34831d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ef863 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x603021 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb4831d; op2val:0xc01ef863;
op3val:0x3f603021; valaddr_reg:x12; val_offset:2271*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2271*FLEN/8, x13, x9, x10)

inst_779:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34831d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ef863 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x603021 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb4831d; op2val:0xc01ef863;
op3val:0x3f603021; valaddr_reg:x12; val_offset:2274*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2274*FLEN/8, x13, x9, x10)

inst_780:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b1dea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bdd2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x770d7c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b1dea; op2val:0xbfcbdd2f;
op3val:0x3f770d7c; valaddr_reg:x12; val_offset:2277*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2277*FLEN/8, x13, x9, x10)

inst_781:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b1dea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bdd2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x770d7c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b1dea; op2val:0xbfcbdd2f;
op3val:0x3f770d7c; valaddr_reg:x12; val_offset:2280*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2280*FLEN/8, x13, x9, x10)

inst_782:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b1dea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bdd2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x770d7c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b1dea; op2val:0xbfcbdd2f;
op3val:0x3f770d7c; valaddr_reg:x12; val_offset:2283*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2283*FLEN/8, x13, x9, x10)

inst_783:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b1dea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bdd2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x770d7c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b1dea; op2val:0xbfcbdd2f;
op3val:0x3f770d7c; valaddr_reg:x12; val_offset:2286*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2286*FLEN/8, x13, x9, x10)

inst_784:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b1dea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bdd2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x770d7c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1b1dea; op2val:0xbfcbdd2f;
op3val:0x3f770d7c; valaddr_reg:x12; val_offset:2289*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2289*FLEN/8, x13, x9, x10)

inst_785:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20e64e and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3408ca and fs3 == 0 and fe3 == 0x7a and fm3 == 0x624eeb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20e64e; op2val:0xbdb408ca;
op3val:0x3d624eeb; valaddr_reg:x12; val_offset:2292*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2292*FLEN/8, x13, x9, x10)

inst_786:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20e64e and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3408ca and fs3 == 0 and fe3 == 0x7a and fm3 == 0x624eeb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20e64e; op2val:0xbdb408ca;
op3val:0x3d624eeb; valaddr_reg:x12; val_offset:2295*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2295*FLEN/8, x13, x9, x10)

inst_787:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20e64e and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3408ca and fs3 == 0 and fe3 == 0x7a and fm3 == 0x624eeb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20e64e; op2val:0xbdb408ca;
op3val:0x3d624eeb; valaddr_reg:x12; val_offset:2298*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2298*FLEN/8, x13, x9, x10)

inst_788:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20e64e and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3408ca and fs3 == 0 and fe3 == 0x7a and fm3 == 0x624eeb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20e64e; op2val:0xbdb408ca;
op3val:0x3d624eeb; valaddr_reg:x12; val_offset:2301*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2301*FLEN/8, x13, x9, x10)

inst_789:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20e64e and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3408ca and fs3 == 0 and fe3 == 0x7a and fm3 == 0x624eeb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f20e64e; op2val:0xbdb408ca;
op3val:0x3d624eeb; valaddr_reg:x12; val_offset:2304*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2304*FLEN/8, x13, x9, x10)

inst_790:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272814 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6c1159 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a2447 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f272814; op2val:0xbeec1159;
op3val:0x3e9a2447; valaddr_reg:x12; val_offset:2307*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2307*FLEN/8, x13, x9, x10)

inst_791:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272814 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6c1159 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a2447 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f272814; op2val:0xbeec1159;
op3val:0x3e9a2447; valaddr_reg:x12; val_offset:2310*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2310*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_6)

inst_792:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272814 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6c1159 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a2447 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f272814; op2val:0xbeec1159;
op3val:0x3e9a2447; valaddr_reg:x12; val_offset:2313*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2313*FLEN/8, x13, x9, x10)

inst_793:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272814 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6c1159 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a2447 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f272814; op2val:0xbeec1159;
op3val:0x3e9a2447; valaddr_reg:x12; val_offset:2316*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2316*FLEN/8, x13, x9, x10)

inst_794:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272814 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6c1159 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a2447 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f272814; op2val:0xbeec1159;
op3val:0x3e9a2447; valaddr_reg:x12; val_offset:2319*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2319*FLEN/8, x13, x9, x10)

inst_795:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41d3f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x10d7fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b5581 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec1d3f5; op2val:0xc010d7fa;
op3val:0x3f5b5581; valaddr_reg:x12; val_offset:2322*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2322*FLEN/8, x13, x9, x10)

inst_796:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41d3f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x10d7fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b5581 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec1d3f5; op2val:0xc010d7fa;
op3val:0x3f5b5581; valaddr_reg:x12; val_offset:2325*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2325*FLEN/8, x13, x9, x10)

inst_797:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41d3f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x10d7fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b5581 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec1d3f5; op2val:0xc010d7fa;
op3val:0x3f5b5581; valaddr_reg:x12; val_offset:2328*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2328*FLEN/8, x13, x9, x10)

inst_798:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41d3f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x10d7fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b5581 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec1d3f5; op2val:0xc010d7fa;
op3val:0x3f5b5581; valaddr_reg:x12; val_offset:2331*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2331*FLEN/8, x13, x9, x10)

inst_799:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41d3f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x10d7fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b5581 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec1d3f5; op2val:0xc010d7fa;
op3val:0x3f5b5581; valaddr_reg:x12; val_offset:2334*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2334*FLEN/8, x13, x9, x10)

inst_800:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f8a28 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3d04d5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6b9805 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9f8a28; op2val:0xc03d04d5;
op3val:0x3f6b9805; valaddr_reg:x12; val_offset:2337*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2337*FLEN/8, x13, x9, x10)

inst_801:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f8a28 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3d04d5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6b9805 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9f8a28; op2val:0xc03d04d5;
op3val:0x3f6b9805; valaddr_reg:x12; val_offset:2340*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2340*FLEN/8, x13, x9, x10)

inst_802:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f8a28 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3d04d5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6b9805 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9f8a28; op2val:0xc03d04d5;
op3val:0x3f6b9805; valaddr_reg:x12; val_offset:2343*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2343*FLEN/8, x13, x9, x10)

inst_803:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f8a28 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3d04d5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6b9805 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9f8a28; op2val:0xc03d04d5;
op3val:0x3f6b9805; valaddr_reg:x12; val_offset:2346*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2346*FLEN/8, x13, x9, x10)

inst_804:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f8a28 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3d04d5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6b9805 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9f8a28; op2val:0xc03d04d5;
op3val:0x3f6b9805; valaddr_reg:x12; val_offset:2349*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2349*FLEN/8, x13, x9, x10)

inst_805:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50ba82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x03e580 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x571520 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f50ba82; op2val:0xbf03e580;
op3val:0x3ed71520; valaddr_reg:x12; val_offset:2352*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2352*FLEN/8, x13, x9, x10)

inst_806:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50ba82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x03e580 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x571520 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f50ba82; op2val:0xbf03e580;
op3val:0x3ed71520; valaddr_reg:x12; val_offset:2355*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2355*FLEN/8, x13, x9, x10)

inst_807:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50ba82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x03e580 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x571520 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f50ba82; op2val:0xbf03e580;
op3val:0x3ed71520; valaddr_reg:x12; val_offset:2358*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2358*FLEN/8, x13, x9, x10)

inst_808:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50ba82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x03e580 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x571520 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f50ba82; op2val:0xbf03e580;
op3val:0x3ed71520; valaddr_reg:x12; val_offset:2361*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2361*FLEN/8, x13, x9, x10)

inst_809:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50ba82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x03e580 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x571520 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f50ba82; op2val:0xbf03e580;
op3val:0x3ed71520; valaddr_reg:x12; val_offset:2364*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2364*FLEN/8, x13, x9, x10)

inst_810:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f627b and fs2 == 1 and fe2 == 0x7a and fm2 == 0x26cf21 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x118e9a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f627b; op2val:0xbd26cf21;
op3val:0x3d118e9a; valaddr_reg:x12; val_offset:2367*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2367*FLEN/8, x13, x9, x10)

inst_811:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f627b and fs2 == 1 and fe2 == 0x7a and fm2 == 0x26cf21 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x118e9a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f627b; op2val:0xbd26cf21;
op3val:0x3d118e9a; valaddr_reg:x12; val_offset:2370*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2370*FLEN/8, x13, x9, x10)

inst_812:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f627b and fs2 == 1 and fe2 == 0x7a and fm2 == 0x26cf21 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x118e9a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f627b; op2val:0xbd26cf21;
op3val:0x3d118e9a; valaddr_reg:x12; val_offset:2373*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2373*FLEN/8, x13, x9, x10)

inst_813:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f627b and fs2 == 1 and fe2 == 0x7a and fm2 == 0x26cf21 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x118e9a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f627b; op2val:0xbd26cf21;
op3val:0x3d118e9a; valaddr_reg:x12; val_offset:2376*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2376*FLEN/8, x13, x9, x10)

inst_814:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f627b and fs2 == 1 and fe2 == 0x7a and fm2 == 0x26cf21 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x118e9a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5f627b; op2val:0xbd26cf21;
op3val:0x3d118e9a; valaddr_reg:x12; val_offset:2379*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2379*FLEN/8, x13, x9, x10)

inst_815:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1310ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24c160 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3d4b8a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1310ac; op2val:0xbf24c160;
op3val:0x3ebd4b8a; valaddr_reg:x12; val_offset:2382*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2382*FLEN/8, x13, x9, x10)

inst_816:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1310ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24c160 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3d4b8a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1310ac; op2val:0xbf24c160;
op3val:0x3ebd4b8a; valaddr_reg:x12; val_offset:2385*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2385*FLEN/8, x13, x9, x10)

inst_817:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1310ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24c160 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3d4b8a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1310ac; op2val:0xbf24c160;
op3val:0x3ebd4b8a; valaddr_reg:x12; val_offset:2388*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2388*FLEN/8, x13, x9, x10)

inst_818:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1310ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24c160 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3d4b8a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1310ac; op2val:0xbf24c160;
op3val:0x3ebd4b8a; valaddr_reg:x12; val_offset:2391*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2391*FLEN/8, x13, x9, x10)

inst_819:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1310ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24c160 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3d4b8a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1310ac; op2val:0xbf24c160;
op3val:0x3ebd4b8a; valaddr_reg:x12; val_offset:2394*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2394*FLEN/8, x13, x9, x10)

inst_820:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0ed628 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4c9fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x645777 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0ed628; op2val:0xc1cc9fa6;
op3val:0x3f645777; valaddr_reg:x12; val_offset:2397*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2397*FLEN/8, x13, x9, x10)

inst_821:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0ed628 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4c9fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x645777 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0ed628; op2val:0xc1cc9fa6;
op3val:0x3f645777; valaddr_reg:x12; val_offset:2400*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2400*FLEN/8, x13, x9, x10)

inst_822:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0ed628 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4c9fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x645777 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0ed628; op2val:0xc1cc9fa6;
op3val:0x3f645777; valaddr_reg:x12; val_offset:2403*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2403*FLEN/8, x13, x9, x10)

inst_823:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0ed628 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4c9fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x645777 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0ed628; op2val:0xc1cc9fa6;
op3val:0x3f645777; valaddr_reg:x12; val_offset:2406*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2406*FLEN/8, x13, x9, x10)

inst_824:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0ed628 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4c9fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x645777 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d0ed628; op2val:0xc1cc9fa6;
op3val:0x3f645777; valaddr_reg:x12; val_offset:2409*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2409*FLEN/8, x13, x9, x10)

inst_825:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x71d4bf and fs2 == 1 and fe2 == 0x89 and fm2 == 0x022226 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75dc97 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3a71d4bf; op2val:0xc4822226;
op3val:0x3f75dc97; valaddr_reg:x12; val_offset:2412*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2412*FLEN/8, x13, x9, x10)

inst_826:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x71d4bf and fs2 == 1 and fe2 == 0x89 and fm2 == 0x022226 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75dc97 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3a71d4bf; op2val:0xc4822226;
op3val:0x3f75dc97; valaddr_reg:x12; val_offset:2415*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2415*FLEN/8, x13, x9, x10)

inst_827:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x71d4bf and fs2 == 1 and fe2 == 0x89 and fm2 == 0x022226 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75dc97 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3a71d4bf; op2val:0xc4822226;
op3val:0x3f75dc97; valaddr_reg:x12; val_offset:2418*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2418*FLEN/8, x13, x9, x10)

inst_828:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x71d4bf and fs2 == 1 and fe2 == 0x89 and fm2 == 0x022226 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75dc97 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3a71d4bf; op2val:0xc4822226;
op3val:0x3f75dc97; valaddr_reg:x12; val_offset:2421*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2421*FLEN/8, x13, x9, x10)

inst_829:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x71d4bf and fs2 == 1 and fe2 == 0x89 and fm2 == 0x022226 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75dc97 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3a71d4bf; op2val:0xc4822226;
op3val:0x3f75dc97; valaddr_reg:x12; val_offset:2424*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2424*FLEN/8, x13, x9, x10)

inst_830:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4c29ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ce4f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x302a65 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecc29ac; op2val:0xbf5ce4f1;
op3val:0x3eb02a65; valaddr_reg:x12; val_offset:2427*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2427*FLEN/8, x13, x9, x10)

inst_831:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4c29ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ce4f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x302a65 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecc29ac; op2val:0xbf5ce4f1;
op3val:0x3eb02a65; valaddr_reg:x12; val_offset:2430*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2430*FLEN/8, x13, x9, x10)

inst_832:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4c29ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ce4f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x302a65 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecc29ac; op2val:0xbf5ce4f1;
op3val:0x3eb02a65; valaddr_reg:x12; val_offset:2433*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2433*FLEN/8, x13, x9, x10)

inst_833:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4c29ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ce4f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x302a65 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecc29ac; op2val:0xbf5ce4f1;
op3val:0x3eb02a65; valaddr_reg:x12; val_offset:2436*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2436*FLEN/8, x13, x9, x10)

inst_834:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4c29ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ce4f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x302a65 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecc29ac; op2val:0xbf5ce4f1;
op3val:0x3eb02a65; valaddr_reg:x12; val_offset:2439*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2439*FLEN/8, x13, x9, x10)

inst_835:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x67de18 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x356b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x245130 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c67de18; op2val:0xc2356b46;
op3val:0x3f245130; valaddr_reg:x12; val_offset:2442*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2442*FLEN/8, x13, x9, x10)

inst_836:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x67de18 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x356b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x245130 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c67de18; op2val:0xc2356b46;
op3val:0x3f245130; valaddr_reg:x12; val_offset:2445*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2445*FLEN/8, x13, x9, x10)

inst_837:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x67de18 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x356b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x245130 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c67de18; op2val:0xc2356b46;
op3val:0x3f245130; valaddr_reg:x12; val_offset:2448*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2448*FLEN/8, x13, x9, x10)

inst_838:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x67de18 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x356b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x245130 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c67de18; op2val:0xc2356b46;
op3val:0x3f245130; valaddr_reg:x12; val_offset:2451*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2451*FLEN/8, x13, x9, x10)

inst_839:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x67de18 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x356b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x245130 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c67de18; op2val:0xc2356b46;
op3val:0x3f245130; valaddr_reg:x12; val_offset:2454*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2454*FLEN/8, x13, x9, x10)

inst_840:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5a1497 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x523d13 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3318eb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d5a1497; op2val:0xc0d23d13;
op3val:0x3eb318eb; valaddr_reg:x12; val_offset:2457*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2457*FLEN/8, x13, x9, x10)

inst_841:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5a1497 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x523d13 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3318eb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d5a1497; op2val:0xc0d23d13;
op3val:0x3eb318eb; valaddr_reg:x12; val_offset:2460*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2460*FLEN/8, x13, x9, x10)

inst_842:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5a1497 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x523d13 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3318eb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d5a1497; op2val:0xc0d23d13;
op3val:0x3eb318eb; valaddr_reg:x12; val_offset:2463*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2463*FLEN/8, x13, x9, x10)

inst_843:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5a1497 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x523d13 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3318eb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d5a1497; op2val:0xc0d23d13;
op3val:0x3eb318eb; valaddr_reg:x12; val_offset:2466*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2466*FLEN/8, x13, x9, x10)

inst_844:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5a1497 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x523d13 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3318eb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d5a1497; op2val:0xc0d23d13;
op3val:0x3eb318eb; valaddr_reg:x12; val_offset:2469*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2469*FLEN/8, x13, x9, x10)

inst_845:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05f998 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b110a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x548bae and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f05f998; op2val:0xbfcb110a;
op3val:0x3f548bae; valaddr_reg:x12; val_offset:2472*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2472*FLEN/8, x13, x9, x10)

inst_846:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05f998 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b110a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x548bae and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f05f998; op2val:0xbfcb110a;
op3val:0x3f548bae; valaddr_reg:x12; val_offset:2475*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2475*FLEN/8, x13, x9, x10)

inst_847:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05f998 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b110a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x548bae and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f05f998; op2val:0xbfcb110a;
op3val:0x3f548bae; valaddr_reg:x12; val_offset:2478*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2478*FLEN/8, x13, x9, x10)

inst_848:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05f998 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b110a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x548bae and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f05f998; op2val:0xbfcb110a;
op3val:0x3f548bae; valaddr_reg:x12; val_offset:2481*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2481*FLEN/8, x13, x9, x10)

inst_849:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05f998 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b110a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x548bae and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f05f998; op2val:0xbfcb110a;
op3val:0x3f548bae; valaddr_reg:x12; val_offset:2484*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2484*FLEN/8, x13, x9, x10)

inst_850:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43a4e5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x54a5d1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x228347 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43a4e5; op2val:0xbf54a5d1;
op3val:0x3f228347; valaddr_reg:x12; val_offset:2487*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2487*FLEN/8, x13, x9, x10)

inst_851:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43a4e5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x54a5d1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x228347 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43a4e5; op2val:0xbf54a5d1;
op3val:0x3f228347; valaddr_reg:x12; val_offset:2490*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2490*FLEN/8, x13, x9, x10)

inst_852:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43a4e5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x54a5d1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x228347 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43a4e5; op2val:0xbf54a5d1;
op3val:0x3f228347; valaddr_reg:x12; val_offset:2493*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2493*FLEN/8, x13, x9, x10)

inst_853:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43a4e5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x54a5d1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x228347 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43a4e5; op2val:0xbf54a5d1;
op3val:0x3f228347; valaddr_reg:x12; val_offset:2496*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2496*FLEN/8, x13, x9, x10)

inst_854:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43a4e5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x54a5d1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x228347 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f43a4e5; op2val:0xbf54a5d1;
op3val:0x3f228347; valaddr_reg:x12; val_offset:2499*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2499*FLEN/8, x13, x9, x10)

inst_855:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275a62 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7606e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20d55e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f275a62; op2val:0xbf7606e8;
op3val:0x3f20d55e; valaddr_reg:x12; val_offset:2502*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2502*FLEN/8, x13, x9, x10)

inst_856:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275a62 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7606e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20d55e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f275a62; op2val:0xbf7606e8;
op3val:0x3f20d55e; valaddr_reg:x12; val_offset:2505*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2505*FLEN/8, x13, x9, x10)

inst_857:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275a62 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7606e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20d55e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f275a62; op2val:0xbf7606e8;
op3val:0x3f20d55e; valaddr_reg:x12; val_offset:2508*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2508*FLEN/8, x13, x9, x10)

inst_858:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275a62 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7606e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20d55e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f275a62; op2val:0xbf7606e8;
op3val:0x3f20d55e; valaddr_reg:x12; val_offset:2511*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2511*FLEN/8, x13, x9, x10)

inst_859:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275a62 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7606e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20d55e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f275a62; op2val:0xbf7606e8;
op3val:0x3f20d55e; valaddr_reg:x12; val_offset:2514*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2514*FLEN/8, x13, x9, x10)

inst_860:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x44832d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x50768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x200596 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e44832d; op2val:0xc050768e;
op3val:0x3f200596; valaddr_reg:x12; val_offset:2517*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2517*FLEN/8, x13, x9, x10)

inst_861:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x44832d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x50768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x200596 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e44832d; op2val:0xc050768e;
op3val:0x3f200596; valaddr_reg:x12; val_offset:2520*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2520*FLEN/8, x13, x9, x10)

inst_862:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x44832d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x50768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x200596 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e44832d; op2val:0xc050768e;
op3val:0x3f200596; valaddr_reg:x12; val_offset:2523*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2523*FLEN/8, x13, x9, x10)

inst_863:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x44832d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x50768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x200596 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e44832d; op2val:0xc050768e;
op3val:0x3f200596; valaddr_reg:x12; val_offset:2526*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2526*FLEN/8, x13, x9, x10)

inst_864:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x44832d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x50768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x200596 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e44832d; op2val:0xc050768e;
op3val:0x3f200596; valaddr_reg:x12; val_offset:2529*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2529*FLEN/8, x13, x9, x10)

inst_865:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e1cec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25b5f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761f8a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe1cec; op2val:0xc025b5f5;
op3val:0x3f761f8a; valaddr_reg:x12; val_offset:2532*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2532*FLEN/8, x13, x9, x10)

inst_866:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e1cec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25b5f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761f8a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe1cec; op2val:0xc025b5f5;
op3val:0x3f761f8a; valaddr_reg:x12; val_offset:2535*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2535*FLEN/8, x13, x9, x10)

inst_867:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e1cec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25b5f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761f8a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe1cec; op2val:0xc025b5f5;
op3val:0x3f761f8a; valaddr_reg:x12; val_offset:2538*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2538*FLEN/8, x13, x9, x10)

inst_868:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e1cec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25b5f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761f8a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe1cec; op2val:0xc025b5f5;
op3val:0x3f761f8a; valaddr_reg:x12; val_offset:2541*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2541*FLEN/8, x13, x9, x10)

inst_869:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e1cec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25b5f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761f8a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe1cec; op2val:0xc025b5f5;
op3val:0x3f761f8a; valaddr_reg:x12; val_offset:2544*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2544*FLEN/8, x13, x9, x10)

inst_870:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5bfb4f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cd687 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x148532 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5bfb4f; op2val:0xbeacd687;
op3val:0x3e948532; valaddr_reg:x12; val_offset:2547*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2547*FLEN/8, x13, x9, x10)

inst_871:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5bfb4f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cd687 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x148532 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5bfb4f; op2val:0xbeacd687;
op3val:0x3e948532; valaddr_reg:x12; val_offset:2550*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2550*FLEN/8, x13, x9, x10)

inst_872:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5bfb4f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cd687 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x148532 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5bfb4f; op2val:0xbeacd687;
op3val:0x3e948532; valaddr_reg:x12; val_offset:2553*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2553*FLEN/8, x13, x9, x10)

inst_873:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5bfb4f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cd687 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x148532 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5bfb4f; op2val:0xbeacd687;
op3val:0x3e948532; valaddr_reg:x12; val_offset:2556*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2556*FLEN/8, x13, x9, x10)

inst_874:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5bfb4f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cd687 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x148532 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5bfb4f; op2val:0xbeacd687;
op3val:0x3e948532; valaddr_reg:x12; val_offset:2559*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2559*FLEN/8, x13, x9, x10)

inst_875:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x601743 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x48e0b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fd6df and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de01743; op2val:0xc0c8e0b4;
op3val:0x3f2fd6df; valaddr_reg:x12; val_offset:2562*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2562*FLEN/8, x13, x9, x10)

inst_876:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x601743 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x48e0b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fd6df and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de01743; op2val:0xc0c8e0b4;
op3val:0x3f2fd6df; valaddr_reg:x12; val_offset:2565*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2565*FLEN/8, x13, x9, x10)

inst_877:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x601743 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x48e0b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fd6df and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de01743; op2val:0xc0c8e0b4;
op3val:0x3f2fd6df; valaddr_reg:x12; val_offset:2568*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2568*FLEN/8, x13, x9, x10)

inst_878:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x601743 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x48e0b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fd6df and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de01743; op2val:0xc0c8e0b4;
op3val:0x3f2fd6df; valaddr_reg:x12; val_offset:2571*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2571*FLEN/8, x13, x9, x10)

inst_879:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x601743 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x48e0b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fd6df and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de01743; op2val:0xc0c8e0b4;
op3val:0x3f2fd6df; valaddr_reg:x12; val_offset:2574*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2574*FLEN/8, x13, x9, x10)

inst_880:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77b145 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0a06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x447345 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77b145; op2val:0xbf4b0a06;
op3val:0x3f447345; valaddr_reg:x12; val_offset:2577*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2577*FLEN/8, x13, x9, x10)

inst_881:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77b145 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0a06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x447345 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77b145; op2val:0xbf4b0a06;
op3val:0x3f447345; valaddr_reg:x12; val_offset:2580*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2580*FLEN/8, x13, x9, x10)

inst_882:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77b145 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0a06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x447345 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77b145; op2val:0xbf4b0a06;
op3val:0x3f447345; valaddr_reg:x12; val_offset:2583*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2583*FLEN/8, x13, x9, x10)

inst_883:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77b145 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0a06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x447345 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77b145; op2val:0xbf4b0a06;
op3val:0x3f447345; valaddr_reg:x12; val_offset:2586*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2586*FLEN/8, x13, x9, x10)

inst_884:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77b145 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0a06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x447345 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f77b145; op2val:0xbf4b0a06;
op3val:0x3f447345; valaddr_reg:x12; val_offset:2589*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2589*FLEN/8, x13, x9, x10)

inst_885:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23b693 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7da066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223204 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23b693; op2val:0xbf7da066;
op3val:0x3f223204; valaddr_reg:x12; val_offset:2592*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2592*FLEN/8, x13, x9, x10)

inst_886:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23b693 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7da066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223204 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23b693; op2val:0xbf7da066;
op3val:0x3f223204; valaddr_reg:x12; val_offset:2595*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2595*FLEN/8, x13, x9, x10)

inst_887:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23b693 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7da066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223204 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23b693; op2val:0xbf7da066;
op3val:0x3f223204; valaddr_reg:x12; val_offset:2598*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2598*FLEN/8, x13, x9, x10)

inst_888:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23b693 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7da066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223204 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23b693; op2val:0xbf7da066;
op3val:0x3f223204; valaddr_reg:x12; val_offset:2601*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2601*FLEN/8, x13, x9, x10)

inst_889:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23b693 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7da066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223204 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f23b693; op2val:0xbf7da066;
op3val:0x3f223204; valaddr_reg:x12; val_offset:2604*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2604*FLEN/8, x13, x9, x10)

inst_890:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x608373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bd36d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32c1a8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee08373; op2val:0xbfcbd36d;
op3val:0x3f32c1a8; valaddr_reg:x12; val_offset:2607*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2607*FLEN/8, x13, x9, x10)

inst_891:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x608373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bd36d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32c1a8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee08373; op2val:0xbfcbd36d;
op3val:0x3f32c1a8; valaddr_reg:x12; val_offset:2610*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2610*FLEN/8, x13, x9, x10)

inst_892:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x608373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bd36d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32c1a8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee08373; op2val:0xbfcbd36d;
op3val:0x3f32c1a8; valaddr_reg:x12; val_offset:2613*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2613*FLEN/8, x13, x9, x10)

inst_893:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x608373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bd36d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32c1a8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee08373; op2val:0xbfcbd36d;
op3val:0x3f32c1a8; valaddr_reg:x12; val_offset:2616*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2616*FLEN/8, x13, x9, x10)

inst_894:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x608373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bd36d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32c1a8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee08373; op2val:0xbfcbd36d;
op3val:0x3f32c1a8; valaddr_reg:x12; val_offset:2619*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2619*FLEN/8, x13, x9, x10)

inst_895:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34b7eb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b44fa and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b381a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb4b7eb; op2val:0xbf1b44fa;
op3val:0x3e5b381a; valaddr_reg:x12; val_offset:2622*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2622*FLEN/8, x13, x9, x10)

inst_896:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34b7eb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b44fa and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b381a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb4b7eb; op2val:0xbf1b44fa;
op3val:0x3e5b381a; valaddr_reg:x12; val_offset:2625*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2625*FLEN/8, x13, x9, x10)

inst_897:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34b7eb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b44fa and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b381a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb4b7eb; op2val:0xbf1b44fa;
op3val:0x3e5b381a; valaddr_reg:x12; val_offset:2628*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2628*FLEN/8, x13, x9, x10)

inst_898:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34b7eb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b44fa and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b381a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb4b7eb; op2val:0xbf1b44fa;
op3val:0x3e5b381a; valaddr_reg:x12; val_offset:2631*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2631*FLEN/8, x13, x9, x10)

inst_899:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34b7eb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b44fa and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b381a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb4b7eb; op2val:0xbf1b44fa;
op3val:0x3e5b381a; valaddr_reg:x12; val_offset:2634*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2634*FLEN/8, x13, x9, x10)

inst_900:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5dfb78 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18ac4c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0462b6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5dfb78; op2val:0xbf98ac4c;
op3val:0x3e8462b6; valaddr_reg:x12; val_offset:2637*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2637*FLEN/8, x13, x9, x10)

inst_901:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5dfb78 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18ac4c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0462b6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5dfb78; op2val:0xbf98ac4c;
op3val:0x3e8462b6; valaddr_reg:x12; val_offset:2640*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2640*FLEN/8, x13, x9, x10)

inst_902:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5dfb78 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18ac4c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0462b6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5dfb78; op2val:0xbf98ac4c;
op3val:0x3e8462b6; valaddr_reg:x12; val_offset:2643*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2643*FLEN/8, x13, x9, x10)

inst_903:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5dfb78 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18ac4c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0462b6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5dfb78; op2val:0xbf98ac4c;
op3val:0x3e8462b6; valaddr_reg:x12; val_offset:2646*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2646*FLEN/8, x13, x9, x10)

inst_904:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5dfb78 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18ac4c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0462b6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e5dfb78; op2val:0xbf98ac4c;
op3val:0x3e8462b6; valaddr_reg:x12; val_offset:2649*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2649*FLEN/8, x13, x9, x10)

inst_905:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f69d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x637a1d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d3c43 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed4f69d; op2val:0xbfe37a1d;
op3val:0x3f3d3c43; valaddr_reg:x12; val_offset:2652*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2652*FLEN/8, x13, x9, x10)

inst_906:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f69d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x637a1d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d3c43 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed4f69d; op2val:0xbfe37a1d;
op3val:0x3f3d3c43; valaddr_reg:x12; val_offset:2655*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2655*FLEN/8, x13, x9, x10)

inst_907:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f69d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x637a1d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d3c43 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed4f69d; op2val:0xbfe37a1d;
op3val:0x3f3d3c43; valaddr_reg:x12; val_offset:2658*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2658*FLEN/8, x13, x9, x10)

inst_908:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f69d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x637a1d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d3c43 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed4f69d; op2val:0xbfe37a1d;
op3val:0x3f3d3c43; valaddr_reg:x12; val_offset:2661*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2661*FLEN/8, x13, x9, x10)

inst_909:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f69d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x637a1d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d3c43 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed4f69d; op2val:0xbfe37a1d;
op3val:0x3f3d3c43; valaddr_reg:x12; val_offset:2664*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2664*FLEN/8, x13, x9, x10)

inst_910:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x225f21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f5e5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35ddfe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e225f21; op2val:0xc08f5e5e;
op3val:0x3f35ddfe; valaddr_reg:x12; val_offset:2667*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2667*FLEN/8, x13, x9, x10)

inst_911:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x225f21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f5e5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35ddfe and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e225f21; op2val:0xc08f5e5e;
op3val:0x3f35ddfe; valaddr_reg:x12; val_offset:2670*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2670*FLEN/8, x13, x9, x10)

inst_912:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x225f21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f5e5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35ddfe and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e225f21; op2val:0xc08f5e5e;
op3val:0x3f35ddfe; valaddr_reg:x12; val_offset:2673*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2673*FLEN/8, x13, x9, x10)

inst_913:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x225f21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f5e5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35ddfe and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e225f21; op2val:0xc08f5e5e;
op3val:0x3f35ddfe; valaddr_reg:x12; val_offset:2676*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2676*FLEN/8, x13, x9, x10)

inst_914:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x225f21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f5e5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35ddfe and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e225f21; op2val:0xc08f5e5e;
op3val:0x3f35ddfe; valaddr_reg:x12; val_offset:2679*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2679*FLEN/8, x13, x9, x10)

inst_915:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f4697 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ce392 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d88db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0f4697; op2val:0xc07ce392;
op3val:0x3f0d88db; valaddr_reg:x12; val_offset:2682*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2682*FLEN/8, x13, x9, x10)

inst_916:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f4697 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ce392 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d88db and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0f4697; op2val:0xc07ce392;
op3val:0x3f0d88db; valaddr_reg:x12; val_offset:2685*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2685*FLEN/8, x13, x9, x10)

inst_917:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f4697 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ce392 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d88db and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0f4697; op2val:0xc07ce392;
op3val:0x3f0d88db; valaddr_reg:x12; val_offset:2688*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2688*FLEN/8, x13, x9, x10)

inst_918:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f4697 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ce392 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d88db and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0f4697; op2val:0xc07ce392;
op3val:0x3f0d88db; valaddr_reg:x12; val_offset:2691*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2691*FLEN/8, x13, x9, x10)

inst_919:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f4697 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ce392 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d88db and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e0f4697; op2val:0xc07ce392;
op3val:0x3f0d88db; valaddr_reg:x12; val_offset:2694*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2694*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_7)

inst_920:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd90b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cdcdc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00319e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdd90b; op2val:0xbfacdcdc;
op3val:0x3f00319e; valaddr_reg:x12; val_offset:2697*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2697*FLEN/8, x13, x9, x10)

inst_921:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd90b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cdcdc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00319e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdd90b; op2val:0xbfacdcdc;
op3val:0x3f00319e; valaddr_reg:x12; val_offset:2700*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2700*FLEN/8, x13, x9, x10)

inst_922:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd90b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cdcdc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00319e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdd90b; op2val:0xbfacdcdc;
op3val:0x3f00319e; valaddr_reg:x12; val_offset:2703*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2703*FLEN/8, x13, x9, x10)

inst_923:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd90b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cdcdc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00319e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdd90b; op2val:0xbfacdcdc;
op3val:0x3f00319e; valaddr_reg:x12; val_offset:2706*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2706*FLEN/8, x13, x9, x10)

inst_924:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd90b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cdcdc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00319e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebdd90b; op2val:0xbfacdcdc;
op3val:0x3f00319e; valaddr_reg:x12; val_offset:2709*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2709*FLEN/8, x13, x9, x10)

inst_925:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x313928 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73af45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28b297 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb13928; op2val:0xbff3af45;
op3val:0x3f28b297; valaddr_reg:x12; val_offset:2712*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2712*FLEN/8, x13, x9, x10)

inst_926:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x313928 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73af45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28b297 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb13928; op2val:0xbff3af45;
op3val:0x3f28b297; valaddr_reg:x12; val_offset:2715*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2715*FLEN/8, x13, x9, x10)

inst_927:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x313928 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73af45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28b297 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb13928; op2val:0xbff3af45;
op3val:0x3f28b297; valaddr_reg:x12; val_offset:2718*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2718*FLEN/8, x13, x9, x10)

inst_928:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x313928 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73af45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28b297 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb13928; op2val:0xbff3af45;
op3val:0x3f28b297; valaddr_reg:x12; val_offset:2721*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2721*FLEN/8, x13, x9, x10)

inst_929:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x313928 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73af45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28b297 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb13928; op2val:0xbff3af45;
op3val:0x3f28b297; valaddr_reg:x12; val_offset:2724*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2724*FLEN/8, x13, x9, x10)

inst_930:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57dd42 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ff5a4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x06e18d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed7dd42; op2val:0xbf1ff5a4;
op3val:0x3e86e18d; valaddr_reg:x12; val_offset:2727*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2727*FLEN/8, x13, x9, x10)

inst_931:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57dd42 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ff5a4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x06e18d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed7dd42; op2val:0xbf1ff5a4;
op3val:0x3e86e18d; valaddr_reg:x12; val_offset:2730*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2730*FLEN/8, x13, x9, x10)

inst_932:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57dd42 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ff5a4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x06e18d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed7dd42; op2val:0xbf1ff5a4;
op3val:0x3e86e18d; valaddr_reg:x12; val_offset:2733*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2733*FLEN/8, x13, x9, x10)

inst_933:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57dd42 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ff5a4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x06e18d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed7dd42; op2val:0xbf1ff5a4;
op3val:0x3e86e18d; valaddr_reg:x12; val_offset:2736*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2736*FLEN/8, x13, x9, x10)

inst_934:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57dd42 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ff5a4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x06e18d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed7dd42; op2val:0xbf1ff5a4;
op3val:0x3e86e18d; valaddr_reg:x12; val_offset:2739*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2739*FLEN/8, x13, x9, x10)

inst_935:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237d3e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x202884 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4c904d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f237d3e; op2val:0xbf202884;
op3val:0x3ecc904d; valaddr_reg:x12; val_offset:2742*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2742*FLEN/8, x13, x9, x10)

inst_936:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237d3e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x202884 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4c904d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f237d3e; op2val:0xbf202884;
op3val:0x3ecc904d; valaddr_reg:x12; val_offset:2745*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2745*FLEN/8, x13, x9, x10)

inst_937:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237d3e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x202884 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4c904d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f237d3e; op2val:0xbf202884;
op3val:0x3ecc904d; valaddr_reg:x12; val_offset:2748*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2748*FLEN/8, x13, x9, x10)

inst_938:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237d3e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x202884 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4c904d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f237d3e; op2val:0xbf202884;
op3val:0x3ecc904d; valaddr_reg:x12; val_offset:2751*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2751*FLEN/8, x13, x9, x10)

inst_939:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237d3e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x202884 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4c904d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f237d3e; op2val:0xbf202884;
op3val:0x3ecc904d; valaddr_reg:x12; val_offset:2754*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2754*FLEN/8, x13, x9, x10)

inst_940:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b2724 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7998b9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07ac16 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b2724; op2val:0xbf7998b9;
op3val:0x3f07ac16; valaddr_reg:x12; val_offset:2757*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2757*FLEN/8, x13, x9, x10)

inst_941:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b2724 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7998b9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07ac16 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b2724; op2val:0xbf7998b9;
op3val:0x3f07ac16; valaddr_reg:x12; val_offset:2760*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2760*FLEN/8, x13, x9, x10)

inst_942:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b2724 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7998b9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07ac16 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b2724; op2val:0xbf7998b9;
op3val:0x3f07ac16; valaddr_reg:x12; val_offset:2763*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2763*FLEN/8, x13, x9, x10)

inst_943:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b2724 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7998b9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07ac16 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b2724; op2val:0xbf7998b9;
op3val:0x3f07ac16; valaddr_reg:x12; val_offset:2766*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2766*FLEN/8, x13, x9, x10)

inst_944:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b2724 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7998b9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07ac16 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0b2724; op2val:0xbf7998b9;
op3val:0x3f07ac16; valaddr_reg:x12; val_offset:2769*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2769*FLEN/8, x13, x9, x10)

inst_945:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dcac6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3c4ca3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68204c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1dcac6; op2val:0xbf3c4ca3;
op3val:0x3ee8204c; valaddr_reg:x12; val_offset:2772*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2772*FLEN/8, x13, x9, x10)

inst_946:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dcac6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3c4ca3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68204c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1dcac6; op2val:0xbf3c4ca3;
op3val:0x3ee8204c; valaddr_reg:x12; val_offset:2775*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2775*FLEN/8, x13, x9, x10)

inst_947:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dcac6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3c4ca3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68204c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1dcac6; op2val:0xbf3c4ca3;
op3val:0x3ee8204c; valaddr_reg:x12; val_offset:2778*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2778*FLEN/8, x13, x9, x10)

inst_948:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dcac6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3c4ca3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68204c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1dcac6; op2val:0xbf3c4ca3;
op3val:0x3ee8204c; valaddr_reg:x12; val_offset:2781*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2781*FLEN/8, x13, x9, x10)

inst_949:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dcac6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3c4ca3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68204c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1dcac6; op2val:0xbf3c4ca3;
op3val:0x3ee8204c; valaddr_reg:x12; val_offset:2784*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2784*FLEN/8, x13, x9, x10)

inst_950:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14d173 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x35eef4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5385ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94d173; op2val:0xc035eef4;
op3val:0x3f5385ff; valaddr_reg:x12; val_offset:2787*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2787*FLEN/8, x13, x9, x10)

inst_951:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14d173 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x35eef4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5385ff and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94d173; op2val:0xc035eef4;
op3val:0x3f5385ff; valaddr_reg:x12; val_offset:2790*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2790*FLEN/8, x13, x9, x10)

inst_952:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14d173 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x35eef4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5385ff and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94d173; op2val:0xc035eef4;
op3val:0x3f5385ff; valaddr_reg:x12; val_offset:2793*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2793*FLEN/8, x13, x9, x10)

inst_953:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14d173 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x35eef4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5385ff and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94d173; op2val:0xc035eef4;
op3val:0x3f5385ff; valaddr_reg:x12; val_offset:2796*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2796*FLEN/8, x13, x9, x10)

inst_954:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14d173 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x35eef4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5385ff and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94d173; op2val:0xc035eef4;
op3val:0x3f5385ff; valaddr_reg:x12; val_offset:2799*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2799*FLEN/8, x13, x9, x10)

inst_955:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a98f0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x53faae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x35021c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a98f0; op2val:0xbe53faae;
op3val:0x3e35021c; valaddr_reg:x12; val_offset:2802*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2802*FLEN/8, x13, x9, x10)

inst_956:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a98f0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x53faae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x35021c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a98f0; op2val:0xbe53faae;
op3val:0x3e35021c; valaddr_reg:x12; val_offset:2805*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2805*FLEN/8, x13, x9, x10)

inst_957:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a98f0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x53faae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x35021c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a98f0; op2val:0xbe53faae;
op3val:0x3e35021c; valaddr_reg:x12; val_offset:2808*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2808*FLEN/8, x13, x9, x10)

inst_958:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a98f0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x53faae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x35021c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a98f0; op2val:0xbe53faae;
op3val:0x3e35021c; valaddr_reg:x12; val_offset:2811*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2811*FLEN/8, x13, x9, x10)

inst_959:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a98f0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x53faae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x35021c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a98f0; op2val:0xbe53faae;
op3val:0x3e35021c; valaddr_reg:x12; val_offset:2814*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2814*FLEN/8, x13, x9, x10)

inst_960:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69589a and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6872d0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x53e0f3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69589a; op2val:0xbe6872d0;
op3val:0x3e53e0f3; valaddr_reg:x12; val_offset:2817*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2817*FLEN/8, x13, x9, x10)

inst_961:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69589a and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6872d0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x53e0f3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69589a; op2val:0xbe6872d0;
op3val:0x3e53e0f3; valaddr_reg:x12; val_offset:2820*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2820*FLEN/8, x13, x9, x10)

inst_962:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69589a and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6872d0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x53e0f3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69589a; op2val:0xbe6872d0;
op3val:0x3e53e0f3; valaddr_reg:x12; val_offset:2823*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2823*FLEN/8, x13, x9, x10)

inst_963:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69589a and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6872d0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x53e0f3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69589a; op2val:0xbe6872d0;
op3val:0x3e53e0f3; valaddr_reg:x12; val_offset:2826*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2826*FLEN/8, x13, x9, x10)

inst_964:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69589a and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6872d0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x53e0f3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69589a; op2val:0xbe6872d0;
op3val:0x3e53e0f3; valaddr_reg:x12; val_offset:2829*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2829*FLEN/8, x13, x9, x10)

inst_965:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x76b1d4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4fd5b5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4847bb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e76b1d4; op2val:0xc04fd5b5;
op3val:0x3f4847bb; valaddr_reg:x12; val_offset:2832*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2832*FLEN/8, x13, x9, x10)

inst_966:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x76b1d4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4fd5b5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4847bb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e76b1d4; op2val:0xc04fd5b5;
op3val:0x3f4847bb; valaddr_reg:x12; val_offset:2835*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2835*FLEN/8, x13, x9, x10)

inst_967:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x76b1d4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4fd5b5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4847bb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e76b1d4; op2val:0xc04fd5b5;
op3val:0x3f4847bb; valaddr_reg:x12; val_offset:2838*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2838*FLEN/8, x13, x9, x10)

inst_968:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x76b1d4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4fd5b5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4847bb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e76b1d4; op2val:0xc04fd5b5;
op3val:0x3f4847bb; valaddr_reg:x12; val_offset:2841*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2841*FLEN/8, x13, x9, x10)

inst_969:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x76b1d4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4fd5b5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4847bb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e76b1d4; op2val:0xc04fd5b5;
op3val:0x3f4847bb; valaddr_reg:x12; val_offset:2844*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2844*FLEN/8, x13, x9, x10)

inst_970:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a5a35 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x034722 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f1fe2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eba5a35; op2val:0xc0034722;
op3val:0x3f3f1fe2; valaddr_reg:x12; val_offset:2847*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2847*FLEN/8, x13, x9, x10)

inst_971:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a5a35 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x034722 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f1fe2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eba5a35; op2val:0xc0034722;
op3val:0x3f3f1fe2; valaddr_reg:x12; val_offset:2850*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2850*FLEN/8, x13, x9, x10)

inst_972:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a5a35 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x034722 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f1fe2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eba5a35; op2val:0xc0034722;
op3val:0x3f3f1fe2; valaddr_reg:x12; val_offset:2853*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2853*FLEN/8, x13, x9, x10)

inst_973:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a5a35 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x034722 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f1fe2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eba5a35; op2val:0xc0034722;
op3val:0x3f3f1fe2; valaddr_reg:x12; val_offset:2856*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2856*FLEN/8, x13, x9, x10)

inst_974:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a5a35 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x034722 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f1fe2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eba5a35; op2val:0xc0034722;
op3val:0x3f3f1fe2; valaddr_reg:x12; val_offset:2859*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2859*FLEN/8, x13, x9, x10)

inst_975:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x725e12 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x590c74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7d88 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df25e12; op2val:0xc0d90c74;
op3val:0x3f4d7d88; valaddr_reg:x12; val_offset:2862*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2862*FLEN/8, x13, x9, x10)

inst_976:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x725e12 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x590c74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7d88 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df25e12; op2val:0xc0d90c74;
op3val:0x3f4d7d88; valaddr_reg:x12; val_offset:2865*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2865*FLEN/8, x13, x9, x10)

inst_977:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x725e12 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x590c74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7d88 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df25e12; op2val:0xc0d90c74;
op3val:0x3f4d7d88; valaddr_reg:x12; val_offset:2868*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2868*FLEN/8, x13, x9, x10)

inst_978:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x725e12 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x590c74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7d88 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df25e12; op2val:0xc0d90c74;
op3val:0x3f4d7d88; valaddr_reg:x12; val_offset:2871*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2871*FLEN/8, x13, x9, x10)

inst_979:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x725e12 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x590c74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7d88 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3df25e12; op2val:0xc0d90c74;
op3val:0x3f4d7d88; valaddr_reg:x12; val_offset:2874*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2874*FLEN/8, x13, x9, x10)

inst_980:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x626356 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b7235 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76a1df and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f626356; op2val:0xbf8b7235;
op3val:0x3f76a1df; valaddr_reg:x12; val_offset:2877*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2877*FLEN/8, x13, x9, x10)

inst_981:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x626356 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b7235 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76a1df and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f626356; op2val:0xbf8b7235;
op3val:0x3f76a1df; valaddr_reg:x12; val_offset:2880*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2880*FLEN/8, x13, x9, x10)

inst_982:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x626356 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b7235 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76a1df and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f626356; op2val:0xbf8b7235;
op3val:0x3f76a1df; valaddr_reg:x12; val_offset:2883*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2883*FLEN/8, x13, x9, x10)

inst_983:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x626356 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b7235 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76a1df and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f626356; op2val:0xbf8b7235;
op3val:0x3f76a1df; valaddr_reg:x12; val_offset:2886*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2886*FLEN/8, x13, x9, x10)

inst_984:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x626356 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b7235 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76a1df and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f626356; op2val:0xbf8b7235;
op3val:0x3f76a1df; valaddr_reg:x12; val_offset:2889*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2889*FLEN/8, x13, x9, x10)

inst_985:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x101ddf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3334fd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49c56f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e901ddf; op2val:0xc03334fd;
op3val:0x3f49c56f; valaddr_reg:x12; val_offset:2892*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2892*FLEN/8, x13, x9, x10)

inst_986:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x101ddf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3334fd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49c56f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e901ddf; op2val:0xc03334fd;
op3val:0x3f49c56f; valaddr_reg:x12; val_offset:2895*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2895*FLEN/8, x13, x9, x10)

inst_987:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x101ddf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3334fd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49c56f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e901ddf; op2val:0xc03334fd;
op3val:0x3f49c56f; valaddr_reg:x12; val_offset:2898*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2898*FLEN/8, x13, x9, x10)

inst_988:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x101ddf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3334fd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49c56f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e901ddf; op2val:0xc03334fd;
op3val:0x3f49c56f; valaddr_reg:x12; val_offset:2901*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2901*FLEN/8, x13, x9, x10)

inst_989:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x101ddf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3334fd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49c56f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e901ddf; op2val:0xc03334fd;
op3val:0x3f49c56f; valaddr_reg:x12; val_offset:2904*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2904*FLEN/8, x13, x9, x10)

inst_990:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f8a33 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x0993f7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3cacd7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f8a33; op2val:0xbd0993f7;
op3val:0x3cbcacd7; valaddr_reg:x12; val_offset:2907*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2907*FLEN/8, x13, x9, x10)

inst_991:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f8a33 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x0993f7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3cacd7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f8a33; op2val:0xbd0993f7;
op3val:0x3cbcacd7; valaddr_reg:x12; val_offset:2910*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2910*FLEN/8, x13, x9, x10)

inst_992:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f8a33 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x0993f7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3cacd7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f8a33; op2val:0xbd0993f7;
op3val:0x3cbcacd7; valaddr_reg:x12; val_offset:2913*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2913*FLEN/8, x13, x9, x10)

inst_993:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f8a33 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x0993f7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3cacd7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f8a33; op2val:0xbd0993f7;
op3val:0x3cbcacd7; valaddr_reg:x12; val_offset:2916*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2916*FLEN/8, x13, x9, x10)

inst_994:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f8a33 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x0993f7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3cacd7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f8a33; op2val:0xbd0993f7;
op3val:0x3cbcacd7; valaddr_reg:x12; val_offset:2919*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2919*FLEN/8, x13, x9, x10)

inst_995:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0720b2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e8529 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0658bb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8720b2; op2val:0xbf7e8529;
op3val:0x3e8658bb; valaddr_reg:x12; val_offset:2922*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2922*FLEN/8, x13, x9, x10)

inst_996:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0720b2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e8529 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0658bb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8720b2; op2val:0xbf7e8529;
op3val:0x3e8658bb; valaddr_reg:x12; val_offset:2925*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2925*FLEN/8, x13, x9, x10)

inst_997:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0720b2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e8529 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0658bb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8720b2; op2val:0xbf7e8529;
op3val:0x3e8658bb; valaddr_reg:x12; val_offset:2928*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2928*FLEN/8, x13, x9, x10)

inst_998:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0720b2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e8529 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0658bb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8720b2; op2val:0xbf7e8529;
op3val:0x3e8658bb; valaddr_reg:x12; val_offset:2931*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2931*FLEN/8, x13, x9, x10)

inst_999:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0720b2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e8529 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0658bb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8720b2; op2val:0xbf7e8529;
op3val:0x3e8658bb; valaddr_reg:x12; val_offset:2934*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2934*FLEN/8, x13, x9, x10)

inst_1000:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x592409 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58f21d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3803c5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed92409; op2val:0xbf58f21d;
op3val:0x3eb803c5; valaddr_reg:x12; val_offset:2937*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2937*FLEN/8, x13, x9, x10)

inst_1001:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x592409 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58f21d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3803c5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed92409; op2val:0xbf58f21d;
op3val:0x3eb803c5; valaddr_reg:x12; val_offset:2940*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2940*FLEN/8, x13, x9, x10)

inst_1002:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x592409 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58f21d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3803c5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed92409; op2val:0xbf58f21d;
op3val:0x3eb803c5; valaddr_reg:x12; val_offset:2943*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2943*FLEN/8, x13, x9, x10)

inst_1003:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x592409 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58f21d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3803c5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed92409; op2val:0xbf58f21d;
op3val:0x3eb803c5; valaddr_reg:x12; val_offset:2946*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2946*FLEN/8, x13, x9, x10)

inst_1004:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x592409 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58f21d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3803c5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed92409; op2val:0xbf58f21d;
op3val:0x3eb803c5; valaddr_reg:x12; val_offset:2949*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2949*FLEN/8, x13, x9, x10)

inst_1005:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d2c2b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4216ac and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ff1e5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7d2c2b; op2val:0xbe4216ac;
op3val:0x3e3ff1e5; valaddr_reg:x12; val_offset:2952*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2952*FLEN/8, x13, x9, x10)

inst_1006:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d2c2b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4216ac and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ff1e5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7d2c2b; op2val:0xbe4216ac;
op3val:0x3e3ff1e5; valaddr_reg:x12; val_offset:2955*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2955*FLEN/8, x13, x9, x10)

inst_1007:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d2c2b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4216ac and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ff1e5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7d2c2b; op2val:0xbe4216ac;
op3val:0x3e3ff1e5; valaddr_reg:x12; val_offset:2958*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2958*FLEN/8, x13, x9, x10)

inst_1008:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d2c2b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4216ac and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ff1e5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7d2c2b; op2val:0xbe4216ac;
op3val:0x3e3ff1e5; valaddr_reg:x12; val_offset:2961*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2961*FLEN/8, x13, x9, x10)

inst_1009:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d2c2b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4216ac and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ff1e5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7d2c2b; op2val:0xbe4216ac;
op3val:0x3e3ff1e5; valaddr_reg:x12; val_offset:2964*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2964*FLEN/8, x13, x9, x10)

inst_1010:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2bc219 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5dd70a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14d6d6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2bc219; op2val:0xbe5dd70a;
op3val:0x3e14d6d6; valaddr_reg:x12; val_offset:2967*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2967*FLEN/8, x13, x9, x10)

inst_1011:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2bc219 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5dd70a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14d6d6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2bc219; op2val:0xbe5dd70a;
op3val:0x3e14d6d6; valaddr_reg:x12; val_offset:2970*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2970*FLEN/8, x13, x9, x10)

inst_1012:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2bc219 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5dd70a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14d6d6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2bc219; op2val:0xbe5dd70a;
op3val:0x3e14d6d6; valaddr_reg:x12; val_offset:2973*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2973*FLEN/8, x13, x9, x10)

inst_1013:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2bc219 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5dd70a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14d6d6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2bc219; op2val:0xbe5dd70a;
op3val:0x3e14d6d6; valaddr_reg:x12; val_offset:2976*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2976*FLEN/8, x13, x9, x10)

inst_1014:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2bc219 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5dd70a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14d6d6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2bc219; op2val:0xbe5dd70a;
op3val:0x3e14d6d6; valaddr_reg:x12; val_offset:2979*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2979*FLEN/8, x13, x9, x10)

inst_1015:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15e339 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1b2952 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x35b18b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f15e339; op2val:0xbe1b2952;
op3val:0x3db5b18b; valaddr_reg:x12; val_offset:2982*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2982*FLEN/8, x13, x9, x10)

inst_1016:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15e339 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1b2952 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x35b18b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f15e339; op2val:0xbe1b2952;
op3val:0x3db5b18b; valaddr_reg:x12; val_offset:2985*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2985*FLEN/8, x13, x9, x10)

inst_1017:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15e339 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1b2952 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x35b18b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f15e339; op2val:0xbe1b2952;
op3val:0x3db5b18b; valaddr_reg:x12; val_offset:2988*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2988*FLEN/8, x13, x9, x10)

inst_1018:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15e339 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1b2952 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x35b18b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f15e339; op2val:0xbe1b2952;
op3val:0x3db5b18b; valaddr_reg:x12; val_offset:2991*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2991*FLEN/8, x13, x9, x10)

inst_1019:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15e339 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1b2952 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x35b18b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f15e339; op2val:0xbe1b2952;
op3val:0x3db5b18b; valaddr_reg:x12; val_offset:2994*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2994*FLEN/8, x13, x9, x10)

inst_1020:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe221 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x20a7ab and fs3 == 0 and fe3 == 0x79 and fm3 == 0x2094ed and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7fe221; op2val:0xbca0a7ab;
op3val:0x3ca094ed; valaddr_reg:x12; val_offset:2997*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2997*FLEN/8, x13, x9, x10)

inst_1021:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe221 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x20a7ab and fs3 == 0 and fe3 == 0x79 and fm3 == 0x2094ed and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7fe221; op2val:0xbca0a7ab;
op3val:0x3ca094ed; valaddr_reg:x12; val_offset:3000*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3000*FLEN/8, x13, x9, x10)

inst_1022:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe221 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x20a7ab and fs3 == 0 and fe3 == 0x79 and fm3 == 0x2094ed and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7fe221; op2val:0xbca0a7ab;
op3val:0x3ca094ed; valaddr_reg:x12; val_offset:3003*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3003*FLEN/8, x13, x9, x10)

inst_1023:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe221 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x20a7ab and fs3 == 0 and fe3 == 0x79 and fm3 == 0x2094ed and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7fe221; op2val:0xbca0a7ab;
op3val:0x3ca094ed; valaddr_reg:x12; val_offset:3006*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3006*FLEN/8, x13, x9, x10)

inst_1024:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe221 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x20a7ab and fs3 == 0 and fe3 == 0x79 and fm3 == 0x2094ed and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7fe221; op2val:0xbca0a7ab;
op3val:0x3ca094ed; valaddr_reg:x12; val_offset:3009*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3009*FLEN/8, x13, x9, x10)

inst_1025:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6776dc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a75c9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7a6124 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6776dc; op2val:0xbf0a75c9;
op3val:0x3efa6124; valaddr_reg:x12; val_offset:3012*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3012*FLEN/8, x13, x9, x10)

inst_1026:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6776dc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a75c9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7a6124 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6776dc; op2val:0xbf0a75c9;
op3val:0x3efa6124; valaddr_reg:x12; val_offset:3015*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3015*FLEN/8, x13, x9, x10)

inst_1027:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6776dc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a75c9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7a6124 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6776dc; op2val:0xbf0a75c9;
op3val:0x3efa6124; valaddr_reg:x12; val_offset:3018*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3018*FLEN/8, x13, x9, x10)

inst_1028:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6776dc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a75c9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7a6124 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6776dc; op2val:0xbf0a75c9;
op3val:0x3efa6124; valaddr_reg:x12; val_offset:3021*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3021*FLEN/8, x13, x9, x10)

inst_1029:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6776dc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a75c9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7a6124 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6776dc; op2val:0xbf0a75c9;
op3val:0x3efa6124; valaddr_reg:x12; val_offset:3024*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3024*FLEN/8, x13, x9, x10)

inst_1030:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04ba18 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x5846d2 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x604379 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f04ba18; op2val:0xbcd846d2;
op3val:0x3c604379; valaddr_reg:x12; val_offset:3027*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3027*FLEN/8, x13, x9, x10)

inst_1031:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04ba18 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x5846d2 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x604379 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f04ba18; op2val:0xbcd846d2;
op3val:0x3c604379; valaddr_reg:x12; val_offset:3030*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3030*FLEN/8, x13, x9, x10)

inst_1032:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04ba18 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x5846d2 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x604379 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f04ba18; op2val:0xbcd846d2;
op3val:0x3c604379; valaddr_reg:x12; val_offset:3033*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3033*FLEN/8, x13, x9, x10)

inst_1033:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04ba18 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x5846d2 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x604379 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f04ba18; op2val:0xbcd846d2;
op3val:0x3c604379; valaddr_reg:x12; val_offset:3036*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3036*FLEN/8, x13, x9, x10)

inst_1034:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04ba18 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x5846d2 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x604379 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f04ba18; op2val:0xbcd846d2;
op3val:0x3c604379; valaddr_reg:x12; val_offset:3039*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3039*FLEN/8, x13, x9, x10)

inst_1035:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x10f9ce and fs2 == 1 and fe2 == 0x7b and fm2 == 0x02dde3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x143906 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e90f9ce; op2val:0xbd82dde3;
op3val:0x3c943906; valaddr_reg:x12; val_offset:3042*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3042*FLEN/8, x13, x9, x10)

inst_1036:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x10f9ce and fs2 == 1 and fe2 == 0x7b and fm2 == 0x02dde3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x143906 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e90f9ce; op2val:0xbd82dde3;
op3val:0x3c943906; valaddr_reg:x12; val_offset:3045*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3045*FLEN/8, x13, x9, x10)

inst_1037:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x10f9ce and fs2 == 1 and fe2 == 0x7b and fm2 == 0x02dde3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x143906 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e90f9ce; op2val:0xbd82dde3;
op3val:0x3c943906; valaddr_reg:x12; val_offset:3048*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3048*FLEN/8, x13, x9, x10)

inst_1038:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x10f9ce and fs2 == 1 and fe2 == 0x7b and fm2 == 0x02dde3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x143906 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e90f9ce; op2val:0xbd82dde3;
op3val:0x3c943906; valaddr_reg:x12; val_offset:3051*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3051*FLEN/8, x13, x9, x10)

inst_1039:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x10f9ce and fs2 == 1 and fe2 == 0x7b and fm2 == 0x02dde3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x143906 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e90f9ce; op2val:0xbd82dde3;
op3val:0x3c943906; valaddr_reg:x12; val_offset:3054*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3054*FLEN/8, x13, x9, x10)

inst_1040:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4102e6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4332b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x132b6e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc102e6; op2val:0xc0c332b1;
op3val:0x3f132b6e; valaddr_reg:x12; val_offset:3057*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3057*FLEN/8, x13, x9, x10)

inst_1041:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4102e6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4332b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x132b6e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc102e6; op2val:0xc0c332b1;
op3val:0x3f132b6e; valaddr_reg:x12; val_offset:3060*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3060*FLEN/8, x13, x9, x10)

inst_1042:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4102e6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4332b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x132b6e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc102e6; op2val:0xc0c332b1;
op3val:0x3f132b6e; valaddr_reg:x12; val_offset:3063*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3063*FLEN/8, x13, x9, x10)

inst_1043:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4102e6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4332b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x132b6e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc102e6; op2val:0xc0c332b1;
op3val:0x3f132b6e; valaddr_reg:x12; val_offset:3066*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3066*FLEN/8, x13, x9, x10)

inst_1044:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4102e6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4332b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x132b6e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc102e6; op2val:0xc0c332b1;
op3val:0x3f132b6e; valaddr_reg:x12; val_offset:3069*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3069*FLEN/8, x13, x9, x10)

inst_1045:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a2c44 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0046ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5aa547 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a2c44; op2val:0xbf8046ff;
op3val:0x3f5aa547; valaddr_reg:x12; val_offset:3072*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3072*FLEN/8, x13, x9, x10)

inst_1046:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a2c44 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0046ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5aa547 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a2c44; op2val:0xbf8046ff;
op3val:0x3f5aa547; valaddr_reg:x12; val_offset:3075*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3075*FLEN/8, x13, x9, x10)

inst_1047:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a2c44 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0046ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5aa547 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a2c44; op2val:0xbf8046ff;
op3val:0x3f5aa547; valaddr_reg:x12; val_offset:3078*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3078*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_8)

inst_1048:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a2c44 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0046ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5aa547 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a2c44; op2val:0xbf8046ff;
op3val:0x3f5aa547; valaddr_reg:x12; val_offset:3081*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3081*FLEN/8, x13, x9, x10)

inst_1049:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a2c44 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0046ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5aa547 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a2c44; op2val:0xbf8046ff;
op3val:0x3f5aa547; valaddr_reg:x12; val_offset:3084*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3084*FLEN/8, x13, x9, x10)

inst_1050:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c4b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2bcaff and fs3 == 0 and fe3 == 0x7a and fm3 == 0x47aaba and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94c4b6; op2val:0xbe2bcaff;
op3val:0x3d47aaba; valaddr_reg:x12; val_offset:3087*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3087*FLEN/8, x13, x9, x10)

inst_1051:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c4b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2bcaff and fs3 == 0 and fe3 == 0x7a and fm3 == 0x47aaba and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94c4b6; op2val:0xbe2bcaff;
op3val:0x3d47aaba; valaddr_reg:x12; val_offset:3090*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3090*FLEN/8, x13, x9, x10)

inst_1052:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c4b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2bcaff and fs3 == 0 and fe3 == 0x7a and fm3 == 0x47aaba and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94c4b6; op2val:0xbe2bcaff;
op3val:0x3d47aaba; valaddr_reg:x12; val_offset:3093*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3093*FLEN/8, x13, x9, x10)

inst_1053:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c4b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2bcaff and fs3 == 0 and fe3 == 0x7a and fm3 == 0x47aaba and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94c4b6; op2val:0xbe2bcaff;
op3val:0x3d47aaba; valaddr_reg:x12; val_offset:3096*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3096*FLEN/8, x13, x9, x10)

inst_1054:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c4b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2bcaff and fs3 == 0 and fe3 == 0x7a and fm3 == 0x47aaba and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e94c4b6; op2val:0xbe2bcaff;
op3val:0x3d47aaba; valaddr_reg:x12; val_offset:3099*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3099*FLEN/8, x13, x9, x10)

inst_1055:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b84f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x79cce2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x275d97 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab84f4; op2val:0xbff9cce2;
op3val:0x3f275d97; valaddr_reg:x12; val_offset:3102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3102*FLEN/8, x13, x9, x10)

inst_1056:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b84f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x79cce2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x275d97 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab84f4; op2val:0xbff9cce2;
op3val:0x3f275d97; valaddr_reg:x12; val_offset:3105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3105*FLEN/8, x13, x9, x10)

inst_1057:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b84f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x79cce2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x275d97 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab84f4; op2val:0xbff9cce2;
op3val:0x3f275d97; valaddr_reg:x12; val_offset:3108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3108*FLEN/8, x13, x9, x10)

inst_1058:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b84f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x79cce2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x275d97 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab84f4; op2val:0xbff9cce2;
op3val:0x3f275d97; valaddr_reg:x12; val_offset:3111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3111*FLEN/8, x13, x9, x10)

inst_1059:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b84f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x79cce2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x275d97 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eab84f4; op2val:0xbff9cce2;
op3val:0x3f275d97; valaddr_reg:x12; val_offset:3114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3114*FLEN/8, x13, x9, x10)

inst_1060:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e3594 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a1e04 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2fb1ce and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ece3594; op2val:0xbf5a1e04;
op3val:0x3eafb1ce; valaddr_reg:x12; val_offset:3117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3117*FLEN/8, x13, x9, x10)

inst_1061:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e3594 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a1e04 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2fb1ce and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ece3594; op2val:0xbf5a1e04;
op3val:0x3eafb1ce; valaddr_reg:x12; val_offset:3120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3120*FLEN/8, x13, x9, x10)

inst_1062:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e3594 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a1e04 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2fb1ce and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ece3594; op2val:0xbf5a1e04;
op3val:0x3eafb1ce; valaddr_reg:x12; val_offset:3123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3123*FLEN/8, x13, x9, x10)

inst_1063:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e3594 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a1e04 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2fb1ce and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ece3594; op2val:0xbf5a1e04;
op3val:0x3eafb1ce; valaddr_reg:x12; val_offset:3126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3126*FLEN/8, x13, x9, x10)

inst_1064:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e3594 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a1e04 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2fb1ce and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ece3594; op2val:0xbf5a1e04;
op3val:0x3eafb1ce; valaddr_reg:x12; val_offset:3129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3129*FLEN/8, x13, x9, x10)

inst_1065:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f3af2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x51be3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1cad39 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f3af2; op2val:0xbed1be3a;
op3val:0x3e9cad39; valaddr_reg:x12; val_offset:3132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3132*FLEN/8, x13, x9, x10)

inst_1066:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f3af2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x51be3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1cad39 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f3af2; op2val:0xbed1be3a;
op3val:0x3e9cad39; valaddr_reg:x12; val_offset:3135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3135*FLEN/8, x13, x9, x10)

inst_1067:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f3af2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x51be3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1cad39 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f3af2; op2val:0xbed1be3a;
op3val:0x3e9cad39; valaddr_reg:x12; val_offset:3138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3138*FLEN/8, x13, x9, x10)

inst_1068:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f3af2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x51be3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1cad39 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f3af2; op2val:0xbed1be3a;
op3val:0x3e9cad39; valaddr_reg:x12; val_offset:3141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3141*FLEN/8, x13, x9, x10)

inst_1069:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f3af2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x51be3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1cad39 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3f3af2; op2val:0xbed1be3a;
op3val:0x3e9cad39; valaddr_reg:x12; val_offset:3144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3144*FLEN/8, x13, x9, x10)

inst_1070:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d0554 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b63d4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78e45a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4d0554; op2val:0xbf9b63d4;
op3val:0x3f78e45a; valaddr_reg:x12; val_offset:3147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3147*FLEN/8, x13, x9, x10)

inst_1071:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d0554 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b63d4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78e45a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4d0554; op2val:0xbf9b63d4;
op3val:0x3f78e45a; valaddr_reg:x12; val_offset:3150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3150*FLEN/8, x13, x9, x10)

inst_1072:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d0554 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b63d4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78e45a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4d0554; op2val:0xbf9b63d4;
op3val:0x3f78e45a; valaddr_reg:x12; val_offset:3153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3153*FLEN/8, x13, x9, x10)

inst_1073:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d0554 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b63d4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78e45a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4d0554; op2val:0xbf9b63d4;
op3val:0x3f78e45a; valaddr_reg:x12; val_offset:3156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3156*FLEN/8, x13, x9, x10)

inst_1074:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d0554 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b63d4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78e45a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4d0554; op2val:0xbf9b63d4;
op3val:0x3f78e45a; valaddr_reg:x12; val_offset:3159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3159*FLEN/8, x13, x9, x10)

inst_1075:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8cc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c00c5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0301b3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6f8cc3; op2val:0xbf0c00c5;
op3val:0x3f0301b3; valaddr_reg:x12; val_offset:3162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3162*FLEN/8, x13, x9, x10)

inst_1076:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8cc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c00c5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0301b3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6f8cc3; op2val:0xbf0c00c5;
op3val:0x3f0301b3; valaddr_reg:x12; val_offset:3165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3165*FLEN/8, x13, x9, x10)

inst_1077:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8cc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c00c5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0301b3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6f8cc3; op2val:0xbf0c00c5;
op3val:0x3f0301b3; valaddr_reg:x12; val_offset:3168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3168*FLEN/8, x13, x9, x10)

inst_1078:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8cc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c00c5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0301b3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6f8cc3; op2val:0xbf0c00c5;
op3val:0x3f0301b3; valaddr_reg:x12; val_offset:3171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3171*FLEN/8, x13, x9, x10)

inst_1079:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8cc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c00c5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0301b3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6f8cc3; op2val:0xbf0c00c5;
op3val:0x3f0301b3; valaddr_reg:x12; val_offset:3174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3174*FLEN/8, x13, x9, x10)

inst_1080:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ba1c5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x230f6b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4642c1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ba1c5; op2val:0xc0230f6b;
op3val:0x3f4642c1; valaddr_reg:x12; val_offset:3177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3177*FLEN/8, x13, x9, x10)

inst_1081:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ba1c5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x230f6b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4642c1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ba1c5; op2val:0xc0230f6b;
op3val:0x3f4642c1; valaddr_reg:x12; val_offset:3180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3180*FLEN/8, x13, x9, x10)

inst_1082:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ba1c5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x230f6b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4642c1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ba1c5; op2val:0xc0230f6b;
op3val:0x3f4642c1; valaddr_reg:x12; val_offset:3183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3183*FLEN/8, x13, x9, x10)

inst_1083:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ba1c5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x230f6b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4642c1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ba1c5; op2val:0xc0230f6b;
op3val:0x3f4642c1; valaddr_reg:x12; val_offset:3186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3186*FLEN/8, x13, x9, x10)

inst_1084:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ba1c5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x230f6b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4642c1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ba1c5; op2val:0xc0230f6b;
op3val:0x3f4642c1; valaddr_reg:x12; val_offset:3189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3189*FLEN/8, x13, x9, x10)

inst_1085:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a664a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0245fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d244d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a664a; op2val:0xbf0245fb;
op3val:0x3e9d244d; valaddr_reg:x12; val_offset:3192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3192*FLEN/8, x13, x9, x10)

inst_1086:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a664a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0245fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d244d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a664a; op2val:0xbf0245fb;
op3val:0x3e9d244d; valaddr_reg:x12; val_offset:3195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3195*FLEN/8, x13, x9, x10)

inst_1087:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a664a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0245fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d244d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a664a; op2val:0xbf0245fb;
op3val:0x3e9d244d; valaddr_reg:x12; val_offset:3198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3198*FLEN/8, x13, x9, x10)

inst_1088:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a664a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0245fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d244d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a664a; op2val:0xbf0245fb;
op3val:0x3e9d244d; valaddr_reg:x12; val_offset:3201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3201*FLEN/8, x13, x9, x10)

inst_1089:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a664a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0245fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d244d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f1a664a; op2val:0xbf0245fb;
op3val:0x3e9d244d; valaddr_reg:x12; val_offset:3204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3204*FLEN/8, x13, x9, x10)

inst_1090:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ca498 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25f38e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x74931e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ca498; op2val:0xbf25f38e;
op3val:0x3ef4931e; valaddr_reg:x12; val_offset:3207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3207*FLEN/8, x13, x9, x10)

inst_1091:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ca498 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25f38e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x74931e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ca498; op2val:0xbf25f38e;
op3val:0x3ef4931e; valaddr_reg:x12; val_offset:3210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3210*FLEN/8, x13, x9, x10)

inst_1092:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ca498 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25f38e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x74931e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ca498; op2val:0xbf25f38e;
op3val:0x3ef4931e; valaddr_reg:x12; val_offset:3213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3213*FLEN/8, x13, x9, x10)

inst_1093:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ca498 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25f38e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x74931e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ca498; op2val:0xbf25f38e;
op3val:0x3ef4931e; valaddr_reg:x12; val_offset:3216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3216*FLEN/8, x13, x9, x10)

inst_1094:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ca498 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25f38e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x74931e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3ca498; op2val:0xbf25f38e;
op3val:0x3ef4931e; valaddr_reg:x12; val_offset:3219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3219*FLEN/8, x13, x9, x10)

inst_1095:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b50be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f73bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x180d2a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecb50be; op2val:0xbfbf73bd;
op3val:0x3f180d2a; valaddr_reg:x12; val_offset:3222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3222*FLEN/8, x13, x9, x10)

inst_1096:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b50be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f73bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x180d2a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecb50be; op2val:0xbfbf73bd;
op3val:0x3f180d2a; valaddr_reg:x12; val_offset:3225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3225*FLEN/8, x13, x9, x10)

inst_1097:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b50be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f73bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x180d2a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecb50be; op2val:0xbfbf73bd;
op3val:0x3f180d2a; valaddr_reg:x12; val_offset:3228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3228*FLEN/8, x13, x9, x10)

inst_1098:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b50be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f73bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x180d2a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecb50be; op2val:0xbfbf73bd;
op3val:0x3f180d2a; valaddr_reg:x12; val_offset:3231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3231*FLEN/8, x13, x9, x10)

inst_1099:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b50be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f73bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x180d2a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecb50be; op2val:0xbfbf73bd;
op3val:0x3f180d2a; valaddr_reg:x12; val_offset:3234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3234*FLEN/8, x13, x9, x10)

inst_1100:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4aa35a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x46c584 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d56b0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4aa35a; op2val:0xbec6c584;
op3val:0x3e9d56b0; valaddr_reg:x12; val_offset:3237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3237*FLEN/8, x13, x9, x10)

inst_1101:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4aa35a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x46c584 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d56b0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4aa35a; op2val:0xbec6c584;
op3val:0x3e9d56b0; valaddr_reg:x12; val_offset:3240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3240*FLEN/8, x13, x9, x10)

inst_1102:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4aa35a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x46c584 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d56b0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4aa35a; op2val:0xbec6c584;
op3val:0x3e9d56b0; valaddr_reg:x12; val_offset:3243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3243*FLEN/8, x13, x9, x10)

inst_1103:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4aa35a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x46c584 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d56b0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4aa35a; op2val:0xbec6c584;
op3val:0x3e9d56b0; valaddr_reg:x12; val_offset:3246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3246*FLEN/8, x13, x9, x10)

inst_1104:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4aa35a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x46c584 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d56b0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4aa35a; op2val:0xbec6c584;
op3val:0x3e9d56b0; valaddr_reg:x12; val_offset:3249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3249*FLEN/8, x13, x9, x10)

inst_1105:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x190e08 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2da27f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4f9f45 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e990e08; op2val:0xc02da27f;
op3val:0x3f4f9f45; valaddr_reg:x12; val_offset:3252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3252*FLEN/8, x13, x9, x10)

inst_1106:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x190e08 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2da27f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4f9f45 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e990e08; op2val:0xc02da27f;
op3val:0x3f4f9f45; valaddr_reg:x12; val_offset:3255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3255*FLEN/8, x13, x9, x10)

inst_1107:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x190e08 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2da27f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4f9f45 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e990e08; op2val:0xc02da27f;
op3val:0x3f4f9f45; valaddr_reg:x12; val_offset:3258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3258*FLEN/8, x13, x9, x10)

inst_1108:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x190e08 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2da27f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4f9f45 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e990e08; op2val:0xc02da27f;
op3val:0x3f4f9f45; valaddr_reg:x12; val_offset:3261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3261*FLEN/8, x13, x9, x10)

inst_1109:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x190e08 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2da27f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4f9f45 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e990e08; op2val:0xc02da27f;
op3val:0x3f4f9f45; valaddr_reg:x12; val_offset:3264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3264*FLEN/8, x13, x9, x10)

inst_1110:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4549f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x650811 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30815f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4549f4; op2val:0xbfe50811;
op3val:0x3eb0815f; valaddr_reg:x12; val_offset:3267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3267*FLEN/8, x13, x9, x10)

inst_1111:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4549f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x650811 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30815f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4549f4; op2val:0xbfe50811;
op3val:0x3eb0815f; valaddr_reg:x12; val_offset:3270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3270*FLEN/8, x13, x9, x10)

inst_1112:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4549f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x650811 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30815f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4549f4; op2val:0xbfe50811;
op3val:0x3eb0815f; valaddr_reg:x12; val_offset:3273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3273*FLEN/8, x13, x9, x10)

inst_1113:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4549f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x650811 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30815f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4549f4; op2val:0xbfe50811;
op3val:0x3eb0815f; valaddr_reg:x12; val_offset:3276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3276*FLEN/8, x13, x9, x10)

inst_1114:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4549f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x650811 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30815f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4549f4; op2val:0xbfe50811;
op3val:0x3eb0815f; valaddr_reg:x12; val_offset:3279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3279*FLEN/8, x13, x9, x10)

inst_1115:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x08bb98 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x52b5e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x611616 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e08bb98; op2val:0xbfd2b5e6;
op3val:0x3e611616; valaddr_reg:x12; val_offset:3282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3282*FLEN/8, x13, x9, x10)

inst_1116:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x08bb98 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x52b5e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x611616 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e08bb98; op2val:0xbfd2b5e6;
op3val:0x3e611616; valaddr_reg:x12; val_offset:3285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3285*FLEN/8, x13, x9, x10)

inst_1117:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x08bb98 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x52b5e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x611616 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e08bb98; op2val:0xbfd2b5e6;
op3val:0x3e611616; valaddr_reg:x12; val_offset:3288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3288*FLEN/8, x13, x9, x10)

inst_1118:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x08bb98 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x52b5e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x611616 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e08bb98; op2val:0xbfd2b5e6;
op3val:0x3e611616; valaddr_reg:x12; val_offset:3291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3291*FLEN/8, x13, x9, x10)

inst_1119:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x08bb98 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x52b5e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x611616 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e08bb98; op2val:0xbfd2b5e6;
op3val:0x3e611616; valaddr_reg:x12; val_offset:3294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3294*FLEN/8, x13, x9, x10)

inst_1120:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0172b8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0fe99a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x118a68 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0172b8; op2val:0xbf0fe99a;
op3val:0x3e918a68; valaddr_reg:x12; val_offset:3297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3297*FLEN/8, x13, x9, x10)

inst_1121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0172b8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0fe99a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x118a68 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0172b8; op2val:0xbf0fe99a;
op3val:0x3e918a68; valaddr_reg:x12; val_offset:3300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3300*FLEN/8, x13, x9, x10)

inst_1122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0172b8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0fe99a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x118a68 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0172b8; op2val:0xbf0fe99a;
op3val:0x3e918a68; valaddr_reg:x12; val_offset:3303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3303*FLEN/8, x13, x9, x10)

inst_1123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0172b8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0fe99a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x118a68 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0172b8; op2val:0xbf0fe99a;
op3val:0x3e918a68; valaddr_reg:x12; val_offset:3306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3306*FLEN/8, x13, x9, x10)

inst_1124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0172b8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0fe99a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x118a68 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0172b8; op2val:0xbf0fe99a;
op3val:0x3e918a68; valaddr_reg:x12; val_offset:3309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3309*FLEN/8, x13, x9, x10)

inst_1125:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f7d93 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0163be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31654e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f7d93; op2val:0xbf0163be;
op3val:0x3eb1654e; valaddr_reg:x12; val_offset:3312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3312*FLEN/8, x13, x9, x10)

inst_1126:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f7d93 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0163be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31654e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f7d93; op2val:0xbf0163be;
op3val:0x3eb1654e; valaddr_reg:x12; val_offset:3315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3315*FLEN/8, x13, x9, x10)

inst_1127:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f7d93 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0163be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31654e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f7d93; op2val:0xbf0163be;
op3val:0x3eb1654e; valaddr_reg:x12; val_offset:3318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3318*FLEN/8, x13, x9, x10)

inst_1128:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f7d93 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0163be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31654e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f7d93; op2val:0xbf0163be;
op3val:0x3eb1654e; valaddr_reg:x12; val_offset:3321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3321*FLEN/8, x13, x9, x10)

inst_1129:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f7d93 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0163be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31654e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f2f7d93; op2val:0xbf0163be;
op3val:0x3eb1654e; valaddr_reg:x12; val_offset:3324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3324*FLEN/8, x13, x9, x10)

inst_1130:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aeb6b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3679e7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27733b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6aeb6b; op2val:0xbf3679e7;
op3val:0x3f27733b; valaddr_reg:x12; val_offset:3327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3327*FLEN/8, x13, x9, x10)

inst_1131:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aeb6b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3679e7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27733b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6aeb6b; op2val:0xbf3679e7;
op3val:0x3f27733b; valaddr_reg:x12; val_offset:3330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3330*FLEN/8, x13, x9, x10)

inst_1132:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aeb6b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3679e7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27733b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6aeb6b; op2val:0xbf3679e7;
op3val:0x3f27733b; valaddr_reg:x12; val_offset:3333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3333*FLEN/8, x13, x9, x10)

inst_1133:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aeb6b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3679e7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27733b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6aeb6b; op2val:0xbf3679e7;
op3val:0x3f27733b; valaddr_reg:x12; val_offset:3336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3336*FLEN/8, x13, x9, x10)

inst_1134:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aeb6b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3679e7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27733b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6aeb6b; op2val:0xbf3679e7;
op3val:0x3f27733b; valaddr_reg:x12; val_offset:3339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3339*FLEN/8, x13, x9, x10)

inst_1135:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ce776 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d2670 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6a4842 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efce776; op2val:0xbe6d2670;
op3val:0x3dea4842; valaddr_reg:x12; val_offset:3342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3342*FLEN/8, x13, x9, x10)

inst_1136:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ce776 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d2670 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6a4842 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efce776; op2val:0xbe6d2670;
op3val:0x3dea4842; valaddr_reg:x12; val_offset:3345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3345*FLEN/8, x13, x9, x10)

inst_1137:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ce776 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d2670 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6a4842 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efce776; op2val:0xbe6d2670;
op3val:0x3dea4842; valaddr_reg:x12; val_offset:3348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3348*FLEN/8, x13, x9, x10)

inst_1138:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ce776 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d2670 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6a4842 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efce776; op2val:0xbe6d2670;
op3val:0x3dea4842; valaddr_reg:x12; val_offset:3351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3351*FLEN/8, x13, x9, x10)

inst_1139:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ce776 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d2670 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6a4842 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efce776; op2val:0xbe6d2670;
op3val:0x3dea4842; valaddr_reg:x12; val_offset:3354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3354*FLEN/8, x13, x9, x10)

inst_1140:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21dfae and fs2 == 1 and fe2 == 0x7d and fm2 == 0x135347 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3a5033 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea1dfae; op2val:0xbe935347;
op3val:0x3dba5033; valaddr_reg:x12; val_offset:3357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3357*FLEN/8, x13, x9, x10)

inst_1141:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21dfae and fs2 == 1 and fe2 == 0x7d and fm2 == 0x135347 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3a5033 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea1dfae; op2val:0xbe935347;
op3val:0x3dba5033; valaddr_reg:x12; val_offset:3360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3360*FLEN/8, x13, x9, x10)

inst_1142:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21dfae and fs2 == 1 and fe2 == 0x7d and fm2 == 0x135347 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3a5033 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea1dfae; op2val:0xbe935347;
op3val:0x3dba5033; valaddr_reg:x12; val_offset:3363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3363*FLEN/8, x13, x9, x10)

inst_1143:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21dfae and fs2 == 1 and fe2 == 0x7d and fm2 == 0x135347 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3a5033 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea1dfae; op2val:0xbe935347;
op3val:0x3dba5033; valaddr_reg:x12; val_offset:3366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3366*FLEN/8, x13, x9, x10)

inst_1144:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21dfae and fs2 == 1 and fe2 == 0x7d and fm2 == 0x135347 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3a5033 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ea1dfae; op2val:0xbe935347;
op3val:0x3dba5033; valaddr_reg:x12; val_offset:3369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3369*FLEN/8, x13, x9, x10)

inst_1145:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d901 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65429f and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6fbbe6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e05d901; op2val:0xbe65429f;
op3val:0x3cefbbe6; valaddr_reg:x12; val_offset:3372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3372*FLEN/8, x13, x9, x10)

inst_1146:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d901 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65429f and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6fbbe6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e05d901; op2val:0xbe65429f;
op3val:0x3cefbbe6; valaddr_reg:x12; val_offset:3375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3375*FLEN/8, x13, x9, x10)

inst_1147:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d901 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65429f and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6fbbe6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e05d901; op2val:0xbe65429f;
op3val:0x3cefbbe6; valaddr_reg:x12; val_offset:3378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3378*FLEN/8, x13, x9, x10)

inst_1148:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d901 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65429f and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6fbbe6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e05d901; op2val:0xbe65429f;
op3val:0x3cefbbe6; valaddr_reg:x12; val_offset:3381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3381*FLEN/8, x13, x9, x10)

inst_1149:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d901 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65429f and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6fbbe6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e05d901; op2val:0xbe65429f;
op3val:0x3cefbbe6; valaddr_reg:x12; val_offset:3384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3384*FLEN/8, x13, x9, x10)

inst_1150:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43cc0c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0044db and fs3 == 0 and fe3 == 0x7d and fm3 == 0x443560 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec3cc0c; op2val:0xbf8044db;
op3val:0x3ec43560; valaddr_reg:x12; val_offset:3387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3387*FLEN/8, x13, x9, x10)

inst_1151:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43cc0c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0044db and fs3 == 0 and fe3 == 0x7d and fm3 == 0x443560 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec3cc0c; op2val:0xbf8044db;
op3val:0x3ec43560; valaddr_reg:x12; val_offset:3390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3390*FLEN/8, x13, x9, x10)

inst_1152:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43cc0c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0044db and fs3 == 0 and fe3 == 0x7d and fm3 == 0x443560 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec3cc0c; op2val:0xbf8044db;
op3val:0x3ec43560; valaddr_reg:x12; val_offset:3393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3393*FLEN/8, x13, x9, x10)

inst_1153:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43cc0c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0044db and fs3 == 0 and fe3 == 0x7d and fm3 == 0x443560 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec3cc0c; op2val:0xbf8044db;
op3val:0x3ec43560; valaddr_reg:x12; val_offset:3396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3396*FLEN/8, x13, x9, x10)

inst_1154:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43cc0c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0044db and fs3 == 0 and fe3 == 0x7d and fm3 == 0x443560 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec3cc0c; op2val:0xbf8044db;
op3val:0x3ec43560; valaddr_reg:x12; val_offset:3399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3399*FLEN/8, x13, x9, x10)

inst_1155:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07f6b2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3bb21d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x475f9b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07f6b2; op2val:0xbfbbb21d;
op3val:0x3f475f9b; valaddr_reg:x12; val_offset:3402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3402*FLEN/8, x13, x9, x10)

inst_1156:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07f6b2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3bb21d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x475f9b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07f6b2; op2val:0xbfbbb21d;
op3val:0x3f475f9b; valaddr_reg:x12; val_offset:3405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3405*FLEN/8, x13, x9, x10)

inst_1157:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07f6b2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3bb21d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x475f9b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07f6b2; op2val:0xbfbbb21d;
op3val:0x3f475f9b; valaddr_reg:x12; val_offset:3408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3408*FLEN/8, x13, x9, x10)

inst_1158:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07f6b2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3bb21d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x475f9b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07f6b2; op2val:0xbfbbb21d;
op3val:0x3f475f9b; valaddr_reg:x12; val_offset:3411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3411*FLEN/8, x13, x9, x10)

inst_1159:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07f6b2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3bb21d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x475f9b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07f6b2; op2val:0xbfbbb21d;
op3val:0x3f475f9b; valaddr_reg:x12; val_offset:3414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3414*FLEN/8, x13, x9, x10)

inst_1160:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x504c8a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x752d9f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x477e60 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e504c8a; op2val:0xbff52d9f;
op3val:0x3ec77e60; valaddr_reg:x12; val_offset:3417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3417*FLEN/8, x13, x9, x10)

inst_1161:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x504c8a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x752d9f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x477e60 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e504c8a; op2val:0xbff52d9f;
op3val:0x3ec77e60; valaddr_reg:x12; val_offset:3420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3420*FLEN/8, x13, x9, x10)

inst_1162:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x504c8a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x752d9f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x477e60 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e504c8a; op2val:0xbff52d9f;
op3val:0x3ec77e60; valaddr_reg:x12; val_offset:3423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3423*FLEN/8, x13, x9, x10)

inst_1163:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x504c8a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x752d9f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x477e60 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e504c8a; op2val:0xbff52d9f;
op3val:0x3ec77e60; valaddr_reg:x12; val_offset:3426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3426*FLEN/8, x13, x9, x10)

inst_1164:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x504c8a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x752d9f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x477e60 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e504c8a; op2val:0xbff52d9f;
op3val:0x3ec77e60; valaddr_reg:x12; val_offset:3429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3429*FLEN/8, x13, x9, x10)

inst_1165:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x569a97 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x681b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x429327 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f569a97; op2val:0xbf681b80;
op3val:0x3f429327; valaddr_reg:x12; val_offset:3432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3432*FLEN/8, x13, x9, x10)

inst_1166:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x569a97 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x681b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x429327 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f569a97; op2val:0xbf681b80;
op3val:0x3f429327; valaddr_reg:x12; val_offset:3435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3435*FLEN/8, x13, x9, x10)

inst_1167:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x569a97 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x681b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x429327 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f569a97; op2val:0xbf681b80;
op3val:0x3f429327; valaddr_reg:x12; val_offset:3438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3438*FLEN/8, x13, x9, x10)

inst_1168:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x569a97 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x681b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x429327 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f569a97; op2val:0xbf681b80;
op3val:0x3f429327; valaddr_reg:x12; val_offset:3441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3441*FLEN/8, x13, x9, x10)

inst_1169:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x569a97 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x681b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x429327 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f569a97; op2val:0xbf681b80;
op3val:0x3f429327; valaddr_reg:x12; val_offset:3444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3444*FLEN/8, x13, x9, x10)

inst_1170:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4775e5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x363b8c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0dfc36 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4775e5; op2val:0xbeb63b8c;
op3val:0x3e8dfc36; valaddr_reg:x12; val_offset:3447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3447*FLEN/8, x13, x9, x10)

inst_1171:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4775e5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x363b8c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0dfc36 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4775e5; op2val:0xbeb63b8c;
op3val:0x3e8dfc36; valaddr_reg:x12; val_offset:3450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3450*FLEN/8, x13, x9, x10)

inst_1172:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4775e5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x363b8c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0dfc36 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4775e5; op2val:0xbeb63b8c;
op3val:0x3e8dfc36; valaddr_reg:x12; val_offset:3453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3453*FLEN/8, x13, x9, x10)

inst_1173:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4775e5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x363b8c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0dfc36 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4775e5; op2val:0xbeb63b8c;
op3val:0x3e8dfc36; valaddr_reg:x12; val_offset:3456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3456*FLEN/8, x13, x9, x10)

inst_1174:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4775e5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x363b8c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0dfc36 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4775e5; op2val:0xbeb63b8c;
op3val:0x3e8dfc36; valaddr_reg:x12; val_offset:3459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3459*FLEN/8, x13, x9, x10)

inst_1175:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e236f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e07c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8d6e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ece236f; op2val:0xbffe07c9;
op3val:0x3f4c8d6e; valaddr_reg:x12; val_offset:3462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3462*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_9)

inst_1176:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e236f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e07c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8d6e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ece236f; op2val:0xbffe07c9;
op3val:0x3f4c8d6e; valaddr_reg:x12; val_offset:3465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3465*FLEN/8, x13, x9, x10)

inst_1177:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e236f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e07c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8d6e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ece236f; op2val:0xbffe07c9;
op3val:0x3f4c8d6e; valaddr_reg:x12; val_offset:3468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3468*FLEN/8, x13, x9, x10)

inst_1178:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e236f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e07c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8d6e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ece236f; op2val:0xbffe07c9;
op3val:0x3f4c8d6e; valaddr_reg:x12; val_offset:3471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3471*FLEN/8, x13, x9, x10)

inst_1179:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e236f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e07c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8d6e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ece236f; op2val:0xbffe07c9;
op3val:0x3f4c8d6e; valaddr_reg:x12; val_offset:3474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3474*FLEN/8, x13, x9, x10)

inst_1180:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff234 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x32ec29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f93eb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ff234; op2val:0xbfb2ec29;
op3val:0x3edf93eb; valaddr_reg:x12; val_offset:3477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3477*FLEN/8, x13, x9, x10)

inst_1181:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff234 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x32ec29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f93eb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ff234; op2val:0xbfb2ec29;
op3val:0x3edf93eb; valaddr_reg:x12; val_offset:3480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3480*FLEN/8, x13, x9, x10)

inst_1182:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff234 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x32ec29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f93eb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ff234; op2val:0xbfb2ec29;
op3val:0x3edf93eb; valaddr_reg:x12; val_offset:3483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3483*FLEN/8, x13, x9, x10)

inst_1183:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff234 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x32ec29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f93eb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ff234; op2val:0xbfb2ec29;
op3val:0x3edf93eb; valaddr_reg:x12; val_offset:3486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3486*FLEN/8, x13, x9, x10)

inst_1184:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff234 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x32ec29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f93eb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e9ff234; op2val:0xbfb2ec29;
op3val:0x3edf93eb; valaddr_reg:x12; val_offset:3489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3489*FLEN/8, x13, x9, x10)

inst_1185:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bc05c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e408 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e3343 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3bc05c; op2val:0xbf41e408;
op3val:0x3f0e3343; valaddr_reg:x12; val_offset:3492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3492*FLEN/8, x13, x9, x10)

inst_1186:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bc05c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e408 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e3343 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3bc05c; op2val:0xbf41e408;
op3val:0x3f0e3343; valaddr_reg:x12; val_offset:3495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3495*FLEN/8, x13, x9, x10)

inst_1187:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bc05c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e408 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e3343 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3bc05c; op2val:0xbf41e408;
op3val:0x3f0e3343; valaddr_reg:x12; val_offset:3498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3498*FLEN/8, x13, x9, x10)

inst_1188:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bc05c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e408 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e3343 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3bc05c; op2val:0xbf41e408;
op3val:0x3f0e3343; valaddr_reg:x12; val_offset:3501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3501*FLEN/8, x13, x9, x10)

inst_1189:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bc05c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e408 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e3343 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3bc05c; op2val:0xbf41e408;
op3val:0x3f0e3343; valaddr_reg:x12; val_offset:3504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3504*FLEN/8, x13, x9, x10)

inst_1190:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x701276 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x6a7f69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5be85c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bf01276; op2val:0xc2ea7f69;
op3val:0x3f5be85c; valaddr_reg:x12; val_offset:3507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3507*FLEN/8, x13, x9, x10)

inst_1191:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x701276 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x6a7f69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5be85c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bf01276; op2val:0xc2ea7f69;
op3val:0x3f5be85c; valaddr_reg:x12; val_offset:3510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3510*FLEN/8, x13, x9, x10)

inst_1192:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x701276 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x6a7f69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5be85c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bf01276; op2val:0xc2ea7f69;
op3val:0x3f5be85c; valaddr_reg:x12; val_offset:3513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3513*FLEN/8, x13, x9, x10)

inst_1193:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x701276 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x6a7f69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5be85c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bf01276; op2val:0xc2ea7f69;
op3val:0x3f5be85c; valaddr_reg:x12; val_offset:3516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3516*FLEN/8, x13, x9, x10)

inst_1194:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x701276 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x6a7f69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5be85c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3bf01276; op2val:0xc2ea7f69;
op3val:0x3f5be85c; valaddr_reg:x12; val_offset:3519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3519*FLEN/8, x13, x9, x10)

inst_1195:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x436c81 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x083778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff7f9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f436c81; op2val:0xbf083778;
op3val:0x3ecff7f9; valaddr_reg:x12; val_offset:3522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3522*FLEN/8, x13, x9, x10)

inst_1196:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x436c81 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x083778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff7f9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f436c81; op2val:0xbf083778;
op3val:0x3ecff7f9; valaddr_reg:x12; val_offset:3525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3525*FLEN/8, x13, x9, x10)

inst_1197:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x436c81 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x083778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff7f9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f436c81; op2val:0xbf083778;
op3val:0x3ecff7f9; valaddr_reg:x12; val_offset:3528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3528*FLEN/8, x13, x9, x10)

inst_1198:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x436c81 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x083778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff7f9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f436c81; op2val:0xbf083778;
op3val:0x3ecff7f9; valaddr_reg:x12; val_offset:3531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3531*FLEN/8, x13, x9, x10)

inst_1199:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x436c81 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x083778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff7f9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f436c81; op2val:0xbf083778;
op3val:0x3ecff7f9; valaddr_reg:x12; val_offset:3534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3534*FLEN/8, x13, x9, x10)

inst_1200:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23e9e4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a6a88 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x20569f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e23e9e4; op2val:0xbefa6a88;
op3val:0x3da0569f; valaddr_reg:x12; val_offset:3537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3537*FLEN/8, x13, x9, x10)

inst_1201:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23e9e4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a6a88 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x20569f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e23e9e4; op2val:0xbefa6a88;
op3val:0x3da0569f; valaddr_reg:x12; val_offset:3540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3540*FLEN/8, x13, x9, x10)

inst_1202:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23e9e4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a6a88 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x20569f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e23e9e4; op2val:0xbefa6a88;
op3val:0x3da0569f; valaddr_reg:x12; val_offset:3543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3543*FLEN/8, x13, x9, x10)

inst_1203:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23e9e4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a6a88 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x20569f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e23e9e4; op2val:0xbefa6a88;
op3val:0x3da0569f; valaddr_reg:x12; val_offset:3546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3546*FLEN/8, x13, x9, x10)

inst_1204:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23e9e4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a6a88 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x20569f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e23e9e4; op2val:0xbefa6a88;
op3val:0x3da0569f; valaddr_reg:x12; val_offset:3549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3549*FLEN/8, x13, x9, x10)

inst_1205:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19d02d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f701 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6caf96 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f19d02d; op2val:0xbec4f701;
op3val:0x3e6caf96; valaddr_reg:x12; val_offset:3552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3552*FLEN/8, x13, x9, x10)

inst_1206:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19d02d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f701 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6caf96 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f19d02d; op2val:0xbec4f701;
op3val:0x3e6caf96; valaddr_reg:x12; val_offset:3555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3555*FLEN/8, x13, x9, x10)

inst_1207:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19d02d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f701 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6caf96 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f19d02d; op2val:0xbec4f701;
op3val:0x3e6caf96; valaddr_reg:x12; val_offset:3558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3558*FLEN/8, x13, x9, x10)

inst_1208:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19d02d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f701 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6caf96 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f19d02d; op2val:0xbec4f701;
op3val:0x3e6caf96; valaddr_reg:x12; val_offset:3561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3561*FLEN/8, x13, x9, x10)

inst_1209:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19d02d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f701 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6caf96 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f19d02d; op2val:0xbec4f701;
op3val:0x3e6caf96; valaddr_reg:x12; val_offset:3564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3564*FLEN/8, x13, x9, x10)

inst_1210:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61a9af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x324500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d24cf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61a9af; op2val:0xbf324500;
op3val:0x3f1d24cf; valaddr_reg:x12; val_offset:3567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3567*FLEN/8, x13, x9, x10)

inst_1211:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61a9af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x324500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d24cf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61a9af; op2val:0xbf324500;
op3val:0x3f1d24cf; valaddr_reg:x12; val_offset:3570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3570*FLEN/8, x13, x9, x10)

inst_1212:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61a9af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x324500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d24cf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61a9af; op2val:0xbf324500;
op3val:0x3f1d24cf; valaddr_reg:x12; val_offset:3573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3573*FLEN/8, x13, x9, x10)

inst_1213:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61a9af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x324500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d24cf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61a9af; op2val:0xbf324500;
op3val:0x3f1d24cf; valaddr_reg:x12; val_offset:3576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3576*FLEN/8, x13, x9, x10)

inst_1214:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61a9af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x324500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d24cf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f61a9af; op2val:0xbf324500;
op3val:0x3f1d24cf; valaddr_reg:x12; val_offset:3579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3579*FLEN/8, x13, x9, x10)

inst_1215:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12849c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15d4cb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b81f2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e12849c; op2val:0xc015d4cb;
op3val:0x3eab81f2; valaddr_reg:x12; val_offset:3582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3582*FLEN/8, x13, x9, x10)

inst_1216:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12849c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15d4cb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b81f2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e12849c; op2val:0xc015d4cb;
op3val:0x3eab81f2; valaddr_reg:x12; val_offset:3585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3585*FLEN/8, x13, x9, x10)

inst_1217:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12849c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15d4cb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b81f2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e12849c; op2val:0xc015d4cb;
op3val:0x3eab81f2; valaddr_reg:x12; val_offset:3588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3588*FLEN/8, x13, x9, x10)

inst_1218:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12849c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15d4cb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b81f2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e12849c; op2val:0xc015d4cb;
op3val:0x3eab81f2; valaddr_reg:x12; val_offset:3591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3591*FLEN/8, x13, x9, x10)

inst_1219:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12849c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15d4cb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b81f2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e12849c; op2val:0xc015d4cb;
op3val:0x3eab81f2; valaddr_reg:x12; val_offset:3594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3594*FLEN/8, x13, x9, x10)

inst_1220:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0da925 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b54f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4d8721 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0da925; op2val:0xbf39b54f;
op3val:0x3ecd8721; valaddr_reg:x12; val_offset:3597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3597*FLEN/8, x13, x9, x10)

inst_1221:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0da925 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b54f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4d8721 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0da925; op2val:0xbf39b54f;
op3val:0x3ecd8721; valaddr_reg:x12; val_offset:3600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3600*FLEN/8, x13, x9, x10)

inst_1222:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0da925 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b54f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4d8721 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0da925; op2val:0xbf39b54f;
op3val:0x3ecd8721; valaddr_reg:x12; val_offset:3603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3603*FLEN/8, x13, x9, x10)

inst_1223:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0da925 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b54f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4d8721 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0da925; op2val:0xbf39b54f;
op3val:0x3ecd8721; valaddr_reg:x12; val_offset:3606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3606*FLEN/8, x13, x9, x10)

inst_1224:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0da925 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b54f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4d8721 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0da925; op2val:0xbf39b54f;
op3val:0x3ecd8721; valaddr_reg:x12; val_offset:3609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3609*FLEN/8, x13, x9, x10)

inst_1225:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0336f2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x61c854 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6773f3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0336f2; op2val:0xbf61c854;
op3val:0x3ee773f3; valaddr_reg:x12; val_offset:3612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3612*FLEN/8, x13, x9, x10)

inst_1226:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0336f2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x61c854 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6773f3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0336f2; op2val:0xbf61c854;
op3val:0x3ee773f3; valaddr_reg:x12; val_offset:3615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3615*FLEN/8, x13, x9, x10)

inst_1227:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0336f2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x61c854 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6773f3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0336f2; op2val:0xbf61c854;
op3val:0x3ee773f3; valaddr_reg:x12; val_offset:3618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3618*FLEN/8, x13, x9, x10)

inst_1228:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0336f2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x61c854 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6773f3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0336f2; op2val:0xbf61c854;
op3val:0x3ee773f3; valaddr_reg:x12; val_offset:3621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3621*FLEN/8, x13, x9, x10)

inst_1229:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0336f2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x61c854 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6773f3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0336f2; op2val:0xbf61c854;
op3val:0x3ee773f3; valaddr_reg:x12; val_offset:3624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3624*FLEN/8, x13, x9, x10)

inst_1230:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6d7224 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x571875 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x47818c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ded7224; op2val:0xbe571875;
op3val:0x3cc7818c; valaddr_reg:x12; val_offset:3627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3627*FLEN/8, x13, x9, x10)

inst_1231:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6d7224 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x571875 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x47818c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ded7224; op2val:0xbe571875;
op3val:0x3cc7818c; valaddr_reg:x12; val_offset:3630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3630*FLEN/8, x13, x9, x10)

inst_1232:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6d7224 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x571875 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x47818c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ded7224; op2val:0xbe571875;
op3val:0x3cc7818c; valaddr_reg:x12; val_offset:3633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3633*FLEN/8, x13, x9, x10)

inst_1233:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6d7224 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x571875 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x47818c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ded7224; op2val:0xbe571875;
op3val:0x3cc7818c; valaddr_reg:x12; val_offset:3636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3636*FLEN/8, x13, x9, x10)

inst_1234:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6d7224 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x571875 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x47818c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ded7224; op2val:0xbe571875;
op3val:0x3cc7818c; valaddr_reg:x12; val_offset:3639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3639*FLEN/8, x13, x9, x10)

inst_1235:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4cb6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1cd08b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7acc88 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4cb6f9; op2val:0xbe9cd08b;
op3val:0x3e7acc88; valaddr_reg:x12; val_offset:3642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3642*FLEN/8, x13, x9, x10)

inst_1236:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4cb6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1cd08b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7acc88 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4cb6f9; op2val:0xbe9cd08b;
op3val:0x3e7acc88; valaddr_reg:x12; val_offset:3645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3645*FLEN/8, x13, x9, x10)

inst_1237:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4cb6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1cd08b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7acc88 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4cb6f9; op2val:0xbe9cd08b;
op3val:0x3e7acc88; valaddr_reg:x12; val_offset:3648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3648*FLEN/8, x13, x9, x10)

inst_1238:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4cb6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1cd08b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7acc88 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4cb6f9; op2val:0xbe9cd08b;
op3val:0x3e7acc88; valaddr_reg:x12; val_offset:3651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3651*FLEN/8, x13, x9, x10)

inst_1239:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4cb6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1cd08b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7acc88 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4cb6f9; op2val:0xbe9cd08b;
op3val:0x3e7acc88; valaddr_reg:x12; val_offset:3654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3654*FLEN/8, x13, x9, x10)

inst_1240:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x627d58 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x634503 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x491234 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d627d58; op2val:0xc0e34503;
op3val:0x3ec91234; valaddr_reg:x12; val_offset:3657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3657*FLEN/8, x13, x9, x10)

inst_1241:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x627d58 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x634503 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x491234 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d627d58; op2val:0xc0e34503;
op3val:0x3ec91234; valaddr_reg:x12; val_offset:3660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3660*FLEN/8, x13, x9, x10)

inst_1242:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x627d58 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x634503 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x491234 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d627d58; op2val:0xc0e34503;
op3val:0x3ec91234; valaddr_reg:x12; val_offset:3663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3663*FLEN/8, x13, x9, x10)

inst_1243:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x627d58 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x634503 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x491234 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d627d58; op2val:0xc0e34503;
op3val:0x3ec91234; valaddr_reg:x12; val_offset:3666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3666*FLEN/8, x13, x9, x10)

inst_1244:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x627d58 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x634503 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x491234 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d627d58; op2val:0xc0e34503;
op3val:0x3ec91234; valaddr_reg:x12; val_offset:3669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3669*FLEN/8, x13, x9, x10)

inst_1245:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fc274 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20c8df and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20a238 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3effc274; op2val:0xbfa0c8df;
op3val:0x3f20a238; valaddr_reg:x12; val_offset:3672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3672*FLEN/8, x13, x9, x10)

inst_1246:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fc274 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20c8df and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20a238 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3effc274; op2val:0xbfa0c8df;
op3val:0x3f20a238; valaddr_reg:x12; val_offset:3675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3675*FLEN/8, x13, x9, x10)

inst_1247:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fc274 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20c8df and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20a238 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3effc274; op2val:0xbfa0c8df;
op3val:0x3f20a238; valaddr_reg:x12; val_offset:3678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3678*FLEN/8, x13, x9, x10)

inst_1248:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fc274 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20c8df and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20a238 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3effc274; op2val:0xbfa0c8df;
op3val:0x3f20a238; valaddr_reg:x12; val_offset:3681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3681*FLEN/8, x13, x9, x10)

inst_1249:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fc274 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20c8df and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20a238 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3effc274; op2val:0xbfa0c8df;
op3val:0x3f20a238; valaddr_reg:x12; val_offset:3684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3684*FLEN/8, x13, x9, x10)

inst_1250:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x041622 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x500e54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b2c0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f041622; op2val:0xbf500e54;
op3val:0x3ed6b2c0; valaddr_reg:x12; val_offset:3687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3687*FLEN/8, x13, x9, x10)

inst_1251:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x041622 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x500e54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b2c0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f041622; op2val:0xbf500e54;
op3val:0x3ed6b2c0; valaddr_reg:x12; val_offset:3690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3690*FLEN/8, x13, x9, x10)

inst_1252:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x041622 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x500e54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b2c0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f041622; op2val:0xbf500e54;
op3val:0x3ed6b2c0; valaddr_reg:x12; val_offset:3693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3693*FLEN/8, x13, x9, x10)

inst_1253:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x041622 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x500e54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b2c0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f041622; op2val:0xbf500e54;
op3val:0x3ed6b2c0; valaddr_reg:x12; val_offset:3696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3696*FLEN/8, x13, x9, x10)

inst_1254:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x041622 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x500e54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b2c0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f041622; op2val:0xbf500e54;
op3val:0x3ed6b2c0; valaddr_reg:x12; val_offset:3699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3699*FLEN/8, x13, x9, x10)

inst_1255:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46f4cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x11ecc6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d155 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6f4cb; op2val:0xc011ecc6;
op3val:0x3f62d155; valaddr_reg:x12; val_offset:3702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3702*FLEN/8, x13, x9, x10)

inst_1256:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46f4cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x11ecc6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d155 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6f4cb; op2val:0xc011ecc6;
op3val:0x3f62d155; valaddr_reg:x12; val_offset:3705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3705*FLEN/8, x13, x9, x10)

inst_1257:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46f4cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x11ecc6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d155 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6f4cb; op2val:0xc011ecc6;
op3val:0x3f62d155; valaddr_reg:x12; val_offset:3708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3708*FLEN/8, x13, x9, x10)

inst_1258:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46f4cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x11ecc6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d155 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6f4cb; op2val:0xc011ecc6;
op3val:0x3f62d155; valaddr_reg:x12; val_offset:3711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3711*FLEN/8, x13, x9, x10)

inst_1259:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46f4cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x11ecc6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d155 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ec6f4cb; op2val:0xc011ecc6;
op3val:0x3f62d155; valaddr_reg:x12; val_offset:3714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3714*FLEN/8, x13, x9, x10)

inst_1260:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb20d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2384d1 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0d4c1f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ffb20d; op2val:0xbfa384d1;
op3val:0x540d4c1f; valaddr_reg:x12; val_offset:3717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3717*FLEN/8, x13, x9, x10)

inst_1261:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb20d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2384d1 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0d4c1f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ffb20d; op2val:0xbfa384d1;
op3val:0x540d4c1f; valaddr_reg:x12; val_offset:3720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3720*FLEN/8, x13, x9, x10)

inst_1262:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb20d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2384d1 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0d4c1f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ffb20d; op2val:0xbfa384d1;
op3val:0x540d4c1f; valaddr_reg:x12; val_offset:3723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3723*FLEN/8, x13, x9, x10)

inst_1263:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb20d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2384d1 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0d4c1f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ffb20d; op2val:0xbfa384d1;
op3val:0x540d4c1f; valaddr_reg:x12; val_offset:3726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3726*FLEN/8, x13, x9, x10)

inst_1264:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb20d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2384d1 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0d4c1f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ffb20d; op2val:0xbfa384d1;
op3val:0x540d4c1f; valaddr_reg:x12; val_offset:3729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3729*FLEN/8, x13, x9, x10)

inst_1265:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c290e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c12c4 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4b0ba0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548c290e; op2val:0xc00c12c4;
op3val:0x53cb0ba0; valaddr_reg:x12; val_offset:3732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3732*FLEN/8, x13, x9, x10)

inst_1266:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c290e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c12c4 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4b0ba0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548c290e; op2val:0xc00c12c4;
op3val:0x53cb0ba0; valaddr_reg:x12; val_offset:3735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3735*FLEN/8, x13, x9, x10)

inst_1267:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c290e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c12c4 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4b0ba0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548c290e; op2val:0xc00c12c4;
op3val:0x53cb0ba0; valaddr_reg:x12; val_offset:3738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3738*FLEN/8, x13, x9, x10)

inst_1268:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c290e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c12c4 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4b0ba0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548c290e; op2val:0xc00c12c4;
op3val:0x53cb0ba0; valaddr_reg:x12; val_offset:3741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3741*FLEN/8, x13, x9, x10)

inst_1269:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c290e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c12c4 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4b0ba0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548c290e; op2val:0xc00c12c4;
op3val:0x53cb0ba0; valaddr_reg:x12; val_offset:3744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3744*FLEN/8, x13, x9, x10)

inst_1270:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x21a10e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59dd5e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x18d497 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a1a10e; op2val:0xbfd9dd5e;
op3val:0x5318d497; valaddr_reg:x12; val_offset:3747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3747*FLEN/8, x13, x9, x10)

inst_1271:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x21a10e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59dd5e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x18d497 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a1a10e; op2val:0xbfd9dd5e;
op3val:0x5318d497; valaddr_reg:x12; val_offset:3750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3750*FLEN/8, x13, x9, x10)

inst_1272:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x21a10e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59dd5e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x18d497 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a1a10e; op2val:0xbfd9dd5e;
op3val:0x5318d497; valaddr_reg:x12; val_offset:3753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3753*FLEN/8, x13, x9, x10)

inst_1273:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x21a10e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59dd5e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x18d497 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a1a10e; op2val:0xbfd9dd5e;
op3val:0x5318d497; valaddr_reg:x12; val_offset:3756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3756*FLEN/8, x13, x9, x10)

inst_1274:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x21a10e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59dd5e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x18d497 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a1a10e; op2val:0xbfd9dd5e;
op3val:0x5318d497; valaddr_reg:x12; val_offset:3759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3759*FLEN/8, x13, x9, x10)

inst_1275:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x2bb19d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x04225c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x44f507 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x542bb19d; op2val:0xc084225c;
op3val:0x5444f507; valaddr_reg:x12; val_offset:3762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3762*FLEN/8, x13, x9, x10)

inst_1276:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x2bb19d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x04225c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x44f507 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x542bb19d; op2val:0xc084225c;
op3val:0x5444f507; valaddr_reg:x12; val_offset:3765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3765*FLEN/8, x13, x9, x10)

inst_1277:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x2bb19d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x04225c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x44f507 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x542bb19d; op2val:0xc084225c;
op3val:0x5444f507; valaddr_reg:x12; val_offset:3768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3768*FLEN/8, x13, x9, x10)

inst_1278:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x2bb19d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x04225c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x44f507 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x542bb19d; op2val:0xc084225c;
op3val:0x5444f507; valaddr_reg:x12; val_offset:3771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3771*FLEN/8, x13, x9, x10)

inst_1279:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x2bb19d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x04225c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x44f507 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x542bb19d; op2val:0xc084225c;
op3val:0x5444f507; valaddr_reg:x12; val_offset:3774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3774*FLEN/8, x13, x9, x10)

inst_1280:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x203e5e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x180f8a and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x797615 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54203e5e; op2val:0xc0980f8a;
op3val:0x54797615; valaddr_reg:x12; val_offset:3777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3777*FLEN/8, x13, x9, x10)

inst_1281:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x203e5e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x180f8a and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x797615 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54203e5e; op2val:0xc0980f8a;
op3val:0x54797615; valaddr_reg:x12; val_offset:3780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3780*FLEN/8, x13, x9, x10)

inst_1282:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x203e5e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x180f8a and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x797615 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54203e5e; op2val:0xc0980f8a;
op3val:0x54797615; valaddr_reg:x12; val_offset:3783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3783*FLEN/8, x13, x9, x10)

inst_1283:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x203e5e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x180f8a and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x797615 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54203e5e; op2val:0xc0980f8a;
op3val:0x54797615; valaddr_reg:x12; val_offset:3786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3786*FLEN/8, x13, x9, x10)

inst_1284:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x203e5e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x180f8a and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x797615 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54203e5e; op2val:0xc0980f8a;
op3val:0x54797615; valaddr_reg:x12; val_offset:3789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3789*FLEN/8, x13, x9, x10)

inst_1285:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x2206ab and fs2 == 1 and fe2 == 0x82 and fm2 == 0x16bc36 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b383d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53a206ab; op2val:0xc116bc36;
op3val:0x547b383d; valaddr_reg:x12; val_offset:3792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3792*FLEN/8, x13, x9, x10)

inst_1286:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x2206ab and fs2 == 1 and fe2 == 0x82 and fm2 == 0x16bc36 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b383d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53a206ab; op2val:0xc116bc36;
op3val:0x547b383d; valaddr_reg:x12; val_offset:3795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3795*FLEN/8, x13, x9, x10)

inst_1287:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x2206ab and fs2 == 1 and fe2 == 0x82 and fm2 == 0x16bc36 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b383d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53a206ab; op2val:0xc116bc36;
op3val:0x547b383d; valaddr_reg:x12; val_offset:3798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3798*FLEN/8, x13, x9, x10)

inst_1288:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x2206ab and fs2 == 1 and fe2 == 0x82 and fm2 == 0x16bc36 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b383d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53a206ab; op2val:0xc116bc36;
op3val:0x547b383d; valaddr_reg:x12; val_offset:3801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3801*FLEN/8, x13, x9, x10)

inst_1289:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x2206ab and fs2 == 1 and fe2 == 0x82 and fm2 == 0x16bc36 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b383d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53a206ab; op2val:0xc116bc36;
op3val:0x547b383d; valaddr_reg:x12; val_offset:3804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3804*FLEN/8, x13, x9, x10)

inst_1290:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4bab41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03043e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x20f00a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cbab41; op2val:0xc003043e;
op3val:0x54a0f00a; valaddr_reg:x12; val_offset:3807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3807*FLEN/8, x13, x9, x10)

inst_1291:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4bab41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03043e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x20f00a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cbab41; op2val:0xc003043e;
op3val:0x54a0f00a; valaddr_reg:x12; val_offset:3810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3810*FLEN/8, x13, x9, x10)

inst_1292:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4bab41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03043e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x20f00a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cbab41; op2val:0xc003043e;
op3val:0x54a0f00a; valaddr_reg:x12; val_offset:3813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3813*FLEN/8, x13, x9, x10)

inst_1293:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4bab41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03043e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x20f00a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cbab41; op2val:0xc003043e;
op3val:0x54a0f00a; valaddr_reg:x12; val_offset:3816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3816*FLEN/8, x13, x9, x10)

inst_1294:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4bab41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03043e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x20f00a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cbab41; op2val:0xc003043e;
op3val:0x54a0f00a; valaddr_reg:x12; val_offset:3819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3819*FLEN/8, x13, x9, x10)

inst_1295:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x785bd9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00a5a1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x733a6f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54f85bd9; op2val:0xc000a5a1;
op3val:0x54f33a6f; valaddr_reg:x12; val_offset:3822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3822*FLEN/8, x13, x9, x10)

inst_1296:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x785bd9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00a5a1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x733a6f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54f85bd9; op2val:0xc000a5a1;
op3val:0x54f33a6f; valaddr_reg:x12; val_offset:3825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3825*FLEN/8, x13, x9, x10)

inst_1297:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x785bd9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00a5a1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x733a6f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54f85bd9; op2val:0xc000a5a1;
op3val:0x54f33a6f; valaddr_reg:x12; val_offset:3828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3828*FLEN/8, x13, x9, x10)

inst_1298:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x785bd9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00a5a1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x733a6f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54f85bd9; op2val:0xc000a5a1;
op3val:0x54f33a6f; valaddr_reg:x12; val_offset:3831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3831*FLEN/8, x13, x9, x10)

inst_1299:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x785bd9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00a5a1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x733a6f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54f85bd9; op2val:0xc000a5a1;
op3val:0x54f33a6f; valaddr_reg:x12; val_offset:3834*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3834*FLEN/8, x13, x9, x10)

inst_1300:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x747ba9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x44be05 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6f9099 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54747ba9; op2val:0xc044be05;
op3val:0x546f9099; valaddr_reg:x12; val_offset:3837*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3837*FLEN/8, x13, x9, x10)

inst_1301:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x747ba9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x44be05 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6f9099 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54747ba9; op2val:0xc044be05;
op3val:0x546f9099; valaddr_reg:x12; val_offset:3840*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3840*FLEN/8, x13, x9, x10)

inst_1302:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x747ba9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x44be05 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6f9099 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54747ba9; op2val:0xc044be05;
op3val:0x546f9099; valaddr_reg:x12; val_offset:3843*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3843*FLEN/8, x13, x9, x10)

inst_1303:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x747ba9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x44be05 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6f9099 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54747ba9; op2val:0xc044be05;
op3val:0x546f9099; valaddr_reg:x12; val_offset:3846*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3846*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_10)

inst_1304:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x747ba9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x44be05 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6f9099 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54747ba9; op2val:0xc044be05;
op3val:0x546f9099; valaddr_reg:x12; val_offset:3849*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3849*FLEN/8, x13, x9, x10)

inst_1305:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x433195 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dc84e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x61388c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c33195; op2val:0xc01dc84e;
op3val:0x54e1388c; valaddr_reg:x12; val_offset:3852*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3852*FLEN/8, x13, x9, x10)

inst_1306:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x433195 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dc84e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x61388c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c33195; op2val:0xc01dc84e;
op3val:0x54e1388c; valaddr_reg:x12; val_offset:3855*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3855*FLEN/8, x13, x9, x10)

inst_1307:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x433195 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dc84e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x61388c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c33195; op2val:0xc01dc84e;
op3val:0x54e1388c; valaddr_reg:x12; val_offset:3858*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3858*FLEN/8, x13, x9, x10)

inst_1308:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x433195 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dc84e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x61388c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c33195; op2val:0xc01dc84e;
op3val:0x54e1388c; valaddr_reg:x12; val_offset:3861*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3861*FLEN/8, x13, x9, x10)

inst_1309:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x433195 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dc84e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x61388c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c33195; op2val:0xc01dc84e;
op3val:0x54e1388c; valaddr_reg:x12; val_offset:3864*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3864*FLEN/8, x13, x9, x10)

inst_1310:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0a7ecd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x453d98 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2ad399 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548a7ecd; op2val:0xc0453d98;
op3val:0x54aad399; valaddr_reg:x12; val_offset:3867*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3867*FLEN/8, x13, x9, x10)

inst_1311:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0a7ecd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x453d98 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2ad399 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548a7ecd; op2val:0xc0453d98;
op3val:0x54aad399; valaddr_reg:x12; val_offset:3870*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3870*FLEN/8, x13, x9, x10)

inst_1312:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0a7ecd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x453d98 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2ad399 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548a7ecd; op2val:0xc0453d98;
op3val:0x54aad399; valaddr_reg:x12; val_offset:3873*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3873*FLEN/8, x13, x9, x10)

inst_1313:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0a7ecd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x453d98 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2ad399 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548a7ecd; op2val:0xc0453d98;
op3val:0x54aad399; valaddr_reg:x12; val_offset:3876*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3876*FLEN/8, x13, x9, x10)

inst_1314:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0a7ecd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x453d98 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2ad399 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548a7ecd; op2val:0xc0453d98;
op3val:0x54aad399; valaddr_reg:x12; val_offset:3879*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3879*FLEN/8, x13, x9, x10)

inst_1315:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x30d594 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c44fc and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0391cf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b0d594; op2val:0xc00c44fc;
op3val:0x548391cf; valaddr_reg:x12; val_offset:3882*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3882*FLEN/8, x13, x9, x10)

inst_1316:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x30d594 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c44fc and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0391cf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b0d594; op2val:0xc00c44fc;
op3val:0x548391cf; valaddr_reg:x12; val_offset:3885*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3885*FLEN/8, x13, x9, x10)

inst_1317:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x30d594 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c44fc and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0391cf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b0d594; op2val:0xc00c44fc;
op3val:0x548391cf; valaddr_reg:x12; val_offset:3888*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3888*FLEN/8, x13, x9, x10)

inst_1318:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x30d594 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c44fc and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0391cf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b0d594; op2val:0xc00c44fc;
op3val:0x548391cf; valaddr_reg:x12; val_offset:3891*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3891*FLEN/8, x13, x9, x10)

inst_1319:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x30d594 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c44fc and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0391cf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b0d594; op2val:0xc00c44fc;
op3val:0x548391cf; valaddr_reg:x12; val_offset:3894*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3894*FLEN/8, x13, x9, x10)

inst_1320:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x021c6b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x306bec and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4d531f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54821c6b; op2val:0xc0306bec;
op3val:0x544d531f; valaddr_reg:x12; val_offset:3897*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3897*FLEN/8, x13, x9, x10)

inst_1321:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x021c6b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x306bec and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4d531f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54821c6b; op2val:0xc0306bec;
op3val:0x544d531f; valaddr_reg:x12; val_offset:3900*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3900*FLEN/8, x13, x9, x10)

inst_1322:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x021c6b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x306bec and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4d531f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54821c6b; op2val:0xc0306bec;
op3val:0x544d531f; valaddr_reg:x12; val_offset:3903*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3903*FLEN/8, x13, x9, x10)

inst_1323:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x021c6b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x306bec and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4d531f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54821c6b; op2val:0xc0306bec;
op3val:0x544d531f; valaddr_reg:x12; val_offset:3906*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3906*FLEN/8, x13, x9, x10)

inst_1324:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x021c6b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x306bec and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4d531f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54821c6b; op2val:0xc0306bec;
op3val:0x544d531f; valaddr_reg:x12; val_offset:3909*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3909*FLEN/8, x13, x9, x10)

inst_1325:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x65c518 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5239b3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x72bdde and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5465c518; op2val:0xc05239b3;
op3val:0x5472bdde; valaddr_reg:x12; val_offset:3912*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3912*FLEN/8, x13, x9, x10)

inst_1326:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x65c518 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5239b3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x72bdde and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5465c518; op2val:0xc05239b3;
op3val:0x5472bdde; valaddr_reg:x12; val_offset:3915*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3915*FLEN/8, x13, x9, x10)

inst_1327:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x65c518 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5239b3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x72bdde and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5465c518; op2val:0xc05239b3;
op3val:0x5472bdde; valaddr_reg:x12; val_offset:3918*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3918*FLEN/8, x13, x9, x10)

inst_1328:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x65c518 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5239b3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x72bdde and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5465c518; op2val:0xc05239b3;
op3val:0x5472bdde; valaddr_reg:x12; val_offset:3921*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3921*FLEN/8, x13, x9, x10)

inst_1329:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x65c518 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5239b3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x72bdde and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5465c518; op2val:0xc05239b3;
op3val:0x5472bdde; valaddr_reg:x12; val_offset:3924*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3924*FLEN/8, x13, x9, x10)

inst_1330:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d83d0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x38ec27 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x23a299 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cd83d0; op2val:0xbfb8ec27;
op3val:0x53a3a299; valaddr_reg:x12; val_offset:3927*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3927*FLEN/8, x13, x9, x10)

inst_1331:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d83d0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x38ec27 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x23a299 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cd83d0; op2val:0xbfb8ec27;
op3val:0x53a3a299; valaddr_reg:x12; val_offset:3930*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3930*FLEN/8, x13, x9, x10)

inst_1332:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d83d0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x38ec27 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x23a299 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cd83d0; op2val:0xbfb8ec27;
op3val:0x53a3a299; valaddr_reg:x12; val_offset:3933*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3933*FLEN/8, x13, x9, x10)

inst_1333:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d83d0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x38ec27 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x23a299 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cd83d0; op2val:0xbfb8ec27;
op3val:0x53a3a299; valaddr_reg:x12; val_offset:3936*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3936*FLEN/8, x13, x9, x10)

inst_1334:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d83d0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x38ec27 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x23a299 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cd83d0; op2val:0xbfb8ec27;
op3val:0x53a3a299; valaddr_reg:x12; val_offset:3939*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3939*FLEN/8, x13, x9, x10)

inst_1335:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x70f4b0 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x02c834 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6c62c7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5370f4b0; op2val:0xc182c834;
op3val:0x54ec62c7; valaddr_reg:x12; val_offset:3942*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3942*FLEN/8, x13, x9, x10)

inst_1336:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x70f4b0 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x02c834 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6c62c7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5370f4b0; op2val:0xc182c834;
op3val:0x54ec62c7; valaddr_reg:x12; val_offset:3945*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3945*FLEN/8, x13, x9, x10)

inst_1337:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x70f4b0 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x02c834 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6c62c7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5370f4b0; op2val:0xc182c834;
op3val:0x54ec62c7; valaddr_reg:x12; val_offset:3948*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3948*FLEN/8, x13, x9, x10)

inst_1338:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x70f4b0 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x02c834 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6c62c7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5370f4b0; op2val:0xc182c834;
op3val:0x54ec62c7; valaddr_reg:x12; val_offset:3951*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3951*FLEN/8, x13, x9, x10)

inst_1339:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x70f4b0 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x02c834 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6c62c7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5370f4b0; op2val:0xc182c834;
op3val:0x54ec62c7; valaddr_reg:x12; val_offset:3954*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3954*FLEN/8, x13, x9, x10)

inst_1340:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02a347 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54d12c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3267d4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5482a347; op2val:0xc054d12c;
op3val:0x54b267d4; valaddr_reg:x12; val_offset:3957*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3957*FLEN/8, x13, x9, x10)

inst_1341:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02a347 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54d12c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3267d4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5482a347; op2val:0xc054d12c;
op3val:0x54b267d4; valaddr_reg:x12; val_offset:3960*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3960*FLEN/8, x13, x9, x10)

inst_1342:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02a347 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54d12c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3267d4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5482a347; op2val:0xc054d12c;
op3val:0x54b267d4; valaddr_reg:x12; val_offset:3963*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3963*FLEN/8, x13, x9, x10)

inst_1343:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02a347 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54d12c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3267d4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5482a347; op2val:0xc054d12c;
op3val:0x54b267d4; valaddr_reg:x12; val_offset:3966*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3966*FLEN/8, x13, x9, x10)

inst_1344:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02a347 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54d12c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3267d4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5482a347; op2val:0xc054d12c;
op3val:0x54b267d4; valaddr_reg:x12; val_offset:3969*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3969*FLEN/8, x13, x9, x10)

inst_1345:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6a70f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72ad38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3c7acb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ea70f1; op2val:0xbff2ad38;
op3val:0x54bc7acb; valaddr_reg:x12; val_offset:3972*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3972*FLEN/8, x13, x9, x10)

inst_1346:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6a70f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72ad38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3c7acb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ea70f1; op2val:0xbff2ad38;
op3val:0x54bc7acb; valaddr_reg:x12; val_offset:3975*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3975*FLEN/8, x13, x9, x10)

inst_1347:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6a70f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72ad38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3c7acb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ea70f1; op2val:0xbff2ad38;
op3val:0x54bc7acb; valaddr_reg:x12; val_offset:3978*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3978*FLEN/8, x13, x9, x10)

inst_1348:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6a70f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72ad38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3c7acb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ea70f1; op2val:0xbff2ad38;
op3val:0x54bc7acb; valaddr_reg:x12; val_offset:3981*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3981*FLEN/8, x13, x9, x10)

inst_1349:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6a70f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72ad38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3c7acb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54ea70f1; op2val:0xbff2ad38;
op3val:0x54bc7acb; valaddr_reg:x12; val_offset:3984*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3984*FLEN/8, x13, x9, x10)

inst_1350:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x110520 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c8a9a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x73bbb2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54910520; op2val:0xc05c8a9a;
op3val:0x54f3bbb2; valaddr_reg:x12; val_offset:3987*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3987*FLEN/8, x13, x9, x10)

inst_1351:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x110520 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c8a9a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x73bbb2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54910520; op2val:0xc05c8a9a;
op3val:0x54f3bbb2; valaddr_reg:x12; val_offset:3990*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3990*FLEN/8, x13, x9, x10)

inst_1352:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x110520 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c8a9a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x73bbb2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54910520; op2val:0xc05c8a9a;
op3val:0x54f3bbb2; valaddr_reg:x12; val_offset:3993*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3993*FLEN/8, x13, x9, x10)

inst_1353:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x110520 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c8a9a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x73bbb2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54910520; op2val:0xc05c8a9a;
op3val:0x54f3bbb2; valaddr_reg:x12; val_offset:3996*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3996*FLEN/8, x13, x9, x10)

inst_1354:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x110520 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c8a9a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x73bbb2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54910520; op2val:0xc05c8a9a;
op3val:0x54f3bbb2; valaddr_reg:x12; val_offset:3999*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3999*FLEN/8, x13, x9, x10)

inst_1355:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1fc5ce and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14590c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x64af77 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x549fc5ce; op2val:0xc014590c;
op3val:0x5464af77; valaddr_reg:x12; val_offset:4002*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4002*FLEN/8, x13, x9, x10)

inst_1356:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1fc5ce and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14590c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x64af77 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x549fc5ce; op2val:0xc014590c;
op3val:0x5464af77; valaddr_reg:x12; val_offset:4005*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4005*FLEN/8, x13, x9, x10)

inst_1357:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1fc5ce and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14590c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x64af77 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x549fc5ce; op2val:0xc014590c;
op3val:0x5464af77; valaddr_reg:x12; val_offset:4008*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4008*FLEN/8, x13, x9, x10)

inst_1358:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1fc5ce and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14590c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x64af77 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x549fc5ce; op2val:0xc014590c;
op3val:0x5464af77; valaddr_reg:x12; val_offset:4011*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4011*FLEN/8, x13, x9, x10)

inst_1359:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1fc5ce and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14590c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x64af77 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x549fc5ce; op2val:0xc014590c;
op3val:0x5464af77; valaddr_reg:x12; val_offset:4014*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4014*FLEN/8, x13, x9, x10)

inst_1360:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x3b1509 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4b0d5a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x231b80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53bb1509; op2val:0xc0cb0d5a;
op3val:0x53a31b80; valaddr_reg:x12; val_offset:4017*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4017*FLEN/8, x13, x9, x10)

inst_1361:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x3b1509 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4b0d5a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x231b80 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53bb1509; op2val:0xc0cb0d5a;
op3val:0x53a31b80; valaddr_reg:x12; val_offset:4020*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4020*FLEN/8, x13, x9, x10)

inst_1362:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x3b1509 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4b0d5a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x231b80 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53bb1509; op2val:0xc0cb0d5a;
op3val:0x53a31b80; valaddr_reg:x12; val_offset:4023*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4023*FLEN/8, x13, x9, x10)

inst_1363:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x3b1509 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4b0d5a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x231b80 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53bb1509; op2val:0xc0cb0d5a;
op3val:0x53a31b80; valaddr_reg:x12; val_offset:4026*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4026*FLEN/8, x13, x9, x10)

inst_1364:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x3b1509 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4b0d5a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x231b80 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53bb1509; op2val:0xc0cb0d5a;
op3val:0x53a31b80; valaddr_reg:x12; val_offset:4029*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4029*FLEN/8, x13, x9, x10)

inst_1365:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad8a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x192f18 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x658336 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cad8a7; op2val:0xc0192f18;
op3val:0x54e58336; valaddr_reg:x12; val_offset:4032*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4032*FLEN/8, x13, x9, x10)

inst_1366:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad8a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x192f18 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x658336 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cad8a7; op2val:0xc0192f18;
op3val:0x54e58336; valaddr_reg:x12; val_offset:4035*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4035*FLEN/8, x13, x9, x10)

inst_1367:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad8a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x192f18 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x658336 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cad8a7; op2val:0xc0192f18;
op3val:0x54e58336; valaddr_reg:x12; val_offset:4038*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4038*FLEN/8, x13, x9, x10)

inst_1368:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad8a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x192f18 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x658336 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cad8a7; op2val:0xc0192f18;
op3val:0x54e58336; valaddr_reg:x12; val_offset:4041*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4041*FLEN/8, x13, x9, x10)

inst_1369:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad8a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x192f18 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x658336 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54cad8a7; op2val:0xc0192f18;
op3val:0x54e58336; valaddr_reg:x12; val_offset:4044*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4044*FLEN/8, x13, x9, x10)

inst_1370:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x36cf07 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x09094d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x076dbd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5436cf07; op2val:0xc089094d;
op3val:0x54876dbd; valaddr_reg:x12; val_offset:4047*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4047*FLEN/8, x13, x9, x10)

inst_1371:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x36cf07 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x09094d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x076dbd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5436cf07; op2val:0xc089094d;
op3val:0x54876dbd; valaddr_reg:x12; val_offset:4050*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4050*FLEN/8, x13, x9, x10)

inst_1372:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x36cf07 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x09094d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x076dbd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5436cf07; op2val:0xc089094d;
op3val:0x54876dbd; valaddr_reg:x12; val_offset:4053*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4053*FLEN/8, x13, x9, x10)

inst_1373:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x36cf07 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x09094d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x076dbd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5436cf07; op2val:0xc089094d;
op3val:0x54876dbd; valaddr_reg:x12; val_offset:4056*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4056*FLEN/8, x13, x9, x10)

inst_1374:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x36cf07 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x09094d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x076dbd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5436cf07; op2val:0xc089094d;
op3val:0x54876dbd; valaddr_reg:x12; val_offset:4059*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4059*FLEN/8, x13, x9, x10)

inst_1375:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2db3a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x178dc0 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1b549c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54adb3a8; op2val:0xc0178dc0;
op3val:0x549b549c; valaddr_reg:x12; val_offset:4062*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4062*FLEN/8, x13, x9, x10)

inst_1376:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2db3a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x178dc0 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1b549c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54adb3a8; op2val:0xc0178dc0;
op3val:0x549b549c; valaddr_reg:x12; val_offset:4065*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4065*FLEN/8, x13, x9, x10)

inst_1377:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2db3a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x178dc0 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1b549c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54adb3a8; op2val:0xc0178dc0;
op3val:0x549b549c; valaddr_reg:x12; val_offset:4068*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4068*FLEN/8, x13, x9, x10)

inst_1378:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2db3a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x178dc0 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1b549c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54adb3a8; op2val:0xc0178dc0;
op3val:0x549b549c; valaddr_reg:x12; val_offset:4071*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4071*FLEN/8, x13, x9, x10)

inst_1379:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2db3a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x178dc0 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1b549c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54adb3a8; op2val:0xc0178dc0;
op3val:0x549b549c; valaddr_reg:x12; val_offset:4074*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4074*FLEN/8, x13, x9, x10)

inst_1380:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0cf910 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5e23a3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x694e72 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540cf910; op2val:0xc0de23a3;
op3val:0x54e94e72; valaddr_reg:x12; val_offset:4077*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4077*FLEN/8, x13, x9, x10)

inst_1381:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0cf910 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5e23a3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x694e72 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540cf910; op2val:0xc0de23a3;
op3val:0x54e94e72; valaddr_reg:x12; val_offset:4080*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4080*FLEN/8, x13, x9, x10)

inst_1382:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0cf910 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5e23a3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x694e72 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540cf910; op2val:0xc0de23a3;
op3val:0x54e94e72; valaddr_reg:x12; val_offset:4083*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4083*FLEN/8, x13, x9, x10)

inst_1383:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0cf910 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5e23a3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x694e72 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540cf910; op2val:0xc0de23a3;
op3val:0x54e94e72; valaddr_reg:x12; val_offset:4086*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4086*FLEN/8, x13, x9, x10)

inst_1384:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0cf910 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5e23a3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x694e72 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x540cf910; op2val:0xc0de23a3;
op3val:0x54e94e72; valaddr_reg:x12; val_offset:4089*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4089*FLEN/8, x13, x9, x10)

inst_1385:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d4a71 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46c9a2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x36db72 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548d4a71; op2val:0xc046c9a2;
op3val:0x54b6db72; valaddr_reg:x12; val_offset:4092*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4092*FLEN/8, x13, x9, x10)

inst_1386:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d4a71 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46c9a2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x36db72 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548d4a71; op2val:0xc046c9a2;
op3val:0x54b6db72; valaddr_reg:x12; val_offset:4095*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4095*FLEN/8, x13, x9, x10)

inst_1387:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d4a71 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46c9a2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x36db72 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548d4a71; op2val:0xc046c9a2;
op3val:0x54b6db72; valaddr_reg:x12; val_offset:4098*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4098*FLEN/8, x13, x9, x10)

inst_1388:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d4a71 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46c9a2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x36db72 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548d4a71; op2val:0xc046c9a2;
op3val:0x54b6db72; valaddr_reg:x12; val_offset:4101*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4101*FLEN/8, x13, x9, x10)

inst_1389:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d4a71 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46c9a2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x36db72 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548d4a71; op2val:0xc046c9a2;
op3val:0x54b6db72; valaddr_reg:x12; val_offset:4104*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4104*FLEN/8, x13, x9, x10)

inst_1390:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x303b3b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x05b7f8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x606b5a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b03b3b; op2val:0xc005b7f8;
op3val:0x54606b5a; valaddr_reg:x12; val_offset:4107*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4107*FLEN/8, x13, x9, x10)

inst_1391:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x303b3b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x05b7f8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x606b5a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b03b3b; op2val:0xc005b7f8;
op3val:0x54606b5a; valaddr_reg:x12; val_offset:4110*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4110*FLEN/8, x13, x9, x10)

inst_1392:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x303b3b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x05b7f8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x606b5a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b03b3b; op2val:0xc005b7f8;
op3val:0x54606b5a; valaddr_reg:x12; val_offset:4113*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4113*FLEN/8, x13, x9, x10)

inst_1393:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x303b3b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x05b7f8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x606b5a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b03b3b; op2val:0xc005b7f8;
op3val:0x54606b5a; valaddr_reg:x12; val_offset:4116*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4116*FLEN/8, x13, x9, x10)

inst_1394:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x303b3b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x05b7f8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x606b5a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b03b3b; op2val:0xc005b7f8;
op3val:0x54606b5a; valaddr_reg:x12; val_offset:4119*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4119*FLEN/8, x13, x9, x10)

inst_1395:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3382f5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59340b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x427400 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b382f5; op2val:0xbfd9340b;
op3val:0x53c27400; valaddr_reg:x12; val_offset:4122*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4122*FLEN/8, x13, x9, x10)

inst_1396:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3382f5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59340b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x427400 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b382f5; op2val:0xbfd9340b;
op3val:0x53c27400; valaddr_reg:x12; val_offset:4125*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4125*FLEN/8, x13, x9, x10)

inst_1397:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3382f5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59340b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x427400 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b382f5; op2val:0xbfd9340b;
op3val:0x53c27400; valaddr_reg:x12; val_offset:4128*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4128*FLEN/8, x13, x9, x10)

inst_1398:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3382f5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59340b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x427400 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b382f5; op2val:0xbfd9340b;
op3val:0x53c27400; valaddr_reg:x12; val_offset:4131*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4131*FLEN/8, x13, x9, x10)

inst_1399:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3382f5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59340b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x427400 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b382f5; op2val:0xbfd9340b;
op3val:0x53c27400; valaddr_reg:x12; val_offset:4134*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4134*FLEN/8, x13, x9, x10)

inst_1400:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c4283 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x40ea56 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x26c91b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548c4283; op2val:0xc040ea56;
op3val:0x54a6c91b; valaddr_reg:x12; val_offset:4137*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4137*FLEN/8, x13, x9, x10)

inst_1401:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c4283 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x40ea56 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x26c91b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548c4283; op2val:0xc040ea56;
op3val:0x54a6c91b; valaddr_reg:x12; val_offset:4140*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4140*FLEN/8, x13, x9, x10)

inst_1402:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c4283 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x40ea56 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x26c91b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548c4283; op2val:0xc040ea56;
op3val:0x54a6c91b; valaddr_reg:x12; val_offset:4143*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4143*FLEN/8, x13, x9, x10)

inst_1403:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c4283 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x40ea56 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x26c91b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548c4283; op2val:0xc040ea56;
op3val:0x54a6c91b; valaddr_reg:x12; val_offset:4146*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4146*FLEN/8, x13, x9, x10)

inst_1404:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c4283 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x40ea56 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x26c91b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548c4283; op2val:0xc040ea56;
op3val:0x54a6c91b; valaddr_reg:x12; val_offset:4149*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4149*FLEN/8, x13, x9, x10)

inst_1405:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x211cc4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0369b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x15a1fb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a11cc4; op2val:0xc00369b5;
op3val:0x5415a1fb; valaddr_reg:x12; val_offset:4152*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4152*FLEN/8, x13, x9, x10)

inst_1406:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x211cc4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0369b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x15a1fb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a11cc4; op2val:0xc00369b5;
op3val:0x5415a1fb; valaddr_reg:x12; val_offset:4155*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4155*FLEN/8, x13, x9, x10)

inst_1407:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x211cc4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0369b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x15a1fb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a11cc4; op2val:0xc00369b5;
op3val:0x5415a1fb; valaddr_reg:x12; val_offset:4158*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4158*FLEN/8, x13, x9, x10)

inst_1408:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x211cc4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0369b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x15a1fb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a11cc4; op2val:0xc00369b5;
op3val:0x5415a1fb; valaddr_reg:x12; val_offset:4161*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4161*FLEN/8, x13, x9, x10)

inst_1409:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x211cc4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0369b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x15a1fb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54a11cc4; op2val:0xc00369b5;
op3val:0x5415a1fb; valaddr_reg:x12; val_offset:4164*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4164*FLEN/8, x13, x9, x10)

inst_1410:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x39ce0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4238a6 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4f7431 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b9ce0c; op2val:0xc0c238a6;
op3val:0x534f7431; valaddr_reg:x12; val_offset:4167*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4167*FLEN/8, x13, x9, x10)

inst_1411:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x39ce0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4238a6 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4f7431 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b9ce0c; op2val:0xc0c238a6;
op3val:0x534f7431; valaddr_reg:x12; val_offset:4170*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4170*FLEN/8, x13, x9, x10)

inst_1412:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x39ce0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4238a6 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4f7431 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b9ce0c; op2val:0xc0c238a6;
op3val:0x534f7431; valaddr_reg:x12; val_offset:4173*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4173*FLEN/8, x13, x9, x10)

inst_1413:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x39ce0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4238a6 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4f7431 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b9ce0c; op2val:0xc0c238a6;
op3val:0x534f7431; valaddr_reg:x12; val_offset:4176*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4176*FLEN/8, x13, x9, x10)

inst_1414:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x39ce0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4238a6 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4f7431 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53b9ce0c; op2val:0xc0c238a6;
op3val:0x534f7431; valaddr_reg:x12; val_offset:4179*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4179*FLEN/8, x13, x9, x10)

inst_1415:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x7d89a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x190f1f and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x3cb1dc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x537d89a0; op2val:0xc1190f1f;
op3val:0x53bcb1dc; valaddr_reg:x12; val_offset:4182*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4182*FLEN/8, x13, x9, x10)

inst_1416:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x7d89a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x190f1f and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x3cb1dc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x537d89a0; op2val:0xc1190f1f;
op3val:0x53bcb1dc; valaddr_reg:x12; val_offset:4185*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4185*FLEN/8, x13, x9, x10)

inst_1417:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x7d89a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x190f1f and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x3cb1dc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x537d89a0; op2val:0xc1190f1f;
op3val:0x53bcb1dc; valaddr_reg:x12; val_offset:4188*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4188*FLEN/8, x13, x9, x10)

inst_1418:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x7d89a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x190f1f and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x3cb1dc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x537d89a0; op2val:0xc1190f1f;
op3val:0x53bcb1dc; valaddr_reg:x12; val_offset:4191*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4191*FLEN/8, x13, x9, x10)

inst_1419:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x7d89a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x190f1f and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x3cb1dc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x537d89a0; op2val:0xc1190f1f;
op3val:0x53bcb1dc; valaddr_reg:x12; val_offset:4194*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4194*FLEN/8, x13, x9, x10)

inst_1420:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x788342 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ed1c7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x118a89 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54788342; op2val:0xc04ed1c7;
op3val:0x54918a89; valaddr_reg:x12; val_offset:4197*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4197*FLEN/8, x13, x9, x10)

inst_1421:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x788342 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ed1c7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x118a89 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54788342; op2val:0xc04ed1c7;
op3val:0x54918a89; valaddr_reg:x12; val_offset:4200*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4200*FLEN/8, x13, x9, x10)

inst_1422:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x788342 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ed1c7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x118a89 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54788342; op2val:0xc04ed1c7;
op3val:0x54918a89; valaddr_reg:x12; val_offset:4203*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4203*FLEN/8, x13, x9, x10)

inst_1423:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x788342 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ed1c7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x118a89 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54788342; op2val:0xc04ed1c7;
op3val:0x54918a89; valaddr_reg:x12; val_offset:4206*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4206*FLEN/8, x13, x9, x10)

inst_1424:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x788342 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ed1c7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x118a89 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54788342; op2val:0xc04ed1c7;
op3val:0x54918a89; valaddr_reg:x12; val_offset:4209*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4209*FLEN/8, x13, x9, x10)

inst_1425:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x34bd6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x025a6e and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x60404f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b4bd6c; op2val:0xc0025a6e;
op3val:0x5460404f; valaddr_reg:x12; val_offset:4212*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4212*FLEN/8, x13, x9, x10)

inst_1426:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x34bd6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x025a6e and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x60404f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b4bd6c; op2val:0xc0025a6e;
op3val:0x5460404f; valaddr_reg:x12; val_offset:4215*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4215*FLEN/8, x13, x9, x10)

inst_1427:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x34bd6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x025a6e and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x60404f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b4bd6c; op2val:0xc0025a6e;
op3val:0x5460404f; valaddr_reg:x12; val_offset:4218*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4218*FLEN/8, x13, x9, x10)

inst_1428:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x34bd6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x025a6e and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x60404f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b4bd6c; op2val:0xc0025a6e;
op3val:0x5460404f; valaddr_reg:x12; val_offset:4221*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4221*FLEN/8, x13, x9, x10)

inst_1429:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x34bd6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x025a6e and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x60404f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54b4bd6c; op2val:0xc0025a6e;
op3val:0x5460404f; valaddr_reg:x12; val_offset:4224*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4224*FLEN/8, x13, x9, x10)

inst_1430:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x448a6f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba8d5 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x7285de and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c48a6f; op2val:0xbfaba8d5;
op3val:0x527285de; valaddr_reg:x12; val_offset:4227*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4227*FLEN/8, x13, x9, x10)

inst_1431:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x448a6f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba8d5 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x7285de and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c48a6f; op2val:0xbfaba8d5;
op3val:0x527285de; valaddr_reg:x12; val_offset:4230*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4230*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_11)

inst_1432:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x448a6f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba8d5 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x7285de and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c48a6f; op2val:0xbfaba8d5;
op3val:0x527285de; valaddr_reg:x12; val_offset:4233*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4233*FLEN/8, x13, x9, x10)

inst_1433:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x448a6f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba8d5 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x7285de and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c48a6f; op2val:0xbfaba8d5;
op3val:0x527285de; valaddr_reg:x12; val_offset:4236*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4236*FLEN/8, x13, x9, x10)

inst_1434:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x448a6f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba8d5 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x7285de and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54c48a6f; op2val:0xbfaba8d5;
op3val:0x527285de; valaddr_reg:x12; val_offset:4239*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4239*FLEN/8, x13, x9, x10)

inst_1435:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x32530e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4dae06 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x745bac and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5432530e; op2val:0xc04dae06;
op3val:0x53745bac; valaddr_reg:x12; val_offset:4242*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4242*FLEN/8, x13, x9, x10)

inst_1436:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x32530e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4dae06 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x745bac and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5432530e; op2val:0xc04dae06;
op3val:0x53745bac; valaddr_reg:x12; val_offset:4245*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4245*FLEN/8, x13, x9, x10)

inst_1437:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x32530e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4dae06 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x745bac and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5432530e; op2val:0xc04dae06;
op3val:0x53745bac; valaddr_reg:x12; val_offset:4248*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4248*FLEN/8, x13, x9, x10)

inst_1438:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x32530e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4dae06 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x745bac and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5432530e; op2val:0xc04dae06;
op3val:0x53745bac; valaddr_reg:x12; val_offset:4251*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4251*FLEN/8, x13, x9, x10)

inst_1439:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x32530e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4dae06 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x745bac and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5432530e; op2val:0xc04dae06;
op3val:0x53745bac; valaddr_reg:x12; val_offset:4254*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4254*FLEN/8, x13, x9, x10)

inst_1440:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0436e3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x42dc89 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x128df9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548436e3; op2val:0xc042dc89;
op3val:0x54928df9; valaddr_reg:x12; val_offset:4257*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4257*FLEN/8, x13, x9, x10)

inst_1441:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0436e3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x42dc89 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x128df9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548436e3; op2val:0xc042dc89;
op3val:0x54928df9; valaddr_reg:x12; val_offset:4260*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4260*FLEN/8, x13, x9, x10)

inst_1442:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0436e3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x42dc89 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x128df9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548436e3; op2val:0xc042dc89;
op3val:0x54928df9; valaddr_reg:x12; val_offset:4263*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4263*FLEN/8, x13, x9, x10)

inst_1443:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0436e3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x42dc89 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x128df9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548436e3; op2val:0xc042dc89;
op3val:0x54928df9; valaddr_reg:x12; val_offset:4266*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4266*FLEN/8, x13, x9, x10)

inst_1444:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0436e3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x42dc89 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x128df9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x548436e3; op2val:0xc042dc89;
op3val:0x54928df9; valaddr_reg:x12; val_offset:4269*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4269*FLEN/8, x13, x9, x10)

inst_1445:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x154ef4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1e67a4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x63196c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54954ef4; op2val:0xc01e67a4;
op3val:0x5463196c; valaddr_reg:x12; val_offset:4272*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4272*FLEN/8, x13, x9, x10)

inst_1446:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x154ef4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1e67a4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x63196c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54954ef4; op2val:0xc01e67a4;
op3val:0x5463196c; valaddr_reg:x12; val_offset:4275*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4275*FLEN/8, x13, x9, x10)

inst_1447:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x154ef4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1e67a4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x63196c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54954ef4; op2val:0xc01e67a4;
op3val:0x5463196c; valaddr_reg:x12; val_offset:4278*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4278*FLEN/8, x13, x9, x10)

inst_1448:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x154ef4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1e67a4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x63196c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54954ef4; op2val:0xc01e67a4;
op3val:0x5463196c; valaddr_reg:x12; val_offset:4281*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4281*FLEN/8, x13, x9, x10)

inst_1449:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x154ef4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1e67a4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x63196c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x54954ef4; op2val:0xc01e67a4;
op3val:0x5463196c; valaddr_reg:x12; val_offset:4284*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4284*FLEN/8, x13, x9, x10)

inst_1450:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3c7d3c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x66f57d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x28350f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543c7d3c; op2val:0xc066f57d;
op3val:0x5428350f; valaddr_reg:x12; val_offset:4287*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4287*FLEN/8, x13, x9, x10)

inst_1451:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3c7d3c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x66f57d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x28350f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543c7d3c; op2val:0xc066f57d;
op3val:0x5428350f; valaddr_reg:x12; val_offset:4290*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4290*FLEN/8, x13, x9, x10)

inst_1452:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3c7d3c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x66f57d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x28350f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543c7d3c; op2val:0xc066f57d;
op3val:0x5428350f; valaddr_reg:x12; val_offset:4293*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4293*FLEN/8, x13, x9, x10)

inst_1453:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3c7d3c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x66f57d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x28350f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543c7d3c; op2val:0xc066f57d;
op3val:0x5428350f; valaddr_reg:x12; val_offset:4296*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4296*FLEN/8, x13, x9, x10)

inst_1454:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3c7d3c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x66f57d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x28350f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x543c7d3c; op2val:0xc066f57d;
op3val:0x5428350f; valaddr_reg:x12; val_offset:4299*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4299*FLEN/8, x13, x9, x10)

inst_1455:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x598ea5 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x33bb46 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x45ef23 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53598ea5; op2val:0xc133bb46;
op3val:0x53c5ef23; valaddr_reg:x12; val_offset:4302*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4302*FLEN/8, x13, x9, x10)

inst_1456:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x598ea5 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x33bb46 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x45ef23 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53598ea5; op2val:0xc133bb46;
op3val:0x53c5ef23; valaddr_reg:x12; val_offset:4305*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4305*FLEN/8, x13, x9, x10)

inst_1457:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x598ea5 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x33bb46 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x45ef23 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53598ea5; op2val:0xc133bb46;
op3val:0x53c5ef23; valaddr_reg:x12; val_offset:4308*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4308*FLEN/8, x13, x9, x10)

inst_1458:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x598ea5 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x33bb46 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x45ef23 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53598ea5; op2val:0xc133bb46;
op3val:0x53c5ef23; valaddr_reg:x12; val_offset:4311*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4311*FLEN/8, x13, x9, x10)

inst_1459:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x598ea5 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x33bb46 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x45ef23 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x53598ea5; op2val:0xc133bb46;
op3val:0x53c5ef23; valaddr_reg:x12; val_offset:4314*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4314*FLEN/8, x13, x9, x10)

inst_1460:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79182d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e3852 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x115083 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5479182d; op2val:0xc04e3852;
op3val:0x54915083; valaddr_reg:x12; val_offset:4317*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4317*FLEN/8, x13, x9, x10)

inst_1461:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79182d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e3852 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x115083 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5479182d; op2val:0xc04e3852;
op3val:0x54915083; valaddr_reg:x12; val_offset:4320*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4320*FLEN/8, x13, x9, x10)

inst_1462:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79182d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e3852 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x115083 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5479182d; op2val:0xc04e3852;
op3val:0x54915083; valaddr_reg:x12; val_offset:4323*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4323*FLEN/8, x13, x9, x10)

inst_1463:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79182d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e3852 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x115083 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5479182d; op2val:0xc04e3852;
op3val:0x54915083; valaddr_reg:x12; val_offset:4326*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4326*FLEN/8, x13, x9, x10)

inst_1464:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79182d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e3852 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x115083 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5479182d; op2val:0xc04e3852;
op3val:0x54915083; valaddr_reg:x12; val_offset:4329*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4329*FLEN/8, x13, x9, x10)

inst_1465:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4dcb57 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x12e5ee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x585b38 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x534dcb57; op2val:0xc192e5ee;
op3val:0x54d85b38; valaddr_reg:x12; val_offset:4332*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4332*FLEN/8, x13, x9, x10)

inst_1466:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4dcb57 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x12e5ee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x585b38 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x534dcb57; op2val:0xc192e5ee;
op3val:0x54d85b38; valaddr_reg:x12; val_offset:4335*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4335*FLEN/8, x13, x9, x10)

inst_1467:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4dcb57 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x12e5ee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x585b38 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x534dcb57; op2val:0xc192e5ee;
op3val:0x54d85b38; valaddr_reg:x12; val_offset:4338*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4338*FLEN/8, x13, x9, x10)

inst_1468:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4dcb57 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x12e5ee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x585b38 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x534dcb57; op2val:0xc192e5ee;
op3val:0x54d85b38; valaddr_reg:x12; val_offset:4341*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4341*FLEN/8, x13, x9, x10)

inst_1469:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4dcb57 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x12e5ee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x585b38 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x534dcb57; op2val:0xc192e5ee;
op3val:0x54d85b38; valaddr_reg:x12; val_offset:4344*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4344*FLEN/8, x13, x9, x10)

inst_1470:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78e626 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6618b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fb6cf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78e626; op2val:0xbf6618b8;
op3val:0x3f5fb6cf; valaddr_reg:x12; val_offset:4347*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4347*FLEN/8, x13, x9, x10)

inst_1471:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78e626 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6618b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fb6cf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78e626; op2val:0xbf6618b8;
op3val:0x3f5fb6cf; valaddr_reg:x12; val_offset:4350*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4350*FLEN/8, x13, x9, x10)

inst_1472:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78e626 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6618b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fb6cf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78e626; op2val:0xbf6618b8;
op3val:0x3f5fb6cf; valaddr_reg:x12; val_offset:4353*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4353*FLEN/8, x13, x9, x10)

inst_1473:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78e626 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6618b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fb6cf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78e626; op2val:0xbf6618b8;
op3val:0x3f5fb6cf; valaddr_reg:x12; val_offset:4356*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4356*FLEN/8, x13, x9, x10)

inst_1474:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78e626 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6618b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fb6cf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f78e626; op2val:0xbf6618b8;
op3val:0x3f5fb6cf; valaddr_reg:x12; val_offset:4359*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4359*FLEN/8, x13, x9, x10)

inst_1475:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1aafe1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ac417 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0d4e12; op2val:0xbf9aafe1;
op3val:0x3f2ac417; valaddr_reg:x12; val_offset:4362*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4362*FLEN/8, x13, x9, x10)

inst_1476:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1aafe1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ac417 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0d4e12; op2val:0xbf9aafe1;
op3val:0x3f2ac417; valaddr_reg:x12; val_offset:4365*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4365*FLEN/8, x13, x9, x10)

inst_1477:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1aafe1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ac417 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0d4e12; op2val:0xbf9aafe1;
op3val:0x3f2ac417; valaddr_reg:x12; val_offset:4368*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4368*FLEN/8, x13, x9, x10)

inst_1478:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1aafe1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ac417 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0d4e12; op2val:0xbf9aafe1;
op3val:0x3f2ac417; valaddr_reg:x12; val_offset:4371*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4371*FLEN/8, x13, x9, x10)

inst_1479:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1aafe1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ac417 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0d4e12; op2val:0xbf9aafe1;
op3val:0x3f2ac417; valaddr_reg:x12; val_offset:4374*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4374*FLEN/8, x13, x9, x10)

inst_1480:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75b687 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25644f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ebeec and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5b687; op2val:0xbf25644f;
op3val:0x3e9ebeec; valaddr_reg:x12; val_offset:4377*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4377*FLEN/8, x13, x9, x10)

inst_1481:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75b687 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25644f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ebeec and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5b687; op2val:0xbf25644f;
op3val:0x3e9ebeec; valaddr_reg:x12; val_offset:4380*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4380*FLEN/8, x13, x9, x10)

inst_1482:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75b687 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25644f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ebeec and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5b687; op2val:0xbf25644f;
op3val:0x3e9ebeec; valaddr_reg:x12; val_offset:4383*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4383*FLEN/8, x13, x9, x10)

inst_1483:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75b687 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25644f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ebeec and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5b687; op2val:0xbf25644f;
op3val:0x3e9ebeec; valaddr_reg:x12; val_offset:4386*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4386*FLEN/8, x13, x9, x10)

inst_1484:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75b687 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25644f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ebeec and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ef5b687; op2val:0xbf25644f;
op3val:0x3e9ebeec; valaddr_reg:x12; val_offset:4389*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4389*FLEN/8, x13, x9, x10)

inst_1485:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f85e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x07c8ad and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5c248d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecf85e0; op2val:0xbf07c8ad;
op3val:0x3e5c248d; valaddr_reg:x12; val_offset:4392*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4392*FLEN/8, x13, x9, x10)

inst_1486:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f85e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x07c8ad and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5c248d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecf85e0; op2val:0xbf07c8ad;
op3val:0x3e5c248d; valaddr_reg:x12; val_offset:4395*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4395*FLEN/8, x13, x9, x10)

inst_1487:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f85e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x07c8ad and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5c248d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecf85e0; op2val:0xbf07c8ad;
op3val:0x3e5c248d; valaddr_reg:x12; val_offset:4398*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4398*FLEN/8, x13, x9, x10)

inst_1488:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f85e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x07c8ad and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5c248d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecf85e0; op2val:0xbf07c8ad;
op3val:0x3e5c248d; valaddr_reg:x12; val_offset:4401*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4401*FLEN/8, x13, x9, x10)

inst_1489:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f85e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x07c8ad and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5c248d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ecf85e0; op2val:0xbf07c8ad;
op3val:0x3e5c248d; valaddr_reg:x12; val_offset:4404*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4404*FLEN/8, x13, x9, x10)

inst_1490:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a73d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1c63cc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x25bd96 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07a73d; op2val:0xbf1c63cc;
op3val:0x3ea5bd96; valaddr_reg:x12; val_offset:4407*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4407*FLEN/8, x13, x9, x10)

inst_1491:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a73d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1c63cc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x25bd96 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07a73d; op2val:0xbf1c63cc;
op3val:0x3ea5bd96; valaddr_reg:x12; val_offset:4410*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4410*FLEN/8, x13, x9, x10)

inst_1492:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a73d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1c63cc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x25bd96 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07a73d; op2val:0xbf1c63cc;
op3val:0x3ea5bd96; valaddr_reg:x12; val_offset:4413*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4413*FLEN/8, x13, x9, x10)

inst_1493:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a73d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1c63cc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x25bd96 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07a73d; op2val:0xbf1c63cc;
op3val:0x3ea5bd96; valaddr_reg:x12; val_offset:4416*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4416*FLEN/8, x13, x9, x10)

inst_1494:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a73d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1c63cc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x25bd96 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f07a73d; op2val:0xbf1c63cc;
op3val:0x3ea5bd96; valaddr_reg:x12; val_offset:4419*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4419*FLEN/8, x13, x9, x10)

inst_1495:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x150090 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402733 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fae7b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f150090; op2val:0xbfc02733;
op3val:0x3f5fae7b; valaddr_reg:x12; val_offset:4422*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4422*FLEN/8, x13, x9, x10)

inst_1496:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x150090 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402733 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fae7b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f150090; op2val:0xbfc02733;
op3val:0x3f5fae7b; valaddr_reg:x12; val_offset:4425*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4425*FLEN/8, x13, x9, x10)

inst_1497:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x150090 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402733 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fae7b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f150090; op2val:0xbfc02733;
op3val:0x3f5fae7b; valaddr_reg:x12; val_offset:4428*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4428*FLEN/8, x13, x9, x10)

inst_1498:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x150090 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402733 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fae7b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f150090; op2val:0xbfc02733;
op3val:0x3f5fae7b; valaddr_reg:x12; val_offset:4431*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4431*FLEN/8, x13, x9, x10)

inst_1499:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x150090 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402733 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fae7b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f150090; op2val:0xbfc02733;
op3val:0x3f5fae7b; valaddr_reg:x12; val_offset:4434*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4434*FLEN/8, x13, x9, x10)

inst_1500:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d0092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6236b3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x516d24 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d0092; op2val:0xbf6236b3;
op3val:0x3f516d24; valaddr_reg:x12; val_offset:4437*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4437*FLEN/8, x13, x9, x10)

inst_1501:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d0092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6236b3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x516d24 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d0092; op2val:0xbf6236b3;
op3val:0x3f516d24; valaddr_reg:x12; val_offset:4440*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4440*FLEN/8, x13, x9, x10)

inst_1502:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d0092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6236b3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x516d24 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d0092; op2val:0xbf6236b3;
op3val:0x3f516d24; valaddr_reg:x12; val_offset:4443*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4443*FLEN/8, x13, x9, x10)

inst_1503:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d0092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6236b3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x516d24 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d0092; op2val:0xbf6236b3;
op3val:0x3f516d24; valaddr_reg:x12; val_offset:4446*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4446*FLEN/8, x13, x9, x10)

inst_1504:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d0092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6236b3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x516d24 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6d0092; op2val:0xbf6236b3;
op3val:0x3f516d24; valaddr_reg:x12; val_offset:4449*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4449*FLEN/8, x13, x9, x10)

inst_1505:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e5ddb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x269d16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x395070 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e5ddb; op2val:0xbfa69d16;
op3val:0x3f395070; valaddr_reg:x12; val_offset:4452*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4452*FLEN/8, x13, x9, x10)

inst_1506:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e5ddb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x269d16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x395070 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e5ddb; op2val:0xbfa69d16;
op3val:0x3f395070; valaddr_reg:x12; val_offset:4455*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4455*FLEN/8, x13, x9, x10)

inst_1507:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e5ddb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x269d16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x395070 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e5ddb; op2val:0xbfa69d16;
op3val:0x3f395070; valaddr_reg:x12; val_offset:4458*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4458*FLEN/8, x13, x9, x10)

inst_1508:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e5ddb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x269d16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x395070 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e5ddb; op2val:0xbfa69d16;
op3val:0x3f395070; valaddr_reg:x12; val_offset:4461*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4461*FLEN/8, x13, x9, x10)

inst_1509:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e5ddb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x269d16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x395070 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0e5ddb; op2val:0xbfa69d16;
op3val:0x3f395070; valaddr_reg:x12; val_offset:4464*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4464*FLEN/8, x13, x9, x10)

inst_1510:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x60f056 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e617 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a5f5e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee0f056; op2val:0xbf41e617;
op3val:0x3eaa5f5e; valaddr_reg:x12; val_offset:4467*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4467*FLEN/8, x13, x9, x10)

inst_1511:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x60f056 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e617 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a5f5e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee0f056; op2val:0xbf41e617;
op3val:0x3eaa5f5e; valaddr_reg:x12; val_offset:4470*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4470*FLEN/8, x13, x9, x10)

inst_1512:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x60f056 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e617 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a5f5e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee0f056; op2val:0xbf41e617;
op3val:0x3eaa5f5e; valaddr_reg:x12; val_offset:4473*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4473*FLEN/8, x13, x9, x10)

inst_1513:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x60f056 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e617 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a5f5e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee0f056; op2val:0xbf41e617;
op3val:0x3eaa5f5e; valaddr_reg:x12; val_offset:4476*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4476*FLEN/8, x13, x9, x10)

inst_1514:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x60f056 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e617 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a5f5e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee0f056; op2val:0xbf41e617;
op3val:0x3eaa5f5e; valaddr_reg:x12; val_offset:4479*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4479*FLEN/8, x13, x9, x10)

inst_1515:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x256498 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x287594 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59abf5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da56498; op2val:0xc1287594;
op3val:0x3f59abf5; valaddr_reg:x12; val_offset:4482*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4482*FLEN/8, x13, x9, x10)

inst_1516:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x256498 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x287594 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59abf5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da56498; op2val:0xc1287594;
op3val:0x3f59abf5; valaddr_reg:x12; val_offset:4485*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4485*FLEN/8, x13, x9, x10)

inst_1517:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x256498 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x287594 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59abf5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da56498; op2val:0xc1287594;
op3val:0x3f59abf5; valaddr_reg:x12; val_offset:4488*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4488*FLEN/8, x13, x9, x10)

inst_1518:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x256498 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x287594 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59abf5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da56498; op2val:0xc1287594;
op3val:0x3f59abf5; valaddr_reg:x12; val_offset:4491*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4491*FLEN/8, x13, x9, x10)

inst_1519:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x256498 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x287594 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59abf5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da56498; op2val:0xc1287594;
op3val:0x3f59abf5; valaddr_reg:x12; val_offset:4494*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4494*FLEN/8, x13, x9, x10)

inst_1520:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d7e0a and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3ca529 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fb0fd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d2d7e0a; op2val:0xc1bca529;
op3val:0x3f7fb0fd; valaddr_reg:x12; val_offset:4497*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4497*FLEN/8, x13, x9, x10)

inst_1521:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d7e0a and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3ca529 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fb0fd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d2d7e0a; op2val:0xc1bca529;
op3val:0x3f7fb0fd; valaddr_reg:x12; val_offset:4500*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4500*FLEN/8, x13, x9, x10)

inst_1522:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d7e0a and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3ca529 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fb0fd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d2d7e0a; op2val:0xc1bca529;
op3val:0x3f7fb0fd; valaddr_reg:x12; val_offset:4503*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4503*FLEN/8, x13, x9, x10)

inst_1523:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d7e0a and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3ca529 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fb0fd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d2d7e0a; op2val:0xc1bca529;
op3val:0x3f7fb0fd; valaddr_reg:x12; val_offset:4506*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4506*FLEN/8, x13, x9, x10)

inst_1524:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d7e0a and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3ca529 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fb0fd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d2d7e0a; op2val:0xc1bca529;
op3val:0x3f7fb0fd; valaddr_reg:x12; val_offset:4509*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4509*FLEN/8, x13, x9, x10)

inst_1525:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62a642 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0c9f19 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x78ff90 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de2a642; op2val:0xbe0c9f19;
op3val:0x3c78ff90; valaddr_reg:x12; val_offset:4512*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4512*FLEN/8, x13, x9, x10)

inst_1526:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62a642 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0c9f19 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x78ff90 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de2a642; op2val:0xbe0c9f19;
op3val:0x3c78ff90; valaddr_reg:x12; val_offset:4515*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4515*FLEN/8, x13, x9, x10)

inst_1527:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62a642 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0c9f19 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x78ff90 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de2a642; op2val:0xbe0c9f19;
op3val:0x3c78ff90; valaddr_reg:x12; val_offset:4518*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4518*FLEN/8, x13, x9, x10)

inst_1528:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62a642 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0c9f19 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x78ff90 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de2a642; op2val:0xbe0c9f19;
op3val:0x3c78ff90; valaddr_reg:x12; val_offset:4521*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4521*FLEN/8, x13, x9, x10)

inst_1529:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62a642 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0c9f19 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x78ff90 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3de2a642; op2val:0xbe0c9f19;
op3val:0x3c78ff90; valaddr_reg:x12; val_offset:4524*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4524*FLEN/8, x13, x9, x10)

inst_1530:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22875e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x227690 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4e49e0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22875e; op2val:0xbea27690;
op3val:0x3e4e49e0; valaddr_reg:x12; val_offset:4527*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4527*FLEN/8, x13, x9, x10)

inst_1531:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22875e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x227690 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4e49e0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22875e; op2val:0xbea27690;
op3val:0x3e4e49e0; valaddr_reg:x12; val_offset:4530*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4530*FLEN/8, x13, x9, x10)

inst_1532:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22875e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x227690 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4e49e0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22875e; op2val:0xbea27690;
op3val:0x3e4e49e0; valaddr_reg:x12; val_offset:4533*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4533*FLEN/8, x13, x9, x10)

inst_1533:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22875e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x227690 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4e49e0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22875e; op2val:0xbea27690;
op3val:0x3e4e49e0; valaddr_reg:x12; val_offset:4536*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4536*FLEN/8, x13, x9, x10)

inst_1534:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22875e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x227690 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4e49e0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f22875e; op2val:0xbea27690;
op3val:0x3e4e49e0; valaddr_reg:x12; val_offset:4539*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4539*FLEN/8, x13, x9, x10)

inst_1535:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d56be and fs2 == 1 and fe2 == 0x7e and fm2 == 0x629a42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x603f3c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd56be; op2val:0xbf629a42;
op3val:0x3ee03f3c; valaddr_reg:x12; val_offset:4542*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4542*FLEN/8, x13, x9, x10)

inst_1536:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d56be and fs2 == 1 and fe2 == 0x7e and fm2 == 0x629a42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x603f3c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd56be; op2val:0xbf629a42;
op3val:0x3ee03f3c; valaddr_reg:x12; val_offset:4545*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4545*FLEN/8, x13, x9, x10)

inst_1537:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d56be and fs2 == 1 and fe2 == 0x7e and fm2 == 0x629a42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x603f3c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd56be; op2val:0xbf629a42;
op3val:0x3ee03f3c; valaddr_reg:x12; val_offset:4548*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4548*FLEN/8, x13, x9, x10)

inst_1538:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d56be and fs2 == 1 and fe2 == 0x7e and fm2 == 0x629a42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x603f3c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd56be; op2val:0xbf629a42;
op3val:0x3ee03f3c; valaddr_reg:x12; val_offset:4551*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4551*FLEN/8, x13, x9, x10)

inst_1539:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d56be and fs2 == 1 and fe2 == 0x7e and fm2 == 0x629a42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x603f3c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3efd56be; op2val:0xbf629a42;
op3val:0x3ee03f3c; valaddr_reg:x12; val_offset:4554*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4554*FLEN/8, x13, x9, x10)

inst_1540:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x121441 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5195c2 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f2ffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e121441; op2val:0xbed195c2;
op3val:0x3d6f2ffc; valaddr_reg:x12; val_offset:4557*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4557*FLEN/8, x13, x9, x10)

inst_1541:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x121441 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5195c2 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f2ffc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e121441; op2val:0xbed195c2;
op3val:0x3d6f2ffc; valaddr_reg:x12; val_offset:4560*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4560*FLEN/8, x13, x9, x10)

inst_1542:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x121441 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5195c2 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f2ffc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e121441; op2val:0xbed195c2;
op3val:0x3d6f2ffc; valaddr_reg:x12; val_offset:4563*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4563*FLEN/8, x13, x9, x10)

inst_1543:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x121441 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5195c2 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f2ffc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e121441; op2val:0xbed195c2;
op3val:0x3d6f2ffc; valaddr_reg:x12; val_offset:4566*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4566*FLEN/8, x13, x9, x10)

inst_1544:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x121441 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5195c2 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f2ffc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e121441; op2val:0xbed195c2;
op3val:0x3d6f2ffc; valaddr_reg:x12; val_offset:4569*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4569*FLEN/8, x13, x9, x10)

inst_1545:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3322c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ebfc4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47c6f0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3322c2; op2val:0xbf8ebfc4;
op3val:0x3f47c6f0; valaddr_reg:x12; val_offset:4572*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4572*FLEN/8, x13, x9, x10)

inst_1546:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3322c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ebfc4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47c6f0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3322c2; op2val:0xbf8ebfc4;
op3val:0x3f47c6f0; valaddr_reg:x12; val_offset:4575*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4575*FLEN/8, x13, x9, x10)

inst_1547:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3322c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ebfc4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47c6f0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3322c2; op2val:0xbf8ebfc4;
op3val:0x3f47c6f0; valaddr_reg:x12; val_offset:4578*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4578*FLEN/8, x13, x9, x10)

inst_1548:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3322c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ebfc4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47c6f0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3322c2; op2val:0xbf8ebfc4;
op3val:0x3f47c6f0; valaddr_reg:x12; val_offset:4581*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4581*FLEN/8, x13, x9, x10)

inst_1549:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3322c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ebfc4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47c6f0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f3322c2; op2val:0xbf8ebfc4;
op3val:0x3f47c6f0; valaddr_reg:x12; val_offset:4584*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4584*FLEN/8, x13, x9, x10)

inst_1550:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2b7908 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1bf385 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x50eacb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dab7908; op2val:0xc09bf385;
op3val:0x3ed0eacb; valaddr_reg:x12; val_offset:4587*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4587*FLEN/8, x13, x9, x10)

inst_1551:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2b7908 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1bf385 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x50eacb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dab7908; op2val:0xc09bf385;
op3val:0x3ed0eacb; valaddr_reg:x12; val_offset:4590*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4590*FLEN/8, x13, x9, x10)

inst_1552:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2b7908 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1bf385 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x50eacb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dab7908; op2val:0xc09bf385;
op3val:0x3ed0eacb; valaddr_reg:x12; val_offset:4593*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4593*FLEN/8, x13, x9, x10)

inst_1553:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2b7908 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1bf385 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x50eacb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dab7908; op2val:0xc09bf385;
op3val:0x3ed0eacb; valaddr_reg:x12; val_offset:4596*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4596*FLEN/8, x13, x9, x10)

inst_1554:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2b7908 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1bf385 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x50eacb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dab7908; op2val:0xc09bf385;
op3val:0x3ed0eacb; valaddr_reg:x12; val_offset:4599*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4599*FLEN/8, x13, x9, x10)

inst_1555:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4927b6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7dc307 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47657e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc927b6; op2val:0xc0fdc307;
op3val:0x3f47657e; valaddr_reg:x12; val_offset:4602*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4602*FLEN/8, x13, x9, x10)

inst_1556:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4927b6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7dc307 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47657e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc927b6; op2val:0xc0fdc307;
op3val:0x3f47657e; valaddr_reg:x12; val_offset:4605*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4605*FLEN/8, x13, x9, x10)

inst_1557:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4927b6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7dc307 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47657e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc927b6; op2val:0xc0fdc307;
op3val:0x3f47657e; valaddr_reg:x12; val_offset:4608*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4608*FLEN/8, x13, x9, x10)

inst_1558:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4927b6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7dc307 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47657e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc927b6; op2val:0xc0fdc307;
op3val:0x3f47657e; valaddr_reg:x12; val_offset:4611*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4611*FLEN/8, x13, x9, x10)

inst_1559:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4927b6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7dc307 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47657e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3dc927b6; op2val:0xc0fdc307;
op3val:0x3f47657e; valaddr_reg:x12; val_offset:4614*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4614*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_12)

inst_1560:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1a7610 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x324fef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x572ca5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1a7610; op2val:0xc0b24fef;
op3val:0x3f572ca5; valaddr_reg:x12; val_offset:4617*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4617*FLEN/8, x13, x9, x10)

inst_1561:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1a7610 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x324fef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x572ca5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1a7610; op2val:0xc0b24fef;
op3val:0x3f572ca5; valaddr_reg:x12; val_offset:4620*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4620*FLEN/8, x13, x9, x10)

inst_1562:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1a7610 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x324fef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x572ca5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1a7610; op2val:0xc0b24fef;
op3val:0x3f572ca5; valaddr_reg:x12; val_offset:4623*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4623*FLEN/8, x13, x9, x10)

inst_1563:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1a7610 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x324fef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x572ca5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1a7610; op2val:0xc0b24fef;
op3val:0x3f572ca5; valaddr_reg:x12; val_offset:4626*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4626*FLEN/8, x13, x9, x10)

inst_1564:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1a7610 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x324fef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x572ca5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e1a7610; op2val:0xc0b24fef;
op3val:0x3f572ca5; valaddr_reg:x12; val_offset:4629*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4629*FLEN/8, x13, x9, x10)

inst_1565:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a6ec8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x558318 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x362e08 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a6ec8; op2val:0xbf558318;
op3val:0x3f362e08; valaddr_reg:x12; val_offset:4632*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4632*FLEN/8, x13, x9, x10)

inst_1566:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a6ec8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x558318 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x362e08 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a6ec8; op2val:0xbf558318;
op3val:0x3f362e08; valaddr_reg:x12; val_offset:4635*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4635*FLEN/8, x13, x9, x10)

inst_1567:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a6ec8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x558318 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x362e08 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a6ec8; op2val:0xbf558318;
op3val:0x3f362e08; valaddr_reg:x12; val_offset:4638*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4638*FLEN/8, x13, x9, x10)

inst_1568:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a6ec8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x558318 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x362e08 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a6ec8; op2val:0xbf558318;
op3val:0x3f362e08; valaddr_reg:x12; val_offset:4641*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4641*FLEN/8, x13, x9, x10)

inst_1569:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a6ec8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x558318 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x362e08 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5a6ec8; op2val:0xbf558318;
op3val:0x3f362e08; valaddr_reg:x12; val_offset:4644*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4644*FLEN/8, x13, x9, x10)

inst_1570:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x145d7e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0752c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1cda90 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d945d7e; op2val:0xc10752c9;
op3val:0x3f1cda90; valaddr_reg:x12; val_offset:4647*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4647*FLEN/8, x13, x9, x10)

inst_1571:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x145d7e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0752c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1cda90 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d945d7e; op2val:0xc10752c9;
op3val:0x3f1cda90; valaddr_reg:x12; val_offset:4650*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4650*FLEN/8, x13, x9, x10)

inst_1572:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x145d7e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0752c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1cda90 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d945d7e; op2val:0xc10752c9;
op3val:0x3f1cda90; valaddr_reg:x12; val_offset:4653*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4653*FLEN/8, x13, x9, x10)

inst_1573:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x145d7e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0752c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1cda90 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d945d7e; op2val:0xc10752c9;
op3val:0x3f1cda90; valaddr_reg:x12; val_offset:4656*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4656*FLEN/8, x13, x9, x10)

inst_1574:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x145d7e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0752c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1cda90 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3d945d7e; op2val:0xc10752c9;
op3val:0x3f1cda90; valaddr_reg:x12; val_offset:4659*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4659*FLEN/8, x13, x9, x10)

inst_1575:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f4a19 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2298f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x360507 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f4a19; op2val:0xbfa298f9;
op3val:0x3f360507; valaddr_reg:x12; val_offset:4662*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4662*FLEN/8, x13, x9, x10)

inst_1576:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f4a19 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2298f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x360507 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f4a19; op2val:0xbfa298f9;
op3val:0x3f360507; valaddr_reg:x12; val_offset:4665*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4665*FLEN/8, x13, x9, x10)

inst_1577:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f4a19 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2298f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x360507 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f4a19; op2val:0xbfa298f9;
op3val:0x3f360507; valaddr_reg:x12; val_offset:4668*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4668*FLEN/8, x13, x9, x10)

inst_1578:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f4a19 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2298f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x360507 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f4a19; op2val:0xbfa298f9;
op3val:0x3f360507; valaddr_reg:x12; val_offset:4671*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4671*FLEN/8, x13, x9, x10)

inst_1579:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f4a19 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2298f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x360507 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f0f4a19; op2val:0xbfa298f9;
op3val:0x3f360507; valaddr_reg:x12; val_offset:4674*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4674*FLEN/8, x13, x9, x10)

inst_1580:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cdeb3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0eebaa and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6cdeb3; op2val:0xbf1a768e;
op3val:0x3f0eebaa; valaddr_reg:x12; val_offset:4677*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4677*FLEN/8, x13, x9, x10)

inst_1581:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cdeb3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0eebaa and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6cdeb3; op2val:0xbf1a768e;
op3val:0x3f0eebaa; valaddr_reg:x12; val_offset:4680*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4680*FLEN/8, x13, x9, x10)

inst_1582:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cdeb3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0eebaa and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6cdeb3; op2val:0xbf1a768e;
op3val:0x3f0eebaa; valaddr_reg:x12; val_offset:4683*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4683*FLEN/8, x13, x9, x10)

inst_1583:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cdeb3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0eebaa and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6cdeb3; op2val:0xbf1a768e;
op3val:0x3f0eebaa; valaddr_reg:x12; val_offset:4686*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4686*FLEN/8, x13, x9, x10)

inst_1584:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cdeb3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0eebaa and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6cdeb3; op2val:0xbf1a768e;
op3val:0x3f0eebaa; valaddr_reg:x12; val_offset:4689*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4689*FLEN/8, x13, x9, x10)

inst_1585:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00ce56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29459c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a567b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f00ce56; op2val:0xbfa9459c;
op3val:0x3f2a567b; valaddr_reg:x12; val_offset:4692*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4692*FLEN/8, x13, x9, x10)

inst_1586:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00ce56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29459c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a567b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f00ce56; op2val:0xbfa9459c;
op3val:0x3f2a567b; valaddr_reg:x12; val_offset:4695*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4695*FLEN/8, x13, x9, x10)

inst_1587:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00ce56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29459c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a567b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f00ce56; op2val:0xbfa9459c;
op3val:0x3f2a567b; valaddr_reg:x12; val_offset:4698*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4698*FLEN/8, x13, x9, x10)

inst_1588:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00ce56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29459c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a567b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f00ce56; op2val:0xbfa9459c;
op3val:0x3f2a567b; valaddr_reg:x12; val_offset:4701*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4701*FLEN/8, x13, x9, x10)

inst_1589:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00ce56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29459c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a567b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f00ce56; op2val:0xbfa9459c;
op3val:0x3f2a567b; valaddr_reg:x12; val_offset:4704*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4704*FLEN/8, x13, x9, x10)

inst_1590:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09db5b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x240f70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30b1ad and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e89db5b; op2val:0xc0240f70;
op3val:0x3f30b1ad; valaddr_reg:x12; val_offset:4707*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4707*FLEN/8, x13, x9, x10)

inst_1591:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09db5b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x240f70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30b1ad and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e89db5b; op2val:0xc0240f70;
op3val:0x3f30b1ad; valaddr_reg:x12; val_offset:4710*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4710*FLEN/8, x13, x9, x10)

inst_1592:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09db5b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x240f70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30b1ad and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e89db5b; op2val:0xc0240f70;
op3val:0x3f30b1ad; valaddr_reg:x12; val_offset:4713*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4713*FLEN/8, x13, x9, x10)

inst_1593:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09db5b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x240f70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30b1ad and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e89db5b; op2val:0xc0240f70;
op3val:0x3f30b1ad; valaddr_reg:x12; val_offset:4716*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4716*FLEN/8, x13, x9, x10)

inst_1594:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09db5b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x240f70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30b1ad and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e89db5b; op2val:0xc0240f70;
op3val:0x3f30b1ad; valaddr_reg:x12; val_offset:4719*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4719*FLEN/8, x13, x9, x10)

inst_1595:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x276a83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0dfc5c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x39b568 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca76a83; op2val:0xc08dfc5c;
op3val:0x3db9b568; valaddr_reg:x12; val_offset:4722*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4722*FLEN/8, x13, x9, x10)

inst_1596:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x276a83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0dfc5c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x39b568 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca76a83; op2val:0xc08dfc5c;
op3val:0x3db9b568; valaddr_reg:x12; val_offset:4725*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4725*FLEN/8, x13, x9, x10)

inst_1597:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x276a83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0dfc5c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x39b568 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca76a83; op2val:0xc08dfc5c;
op3val:0x3db9b568; valaddr_reg:x12; val_offset:4728*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4728*FLEN/8, x13, x9, x10)

inst_1598:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x276a83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0dfc5c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x39b568 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca76a83; op2val:0xc08dfc5c;
op3val:0x3db9b568; valaddr_reg:x12; val_offset:4731*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4731*FLEN/8, x13, x9, x10)

inst_1599:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x276a83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0dfc5c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x39b568 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ca76a83; op2val:0xc08dfc5c;
op3val:0x3db9b568; valaddr_reg:x12; val_offset:4734*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4734*FLEN/8, x13, x9, x10)

inst_1600:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57a1cc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x088566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65fca3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed7a1cc; op2val:0xc0088566;
op3val:0x3f65fca3; valaddr_reg:x12; val_offset:4737*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4737*FLEN/8, x13, x9, x10)

inst_1601:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57a1cc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x088566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65fca3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed7a1cc; op2val:0xc0088566;
op3val:0x3f65fca3; valaddr_reg:x12; val_offset:4740*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4740*FLEN/8, x13, x9, x10)

inst_1602:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57a1cc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x088566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65fca3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed7a1cc; op2val:0xc0088566;
op3val:0x3f65fca3; valaddr_reg:x12; val_offset:4743*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4743*FLEN/8, x13, x9, x10)

inst_1603:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57a1cc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x088566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65fca3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed7a1cc; op2val:0xc0088566;
op3val:0x3f65fca3; valaddr_reg:x12; val_offset:4746*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4746*FLEN/8, x13, x9, x10)

inst_1604:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57a1cc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x088566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65fca3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ed7a1cc; op2val:0xc0088566;
op3val:0x3f65fca3; valaddr_reg:x12; val_offset:4749*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4749*FLEN/8, x13, x9, x10)

inst_1605:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x616be7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5c597c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x420786 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee16be7; op2val:0xbf5c597c;
op3val:0x3ec20786; valaddr_reg:x12; val_offset:4752*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4752*FLEN/8, x13, x9, x10)

inst_1606:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x616be7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5c597c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x420786 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee16be7; op2val:0xbf5c597c;
op3val:0x3ec20786; valaddr_reg:x12; val_offset:4755*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4755*FLEN/8, x13, x9, x10)

inst_1607:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x616be7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5c597c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x420786 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee16be7; op2val:0xbf5c597c;
op3val:0x3ec20786; valaddr_reg:x12; val_offset:4758*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4758*FLEN/8, x13, x9, x10)

inst_1608:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x616be7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5c597c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x420786 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee16be7; op2val:0xbf5c597c;
op3val:0x3ec20786; valaddr_reg:x12; val_offset:4761*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4761*FLEN/8, x13, x9, x10)

inst_1609:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x616be7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5c597c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x420786 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee16be7; op2val:0xbf5c597c;
op3val:0x3ec20786; valaddr_reg:x12; val_offset:4764*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4764*FLEN/8, x13, x9, x10)

inst_1610:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x332c1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5230a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131c3b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb32c1b; op2val:0xbfd230a7;
op3val:0x3f131c3b; valaddr_reg:x12; val_offset:4767*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4767*FLEN/8, x13, x9, x10)

inst_1611:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x332c1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5230a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131c3b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb32c1b; op2val:0xbfd230a7;
op3val:0x3f131c3b; valaddr_reg:x12; val_offset:4770*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4770*FLEN/8, x13, x9, x10)

inst_1612:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x332c1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5230a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131c3b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb32c1b; op2val:0xbfd230a7;
op3val:0x3f131c3b; valaddr_reg:x12; val_offset:4773*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4773*FLEN/8, x13, x9, x10)

inst_1613:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x332c1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5230a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131c3b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb32c1b; op2val:0xbfd230a7;
op3val:0x3f131c3b; valaddr_reg:x12; val_offset:4776*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4776*FLEN/8, x13, x9, x10)

inst_1614:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x332c1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5230a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131c3b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3eb32c1b; op2val:0xbfd230a7;
op3val:0x3f131c3b; valaddr_reg:x12; val_offset:4779*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4779*FLEN/8, x13, x9, x10)

inst_1615:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cca0b and fs2 == 1 and fe2 == 0x78 and fm2 == 0x44f350 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x58a101 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cca0b; op2val:0xbc44f350;
op3val:0x3b58a101; valaddr_reg:x12; val_offset:4782*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4782*FLEN/8, x13, x9, x10)

inst_1616:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cca0b and fs2 == 1 and fe2 == 0x78 and fm2 == 0x44f350 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x58a101 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cca0b; op2val:0xbc44f350;
op3val:0x3b58a101; valaddr_reg:x12; val_offset:4785*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4785*FLEN/8, x13, x9, x10)

inst_1617:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cca0b and fs2 == 1 and fe2 == 0x78 and fm2 == 0x44f350 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x58a101 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cca0b; op2val:0xbc44f350;
op3val:0x3b58a101; valaddr_reg:x12; val_offset:4788*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4788*FLEN/8, x13, x9, x10)

inst_1618:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cca0b and fs2 == 1 and fe2 == 0x78 and fm2 == 0x44f350 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x58a101 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cca0b; op2val:0xbc44f350;
op3val:0x3b58a101; valaddr_reg:x12; val_offset:4791*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4791*FLEN/8, x13, x9, x10)

inst_1619:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cca0b and fs2 == 1 and fe2 == 0x78 and fm2 == 0x44f350 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x58a101 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8cca0b; op2val:0xbc44f350;
op3val:0x3b58a101; valaddr_reg:x12; val_offset:4794*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4794*FLEN/8, x13, x9, x10)

inst_1620:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186763 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e2d8c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x757ca0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e986763; op2val:0xc04e2d8c;
op3val:0x3f757ca0; valaddr_reg:x12; val_offset:4797*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4797*FLEN/8, x13, x9, x10)

inst_1621:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186763 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e2d8c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x757ca0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e986763; op2val:0xc04e2d8c;
op3val:0x3f757ca0; valaddr_reg:x12; val_offset:4800*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4800*FLEN/8, x13, x9, x10)

inst_1622:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186763 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e2d8c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x757ca0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e986763; op2val:0xc04e2d8c;
op3val:0x3f757ca0; valaddr_reg:x12; val_offset:4803*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4803*FLEN/8, x13, x9, x10)

inst_1623:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186763 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e2d8c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x757ca0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e986763; op2val:0xc04e2d8c;
op3val:0x3f757ca0; valaddr_reg:x12; val_offset:4806*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4806*FLEN/8, x13, x9, x10)

inst_1624:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186763 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e2d8c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x757ca0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e986763; op2val:0xc04e2d8c;
op3val:0x3f757ca0; valaddr_reg:x12; val_offset:4809*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4809*FLEN/8, x13, x9, x10)

inst_1625:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e66ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01afef and fs3 == 0 and fe3 == 0x7d and fm3 == 0x40e970 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe66ec; op2val:0xbf81afef;
op3val:0x3ec0e970; valaddr_reg:x12; val_offset:4812*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4812*FLEN/8, x13, x9, x10)

inst_1626:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e66ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01afef and fs3 == 0 and fe3 == 0x7d and fm3 == 0x40e970 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe66ec; op2val:0xbf81afef;
op3val:0x3ec0e970; valaddr_reg:x12; val_offset:4815*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4815*FLEN/8, x13, x9, x10)

inst_1627:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e66ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01afef and fs3 == 0 and fe3 == 0x7d and fm3 == 0x40e970 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe66ec; op2val:0xbf81afef;
op3val:0x3ec0e970; valaddr_reg:x12; val_offset:4818*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4818*FLEN/8, x13, x9, x10)

inst_1628:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e66ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01afef and fs3 == 0 and fe3 == 0x7d and fm3 == 0x40e970 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe66ec; op2val:0xbf81afef;
op3val:0x3ec0e970; valaddr_reg:x12; val_offset:4821*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4821*FLEN/8, x13, x9, x10)

inst_1629:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e66ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01afef and fs3 == 0 and fe3 == 0x7d and fm3 == 0x40e970 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ebe66ec; op2val:0xbf81afef;
op3val:0x3ec0e970; valaddr_reg:x12; val_offset:4824*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4824*FLEN/8, x13, x9, x10)

inst_1630:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68c9c6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0b16d9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7cf4ac and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8c9c6; op2val:0xbe0b16d9;
op3val:0x3d7cf4ac; valaddr_reg:x12; val_offset:4827*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4827*FLEN/8, x13, x9, x10)

inst_1631:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68c9c6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0b16d9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7cf4ac and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8c9c6; op2val:0xbe0b16d9;
op3val:0x3d7cf4ac; valaddr_reg:x12; val_offset:4830*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4830*FLEN/8, x13, x9, x10)

inst_1632:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68c9c6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0b16d9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7cf4ac and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8c9c6; op2val:0xbe0b16d9;
op3val:0x3d7cf4ac; valaddr_reg:x12; val_offset:4833*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4833*FLEN/8, x13, x9, x10)

inst_1633:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68c9c6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0b16d9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7cf4ac and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8c9c6; op2val:0xbe0b16d9;
op3val:0x3d7cf4ac; valaddr_reg:x12; val_offset:4836*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4836*FLEN/8, x13, x9, x10)

inst_1634:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68c9c6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0b16d9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7cf4ac and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3ee8c9c6; op2val:0xbe0b16d9;
op3val:0x3d7cf4ac; valaddr_reg:x12; val_offset:4839*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4839*FLEN/8, x13, x9, x10)

inst_1635:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7294e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04c2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b9ae1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7294e7; op2val:0xbf84c2e0;
op3val:0x3f7b9ae1; valaddr_reg:x12; val_offset:4842*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4842*FLEN/8, x13, x9, x10)

inst_1636:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7294e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04c2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b9ae1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7294e7; op2val:0xbf84c2e0;
op3val:0x3f7b9ae1; valaddr_reg:x12; val_offset:4845*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4845*FLEN/8, x13, x9, x10)

inst_1637:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7294e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04c2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b9ae1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7294e7; op2val:0xbf84c2e0;
op3val:0x3f7b9ae1; valaddr_reg:x12; val_offset:4848*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4848*FLEN/8, x13, x9, x10)

inst_1638:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7294e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04c2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b9ae1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7294e7; op2val:0xbf84c2e0;
op3val:0x3f7b9ae1; valaddr_reg:x12; val_offset:4851*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4851*FLEN/8, x13, x9, x10)

inst_1639:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7294e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04c2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b9ae1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f7294e7; op2val:0xbf84c2e0;
op3val:0x3f7b9ae1; valaddr_reg:x12; val_offset:4854*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4854*FLEN/8, x13, x9, x10)

inst_1640:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e3130 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f4fb0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x664c12 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8e3130; op2val:0xc04f4fb0;
op3val:0x3f664c12; valaddr_reg:x12; val_offset:4857*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4857*FLEN/8, x13, x9, x10)

inst_1641:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e3130 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f4fb0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x664c12 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8e3130; op2val:0xc04f4fb0;
op3val:0x3f664c12; valaddr_reg:x12; val_offset:4860*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4860*FLEN/8, x13, x9, x10)

inst_1642:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e3130 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f4fb0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x664c12 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8e3130; op2val:0xc04f4fb0;
op3val:0x3f664c12; valaddr_reg:x12; val_offset:4863*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4863*FLEN/8, x13, x9, x10)

inst_1643:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e3130 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f4fb0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x664c12 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8e3130; op2val:0xc04f4fb0;
op3val:0x3f664c12; valaddr_reg:x12; val_offset:4866*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4866*FLEN/8, x13, x9, x10)

inst_1644:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e3130 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f4fb0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x664c12 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e8e3130; op2val:0xc04f4fb0;
op3val:0x3f664c12; valaddr_reg:x12; val_offset:4869*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4869*FLEN/8, x13, x9, x10)

inst_1645:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cd914 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x58de2b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3b16d3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cd914; op2val:0xbe58de2b;
op3val:0x3e3b16d3; valaddr_reg:x12; val_offset:4872*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4872*FLEN/8, x13, x9, x10)

inst_1646:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cd914 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x58de2b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3b16d3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cd914; op2val:0xbe58de2b;
op3val:0x3e3b16d3; valaddr_reg:x12; val_offset:4875*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4875*FLEN/8, x13, x9, x10)

inst_1647:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cd914 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x58de2b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3b16d3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cd914; op2val:0xbe58de2b;
op3val:0x3e3b16d3; valaddr_reg:x12; val_offset:4878*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4878*FLEN/8, x13, x9, x10)

inst_1648:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cd914 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x58de2b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3b16d3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cd914; op2val:0xbe58de2b;
op3val:0x3e3b16d3; valaddr_reg:x12; val_offset:4881*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4881*FLEN/8, x13, x9, x10)

inst_1649:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cd914 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x58de2b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3b16d3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5cd914; op2val:0xbe58de2b;
op3val:0x3e3b16d3; valaddr_reg:x12; val_offset:4884*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4884*FLEN/8, x13, x9, x10)

inst_1650:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237157 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3b26d4 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ef92a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f237157; op2val:0xbe3b26d4;
op3val:0x3deef92a; valaddr_reg:x12; val_offset:4887*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4887*FLEN/8, x13, x9, x10)

inst_1651:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237157 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3b26d4 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ef92a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f237157; op2val:0xbe3b26d4;
op3val:0x3deef92a; valaddr_reg:x12; val_offset:4890*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4890*FLEN/8, x13, x9, x10)

inst_1652:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237157 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3b26d4 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ef92a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f237157; op2val:0xbe3b26d4;
op3val:0x3deef92a; valaddr_reg:x12; val_offset:4893*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4893*FLEN/8, x13, x9, x10)

inst_1653:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237157 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3b26d4 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ef92a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f237157; op2val:0xbe3b26d4;
op3val:0x3deef92a; valaddr_reg:x12; val_offset:4896*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4896*FLEN/8, x13, x9, x10)

inst_1654:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237157 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3b26d4 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ef92a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f237157; op2val:0xbe3b26d4;
op3val:0x3deef92a; valaddr_reg:x12; val_offset:4899*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4899*FLEN/8, x13, x9, x10)

inst_1655:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4bee4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58d77c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cbcba and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4bee4d; op2val:0xbfd8d77c;
op3val:0x3eacbcba; valaddr_reg:x12; val_offset:4902*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4902*FLEN/8, x13, x9, x10)

inst_1656:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4bee4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58d77c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cbcba and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4bee4d; op2val:0xbfd8d77c;
op3val:0x3eacbcba; valaddr_reg:x12; val_offset:4905*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4905*FLEN/8, x13, x9, x10)

inst_1657:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4bee4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58d77c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cbcba and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4bee4d; op2val:0xbfd8d77c;
op3val:0x3eacbcba; valaddr_reg:x12; val_offset:4908*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4908*FLEN/8, x13, x9, x10)

inst_1658:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4bee4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58d77c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cbcba and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4bee4d; op2val:0xbfd8d77c;
op3val:0x3eacbcba; valaddr_reg:x12; val_offset:4911*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4911*FLEN/8, x13, x9, x10)

inst_1659:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4bee4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58d77c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cbcba and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3e4bee4d; op2val:0xbfd8d77c;
op3val:0x3eacbcba; valaddr_reg:x12; val_offset:4914*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4914*FLEN/8, x13, x9, x10)

inst_1660:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x242285 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ae0d9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f242285; op2val:0xbfb72b46;
op3val:0x3f6ae0d9; valaddr_reg:x12; val_offset:4917*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4917*FLEN/8, x13, x9, x10)

inst_1661:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x242285 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ae0d9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f242285; op2val:0xbfb72b46;
op3val:0x3f6ae0d9; valaddr_reg:x12; val_offset:4920*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4920*FLEN/8, x13, x9, x10)

inst_1662:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x242285 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ae0d9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f242285; op2val:0xbfb72b46;
op3val:0x3f6ae0d9; valaddr_reg:x12; val_offset:4923*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4923*FLEN/8, x13, x9, x10)

inst_1663:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x242285 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ae0d9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f242285; op2val:0xbfb72b46;
op3val:0x3f6ae0d9; valaddr_reg:x12; val_offset:4926*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4926*FLEN/8, x13, x9, x10)

inst_1664:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x242285 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ae0d9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f242285; op2val:0xbfb72b46;
op3val:0x3f6ae0d9; valaddr_reg:x12; val_offset:4929*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4929*FLEN/8, x13, x9, x10)

inst_1665:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x43fe9c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2cfd14 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0470d3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc3fe9c; op2val:0xc0acfd14;
op3val:0x3e0470d3; valaddr_reg:x12; val_offset:4932*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4932*FLEN/8, x13, x9, x10)

inst_1666:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x43fe9c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2cfd14 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0470d3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc3fe9c; op2val:0xc0acfd14;
op3val:0x3e0470d3; valaddr_reg:x12; val_offset:4935*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4935*FLEN/8, x13, x9, x10)

inst_1667:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x43fe9c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2cfd14 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0470d3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc3fe9c; op2val:0xc0acfd14;
op3val:0x3e0470d3; valaddr_reg:x12; val_offset:4938*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4938*FLEN/8, x13, x9, x10)

inst_1668:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x43fe9c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2cfd14 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0470d3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc3fe9c; op2val:0xc0acfd14;
op3val:0x3e0470d3; valaddr_reg:x12; val_offset:4941*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4941*FLEN/8, x13, x9, x10)

inst_1669:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x43fe9c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2cfd14 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0470d3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3cc3fe9c; op2val:0xc0acfd14;
op3val:0x3e0470d3; valaddr_reg:x12; val_offset:4944*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4944*FLEN/8, x13, x9, x10)

inst_1670:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da9474d; op2val:0xc0be1a89;
op3val:0x3efb68f0; valaddr_reg:x12; val_offset:4947*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4947*FLEN/8, x13, x9, x10)

inst_1671:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da9474d; op2val:0xc0be1a89;
op3val:0x3efb68f0; valaddr_reg:x12; val_offset:4950*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4950*FLEN/8, x13, x9, x10)

inst_1672:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da9474d; op2val:0xc0be1a89;
op3val:0x3efb68f0; valaddr_reg:x12; val_offset:4953*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4953*FLEN/8, x13, x9, x10)

inst_1673:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da9474d; op2val:0xc0be1a89;
op3val:0x3efb68f0; valaddr_reg:x12; val_offset:4956*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4956*FLEN/8, x13, x9, x10)

inst_1674:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3da9474d; op2val:0xc0be1a89;
op3val:0x3efb68f0; valaddr_reg:x12; val_offset:4959*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4959*FLEN/8, x13, x9, x10)

inst_1675:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f381a34; op2val:0xbf04887b;
op3val:0x3ebe9f54; valaddr_reg:x12; val_offset:4962*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4962*FLEN/8, x13, x9, x10)

inst_1676:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f381a34; op2val:0xbf04887b;
op3val:0x3ebe9f54; valaddr_reg:x12; val_offset:4965*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4965*FLEN/8, x13, x9, x10)

inst_1677:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f381a34; op2val:0xbf04887b;
op3val:0x3ebe9f54; valaddr_reg:x12; val_offset:4968*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4968*FLEN/8, x13, x9, x10)

inst_1678:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f381a34; op2val:0xbf04887b;
op3val:0x3ebe9f54; valaddr_reg:x12; val_offset:4971*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4971*FLEN/8, x13, x9, x10)

inst_1679:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f381a34; op2val:0xbf04887b;
op3val:0x3ebe9f54; valaddr_reg:x12; val_offset:4974*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4974*FLEN/8, x13, x9, x10)

inst_1680:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f45f69a; op2val:0xbd47b766;
op3val:0x3d1a7085; valaddr_reg:x12; val_offset:4977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4977*FLEN/8, x13, x9, x10)

inst_1681:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f45f69a; op2val:0xbd47b766;
op3val:0x3d1a7085; valaddr_reg:x12; val_offset:4980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4980*FLEN/8, x13, x9, x10)

inst_1682:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f45f69a; op2val:0xbd47b766;
op3val:0x3d1a7085; valaddr_reg:x12; val_offset:4983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 128, 0, x12, 4983*FLEN/8, x13, x9, x10)

inst_1683:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5fa8c7; op2val:0xbeacfcc5;
op3val:0x3e97223c; valaddr_reg:x12; val_offset:4986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 4986*FLEN/8, x13, x9, x10)

inst_1684:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5fa8c7; op2val:0xbeacfcc5;
op3val:0x3e97223c; valaddr_reg:x12; val_offset:4989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4989*FLEN/8, x13, x9, x10)

inst_1685:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5fa8c7; op2val:0xbeacfcc5;
op3val:0x3e97223c; valaddr_reg:x12; val_offset:4992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 4992*FLEN/8, x13, x9, x10)

inst_1686:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f5fa8c7; op2val:0xbeacfcc5;
op3val:0x3e97223c; valaddr_reg:x12; val_offset:4995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 4995*FLEN/8, x13, x9, x10)

inst_1687:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a314c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52983c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40a7b5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f6a314c; op2val:0xbf52983c;
op3val:0x3f40a7b5; valaddr_reg:x12; val_offset:4998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 4998*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_13)

inst_1688:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4ec9f5; op2val:0xbe56d8a7;
op3val:0x3e2d8bd4; valaddr_reg:x12; val_offset:5001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 32, 0, x12, 5001*FLEN/8, x13, x9, x10)

inst_1689:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f4ec9f5; op2val:0xbe56d8a7;
op3val:0x3e2d8bd4; valaddr_reg:x12; val_offset:5004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 96, 0, x12, 5004*FLEN/8, x13, x9, x10)

inst_1690:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69123a; op2val:0xbf5755fa;
op3val:0x3f440c95; valaddr_reg:x12; val_offset:5007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 5007*FLEN/8, x13, x9, x10)

inst_1691:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f69123a; op2val:0xbf5755fa;
op3val:0x3f440c95; valaddr_reg:x12; val_offset:5010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 64, 0, x12, 5010*FLEN/8, x13, x9, x10)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(1061549722,64,FLEN)
NAN_BOXED(3175593830,32,FLEN)
NAN_BOXED(1025142917,64,FLEN)
NAN_BOXED(1061549722,64,FLEN)
NAN_BOXED(3175593830,32,FLEN)
NAN_BOXED(1025142917,64,FLEN)
NAN_BOXED(1061549722,64,FLEN)
NAN_BOXED(1061549722,32,FLEN)
NAN_BOXED(1025142917,64,FLEN)
NAN_BOXED(1061549722,64,FLEN)
NAN_BOXED(3175593830,32,FLEN)
NAN_BOXED(3175593830,64,FLEN)
NAN_BOXED(1061549722,64,FLEN)
NAN_BOXED(1061549722,32,FLEN)
NAN_BOXED(1061549722,64,FLEN)
NAN_BOXED(1063233735,64,FLEN)
NAN_BOXED(3199007941,32,FLEN)
NAN_BOXED(1063233735,64,FLEN)
NAN_BOXED(1063233735,64,FLEN)
NAN_BOXED(3199007941,32,FLEN)
NAN_BOXED(3199007941,64,FLEN)
NAN_BOXED(1063233735,64,FLEN)
NAN_BOXED(3199007941,32,FLEN)
NAN_BOXED(1063233735,64,FLEN)
NAN_BOXED(1063233735,64,FLEN)
NAN_BOXED(1063233735,32,FLEN)
NAN_BOXED(1063233735,64,FLEN)
NAN_BOXED(1063233735,64,FLEN)
NAN_BOXED(3199007941,32,FLEN)
NAN_BOXED(1050092092,64,FLEN)
NAN_BOXED(1063924044,64,FLEN)
NAN_BOXED(3209861180,32,FLEN)
NAN_BOXED(1061201845,64,FLEN)
NAN_BOXED(1063924044,64,FLEN)
NAN_BOXED(1063924044,32,FLEN)
NAN_BOXED(1061201845,64,FLEN)
NAN_BOXED(1063924044,64,FLEN)
NAN_BOXED(3209861180,32,FLEN)
NAN_BOXED(1061201845,64,FLEN)
NAN_BOXED(1063924044,64,FLEN)
NAN_BOXED(3209861180,32,FLEN)
NAN_BOXED(1061201845,64,FLEN)
NAN_BOXED(1063924044,64,FLEN)
NAN_BOXED(3209861180,32,FLEN)
NAN_BOXED(1061201845,64,FLEN)
NAN_BOXED(979661503,64,FLEN)
NAN_BOXED(3294809539,32,FLEN)
NAN_BOXED(1061840106,64,FLEN)
NAN_BOXED(979661503,64,FLEN)
NAN_BOXED(3294809539,32,FLEN)
NAN_BOXED(1061840106,64,FLEN)
NAN_BOXED(979661503,64,FLEN)
NAN_BOXED(3294809539,32,FLEN)
NAN_BOXED(1061840106,64,FLEN)
NAN_BOXED(979661503,64,FLEN)
NAN_BOXED(3294809539,32,FLEN)
NAN_BOXED(1061840106,64,FLEN)
NAN_BOXED(979661503,64,FLEN)
NAN_BOXED(3294809539,32,FLEN)
NAN_BOXED(1061840106,64,FLEN)
NAN_BOXED(1052204293,64,FLEN)
NAN_BOXED(3217117105,32,FLEN)
NAN_BOXED(1057650229,64,FLEN)
test_dataset_1:
NAN_BOXED(1052204293,32,FLEN)
NAN_BOXED(3217117105,32,FLEN)
NAN_BOXED(1057650229,32,FLEN)
NAN_BOXED(1052204293,32,FLEN)
NAN_BOXED(3217117105,32,FLEN)
NAN_BOXED(1057650229,32,FLEN)
NAN_BOXED(1052204293,32,FLEN)
NAN_BOXED(3217117105,32,FLEN)
NAN_BOXED(1057650229,32,FLEN)
NAN_BOXED(1052204293,32,FLEN)
NAN_BOXED(3217117105,32,FLEN)
NAN_BOXED(1057650229,32,FLEN)
NAN_BOXED(1057750915,32,FLEN)
NAN_BOXED(3211552950,32,FLEN)
NAN_BOXED(1057048784,32,FLEN)
NAN_BOXED(1057750915,32,FLEN)
NAN_BOXED(3211552950,32,FLEN)
NAN_BOXED(1057048784,32,FLEN)
NAN_BOXED(1057750915,32,FLEN)
NAN_BOXED(3211552950,32,FLEN)
NAN_BOXED(1057048784,32,FLEN)
NAN_BOXED(1057750915,32,FLEN)
NAN_BOXED(3211552950,32,FLEN)
NAN_BOXED(1057048784,32,FLEN)
NAN_BOXED(1057750915,32,FLEN)
NAN_BOXED(3211552950,32,FLEN)
NAN_BOXED(1057048784,32,FLEN)
NAN_BOXED(1062128117,32,FLEN)
NAN_BOXED(3193362599,32,FLEN)
NAN_BOXED(1043172308,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3193362599,32,FLEN)
NAN_BOXED(1043172308,32,FLEN)
NAN_BOXED(1062128117,32,FLEN)
NAN_BOXED(3193362599,32,FLEN)
NAN_BOXED(1043172308,32,FLEN)
NAN_BOXED(1062128117,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1043172308,32,FLEN)
NAN_BOXED(1062128117,32,FLEN)
NAN_BOXED(3193362599,32,FLEN)
NAN_BOXED(1043172308,32,FLEN)
NAN_BOXED(1063850554,32,FLEN)
NAN_BOXED(3210171898,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1063850554,32,FLEN)
NAN_BOXED(3210171898,32,FLEN)
NAN_BOXED(1061424277,32,FLEN)
NAN_BOXED(1063850554,32,FLEN)
NAN_BOXED(3210171898,32,FLEN)
NAN_BOXED(1061424277,32,FLEN)
NAN_BOXED(1063850554,32,FLEN)
NAN_BOXED(3210171898,32,FLEN)
NAN_BOXED(1061424277,32,FLEN)
NAN_BOXED(1063850554,32,FLEN)
NAN_BOXED(3210171898,32,FLEN)
NAN_BOXED(1061424277,32,FLEN)
NAN_BOXED(1065017817,32,FLEN)
NAN_BOXED(3208612190,32,FLEN)
NAN_BOXED(1060877600,32,FLEN)
NAN_BOXED(1065017817,32,FLEN)
NAN_BOXED(3208612190,32,FLEN)
NAN_BOXED(1060877600,32,FLEN)
NAN_BOXED(1065017817,32,FLEN)
NAN_BOXED(3208612190,32,FLEN)
NAN_BOXED(1060877600,32,FLEN)
NAN_BOXED(1065017817,32,FLEN)
NAN_BOXED(3208612190,32,FLEN)
NAN_BOXED(1060877600,32,FLEN)
NAN_BOXED(1065017817,32,FLEN)
NAN_BOXED(3208612190,32,FLEN)
NAN_BOXED(1060877600,32,FLEN)
NAN_BOXED(1058513751,32,FLEN)
NAN_BOXED(3190378080,32,FLEN)
NAN_BOXED(1036554883,32,FLEN)
NAN_BOXED(1058513751,32,FLEN)
NAN_BOXED(3190378080,32,FLEN)
NAN_BOXED(1036554883,32,FLEN)
NAN_BOXED(1058513751,32,FLEN)
NAN_BOXED(3190378080,32,FLEN)
NAN_BOXED(1036554883,32,FLEN)
NAN_BOXED(1058513751,32,FLEN)
NAN_BOXED(3190378080,32,FLEN)
NAN_BOXED(1036554883,32,FLEN)
NAN_BOXED(1058513751,32,FLEN)
NAN_BOXED(3190378080,32,FLEN)
NAN_BOXED(1036554883,32,FLEN)
NAN_BOXED(1058993385,32,FLEN)
NAN_BOXED(3216421632,32,FLEN)
NAN_BOXED(1063445127,32,FLEN)
NAN_BOXED(1058993385,32,FLEN)
NAN_BOXED(3216421632,32,FLEN)
NAN_BOXED(1063445127,32,FLEN)
NAN_BOXED(1058993385,32,FLEN)
NAN_BOXED(3216421632,32,FLEN)
NAN_BOXED(1063445127,32,FLEN)
NAN_BOXED(1058993385,32,FLEN)
NAN_BOXED(3216421632,32,FLEN)
NAN_BOXED(1063445127,32,FLEN)
NAN_BOXED(1058993385,32,FLEN)
NAN_BOXED(3216421632,32,FLEN)
NAN_BOXED(1063445127,32,FLEN)
NAN_BOXED(1061018709,32,FLEN)
NAN_BOXED(3157885943,32,FLEN)
NAN_BOXED(1007261209,32,FLEN)
NAN_BOXED(1061018709,32,FLEN)
NAN_BOXED(3157885943,32,FLEN)
NAN_BOXED(1007261209,32,FLEN)
NAN_BOXED(1061018709,32,FLEN)
NAN_BOXED(3157885943,32,FLEN)
NAN_BOXED(1007261209,32,FLEN)
NAN_BOXED(1061018709,32,FLEN)
NAN_BOXED(3157885943,32,FLEN)
NAN_BOXED(1007261209,32,FLEN)
NAN_BOXED(1061018709,32,FLEN)
NAN_BOXED(3157885943,32,FLEN)
NAN_BOXED(1007261209,32,FLEN)
NAN_BOXED(1064294763,32,FLEN)
NAN_BOXED(3201274300,32,FLEN)
NAN_BOXED(1052932440,32,FLEN)
NAN_BOXED(1064294763,32,FLEN)
NAN_BOXED(3201274300,32,FLEN)
NAN_BOXED(1052932440,32,FLEN)
NAN_BOXED(1064294763,32,FLEN)
NAN_BOXED(3201274300,32,FLEN)
NAN_BOXED(1052932440,32,FLEN)
NAN_BOXED(1064294763,32,FLEN)
NAN_BOXED(3201274300,32,FLEN)
NAN_BOXED(1052932440,32,FLEN)
NAN_BOXED(1064294763,32,FLEN)
NAN_BOXED(3201274300,32,FLEN)
NAN_BOXED(1052932440,32,FLEN)
NAN_BOXED(1059024763,32,FLEN)
NAN_BOXED(3205196054,32,FLEN)
NAN_BOXED(1051567606,32,FLEN)
NAN_BOXED(1059024763,32,FLEN)
NAN_BOXED(3205196054,32,FLEN)
NAN_BOXED(1051567606,32,FLEN)
NAN_BOXED(1059024763,32,FLEN)
NAN_BOXED(3205196054,32,FLEN)
NAN_BOXED(1051567606,32,FLEN)
NAN_BOXED(1059024763,32,FLEN)
NAN_BOXED(3205196054,32,FLEN)
NAN_BOXED(1051567606,32,FLEN)
NAN_BOXED(1059024763,32,FLEN)
NAN_BOXED(3205196054,32,FLEN)
NAN_BOXED(1051567606,32,FLEN)
NAN_BOXED(1059675158,32,FLEN)
NAN_BOXED(3203328292,32,FLEN)
NAN_BOXED(1050545625,32,FLEN)
NAN_BOXED(1059675158,32,FLEN)
NAN_BOXED(3203328292,32,FLEN)
NAN_BOXED(1050545625,32,FLEN)
NAN_BOXED(1059675158,32,FLEN)
NAN_BOXED(3203328292,32,FLEN)
NAN_BOXED(1050545625,32,FLEN)
NAN_BOXED(1059675158,32,FLEN)
NAN_BOXED(3203328292,32,FLEN)
NAN_BOXED(1050545625,32,FLEN)
NAN_BOXED(1059675158,32,FLEN)
NAN_BOXED(3203328292,32,FLEN)
NAN_BOXED(1050545625,32,FLEN)
NAN_BOXED(1057005199,32,FLEN)
NAN_BOXED(3207756448,32,FLEN)
NAN_BOXED(1051940792,32,FLEN)
NAN_BOXED(1057005199,32,FLEN)
NAN_BOXED(3207756448,32,FLEN)
NAN_BOXED(1051940792,32,FLEN)
NAN_BOXED(1057005199,32,FLEN)
NAN_BOXED(3207756448,32,FLEN)
NAN_BOXED(1051940792,32,FLEN)
NAN_BOXED(1057005199,32,FLEN)
NAN_BOXED(3207756448,32,FLEN)
NAN_BOXED(1051940792,32,FLEN)
NAN_BOXED(1057005199,32,FLEN)
NAN_BOXED(3207756448,32,FLEN)
NAN_BOXED(1051940792,32,FLEN)
NAN_BOXED(1036647404,32,FLEN)
NAN_BOXED(3230123632,32,FLEN)
NAN_BOXED(1054228695,32,FLEN)
NAN_BOXED(1036647404,32,FLEN)
NAN_BOXED(3230123632,32,FLEN)
NAN_BOXED(1054228695,32,FLEN)
NAN_BOXED(1036647404,32,FLEN)
NAN_BOXED(3230123632,32,FLEN)
NAN_BOXED(1054228695,32,FLEN)
NAN_BOXED(1036647404,32,FLEN)
NAN_BOXED(3230123632,32,FLEN)
NAN_BOXED(1054228695,32,FLEN)
NAN_BOXED(1036647404,32,FLEN)
NAN_BOXED(3230123632,32,FLEN)
NAN_BOXED(1054228695,32,FLEN)
NAN_BOXED(1062968536,32,FLEN)
NAN_BOXED(3213597284,32,FLEN)
NAN_BOXED(1064273207,32,FLEN)
NAN_BOXED(1062968536,32,FLEN)
NAN_BOXED(3213597284,32,FLEN)
NAN_BOXED(1064273207,32,FLEN)
NAN_BOXED(1062968536,32,FLEN)
NAN_BOXED(3213597284,32,FLEN)
NAN_BOXED(1064273207,32,FLEN)
NAN_BOXED(1062968536,32,FLEN)
NAN_BOXED(3213597284,32,FLEN)
NAN_BOXED(1064273207,32,FLEN)
NAN_BOXED(1062968536,32,FLEN)
NAN_BOXED(3213597284,32,FLEN)
NAN_BOXED(1064273207,32,FLEN)
NAN_BOXED(1029503275,32,FLEN)
NAN_BOXED(3239552651,32,FLEN)
NAN_BOXED(1057154747,32,FLEN)
NAN_BOXED(1029503275,32,FLEN)
NAN_BOXED(3239552651,32,FLEN)
NAN_BOXED(1057154747,32,FLEN)
NAN_BOXED(1029503275,32,FLEN)
NAN_BOXED(3239552651,32,FLEN)
NAN_BOXED(1057154747,32,FLEN)
NAN_BOXED(1029503275,32,FLEN)
NAN_BOXED(3239552651,32,FLEN)
NAN_BOXED(1057154747,32,FLEN)
NAN_BOXED(1029503275,32,FLEN)
NAN_BOXED(3239552651,32,FLEN)
NAN_BOXED(1057154747,32,FLEN)
NAN_BOXED(1062100885,32,FLEN)
NAN_BOXED(3179877070,32,FLEN)
NAN_BOXED(1029505184,32,FLEN)
NAN_BOXED(1062100885,32,FLEN)
NAN_BOXED(3179877070,32,FLEN)
NAN_BOXED(1029505184,32,FLEN)
NAN_BOXED(1062100885,32,FLEN)
NAN_BOXED(3179877070,32,FLEN)
NAN_BOXED(1029505184,32,FLEN)
NAN_BOXED(1062100885,32,FLEN)
NAN_BOXED(3179877070,32,FLEN)
NAN_BOXED(1029505184,32,FLEN)
NAN_BOXED(1062100885,32,FLEN)
NAN_BOXED(3179877070,32,FLEN)
NAN_BOXED(1029505184,32,FLEN)
NAN_BOXED(1054315090,32,FLEN)
NAN_BOXED(3206860586,32,FLEN)
NAN_BOXED(1049282607,32,FLEN)
NAN_BOXED(1054315090,32,FLEN)
NAN_BOXED(3206860586,32,FLEN)
NAN_BOXED(1049282607,32,FLEN)
NAN_BOXED(1054315090,32,FLEN)
NAN_BOXED(3206860586,32,FLEN)
NAN_BOXED(1049282607,32,FLEN)
NAN_BOXED(1054315090,32,FLEN)
NAN_BOXED(3206860586,32,FLEN)
NAN_BOXED(1049282607,32,FLEN)
NAN_BOXED(1054315090,32,FLEN)
NAN_BOXED(3206860586,32,FLEN)
NAN_BOXED(1049282607,32,FLEN)
NAN_BOXED(1039387496,32,FLEN)
NAN_BOXED(3233810231,32,FLEN)
NAN_BOXED(1060560750,32,FLEN)
NAN_BOXED(1039387496,32,FLEN)
NAN_BOXED(3233810231,32,FLEN)
NAN_BOXED(1060560750,32,FLEN)
NAN_BOXED(1039387496,32,FLEN)
NAN_BOXED(3233810231,32,FLEN)
NAN_BOXED(1060560750,32,FLEN)
NAN_BOXED(1039387496,32,FLEN)
NAN_BOXED(3233810231,32,FLEN)
NAN_BOXED(1060560750,32,FLEN)
NAN_BOXED(1039387496,32,FLEN)
NAN_BOXED(3233810231,32,FLEN)
NAN_BOXED(1060560750,32,FLEN)
NAN_BOXED(1059368837,32,FLEN)
NAN_BOXED(3192001390,32,FLEN)
NAN_BOXED(1039774470,32,FLEN)
NAN_BOXED(1059368837,32,FLEN)
NAN_BOXED(3192001390,32,FLEN)
NAN_BOXED(1039774470,32,FLEN)
NAN_BOXED(1059368837,32,FLEN)
NAN_BOXED(3192001390,32,FLEN)
NAN_BOXED(1039774470,32,FLEN)
NAN_BOXED(1059368837,32,FLEN)
NAN_BOXED(3192001390,32,FLEN)
NAN_BOXED(1039774470,32,FLEN)
NAN_BOXED(1059368837,32,FLEN)
NAN_BOXED(3192001390,32,FLEN)
NAN_BOXED(1039774470,32,FLEN)
NAN_BOXED(1063088698,32,FLEN)
NAN_BOXED(3196814063,32,FLEN)
NAN_BOXED(1047616658,32,FLEN)
NAN_BOXED(1063088698,32,FLEN)
NAN_BOXED(3196814063,32,FLEN)
NAN_BOXED(1047616658,32,FLEN)
NAN_BOXED(1063088698,32,FLEN)
NAN_BOXED(3196814063,32,FLEN)
NAN_BOXED(1047616658,32,FLEN)
NAN_BOXED(1063088698,32,FLEN)
NAN_BOXED(3196814063,32,FLEN)
NAN_BOXED(1047616658,32,FLEN)
NAN_BOXED(1063088698,32,FLEN)
NAN_BOXED(3196814063,32,FLEN)
NAN_BOXED(1047616658,32,FLEN)
NAN_BOXED(1063715483,32,FLEN)
NAN_BOXED(3199191410,32,FLEN)
NAN_BOXED(1050583183,32,FLEN)
NAN_BOXED(1063715483,32,FLEN)
NAN_BOXED(3199191410,32,FLEN)
NAN_BOXED(1050583183,32,FLEN)
NAN_BOXED(1063715483,32,FLEN)
NAN_BOXED(3199191410,32,FLEN)
NAN_BOXED(1050583183,32,FLEN)
NAN_BOXED(1063715483,32,FLEN)
NAN_BOXED(3199191410,32,FLEN)
NAN_BOXED(1050583183,32,FLEN)
NAN_BOXED(1063715483,32,FLEN)
NAN_BOXED(3199191410,32,FLEN)
NAN_BOXED(1050583183,32,FLEN)
NAN_BOXED(1050181733,32,FLEN)
NAN_BOXED(3190547866,32,FLEN)
NAN_BOXED(1028443412,32,FLEN)
NAN_BOXED(1050181733,32,FLEN)
NAN_BOXED(3190547866,32,FLEN)
NAN_BOXED(1028443412,32,FLEN)
NAN_BOXED(1050181733,32,FLEN)
NAN_BOXED(3190547866,32,FLEN)
NAN_BOXED(1028443412,32,FLEN)
NAN_BOXED(1050181733,32,FLEN)
NAN_BOXED(3190547866,32,FLEN)
NAN_BOXED(1028443412,32,FLEN)
NAN_BOXED(1050181733,32,FLEN)
NAN_BOXED(3190547866,32,FLEN)
NAN_BOXED(1028443412,32,FLEN)
NAN_BOXED(1042301793,32,FLEN)
NAN_BOXED(3226139542,32,FLEN)
NAN_BOXED(1056843093,32,FLEN)
NAN_BOXED(1042301793,32,FLEN)
NAN_BOXED(3226139542,32,FLEN)
NAN_BOXED(1056843093,32,FLEN)
NAN_BOXED(1042301793,32,FLEN)
NAN_BOXED(3226139542,32,FLEN)
NAN_BOXED(1056843093,32,FLEN)
NAN_BOXED(1042301793,32,FLEN)
NAN_BOXED(3226139542,32,FLEN)
NAN_BOXED(1056843093,32,FLEN)
NAN_BOXED(1042301793,32,FLEN)
NAN_BOXED(3226139542,32,FLEN)
NAN_BOXED(1056843093,32,FLEN)
NAN_BOXED(1062037230,32,FLEN)
NAN_BOXED(3213333355,32,FLEN)
NAN_BOXED(1062833951,32,FLEN)
NAN_BOXED(1062037230,32,FLEN)
NAN_BOXED(3213333355,32,FLEN)
NAN_BOXED(1062833951,32,FLEN)
NAN_BOXED(1062037230,32,FLEN)
NAN_BOXED(3213333355,32,FLEN)
NAN_BOXED(1062833951,32,FLEN)
NAN_BOXED(1062037230,32,FLEN)
NAN_BOXED(3213333355,32,FLEN)
NAN_BOXED(1062833951,32,FLEN)
NAN_BOXED(1062037230,32,FLEN)
NAN_BOXED(3213333355,32,FLEN)
NAN_BOXED(1062833951,32,FLEN)
NAN_BOXED(1056000918,32,FLEN)
NAN_BOXED(3213173799,32,FLEN)
NAN_BOXED(1056636082,32,FLEN)
NAN_BOXED(1056000918,32,FLEN)
NAN_BOXED(3213173799,32,FLEN)
NAN_BOXED(1056636082,32,FLEN)
NAN_BOXED(1056000918,32,FLEN)
NAN_BOXED(3213173799,32,FLEN)
NAN_BOXED(1056636082,32,FLEN)
NAN_BOXED(1056000918,32,FLEN)
NAN_BOXED(3213173799,32,FLEN)
NAN_BOXED(1056636082,32,FLEN)
NAN_BOXED(1056000918,32,FLEN)
NAN_BOXED(3213173799,32,FLEN)
NAN_BOXED(1056636082,32,FLEN)
NAN_BOXED(1064154973,32,FLEN)
NAN_BOXED(3184882407,32,FLEN)
NAN_BOXED(1036399683,32,FLEN)
NAN_BOXED(1064154973,32,FLEN)
NAN_BOXED(3184882407,32,FLEN)
NAN_BOXED(1036399683,32,FLEN)
NAN_BOXED(1064154973,32,FLEN)
NAN_BOXED(3184882407,32,FLEN)
NAN_BOXED(1036399683,32,FLEN)
NAN_BOXED(1064154973,32,FLEN)
NAN_BOXED(3184882407,32,FLEN)
NAN_BOXED(1036399683,32,FLEN)
NAN_BOXED(1064154973,32,FLEN)
NAN_BOXED(3184882407,32,FLEN)
NAN_BOXED(1036399683,32,FLEN)
NAN_BOXED(1056715727,32,FLEN)
NAN_BOXED(3206233455,32,FLEN)
NAN_BOXED(1050210276,32,FLEN)
NAN_BOXED(1056715727,32,FLEN)
NAN_BOXED(3206233455,32,FLEN)
NAN_BOXED(1050210276,32,FLEN)
NAN_BOXED(1056715727,32,FLEN)
NAN_BOXED(3206233455,32,FLEN)
NAN_BOXED(1050210276,32,FLEN)
NAN_BOXED(1056715727,32,FLEN)
NAN_BOXED(3206233455,32,FLEN)
NAN_BOXED(1050210276,32,FLEN)
NAN_BOXED(1056715727,32,FLEN)
NAN_BOXED(3206233455,32,FLEN)
NAN_BOXED(1050210276,32,FLEN)
NAN_BOXED(1061662982,32,FLEN)
NAN_BOXED(3212322150,32,FLEN)
NAN_BOXED(1061261483,32,FLEN)
NAN_BOXED(1061662982,32,FLEN)
NAN_BOXED(3212322150,32,FLEN)
NAN_BOXED(1061261483,32,FLEN)
NAN_BOXED(1061662982,32,FLEN)
NAN_BOXED(3212322150,32,FLEN)
NAN_BOXED(1061261483,32,FLEN)
NAN_BOXED(1061662982,32,FLEN)
NAN_BOXED(3212322150,32,FLEN)
NAN_BOXED(1061261483,32,FLEN)
NAN_BOXED(1061662982,32,FLEN)
NAN_BOXED(3212322150,32,FLEN)
NAN_BOXED(1061261483,32,FLEN)
NAN_BOXED(1065153295,32,FLEN)
NAN_BOXED(3207211283,32,FLEN)
NAN_BOXED(1059594750,32,FLEN)
NAN_BOXED(1065153295,32,FLEN)
NAN_BOXED(3207211283,32,FLEN)
NAN_BOXED(1059594750,32,FLEN)
NAN_BOXED(1065153295,32,FLEN)
NAN_BOXED(3207211283,32,FLEN)
NAN_BOXED(1059594750,32,FLEN)
NAN_BOXED(1065153295,32,FLEN)
NAN_BOXED(3207211283,32,FLEN)
NAN_BOXED(1059594750,32,FLEN)
NAN_BOXED(1065153295,32,FLEN)
NAN_BOXED(3207211283,32,FLEN)
NAN_BOXED(1059594750,32,FLEN)
NAN_BOXED(1060876345,32,FLEN)
NAN_BOXED(3209254232,32,FLEN)
NAN_BOXED(1058249711,32,FLEN)
NAN_BOXED(1060876345,32,FLEN)
NAN_BOXED(3209254232,32,FLEN)
NAN_BOXED(1058249711,32,FLEN)
NAN_BOXED(1060876345,32,FLEN)
NAN_BOXED(3209254232,32,FLEN)
NAN_BOXED(1058249711,32,FLEN)
NAN_BOXED(1060876345,32,FLEN)
NAN_BOXED(3209254232,32,FLEN)
NAN_BOXED(1058249711,32,FLEN)
NAN_BOXED(1060876345,32,FLEN)
NAN_BOXED(3209254232,32,FLEN)
NAN_BOXED(1058249711,32,FLEN)
NAN_BOXED(1059029446,32,FLEN)
NAN_BOXED(3196593617,32,FLEN)
NAN_BOXED(1042917635,32,FLEN)
NAN_BOXED(1059029446,32,FLEN)
NAN_BOXED(3196593617,32,FLEN)
NAN_BOXED(1042917635,32,FLEN)
NAN_BOXED(1059029446,32,FLEN)
NAN_BOXED(3196593617,32,FLEN)
NAN_BOXED(1042917635,32,FLEN)
NAN_BOXED(1059029446,32,FLEN)
NAN_BOXED(3196593617,32,FLEN)
NAN_BOXED(1042917635,32,FLEN)
NAN_BOXED(1059029446,32,FLEN)
NAN_BOXED(3196593617,32,FLEN)
NAN_BOXED(1042917635,32,FLEN)
NAN_BOXED(1037977132,32,FLEN)
NAN_BOXED(3237161965,32,FLEN)
NAN_BOXED(1062412992,32,FLEN)
NAN_BOXED(1037977132,32,FLEN)
NAN_BOXED(3237161965,32,FLEN)
NAN_BOXED(1062412992,32,FLEN)
NAN_BOXED(1037977132,32,FLEN)
NAN_BOXED(3237161965,32,FLEN)
NAN_BOXED(1062412992,32,FLEN)
NAN_BOXED(1037977132,32,FLEN)
NAN_BOXED(3237161965,32,FLEN)
NAN_BOXED(1062412992,32,FLEN)
NAN_BOXED(1037977132,32,FLEN)
NAN_BOXED(3237161965,32,FLEN)
NAN_BOXED(1062412992,32,FLEN)
NAN_BOXED(1058705010,32,FLEN)
NAN_BOXED(3216033741,32,FLEN)
NAN_BOXED(1062565150,32,FLEN)
NAN_BOXED(1058705010,32,FLEN)
NAN_BOXED(3216033741,32,FLEN)
NAN_BOXED(1062565150,32,FLEN)
NAN_BOXED(1058705010,32,FLEN)
NAN_BOXED(3216033741,32,FLEN)
NAN_BOXED(1062565150,32,FLEN)
NAN_BOXED(1058705010,32,FLEN)
NAN_BOXED(3216033741,32,FLEN)
NAN_BOXED(1062565150,32,FLEN)
NAN_BOXED(1058705010,32,FLEN)
NAN_BOXED(3216033741,32,FLEN)
NAN_BOXED(1062565150,32,FLEN)
NAN_BOXED(1051489483,32,FLEN)
NAN_BOXED(3180917249,32,FLEN)
NAN_BOXED(1020137663,32,FLEN)
NAN_BOXED(1051489483,32,FLEN)
NAN_BOXED(3180917249,32,FLEN)
NAN_BOXED(1020137663,32,FLEN)
NAN_BOXED(1051489483,32,FLEN)
NAN_BOXED(3180917249,32,FLEN)
NAN_BOXED(1020137663,32,FLEN)
NAN_BOXED(1051489483,32,FLEN)
NAN_BOXED(3180917249,32,FLEN)
NAN_BOXED(1020137663,32,FLEN)
NAN_BOXED(1051489483,32,FLEN)
NAN_BOXED(3180917249,32,FLEN)
NAN_BOXED(1020137663,32,FLEN)
NAN_BOXED(1061967435,32,FLEN)
NAN_BOXED(3197487988,32,FLEN)
NAN_BOXED(1047470398,32,FLEN)
NAN_BOXED(1061967435,32,FLEN)
NAN_BOXED(3197487988,32,FLEN)
NAN_BOXED(1047470398,32,FLEN)
NAN_BOXED(1061967435,32,FLEN)
NAN_BOXED(3197487988,32,FLEN)
NAN_BOXED(1047470398,32,FLEN)
NAN_BOXED(1061967435,32,FLEN)
NAN_BOXED(3197487988,32,FLEN)
NAN_BOXED(1047470398,32,FLEN)
NAN_BOXED(1061967435,32,FLEN)
NAN_BOXED(3197487988,32,FLEN)
NAN_BOXED(1047470398,32,FLEN)
NAN_BOXED(1060319300,32,FLEN)
NAN_BOXED(3216274341,32,FLEN)
NAN_BOXED(1065131461,32,FLEN)
NAN_BOXED(1060319300,32,FLEN)
NAN_BOXED(3216274341,32,FLEN)
NAN_BOXED(1065131461,32,FLEN)
NAN_BOXED(1060319300,32,FLEN)
NAN_BOXED(3216274341,32,FLEN)
NAN_BOXED(1065131461,32,FLEN)
NAN_BOXED(1060319300,32,FLEN)
NAN_BOXED(3216274341,32,FLEN)
NAN_BOXED(1065131461,32,FLEN)
NAN_BOXED(1060319300,32,FLEN)
NAN_BOXED(3216274341,32,FLEN)
NAN_BOXED(1065131461,32,FLEN)
NAN_BOXED(1047616466,32,FLEN)
NAN_BOXED(3224549221,32,FLEN)
NAN_BOXED(1059618496,32,FLEN)
NAN_BOXED(1047616466,32,FLEN)
NAN_BOXED(3224549221,32,FLEN)
NAN_BOXED(1059618496,32,FLEN)
NAN_BOXED(1047616466,32,FLEN)
NAN_BOXED(3224549221,32,FLEN)
NAN_BOXED(1059618496,32,FLEN)
NAN_BOXED(1047616466,32,FLEN)
NAN_BOXED(3224549221,32,FLEN)
NAN_BOXED(1059618496,32,FLEN)
NAN_BOXED(1047616466,32,FLEN)
NAN_BOXED(3224549221,32,FLEN)
NAN_BOXED(1059618496,32,FLEN)
NAN_BOXED(1062498454,32,FLEN)
NAN_BOXED(3207470165,32,FLEN)
NAN_BOXED(1058044938,32,FLEN)
NAN_BOXED(1062498454,32,FLEN)
NAN_BOXED(3207470165,32,FLEN)
NAN_BOXED(1058044938,32,FLEN)
NAN_BOXED(1062498454,32,FLEN)
NAN_BOXED(3207470165,32,FLEN)
NAN_BOXED(1058044938,32,FLEN)
NAN_BOXED(1062498454,32,FLEN)
NAN_BOXED(3207470165,32,FLEN)
NAN_BOXED(1058044938,32,FLEN)
NAN_BOXED(1062498454,32,FLEN)
NAN_BOXED(3207470165,32,FLEN)
NAN_BOXED(1058044938,32,FLEN)
NAN_BOXED(1061465611,32,FLEN)
NAN_BOXED(3208941479,32,FLEN)
NAN_BOXED(1058472863,32,FLEN)
NAN_BOXED(1061465611,32,FLEN)
NAN_BOXED(3208941479,32,FLEN)
NAN_BOXED(1058472863,32,FLEN)
NAN_BOXED(1061465611,32,FLEN)
NAN_BOXED(3208941479,32,FLEN)
NAN_BOXED(1058472863,32,FLEN)
NAN_BOXED(1061465611,32,FLEN)
NAN_BOXED(3208941479,32,FLEN)
NAN_BOXED(1058472863,32,FLEN)
NAN_BOXED(1061465611,32,FLEN)
NAN_BOXED(3208941479,32,FLEN)
NAN_BOXED(1058472863,32,FLEN)
NAN_BOXED(1057869682,32,FLEN)
NAN_BOXED(3213262268,32,FLEN)
NAN_BOXED(1058340984,32,FLEN)
NAN_BOXED(1057869682,32,FLEN)
NAN_BOXED(3213262268,32,FLEN)
NAN_BOXED(1058340984,32,FLEN)
NAN_BOXED(1057869682,32,FLEN)
NAN_BOXED(3213262268,32,FLEN)
NAN_BOXED(1058340984,32,FLEN)
NAN_BOXED(1057869682,32,FLEN)
NAN_BOXED(3213262268,32,FLEN)
NAN_BOXED(1058340984,32,FLEN)
NAN_BOXED(1057869682,32,FLEN)
NAN_BOXED(3213262268,32,FLEN)
NAN_BOXED(1058340984,32,FLEN)
NAN_BOXED(1053994748,32,FLEN)
NAN_BOXED(3218947822,32,FLEN)
NAN_BOXED(1060508890,32,FLEN)
NAN_BOXED(1053994748,32,FLEN)
NAN_BOXED(3218947822,32,FLEN)
NAN_BOXED(1060508890,32,FLEN)
NAN_BOXED(1053994748,32,FLEN)
NAN_BOXED(3218947822,32,FLEN)
NAN_BOXED(1060508890,32,FLEN)
NAN_BOXED(1053994748,32,FLEN)
NAN_BOXED(3218947822,32,FLEN)
NAN_BOXED(1060508890,32,FLEN)
NAN_BOXED(1053994748,32,FLEN)
NAN_BOXED(3218947822,32,FLEN)
NAN_BOXED(1060508890,32,FLEN)
NAN_BOXED(1063757506,32,FLEN)
NAN_BOXED(3212928230,32,FLEN)
NAN_BOXED(1063922859,32,FLEN)
NAN_BOXED(1063757506,32,FLEN)
NAN_BOXED(3212928230,32,FLEN)
NAN_BOXED(1063922859,32,FLEN)
NAN_BOXED(1063757506,32,FLEN)
NAN_BOXED(3212928230,32,FLEN)
NAN_BOXED(1063922859,32,FLEN)
NAN_BOXED(1063757506,32,FLEN)
NAN_BOXED(3212928230,32,FLEN)
NAN_BOXED(1063922859,32,FLEN)
NAN_BOXED(1063757506,32,FLEN)
NAN_BOXED(3212928230,32,FLEN)
NAN_BOXED(1063922859,32,FLEN)
NAN_BOXED(1063566049,32,FLEN)
NAN_BOXED(3205055090,32,FLEN)
NAN_BOXED(1056261826,32,FLEN)
NAN_BOXED(1063566049,32,FLEN)
NAN_BOXED(3205055090,32,FLEN)
NAN_BOXED(1056261826,32,FLEN)
NAN_BOXED(1063566049,32,FLEN)
NAN_BOXED(3205055090,32,FLEN)
NAN_BOXED(1056261826,32,FLEN)
NAN_BOXED(1063566049,32,FLEN)
NAN_BOXED(3205055090,32,FLEN)
NAN_BOXED(1056261826,32,FLEN)
NAN_BOXED(1063566049,32,FLEN)
NAN_BOXED(3205055090,32,FLEN)
NAN_BOXED(1056261826,32,FLEN)
NAN_BOXED(1059310668,32,FLEN)
NAN_BOXED(3197755690,32,FLEN)
NAN_BOXED(1044703830,32,FLEN)
NAN_BOXED(1059310668,32,FLEN)
NAN_BOXED(3197755690,32,FLEN)
NAN_BOXED(1044703830,32,FLEN)
NAN_BOXED(1059310668,32,FLEN)
NAN_BOXED(3197755690,32,FLEN)
NAN_BOXED(1044703830,32,FLEN)
NAN_BOXED(1059310668,32,FLEN)
NAN_BOXED(3197755690,32,FLEN)
NAN_BOXED(1044703830,32,FLEN)
NAN_BOXED(1059310668,32,FLEN)
NAN_BOXED(3197755690,32,FLEN)
NAN_BOXED(1044703830,32,FLEN)
NAN_BOXED(1056799409,32,FLEN)
NAN_BOXED(3205948967,32,FLEN)
NAN_BOXED(1049979335,32,FLEN)
NAN_BOXED(1056799409,32,FLEN)
NAN_BOXED(3205948967,32,FLEN)
NAN_BOXED(1049979335,32,FLEN)
NAN_BOXED(1056799409,32,FLEN)
NAN_BOXED(3205948967,32,FLEN)
NAN_BOXED(1049979335,32,FLEN)
NAN_BOXED(1056799409,32,FLEN)
NAN_BOXED(3205948967,32,FLEN)
NAN_BOXED(1049979335,32,FLEN)
NAN_BOXED(1056799409,32,FLEN)
NAN_BOXED(3205948967,32,FLEN)
NAN_BOXED(1049979335,32,FLEN)
NAN_BOXED(1017331957,32,FLEN)
NAN_BOXED(3258717189,32,FLEN)
NAN_BOXED(1064296689,32,FLEN)
NAN_BOXED(1017331957,32,FLEN)
NAN_BOXED(3258717189,32,FLEN)
NAN_BOXED(1064296689,32,FLEN)
NAN_BOXED(1017331957,32,FLEN)
NAN_BOXED(3258717189,32,FLEN)
NAN_BOXED(1064296689,32,FLEN)
NAN_BOXED(1017331957,32,FLEN)
NAN_BOXED(3258717189,32,FLEN)
NAN_BOXED(1064296689,32,FLEN)
NAN_BOXED(1017331957,32,FLEN)
NAN_BOXED(3258717189,32,FLEN)
NAN_BOXED(1064296689,32,FLEN)
NAN_BOXED(1065068973,32,FLEN)
NAN_BOXED(3210730047,32,FLEN)
NAN_BOXED(1062997850,32,FLEN)
NAN_BOXED(1065068973,32,FLEN)
NAN_BOXED(3210730047,32,FLEN)
NAN_BOXED(1062997850,32,FLEN)
NAN_BOXED(1065068973,32,FLEN)
NAN_BOXED(3210730047,32,FLEN)
NAN_BOXED(1062997850,32,FLEN)
NAN_BOXED(1065068973,32,FLEN)
NAN_BOXED(3210730047,32,FLEN)
NAN_BOXED(1062997850,32,FLEN)
NAN_BOXED(1065068973,32,FLEN)
NAN_BOXED(3210730047,32,FLEN)
NAN_BOXED(1062997850,32,FLEN)
NAN_BOXED(1058871624,32,FLEN)
NAN_BOXED(3207715174,32,FLEN)
NAN_BOXED(1054492617,32,FLEN)
NAN_BOXED(1058871624,32,FLEN)
NAN_BOXED(3207715174,32,FLEN)
NAN_BOXED(1054492617,32,FLEN)
NAN_BOXED(1058871624,32,FLEN)
NAN_BOXED(3207715174,32,FLEN)
NAN_BOXED(1054492617,32,FLEN)
NAN_BOXED(1058871624,32,FLEN)
NAN_BOXED(3207715174,32,FLEN)
NAN_BOXED(1054492617,32,FLEN)
NAN_BOXED(1058871624,32,FLEN)
NAN_BOXED(3207715174,32,FLEN)
NAN_BOXED(1054492617,32,FLEN)
NAN_BOXED(1048785650,32,FLEN)
NAN_BOXED(3223452514,32,FLEN)
NAN_BOXED(1059456959,32,FLEN)
NAN_BOXED(1048785650,32,FLEN)
NAN_BOXED(3223452514,32,FLEN)
NAN_BOXED(1059456959,32,FLEN)
NAN_BOXED(1048785650,32,FLEN)
NAN_BOXED(3223452514,32,FLEN)
NAN_BOXED(1059456959,32,FLEN)
NAN_BOXED(1048785650,32,FLEN)
NAN_BOXED(3223452514,32,FLEN)
NAN_BOXED(1059456959,32,FLEN)
NAN_BOXED(1048785650,32,FLEN)
NAN_BOXED(3223452514,32,FLEN)
NAN_BOXED(1059456959,32,FLEN)
NAN_BOXED(1024426983,32,FLEN)
NAN_BOXED(3252922145,32,FLEN)
NAN_BOXED(1065303887,32,FLEN)
NAN_BOXED(1024426983,32,FLEN)
NAN_BOXED(3252922145,32,FLEN)
NAN_BOXED(1065303887,32,FLEN)
NAN_BOXED(1024426983,32,FLEN)
NAN_BOXED(3252922145,32,FLEN)
NAN_BOXED(1065303887,32,FLEN)
NAN_BOXED(1024426983,32,FLEN)
NAN_BOXED(3252922145,32,FLEN)
NAN_BOXED(1065303887,32,FLEN)
NAN_BOXED(1024426983,32,FLEN)
NAN_BOXED(3252922145,32,FLEN)
NAN_BOXED(1065303887,32,FLEN)
NAN_BOXED(1042826216,32,FLEN)
NAN_BOXED(3231306792,32,FLEN)
NAN_BOXED(1061828625,32,FLEN)
NAN_BOXED(1042826216,32,FLEN)
NAN_BOXED(3231306792,32,FLEN)
NAN_BOXED(1061828625,32,FLEN)
NAN_BOXED(1042826216,32,FLEN)
NAN_BOXED(3231306792,32,FLEN)
NAN_BOXED(1061828625,32,FLEN)
NAN_BOXED(1042826216,32,FLEN)
NAN_BOXED(3231306792,32,FLEN)
NAN_BOXED(1061828625,32,FLEN)
NAN_BOXED(1042826216,32,FLEN)
NAN_BOXED(3231306792,32,FLEN)
NAN_BOXED(1061828625,32,FLEN)
NAN_BOXED(1040163342,32,FLEN)
NAN_BOXED(3237470288,32,FLEN)
NAN_BOXED(1064797530,32,FLEN)
NAN_BOXED(1040163342,32,FLEN)
NAN_BOXED(3237470288,32,FLEN)
NAN_BOXED(1064797530,32,FLEN)
NAN_BOXED(1040163342,32,FLEN)
NAN_BOXED(3237470288,32,FLEN)
NAN_BOXED(1064797530,32,FLEN)
NAN_BOXED(1040163342,32,FLEN)
NAN_BOXED(3237470288,32,FLEN)
NAN_BOXED(1064797530,32,FLEN)
NAN_BOXED(1040163342,32,FLEN)
NAN_BOXED(3237470288,32,FLEN)
NAN_BOXED(1064797530,32,FLEN)
NAN_BOXED(1024373102,32,FLEN)
NAN_BOXED(3235710602,32,FLEN)
NAN_BOXED(1047946659,32,FLEN)
NAN_BOXED(1024373102,32,FLEN)
NAN_BOXED(3235710602,32,FLEN)
NAN_BOXED(1047946659,32,FLEN)
NAN_BOXED(1024373102,32,FLEN)
NAN_BOXED(3235710602,32,FLEN)
NAN_BOXED(1047946659,32,FLEN)
NAN_BOXED(1024373102,32,FLEN)
NAN_BOXED(3235710602,32,FLEN)
NAN_BOXED(1047946659,32,FLEN)
NAN_BOXED(1024373102,32,FLEN)
NAN_BOXED(3235710602,32,FLEN)
NAN_BOXED(1047946659,32,FLEN)
NAN_BOXED(1008487985,32,FLEN)
NAN_BOXED(3257931856,32,FLEN)
NAN_BOXED(1054279988,32,FLEN)
NAN_BOXED(1008487985,32,FLEN)
NAN_BOXED(3257931856,32,FLEN)
NAN_BOXED(1054279988,32,FLEN)
NAN_BOXED(1008487985,32,FLEN)
NAN_BOXED(3257931856,32,FLEN)
NAN_BOXED(1054279988,32,FLEN)
NAN_BOXED(1008487985,32,FLEN)
NAN_BOXED(3257931856,32,FLEN)
NAN_BOXED(1054279988,32,FLEN)
NAN_BOXED(1008487985,32,FLEN)
NAN_BOXED(3257931856,32,FLEN)
NAN_BOXED(1054279988,32,FLEN)
NAN_BOXED(1062370259,32,FLEN)
NAN_BOXED(3172342566,32,FLEN)
NAN_BOXED(1022809538,32,FLEN)
NAN_BOXED(1062370259,32,FLEN)
NAN_BOXED(3172342566,32,FLEN)
NAN_BOXED(1022809538,32,FLEN)
NAN_BOXED(1062370259,32,FLEN)
NAN_BOXED(3172342566,32,FLEN)
NAN_BOXED(1022809538,32,FLEN)
NAN_BOXED(1062370259,32,FLEN)
NAN_BOXED(3172342566,32,FLEN)
NAN_BOXED(1022809538,32,FLEN)
NAN_BOXED(1062370259,32,FLEN)
NAN_BOXED(3172342566,32,FLEN)
NAN_BOXED(1022809538,32,FLEN)
NAN_BOXED(1057945674,32,FLEN)
NAN_BOXED(3218216753,32,FLEN)
NAN_BOXED(1063954754,32,FLEN)
NAN_BOXED(1057945674,32,FLEN)
NAN_BOXED(3218216753,32,FLEN)
NAN_BOXED(1063954754,32,FLEN)
NAN_BOXED(1057945674,32,FLEN)
NAN_BOXED(3218216753,32,FLEN)
NAN_BOXED(1063954754,32,FLEN)
NAN_BOXED(1057945674,32,FLEN)
NAN_BOXED(3218216753,32,FLEN)
NAN_BOXED(1063954754,32,FLEN)
NAN_BOXED(1057945674,32,FLEN)
NAN_BOXED(3218216753,32,FLEN)
NAN_BOXED(1063954754,32,FLEN)
NAN_BOXED(1053427911,32,FLEN)
NAN_BOXED(3215136911,32,FLEN)
NAN_BOXED(1057011449,32,FLEN)
NAN_BOXED(1053427911,32,FLEN)
NAN_BOXED(3215136911,32,FLEN)
NAN_BOXED(1057011449,32,FLEN)
NAN_BOXED(1053427911,32,FLEN)
NAN_BOXED(3215136911,32,FLEN)
NAN_BOXED(1057011449,32,FLEN)
NAN_BOXED(1053427911,32,FLEN)
NAN_BOXED(3215136911,32,FLEN)
NAN_BOXED(1057011449,32,FLEN)
NAN_BOXED(1053427911,32,FLEN)
NAN_BOXED(3215136911,32,FLEN)
NAN_BOXED(1057011449,32,FLEN)
NAN_BOXED(1057414443,32,FLEN)
NAN_BOXED(3217911125,32,FLEN)
NAN_BOXED(1062760809,32,FLEN)
NAN_BOXED(1057414443,32,FLEN)
NAN_BOXED(3217911125,32,FLEN)
NAN_BOXED(1062760809,32,FLEN)
NAN_BOXED(1057414443,32,FLEN)
NAN_BOXED(3217911125,32,FLEN)
NAN_BOXED(1062760809,32,FLEN)
NAN_BOXED(1057414443,32,FLEN)
NAN_BOXED(3217911125,32,FLEN)
NAN_BOXED(1062760809,32,FLEN)
NAN_BOXED(1057414443,32,FLEN)
NAN_BOXED(3217911125,32,FLEN)
NAN_BOXED(1062760809,32,FLEN)
NAN_BOXED(1063306026,32,FLEN)
NAN_BOXED(3203694390,32,FLEN)
NAN_BOXED(1054255540,32,FLEN)
NAN_BOXED(1063306026,32,FLEN)
NAN_BOXED(3203694390,32,FLEN)
NAN_BOXED(1054255540,32,FLEN)
NAN_BOXED(1063306026,32,FLEN)
NAN_BOXED(3203694390,32,FLEN)
NAN_BOXED(1054255540,32,FLEN)
NAN_BOXED(1063306026,32,FLEN)
NAN_BOXED(3203694390,32,FLEN)
NAN_BOXED(1054255540,32,FLEN)
NAN_BOXED(1063306026,32,FLEN)
NAN_BOXED(3203694390,32,FLEN)
NAN_BOXED(1054255540,32,FLEN)
NAN_BOXED(1057758351,32,FLEN)
NAN_BOXED(3217837088,32,FLEN)
NAN_BOXED(1063231705,32,FLEN)
NAN_BOXED(1057758351,32,FLEN)
NAN_BOXED(3217837088,32,FLEN)
NAN_BOXED(1063231705,32,FLEN)
NAN_BOXED(1057758351,32,FLEN)
NAN_BOXED(3217837088,32,FLEN)
NAN_BOXED(1063231705,32,FLEN)
NAN_BOXED(1057758351,32,FLEN)
NAN_BOXED(3217837088,32,FLEN)
NAN_BOXED(1063231705,32,FLEN)
NAN_BOXED(1057758351,32,FLEN)
NAN_BOXED(3217837088,32,FLEN)
NAN_BOXED(1063231705,32,FLEN)
NAN_BOXED(1057979904,32,FLEN)
NAN_BOXED(3204102101,32,FLEN)
NAN_BOXED(1049397270,32,FLEN)
NAN_BOXED(1057979904,32,FLEN)
NAN_BOXED(3204102101,32,FLEN)
NAN_BOXED(1049397270,32,FLEN)
NAN_BOXED(1057979904,32,FLEN)
NAN_BOXED(3204102101,32,FLEN)
NAN_BOXED(1049397270,32,FLEN)
NAN_BOXED(1057979904,32,FLEN)
NAN_BOXED(3204102101,32,FLEN)
NAN_BOXED(1049397270,32,FLEN)
NAN_BOXED(1057979904,32,FLEN)
NAN_BOXED(3204102101,32,FLEN)
NAN_BOXED(1049397270,32,FLEN)
NAN_BOXED(1049733983,32,FLEN)
NAN_BOXED(3220036683,32,FLEN)
NAN_BOXED(1057446145,32,FLEN)
NAN_BOXED(1049733983,32,FLEN)
NAN_BOXED(3220036683,32,FLEN)
NAN_BOXED(1057446145,32,FLEN)
NAN_BOXED(1049733983,32,FLEN)
NAN_BOXED(3220036683,32,FLEN)
NAN_BOXED(1057446145,32,FLEN)
NAN_BOXED(1049733983,32,FLEN)
NAN_BOXED(3220036683,32,FLEN)
NAN_BOXED(1057446145,32,FLEN)
NAN_BOXED(1049733983,32,FLEN)
NAN_BOXED(3220036683,32,FLEN)
NAN_BOXED(1057446145,32,FLEN)
NAN_BOXED(1058747138,32,FLEN)
NAN_BOXED(3213292721,32,FLEN)
NAN_BOXED(1059299862,32,FLEN)
NAN_BOXED(1058747138,32,FLEN)
NAN_BOXED(3213292721,32,FLEN)
NAN_BOXED(1059299862,32,FLEN)
NAN_BOXED(1058747138,32,FLEN)
NAN_BOXED(3213292721,32,FLEN)
NAN_BOXED(1059299862,32,FLEN)
NAN_BOXED(1058747138,32,FLEN)
NAN_BOXED(3213292721,32,FLEN)
NAN_BOXED(1059299862,32,FLEN)
NAN_BOXED(1058747138,32,FLEN)
NAN_BOXED(3213292721,32,FLEN)
NAN_BOXED(1059299862,32,FLEN)
NAN_BOXED(1061569624,32,FLEN)
NAN_BOXED(3213140278,32,FLEN)
NAN_BOXED(1062039600,32,FLEN)
NAN_BOXED(1061569624,32,FLEN)
NAN_BOXED(3213140278,32,FLEN)
NAN_BOXED(1062039600,32,FLEN)
NAN_BOXED(1061569624,32,FLEN)
NAN_BOXED(3213140278,32,FLEN)
NAN_BOXED(1062039600,32,FLEN)
NAN_BOXED(1061569624,32,FLEN)
NAN_BOXED(3213140278,32,FLEN)
NAN_BOXED(1062039600,32,FLEN)
NAN_BOXED(1061569624,32,FLEN)
NAN_BOXED(3213140278,32,FLEN)
NAN_BOXED(1062039600,32,FLEN)
NAN_BOXED(1057866863,32,FLEN)
NAN_BOXED(3217957450,32,FLEN)
NAN_BOXED(1063538205,32,FLEN)
NAN_BOXED(1057866863,32,FLEN)
NAN_BOXED(3217957450,32,FLEN)
NAN_BOXED(1063538205,32,FLEN)
NAN_BOXED(1057866863,32,FLEN)
NAN_BOXED(3217957450,32,FLEN)
NAN_BOXED(1063538205,32,FLEN)
NAN_BOXED(1057866863,32,FLEN)
NAN_BOXED(3217957450,32,FLEN)
NAN_BOXED(1063538205,32,FLEN)
NAN_BOXED(1057866863,32,FLEN)
NAN_BOXED(3217957450,32,FLEN)
NAN_BOXED(1063538205,32,FLEN)
NAN_BOXED(1049410129,32,FLEN)
NAN_BOXED(3213350201,32,FLEN)
NAN_BOXED(1049974511,32,FLEN)
NAN_BOXED(1049410129,32,FLEN)
NAN_BOXED(3213350201,32,FLEN)
NAN_BOXED(1049974511,32,FLEN)
NAN_BOXED(1049410129,32,FLEN)
NAN_BOXED(3213350201,32,FLEN)
NAN_BOXED(1049974511,32,FLEN)
NAN_BOXED(1049410129,32,FLEN)
NAN_BOXED(3213350201,32,FLEN)
NAN_BOXED(1049974511,32,FLEN)
NAN_BOXED(1049410129,32,FLEN)
NAN_BOXED(3213350201,32,FLEN)
NAN_BOXED(1049974511,32,FLEN)
NAN_BOXED(1053222673,32,FLEN)
NAN_BOXED(3223389330,32,FLEN)
NAN_BOXED(1064973758,32,FLEN)
NAN_BOXED(1053222673,32,FLEN)
NAN_BOXED(3223389330,32,FLEN)
NAN_BOXED(1064973758,32,FLEN)
NAN_BOXED(1053222673,32,FLEN)
NAN_BOXED(3223389330,32,FLEN)
NAN_BOXED(1064973758,32,FLEN)
NAN_BOXED(1053222673,32,FLEN)
NAN_BOXED(3223389330,32,FLEN)
NAN_BOXED(1064973758,32,FLEN)
NAN_BOXED(1053222673,32,FLEN)
NAN_BOXED(3223389330,32,FLEN)
NAN_BOXED(1064973758,32,FLEN)
NAN_BOXED(1059244663,32,FLEN)
NAN_BOXED(3211034301,32,FLEN)
NAN_BOXED(1058098410,32,FLEN)
NAN_BOXED(1059244663,32,FLEN)
NAN_BOXED(3211034301,32,FLEN)
NAN_BOXED(1058098410,32,FLEN)
NAN_BOXED(1059244663,32,FLEN)
NAN_BOXED(3211034301,32,FLEN)
NAN_BOXED(1058098410,32,FLEN)
NAN_BOXED(1059244663,32,FLEN)
NAN_BOXED(3211034301,32,FLEN)
NAN_BOXED(1058098410,32,FLEN)
NAN_BOXED(1059244663,32,FLEN)
NAN_BOXED(3211034301,32,FLEN)
NAN_BOXED(1058098410,32,FLEN)
NAN_BOXED(1063787303,32,FLEN)
NAN_BOXED(3172042922,32,FLEN)
NAN_BOXED(1023669066,32,FLEN)
NAN_BOXED(1063787303,32,FLEN)
NAN_BOXED(3172042922,32,FLEN)
NAN_BOXED(1023669066,32,FLEN)
NAN_BOXED(1063787303,32,FLEN)
NAN_BOXED(3172042922,32,FLEN)
NAN_BOXED(1023669066,32,FLEN)
NAN_BOXED(1063787303,32,FLEN)
NAN_BOXED(3172042922,32,FLEN)
NAN_BOXED(1023669066,32,FLEN)
NAN_BOXED(1063787303,32,FLEN)
NAN_BOXED(3172042922,32,FLEN)
NAN_BOXED(1023669066,32,FLEN)
NAN_BOXED(1048198097,32,FLEN)
NAN_BOXED(3221374450,32,FLEN)
NAN_BOXED(1056877950,32,FLEN)
NAN_BOXED(1048198097,32,FLEN)
NAN_BOXED(3221374450,32,FLEN)
NAN_BOXED(1056877950,32,FLEN)
NAN_BOXED(1048198097,32,FLEN)
NAN_BOXED(3221374450,32,FLEN)
NAN_BOXED(1056877950,32,FLEN)
NAN_BOXED(1048198097,32,FLEN)
NAN_BOXED(3221374450,32,FLEN)
NAN_BOXED(1056877950,32,FLEN)
NAN_BOXED(1048198097,32,FLEN)
NAN_BOXED(3221374450,32,FLEN)
NAN_BOXED(1056877950,32,FLEN)
NAN_BOXED(1050080219,32,FLEN)
NAN_BOXED(3224208214,32,FLEN)
NAN_BOXED(1061986425,32,FLEN)
NAN_BOXED(1050080219,32,FLEN)
NAN_BOXED(3224208214,32,FLEN)
NAN_BOXED(1061986425,32,FLEN)
NAN_BOXED(1050080219,32,FLEN)
NAN_BOXED(3224208214,32,FLEN)
NAN_BOXED(1061986425,32,FLEN)
NAN_BOXED(1050080219,32,FLEN)
NAN_BOXED(3224208214,32,FLEN)
NAN_BOXED(1061986425,32,FLEN)
NAN_BOXED(1050080219,32,FLEN)
NAN_BOXED(3224208214,32,FLEN)
NAN_BOXED(1061986425,32,FLEN)
NAN_BOXED(1061503945,32,FLEN)
NAN_BOXED(3206385502,32,FLEN)
NAN_BOXED(1056100888,32,FLEN)
NAN_BOXED(1061503945,32,FLEN)
NAN_BOXED(3206385502,32,FLEN)
NAN_BOXED(1056100888,32,FLEN)
NAN_BOXED(1061503945,32,FLEN)
NAN_BOXED(3206385502,32,FLEN)
NAN_BOXED(1056100888,32,FLEN)
NAN_BOXED(1061503945,32,FLEN)
NAN_BOXED(3206385502,32,FLEN)
NAN_BOXED(1056100888,32,FLEN)
NAN_BOXED(1061503945,32,FLEN)
NAN_BOXED(3206385502,32,FLEN)
NAN_BOXED(1056100888,32,FLEN)
NAN_BOXED(1048778969,32,FLEN)
NAN_BOXED(3216004246,32,FLEN)
NAN_BOXED(1052022988,32,FLEN)
NAN_BOXED(1048778969,32,FLEN)
NAN_BOXED(3216004246,32,FLEN)
NAN_BOXED(1052022988,32,FLEN)
NAN_BOXED(1048778969,32,FLEN)
NAN_BOXED(3216004246,32,FLEN)
NAN_BOXED(1052022988,32,FLEN)
NAN_BOXED(1048778969,32,FLEN)
NAN_BOXED(3216004246,32,FLEN)
NAN_BOXED(1052022988,32,FLEN)
NAN_BOXED(1048778969,32,FLEN)
NAN_BOXED(3216004246,32,FLEN)
NAN_BOXED(1052022988,32,FLEN)
NAN_BOXED(1065241056,32,FLEN)
NAN_BOXED(3200738298,32,FLEN)
NAN_BOXED(1053167292,32,FLEN)
NAN_BOXED(1065241056,32,FLEN)
NAN_BOXED(3200738298,32,FLEN)
NAN_BOXED(1053167292,32,FLEN)
NAN_BOXED(1065241056,32,FLEN)
NAN_BOXED(3200738298,32,FLEN)
NAN_BOXED(1053167292,32,FLEN)
NAN_BOXED(1065241056,32,FLEN)
NAN_BOXED(3200738298,32,FLEN)
NAN_BOXED(1053167292,32,FLEN)
NAN_BOXED(1065241056,32,FLEN)
NAN_BOXED(3200738298,32,FLEN)
NAN_BOXED(1053167292,32,FLEN)
NAN_BOXED(1035643954,32,FLEN)
NAN_BOXED(3224649639,32,FLEN)
NAN_BOXED(1048801150,32,FLEN)
NAN_BOXED(1035643954,32,FLEN)
NAN_BOXED(3224649639,32,FLEN)
NAN_BOXED(1048801150,32,FLEN)
NAN_BOXED(1035643954,32,FLEN)
NAN_BOXED(3224649639,32,FLEN)
NAN_BOXED(1048801150,32,FLEN)
NAN_BOXED(1035643954,32,FLEN)
NAN_BOXED(3224649639,32,FLEN)
NAN_BOXED(1048801150,32,FLEN)
NAN_BOXED(1035643954,32,FLEN)
NAN_BOXED(3224649639,32,FLEN)
NAN_BOXED(1048801150,32,FLEN)
NAN_BOXED(1033130225,32,FLEN)
NAN_BOXED(3196135646,32,FLEN)
NAN_BOXED(1016441070,32,FLEN)
NAN_BOXED(1033130225,32,FLEN)
NAN_BOXED(3196135646,32,FLEN)
NAN_BOXED(1016441070,32,FLEN)
NAN_BOXED(1033130225,32,FLEN)
NAN_BOXED(3196135646,32,FLEN)
NAN_BOXED(1016441070,32,FLEN)
NAN_BOXED(1033130225,32,FLEN)
NAN_BOXED(3196135646,32,FLEN)
NAN_BOXED(1016441070,32,FLEN)
NAN_BOXED(1033130225,32,FLEN)
NAN_BOXED(3196135646,32,FLEN)
NAN_BOXED(1016441070,32,FLEN)
NAN_BOXED(1061600687,32,FLEN)
NAN_BOXED(3211264646,32,FLEN)
NAN_BOXED(1060380124,32,FLEN)
NAN_BOXED(1061600687,32,FLEN)
NAN_BOXED(3211264646,32,FLEN)
NAN_BOXED(1060380124,32,FLEN)
NAN_BOXED(1061600687,32,FLEN)
NAN_BOXED(3211264646,32,FLEN)
NAN_BOXED(1060380124,32,FLEN)
NAN_BOXED(1061600687,32,FLEN)
NAN_BOXED(3211264646,32,FLEN)
NAN_BOXED(1060380124,32,FLEN)
NAN_BOXED(1061600687,32,FLEN)
NAN_BOXED(3211264646,32,FLEN)
NAN_BOXED(1060380124,32,FLEN)
NAN_BOXED(1055376188,32,FLEN)
NAN_BOXED(3176261128,32,FLEN)
NAN_BOXED(1019086501,32,FLEN)
NAN_BOXED(1055376188,32,FLEN)
NAN_BOXED(3176261128,32,FLEN)
NAN_BOXED(1019086501,32,FLEN)
NAN_BOXED(1055376188,32,FLEN)
NAN_BOXED(3176261128,32,FLEN)
NAN_BOXED(1019086501,32,FLEN)
NAN_BOXED(1055376188,32,FLEN)
NAN_BOXED(3176261128,32,FLEN)
NAN_BOXED(1019086501,32,FLEN)
NAN_BOXED(1055376188,32,FLEN)
NAN_BOXED(3176261128,32,FLEN)
NAN_BOXED(1019086501,32,FLEN)
NAN_BOXED(1059158166,32,FLEN)
NAN_BOXED(3183358532,32,FLEN)
NAN_BOXED(1030745704,32,FLEN)
NAN_BOXED(1059158166,32,FLEN)
NAN_BOXED(3183358532,32,FLEN)
NAN_BOXED(1030745704,32,FLEN)
NAN_BOXED(1059158166,32,FLEN)
NAN_BOXED(3183358532,32,FLEN)
NAN_BOXED(1030745704,32,FLEN)
NAN_BOXED(1059158166,32,FLEN)
NAN_BOXED(3183358532,32,FLEN)
NAN_BOXED(1030745704,32,FLEN)
NAN_BOXED(1059158166,32,FLEN)
NAN_BOXED(3183358532,32,FLEN)
NAN_BOXED(1030745704,32,FLEN)
NAN_BOXED(1041832731,32,FLEN)
NAN_BOXED(3226406470,32,FLEN)
NAN_BOXED(1056418537,32,FLEN)
NAN_BOXED(1041832731,32,FLEN)
NAN_BOXED(3226406470,32,FLEN)
NAN_BOXED(1056418537,32,FLEN)
NAN_BOXED(1041832731,32,FLEN)
NAN_BOXED(3226406470,32,FLEN)
NAN_BOXED(1056418537,32,FLEN)
NAN_BOXED(1041832731,32,FLEN)
NAN_BOXED(3226406470,32,FLEN)
NAN_BOXED(1056418537,32,FLEN)
NAN_BOXED(1041832731,32,FLEN)
NAN_BOXED(3226406470,32,FLEN)
NAN_BOXED(1056418537,32,FLEN)
NAN_BOXED(1052766540,32,FLEN)
NAN_BOXED(3186270069,32,FLEN)
NAN_BOXED(1026550303,32,FLEN)
NAN_BOXED(1052766540,32,FLEN)
NAN_BOXED(3186270069,32,FLEN)
NAN_BOXED(1026550303,32,FLEN)
NAN_BOXED(1052766540,32,FLEN)
NAN_BOXED(3186270069,32,FLEN)
NAN_BOXED(1026550303,32,FLEN)
NAN_BOXED(1052766540,32,FLEN)
NAN_BOXED(3186270069,32,FLEN)
NAN_BOXED(1026550303,32,FLEN)
NAN_BOXED(1052766540,32,FLEN)
NAN_BOXED(3186270069,32,FLEN)
NAN_BOXED(1026550303,32,FLEN)
NAN_BOXED(1046343059,32,FLEN)
NAN_BOXED(3226464705,32,FLEN)
NAN_BOXED(1060390062,32,FLEN)
NAN_BOXED(1046343059,32,FLEN)
NAN_BOXED(3226464705,32,FLEN)
NAN_BOXED(1060390062,32,FLEN)
NAN_BOXED(1046343059,32,FLEN)
NAN_BOXED(3226464705,32,FLEN)
NAN_BOXED(1060390062,32,FLEN)
NAN_BOXED(1046343059,32,FLEN)
NAN_BOXED(3226464705,32,FLEN)
NAN_BOXED(1060390062,32,FLEN)
NAN_BOXED(1046343059,32,FLEN)
NAN_BOXED(3226464705,32,FLEN)
NAN_BOXED(1060390062,32,FLEN)
NAN_BOXED(1042152565,32,FLEN)
NAN_BOXED(3232157649,32,FLEN)
NAN_BOXED(1062069225,32,FLEN)
NAN_BOXED(1042152565,32,FLEN)
NAN_BOXED(3232157649,32,FLEN)
NAN_BOXED(1062069225,32,FLEN)
NAN_BOXED(1042152565,32,FLEN)
NAN_BOXED(3232157649,32,FLEN)
NAN_BOXED(1062069225,32,FLEN)
NAN_BOXED(1042152565,32,FLEN)
NAN_BOXED(3232157649,32,FLEN)
NAN_BOXED(1062069225,32,FLEN)
NAN_BOXED(1042152565,32,FLEN)
NAN_BOXED(3232157649,32,FLEN)
NAN_BOXED(1062069225,32,FLEN)
NAN_BOXED(1059146112,32,FLEN)
NAN_BOXED(3179716961,32,FLEN)
NAN_BOXED(1026139210,32,FLEN)
NAN_BOXED(1059146112,32,FLEN)
NAN_BOXED(3179716961,32,FLEN)
NAN_BOXED(1026139210,32,FLEN)
NAN_BOXED(1059146112,32,FLEN)
NAN_BOXED(3179716961,32,FLEN)
NAN_BOXED(1026139210,32,FLEN)
NAN_BOXED(1059146112,32,FLEN)
NAN_BOXED(3179716961,32,FLEN)
NAN_BOXED(1026139210,32,FLEN)
NAN_BOXED(1059146112,32,FLEN)
NAN_BOXED(3179716961,32,FLEN)
NAN_BOXED(1026139210,32,FLEN)
NAN_BOXED(1042062721,32,FLEN)
NAN_BOXED(3230659341,32,FLEN)
NAN_BOXED(1060118873,32,FLEN)
NAN_BOXED(1042062721,32,FLEN)
NAN_BOXED(3230659341,32,FLEN)
NAN_BOXED(1060118873,32,FLEN)
NAN_BOXED(1042062721,32,FLEN)
NAN_BOXED(3230659341,32,FLEN)
NAN_BOXED(1060118873,32,FLEN)
NAN_BOXED(1042062721,32,FLEN)
NAN_BOXED(3230659341,32,FLEN)
NAN_BOXED(1060118873,32,FLEN)
NAN_BOXED(1042062721,32,FLEN)
NAN_BOXED(3230659341,32,FLEN)
NAN_BOXED(1060118873,32,FLEN)
NAN_BOXED(1060479513,32,FLEN)
NAN_BOXED(3205210005,32,FLEN)
NAN_BOXED(1053171835,32,FLEN)
NAN_BOXED(1060479513,32,FLEN)
NAN_BOXED(3205210005,32,FLEN)
NAN_BOXED(1053171835,32,FLEN)
NAN_BOXED(1060479513,32,FLEN)
NAN_BOXED(3205210005,32,FLEN)
NAN_BOXED(1053171835,32,FLEN)
NAN_BOXED(1060479513,32,FLEN)
NAN_BOXED(3205210005,32,FLEN)
NAN_BOXED(1053171835,32,FLEN)
NAN_BOXED(1060479513,32,FLEN)
NAN_BOXED(3205210005,32,FLEN)
NAN_BOXED(1053171835,32,FLEN)
NAN_BOXED(1042359190,32,FLEN)
NAN_BOXED(3221250429,32,FLEN)
NAN_BOXED(1050779217,32,FLEN)
NAN_BOXED(1042359190,32,FLEN)
NAN_BOXED(3221250429,32,FLEN)
NAN_BOXED(1050779217,32,FLEN)
NAN_BOXED(1042359190,32,FLEN)
NAN_BOXED(3221250429,32,FLEN)
NAN_BOXED(1050779217,32,FLEN)
NAN_BOXED(1042359190,32,FLEN)
NAN_BOXED(3221250429,32,FLEN)
NAN_BOXED(1050779217,32,FLEN)
NAN_BOXED(1042359190,32,FLEN)
NAN_BOXED(3221250429,32,FLEN)
NAN_BOXED(1050779217,32,FLEN)
NAN_BOXED(1031993536,32,FLEN)
NAN_BOXED(3230144115,32,FLEN)
NAN_BOXED(1049313093,32,FLEN)
NAN_BOXED(1031993536,32,FLEN)
NAN_BOXED(3230144115,32,FLEN)
NAN_BOXED(1049313093,32,FLEN)
NAN_BOXED(1031993536,32,FLEN)
NAN_BOXED(3230144115,32,FLEN)
NAN_BOXED(1049313093,32,FLEN)
NAN_BOXED(1031993536,32,FLEN)
NAN_BOXED(3230144115,32,FLEN)
NAN_BOXED(1049313093,32,FLEN)
NAN_BOXED(1031993536,32,FLEN)
NAN_BOXED(3230144115,32,FLEN)
NAN_BOXED(1049313093,32,FLEN)
NAN_BOXED(1043816494,32,FLEN)
NAN_BOXED(3222089900,32,FLEN)
NAN_BOXED(1053443502,32,FLEN)
NAN_BOXED(1043816494,32,FLEN)
NAN_BOXED(3222089900,32,FLEN)
NAN_BOXED(1053443502,32,FLEN)
NAN_BOXED(1043816494,32,FLEN)
NAN_BOXED(3222089900,32,FLEN)
NAN_BOXED(1053443502,32,FLEN)
NAN_BOXED(1043816494,32,FLEN)
NAN_BOXED(3222089900,32,FLEN)
NAN_BOXED(1053443502,32,FLEN)
NAN_BOXED(1043816494,32,FLEN)
NAN_BOXED(3222089900,32,FLEN)
NAN_BOXED(1053443502,32,FLEN)
NAN_BOXED(1059276791,32,FLEN)
NAN_BOXED(3211118721,32,FLEN)
NAN_BOXED(1058180931,32,FLEN)
NAN_BOXED(1059276791,32,FLEN)
NAN_BOXED(3211118721,32,FLEN)
NAN_BOXED(1058180931,32,FLEN)
NAN_BOXED(1059276791,32,FLEN)
NAN_BOXED(3211118721,32,FLEN)
NAN_BOXED(1058180931,32,FLEN)
NAN_BOXED(1059276791,32,FLEN)
NAN_BOXED(3211118721,32,FLEN)
NAN_BOXED(1058180931,32,FLEN)
NAN_BOXED(1059276791,32,FLEN)
NAN_BOXED(3211118721,32,FLEN)
NAN_BOXED(1058180931,32,FLEN)
NAN_BOXED(1057133348,32,FLEN)
NAN_BOXED(3211554325,32,FLEN)
NAN_BOXED(1055993752,32,FLEN)
NAN_BOXED(1057133348,32,FLEN)
NAN_BOXED(3211554325,32,FLEN)
NAN_BOXED(1055993752,32,FLEN)
NAN_BOXED(1057133348,32,FLEN)
NAN_BOXED(3211554325,32,FLEN)
NAN_BOXED(1055993752,32,FLEN)
NAN_BOXED(1057133348,32,FLEN)
NAN_BOXED(3211554325,32,FLEN)
NAN_BOXED(1055993752,32,FLEN)
NAN_BOXED(1057133348,32,FLEN)
NAN_BOXED(3211554325,32,FLEN)
NAN_BOXED(1055993752,32,FLEN)
NAN_BOXED(1042657472,32,FLEN)
NAN_BOXED(3230701830,32,FLEN)
NAN_BOXED(1060842733,32,FLEN)
NAN_BOXED(1042657472,32,FLEN)
NAN_BOXED(3230701830,32,FLEN)
NAN_BOXED(1060842733,32,FLEN)
NAN_BOXED(1042657472,32,FLEN)
NAN_BOXED(3230701830,32,FLEN)
NAN_BOXED(1060842733,32,FLEN)
NAN_BOXED(1042657472,32,FLEN)
NAN_BOXED(3230701830,32,FLEN)
NAN_BOXED(1060842733,32,FLEN)
NAN_BOXED(1042657472,32,FLEN)
NAN_BOXED(3230701830,32,FLEN)
NAN_BOXED(1060842733,32,FLEN)
NAN_BOXED(1064201839,32,FLEN)
NAN_BOXED(3197285566,32,FLEN)
NAN_BOXED(1049142098,32,FLEN)
NAN_BOXED(1064201839,32,FLEN)
NAN_BOXED(3197285566,32,FLEN)
NAN_BOXED(1049142098,32,FLEN)
NAN_BOXED(1064201839,32,FLEN)
NAN_BOXED(3197285566,32,FLEN)
NAN_BOXED(1049142098,32,FLEN)
NAN_BOXED(1064201839,32,FLEN)
NAN_BOXED(3197285566,32,FLEN)
NAN_BOXED(1049142098,32,FLEN)
NAN_BOXED(1064201839,32,FLEN)
NAN_BOXED(3197285566,32,FLEN)
NAN_BOXED(1049142098,32,FLEN)
NAN_BOXED(1060808546,32,FLEN)
NAN_BOXED(3209411730,32,FLEN)
NAN_BOXED(1058311224,32,FLEN)
NAN_BOXED(1060808546,32,FLEN)
NAN_BOXED(3209411730,32,FLEN)
NAN_BOXED(1058311224,32,FLEN)
NAN_BOXED(1060808546,32,FLEN)
NAN_BOXED(3209411730,32,FLEN)
NAN_BOXED(1058311224,32,FLEN)
NAN_BOXED(1060808546,32,FLEN)
NAN_BOXED(3209411730,32,FLEN)
NAN_BOXED(1058311224,32,FLEN)
NAN_BOXED(1060808546,32,FLEN)
NAN_BOXED(3209411730,32,FLEN)
NAN_BOXED(1058311224,32,FLEN)
NAN_BOXED(1063389568,32,FLEN)
NAN_BOXED(3192253890,32,FLEN)
NAN_BOXED(1043252031,32,FLEN)
NAN_BOXED(1063389568,32,FLEN)
NAN_BOXED(3192253890,32,FLEN)
NAN_BOXED(1043252031,32,FLEN)
NAN_BOXED(1063389568,32,FLEN)
NAN_BOXED(3192253890,32,FLEN)
NAN_BOXED(1043252031,32,FLEN)
NAN_BOXED(1063389568,32,FLEN)
NAN_BOXED(3192253890,32,FLEN)
NAN_BOXED(1043252031,32,FLEN)
NAN_BOXED(1063389568,32,FLEN)
NAN_BOXED(3192253890,32,FLEN)
NAN_BOXED(1043252031,32,FLEN)
NAN_BOXED(1060757203,32,FLEN)
NAN_BOXED(3212427804,32,FLEN)
NAN_BOXED(1060460203,32,FLEN)
NAN_BOXED(1060757203,32,FLEN)
NAN_BOXED(3212427804,32,FLEN)
NAN_BOXED(1060460203,32,FLEN)
NAN_BOXED(1060757203,32,FLEN)
NAN_BOXED(3212427804,32,FLEN)
NAN_BOXED(1060460203,32,FLEN)
NAN_BOXED(1060757203,32,FLEN)
NAN_BOXED(3212427804,32,FLEN)
NAN_BOXED(1060460203,32,FLEN)
NAN_BOXED(1060757203,32,FLEN)
NAN_BOXED(3212427804,32,FLEN)
NAN_BOXED(1060460203,32,FLEN)
NAN_BOXED(1044937066,32,FLEN)
NAN_BOXED(3223458116,32,FLEN)
NAN_BOXED(1056822453,32,FLEN)
NAN_BOXED(1044937066,32,FLEN)
NAN_BOXED(3223458116,32,FLEN)
NAN_BOXED(1056822453,32,FLEN)
NAN_BOXED(1044937066,32,FLEN)
NAN_BOXED(3223458116,32,FLEN)
NAN_BOXED(1056822453,32,FLEN)
NAN_BOXED(1044937066,32,FLEN)
NAN_BOXED(3223458116,32,FLEN)
NAN_BOXED(1056822453,32,FLEN)
NAN_BOXED(1044937066,32,FLEN)
NAN_BOXED(3223458116,32,FLEN)
NAN_BOXED(1056822453,32,FLEN)
NAN_BOXED(1060700405,32,FLEN)
NAN_BOXED(3189646092,32,FLEN)
NAN_BOXED(1038389207,32,FLEN)
NAN_BOXED(1060700405,32,FLEN)
NAN_BOXED(3189646092,32,FLEN)
NAN_BOXED(1038389207,32,FLEN)
NAN_BOXED(1060700405,32,FLEN)
NAN_BOXED(3189646092,32,FLEN)
NAN_BOXED(1038389207,32,FLEN)
NAN_BOXED(1060700405,32,FLEN)
NAN_BOXED(3189646092,32,FLEN)
NAN_BOXED(1038389207,32,FLEN)
NAN_BOXED(1060700405,32,FLEN)
NAN_BOXED(3189646092,32,FLEN)
NAN_BOXED(1038389207,32,FLEN)
NAN_BOXED(1058444309,32,FLEN)
NAN_BOXED(3213556251,32,FLEN)
NAN_BOXED(1059290592,32,FLEN)
NAN_BOXED(1058444309,32,FLEN)
NAN_BOXED(3213556251,32,FLEN)
NAN_BOXED(1059290592,32,FLEN)
NAN_BOXED(1058444309,32,FLEN)
NAN_BOXED(3213556251,32,FLEN)
NAN_BOXED(1059290592,32,FLEN)
NAN_BOXED(1058444309,32,FLEN)
NAN_BOXED(3213556251,32,FLEN)
NAN_BOXED(1059290592,32,FLEN)
NAN_BOXED(1058444309,32,FLEN)
NAN_BOXED(3213556251,32,FLEN)
NAN_BOXED(1059290592,32,FLEN)
NAN_BOXED(1024297191,32,FLEN)
NAN_BOXED(3233960780,32,FLEN)
NAN_BOXED(1045880730,32,FLEN)
NAN_BOXED(1024297191,32,FLEN)
NAN_BOXED(3233960780,32,FLEN)
NAN_BOXED(1045880730,32,FLEN)
NAN_BOXED(1024297191,32,FLEN)
NAN_BOXED(3233960780,32,FLEN)
NAN_BOXED(1045880730,32,FLEN)
NAN_BOXED(1024297191,32,FLEN)
NAN_BOXED(3233960780,32,FLEN)
NAN_BOXED(1045880730,32,FLEN)
NAN_BOXED(1024297191,32,FLEN)
NAN_BOXED(3233960780,32,FLEN)
NAN_BOXED(1045880730,32,FLEN)
NAN_BOXED(1048663693,32,FLEN)
NAN_BOXED(3225291274,32,FLEN)
NAN_BOXED(1061160606,32,FLEN)
NAN_BOXED(1048663693,32,FLEN)
NAN_BOXED(3225291274,32,FLEN)
NAN_BOXED(1061160606,32,FLEN)
NAN_BOXED(1048663693,32,FLEN)
NAN_BOXED(3225291274,32,FLEN)
NAN_BOXED(1061160606,32,FLEN)
NAN_BOXED(1048663693,32,FLEN)
NAN_BOXED(3225291274,32,FLEN)
NAN_BOXED(1061160606,32,FLEN)
NAN_BOXED(1048663693,32,FLEN)
NAN_BOXED(3225291274,32,FLEN)
NAN_BOXED(1061160606,32,FLEN)
NAN_BOXED(1044329816,32,FLEN)
NAN_BOXED(3221898151,32,FLEN)
NAN_BOXED(1053723283,32,FLEN)
NAN_BOXED(1044329816,32,FLEN)
NAN_BOXED(3221898151,32,FLEN)
NAN_BOXED(1053723283,32,FLEN)
NAN_BOXED(1044329816,32,FLEN)
NAN_BOXED(3221898151,32,FLEN)
NAN_BOXED(1053723283,32,FLEN)
NAN_BOXED(1044329816,32,FLEN)
NAN_BOXED(3221898151,32,FLEN)
NAN_BOXED(1053723283,32,FLEN)
NAN_BOXED(1044329816,32,FLEN)
NAN_BOXED(3221898151,32,FLEN)
NAN_BOXED(1053723283,32,FLEN)
NAN_BOXED(1043225754,32,FLEN)
NAN_BOXED(3228406077,32,FLEN)
NAN_BOXED(1059180199,32,FLEN)
NAN_BOXED(1043225754,32,FLEN)
NAN_BOXED(3228406077,32,FLEN)
NAN_BOXED(1059180199,32,FLEN)
NAN_BOXED(1043225754,32,FLEN)
NAN_BOXED(3228406077,32,FLEN)
NAN_BOXED(1059180199,32,FLEN)
NAN_BOXED(1043225754,32,FLEN)
NAN_BOXED(3228406077,32,FLEN)
NAN_BOXED(1059180199,32,FLEN)
NAN_BOXED(1043225754,32,FLEN)
NAN_BOXED(3228406077,32,FLEN)
NAN_BOXED(1059180199,32,FLEN)
NAN_BOXED(1046511307,32,FLEN)
NAN_BOXED(3211867156,32,FLEN)
NAN_BOXED(1045660937,32,FLEN)
NAN_BOXED(1046511307,32,FLEN)
NAN_BOXED(3211867156,32,FLEN)
NAN_BOXED(1045660937,32,FLEN)
NAN_BOXED(1046511307,32,FLEN)
NAN_BOXED(3211867156,32,FLEN)
NAN_BOXED(1045660937,32,FLEN)
NAN_BOXED(1046511307,32,FLEN)
NAN_BOXED(3211867156,32,FLEN)
NAN_BOXED(1045660937,32,FLEN)
NAN_BOXED(1046511307,32,FLEN)
NAN_BOXED(3211867156,32,FLEN)
NAN_BOXED(1045660937,32,FLEN)
NAN_BOXED(1058844653,32,FLEN)
NAN_BOXED(3205524926,32,FLEN)
NAN_BOXED(1051774018,32,FLEN)
NAN_BOXED(1058844653,32,FLEN)
NAN_BOXED(3205524926,32,FLEN)
NAN_BOXED(1051774018,32,FLEN)
NAN_BOXED(1058844653,32,FLEN)
NAN_BOXED(3205524926,32,FLEN)
NAN_BOXED(1051774018,32,FLEN)
NAN_BOXED(1058844653,32,FLEN)
NAN_BOXED(3205524926,32,FLEN)
NAN_BOXED(1051774018,32,FLEN)
NAN_BOXED(1058844653,32,FLEN)
NAN_BOXED(3205524926,32,FLEN)
NAN_BOXED(1051774018,32,FLEN)
NAN_BOXED(1046546618,32,FLEN)
NAN_BOXED(3170954380,32,FLEN)
NAN_BOXED(1004710041,32,FLEN)
NAN_BOXED(1046546618,32,FLEN)
NAN_BOXED(3170954380,32,FLEN)
NAN_BOXED(1004710041,32,FLEN)
NAN_BOXED(1046546618,32,FLEN)
NAN_BOXED(3170954380,32,FLEN)
NAN_BOXED(1004710041,32,FLEN)
NAN_BOXED(1046546618,32,FLEN)
NAN_BOXED(3170954380,32,FLEN)
NAN_BOXED(1004710041,32,FLEN)
NAN_BOXED(1046546618,32,FLEN)
NAN_BOXED(3170954380,32,FLEN)
NAN_BOXED(1004710041,32,FLEN)
NAN_BOXED(1034087051,32,FLEN)
NAN_BOXED(3224107092,32,FLEN)
NAN_BOXED(1046143337,32,FLEN)
NAN_BOXED(1034087051,32,FLEN)
NAN_BOXED(3224107092,32,FLEN)
NAN_BOXED(1046143337,32,FLEN)
NAN_BOXED(1034087051,32,FLEN)
NAN_BOXED(3224107092,32,FLEN)
NAN_BOXED(1046143337,32,FLEN)
NAN_BOXED(1034087051,32,FLEN)
NAN_BOXED(3224107092,32,FLEN)
NAN_BOXED(1046143337,32,FLEN)
NAN_BOXED(1034087051,32,FLEN)
NAN_BOXED(3224107092,32,FLEN)
NAN_BOXED(1046143337,32,FLEN)
NAN_BOXED(1063058006,32,FLEN)
NAN_BOXED(3202820153,32,FLEN)
NAN_BOXED(1053264028,32,FLEN)
NAN_BOXED(1063058006,32,FLEN)
NAN_BOXED(3202820153,32,FLEN)
NAN_BOXED(1053264028,32,FLEN)
NAN_BOXED(1063058006,32,FLEN)
NAN_BOXED(3202820153,32,FLEN)
NAN_BOXED(1053264028,32,FLEN)
NAN_BOXED(1063058006,32,FLEN)
NAN_BOXED(3202820153,32,FLEN)
NAN_BOXED(1053264028,32,FLEN)
NAN_BOXED(1063058006,32,FLEN)
NAN_BOXED(3202820153,32,FLEN)
NAN_BOXED(1053264028,32,FLEN)
NAN_BOXED(1050755719,32,FLEN)
NAN_BOXED(3224994608,32,FLEN)
NAN_BOXED(1063892846,32,FLEN)
NAN_BOXED(1050755719,32,FLEN)
NAN_BOXED(3224994608,32,FLEN)
NAN_BOXED(1063892846,32,FLEN)
NAN_BOXED(1050755719,32,FLEN)
NAN_BOXED(3224994608,32,FLEN)
NAN_BOXED(1063892846,32,FLEN)
NAN_BOXED(1050755719,32,FLEN)
NAN_BOXED(3224994608,32,FLEN)
NAN_BOXED(1063892846,32,FLEN)
NAN_BOXED(1050755719,32,FLEN)
NAN_BOXED(3224994608,32,FLEN)
NAN_BOXED(1063892846,32,FLEN)
NAN_BOXED(1057590549,32,FLEN)
NAN_BOXED(3195680050,32,FLEN)
NAN_BOXED(1040609372,32,FLEN)
NAN_BOXED(1057590549,32,FLEN)
NAN_BOXED(3195680050,32,FLEN)
NAN_BOXED(1040609372,32,FLEN)
NAN_BOXED(1057590549,32,FLEN)
NAN_BOXED(3195680050,32,FLEN)
NAN_BOXED(1040609372,32,FLEN)
NAN_BOXED(1057590549,32,FLEN)
NAN_BOXED(3195680050,32,FLEN)
NAN_BOXED(1040609372,32,FLEN)
NAN_BOXED(1057590549,32,FLEN)
NAN_BOXED(3195680050,32,FLEN)
NAN_BOXED(1040609372,32,FLEN)
NAN_BOXED(1036103300,32,FLEN)
NAN_BOXED(3209309023,32,FLEN)
NAN_BOXED(1033434245,32,FLEN)
NAN_BOXED(1036103300,32,FLEN)
NAN_BOXED(3209309023,32,FLEN)
NAN_BOXED(1033434245,32,FLEN)
NAN_BOXED(1036103300,32,FLEN)
NAN_BOXED(3209309023,32,FLEN)
NAN_BOXED(1033434245,32,FLEN)
NAN_BOXED(1036103300,32,FLEN)
NAN_BOXED(3209309023,32,FLEN)
NAN_BOXED(1033434245,32,FLEN)
NAN_BOXED(1036103300,32,FLEN)
NAN_BOXED(3209309023,32,FLEN)
NAN_BOXED(1033434245,32,FLEN)
NAN_BOXED(1063798015,32,FLEN)
NAN_BOXED(3202202009,32,FLEN)
NAN_BOXED(1053371381,32,FLEN)
NAN_BOXED(1063798015,32,FLEN)
NAN_BOXED(3202202009,32,FLEN)
NAN_BOXED(1053371381,32,FLEN)
NAN_BOXED(1063798015,32,FLEN)
NAN_BOXED(3202202009,32,FLEN)
NAN_BOXED(1053371381,32,FLEN)
NAN_BOXED(1063798015,32,FLEN)
NAN_BOXED(3202202009,32,FLEN)
NAN_BOXED(1053371381,32,FLEN)
NAN_BOXED(1063798015,32,FLEN)
NAN_BOXED(3202202009,32,FLEN)
NAN_BOXED(1053371381,32,FLEN)
NAN_BOXED(1040857781,32,FLEN)
NAN_BOXED(3223627653,32,FLEN)
NAN_BOXED(1051840544,32,FLEN)
NAN_BOXED(1040857781,32,FLEN)
NAN_BOXED(3223627653,32,FLEN)
NAN_BOXED(1051840544,32,FLEN)
NAN_BOXED(1040857781,32,FLEN)
NAN_BOXED(3223627653,32,FLEN)
NAN_BOXED(1051840544,32,FLEN)
NAN_BOXED(1040857781,32,FLEN)
NAN_BOXED(3223627653,32,FLEN)
NAN_BOXED(1051840544,32,FLEN)
NAN_BOXED(1040857781,32,FLEN)
NAN_BOXED(3223627653,32,FLEN)
NAN_BOXED(1051840544,32,FLEN)
NAN_BOXED(1059985857,32,FLEN)
NAN_BOXED(3216305492,32,FLEN)
NAN_BOXED(1064703750,32,FLEN)
NAN_BOXED(1059985857,32,FLEN)
NAN_BOXED(3216305492,32,FLEN)
NAN_BOXED(1064703750,32,FLEN)
NAN_BOXED(1059985857,32,FLEN)
NAN_BOXED(3216305492,32,FLEN)
NAN_BOXED(1064703750,32,FLEN)
NAN_BOXED(1059985857,32,FLEN)
NAN_BOXED(3216305492,32,FLEN)
NAN_BOXED(1064703750,32,FLEN)
NAN_BOXED(1059985857,32,FLEN)
NAN_BOXED(3216305492,32,FLEN)
NAN_BOXED(1064703750,32,FLEN)
NAN_BOXED(1034175434,32,FLEN)
NAN_BOXED(3219187782,32,FLEN)
NAN_BOXED(1041256540,32,FLEN)
NAN_BOXED(1034175434,32,FLEN)
NAN_BOXED(3219187782,32,FLEN)
NAN_BOXED(1041256540,32,FLEN)
NAN_BOXED(1034175434,32,FLEN)
NAN_BOXED(3219187782,32,FLEN)
NAN_BOXED(1041256540,32,FLEN)
NAN_BOXED(1034175434,32,FLEN)
NAN_BOXED(3219187782,32,FLEN)
NAN_BOXED(1041256540,32,FLEN)
NAN_BOXED(1034175434,32,FLEN)
NAN_BOXED(3219187782,32,FLEN)
NAN_BOXED(1041256540,32,FLEN)
NAN_BOXED(1051809231,32,FLEN)
NAN_BOXED(3219797361,32,FLEN)
NAN_BOXED(1059208565,32,FLEN)
NAN_BOXED(1051809231,32,FLEN)
NAN_BOXED(3219797361,32,FLEN)
NAN_BOXED(1059208565,32,FLEN)
NAN_BOXED(1051809231,32,FLEN)
NAN_BOXED(3219797361,32,FLEN)
NAN_BOXED(1059208565,32,FLEN)
NAN_BOXED(1051809231,32,FLEN)
NAN_BOXED(3219797361,32,FLEN)
NAN_BOXED(1059208565,32,FLEN)
NAN_BOXED(1051809231,32,FLEN)
NAN_BOXED(3219797361,32,FLEN)
NAN_BOXED(1059208565,32,FLEN)
NAN_BOXED(1043311670,32,FLEN)
NAN_BOXED(3213503837,32,FLEN)
NAN_BOXED(1044227053,32,FLEN)
NAN_BOXED(1043311670,32,FLEN)
NAN_BOXED(3213503837,32,FLEN)
NAN_BOXED(1044227053,32,FLEN)
NAN_BOXED(1043311670,32,FLEN)
NAN_BOXED(3213503837,32,FLEN)
NAN_BOXED(1044227053,32,FLEN)
NAN_BOXED(1043311670,32,FLEN)
NAN_BOXED(3213503837,32,FLEN)
NAN_BOXED(1044227053,32,FLEN)
NAN_BOXED(1043311670,32,FLEN)
NAN_BOXED(3213503837,32,FLEN)
NAN_BOXED(1044227053,32,FLEN)
NAN_BOXED(1049424427,32,FLEN)
NAN_BOXED(3216645232,32,FLEN)
NAN_BOXED(1053617975,32,FLEN)
NAN_BOXED(1049424427,32,FLEN)
NAN_BOXED(3216645232,32,FLEN)
NAN_BOXED(1053617975,32,FLEN)
NAN_BOXED(1049424427,32,FLEN)
NAN_BOXED(3216645232,32,FLEN)
NAN_BOXED(1053617975,32,FLEN)
NAN_BOXED(1049424427,32,FLEN)
NAN_BOXED(3216645232,32,FLEN)
NAN_BOXED(1053617975,32,FLEN)
NAN_BOXED(1049424427,32,FLEN)
NAN_BOXED(3216645232,32,FLEN)
NAN_BOXED(1053617975,32,FLEN)
NAN_BOXED(1059996344,32,FLEN)
NAN_BOXED(3213116598,32,FLEN)
NAN_BOXED(1060377178,32,FLEN)
NAN_BOXED(1059996344,32,FLEN)
NAN_BOXED(3213116598,32,FLEN)
NAN_BOXED(1060377178,32,FLEN)
NAN_BOXED(1059996344,32,FLEN)
NAN_BOXED(3213116598,32,FLEN)
NAN_BOXED(1060377178,32,FLEN)
NAN_BOXED(1059996344,32,FLEN)
NAN_BOXED(3213116598,32,FLEN)
NAN_BOXED(1060377178,32,FLEN)
NAN_BOXED(1059996344,32,FLEN)
NAN_BOXED(3213116598,32,FLEN)
NAN_BOXED(1060377178,32,FLEN)
NAN_BOXED(1059355505,32,FLEN)
NAN_BOXED(3213237686,32,FLEN)
NAN_BOXED(1059870568,32,FLEN)
NAN_BOXED(1059355505,32,FLEN)
NAN_BOXED(3213237686,32,FLEN)
NAN_BOXED(1059870568,32,FLEN)
NAN_BOXED(1059355505,32,FLEN)
NAN_BOXED(3213237686,32,FLEN)
NAN_BOXED(1059870568,32,FLEN)
NAN_BOXED(1059355505,32,FLEN)
NAN_BOXED(3213237686,32,FLEN)
NAN_BOXED(1059870568,32,FLEN)
NAN_BOXED(1059355505,32,FLEN)
NAN_BOXED(3213237686,32,FLEN)
NAN_BOXED(1059870568,32,FLEN)
NAN_BOXED(1056291705,32,FLEN)
NAN_BOXED(3219934075,32,FLEN)
NAN_BOXED(1063440712,32,FLEN)
NAN_BOXED(1056291705,32,FLEN)
NAN_BOXED(3219934075,32,FLEN)
NAN_BOXED(1063440712,32,FLEN)
NAN_BOXED(1056291705,32,FLEN)
NAN_BOXED(3219934075,32,FLEN)
NAN_BOXED(1063440712,32,FLEN)
NAN_BOXED(1056291705,32,FLEN)
NAN_BOXED(3219934075,32,FLEN)
NAN_BOXED(1063440712,32,FLEN)
NAN_BOXED(1056291705,32,FLEN)
NAN_BOXED(3219934075,32,FLEN)
NAN_BOXED(1063440712,32,FLEN)
NAN_BOXED(1049536211,32,FLEN)
NAN_BOXED(3222651394,32,FLEN)
NAN_BOXED(1059513962,32,FLEN)
NAN_BOXED(1049536211,32,FLEN)
NAN_BOXED(3222651394,32,FLEN)
NAN_BOXED(1059513962,32,FLEN)
NAN_BOXED(1049536211,32,FLEN)
NAN_BOXED(3222651394,32,FLEN)
NAN_BOXED(1059513962,32,FLEN)
NAN_BOXED(1049536211,32,FLEN)
NAN_BOXED(3222651394,32,FLEN)
NAN_BOXED(1059513962,32,FLEN)
NAN_BOXED(1049536211,32,FLEN)
NAN_BOXED(3222651394,32,FLEN)
NAN_BOXED(1059513962,32,FLEN)
NAN_BOXED(1062673260,32,FLEN)
NAN_BOXED(3210936506,32,FLEN)
NAN_BOXED(1061076462,32,FLEN)
NAN_BOXED(1062673260,32,FLEN)
NAN_BOXED(3210936506,32,FLEN)
NAN_BOXED(1061076462,32,FLEN)
NAN_BOXED(1062673260,32,FLEN)
NAN_BOXED(3210936506,32,FLEN)
NAN_BOXED(1061076462,32,FLEN)
NAN_BOXED(1062673260,32,FLEN)
NAN_BOXED(3210936506,32,FLEN)
NAN_BOXED(1061076462,32,FLEN)
NAN_BOXED(1062673260,32,FLEN)
NAN_BOXED(3210936506,32,FLEN)
NAN_BOXED(1061076462,32,FLEN)
NAN_BOXED(1058821973,32,FLEN)
NAN_BOXED(3211684889,32,FLEN)
NAN_BOXED(1058118454,32,FLEN)
NAN_BOXED(1058821973,32,FLEN)
NAN_BOXED(3211684889,32,FLEN)
NAN_BOXED(1058118454,32,FLEN)
NAN_BOXED(1058821973,32,FLEN)
NAN_BOXED(3211684889,32,FLEN)
NAN_BOXED(1058118454,32,FLEN)
NAN_BOXED(1058821973,32,FLEN)
NAN_BOXED(3211684889,32,FLEN)
NAN_BOXED(1058118454,32,FLEN)
NAN_BOXED(1058821973,32,FLEN)
NAN_BOXED(3211684889,32,FLEN)
NAN_BOXED(1058118454,32,FLEN)
NAN_BOXED(1046414888,32,FLEN)
NAN_BOXED(3229893667,32,FLEN)
NAN_BOXED(1063679250,32,FLEN)
NAN_BOXED(1046414888,32,FLEN)
NAN_BOXED(3229893667,32,FLEN)
NAN_BOXED(1063679250,32,FLEN)
NAN_BOXED(1046414888,32,FLEN)
NAN_BOXED(3229893667,32,FLEN)
NAN_BOXED(1063679250,32,FLEN)
NAN_BOXED(1046414888,32,FLEN)
NAN_BOXED(3229893667,32,FLEN)
NAN_BOXED(1063679250,32,FLEN)
NAN_BOXED(1046414888,32,FLEN)
NAN_BOXED(3229893667,32,FLEN)
NAN_BOXED(1063679250,32,FLEN)
NAN_BOXED(1061618550,32,FLEN)
NAN_BOXED(3211314201,32,FLEN)
NAN_BOXED(1060434838,32,FLEN)
NAN_BOXED(1061618550,32,FLEN)
NAN_BOXED(3211314201,32,FLEN)
NAN_BOXED(1060434838,32,FLEN)
NAN_BOXED(1061618550,32,FLEN)
NAN_BOXED(3211314201,32,FLEN)
NAN_BOXED(1060434838,32,FLEN)
NAN_BOXED(1061618550,32,FLEN)
NAN_BOXED(3211314201,32,FLEN)
NAN_BOXED(1060434838,32,FLEN)
NAN_BOXED(1061618550,32,FLEN)
NAN_BOXED(3211314201,32,FLEN)
NAN_BOXED(1060434838,32,FLEN)
NAN_BOXED(1062388951,32,FLEN)
NAN_BOXED(3197884067,32,FLEN)
NAN_BOXED(1048595941,32,FLEN)
NAN_BOXED(1062388951,32,FLEN)
NAN_BOXED(3197884067,32,FLEN)
NAN_BOXED(1048595941,32,FLEN)
NAN_BOXED(1062388951,32,FLEN)
NAN_BOXED(3197884067,32,FLEN)
NAN_BOXED(1048595941,32,FLEN)
NAN_BOXED(1062388951,32,FLEN)
NAN_BOXED(3197884067,32,FLEN)
NAN_BOXED(1048595941,32,FLEN)
NAN_BOXED(1062388951,32,FLEN)
NAN_BOXED(3197884067,32,FLEN)
NAN_BOXED(1048595941,32,FLEN)
NAN_BOXED(1063524332,32,FLEN)
NAN_BOXED(3213384177,32,FLEN)
NAN_BOXED(1064499635,32,FLEN)
NAN_BOXED(1063524332,32,FLEN)
NAN_BOXED(3213384177,32,FLEN)
NAN_BOXED(1064499635,32,FLEN)
NAN_BOXED(1063524332,32,FLEN)
NAN_BOXED(3213384177,32,FLEN)
NAN_BOXED(1064499635,32,FLEN)
NAN_BOXED(1063524332,32,FLEN)
NAN_BOXED(3213384177,32,FLEN)
NAN_BOXED(1064499635,32,FLEN)
NAN_BOXED(1063524332,32,FLEN)
NAN_BOXED(3213384177,32,FLEN)
NAN_BOXED(1064499635,32,FLEN)
NAN_BOXED(1055090484,32,FLEN)
NAN_BOXED(3206025535,32,FLEN)
NAN_BOXED(1049040025,32,FLEN)
NAN_BOXED(1055090484,32,FLEN)
NAN_BOXED(3206025535,32,FLEN)
NAN_BOXED(1049040025,32,FLEN)
NAN_BOXED(1055090484,32,FLEN)
NAN_BOXED(3206025535,32,FLEN)
NAN_BOXED(1049040025,32,FLEN)
NAN_BOXED(1055090484,32,FLEN)
NAN_BOXED(3206025535,32,FLEN)
NAN_BOXED(1049040025,32,FLEN)
NAN_BOXED(1055090484,32,FLEN)
NAN_BOXED(3206025535,32,FLEN)
NAN_BOXED(1049040025,32,FLEN)
NAN_BOXED(1043537626,32,FLEN)
NAN_BOXED(3223399738,32,FLEN)
NAN_BOXED(1054968858,32,FLEN)
NAN_BOXED(1043537626,32,FLEN)
NAN_BOXED(3223399738,32,FLEN)
NAN_BOXED(1054968858,32,FLEN)
NAN_BOXED(1043537626,32,FLEN)
NAN_BOXED(3223399738,32,FLEN)
NAN_BOXED(1054968858,32,FLEN)
NAN_BOXED(1043537626,32,FLEN)
NAN_BOXED(3223399738,32,FLEN)
NAN_BOXED(1054968858,32,FLEN)
NAN_BOXED(1043537626,32,FLEN)
NAN_BOXED(3223399738,32,FLEN)
NAN_BOXED(1054968858,32,FLEN)
NAN_BOXED(1059871062,32,FLEN)
NAN_BOXED(3191054624,32,FLEN)
NAN_BOXED(1039261154,32,FLEN)
NAN_BOXED(1059871062,32,FLEN)
NAN_BOXED(3191054624,32,FLEN)
NAN_BOXED(1039261154,32,FLEN)
NAN_BOXED(1059871062,32,FLEN)
NAN_BOXED(3191054624,32,FLEN)
NAN_BOXED(1039261154,32,FLEN)
NAN_BOXED(1059871062,32,FLEN)
NAN_BOXED(3191054624,32,FLEN)
NAN_BOXED(1039261154,32,FLEN)
NAN_BOXED(1059871062,32,FLEN)
NAN_BOXED(3191054624,32,FLEN)
NAN_BOXED(1039261154,32,FLEN)
NAN_BOXED(1049040799,32,FLEN)
NAN_BOXED(3221015833,32,FLEN)
NAN_BOXED(1057318780,32,FLEN)
NAN_BOXED(1049040799,32,FLEN)
NAN_BOXED(3221015833,32,FLEN)
NAN_BOXED(1057318780,32,FLEN)
NAN_BOXED(1049040799,32,FLEN)
NAN_BOXED(3221015833,32,FLEN)
NAN_BOXED(1057318780,32,FLEN)
NAN_BOXED(1049040799,32,FLEN)
NAN_BOXED(3221015833,32,FLEN)
NAN_BOXED(1057318780,32,FLEN)
NAN_BOXED(1049040799,32,FLEN)
NAN_BOXED(3221015833,32,FLEN)
NAN_BOXED(1057318780,32,FLEN)
NAN_BOXED(1054856067,32,FLEN)
NAN_BOXED(3189099156,32,FLEN)
NAN_BOXED(1031993145,32,FLEN)
NAN_BOXED(1054856067,32,FLEN)
NAN_BOXED(3189099156,32,FLEN)
NAN_BOXED(1031993145,32,FLEN)
NAN_BOXED(1054856067,32,FLEN)
NAN_BOXED(3189099156,32,FLEN)
NAN_BOXED(1031993145,32,FLEN)
NAN_BOXED(1054856067,32,FLEN)
NAN_BOXED(3189099156,32,FLEN)
NAN_BOXED(1031993145,32,FLEN)
NAN_BOXED(1054856067,32,FLEN)
NAN_BOXED(3189099156,32,FLEN)
NAN_BOXED(1031993145,32,FLEN)
NAN_BOXED(992819643,32,FLEN)
NAN_BOXED(3251640288,32,FLEN)
NAN_BOXED(1032638224,32,FLEN)
NAN_BOXED(992819643,32,FLEN)
NAN_BOXED(3251640288,32,FLEN)
NAN_BOXED(1032638224,32,FLEN)
NAN_BOXED(992819643,32,FLEN)
NAN_BOXED(3251640288,32,FLEN)
NAN_BOXED(1032638224,32,FLEN)
NAN_BOXED(992819643,32,FLEN)
NAN_BOXED(3251640288,32,FLEN)
NAN_BOXED(1032638224,32,FLEN)
NAN_BOXED(992819643,32,FLEN)
NAN_BOXED(3251640288,32,FLEN)
NAN_BOXED(1032638224,32,FLEN)
NAN_BOXED(1063127649,32,FLEN)
NAN_BOXED(3209080691,32,FLEN)
NAN_BOXED(1059869748,32,FLEN)
NAN_BOXED(1063127649,32,FLEN)
NAN_BOXED(3209080691,32,FLEN)
NAN_BOXED(1059869748,32,FLEN)
NAN_BOXED(1063127649,32,FLEN)
NAN_BOXED(3209080691,32,FLEN)
NAN_BOXED(1059869748,32,FLEN)
NAN_BOXED(1063127649,32,FLEN)
NAN_BOXED(3209080691,32,FLEN)
NAN_BOXED(1059869748,32,FLEN)
NAN_BOXED(1063127649,32,FLEN)
NAN_BOXED(3209080691,32,FLEN)
NAN_BOXED(1059869748,32,FLEN)
NAN_BOXED(1058511098,32,FLEN)
NAN_BOXED(3216220491,32,FLEN)
NAN_BOXED(1062518517,32,FLEN)
NAN_BOXED(1058511098,32,FLEN)
NAN_BOXED(3216220491,32,FLEN)
NAN_BOXED(1062518517,32,FLEN)
NAN_BOXED(1058511098,32,FLEN)
NAN_BOXED(3216220491,32,FLEN)
NAN_BOXED(1062518517,32,FLEN)
NAN_BOXED(1058511098,32,FLEN)
NAN_BOXED(3216220491,32,FLEN)
NAN_BOXED(1062518517,32,FLEN)
NAN_BOXED(1058511098,32,FLEN)
NAN_BOXED(3216220491,32,FLEN)
NAN_BOXED(1062518517,32,FLEN)
NAN_BOXED(1047767103,32,FLEN)
NAN_BOXED(3229391397,32,FLEN)
NAN_BOXED(1064332373,32,FLEN)
NAN_BOXED(1047767103,32,FLEN)
NAN_BOXED(3229391397,32,FLEN)
NAN_BOXED(1064332373,32,FLEN)
NAN_BOXED(1047767103,32,FLEN)
NAN_BOXED(3229391397,32,FLEN)
NAN_BOXED(1064332373,32,FLEN)
NAN_BOXED(1047767103,32,FLEN)
NAN_BOXED(3229391397,32,FLEN)
NAN_BOXED(1064332373,32,FLEN)
NAN_BOXED(1047767103,32,FLEN)
NAN_BOXED(3229391397,32,FLEN)
NAN_BOXED(1064332373,32,FLEN)
NAN_BOXED(1038516153,32,FLEN)
NAN_BOXED(3228281647,32,FLEN)
NAN_BOXED(1054093665,32,FLEN)
NAN_BOXED(1038516153,32,FLEN)
NAN_BOXED(3228281647,32,FLEN)
NAN_BOXED(1054093665,32,FLEN)
NAN_BOXED(1038516153,32,FLEN)
NAN_BOXED(3228281647,32,FLEN)
NAN_BOXED(1054093665,32,FLEN)
NAN_BOXED(1038516153,32,FLEN)
NAN_BOXED(3228281647,32,FLEN)
NAN_BOXED(1054093665,32,FLEN)
NAN_BOXED(1038516153,32,FLEN)
NAN_BOXED(3228281647,32,FLEN)
NAN_BOXED(1054093665,32,FLEN)
NAN_BOXED(1053147357,32,FLEN)
NAN_BOXED(3217157379,32,FLEN)
NAN_BOXED(1058393469,32,FLEN)
NAN_BOXED(1053147357,32,FLEN)
NAN_BOXED(3217157379,32,FLEN)
NAN_BOXED(1058393469,32,FLEN)
NAN_BOXED(1053147357,32,FLEN)
NAN_BOXED(3217157379,32,FLEN)
NAN_BOXED(1058393469,32,FLEN)
NAN_BOXED(1053147357,32,FLEN)
NAN_BOXED(3217157379,32,FLEN)
NAN_BOXED(1058393469,32,FLEN)
NAN_BOXED(1053147357,32,FLEN)
NAN_BOXED(3217157379,32,FLEN)
NAN_BOXED(1058393469,32,FLEN)
NAN_BOXED(1031931426,32,FLEN)
NAN_BOXED(3235153639,32,FLEN)
NAN_BOXED(1054335795,32,FLEN)
NAN_BOXED(1031931426,32,FLEN)
NAN_BOXED(3235153639,32,FLEN)
NAN_BOXED(1054335795,32,FLEN)
NAN_BOXED(1031931426,32,FLEN)
NAN_BOXED(3235153639,32,FLEN)
NAN_BOXED(1054335795,32,FLEN)
NAN_BOXED(1031931426,32,FLEN)
NAN_BOXED(3235153639,32,FLEN)
NAN_BOXED(1054335795,32,FLEN)
NAN_BOXED(1031931426,32,FLEN)
NAN_BOXED(3235153639,32,FLEN)
NAN_BOXED(1054335795,32,FLEN)
NAN_BOXED(1037294380,32,FLEN)
NAN_BOXED(3208597450,32,FLEN)
NAN_BOXED(1033785998,32,FLEN)
NAN_BOXED(1037294380,32,FLEN)
NAN_BOXED(3208597450,32,FLEN)
NAN_BOXED(1033785998,32,FLEN)
NAN_BOXED(1037294380,32,FLEN)
NAN_BOXED(3208597450,32,FLEN)
NAN_BOXED(1033785998,32,FLEN)
NAN_BOXED(1037294380,32,FLEN)
NAN_BOXED(3208597450,32,FLEN)
NAN_BOXED(1033785998,32,FLEN)
NAN_BOXED(1037294380,32,FLEN)
NAN_BOXED(3208597450,32,FLEN)
NAN_BOXED(1033785998,32,FLEN)
NAN_BOXED(1050518186,32,FLEN)
NAN_BOXED(3177008894,32,FLEN)
NAN_BOXED(1015563793,32,FLEN)
NAN_BOXED(1050518186,32,FLEN)
NAN_BOXED(3177008894,32,FLEN)
NAN_BOXED(1015563793,32,FLEN)
NAN_BOXED(1050518186,32,FLEN)
NAN_BOXED(3177008894,32,FLEN)
NAN_BOXED(1015563793,32,FLEN)
NAN_BOXED(1050518186,32,FLEN)
NAN_BOXED(3177008894,32,FLEN)
NAN_BOXED(1015563793,32,FLEN)
NAN_BOXED(1050518186,32,FLEN)
NAN_BOXED(3177008894,32,FLEN)
NAN_BOXED(1015563793,32,FLEN)
NAN_BOXED(1057138608,32,FLEN)
NAN_BOXED(3214859872,32,FLEN)
NAN_BOXED(1059203578,32,FLEN)
NAN_BOXED(1057138608,32,FLEN)
NAN_BOXED(3214859872,32,FLEN)
NAN_BOXED(1059203578,32,FLEN)
NAN_BOXED(1057138608,32,FLEN)
NAN_BOXED(3214859872,32,FLEN)
NAN_BOXED(1059203578,32,FLEN)
NAN_BOXED(1057138608,32,FLEN)
NAN_BOXED(3214859872,32,FLEN)
NAN_BOXED(1059203578,32,FLEN)
NAN_BOXED(1057138608,32,FLEN)
NAN_BOXED(3214859872,32,FLEN)
NAN_BOXED(1059203578,32,FLEN)
NAN_BOXED(1042267589,32,FLEN)
NAN_BOXED(3225527814,32,FLEN)
NAN_BOXED(1056025428,32,FLEN)
NAN_BOXED(1042267589,32,FLEN)
NAN_BOXED(3225527814,32,FLEN)
NAN_BOXED(1056025428,32,FLEN)
NAN_BOXED(1042267589,32,FLEN)
NAN_BOXED(3225527814,32,FLEN)
NAN_BOXED(1056025428,32,FLEN)
NAN_BOXED(1042267589,32,FLEN)
NAN_BOXED(3225527814,32,FLEN)
NAN_BOXED(1056025428,32,FLEN)
NAN_BOXED(1042267589,32,FLEN)
NAN_BOXED(3225527814,32,FLEN)
NAN_BOXED(1056025428,32,FLEN)
NAN_BOXED(1060172119,32,FLEN)
NAN_BOXED(3203199665,32,FLEN)
NAN_BOXED(1050920507,32,FLEN)
NAN_BOXED(1060172119,32,FLEN)
NAN_BOXED(3203199665,32,FLEN)
NAN_BOXED(1050920507,32,FLEN)
NAN_BOXED(1060172119,32,FLEN)
NAN_BOXED(3203199665,32,FLEN)
NAN_BOXED(1050920507,32,FLEN)
NAN_BOXED(1060172119,32,FLEN)
NAN_BOXED(3203199665,32,FLEN)
NAN_BOXED(1050920507,32,FLEN)
NAN_BOXED(1060172119,32,FLEN)
NAN_BOXED(3203199665,32,FLEN)
NAN_BOXED(1050920507,32,FLEN)
NAN_BOXED(1057369385,32,FLEN)
NAN_BOXED(3218406318,32,FLEN)
NAN_BOXED(1063207583,32,FLEN)
NAN_BOXED(1057369385,32,FLEN)
NAN_BOXED(3218406318,32,FLEN)
NAN_BOXED(1063207583,32,FLEN)
NAN_BOXED(1057369385,32,FLEN)
NAN_BOXED(3218406318,32,FLEN)
NAN_BOXED(1063207583,32,FLEN)
NAN_BOXED(1057369385,32,FLEN)
NAN_BOXED(3218406318,32,FLEN)
NAN_BOXED(1063207583,32,FLEN)
NAN_BOXED(1057369385,32,FLEN)
NAN_BOXED(3218406318,32,FLEN)
NAN_BOXED(1063207583,32,FLEN)
NAN_BOXED(1042681285,32,FLEN)
NAN_BOXED(3225770737,32,FLEN)
NAN_BOXED(1056965526,32,FLEN)
NAN_BOXED(1042681285,32,FLEN)
NAN_BOXED(3225770737,32,FLEN)
NAN_BOXED(1056965526,32,FLEN)
NAN_BOXED(1042681285,32,FLEN)
NAN_BOXED(3225770737,32,FLEN)
NAN_BOXED(1056965526,32,FLEN)
NAN_BOXED(1042681285,32,FLEN)
NAN_BOXED(3225770737,32,FLEN)
NAN_BOXED(1056965526,32,FLEN)
NAN_BOXED(1042681285,32,FLEN)
NAN_BOXED(3225770737,32,FLEN)
NAN_BOXED(1056965526,32,FLEN)
NAN_BOXED(1021897449,32,FLEN)
NAN_BOXED(3246601905,32,FLEN)
NAN_BOXED(1055835120,32,FLEN)
NAN_BOXED(1021897449,32,FLEN)
NAN_BOXED(3246601905,32,FLEN)
NAN_BOXED(1055835120,32,FLEN)
NAN_BOXED(1021897449,32,FLEN)
NAN_BOXED(3246601905,32,FLEN)
NAN_BOXED(1055835120,32,FLEN)
NAN_BOXED(1021897449,32,FLEN)
NAN_BOXED(3246601905,32,FLEN)
NAN_BOXED(1055835120,32,FLEN)
NAN_BOXED(1021897449,32,FLEN)
NAN_BOXED(3246601905,32,FLEN)
NAN_BOXED(1055835120,32,FLEN)
NAN_BOXED(1031886926,32,FLEN)
NAN_BOXED(3241416319,32,FLEN)
NAN_BOXED(1060502250,32,FLEN)
NAN_BOXED(1031886926,32,FLEN)
NAN_BOXED(3241416319,32,FLEN)
NAN_BOXED(1060502250,32,FLEN)
NAN_BOXED(1031886926,32,FLEN)
NAN_BOXED(3241416319,32,FLEN)
NAN_BOXED(1060502250,32,FLEN)
NAN_BOXED(1031886926,32,FLEN)
NAN_BOXED(3241416319,32,FLEN)
NAN_BOXED(1060502250,32,FLEN)
NAN_BOXED(1031886926,32,FLEN)
NAN_BOXED(3241416319,32,FLEN)
NAN_BOXED(1060502250,32,FLEN)
NAN_BOXED(1061704272,32,FLEN)
NAN_BOXED(3206211528,32,FLEN)
NAN_BOXED(1056075207,32,FLEN)
NAN_BOXED(1061704272,32,FLEN)
NAN_BOXED(3206211528,32,FLEN)
NAN_BOXED(1056075207,32,FLEN)
NAN_BOXED(1061704272,32,FLEN)
NAN_BOXED(3206211528,32,FLEN)
NAN_BOXED(1056075207,32,FLEN)
NAN_BOXED(1061704272,32,FLEN)
NAN_BOXED(3206211528,32,FLEN)
NAN_BOXED(1056075207,32,FLEN)
NAN_BOXED(1061704272,32,FLEN)
NAN_BOXED(3206211528,32,FLEN)
NAN_BOXED(1056075207,32,FLEN)
NAN_BOXED(1047453641,32,FLEN)
NAN_BOXED(3208654850,32,FLEN)
NAN_BOXED(1043551395,32,FLEN)
NAN_BOXED(1047453641,32,FLEN)
NAN_BOXED(3208654850,32,FLEN)
NAN_BOXED(1043551395,32,FLEN)
NAN_BOXED(1047453641,32,FLEN)
NAN_BOXED(3208654850,32,FLEN)
NAN_BOXED(1043551395,32,FLEN)
NAN_BOXED(1047453641,32,FLEN)
NAN_BOXED(3208654850,32,FLEN)
NAN_BOXED(1043551395,32,FLEN)
NAN_BOXED(1047453641,32,FLEN)
NAN_BOXED(3208654850,32,FLEN)
NAN_BOXED(1043551395,32,FLEN)
NAN_BOXED(1052017437,32,FLEN)
NAN_BOXED(3223255139,32,FLEN)
NAN_BOXED(1063268385,32,FLEN)
NAN_BOXED(1052017437,32,FLEN)
NAN_BOXED(3223255139,32,FLEN)
NAN_BOXED(1063268385,32,FLEN)
NAN_BOXED(1052017437,32,FLEN)
NAN_BOXED(3223255139,32,FLEN)
NAN_BOXED(1063268385,32,FLEN)
NAN_BOXED(1052017437,32,FLEN)
NAN_BOXED(3223255139,32,FLEN)
NAN_BOXED(1063268385,32,FLEN)
NAN_BOXED(1052017437,32,FLEN)
NAN_BOXED(3223255139,32,FLEN)
NAN_BOXED(1063268385,32,FLEN)
NAN_BOXED(1058741738,32,FLEN)
NAN_BOXED(3217808687,32,FLEN)
NAN_BOXED(1064766844,32,FLEN)
NAN_BOXED(1058741738,32,FLEN)
NAN_BOXED(3217808687,32,FLEN)
NAN_BOXED(1064766844,32,FLEN)
NAN_BOXED(1058741738,32,FLEN)
NAN_BOXED(3217808687,32,FLEN)
NAN_BOXED(1064766844,32,FLEN)
NAN_BOXED(1058741738,32,FLEN)
NAN_BOXED(3217808687,32,FLEN)
NAN_BOXED(1064766844,32,FLEN)
NAN_BOXED(1058741738,32,FLEN)
NAN_BOXED(3217808687,32,FLEN)
NAN_BOXED(1064766844,32,FLEN)
NAN_BOXED(1059120718,32,FLEN)
NAN_BOXED(3182692554,32,FLEN)
NAN_BOXED(1029852907,32,FLEN)
NAN_BOXED(1059120718,32,FLEN)
NAN_BOXED(3182692554,32,FLEN)
NAN_BOXED(1029852907,32,FLEN)
NAN_BOXED(1059120718,32,FLEN)
NAN_BOXED(3182692554,32,FLEN)
NAN_BOXED(1029852907,32,FLEN)
NAN_BOXED(1059120718,32,FLEN)
NAN_BOXED(3182692554,32,FLEN)
NAN_BOXED(1029852907,32,FLEN)
NAN_BOXED(1059120718,32,FLEN)
NAN_BOXED(3182692554,32,FLEN)
NAN_BOXED(1029852907,32,FLEN)
NAN_BOXED(1059530772,32,FLEN)
NAN_BOXED(3203141977,32,FLEN)
NAN_BOXED(1050289223,32,FLEN)
NAN_BOXED(1059530772,32,FLEN)
NAN_BOXED(3203141977,32,FLEN)
NAN_BOXED(1050289223,32,FLEN)
NAN_BOXED(1059530772,32,FLEN)
NAN_BOXED(3203141977,32,FLEN)
NAN_BOXED(1050289223,32,FLEN)
NAN_BOXED(1059530772,32,FLEN)
NAN_BOXED(3203141977,32,FLEN)
NAN_BOXED(1050289223,32,FLEN)
NAN_BOXED(1059530772,32,FLEN)
NAN_BOXED(3203141977,32,FLEN)
NAN_BOXED(1050289223,32,FLEN)
NAN_BOXED(1052890101,32,FLEN)
NAN_BOXED(3222329338,32,FLEN)
NAN_BOXED(1062950273,32,FLEN)
NAN_BOXED(1052890101,32,FLEN)
NAN_BOXED(3222329338,32,FLEN)
NAN_BOXED(1062950273,32,FLEN)
NAN_BOXED(1052890101,32,FLEN)
NAN_BOXED(3222329338,32,FLEN)
NAN_BOXED(1062950273,32,FLEN)
NAN_BOXED(1052890101,32,FLEN)
NAN_BOXED(3222329338,32,FLEN)
NAN_BOXED(1062950273,32,FLEN)
NAN_BOXED(1052890101,32,FLEN)
NAN_BOXED(3222329338,32,FLEN)
NAN_BOXED(1062950273,32,FLEN)
NAN_BOXED(1050642984,32,FLEN)
NAN_BOXED(3225224405,32,FLEN)
NAN_BOXED(1064015877,32,FLEN)
NAN_BOXED(1050642984,32,FLEN)
NAN_BOXED(3225224405,32,FLEN)
NAN_BOXED(1064015877,32,FLEN)
NAN_BOXED(1050642984,32,FLEN)
NAN_BOXED(3225224405,32,FLEN)
NAN_BOXED(1064015877,32,FLEN)
NAN_BOXED(1050642984,32,FLEN)
NAN_BOXED(3225224405,32,FLEN)
NAN_BOXED(1064015877,32,FLEN)
NAN_BOXED(1050642984,32,FLEN)
NAN_BOXED(3225224405,32,FLEN)
NAN_BOXED(1064015877,32,FLEN)
NAN_BOXED(1062255234,32,FLEN)
NAN_BOXED(3204703616,32,FLEN)
NAN_BOXED(1054283040,32,FLEN)
NAN_BOXED(1062255234,32,FLEN)
NAN_BOXED(3204703616,32,FLEN)
NAN_BOXED(1054283040,32,FLEN)
NAN_BOXED(1062255234,32,FLEN)
NAN_BOXED(3204703616,32,FLEN)
NAN_BOXED(1054283040,32,FLEN)
NAN_BOXED(1062255234,32,FLEN)
NAN_BOXED(3204703616,32,FLEN)
NAN_BOXED(1054283040,32,FLEN)
NAN_BOXED(1062255234,32,FLEN)
NAN_BOXED(3204703616,32,FLEN)
NAN_BOXED(1054283040,32,FLEN)
NAN_BOXED(1063215739,32,FLEN)
NAN_BOXED(3173437217,32,FLEN)
NAN_BOXED(1024560794,32,FLEN)
NAN_BOXED(1063215739,32,FLEN)
NAN_BOXED(3173437217,32,FLEN)
NAN_BOXED(1024560794,32,FLEN)
NAN_BOXED(1063215739,32,FLEN)
NAN_BOXED(3173437217,32,FLEN)
NAN_BOXED(1024560794,32,FLEN)
NAN_BOXED(1063215739,32,FLEN)
NAN_BOXED(3173437217,32,FLEN)
NAN_BOXED(1024560794,32,FLEN)
NAN_BOXED(1063215739,32,FLEN)
NAN_BOXED(3173437217,32,FLEN)
NAN_BOXED(1024560794,32,FLEN)
NAN_BOXED(1058214060,32,FLEN)
NAN_BOXED(3206857056,32,FLEN)
NAN_BOXED(1052593034,32,FLEN)
NAN_BOXED(1058214060,32,FLEN)
NAN_BOXED(3206857056,32,FLEN)
NAN_BOXED(1052593034,32,FLEN)
NAN_BOXED(1058214060,32,FLEN)
NAN_BOXED(3206857056,32,FLEN)
NAN_BOXED(1052593034,32,FLEN)
NAN_BOXED(1058214060,32,FLEN)
NAN_BOXED(3206857056,32,FLEN)
NAN_BOXED(1052593034,32,FLEN)
NAN_BOXED(1058214060,32,FLEN)
NAN_BOXED(3206857056,32,FLEN)
NAN_BOXED(1052593034,32,FLEN)
NAN_BOXED(1024382504,32,FLEN)
NAN_BOXED(3251412902,32,FLEN)
NAN_BOXED(1063540599,32,FLEN)
NAN_BOXED(1024382504,32,FLEN)
NAN_BOXED(3251412902,32,FLEN)
NAN_BOXED(1063540599,32,FLEN)
NAN_BOXED(1024382504,32,FLEN)
NAN_BOXED(3251412902,32,FLEN)
NAN_BOXED(1063540599,32,FLEN)
NAN_BOXED(1024382504,32,FLEN)
NAN_BOXED(3251412902,32,FLEN)
NAN_BOXED(1063540599,32,FLEN)
NAN_BOXED(1024382504,32,FLEN)
NAN_BOXED(3251412902,32,FLEN)
NAN_BOXED(1063540599,32,FLEN)
NAN_BOXED(980538559,32,FLEN)
NAN_BOXED(3296862758,32,FLEN)
NAN_BOXED(1064688791,32,FLEN)
NAN_BOXED(980538559,32,FLEN)
NAN_BOXED(3296862758,32,FLEN)
NAN_BOXED(1064688791,32,FLEN)
NAN_BOXED(980538559,32,FLEN)
NAN_BOXED(3296862758,32,FLEN)
NAN_BOXED(1064688791,32,FLEN)
NAN_BOXED(980538559,32,FLEN)
NAN_BOXED(3296862758,32,FLEN)
NAN_BOXED(1064688791,32,FLEN)
NAN_BOXED(980538559,32,FLEN)
NAN_BOXED(3296862758,32,FLEN)
NAN_BOXED(1064688791,32,FLEN)
NAN_BOXED(1053567404,32,FLEN)
NAN_BOXED(3210536177,32,FLEN)
NAN_BOXED(1051732581,32,FLEN)
NAN_BOXED(1053567404,32,FLEN)
NAN_BOXED(3210536177,32,FLEN)
NAN_BOXED(1051732581,32,FLEN)
NAN_BOXED(1053567404,32,FLEN)
NAN_BOXED(3210536177,32,FLEN)
NAN_BOXED(1051732581,32,FLEN)
NAN_BOXED(1053567404,32,FLEN)
NAN_BOXED(3210536177,32,FLEN)
NAN_BOXED(1051732581,32,FLEN)
NAN_BOXED(1053567404,32,FLEN)
NAN_BOXED(3210536177,32,FLEN)
NAN_BOXED(1051732581,32,FLEN)
NAN_BOXED(1013440024,32,FLEN)
NAN_BOXED(3258280774,32,FLEN)
NAN_BOXED(1059344688,32,FLEN)
NAN_BOXED(1013440024,32,FLEN)
NAN_BOXED(3258280774,32,FLEN)
NAN_BOXED(1059344688,32,FLEN)
NAN_BOXED(1013440024,32,FLEN)
NAN_BOXED(3258280774,32,FLEN)
NAN_BOXED(1059344688,32,FLEN)
NAN_BOXED(1013440024,32,FLEN)
NAN_BOXED(3258280774,32,FLEN)
NAN_BOXED(1059344688,32,FLEN)
NAN_BOXED(1013440024,32,FLEN)
NAN_BOXED(3258280774,32,FLEN)
NAN_BOXED(1059344688,32,FLEN)
NAN_BOXED(1029313687,32,FLEN)
NAN_BOXED(3235003667,32,FLEN)
NAN_BOXED(1051924715,32,FLEN)
NAN_BOXED(1029313687,32,FLEN)
NAN_BOXED(3235003667,32,FLEN)
NAN_BOXED(1051924715,32,FLEN)
NAN_BOXED(1029313687,32,FLEN)
NAN_BOXED(3235003667,32,FLEN)
NAN_BOXED(1051924715,32,FLEN)
NAN_BOXED(1029313687,32,FLEN)
NAN_BOXED(3235003667,32,FLEN)
NAN_BOXED(1051924715,32,FLEN)
NAN_BOXED(1029313687,32,FLEN)
NAN_BOXED(3235003667,32,FLEN)
NAN_BOXED(1051924715,32,FLEN)
NAN_BOXED(1057356184,32,FLEN)
NAN_BOXED(3217756426,32,FLEN)
NAN_BOXED(1062505390,32,FLEN)
NAN_BOXED(1057356184,32,FLEN)
NAN_BOXED(3217756426,32,FLEN)
NAN_BOXED(1062505390,32,FLEN)
NAN_BOXED(1057356184,32,FLEN)
NAN_BOXED(3217756426,32,FLEN)
NAN_BOXED(1062505390,32,FLEN)
NAN_BOXED(1057356184,32,FLEN)
NAN_BOXED(3217756426,32,FLEN)
NAN_BOXED(1062505390,32,FLEN)
NAN_BOXED(1057356184,32,FLEN)
NAN_BOXED(3217756426,32,FLEN)
NAN_BOXED(1062505390,32,FLEN)
NAN_BOXED(1061397733,32,FLEN)
NAN_BOXED(3209995729,32,FLEN)
NAN_BOXED(1059226439,32,FLEN)
NAN_BOXED(1061397733,32,FLEN)
NAN_BOXED(3209995729,32,FLEN)
NAN_BOXED(1059226439,32,FLEN)
NAN_BOXED(1061397733,32,FLEN)
NAN_BOXED(3209995729,32,FLEN)
NAN_BOXED(1059226439,32,FLEN)
NAN_BOXED(1061397733,32,FLEN)
NAN_BOXED(3209995729,32,FLEN)
NAN_BOXED(1059226439,32,FLEN)
NAN_BOXED(1061397733,32,FLEN)
NAN_BOXED(3209995729,32,FLEN)
NAN_BOXED(1059226439,32,FLEN)
NAN_BOXED(1059543650,32,FLEN)
NAN_BOXED(3212183272,32,FLEN)
NAN_BOXED(1059116382,32,FLEN)
NAN_BOXED(1059543650,32,FLEN)
NAN_BOXED(3212183272,32,FLEN)
NAN_BOXED(1059116382,32,FLEN)
NAN_BOXED(1059543650,32,FLEN)
NAN_BOXED(3212183272,32,FLEN)
NAN_BOXED(1059116382,32,FLEN)
NAN_BOXED(1059543650,32,FLEN)
NAN_BOXED(3212183272,32,FLEN)
NAN_BOXED(1059116382,32,FLEN)
NAN_BOXED(1059543650,32,FLEN)
NAN_BOXED(3212183272,32,FLEN)
NAN_BOXED(1059116382,32,FLEN)
NAN_BOXED(1044677421,32,FLEN)
NAN_BOXED(3226498702,32,FLEN)
NAN_BOXED(1059063190,32,FLEN)
NAN_BOXED(1044677421,32,FLEN)
NAN_BOXED(3226498702,32,FLEN)
NAN_BOXED(1059063190,32,FLEN)
NAN_BOXED(1044677421,32,FLEN)
NAN_BOXED(3226498702,32,FLEN)
NAN_BOXED(1059063190,32,FLEN)
NAN_BOXED(1044677421,32,FLEN)
NAN_BOXED(3226498702,32,FLEN)
NAN_BOXED(1059063190,32,FLEN)
NAN_BOXED(1044677421,32,FLEN)
NAN_BOXED(3226498702,32,FLEN)
NAN_BOXED(1059063190,32,FLEN)
NAN_BOXED(1052646636,32,FLEN)
NAN_BOXED(3223696885,32,FLEN)
NAN_BOXED(1064705930,32,FLEN)
NAN_BOXED(1052646636,32,FLEN)
NAN_BOXED(3223696885,32,FLEN)
NAN_BOXED(1064705930,32,FLEN)
NAN_BOXED(1052646636,32,FLEN)
NAN_BOXED(3223696885,32,FLEN)
NAN_BOXED(1064705930,32,FLEN)
NAN_BOXED(1052646636,32,FLEN)
NAN_BOXED(3223696885,32,FLEN)
NAN_BOXED(1064705930,32,FLEN)
NAN_BOXED(1052646636,32,FLEN)
NAN_BOXED(3223696885,32,FLEN)
NAN_BOXED(1064705930,32,FLEN)
NAN_BOXED(1062992719,32,FLEN)
NAN_BOXED(3198998151,32,FLEN)
NAN_BOXED(1049920818,32,FLEN)
NAN_BOXED(1062992719,32,FLEN)
NAN_BOXED(3198998151,32,FLEN)
NAN_BOXED(1049920818,32,FLEN)
NAN_BOXED(1062992719,32,FLEN)
NAN_BOXED(3198998151,32,FLEN)
NAN_BOXED(1049920818,32,FLEN)
NAN_BOXED(1062992719,32,FLEN)
NAN_BOXED(3198998151,32,FLEN)
NAN_BOXED(1049920818,32,FLEN)
NAN_BOXED(1062992719,32,FLEN)
NAN_BOXED(3198998151,32,FLEN)
NAN_BOXED(1049920818,32,FLEN)
NAN_BOXED(1038096195,32,FLEN)
NAN_BOXED(3234390196,32,FLEN)
NAN_BOXED(1060099807,32,FLEN)
NAN_BOXED(1038096195,32,FLEN)
NAN_BOXED(3234390196,32,FLEN)
NAN_BOXED(1060099807,32,FLEN)
NAN_BOXED(1038096195,32,FLEN)
NAN_BOXED(3234390196,32,FLEN)
NAN_BOXED(1060099807,32,FLEN)
NAN_BOXED(1038096195,32,FLEN)
NAN_BOXED(3234390196,32,FLEN)
NAN_BOXED(1060099807,32,FLEN)
NAN_BOXED(1038096195,32,FLEN)
NAN_BOXED(3234390196,32,FLEN)
NAN_BOXED(1060099807,32,FLEN)
NAN_BOXED(1064808773,32,FLEN)
NAN_BOXED(3209366022,32,FLEN)
NAN_BOXED(1061450565,32,FLEN)
NAN_BOXED(1064808773,32,FLEN)
NAN_BOXED(3209366022,32,FLEN)
NAN_BOXED(1061450565,32,FLEN)
NAN_BOXED(1064808773,32,FLEN)
NAN_BOXED(3209366022,32,FLEN)
NAN_BOXED(1061450565,32,FLEN)
NAN_BOXED(1064808773,32,FLEN)
NAN_BOXED(3209366022,32,FLEN)
NAN_BOXED(1061450565,32,FLEN)
NAN_BOXED(1064808773,32,FLEN)
NAN_BOXED(3209366022,32,FLEN)
NAN_BOXED(1061450565,32,FLEN)
NAN_BOXED(1059305107,32,FLEN)
NAN_BOXED(3212681318,32,FLEN)
NAN_BOXED(1059205636,32,FLEN)
NAN_BOXED(1059305107,32,FLEN)
NAN_BOXED(3212681318,32,FLEN)
NAN_BOXED(1059205636,32,FLEN)
NAN_BOXED(1059305107,32,FLEN)
NAN_BOXED(3212681318,32,FLEN)
NAN_BOXED(1059205636,32,FLEN)
NAN_BOXED(1059305107,32,FLEN)
NAN_BOXED(3212681318,32,FLEN)
NAN_BOXED(1059205636,32,FLEN)
NAN_BOXED(1059305107,32,FLEN)
NAN_BOXED(3212681318,32,FLEN)
NAN_BOXED(1059205636,32,FLEN)
NAN_BOXED(1054901107,32,FLEN)
NAN_BOXED(3217806189,32,FLEN)
NAN_BOXED(1060290984,32,FLEN)
NAN_BOXED(1054901107,32,FLEN)
NAN_BOXED(3217806189,32,FLEN)
NAN_BOXED(1060290984,32,FLEN)
NAN_BOXED(1054901107,32,FLEN)
NAN_BOXED(3217806189,32,FLEN)
NAN_BOXED(1060290984,32,FLEN)
NAN_BOXED(1054901107,32,FLEN)
NAN_BOXED(3217806189,32,FLEN)
NAN_BOXED(1060290984,32,FLEN)
NAN_BOXED(1054901107,32,FLEN)
NAN_BOXED(3217806189,32,FLEN)
NAN_BOXED(1060290984,32,FLEN)
NAN_BOXED(1052030955,32,FLEN)
NAN_BOXED(3206235386,32,FLEN)
NAN_BOXED(1046165530,32,FLEN)
NAN_BOXED(1052030955,32,FLEN)
NAN_BOXED(3206235386,32,FLEN)
NAN_BOXED(1046165530,32,FLEN)
NAN_BOXED(1052030955,32,FLEN)
NAN_BOXED(3206235386,32,FLEN)
NAN_BOXED(1046165530,32,FLEN)
NAN_BOXED(1052030955,32,FLEN)
NAN_BOXED(3206235386,32,FLEN)
NAN_BOXED(1046165530,32,FLEN)
NAN_BOXED(1052030955,32,FLEN)
NAN_BOXED(3206235386,32,FLEN)
NAN_BOXED(1046165530,32,FLEN)
NAN_BOXED(1046346616,32,FLEN)
NAN_BOXED(3214453836,32,FLEN)
NAN_BOXED(1048863414,32,FLEN)
NAN_BOXED(1046346616,32,FLEN)
NAN_BOXED(3214453836,32,FLEN)
NAN_BOXED(1048863414,32,FLEN)
NAN_BOXED(1046346616,32,FLEN)
NAN_BOXED(3214453836,32,FLEN)
NAN_BOXED(1048863414,32,FLEN)
NAN_BOXED(1046346616,32,FLEN)
NAN_BOXED(3214453836,32,FLEN)
NAN_BOXED(1048863414,32,FLEN)
NAN_BOXED(1046346616,32,FLEN)
NAN_BOXED(3214453836,32,FLEN)
NAN_BOXED(1048863414,32,FLEN)
NAN_BOXED(1054144157,32,FLEN)
NAN_BOXED(3219356189,32,FLEN)
NAN_BOXED(1060977731,32,FLEN)
NAN_BOXED(1054144157,32,FLEN)
NAN_BOXED(3219356189,32,FLEN)
NAN_BOXED(1060977731,32,FLEN)
NAN_BOXED(1054144157,32,FLEN)
NAN_BOXED(3219356189,32,FLEN)
NAN_BOXED(1060977731,32,FLEN)
NAN_BOXED(1054144157,32,FLEN)
NAN_BOXED(3219356189,32,FLEN)
NAN_BOXED(1060977731,32,FLEN)
NAN_BOXED(1054144157,32,FLEN)
NAN_BOXED(3219356189,32,FLEN)
NAN_BOXED(1060977731,32,FLEN)
NAN_BOXED(1042439969,32,FLEN)
NAN_BOXED(3230621278,32,FLEN)
NAN_BOXED(1060494846,32,FLEN)
NAN_BOXED(1042439969,32,FLEN)
NAN_BOXED(3230621278,32,FLEN)
NAN_BOXED(1060494846,32,FLEN)
NAN_BOXED(1042439969,32,FLEN)
NAN_BOXED(3230621278,32,FLEN)
NAN_BOXED(1060494846,32,FLEN)
NAN_BOXED(1042439969,32,FLEN)
NAN_BOXED(3230621278,32,FLEN)
NAN_BOXED(1060494846,32,FLEN)
NAN_BOXED(1042439969,32,FLEN)
NAN_BOXED(3230621278,32,FLEN)
NAN_BOXED(1060494846,32,FLEN)
NAN_BOXED(1041188503,32,FLEN)
NAN_BOXED(3229410194,32,FLEN)
NAN_BOXED(1057851611,32,FLEN)
NAN_BOXED(1041188503,32,FLEN)
NAN_BOXED(3229410194,32,FLEN)
NAN_BOXED(1057851611,32,FLEN)
NAN_BOXED(1041188503,32,FLEN)
NAN_BOXED(3229410194,32,FLEN)
NAN_BOXED(1057851611,32,FLEN)
NAN_BOXED(1041188503,32,FLEN)
NAN_BOXED(3229410194,32,FLEN)
NAN_BOXED(1057851611,32,FLEN)
NAN_BOXED(1041188503,32,FLEN)
NAN_BOXED(3229410194,32,FLEN)
NAN_BOXED(1057851611,32,FLEN)
NAN_BOXED(1052629259,32,FLEN)
NAN_BOXED(3215776988,32,FLEN)
NAN_BOXED(1056977310,32,FLEN)
NAN_BOXED(1052629259,32,FLEN)
NAN_BOXED(3215776988,32,FLEN)
NAN_BOXED(1056977310,32,FLEN)
NAN_BOXED(1052629259,32,FLEN)
NAN_BOXED(3215776988,32,FLEN)
NAN_BOXED(1056977310,32,FLEN)
NAN_BOXED(1052629259,32,FLEN)
NAN_BOXED(3215776988,32,FLEN)
NAN_BOXED(1056977310,32,FLEN)
NAN_BOXED(1052629259,32,FLEN)
NAN_BOXED(3215776988,32,FLEN)
NAN_BOXED(1056977310,32,FLEN)
NAN_BOXED(1051801896,32,FLEN)
NAN_BOXED(3220418373,32,FLEN)
NAN_BOXED(1059631767,32,FLEN)
NAN_BOXED(1051801896,32,FLEN)
NAN_BOXED(3220418373,32,FLEN)
NAN_BOXED(1059631767,32,FLEN)
NAN_BOXED(1051801896,32,FLEN)
NAN_BOXED(3220418373,32,FLEN)
NAN_BOXED(1059631767,32,FLEN)
NAN_BOXED(1051801896,32,FLEN)
NAN_BOXED(3220418373,32,FLEN)
NAN_BOXED(1059631767,32,FLEN)
NAN_BOXED(1051801896,32,FLEN)
NAN_BOXED(3220418373,32,FLEN)
NAN_BOXED(1059631767,32,FLEN)
NAN_BOXED(1054334274,32,FLEN)
NAN_BOXED(3206542756,32,FLEN)
NAN_BOXED(1049026957,32,FLEN)
NAN_BOXED(1054334274,32,FLEN)
NAN_BOXED(3206542756,32,FLEN)
NAN_BOXED(1049026957,32,FLEN)
NAN_BOXED(1054334274,32,FLEN)
NAN_BOXED(3206542756,32,FLEN)
NAN_BOXED(1049026957,32,FLEN)
NAN_BOXED(1054334274,32,FLEN)
NAN_BOXED(3206542756,32,FLEN)
NAN_BOXED(1049026957,32,FLEN)
NAN_BOXED(1054334274,32,FLEN)
NAN_BOXED(3206542756,32,FLEN)
NAN_BOXED(1049026957,32,FLEN)
NAN_BOXED(1059290430,32,FLEN)
NAN_BOXED(3206555780,32,FLEN)
NAN_BOXED(1053593677,32,FLEN)
NAN_BOXED(1059290430,32,FLEN)
NAN_BOXED(3206555780,32,FLEN)
NAN_BOXED(1053593677,32,FLEN)
NAN_BOXED(1059290430,32,FLEN)
NAN_BOXED(3206555780,32,FLEN)
NAN_BOXED(1053593677,32,FLEN)
NAN_BOXED(1059290430,32,FLEN)
NAN_BOXED(3206555780,32,FLEN)
NAN_BOXED(1053593677,32,FLEN)
NAN_BOXED(1059290430,32,FLEN)
NAN_BOXED(3206555780,32,FLEN)
NAN_BOXED(1053593677,32,FLEN)
NAN_BOXED(1057695524,32,FLEN)
NAN_BOXED(3212417209,32,FLEN)
NAN_BOXED(1057467414,32,FLEN)
NAN_BOXED(1057695524,32,FLEN)
NAN_BOXED(3212417209,32,FLEN)
NAN_BOXED(1057467414,32,FLEN)
NAN_BOXED(1057695524,32,FLEN)
NAN_BOXED(3212417209,32,FLEN)
NAN_BOXED(1057467414,32,FLEN)
NAN_BOXED(1057695524,32,FLEN)
NAN_BOXED(3212417209,32,FLEN)
NAN_BOXED(1057467414,32,FLEN)
NAN_BOXED(1057695524,32,FLEN)
NAN_BOXED(3212417209,32,FLEN)
NAN_BOXED(1057467414,32,FLEN)
NAN_BOXED(1058917062,32,FLEN)
NAN_BOXED(3208400035,32,FLEN)
NAN_BOXED(1055400012,32,FLEN)
NAN_BOXED(1058917062,32,FLEN)
NAN_BOXED(3208400035,32,FLEN)
NAN_BOXED(1055400012,32,FLEN)
NAN_BOXED(1058917062,32,FLEN)
NAN_BOXED(3208400035,32,FLEN)
NAN_BOXED(1055400012,32,FLEN)
NAN_BOXED(1058917062,32,FLEN)
NAN_BOXED(3208400035,32,FLEN)
NAN_BOXED(1055400012,32,FLEN)
NAN_BOXED(1058917062,32,FLEN)
NAN_BOXED(3208400035,32,FLEN)
NAN_BOXED(1055400012,32,FLEN)
NAN_BOXED(1049940339,32,FLEN)
NAN_BOXED(3224760052,32,FLEN)
NAN_BOXED(1062438399,32,FLEN)
NAN_BOXED(1049940339,32,FLEN)
NAN_BOXED(3224760052,32,FLEN)
NAN_BOXED(1062438399,32,FLEN)
NAN_BOXED(1049940339,32,FLEN)
NAN_BOXED(3224760052,32,FLEN)
NAN_BOXED(1062438399,32,FLEN)
NAN_BOXED(1049940339,32,FLEN)
NAN_BOXED(3224760052,32,FLEN)
NAN_BOXED(1062438399,32,FLEN)
NAN_BOXED(1049940339,32,FLEN)
NAN_BOXED(3224760052,32,FLEN)
NAN_BOXED(1062438399,32,FLEN)
NAN_BOXED(1062902000,32,FLEN)
NAN_BOXED(3193174702,32,FLEN)
NAN_BOXED(1043661340,32,FLEN)
NAN_BOXED(1062902000,32,FLEN)
NAN_BOXED(3193174702,32,FLEN)
NAN_BOXED(1043661340,32,FLEN)
NAN_BOXED(1062902000,32,FLEN)
NAN_BOXED(3193174702,32,FLEN)
NAN_BOXED(1043661340,32,FLEN)
NAN_BOXED(1062902000,32,FLEN)
NAN_BOXED(3193174702,32,FLEN)
NAN_BOXED(1043661340,32,FLEN)
NAN_BOXED(1062902000,32,FLEN)
NAN_BOXED(3193174702,32,FLEN)
NAN_BOXED(1043661340,32,FLEN)
NAN_BOXED(1063868570,32,FLEN)
NAN_BOXED(3194516176,32,FLEN)
NAN_BOXED(1045684467,32,FLEN)
NAN_BOXED(1063868570,32,FLEN)
NAN_BOXED(3194516176,32,FLEN)
NAN_BOXED(1045684467,32,FLEN)
NAN_BOXED(1063868570,32,FLEN)
NAN_BOXED(3194516176,32,FLEN)
NAN_BOXED(1045684467,32,FLEN)
NAN_BOXED(1063868570,32,FLEN)
NAN_BOXED(3194516176,32,FLEN)
NAN_BOXED(1045684467,32,FLEN)
NAN_BOXED(1063868570,32,FLEN)
NAN_BOXED(3194516176,32,FLEN)
NAN_BOXED(1045684467,32,FLEN)
NAN_BOXED(1047966164,32,FLEN)
NAN_BOXED(3226457525,32,FLEN)
NAN_BOXED(1061701563,32,FLEN)
NAN_BOXED(1047966164,32,FLEN)
NAN_BOXED(3226457525,32,FLEN)
NAN_BOXED(1061701563,32,FLEN)
NAN_BOXED(1047966164,32,FLEN)
NAN_BOXED(3226457525,32,FLEN)
NAN_BOXED(1061701563,32,FLEN)
NAN_BOXED(1047966164,32,FLEN)
NAN_BOXED(3226457525,32,FLEN)
NAN_BOXED(1061701563,32,FLEN)
NAN_BOXED(1047966164,32,FLEN)
NAN_BOXED(3226457525,32,FLEN)
NAN_BOXED(1061701563,32,FLEN)
NAN_BOXED(1052400181,32,FLEN)
NAN_BOXED(3221440290,32,FLEN)
NAN_BOXED(1061101538,32,FLEN)
NAN_BOXED(1052400181,32,FLEN)
NAN_BOXED(3221440290,32,FLEN)
NAN_BOXED(1061101538,32,FLEN)
NAN_BOXED(1052400181,32,FLEN)
NAN_BOXED(3221440290,32,FLEN)
NAN_BOXED(1061101538,32,FLEN)
NAN_BOXED(1052400181,32,FLEN)
NAN_BOXED(3221440290,32,FLEN)
NAN_BOXED(1061101538,32,FLEN)
NAN_BOXED(1052400181,32,FLEN)
NAN_BOXED(3221440290,32,FLEN)
NAN_BOXED(1061101538,32,FLEN)
NAN_BOXED(1039293970,32,FLEN)
NAN_BOXED(3235449972,32,FLEN)
NAN_BOXED(1062043016,32,FLEN)
NAN_BOXED(1039293970,32,FLEN)
NAN_BOXED(3235449972,32,FLEN)
NAN_BOXED(1062043016,32,FLEN)
NAN_BOXED(1039293970,32,FLEN)
NAN_BOXED(3235449972,32,FLEN)
NAN_BOXED(1062043016,32,FLEN)
NAN_BOXED(1039293970,32,FLEN)
NAN_BOXED(3235449972,32,FLEN)
NAN_BOXED(1062043016,32,FLEN)
NAN_BOXED(1039293970,32,FLEN)
NAN_BOXED(3235449972,32,FLEN)
NAN_BOXED(1062043016,32,FLEN)
NAN_BOXED(1063412566,32,FLEN)
NAN_BOXED(3213586997,32,FLEN)
NAN_BOXED(1064739295,32,FLEN)
NAN_BOXED(1063412566,32,FLEN)
NAN_BOXED(3213586997,32,FLEN)
NAN_BOXED(1064739295,32,FLEN)
NAN_BOXED(1063412566,32,FLEN)
NAN_BOXED(3213586997,32,FLEN)
NAN_BOXED(1064739295,32,FLEN)
NAN_BOXED(1063412566,32,FLEN)
NAN_BOXED(3213586997,32,FLEN)
NAN_BOXED(1064739295,32,FLEN)
NAN_BOXED(1063412566,32,FLEN)
NAN_BOXED(3213586997,32,FLEN)
NAN_BOXED(1064739295,32,FLEN)
NAN_BOXED(1049632223,32,FLEN)
NAN_BOXED(3224581373,32,FLEN)
NAN_BOXED(1061799279,32,FLEN)
NAN_BOXED(1049632223,32,FLEN)
NAN_BOXED(3224581373,32,FLEN)
NAN_BOXED(1061799279,32,FLEN)
NAN_BOXED(1049632223,32,FLEN)
NAN_BOXED(3224581373,32,FLEN)
NAN_BOXED(1061799279,32,FLEN)
NAN_BOXED(1049632223,32,FLEN)
NAN_BOXED(3224581373,32,FLEN)
NAN_BOXED(1061799279,32,FLEN)
NAN_BOXED(1049632223,32,FLEN)
NAN_BOXED(3224581373,32,FLEN)
NAN_BOXED(1061799279,32,FLEN)
NAN_BOXED(1060080179,32,FLEN)
NAN_BOXED(3171521527,32,FLEN)
NAN_BOXED(1018997975,32,FLEN)
NAN_BOXED(1060080179,32,FLEN)
NAN_BOXED(3171521527,32,FLEN)
NAN_BOXED(1018997975,32,FLEN)
NAN_BOXED(1060080179,32,FLEN)
NAN_BOXED(3171521527,32,FLEN)
NAN_BOXED(1018997975,32,FLEN)
NAN_BOXED(1060080179,32,FLEN)
NAN_BOXED(3171521527,32,FLEN)
NAN_BOXED(1018997975,32,FLEN)
NAN_BOXED(1060080179,32,FLEN)
NAN_BOXED(3171521527,32,FLEN)
NAN_BOXED(1018997975,32,FLEN)
NAN_BOXED(1049043122,32,FLEN)
NAN_BOXED(3212739881,32,FLEN)
NAN_BOXED(1048991931,32,FLEN)
NAN_BOXED(1049043122,32,FLEN)
NAN_BOXED(3212739881,32,FLEN)
NAN_BOXED(1048991931,32,FLEN)
NAN_BOXED(1049043122,32,FLEN)
NAN_BOXED(3212739881,32,FLEN)
NAN_BOXED(1048991931,32,FLEN)
NAN_BOXED(1049043122,32,FLEN)
NAN_BOXED(3212739881,32,FLEN)
NAN_BOXED(1048991931,32,FLEN)
NAN_BOXED(1049043122,32,FLEN)
NAN_BOXED(3212739881,32,FLEN)
NAN_BOXED(1048991931,32,FLEN)
NAN_BOXED(1054417929,32,FLEN)
NAN_BOXED(3210277405,32,FLEN)
NAN_BOXED(1052246981,32,FLEN)
NAN_BOXED(1054417929,32,FLEN)
NAN_BOXED(3210277405,32,FLEN)
NAN_BOXED(1052246981,32,FLEN)
NAN_BOXED(1054417929,32,FLEN)
NAN_BOXED(3210277405,32,FLEN)
NAN_BOXED(1052246981,32,FLEN)
NAN_BOXED(1054417929,32,FLEN)
NAN_BOXED(3210277405,32,FLEN)
NAN_BOXED(1052246981,32,FLEN)
NAN_BOXED(1054417929,32,FLEN)
NAN_BOXED(3210277405,32,FLEN)
NAN_BOXED(1052246981,32,FLEN)
NAN_BOXED(1065167915,32,FLEN)
NAN_BOXED(3192002220,32,FLEN)
NAN_BOXED(1044378085,32,FLEN)
NAN_BOXED(1065167915,32,FLEN)
NAN_BOXED(3192002220,32,FLEN)
NAN_BOXED(1044378085,32,FLEN)
NAN_BOXED(1065167915,32,FLEN)
NAN_BOXED(3192002220,32,FLEN)
NAN_BOXED(1044378085,32,FLEN)
NAN_BOXED(1065167915,32,FLEN)
NAN_BOXED(3192002220,32,FLEN)
NAN_BOXED(1044378085,32,FLEN)
NAN_BOXED(1065167915,32,FLEN)
NAN_BOXED(3192002220,32,FLEN)
NAN_BOXED(1044378085,32,FLEN)
NAN_BOXED(1059832345,32,FLEN)
NAN_BOXED(3193820938,32,FLEN)
NAN_BOXED(1041553110,32,FLEN)
NAN_BOXED(1059832345,32,FLEN)
NAN_BOXED(3193820938,32,FLEN)
NAN_BOXED(1041553110,32,FLEN)
NAN_BOXED(1059832345,32,FLEN)
NAN_BOXED(3193820938,32,FLEN)
NAN_BOXED(1041553110,32,FLEN)
NAN_BOXED(1059832345,32,FLEN)
NAN_BOXED(3193820938,32,FLEN)
NAN_BOXED(1041553110,32,FLEN)
NAN_BOXED(1059832345,32,FLEN)
NAN_BOXED(3193820938,32,FLEN)
NAN_BOXED(1041553110,32,FLEN)
NAN_BOXED(1058399033,32,FLEN)
NAN_BOXED(3189451090,32,FLEN)
NAN_BOXED(1035317643,32,FLEN)
NAN_BOXED(1058399033,32,FLEN)
NAN_BOXED(3189451090,32,FLEN)
NAN_BOXED(1035317643,32,FLEN)
NAN_BOXED(1058399033,32,FLEN)
NAN_BOXED(3189451090,32,FLEN)
NAN_BOXED(1035317643,32,FLEN)
NAN_BOXED(1058399033,32,FLEN)
NAN_BOXED(3189451090,32,FLEN)
NAN_BOXED(1035317643,32,FLEN)
NAN_BOXED(1058399033,32,FLEN)
NAN_BOXED(3189451090,32,FLEN)
NAN_BOXED(1035317643,32,FLEN)
NAN_BOXED(1065345569,32,FLEN)
NAN_BOXED(3164645291,32,FLEN)
NAN_BOXED(1017156845,32,FLEN)
NAN_BOXED(1065345569,32,FLEN)
NAN_BOXED(3164645291,32,FLEN)
NAN_BOXED(1017156845,32,FLEN)
NAN_BOXED(1065345569,32,FLEN)
NAN_BOXED(3164645291,32,FLEN)
NAN_BOXED(1017156845,32,FLEN)
NAN_BOXED(1065345569,32,FLEN)
NAN_BOXED(3164645291,32,FLEN)
NAN_BOXED(1017156845,32,FLEN)
NAN_BOXED(1065345569,32,FLEN)
NAN_BOXED(3164645291,32,FLEN)
NAN_BOXED(1017156845,32,FLEN)
NAN_BOXED(1063745244,32,FLEN)
NAN_BOXED(3205133769,32,FLEN)
NAN_BOXED(1056596260,32,FLEN)
NAN_BOXED(1063745244,32,FLEN)
NAN_BOXED(3205133769,32,FLEN)
NAN_BOXED(1056596260,32,FLEN)
NAN_BOXED(1063745244,32,FLEN)
NAN_BOXED(3205133769,32,FLEN)
NAN_BOXED(1056596260,32,FLEN)
NAN_BOXED(1063745244,32,FLEN)
NAN_BOXED(3205133769,32,FLEN)
NAN_BOXED(1056596260,32,FLEN)
NAN_BOXED(1063745244,32,FLEN)
NAN_BOXED(3205133769,32,FLEN)
NAN_BOXED(1056596260,32,FLEN)
NAN_BOXED(1057274392,32,FLEN)
NAN_BOXED(3168290514,32,FLEN)
NAN_BOXED(1012941689,32,FLEN)
NAN_BOXED(1057274392,32,FLEN)
NAN_BOXED(3168290514,32,FLEN)
NAN_BOXED(1012941689,32,FLEN)
NAN_BOXED(1057274392,32,FLEN)
NAN_BOXED(3168290514,32,FLEN)
NAN_BOXED(1012941689,32,FLEN)
NAN_BOXED(1057274392,32,FLEN)
NAN_BOXED(3168290514,32,FLEN)
NAN_BOXED(1012941689,32,FLEN)
NAN_BOXED(1057274392,32,FLEN)
NAN_BOXED(3168290514,32,FLEN)
NAN_BOXED(1012941689,32,FLEN)
NAN_BOXED(1049688526,32,FLEN)
NAN_BOXED(3179470307,32,FLEN)
NAN_BOXED(1016346886,32,FLEN)
NAN_BOXED(1049688526,32,FLEN)
NAN_BOXED(3179470307,32,FLEN)
NAN_BOXED(1016346886,32,FLEN)
NAN_BOXED(1049688526,32,FLEN)
NAN_BOXED(3179470307,32,FLEN)
NAN_BOXED(1016346886,32,FLEN)
NAN_BOXED(1049688526,32,FLEN)
NAN_BOXED(3179470307,32,FLEN)
NAN_BOXED(1016346886,32,FLEN)
NAN_BOXED(1049688526,32,FLEN)
NAN_BOXED(3179470307,32,FLEN)
NAN_BOXED(1016346886,32,FLEN)
NAN_BOXED(1036059366,32,FLEN)
NAN_BOXED(3234017969,32,FLEN)
NAN_BOXED(1058220910,32,FLEN)
NAN_BOXED(1036059366,32,FLEN)
NAN_BOXED(3234017969,32,FLEN)
NAN_BOXED(1058220910,32,FLEN)
NAN_BOXED(1036059366,32,FLEN)
NAN_BOXED(3234017969,32,FLEN)
NAN_BOXED(1058220910,32,FLEN)
NAN_BOXED(1036059366,32,FLEN)
NAN_BOXED(3234017969,32,FLEN)
NAN_BOXED(1058220910,32,FLEN)
NAN_BOXED(1036059366,32,FLEN)
NAN_BOXED(3234017969,32,FLEN)
NAN_BOXED(1058220910,32,FLEN)
NAN_BOXED(1062874180,32,FLEN)
NAN_BOXED(3212855039,32,FLEN)
NAN_BOXED(1062905159,32,FLEN)
NAN_BOXED(1062874180,32,FLEN)
NAN_BOXED(3212855039,32,FLEN)
NAN_BOXED(1062905159,32,FLEN)
NAN_BOXED(1062874180,32,FLEN)
NAN_BOXED(3212855039,32,FLEN)
NAN_BOXED(1062905159,32,FLEN)
NAN_BOXED(1062874180,32,FLEN)
NAN_BOXED(3212855039,32,FLEN)
NAN_BOXED(1062905159,32,FLEN)
NAN_BOXED(1062874180,32,FLEN)
NAN_BOXED(3212855039,32,FLEN)
NAN_BOXED(1062905159,32,FLEN)
NAN_BOXED(1049937078,32,FLEN)
NAN_BOXED(3190541055,32,FLEN)
NAN_BOXED(1028106938,32,FLEN)
NAN_BOXED(1049937078,32,FLEN)
NAN_BOXED(3190541055,32,FLEN)
NAN_BOXED(1028106938,32,FLEN)
NAN_BOXED(1049937078,32,FLEN)
NAN_BOXED(3190541055,32,FLEN)
NAN_BOXED(1028106938,32,FLEN)
NAN_BOXED(1049937078,32,FLEN)
NAN_BOXED(3190541055,32,FLEN)
NAN_BOXED(1028106938,32,FLEN)
NAN_BOXED(1049937078,32,FLEN)
NAN_BOXED(3190541055,32,FLEN)
NAN_BOXED(1028106938,32,FLEN)
NAN_BOXED(1051428084,32,FLEN)
NAN_BOXED(3220819170,32,FLEN)
NAN_BOXED(1059544471,32,FLEN)
NAN_BOXED(1051428084,32,FLEN)
NAN_BOXED(3220819170,32,FLEN)
NAN_BOXED(1059544471,32,FLEN)
NAN_BOXED(1051428084,32,FLEN)
NAN_BOXED(3220819170,32,FLEN)
NAN_BOXED(1059544471,32,FLEN)
NAN_BOXED(1051428084,32,FLEN)
NAN_BOXED(3220819170,32,FLEN)
NAN_BOXED(1059544471,32,FLEN)
NAN_BOXED(1051428084,32,FLEN)
NAN_BOXED(3220819170,32,FLEN)
NAN_BOXED(1059544471,32,FLEN)
NAN_BOXED(1053701524,32,FLEN)
NAN_BOXED(3210354180,32,FLEN)
NAN_BOXED(1051701710,32,FLEN)
NAN_BOXED(1053701524,32,FLEN)
NAN_BOXED(3210354180,32,FLEN)
NAN_BOXED(1051701710,32,FLEN)
NAN_BOXED(1053701524,32,FLEN)
NAN_BOXED(3210354180,32,FLEN)
NAN_BOXED(1051701710,32,FLEN)
NAN_BOXED(1053701524,32,FLEN)
NAN_BOXED(3210354180,32,FLEN)
NAN_BOXED(1051701710,32,FLEN)
NAN_BOXED(1053701524,32,FLEN)
NAN_BOXED(3210354180,32,FLEN)
NAN_BOXED(1051701710,32,FLEN)
NAN_BOXED(1061108466,32,FLEN)
NAN_BOXED(3201416762,32,FLEN)
NAN_BOXED(1050455353,32,FLEN)
NAN_BOXED(1061108466,32,FLEN)
NAN_BOXED(3201416762,32,FLEN)
NAN_BOXED(1050455353,32,FLEN)
NAN_BOXED(1061108466,32,FLEN)
NAN_BOXED(3201416762,32,FLEN)
NAN_BOXED(1050455353,32,FLEN)
NAN_BOXED(1061108466,32,FLEN)
NAN_BOXED(3201416762,32,FLEN)
NAN_BOXED(1050455353,32,FLEN)
NAN_BOXED(1061108466,32,FLEN)
NAN_BOXED(3201416762,32,FLEN)
NAN_BOXED(1050455353,32,FLEN)
NAN_BOXED(1062012244,32,FLEN)
NAN_BOXED(3214631892,32,FLEN)
NAN_BOXED(1064887386,32,FLEN)
NAN_BOXED(1062012244,32,FLEN)
NAN_BOXED(3214631892,32,FLEN)
NAN_BOXED(1064887386,32,FLEN)
NAN_BOXED(1062012244,32,FLEN)
NAN_BOXED(3214631892,32,FLEN)
NAN_BOXED(1064887386,32,FLEN)
NAN_BOXED(1062012244,32,FLEN)
NAN_BOXED(3214631892,32,FLEN)
NAN_BOXED(1064887386,32,FLEN)
NAN_BOXED(1062012244,32,FLEN)
NAN_BOXED(3214631892,32,FLEN)
NAN_BOXED(1064887386,32,FLEN)
NAN_BOXED(1064275139,32,FLEN)
NAN_BOXED(3205234885,32,FLEN)
NAN_BOXED(1057161651,32,FLEN)
NAN_BOXED(1064275139,32,FLEN)
NAN_BOXED(3205234885,32,FLEN)
NAN_BOXED(1057161651,32,FLEN)
NAN_BOXED(1064275139,32,FLEN)
NAN_BOXED(3205234885,32,FLEN)
NAN_BOXED(1057161651,32,FLEN)
NAN_BOXED(1064275139,32,FLEN)
NAN_BOXED(3205234885,32,FLEN)
NAN_BOXED(1057161651,32,FLEN)
NAN_BOXED(1064275139,32,FLEN)
NAN_BOXED(3205234885,32,FLEN)
NAN_BOXED(1057161651,32,FLEN)
NAN_BOXED(1050386885,32,FLEN)
NAN_BOXED(3223523179,32,FLEN)
NAN_BOXED(1061569217,32,FLEN)
NAN_BOXED(1050386885,32,FLEN)
NAN_BOXED(3223523179,32,FLEN)
NAN_BOXED(1061569217,32,FLEN)
NAN_BOXED(1050386885,32,FLEN)
NAN_BOXED(3223523179,32,FLEN)
NAN_BOXED(1061569217,32,FLEN)
NAN_BOXED(1050386885,32,FLEN)
NAN_BOXED(3223523179,32,FLEN)
NAN_BOXED(1061569217,32,FLEN)
NAN_BOXED(1050386885,32,FLEN)
NAN_BOXED(3223523179,32,FLEN)
NAN_BOXED(1061569217,32,FLEN)
NAN_BOXED(1058694730,32,FLEN)
NAN_BOXED(3204597243,32,FLEN)
NAN_BOXED(1050485837,32,FLEN)
NAN_BOXED(1058694730,32,FLEN)
NAN_BOXED(3204597243,32,FLEN)
NAN_BOXED(1050485837,32,FLEN)
NAN_BOXED(1058694730,32,FLEN)
NAN_BOXED(3204597243,32,FLEN)
NAN_BOXED(1050485837,32,FLEN)
NAN_BOXED(1058694730,32,FLEN)
NAN_BOXED(3204597243,32,FLEN)
NAN_BOXED(1050485837,32,FLEN)
NAN_BOXED(1058694730,32,FLEN)
NAN_BOXED(3204597243,32,FLEN)
NAN_BOXED(1050485837,32,FLEN)
NAN_BOXED(1060938904,32,FLEN)
NAN_BOXED(3206935438,32,FLEN)
NAN_BOXED(1056215838,32,FLEN)
NAN_BOXED(1060938904,32,FLEN)
NAN_BOXED(3206935438,32,FLEN)
NAN_BOXED(1056215838,32,FLEN)
NAN_BOXED(1060938904,32,FLEN)
NAN_BOXED(3206935438,32,FLEN)
NAN_BOXED(1056215838,32,FLEN)
NAN_BOXED(1060938904,32,FLEN)
NAN_BOXED(3206935438,32,FLEN)
NAN_BOXED(1056215838,32,FLEN)
NAN_BOXED(1060938904,32,FLEN)
NAN_BOXED(3206935438,32,FLEN)
NAN_BOXED(1056215838,32,FLEN)
NAN_BOXED(1053511870,32,FLEN)
NAN_BOXED(3216995261,32,FLEN)
NAN_BOXED(1058540842,32,FLEN)
NAN_BOXED(1053511870,32,FLEN)
NAN_BOXED(3216995261,32,FLEN)
NAN_BOXED(1058540842,32,FLEN)
NAN_BOXED(1053511870,32,FLEN)
NAN_BOXED(3216995261,32,FLEN)
NAN_BOXED(1058540842,32,FLEN)
NAN_BOXED(1053511870,32,FLEN)
NAN_BOXED(3216995261,32,FLEN)
NAN_BOXED(1058540842,32,FLEN)
NAN_BOXED(1053511870,32,FLEN)
NAN_BOXED(3216995261,32,FLEN)
NAN_BOXED(1058540842,32,FLEN)
NAN_BOXED(1061856090,32,FLEN)
NAN_BOXED(3200697732,32,FLEN)
NAN_BOXED(1050498736,32,FLEN)
NAN_BOXED(1061856090,32,FLEN)
NAN_BOXED(3200697732,32,FLEN)
NAN_BOXED(1050498736,32,FLEN)
NAN_BOXED(1061856090,32,FLEN)
NAN_BOXED(3200697732,32,FLEN)
NAN_BOXED(1050498736,32,FLEN)
NAN_BOXED(1061856090,32,FLEN)
NAN_BOXED(3200697732,32,FLEN)
NAN_BOXED(1050498736,32,FLEN)
NAN_BOXED(1061856090,32,FLEN)
NAN_BOXED(3200697732,32,FLEN)
NAN_BOXED(1050498736,32,FLEN)
NAN_BOXED(1050217992,32,FLEN)
NAN_BOXED(3224216191,32,FLEN)
NAN_BOXED(1062182725,32,FLEN)
NAN_BOXED(1050217992,32,FLEN)
NAN_BOXED(3224216191,32,FLEN)
NAN_BOXED(1062182725,32,FLEN)
NAN_BOXED(1050217992,32,FLEN)
NAN_BOXED(3224216191,32,FLEN)
NAN_BOXED(1062182725,32,FLEN)
NAN_BOXED(1050217992,32,FLEN)
NAN_BOXED(3224216191,32,FLEN)
NAN_BOXED(1062182725,32,FLEN)
NAN_BOXED(1050217992,32,FLEN)
NAN_BOXED(3224216191,32,FLEN)
NAN_BOXED(1062182725,32,FLEN)
NAN_BOXED(1044728308,32,FLEN)
NAN_BOXED(3219458065,32,FLEN)
NAN_BOXED(1051754847,32,FLEN)
NAN_BOXED(1044728308,32,FLEN)
NAN_BOXED(3219458065,32,FLEN)
NAN_BOXED(1051754847,32,FLEN)
NAN_BOXED(1044728308,32,FLEN)
NAN_BOXED(3219458065,32,FLEN)
NAN_BOXED(1051754847,32,FLEN)
NAN_BOXED(1044728308,32,FLEN)
NAN_BOXED(3219458065,32,FLEN)
NAN_BOXED(1051754847,32,FLEN)
NAN_BOXED(1044728308,32,FLEN)
NAN_BOXED(3219458065,32,FLEN)
NAN_BOXED(1051754847,32,FLEN)
NAN_BOXED(1040759704,32,FLEN)
NAN_BOXED(3218257382,32,FLEN)
NAN_BOXED(1046550038,32,FLEN)
NAN_BOXED(1040759704,32,FLEN)
NAN_BOXED(3218257382,32,FLEN)
NAN_BOXED(1046550038,32,FLEN)
NAN_BOXED(1040759704,32,FLEN)
NAN_BOXED(3218257382,32,FLEN)
NAN_BOXED(1046550038,32,FLEN)
NAN_BOXED(1040759704,32,FLEN)
NAN_BOXED(3218257382,32,FLEN)
NAN_BOXED(1046550038,32,FLEN)
NAN_BOXED(1040759704,32,FLEN)
NAN_BOXED(3218257382,32,FLEN)
NAN_BOXED(1046550038,32,FLEN)
NAN_BOXED(1057059512,32,FLEN)
NAN_BOXED(3205491098,32,FLEN)
NAN_BOXED(1049725544,32,FLEN)
NAN_BOXED(1057059512,32,FLEN)
NAN_BOXED(3205491098,32,FLEN)
NAN_BOXED(1049725544,32,FLEN)
NAN_BOXED(1057059512,32,FLEN)
NAN_BOXED(3205491098,32,FLEN)
NAN_BOXED(1049725544,32,FLEN)
NAN_BOXED(1057059512,32,FLEN)
NAN_BOXED(3205491098,32,FLEN)
NAN_BOXED(1049725544,32,FLEN)
NAN_BOXED(1057059512,32,FLEN)
NAN_BOXED(3205491098,32,FLEN)
NAN_BOXED(1049725544,32,FLEN)
NAN_BOXED(1060076947,32,FLEN)
NAN_BOXED(3204539326,32,FLEN)
NAN_BOXED(1051813198,32,FLEN)
NAN_BOXED(1060076947,32,FLEN)
NAN_BOXED(3204539326,32,FLEN)
NAN_BOXED(1051813198,32,FLEN)
NAN_BOXED(1060076947,32,FLEN)
NAN_BOXED(3204539326,32,FLEN)
NAN_BOXED(1051813198,32,FLEN)
NAN_BOXED(1060076947,32,FLEN)
NAN_BOXED(3204539326,32,FLEN)
NAN_BOXED(1051813198,32,FLEN)
NAN_BOXED(1060076947,32,FLEN)
NAN_BOXED(3204539326,32,FLEN)
NAN_BOXED(1051813198,32,FLEN)
NAN_BOXED(1063971691,32,FLEN)
NAN_BOXED(3208018407,32,FLEN)
NAN_BOXED(1059550011,32,FLEN)
NAN_BOXED(1063971691,32,FLEN)
NAN_BOXED(3208018407,32,FLEN)
NAN_BOXED(1059550011,32,FLEN)
NAN_BOXED(1063971691,32,FLEN)
NAN_BOXED(3208018407,32,FLEN)
NAN_BOXED(1059550011,32,FLEN)
NAN_BOXED(1063971691,32,FLEN)
NAN_BOXED(3208018407,32,FLEN)
NAN_BOXED(1059550011,32,FLEN)
NAN_BOXED(1063971691,32,FLEN)
NAN_BOXED(3208018407,32,FLEN)
NAN_BOXED(1059550011,32,FLEN)
NAN_BOXED(1056761718,32,FLEN)
NAN_BOXED(3194824304,32,FLEN)
NAN_BOXED(1038764098,32,FLEN)
NAN_BOXED(1056761718,32,FLEN)
NAN_BOXED(3194824304,32,FLEN)
NAN_BOXED(1038764098,32,FLEN)
NAN_BOXED(1056761718,32,FLEN)
NAN_BOXED(3194824304,32,FLEN)
NAN_BOXED(1038764098,32,FLEN)
NAN_BOXED(1056761718,32,FLEN)
NAN_BOXED(3194824304,32,FLEN)
NAN_BOXED(1038764098,32,FLEN)
NAN_BOXED(1056761718,32,FLEN)
NAN_BOXED(3194824304,32,FLEN)
NAN_BOXED(1038764098,32,FLEN)
NAN_BOXED(1050795950,32,FLEN)
NAN_BOXED(3197326151,32,FLEN)
NAN_BOXED(1035620403,32,FLEN)
NAN_BOXED(1050795950,32,FLEN)
NAN_BOXED(3197326151,32,FLEN)
NAN_BOXED(1035620403,32,FLEN)
NAN_BOXED(1050795950,32,FLEN)
NAN_BOXED(3197326151,32,FLEN)
NAN_BOXED(1035620403,32,FLEN)
NAN_BOXED(1050795950,32,FLEN)
NAN_BOXED(3197326151,32,FLEN)
NAN_BOXED(1035620403,32,FLEN)
NAN_BOXED(1050795950,32,FLEN)
NAN_BOXED(3197326151,32,FLEN)
NAN_BOXED(1035620403,32,FLEN)
NAN_BOXED(1040570625,32,FLEN)
NAN_BOXED(3194307231,32,FLEN)
NAN_BOXED(1022344166,32,FLEN)
NAN_BOXED(1040570625,32,FLEN)
NAN_BOXED(3194307231,32,FLEN)
NAN_BOXED(1022344166,32,FLEN)
NAN_BOXED(1040570625,32,FLEN)
NAN_BOXED(3194307231,32,FLEN)
NAN_BOXED(1022344166,32,FLEN)
NAN_BOXED(1040570625,32,FLEN)
NAN_BOXED(3194307231,32,FLEN)
NAN_BOXED(1022344166,32,FLEN)
NAN_BOXED(1040570625,32,FLEN)
NAN_BOXED(3194307231,32,FLEN)
NAN_BOXED(1022344166,32,FLEN)
NAN_BOXED(1053019148,32,FLEN)
NAN_BOXED(3212854491,32,FLEN)
NAN_BOXED(1053046112,32,FLEN)
NAN_BOXED(1053019148,32,FLEN)
NAN_BOXED(3212854491,32,FLEN)
NAN_BOXED(1053046112,32,FLEN)
NAN_BOXED(1053019148,32,FLEN)
NAN_BOXED(3212854491,32,FLEN)
NAN_BOXED(1053046112,32,FLEN)
NAN_BOXED(1053019148,32,FLEN)
NAN_BOXED(3212854491,32,FLEN)
NAN_BOXED(1053046112,32,FLEN)
NAN_BOXED(1053019148,32,FLEN)
NAN_BOXED(3212854491,32,FLEN)
NAN_BOXED(1053046112,32,FLEN)
NAN_BOXED(1057486514,32,FLEN)
NAN_BOXED(3216749085,32,FLEN)
NAN_BOXED(1061642139,32,FLEN)
NAN_BOXED(1057486514,32,FLEN)
NAN_BOXED(3216749085,32,FLEN)
NAN_BOXED(1061642139,32,FLEN)
NAN_BOXED(1057486514,32,FLEN)
NAN_BOXED(3216749085,32,FLEN)
NAN_BOXED(1061642139,32,FLEN)
NAN_BOXED(1057486514,32,FLEN)
NAN_BOXED(3216749085,32,FLEN)
NAN_BOXED(1061642139,32,FLEN)
NAN_BOXED(1057486514,32,FLEN)
NAN_BOXED(3216749085,32,FLEN)
NAN_BOXED(1061642139,32,FLEN)
NAN_BOXED(1045449866,32,FLEN)
NAN_BOXED(3220516255,32,FLEN)
NAN_BOXED(1053261408,32,FLEN)
NAN_BOXED(1045449866,32,FLEN)
NAN_BOXED(3220516255,32,FLEN)
NAN_BOXED(1053261408,32,FLEN)
NAN_BOXED(1045449866,32,FLEN)
NAN_BOXED(3220516255,32,FLEN)
NAN_BOXED(1053261408,32,FLEN)
NAN_BOXED(1045449866,32,FLEN)
NAN_BOXED(3220516255,32,FLEN)
NAN_BOXED(1053261408,32,FLEN)
NAN_BOXED(1045449866,32,FLEN)
NAN_BOXED(3220516255,32,FLEN)
NAN_BOXED(1053261408,32,FLEN)
NAN_BOXED(1062640279,32,FLEN)
NAN_BOXED(3211271040,32,FLEN)
NAN_BOXED(1061327655,32,FLEN)
NAN_BOXED(1062640279,32,FLEN)
NAN_BOXED(3211271040,32,FLEN)
NAN_BOXED(1061327655,32,FLEN)
NAN_BOXED(1062640279,32,FLEN)
NAN_BOXED(3211271040,32,FLEN)
NAN_BOXED(1061327655,32,FLEN)
NAN_BOXED(1062640279,32,FLEN)
NAN_BOXED(3211271040,32,FLEN)
NAN_BOXED(1061327655,32,FLEN)
NAN_BOXED(1062640279,32,FLEN)
NAN_BOXED(3211271040,32,FLEN)
NAN_BOXED(1061327655,32,FLEN)
NAN_BOXED(1061647845,32,FLEN)
NAN_BOXED(3199613836,32,FLEN)
NAN_BOXED(1049492534,32,FLEN)
NAN_BOXED(1061647845,32,FLEN)
NAN_BOXED(3199613836,32,FLEN)
NAN_BOXED(1049492534,32,FLEN)
NAN_BOXED(1061647845,32,FLEN)
NAN_BOXED(3199613836,32,FLEN)
NAN_BOXED(1049492534,32,FLEN)
NAN_BOXED(1061647845,32,FLEN)
NAN_BOXED(3199613836,32,FLEN)
NAN_BOXED(1049492534,32,FLEN)
NAN_BOXED(1061647845,32,FLEN)
NAN_BOXED(3199613836,32,FLEN)
NAN_BOXED(1049492534,32,FLEN)
NAN_BOXED(1053696879,32,FLEN)
NAN_BOXED(3221096393,32,FLEN)
NAN_BOXED(1061981550,32,FLEN)
NAN_BOXED(1053696879,32,FLEN)
NAN_BOXED(3221096393,32,FLEN)
NAN_BOXED(1061981550,32,FLEN)
NAN_BOXED(1053696879,32,FLEN)
NAN_BOXED(3221096393,32,FLEN)
NAN_BOXED(1061981550,32,FLEN)
NAN_BOXED(1053696879,32,FLEN)
NAN_BOXED(3221096393,32,FLEN)
NAN_BOXED(1061981550,32,FLEN)
NAN_BOXED(1053696879,32,FLEN)
NAN_BOXED(3221096393,32,FLEN)
NAN_BOXED(1061981550,32,FLEN)
NAN_BOXED(1050669620,32,FLEN)
NAN_BOXED(3216174121,32,FLEN)
NAN_BOXED(1054839787,32,FLEN)
NAN_BOXED(1050669620,32,FLEN)
NAN_BOXED(3216174121,32,FLEN)
NAN_BOXED(1054839787,32,FLEN)
NAN_BOXED(1050669620,32,FLEN)
NAN_BOXED(3216174121,32,FLEN)
NAN_BOXED(1054839787,32,FLEN)
NAN_BOXED(1050669620,32,FLEN)
NAN_BOXED(3216174121,32,FLEN)
NAN_BOXED(1054839787,32,FLEN)
NAN_BOXED(1050669620,32,FLEN)
NAN_BOXED(3216174121,32,FLEN)
NAN_BOXED(1054839787,32,FLEN)
NAN_BOXED(1060880476,32,FLEN)
NAN_BOXED(3208766472,32,FLEN)
NAN_BOXED(1057895235,32,FLEN)
NAN_BOXED(1060880476,32,FLEN)
NAN_BOXED(3208766472,32,FLEN)
NAN_BOXED(1057895235,32,FLEN)
NAN_BOXED(1060880476,32,FLEN)
NAN_BOXED(3208766472,32,FLEN)
NAN_BOXED(1057895235,32,FLEN)
NAN_BOXED(1060880476,32,FLEN)
NAN_BOXED(3208766472,32,FLEN)
NAN_BOXED(1057895235,32,FLEN)
NAN_BOXED(1060880476,32,FLEN)
NAN_BOXED(3208766472,32,FLEN)
NAN_BOXED(1057895235,32,FLEN)
NAN_BOXED(1005589110,32,FLEN)
NAN_BOXED(3270147945,32,FLEN)
NAN_BOXED(1062987868,32,FLEN)
NAN_BOXED(1005589110,32,FLEN)
NAN_BOXED(3270147945,32,FLEN)
NAN_BOXED(1062987868,32,FLEN)
NAN_BOXED(1005589110,32,FLEN)
NAN_BOXED(3270147945,32,FLEN)
NAN_BOXED(1062987868,32,FLEN)
NAN_BOXED(1005589110,32,FLEN)
NAN_BOXED(3270147945,32,FLEN)
NAN_BOXED(1062987868,32,FLEN)
NAN_BOXED(1005589110,32,FLEN)
NAN_BOXED(3270147945,32,FLEN)
NAN_BOXED(1062987868,32,FLEN)
NAN_BOXED(1061383297,32,FLEN)
NAN_BOXED(3204986744,32,FLEN)
NAN_BOXED(1053816825,32,FLEN)
NAN_BOXED(1061383297,32,FLEN)
NAN_BOXED(3204986744,32,FLEN)
NAN_BOXED(1053816825,32,FLEN)
NAN_BOXED(1061383297,32,FLEN)
NAN_BOXED(3204986744,32,FLEN)
NAN_BOXED(1053816825,32,FLEN)
NAN_BOXED(1061383297,32,FLEN)
NAN_BOXED(3204986744,32,FLEN)
NAN_BOXED(1053816825,32,FLEN)
NAN_BOXED(1061383297,32,FLEN)
NAN_BOXED(3204986744,32,FLEN)
NAN_BOXED(1053816825,32,FLEN)
NAN_BOXED(1042541028,32,FLEN)
NAN_BOXED(3204082312,32,FLEN)
NAN_BOXED(1033918111,32,FLEN)
NAN_BOXED(1042541028,32,FLEN)
NAN_BOXED(3204082312,32,FLEN)
NAN_BOXED(1033918111,32,FLEN)
NAN_BOXED(1042541028,32,FLEN)
NAN_BOXED(3204082312,32,FLEN)
NAN_BOXED(1033918111,32,FLEN)
NAN_BOXED(1042541028,32,FLEN)
NAN_BOXED(3204082312,32,FLEN)
NAN_BOXED(1033918111,32,FLEN)
NAN_BOXED(1042541028,32,FLEN)
NAN_BOXED(3204082312,32,FLEN)
NAN_BOXED(1033918111,32,FLEN)
NAN_BOXED(1058656301,32,FLEN)
NAN_BOXED(3200579329,32,FLEN)
NAN_BOXED(1047310230,32,FLEN)
NAN_BOXED(1058656301,32,FLEN)
NAN_BOXED(3200579329,32,FLEN)
NAN_BOXED(1047310230,32,FLEN)
NAN_BOXED(1058656301,32,FLEN)
NAN_BOXED(3200579329,32,FLEN)
NAN_BOXED(1047310230,32,FLEN)
NAN_BOXED(1058656301,32,FLEN)
NAN_BOXED(3200579329,32,FLEN)
NAN_BOXED(1047310230,32,FLEN)
NAN_BOXED(1058656301,32,FLEN)
NAN_BOXED(3200579329,32,FLEN)
NAN_BOXED(1047310230,32,FLEN)
NAN_BOXED(1063365039,32,FLEN)
NAN_BOXED(3207742720,32,FLEN)
NAN_BOXED(1058874575,32,FLEN)
NAN_BOXED(1063365039,32,FLEN)
NAN_BOXED(3207742720,32,FLEN)
NAN_BOXED(1058874575,32,FLEN)
NAN_BOXED(1063365039,32,FLEN)
NAN_BOXED(3207742720,32,FLEN)
NAN_BOXED(1058874575,32,FLEN)
NAN_BOXED(1063365039,32,FLEN)
NAN_BOXED(3207742720,32,FLEN)
NAN_BOXED(1058874575,32,FLEN)
NAN_BOXED(1063365039,32,FLEN)
NAN_BOXED(3207742720,32,FLEN)
NAN_BOXED(1058874575,32,FLEN)
NAN_BOXED(1041400988,32,FLEN)
NAN_BOXED(3222656203,32,FLEN)
NAN_BOXED(1051427314,32,FLEN)
NAN_BOXED(1041400988,32,FLEN)
NAN_BOXED(3222656203,32,FLEN)
NAN_BOXED(1051427314,32,FLEN)
NAN_BOXED(1041400988,32,FLEN)
NAN_BOXED(3222656203,32,FLEN)
NAN_BOXED(1051427314,32,FLEN)
NAN_BOXED(1041400988,32,FLEN)
NAN_BOXED(3222656203,32,FLEN)
NAN_BOXED(1051427314,32,FLEN)
NAN_BOXED(1041400988,32,FLEN)
NAN_BOXED(3222656203,32,FLEN)
NAN_BOXED(1051427314,32,FLEN)
NAN_BOXED(1057859877,32,FLEN)
NAN_BOXED(3208230223,32,FLEN)
NAN_BOXED(1053656865,32,FLEN)
NAN_BOXED(1057859877,32,FLEN)
NAN_BOXED(3208230223,32,FLEN)
NAN_BOXED(1053656865,32,FLEN)
NAN_BOXED(1057859877,32,FLEN)
NAN_BOXED(3208230223,32,FLEN)
NAN_BOXED(1053656865,32,FLEN)
NAN_BOXED(1057859877,32,FLEN)
NAN_BOXED(3208230223,32,FLEN)
NAN_BOXED(1053656865,32,FLEN)
NAN_BOXED(1057859877,32,FLEN)
NAN_BOXED(3208230223,32,FLEN)
NAN_BOXED(1053656865,32,FLEN)
NAN_BOXED(1057175282,32,FLEN)
NAN_BOXED(3210856532,32,FLEN)
NAN_BOXED(1055355891,32,FLEN)
NAN_BOXED(1057175282,32,FLEN)
NAN_BOXED(3210856532,32,FLEN)
NAN_BOXED(1055355891,32,FLEN)
NAN_BOXED(1057175282,32,FLEN)
NAN_BOXED(3210856532,32,FLEN)
NAN_BOXED(1055355891,32,FLEN)
NAN_BOXED(1057175282,32,FLEN)
NAN_BOXED(3210856532,32,FLEN)
NAN_BOXED(1055355891,32,FLEN)
NAN_BOXED(1057175282,32,FLEN)
NAN_BOXED(3210856532,32,FLEN)
NAN_BOXED(1055355891,32,FLEN)
NAN_BOXED(1038971428,32,FLEN)
NAN_BOXED(3193378933,32,FLEN)
NAN_BOXED(1019707788,32,FLEN)
NAN_BOXED(1038971428,32,FLEN)
NAN_BOXED(3193378933,32,FLEN)
NAN_BOXED(1019707788,32,FLEN)
NAN_BOXED(1038971428,32,FLEN)
NAN_BOXED(3193378933,32,FLEN)
NAN_BOXED(1019707788,32,FLEN)
NAN_BOXED(1038971428,32,FLEN)
NAN_BOXED(3193378933,32,FLEN)
NAN_BOXED(1019707788,32,FLEN)
NAN_BOXED(1038971428,32,FLEN)
NAN_BOXED(3193378933,32,FLEN)
NAN_BOXED(1019707788,32,FLEN)
NAN_BOXED(1061992185,32,FLEN)
NAN_BOXED(3197948043,32,FLEN)
NAN_BOXED(1048235144,32,FLEN)
NAN_BOXED(1061992185,32,FLEN)
NAN_BOXED(3197948043,32,FLEN)
NAN_BOXED(1048235144,32,FLEN)
NAN_BOXED(1061992185,32,FLEN)
NAN_BOXED(3197948043,32,FLEN)
NAN_BOXED(1048235144,32,FLEN)
NAN_BOXED(1061992185,32,FLEN)
NAN_BOXED(3197948043,32,FLEN)
NAN_BOXED(1048235144,32,FLEN)
NAN_BOXED(1061992185,32,FLEN)
NAN_BOXED(3197948043,32,FLEN)
NAN_BOXED(1048235144,32,FLEN)
NAN_BOXED(1029864792,32,FLEN)
NAN_BOXED(3236119811,32,FLEN)
NAN_BOXED(1053364788,32,FLEN)
NAN_BOXED(1029864792,32,FLEN)
NAN_BOXED(3236119811,32,FLEN)
NAN_BOXED(1053364788,32,FLEN)
NAN_BOXED(1029864792,32,FLEN)
NAN_BOXED(3236119811,32,FLEN)
NAN_BOXED(1053364788,32,FLEN)
NAN_BOXED(1029864792,32,FLEN)
NAN_BOXED(3236119811,32,FLEN)
NAN_BOXED(1053364788,32,FLEN)
NAN_BOXED(1029864792,32,FLEN)
NAN_BOXED(3236119811,32,FLEN)
NAN_BOXED(1053364788,32,FLEN)
NAN_BOXED(1056948852,32,FLEN)
NAN_BOXED(3214985439,32,FLEN)
NAN_BOXED(1059103288,32,FLEN)
NAN_BOXED(1056948852,32,FLEN)
NAN_BOXED(3214985439,32,FLEN)
NAN_BOXED(1059103288,32,FLEN)
NAN_BOXED(1056948852,32,FLEN)
NAN_BOXED(3214985439,32,FLEN)
NAN_BOXED(1059103288,32,FLEN)
NAN_BOXED(1056948852,32,FLEN)
NAN_BOXED(3214985439,32,FLEN)
NAN_BOXED(1059103288,32,FLEN)
NAN_BOXED(1056948852,32,FLEN)
NAN_BOXED(3214985439,32,FLEN)
NAN_BOXED(1059103288,32,FLEN)
NAN_BOXED(1057232418,32,FLEN)
NAN_BOXED(3209694804,32,FLEN)
NAN_BOXED(1054257856,32,FLEN)
NAN_BOXED(1057232418,32,FLEN)
NAN_BOXED(3209694804,32,FLEN)
NAN_BOXED(1054257856,32,FLEN)
NAN_BOXED(1057232418,32,FLEN)
NAN_BOXED(3209694804,32,FLEN)
NAN_BOXED(1054257856,32,FLEN)
NAN_BOXED(1057232418,32,FLEN)
NAN_BOXED(3209694804,32,FLEN)
NAN_BOXED(1054257856,32,FLEN)
NAN_BOXED(1057232418,32,FLEN)
NAN_BOXED(3209694804,32,FLEN)
NAN_BOXED(1054257856,32,FLEN)
NAN_BOXED(1053226187,32,FLEN)
NAN_BOXED(3222400198,32,FLEN)
NAN_BOXED(1063440725,32,FLEN)
NAN_BOXED(1053226187,32,FLEN)
NAN_BOXED(3222400198,32,FLEN)
NAN_BOXED(1063440725,32,FLEN)
NAN_BOXED(1053226187,32,FLEN)
NAN_BOXED(3222400198,32,FLEN)
NAN_BOXED(1063440725,32,FLEN)
NAN_BOXED(1053226187,32,FLEN)
NAN_BOXED(3222400198,32,FLEN)
NAN_BOXED(1063440725,32,FLEN)
NAN_BOXED(1053226187,32,FLEN)
NAN_BOXED(3222400198,32,FLEN)
NAN_BOXED(1063440725,32,FLEN)
NAN_BOXED(1426043405,32,FLEN)
NAN_BOXED(3215164625,32,FLEN)
NAN_BOXED(1410157599,32,FLEN)
NAN_BOXED(1426043405,32,FLEN)
NAN_BOXED(3215164625,32,FLEN)
NAN_BOXED(1410157599,32,FLEN)
NAN_BOXED(1426043405,32,FLEN)
NAN_BOXED(3215164625,32,FLEN)
NAN_BOXED(1410157599,32,FLEN)
NAN_BOXED(1426043405,32,FLEN)
NAN_BOXED(3215164625,32,FLEN)
NAN_BOXED(1410157599,32,FLEN)
NAN_BOXED(1426043405,32,FLEN)
NAN_BOXED(3215164625,32,FLEN)
NAN_BOXED(1410157599,32,FLEN)
NAN_BOXED(1418471694,32,FLEN)
NAN_BOXED(3222016708,32,FLEN)
NAN_BOXED(1405815712,32,FLEN)
NAN_BOXED(1418471694,32,FLEN)
NAN_BOXED(3222016708,32,FLEN)
NAN_BOXED(1405815712,32,FLEN)
NAN_BOXED(1418471694,32,FLEN)
NAN_BOXED(3222016708,32,FLEN)
NAN_BOXED(1405815712,32,FLEN)
NAN_BOXED(1418471694,32,FLEN)
NAN_BOXED(3222016708,32,FLEN)
NAN_BOXED(1405815712,32,FLEN)
NAN_BOXED(1418471694,32,FLEN)
NAN_BOXED(3222016708,32,FLEN)
NAN_BOXED(1405815712,32,FLEN)
NAN_BOXED(1419878670,32,FLEN)
NAN_BOXED(3218726238,32,FLEN)
NAN_BOXED(1394136215,32,FLEN)
NAN_BOXED(1419878670,32,FLEN)
NAN_BOXED(3218726238,32,FLEN)
NAN_BOXED(1394136215,32,FLEN)
NAN_BOXED(1419878670,32,FLEN)
NAN_BOXED(3218726238,32,FLEN)
NAN_BOXED(1394136215,32,FLEN)
NAN_BOXED(1419878670,32,FLEN)
NAN_BOXED(3218726238,32,FLEN)
NAN_BOXED(1394136215,32,FLEN)
NAN_BOXED(1419878670,32,FLEN)
NAN_BOXED(3218726238,32,FLEN)
NAN_BOXED(1394136215,32,FLEN)
NAN_BOXED(1412149661,32,FLEN)
NAN_BOXED(3229885020,32,FLEN)
NAN_BOXED(1413805319,32,FLEN)
NAN_BOXED(1412149661,32,FLEN)
NAN_BOXED(3229885020,32,FLEN)
NAN_BOXED(1413805319,32,FLEN)
NAN_BOXED(1412149661,32,FLEN)
NAN_BOXED(3229885020,32,FLEN)
NAN_BOXED(1413805319,32,FLEN)
NAN_BOXED(1412149661,32,FLEN)
NAN_BOXED(3229885020,32,FLEN)
NAN_BOXED(1413805319,32,FLEN)
NAN_BOXED(1412149661,32,FLEN)
NAN_BOXED(3229885020,32,FLEN)
NAN_BOXED(1413805319,32,FLEN)
NAN_BOXED(1411399262,32,FLEN)
NAN_BOXED(3231190922,32,FLEN)
NAN_BOXED(1417246229,32,FLEN)
NAN_BOXED(1411399262,32,FLEN)
NAN_BOXED(3231190922,32,FLEN)
NAN_BOXED(1417246229,32,FLEN)
NAN_BOXED(1411399262,32,FLEN)
NAN_BOXED(3231190922,32,FLEN)
NAN_BOXED(1417246229,32,FLEN)
NAN_BOXED(1411399262,32,FLEN)
NAN_BOXED(3231190922,32,FLEN)
NAN_BOXED(1417246229,32,FLEN)
NAN_BOXED(1411399262,32,FLEN)
NAN_BOXED(3231190922,32,FLEN)
NAN_BOXED(1417246229,32,FLEN)
NAN_BOXED(1403127467,32,FLEN)
NAN_BOXED(3239492662,32,FLEN)
NAN_BOXED(1417361469,32,FLEN)
NAN_BOXED(1403127467,32,FLEN)
NAN_BOXED(3239492662,32,FLEN)
NAN_BOXED(1417361469,32,FLEN)
NAN_BOXED(1403127467,32,FLEN)
NAN_BOXED(3239492662,32,FLEN)
NAN_BOXED(1417361469,32,FLEN)
NAN_BOXED(1403127467,32,FLEN)
NAN_BOXED(3239492662,32,FLEN)
NAN_BOXED(1417361469,32,FLEN)
NAN_BOXED(1403127467,32,FLEN)
NAN_BOXED(3239492662,32,FLEN)
NAN_BOXED(1417361469,32,FLEN)
NAN_BOXED(1422633793,32,FLEN)
NAN_BOXED(3221423166,32,FLEN)
NAN_BOXED(1419833354,32,FLEN)
NAN_BOXED(1422633793,32,FLEN)
NAN_BOXED(3221423166,32,FLEN)
NAN_BOXED(1419833354,32,FLEN)
NAN_BOXED(1422633793,32,FLEN)
NAN_BOXED(3221423166,32,FLEN)
NAN_BOXED(1419833354,32,FLEN)
NAN_BOXED(1422633793,32,FLEN)
NAN_BOXED(3221423166,32,FLEN)
NAN_BOXED(1419833354,32,FLEN)
NAN_BOXED(1422633793,32,FLEN)
NAN_BOXED(3221423166,32,FLEN)
NAN_BOXED(1419833354,32,FLEN)
NAN_BOXED(1425562585,32,FLEN)
NAN_BOXED(3221267873,32,FLEN)
NAN_BOXED(1425226351,32,FLEN)
NAN_BOXED(1425562585,32,FLEN)
NAN_BOXED(3221267873,32,FLEN)
NAN_BOXED(1425226351,32,FLEN)
NAN_BOXED(1425562585,32,FLEN)
NAN_BOXED(3221267873,32,FLEN)
NAN_BOXED(1425226351,32,FLEN)
NAN_BOXED(1425562585,32,FLEN)
NAN_BOXED(3221267873,32,FLEN)
NAN_BOXED(1425226351,32,FLEN)
NAN_BOXED(1425562585,32,FLEN)
NAN_BOXED(3221267873,32,FLEN)
NAN_BOXED(1425226351,32,FLEN)
NAN_BOXED(1416919977,32,FLEN)
NAN_BOXED(3225730565,32,FLEN)
NAN_BOXED(1416597657,32,FLEN)
NAN_BOXED(1416919977,32,FLEN)
NAN_BOXED(3225730565,32,FLEN)
NAN_BOXED(1416597657,32,FLEN)
NAN_BOXED(1416919977,32,FLEN)
NAN_BOXED(3225730565,32,FLEN)
NAN_BOXED(1416597657,32,FLEN)
NAN_BOXED(1416919977,32,FLEN)
NAN_BOXED(3225730565,32,FLEN)
NAN_BOXED(1416597657,32,FLEN)
NAN_BOXED(1416919977,32,FLEN)
NAN_BOXED(3225730565,32,FLEN)
NAN_BOXED(1416597657,32,FLEN)
NAN_BOXED(1422078357,32,FLEN)
NAN_BOXED(3223177294,32,FLEN)
NAN_BOXED(1424046220,32,FLEN)
NAN_BOXED(1422078357,32,FLEN)
NAN_BOXED(3223177294,32,FLEN)
NAN_BOXED(1424046220,32,FLEN)
NAN_BOXED(1422078357,32,FLEN)
NAN_BOXED(3223177294,32,FLEN)
NAN_BOXED(1424046220,32,FLEN)
NAN_BOXED(1422078357,32,FLEN)
NAN_BOXED(3223177294,32,FLEN)
NAN_BOXED(1424046220,32,FLEN)
NAN_BOXED(1422078357,32,FLEN)
NAN_BOXED(3223177294,32,FLEN)
NAN_BOXED(1424046220,32,FLEN)
NAN_BOXED(1418362573,32,FLEN)
NAN_BOXED(3225763224,32,FLEN)
NAN_BOXED(1420481433,32,FLEN)
NAN_BOXED(1418362573,32,FLEN)
NAN_BOXED(3225763224,32,FLEN)
NAN_BOXED(1420481433,32,FLEN)
NAN_BOXED(1418362573,32,FLEN)
NAN_BOXED(3225763224,32,FLEN)
NAN_BOXED(1420481433,32,FLEN)
NAN_BOXED(1418362573,32,FLEN)
NAN_BOXED(3225763224,32,FLEN)
NAN_BOXED(1420481433,32,FLEN)
NAN_BOXED(1418362573,32,FLEN)
NAN_BOXED(3225763224,32,FLEN)
NAN_BOXED(1420481433,32,FLEN)
NAN_BOXED(1420875156,32,FLEN)
NAN_BOXED(3222029564,32,FLEN)
NAN_BOXED(1417908687,32,FLEN)
NAN_BOXED(1420875156,32,FLEN)
NAN_BOXED(3222029564,32,FLEN)
NAN_BOXED(1417908687,32,FLEN)
NAN_BOXED(1420875156,32,FLEN)
NAN_BOXED(3222029564,32,FLEN)
NAN_BOXED(1417908687,32,FLEN)
NAN_BOXED(1420875156,32,FLEN)
NAN_BOXED(3222029564,32,FLEN)
NAN_BOXED(1417908687,32,FLEN)
NAN_BOXED(1420875156,32,FLEN)
NAN_BOXED(3222029564,32,FLEN)
NAN_BOXED(1417908687,32,FLEN)
NAN_BOXED(1417813099,32,FLEN)
NAN_BOXED(3224398828,32,FLEN)
NAN_BOXED(1414353695,32,FLEN)
NAN_BOXED(1417813099,32,FLEN)
NAN_BOXED(3224398828,32,FLEN)
NAN_BOXED(1414353695,32,FLEN)
NAN_BOXED(1417813099,32,FLEN)
NAN_BOXED(3224398828,32,FLEN)
NAN_BOXED(1414353695,32,FLEN)
NAN_BOXED(1417813099,32,FLEN)
NAN_BOXED(3224398828,32,FLEN)
NAN_BOXED(1414353695,32,FLEN)
NAN_BOXED(1417813099,32,FLEN)
NAN_BOXED(3224398828,32,FLEN)
NAN_BOXED(1414353695,32,FLEN)
NAN_BOXED(1415955736,32,FLEN)
NAN_BOXED(3226614195,32,FLEN)
NAN_BOXED(1416805854,32,FLEN)
NAN_BOXED(1415955736,32,FLEN)
NAN_BOXED(3226614195,32,FLEN)
NAN_BOXED(1416805854,32,FLEN)
NAN_BOXED(1415955736,32,FLEN)
NAN_BOXED(3226614195,32,FLEN)
NAN_BOXED(1416805854,32,FLEN)
NAN_BOXED(1415955736,32,FLEN)
NAN_BOXED(3226614195,32,FLEN)
NAN_BOXED(1416805854,32,FLEN)
NAN_BOXED(1415955736,32,FLEN)
NAN_BOXED(3226614195,32,FLEN)
NAN_BOXED(1416805854,32,FLEN)
NAN_BOXED(1422754768,32,FLEN)
NAN_BOXED(3216567335,32,FLEN)
NAN_BOXED(1403232921,32,FLEN)
NAN_BOXED(1422754768,32,FLEN)
NAN_BOXED(3216567335,32,FLEN)
NAN_BOXED(1403232921,32,FLEN)
NAN_BOXED(1422754768,32,FLEN)
NAN_BOXED(3216567335,32,FLEN)
NAN_BOXED(1403232921,32,FLEN)
NAN_BOXED(1422754768,32,FLEN)
NAN_BOXED(3216567335,32,FLEN)
NAN_BOXED(1403232921,32,FLEN)
NAN_BOXED(1422754768,32,FLEN)
NAN_BOXED(3216567335,32,FLEN)
NAN_BOXED(1403232921,32,FLEN)
NAN_BOXED(1399911600,32,FLEN)
NAN_BOXED(3246573620,32,FLEN)
NAN_BOXED(1424777927,32,FLEN)
NAN_BOXED(1399911600,32,FLEN)
NAN_BOXED(3246573620,32,FLEN)
NAN_BOXED(1424777927,32,FLEN)
NAN_BOXED(1399911600,32,FLEN)
NAN_BOXED(3246573620,32,FLEN)
NAN_BOXED(1424777927,32,FLEN)
NAN_BOXED(1399911600,32,FLEN)
NAN_BOXED(3246573620,32,FLEN)
NAN_BOXED(1424777927,32,FLEN)
NAN_BOXED(1399911600,32,FLEN)
NAN_BOXED(3246573620,32,FLEN)
NAN_BOXED(1424777927,32,FLEN)
NAN_BOXED(1417847623,32,FLEN)
NAN_BOXED(3226784044,32,FLEN)
NAN_BOXED(1420978132,32,FLEN)
NAN_BOXED(1417847623,32,FLEN)
NAN_BOXED(3226784044,32,FLEN)
NAN_BOXED(1420978132,32,FLEN)
NAN_BOXED(1417847623,32,FLEN)
NAN_BOXED(3226784044,32,FLEN)
NAN_BOXED(1420978132,32,FLEN)
NAN_BOXED(1417847623,32,FLEN)
NAN_BOXED(3226784044,32,FLEN)
NAN_BOXED(1420978132,32,FLEN)
NAN_BOXED(1417847623,32,FLEN)
NAN_BOXED(3226784044,32,FLEN)
NAN_BOXED(1420978132,32,FLEN)
NAN_BOXED(1424650481,32,FLEN)
NAN_BOXED(3220352312,32,FLEN)
NAN_BOXED(1421638347,32,FLEN)
NAN_BOXED(1424650481,32,FLEN)
NAN_BOXED(3220352312,32,FLEN)
NAN_BOXED(1421638347,32,FLEN)
NAN_BOXED(1424650481,32,FLEN)
NAN_BOXED(3220352312,32,FLEN)
NAN_BOXED(1421638347,32,FLEN)
NAN_BOXED(1424650481,32,FLEN)
NAN_BOXED(3220352312,32,FLEN)
NAN_BOXED(1421638347,32,FLEN)
NAN_BOXED(1424650481,32,FLEN)
NAN_BOXED(3220352312,32,FLEN)
NAN_BOXED(1421638347,32,FLEN)
NAN_BOXED(1418790176,32,FLEN)
NAN_BOXED(3227290266,32,FLEN)
NAN_BOXED(1425259442,32,FLEN)
NAN_BOXED(1418790176,32,FLEN)
NAN_BOXED(3227290266,32,FLEN)
NAN_BOXED(1425259442,32,FLEN)
NAN_BOXED(1418790176,32,FLEN)
NAN_BOXED(3227290266,32,FLEN)
NAN_BOXED(1425259442,32,FLEN)
NAN_BOXED(1418790176,32,FLEN)
NAN_BOXED(3227290266,32,FLEN)
NAN_BOXED(1425259442,32,FLEN)
NAN_BOXED(1418790176,32,FLEN)
NAN_BOXED(3227290266,32,FLEN)
NAN_BOXED(1425259442,32,FLEN)
NAN_BOXED(1419757006,32,FLEN)
NAN_BOXED(3222558988,32,FLEN)
NAN_BOXED(1415884663,32,FLEN)
NAN_BOXED(1419757006,32,FLEN)
NAN_BOXED(3222558988,32,FLEN)
NAN_BOXED(1415884663,32,FLEN)
NAN_BOXED(1419757006,32,FLEN)
NAN_BOXED(3222558988,32,FLEN)
NAN_BOXED(1415884663,32,FLEN)
NAN_BOXED(1419757006,32,FLEN)
NAN_BOXED(3222558988,32,FLEN)
NAN_BOXED(1415884663,32,FLEN)
NAN_BOXED(1419757006,32,FLEN)
NAN_BOXED(3222558988,32,FLEN)
NAN_BOXED(1415884663,32,FLEN)
NAN_BOXED(1404769545,32,FLEN)
NAN_BOXED(3234532698,32,FLEN)
NAN_BOXED(1403198336,32,FLEN)
NAN_BOXED(1404769545,32,FLEN)
NAN_BOXED(3234532698,32,FLEN)
NAN_BOXED(1403198336,32,FLEN)
NAN_BOXED(1404769545,32,FLEN)
NAN_BOXED(3234532698,32,FLEN)
NAN_BOXED(1403198336,32,FLEN)
NAN_BOXED(1404769545,32,FLEN)
NAN_BOXED(3234532698,32,FLEN)
NAN_BOXED(1403198336,32,FLEN)
NAN_BOXED(1404769545,32,FLEN)
NAN_BOXED(3234532698,32,FLEN)
NAN_BOXED(1403198336,32,FLEN)
NAN_BOXED(1422579879,32,FLEN)
NAN_BOXED(3222875928,32,FLEN)
NAN_BOXED(1424327478,32,FLEN)
NAN_BOXED(1422579879,32,FLEN)
NAN_BOXED(3222875928,32,FLEN)
NAN_BOXED(1424327478,32,FLEN)
NAN_BOXED(1422579879,32,FLEN)
NAN_BOXED(3222875928,32,FLEN)
NAN_BOXED(1424327478,32,FLEN)
NAN_BOXED(1422579879,32,FLEN)
NAN_BOXED(3222875928,32,FLEN)
NAN_BOXED(1424327478,32,FLEN)
NAN_BOXED(1422579879,32,FLEN)
NAN_BOXED(3222875928,32,FLEN)
NAN_BOXED(1424327478,32,FLEN)
NAN_BOXED(1412878087,32,FLEN)
NAN_BOXED(3230206285,32,FLEN)
NAN_BOXED(1418161597,32,FLEN)
NAN_BOXED(1412878087,32,FLEN)
NAN_BOXED(3230206285,32,FLEN)
NAN_BOXED(1418161597,32,FLEN)
NAN_BOXED(1412878087,32,FLEN)
NAN_BOXED(3230206285,32,FLEN)
NAN_BOXED(1418161597,32,FLEN)
NAN_BOXED(1412878087,32,FLEN)
NAN_BOXED(3230206285,32,FLEN)
NAN_BOXED(1418161597,32,FLEN)
NAN_BOXED(1412878087,32,FLEN)
NAN_BOXED(3230206285,32,FLEN)
NAN_BOXED(1418161597,32,FLEN)
NAN_BOXED(1420669864,32,FLEN)
NAN_BOXED(3222769088,32,FLEN)
NAN_BOXED(1419465884,32,FLEN)
NAN_BOXED(1420669864,32,FLEN)
NAN_BOXED(3222769088,32,FLEN)
NAN_BOXED(1419465884,32,FLEN)
NAN_BOXED(1420669864,32,FLEN)
NAN_BOXED(3222769088,32,FLEN)
NAN_BOXED(1419465884,32,FLEN)
NAN_BOXED(1420669864,32,FLEN)
NAN_BOXED(3222769088,32,FLEN)
NAN_BOXED(1419465884,32,FLEN)
NAN_BOXED(1420669864,32,FLEN)
NAN_BOXED(3222769088,32,FLEN)
NAN_BOXED(1419465884,32,FLEN)
NAN_BOXED(1410136336,32,FLEN)
NAN_BOXED(3235783587,32,FLEN)
NAN_BOXED(1424576114,32,FLEN)
NAN_BOXED(1410136336,32,FLEN)
NAN_BOXED(3235783587,32,FLEN)
NAN_BOXED(1424576114,32,FLEN)
NAN_BOXED(1410136336,32,FLEN)
NAN_BOXED(3235783587,32,FLEN)
NAN_BOXED(1424576114,32,FLEN)
NAN_BOXED(1410136336,32,FLEN)
NAN_BOXED(3235783587,32,FLEN)
NAN_BOXED(1424576114,32,FLEN)
NAN_BOXED(1410136336,32,FLEN)
NAN_BOXED(3235783587,32,FLEN)
NAN_BOXED(1424576114,32,FLEN)
NAN_BOXED(1418545777,32,FLEN)
NAN_BOXED(3225864610,32,FLEN)
NAN_BOXED(1421269874,32,FLEN)
NAN_BOXED(1418545777,32,FLEN)
NAN_BOXED(3225864610,32,FLEN)
NAN_BOXED(1421269874,32,FLEN)
NAN_BOXED(1418545777,32,FLEN)
NAN_BOXED(3225864610,32,FLEN)
NAN_BOXED(1421269874,32,FLEN)
NAN_BOXED(1418545777,32,FLEN)
NAN_BOXED(3225864610,32,FLEN)
NAN_BOXED(1421269874,32,FLEN)
NAN_BOXED(1418545777,32,FLEN)
NAN_BOXED(3225864610,32,FLEN)
NAN_BOXED(1421269874,32,FLEN)
NAN_BOXED(1420835643,32,FLEN)
NAN_BOXED(3221600248,32,FLEN)
NAN_BOXED(1415605082,32,FLEN)
NAN_BOXED(1420835643,32,FLEN)
NAN_BOXED(3221600248,32,FLEN)
NAN_BOXED(1415605082,32,FLEN)
NAN_BOXED(1420835643,32,FLEN)
NAN_BOXED(3221600248,32,FLEN)
NAN_BOXED(1415605082,32,FLEN)
NAN_BOXED(1420835643,32,FLEN)
NAN_BOXED(3221600248,32,FLEN)
NAN_BOXED(1415605082,32,FLEN)
NAN_BOXED(1420835643,32,FLEN)
NAN_BOXED(3221600248,32,FLEN)
NAN_BOXED(1415605082,32,FLEN)
NAN_BOXED(1421050613,32,FLEN)
NAN_BOXED(3218682891,32,FLEN)
NAN_BOXED(1405252608,32,FLEN)
NAN_BOXED(1421050613,32,FLEN)
NAN_BOXED(3218682891,32,FLEN)
NAN_BOXED(1405252608,32,FLEN)
NAN_BOXED(1421050613,32,FLEN)
NAN_BOXED(3218682891,32,FLEN)
NAN_BOXED(1405252608,32,FLEN)
NAN_BOXED(1421050613,32,FLEN)
NAN_BOXED(3218682891,32,FLEN)
NAN_BOXED(1405252608,32,FLEN)
NAN_BOXED(1421050613,32,FLEN)
NAN_BOXED(3218682891,32,FLEN)
NAN_BOXED(1405252608,32,FLEN)
NAN_BOXED(1418478211,32,FLEN)
NAN_BOXED(3225479766,32,FLEN)
NAN_BOXED(1420216603,32,FLEN)
NAN_BOXED(1418478211,32,FLEN)
NAN_BOXED(3225479766,32,FLEN)
NAN_BOXED(1420216603,32,FLEN)
NAN_BOXED(1418478211,32,FLEN)
NAN_BOXED(3225479766,32,FLEN)
NAN_BOXED(1420216603,32,FLEN)
NAN_BOXED(1418478211,32,FLEN)
NAN_BOXED(3225479766,32,FLEN)
NAN_BOXED(1420216603,32,FLEN)
NAN_BOXED(1418478211,32,FLEN)
NAN_BOXED(3225479766,32,FLEN)
NAN_BOXED(1420216603,32,FLEN)
NAN_BOXED(1419844804,32,FLEN)
NAN_BOXED(3221449141,32,FLEN)
NAN_BOXED(1410703867,32,FLEN)
NAN_BOXED(1419844804,32,FLEN)
NAN_BOXED(3221449141,32,FLEN)
NAN_BOXED(1410703867,32,FLEN)
NAN_BOXED(1419844804,32,FLEN)
NAN_BOXED(3221449141,32,FLEN)
NAN_BOXED(1410703867,32,FLEN)
NAN_BOXED(1419844804,32,FLEN)
NAN_BOXED(3221449141,32,FLEN)
NAN_BOXED(1410703867,32,FLEN)
NAN_BOXED(1419844804,32,FLEN)
NAN_BOXED(3221449141,32,FLEN)
NAN_BOXED(1410703867,32,FLEN)
NAN_BOXED(1404685836,32,FLEN)
NAN_BOXED(3233953958,32,FLEN)
NAN_BOXED(1397716017,32,FLEN)
NAN_BOXED(1404685836,32,FLEN)
NAN_BOXED(3233953958,32,FLEN)
NAN_BOXED(1397716017,32,FLEN)
NAN_BOXED(1404685836,32,FLEN)
NAN_BOXED(3233953958,32,FLEN)
NAN_BOXED(1397716017,32,FLEN)
NAN_BOXED(1404685836,32,FLEN)
NAN_BOXED(3233953958,32,FLEN)
NAN_BOXED(1397716017,32,FLEN)
NAN_BOXED(1404685836,32,FLEN)
NAN_BOXED(3233953958,32,FLEN)
NAN_BOXED(1397716017,32,FLEN)
NAN_BOXED(1400736160,32,FLEN)
NAN_BOXED(3239644959,32,FLEN)
NAN_BOXED(1404875228,32,FLEN)
NAN_BOXED(1400736160,32,FLEN)
NAN_BOXED(3239644959,32,FLEN)
NAN_BOXED(1404875228,32,FLEN)
NAN_BOXED(1400736160,32,FLEN)
NAN_BOXED(3239644959,32,FLEN)
NAN_BOXED(1404875228,32,FLEN)
NAN_BOXED(1400736160,32,FLEN)
NAN_BOXED(3239644959,32,FLEN)
NAN_BOXED(1404875228,32,FLEN)
NAN_BOXED(1400736160,32,FLEN)
NAN_BOXED(3239644959,32,FLEN)
NAN_BOXED(1404875228,32,FLEN)
NAN_BOXED(1417184066,32,FLEN)
NAN_BOXED(3226390983,32,FLEN)
NAN_BOXED(1418824329,32,FLEN)
NAN_BOXED(1417184066,32,FLEN)
NAN_BOXED(3226390983,32,FLEN)
NAN_BOXED(1418824329,32,FLEN)
NAN_BOXED(1417184066,32,FLEN)
NAN_BOXED(3226390983,32,FLEN)
NAN_BOXED(1418824329,32,FLEN)
NAN_BOXED(1417184066,32,FLEN)
NAN_BOXED(3226390983,32,FLEN)
NAN_BOXED(1418824329,32,FLEN)
NAN_BOXED(1417184066,32,FLEN)
NAN_BOXED(3226390983,32,FLEN)
NAN_BOXED(1418824329,32,FLEN)
NAN_BOXED(1421131116,32,FLEN)
NAN_BOXED(3221379694,32,FLEN)
NAN_BOXED(1415594063,32,FLEN)
NAN_BOXED(1421131116,32,FLEN)
NAN_BOXED(3221379694,32,FLEN)
NAN_BOXED(1415594063,32,FLEN)
NAN_BOXED(1421131116,32,FLEN)
NAN_BOXED(3221379694,32,FLEN)
NAN_BOXED(1415594063,32,FLEN)
NAN_BOXED(1421131116,32,FLEN)
NAN_BOXED(3221379694,32,FLEN)
NAN_BOXED(1415594063,32,FLEN)
NAN_BOXED(1421131116,32,FLEN)
NAN_BOXED(3221379694,32,FLEN)
NAN_BOXED(1415594063,32,FLEN)
NAN_BOXED(1422166639,32,FLEN)
NAN_BOXED(3215698133,32,FLEN)
NAN_BOXED(1383237086,32,FLEN)
NAN_BOXED(1422166639,32,FLEN)
NAN_BOXED(3215698133,32,FLEN)
NAN_BOXED(1383237086,32,FLEN)
NAN_BOXED(1422166639,32,FLEN)
NAN_BOXED(3215698133,32,FLEN)
NAN_BOXED(1383237086,32,FLEN)
NAN_BOXED(1422166639,32,FLEN)
NAN_BOXED(3215698133,32,FLEN)
NAN_BOXED(1383237086,32,FLEN)
NAN_BOXED(1422166639,32,FLEN)
NAN_BOXED(3215698133,32,FLEN)
NAN_BOXED(1383237086,32,FLEN)
NAN_BOXED(1412584206,32,FLEN)
NAN_BOXED(3226316294,32,FLEN)
NAN_BOXED(1400134572,32,FLEN)
NAN_BOXED(1412584206,32,FLEN)
NAN_BOXED(3226316294,32,FLEN)
NAN_BOXED(1400134572,32,FLEN)
NAN_BOXED(1412584206,32,FLEN)
NAN_BOXED(3226316294,32,FLEN)
NAN_BOXED(1400134572,32,FLEN)
NAN_BOXED(1412584206,32,FLEN)
NAN_BOXED(3226316294,32,FLEN)
NAN_BOXED(1400134572,32,FLEN)
NAN_BOXED(1412584206,32,FLEN)
NAN_BOXED(3226316294,32,FLEN)
NAN_BOXED(1400134572,32,FLEN)
NAN_BOXED(1417950947,32,FLEN)
NAN_BOXED(3225607305,32,FLEN)
NAN_BOXED(1418890745,32,FLEN)
NAN_BOXED(1417950947,32,FLEN)
NAN_BOXED(3225607305,32,FLEN)
NAN_BOXED(1418890745,32,FLEN)
NAN_BOXED(1417950947,32,FLEN)
NAN_BOXED(3225607305,32,FLEN)
NAN_BOXED(1418890745,32,FLEN)
NAN_BOXED(1417950947,32,FLEN)
NAN_BOXED(3225607305,32,FLEN)
NAN_BOXED(1418890745,32,FLEN)
NAN_BOXED(1417950947,32,FLEN)
NAN_BOXED(3225607305,32,FLEN)
NAN_BOXED(1418890745,32,FLEN)
NAN_BOXED(1419071220,32,FLEN)
NAN_BOXED(3223218084,32,FLEN)
NAN_BOXED(1415780716,32,FLEN)
NAN_BOXED(1419071220,32,FLEN)
NAN_BOXED(3223218084,32,FLEN)
NAN_BOXED(1415780716,32,FLEN)
NAN_BOXED(1419071220,32,FLEN)
NAN_BOXED(3223218084,32,FLEN)
NAN_BOXED(1415780716,32,FLEN)
NAN_BOXED(1419071220,32,FLEN)
NAN_BOXED(3223218084,32,FLEN)
NAN_BOXED(1415780716,32,FLEN)
NAN_BOXED(1419071220,32,FLEN)
NAN_BOXED(3223218084,32,FLEN)
NAN_BOXED(1415780716,32,FLEN)
NAN_BOXED(1413250364,32,FLEN)
NAN_BOXED(3227972989,32,FLEN)
NAN_BOXED(1411921167,32,FLEN)
NAN_BOXED(1413250364,32,FLEN)
NAN_BOXED(3227972989,32,FLEN)
NAN_BOXED(1411921167,32,FLEN)
NAN_BOXED(1413250364,32,FLEN)
NAN_BOXED(3227972989,32,FLEN)
NAN_BOXED(1411921167,32,FLEN)
NAN_BOXED(1413250364,32,FLEN)
NAN_BOXED(3227972989,32,FLEN)
NAN_BOXED(1411921167,32,FLEN)
NAN_BOXED(1413250364,32,FLEN)
NAN_BOXED(3227972989,32,FLEN)
NAN_BOXED(1411921167,32,FLEN)
NAN_BOXED(1398378149,32,FLEN)
NAN_BOXED(3241392966,32,FLEN)
NAN_BOXED(1405480739,32,FLEN)
NAN_BOXED(1398378149,32,FLEN)
NAN_BOXED(3241392966,32,FLEN)
NAN_BOXED(1405480739,32,FLEN)
NAN_BOXED(1398378149,32,FLEN)
NAN_BOXED(3241392966,32,FLEN)
NAN_BOXED(1405480739,32,FLEN)
NAN_BOXED(1398378149,32,FLEN)
NAN_BOXED(3241392966,32,FLEN)
NAN_BOXED(1405480739,32,FLEN)
NAN_BOXED(1398378149,32,FLEN)
NAN_BOXED(3241392966,32,FLEN)
NAN_BOXED(1405480739,32,FLEN)
NAN_BOXED(1417222189,32,FLEN)
NAN_BOXED(3226351698,32,FLEN)
NAN_BOXED(1418809475,32,FLEN)
NAN_BOXED(1417222189,32,FLEN)
NAN_BOXED(3226351698,32,FLEN)
NAN_BOXED(1418809475,32,FLEN)
NAN_BOXED(1417222189,32,FLEN)
NAN_BOXED(3226351698,32,FLEN)
NAN_BOXED(1418809475,32,FLEN)
NAN_BOXED(1417222189,32,FLEN)
NAN_BOXED(3226351698,32,FLEN)
NAN_BOXED(1418809475,32,FLEN)
NAN_BOXED(1417222189,32,FLEN)
NAN_BOXED(3226351698,32,FLEN)
NAN_BOXED(1418809475,32,FLEN)
NAN_BOXED(1397607255,32,FLEN)
NAN_BOXED(3247629806,32,FLEN)
NAN_BOXED(1423465272,32,FLEN)
NAN_BOXED(1397607255,32,FLEN)
NAN_BOXED(3247629806,32,FLEN)
NAN_BOXED(1423465272,32,FLEN)
NAN_BOXED(1397607255,32,FLEN)
NAN_BOXED(3247629806,32,FLEN)
NAN_BOXED(1423465272,32,FLEN)
NAN_BOXED(1397607255,32,FLEN)
NAN_BOXED(3247629806,32,FLEN)
NAN_BOXED(1423465272,32,FLEN)
NAN_BOXED(1397607255,32,FLEN)
NAN_BOXED(3247629806,32,FLEN)
NAN_BOXED(1423465272,32,FLEN)
NAN_BOXED(1064887846,32,FLEN)
NAN_BOXED(3211139256,32,FLEN)
NAN_BOXED(1063237327,32,FLEN)
NAN_BOXED(1064887846,32,FLEN)
NAN_BOXED(3211139256,32,FLEN)
NAN_BOXED(1063237327,32,FLEN)
NAN_BOXED(1064887846,32,FLEN)
NAN_BOXED(3211139256,32,FLEN)
NAN_BOXED(1063237327,32,FLEN)
NAN_BOXED(1064887846,32,FLEN)
NAN_BOXED(3211139256,32,FLEN)
NAN_BOXED(1063237327,32,FLEN)
NAN_BOXED(1064887846,32,FLEN)
NAN_BOXED(3211139256,32,FLEN)
NAN_BOXED(1063237327,32,FLEN)
NAN_BOXED(1057836562,32,FLEN)
NAN_BOXED(3214585825,32,FLEN)
NAN_BOXED(1059767319,32,FLEN)
NAN_BOXED(1057836562,32,FLEN)
NAN_BOXED(3214585825,32,FLEN)
NAN_BOXED(1059767319,32,FLEN)
NAN_BOXED(1057836562,32,FLEN)
NAN_BOXED(3214585825,32,FLEN)
NAN_BOXED(1059767319,32,FLEN)
NAN_BOXED(1057836562,32,FLEN)
NAN_BOXED(3214585825,32,FLEN)
NAN_BOXED(1059767319,32,FLEN)
NAN_BOXED(1057836562,32,FLEN)
NAN_BOXED(3214585825,32,FLEN)
NAN_BOXED(1059767319,32,FLEN)
NAN_BOXED(1056290439,32,FLEN)
NAN_BOXED(3206898767,32,FLEN)
NAN_BOXED(1050590956,32,FLEN)
NAN_BOXED(1056290439,32,FLEN)
NAN_BOXED(3206898767,32,FLEN)
NAN_BOXED(1050590956,32,FLEN)
NAN_BOXED(1056290439,32,FLEN)
NAN_BOXED(3206898767,32,FLEN)
NAN_BOXED(1050590956,32,FLEN)
NAN_BOXED(1056290439,32,FLEN)
NAN_BOXED(3206898767,32,FLEN)
NAN_BOXED(1050590956,32,FLEN)
NAN_BOXED(1056290439,32,FLEN)
NAN_BOXED(3206898767,32,FLEN)
NAN_BOXED(1050590956,32,FLEN)
NAN_BOXED(1053787616,32,FLEN)
NAN_BOXED(3204958381,32,FLEN)
NAN_BOXED(1046226061,32,FLEN)
NAN_BOXED(1053787616,32,FLEN)
NAN_BOXED(3204958381,32,FLEN)
NAN_BOXED(1046226061,32,FLEN)
NAN_BOXED(1053787616,32,FLEN)
NAN_BOXED(3204958381,32,FLEN)
NAN_BOXED(1046226061,32,FLEN)
NAN_BOXED(1053787616,32,FLEN)
NAN_BOXED(3204958381,32,FLEN)
NAN_BOXED(1046226061,32,FLEN)
NAN_BOXED(1053787616,32,FLEN)
NAN_BOXED(3204958381,32,FLEN)
NAN_BOXED(1046226061,32,FLEN)
NAN_BOXED(1057466173,32,FLEN)
NAN_BOXED(3206308812,32,FLEN)
NAN_BOXED(1051049366,32,FLEN)
NAN_BOXED(1057466173,32,FLEN)
NAN_BOXED(3206308812,32,FLEN)
NAN_BOXED(1051049366,32,FLEN)
NAN_BOXED(1057466173,32,FLEN)
NAN_BOXED(3206308812,32,FLEN)
NAN_BOXED(1051049366,32,FLEN)
NAN_BOXED(1057466173,32,FLEN)
NAN_BOXED(3206308812,32,FLEN)
NAN_BOXED(1051049366,32,FLEN)
NAN_BOXED(1057466173,32,FLEN)
NAN_BOXED(3206308812,32,FLEN)
NAN_BOXED(1051049366,32,FLEN)
NAN_BOXED(1058341008,32,FLEN)
NAN_BOXED(3217041203,32,FLEN)
NAN_BOXED(1063235195,32,FLEN)
NAN_BOXED(1058341008,32,FLEN)
NAN_BOXED(3217041203,32,FLEN)
NAN_BOXED(1063235195,32,FLEN)
NAN_BOXED(1058341008,32,FLEN)
NAN_BOXED(3217041203,32,FLEN)
NAN_BOXED(1063235195,32,FLEN)
NAN_BOXED(1058341008,32,FLEN)
NAN_BOXED(3217041203,32,FLEN)
NAN_BOXED(1063235195,32,FLEN)
NAN_BOXED(1058341008,32,FLEN)
NAN_BOXED(3217041203,32,FLEN)
NAN_BOXED(1063235195,32,FLEN)
NAN_BOXED(1064108178,32,FLEN)
NAN_BOXED(3210884787,32,FLEN)
NAN_BOXED(1062300964,32,FLEN)
NAN_BOXED(1064108178,32,FLEN)
NAN_BOXED(3210884787,32,FLEN)
NAN_BOXED(1062300964,32,FLEN)
NAN_BOXED(1064108178,32,FLEN)
NAN_BOXED(3210884787,32,FLEN)
NAN_BOXED(1062300964,32,FLEN)
NAN_BOXED(1064108178,32,FLEN)
NAN_BOXED(3210884787,32,FLEN)
NAN_BOXED(1062300964,32,FLEN)
NAN_BOXED(1064108178,32,FLEN)
NAN_BOXED(3210884787,32,FLEN)
NAN_BOXED(1062300964,32,FLEN)
NAN_BOXED(1057906139,32,FLEN)
NAN_BOXED(3215367446,32,FLEN)
NAN_BOXED(1060720752,32,FLEN)
NAN_BOXED(1057906139,32,FLEN)
NAN_BOXED(3215367446,32,FLEN)
NAN_BOXED(1060720752,32,FLEN)
NAN_BOXED(1057906139,32,FLEN)
NAN_BOXED(3215367446,32,FLEN)
NAN_BOXED(1060720752,32,FLEN)
NAN_BOXED(1057906139,32,FLEN)
NAN_BOXED(3215367446,32,FLEN)
NAN_BOXED(1060720752,32,FLEN)
NAN_BOXED(1057906139,32,FLEN)
NAN_BOXED(3215367446,32,FLEN)
NAN_BOXED(1060720752,32,FLEN)
NAN_BOXED(1054928982,32,FLEN)
NAN_BOXED(3208766999,32,FLEN)
NAN_BOXED(1051352926,32,FLEN)
NAN_BOXED(1054928982,32,FLEN)
NAN_BOXED(3208766999,32,FLEN)
NAN_BOXED(1051352926,32,FLEN)
NAN_BOXED(1054928982,32,FLEN)
NAN_BOXED(3208766999,32,FLEN)
NAN_BOXED(1051352926,32,FLEN)
NAN_BOXED(1054928982,32,FLEN)
NAN_BOXED(3208766999,32,FLEN)
NAN_BOXED(1051352926,32,FLEN)
NAN_BOXED(1054928982,32,FLEN)
NAN_BOXED(3208766999,32,FLEN)
NAN_BOXED(1051352926,32,FLEN)
NAN_BOXED(1034249368,32,FLEN)
NAN_BOXED(3240654228,32,FLEN)
NAN_BOXED(1062841333,32,FLEN)
NAN_BOXED(1034249368,32,FLEN)
NAN_BOXED(3240654228,32,FLEN)
NAN_BOXED(1062841333,32,FLEN)
NAN_BOXED(1034249368,32,FLEN)
NAN_BOXED(3240654228,32,FLEN)
NAN_BOXED(1062841333,32,FLEN)
NAN_BOXED(1034249368,32,FLEN)
NAN_BOXED(3240654228,32,FLEN)
NAN_BOXED(1062841333,32,FLEN)
NAN_BOXED(1034249368,32,FLEN)
NAN_BOXED(3240654228,32,FLEN)
NAN_BOXED(1062841333,32,FLEN)
NAN_BOXED(1026391562,32,FLEN)
NAN_BOXED(3250365737,32,FLEN)
NAN_BOXED(1065332989,32,FLEN)
NAN_BOXED(1026391562,32,FLEN)
NAN_BOXED(3250365737,32,FLEN)
NAN_BOXED(1065332989,32,FLEN)
NAN_BOXED(1026391562,32,FLEN)
NAN_BOXED(3250365737,32,FLEN)
NAN_BOXED(1065332989,32,FLEN)
NAN_BOXED(1026391562,32,FLEN)
NAN_BOXED(3250365737,32,FLEN)
NAN_BOXED(1065332989,32,FLEN)
NAN_BOXED(1026391562,32,FLEN)
NAN_BOXED(3250365737,32,FLEN)
NAN_BOXED(1065332989,32,FLEN)
NAN_BOXED(1038263874,32,FLEN)
NAN_BOXED(3188498201,32,FLEN)
NAN_BOXED(1014562704,32,FLEN)
NAN_BOXED(1038263874,32,FLEN)
NAN_BOXED(3188498201,32,FLEN)
NAN_BOXED(1014562704,32,FLEN)
NAN_BOXED(1038263874,32,FLEN)
NAN_BOXED(3188498201,32,FLEN)
NAN_BOXED(1014562704,32,FLEN)
NAN_BOXED(1038263874,32,FLEN)
NAN_BOXED(3188498201,32,FLEN)
NAN_BOXED(1014562704,32,FLEN)
NAN_BOXED(1038263874,32,FLEN)
NAN_BOXED(3188498201,32,FLEN)
NAN_BOXED(1014562704,32,FLEN)
NAN_BOXED(1059227486,32,FLEN)
NAN_BOXED(3198318224,32,FLEN)
NAN_BOXED(1045318112,32,FLEN)
NAN_BOXED(1059227486,32,FLEN)
NAN_BOXED(3198318224,32,FLEN)
NAN_BOXED(1045318112,32,FLEN)
NAN_BOXED(1059227486,32,FLEN)
NAN_BOXED(3198318224,32,FLEN)
NAN_BOXED(1045318112,32,FLEN)
NAN_BOXED(1059227486,32,FLEN)
NAN_BOXED(3198318224,32,FLEN)
NAN_BOXED(1045318112,32,FLEN)
NAN_BOXED(1059227486,32,FLEN)
NAN_BOXED(3198318224,32,FLEN)
NAN_BOXED(1045318112,32,FLEN)
NAN_BOXED(1056790206,32,FLEN)
NAN_BOXED(3210910274,32,FLEN)
NAN_BOXED(1054883644,32,FLEN)
NAN_BOXED(1056790206,32,FLEN)
NAN_BOXED(3210910274,32,FLEN)
NAN_BOXED(1054883644,32,FLEN)
NAN_BOXED(1056790206,32,FLEN)
NAN_BOXED(3210910274,32,FLEN)
NAN_BOXED(1054883644,32,FLEN)
NAN_BOXED(1056790206,32,FLEN)
NAN_BOXED(3210910274,32,FLEN)
NAN_BOXED(1054883644,32,FLEN)
NAN_BOXED(1056790206,32,FLEN)
NAN_BOXED(3210910274,32,FLEN)
NAN_BOXED(1054883644,32,FLEN)
NAN_BOXED(1041372225,32,FLEN)
NAN_BOXED(3201406402,32,FLEN)
NAN_BOXED(1030696956,32,FLEN)
NAN_BOXED(1041372225,32,FLEN)
NAN_BOXED(3201406402,32,FLEN)
NAN_BOXED(1030696956,32,FLEN)
NAN_BOXED(1041372225,32,FLEN)
NAN_BOXED(3201406402,32,FLEN)
NAN_BOXED(1030696956,32,FLEN)
NAN_BOXED(1041372225,32,FLEN)
NAN_BOXED(3201406402,32,FLEN)
NAN_BOXED(1030696956,32,FLEN)
NAN_BOXED(1041372225,32,FLEN)
NAN_BOXED(3201406402,32,FLEN)
NAN_BOXED(1030696956,32,FLEN)
NAN_BOXED(1060315842,32,FLEN)
NAN_BOXED(3213803460,32,FLEN)
NAN_BOXED(1061668592,32,FLEN)
NAN_BOXED(1060315842,32,FLEN)
NAN_BOXED(3213803460,32,FLEN)
NAN_BOXED(1061668592,32,FLEN)
NAN_BOXED(1060315842,32,FLEN)
NAN_BOXED(3213803460,32,FLEN)
NAN_BOXED(1061668592,32,FLEN)
NAN_BOXED(1060315842,32,FLEN)
NAN_BOXED(3213803460,32,FLEN)
NAN_BOXED(1061668592,32,FLEN)
NAN_BOXED(1060315842,32,FLEN)
NAN_BOXED(3213803460,32,FLEN)
NAN_BOXED(1061668592,32,FLEN)
NAN_BOXED(1034647816,32,FLEN)
NAN_BOXED(3231445893,32,FLEN)
NAN_BOXED(1053878987,32,FLEN)
NAN_BOXED(1034647816,32,FLEN)
NAN_BOXED(3231445893,32,FLEN)
NAN_BOXED(1053878987,32,FLEN)
NAN_BOXED(1034647816,32,FLEN)
NAN_BOXED(3231445893,32,FLEN)
NAN_BOXED(1053878987,32,FLEN)
NAN_BOXED(1034647816,32,FLEN)
NAN_BOXED(3231445893,32,FLEN)
NAN_BOXED(1053878987,32,FLEN)
NAN_BOXED(1034647816,32,FLEN)
NAN_BOXED(3231445893,32,FLEN)
NAN_BOXED(1053878987,32,FLEN)
NAN_BOXED(1036593078,32,FLEN)
NAN_BOXED(3237856007,32,FLEN)
NAN_BOXED(1061643646,32,FLEN)
NAN_BOXED(1036593078,32,FLEN)
NAN_BOXED(3237856007,32,FLEN)
NAN_BOXED(1061643646,32,FLEN)
NAN_BOXED(1036593078,32,FLEN)
NAN_BOXED(3237856007,32,FLEN)
NAN_BOXED(1061643646,32,FLEN)
NAN_BOXED(1036593078,32,FLEN)
NAN_BOXED(3237856007,32,FLEN)
NAN_BOXED(1061643646,32,FLEN)
NAN_BOXED(1036593078,32,FLEN)
NAN_BOXED(3237856007,32,FLEN)
NAN_BOXED(1061643646,32,FLEN)
NAN_BOXED(1041921552,32,FLEN)
NAN_BOXED(3232911343,32,FLEN)
NAN_BOXED(1062677669,32,FLEN)
NAN_BOXED(1041921552,32,FLEN)
NAN_BOXED(3232911343,32,FLEN)
NAN_BOXED(1062677669,32,FLEN)
NAN_BOXED(1041921552,32,FLEN)
NAN_BOXED(3232911343,32,FLEN)
NAN_BOXED(1062677669,32,FLEN)
NAN_BOXED(1041921552,32,FLEN)
NAN_BOXED(3232911343,32,FLEN)
NAN_BOXED(1062677669,32,FLEN)
NAN_BOXED(1041921552,32,FLEN)
NAN_BOXED(3232911343,32,FLEN)
NAN_BOXED(1062677669,32,FLEN)
NAN_BOXED(1062891208,32,FLEN)
NAN_BOXED(3210052376,32,FLEN)
NAN_BOXED(1060515336,32,FLEN)
NAN_BOXED(1062891208,32,FLEN)
NAN_BOXED(3210052376,32,FLEN)
NAN_BOXED(1060515336,32,FLEN)
NAN_BOXED(1062891208,32,FLEN)
NAN_BOXED(3210052376,32,FLEN)
NAN_BOXED(1060515336,32,FLEN)
NAN_BOXED(1062891208,32,FLEN)
NAN_BOXED(3210052376,32,FLEN)
NAN_BOXED(1060515336,32,FLEN)
NAN_BOXED(1062891208,32,FLEN)
NAN_BOXED(3210052376,32,FLEN)
NAN_BOXED(1060515336,32,FLEN)
NAN_BOXED(1033133438,32,FLEN)
NAN_BOXED(3238482633,32,FLEN)
NAN_BOXED(1058855568,32,FLEN)
NAN_BOXED(1033133438,32,FLEN)
NAN_BOXED(3238482633,32,FLEN)
NAN_BOXED(1058855568,32,FLEN)
NAN_BOXED(1033133438,32,FLEN)
NAN_BOXED(3238482633,32,FLEN)
NAN_BOXED(1058855568,32,FLEN)
NAN_BOXED(1033133438,32,FLEN)
NAN_BOXED(3238482633,32,FLEN)
NAN_BOXED(1058855568,32,FLEN)
NAN_BOXED(1033133438,32,FLEN)
NAN_BOXED(3238482633,32,FLEN)
NAN_BOXED(1058855568,32,FLEN)
NAN_BOXED(1057966617,32,FLEN)
NAN_BOXED(3215104249,32,FLEN)
NAN_BOXED(1060504839,32,FLEN)
NAN_BOXED(1057966617,32,FLEN)
NAN_BOXED(3215104249,32,FLEN)
NAN_BOXED(1060504839,32,FLEN)
NAN_BOXED(1057966617,32,FLEN)
NAN_BOXED(3215104249,32,FLEN)
NAN_BOXED(1060504839,32,FLEN)
NAN_BOXED(1057966617,32,FLEN)
NAN_BOXED(3215104249,32,FLEN)
NAN_BOXED(1060504839,32,FLEN)
NAN_BOXED(1057966617,32,FLEN)
NAN_BOXED(3215104249,32,FLEN)
NAN_BOXED(1060504839,32,FLEN)
NAN_BOXED(1064099507,32,FLEN)
NAN_BOXED(3206182542,32,FLEN)
NAN_BOXED(1057942442,32,FLEN)
NAN_BOXED(1064099507,32,FLEN)
NAN_BOXED(3206182542,32,FLEN)
NAN_BOXED(1057942442,32,FLEN)
NAN_BOXED(1064099507,32,FLEN)
NAN_BOXED(3206182542,32,FLEN)
NAN_BOXED(1057942442,32,FLEN)
NAN_BOXED(1064099507,32,FLEN)
NAN_BOXED(3206182542,32,FLEN)
NAN_BOXED(1057942442,32,FLEN)
NAN_BOXED(1064099507,32,FLEN)
NAN_BOXED(3206182542,32,FLEN)
NAN_BOXED(1057942442,32,FLEN)
NAN_BOXED(1057017430,32,FLEN)
NAN_BOXED(3215541660,32,FLEN)
NAN_BOXED(1059739259,32,FLEN)
NAN_BOXED(1057017430,32,FLEN)
NAN_BOXED(3215541660,32,FLEN)
NAN_BOXED(1059739259,32,FLEN)
NAN_BOXED(1057017430,32,FLEN)
NAN_BOXED(3215541660,32,FLEN)
NAN_BOXED(1059739259,32,FLEN)
NAN_BOXED(1057017430,32,FLEN)
NAN_BOXED(3215541660,32,FLEN)
NAN_BOXED(1059739259,32,FLEN)
NAN_BOXED(1057017430,32,FLEN)
NAN_BOXED(3215541660,32,FLEN)
NAN_BOXED(1059739259,32,FLEN)
NAN_BOXED(1049221979,32,FLEN)
NAN_BOXED(3223588720,32,FLEN)
NAN_BOXED(1060155821,32,FLEN)
NAN_BOXED(1049221979,32,FLEN)
NAN_BOXED(3223588720,32,FLEN)
NAN_BOXED(1060155821,32,FLEN)
NAN_BOXED(1049221979,32,FLEN)
NAN_BOXED(3223588720,32,FLEN)
NAN_BOXED(1060155821,32,FLEN)
NAN_BOXED(1049221979,32,FLEN)
NAN_BOXED(3223588720,32,FLEN)
NAN_BOXED(1060155821,32,FLEN)
NAN_BOXED(1049221979,32,FLEN)
NAN_BOXED(3223588720,32,FLEN)
NAN_BOXED(1060155821,32,FLEN)
NAN_BOXED(1017604739,32,FLEN)
NAN_BOXED(3230530652,32,FLEN)
NAN_BOXED(1035580776,32,FLEN)
NAN_BOXED(1017604739,32,FLEN)
NAN_BOXED(3230530652,32,FLEN)
NAN_BOXED(1035580776,32,FLEN)
NAN_BOXED(1017604739,32,FLEN)
NAN_BOXED(3230530652,32,FLEN)
NAN_BOXED(1035580776,32,FLEN)
NAN_BOXED(1017604739,32,FLEN)
NAN_BOXED(3230530652,32,FLEN)
NAN_BOXED(1035580776,32,FLEN)
NAN_BOXED(1017604739,32,FLEN)
NAN_BOXED(3230530652,32,FLEN)
NAN_BOXED(1035580776,32,FLEN)
NAN_BOXED(1054319052,32,FLEN)
NAN_BOXED(3221783910,32,FLEN)
NAN_BOXED(1063648419,32,FLEN)
NAN_BOXED(1054319052,32,FLEN)
NAN_BOXED(3221783910,32,FLEN)
NAN_BOXED(1063648419,32,FLEN)
NAN_BOXED(1054319052,32,FLEN)
NAN_BOXED(3221783910,32,FLEN)
NAN_BOXED(1063648419,32,FLEN)
NAN_BOXED(1054319052,32,FLEN)
NAN_BOXED(3221783910,32,FLEN)
NAN_BOXED(1063648419,32,FLEN)
NAN_BOXED(1054319052,32,FLEN)
NAN_BOXED(3221783910,32,FLEN)
NAN_BOXED(1063648419,32,FLEN)
NAN_BOXED(1054960615,32,FLEN)
NAN_BOXED(3210500476,32,FLEN)
NAN_BOXED(1052903302,32,FLEN)
NAN_BOXED(1054960615,32,FLEN)
NAN_BOXED(3210500476,32,FLEN)
NAN_BOXED(1052903302,32,FLEN)
NAN_BOXED(1054960615,32,FLEN)
NAN_BOXED(3210500476,32,FLEN)
NAN_BOXED(1052903302,32,FLEN)
NAN_BOXED(1054960615,32,FLEN)
NAN_BOXED(3210500476,32,FLEN)
NAN_BOXED(1052903302,32,FLEN)
NAN_BOXED(1054960615,32,FLEN)
NAN_BOXED(3210500476,32,FLEN)
NAN_BOXED(1052903302,32,FLEN)
NAN_BOXED(1051929627,32,FLEN)
NAN_BOXED(3218223271,32,FLEN)
NAN_BOXED(1058217019,32,FLEN)
NAN_BOXED(1051929627,32,FLEN)
NAN_BOXED(3218223271,32,FLEN)
NAN_BOXED(1058217019,32,FLEN)
NAN_BOXED(1051929627,32,FLEN)
NAN_BOXED(3218223271,32,FLEN)
NAN_BOXED(1058217019,32,FLEN)
NAN_BOXED(1051929627,32,FLEN)
NAN_BOXED(3218223271,32,FLEN)
NAN_BOXED(1058217019,32,FLEN)
NAN_BOXED(1051929627,32,FLEN)
NAN_BOXED(3218223271,32,FLEN)
NAN_BOXED(1058217019,32,FLEN)
NAN_BOXED(1049414155,32,FLEN)
NAN_BOXED(3158635344,32,FLEN)
NAN_BOXED(995664129,32,FLEN)
NAN_BOXED(1049414155,32,FLEN)
NAN_BOXED(3158635344,32,FLEN)
NAN_BOXED(995664129,32,FLEN)
NAN_BOXED(1049414155,32,FLEN)
NAN_BOXED(3158635344,32,FLEN)
NAN_BOXED(995664129,32,FLEN)
NAN_BOXED(1049414155,32,FLEN)
NAN_BOXED(3158635344,32,FLEN)
NAN_BOXED(995664129,32,FLEN)
NAN_BOXED(1049414155,32,FLEN)
NAN_BOXED(3158635344,32,FLEN)
NAN_BOXED(995664129,32,FLEN)
NAN_BOXED(1050175331,32,FLEN)
NAN_BOXED(3226348940,32,FLEN)
NAN_BOXED(1064664224,32,FLEN)
NAN_BOXED(1050175331,32,FLEN)
NAN_BOXED(3226348940,32,FLEN)
NAN_BOXED(1064664224,32,FLEN)
NAN_BOXED(1050175331,32,FLEN)
NAN_BOXED(3226348940,32,FLEN)
NAN_BOXED(1064664224,32,FLEN)
NAN_BOXED(1050175331,32,FLEN)
NAN_BOXED(3226348940,32,FLEN)
NAN_BOXED(1064664224,32,FLEN)
NAN_BOXED(1050175331,32,FLEN)
NAN_BOXED(3226348940,32,FLEN)
NAN_BOXED(1064664224,32,FLEN)
NAN_BOXED(1052665580,32,FLEN)
NAN_BOXED(3212947439,32,FLEN)
NAN_BOXED(1052830064,32,FLEN)
NAN_BOXED(1052665580,32,FLEN)
NAN_BOXED(3212947439,32,FLEN)
NAN_BOXED(1052830064,32,FLEN)
NAN_BOXED(1052665580,32,FLEN)
NAN_BOXED(3212947439,32,FLEN)
NAN_BOXED(1052830064,32,FLEN)
NAN_BOXED(1052665580,32,FLEN)
NAN_BOXED(3212947439,32,FLEN)
NAN_BOXED(1052830064,32,FLEN)
NAN_BOXED(1052665580,32,FLEN)
NAN_BOXED(3212947439,32,FLEN)
NAN_BOXED(1052830064,32,FLEN)
NAN_BOXED(1055443398,32,FLEN)
NAN_BOXED(3188397785,32,FLEN)
NAN_BOXED(1031599276,32,FLEN)
NAN_BOXED(1055443398,32,FLEN)
NAN_BOXED(3188397785,32,FLEN)
NAN_BOXED(1031599276,32,FLEN)
NAN_BOXED(1055443398,32,FLEN)
NAN_BOXED(3188397785,32,FLEN)
NAN_BOXED(1031599276,32,FLEN)
NAN_BOXED(1055443398,32,FLEN)
NAN_BOXED(3188397785,32,FLEN)
NAN_BOXED(1031599276,32,FLEN)
NAN_BOXED(1055443398,32,FLEN)
NAN_BOXED(3188397785,32,FLEN)
NAN_BOXED(1031599276,32,FLEN)
NAN_BOXED(1064473831,32,FLEN)
NAN_BOXED(3213148896,32,FLEN)
NAN_BOXED(1065065185,32,FLEN)
NAN_BOXED(1064473831,32,FLEN)
NAN_BOXED(3213148896,32,FLEN)
NAN_BOXED(1065065185,32,FLEN)
NAN_BOXED(1064473831,32,FLEN)
NAN_BOXED(3213148896,32,FLEN)
NAN_BOXED(1065065185,32,FLEN)
NAN_BOXED(1064473831,32,FLEN)
NAN_BOXED(3213148896,32,FLEN)
NAN_BOXED(1065065185,32,FLEN)
NAN_BOXED(1064473831,32,FLEN)
NAN_BOXED(3213148896,32,FLEN)
NAN_BOXED(1065065185,32,FLEN)
NAN_BOXED(1049506096,32,FLEN)
NAN_BOXED(3226423216,32,FLEN)
NAN_BOXED(1063668754,32,FLEN)
NAN_BOXED(1049506096,32,FLEN)
NAN_BOXED(3226423216,32,FLEN)
NAN_BOXED(1063668754,32,FLEN)
NAN_BOXED(1049506096,32,FLEN)
NAN_BOXED(3226423216,32,FLEN)
NAN_BOXED(1063668754,32,FLEN)
NAN_BOXED(1049506096,32,FLEN)
NAN_BOXED(3226423216,32,FLEN)
NAN_BOXED(1063668754,32,FLEN)
NAN_BOXED(1049506096,32,FLEN)
NAN_BOXED(3226423216,32,FLEN)
NAN_BOXED(1063668754,32,FLEN)
NAN_BOXED(1063049492,32,FLEN)
NAN_BOXED(3193495083,32,FLEN)
NAN_BOXED(1044059859,32,FLEN)
NAN_BOXED(1063049492,32,FLEN)
NAN_BOXED(3193495083,32,FLEN)
NAN_BOXED(1044059859,32,FLEN)
NAN_BOXED(1063049492,32,FLEN)
NAN_BOXED(3193495083,32,FLEN)
NAN_BOXED(1044059859,32,FLEN)
NAN_BOXED(1063049492,32,FLEN)
NAN_BOXED(3193495083,32,FLEN)
NAN_BOXED(1044059859,32,FLEN)
NAN_BOXED(1063049492,32,FLEN)
NAN_BOXED(3193495083,32,FLEN)
NAN_BOXED(1044059859,32,FLEN)
NAN_BOXED(1059287383,32,FLEN)
NAN_BOXED(3191547604,32,FLEN)
NAN_BOXED(1039071530,32,FLEN)
NAN_BOXED(1059287383,32,FLEN)
NAN_BOXED(3191547604,32,FLEN)
NAN_BOXED(1039071530,32,FLEN)
NAN_BOXED(1059287383,32,FLEN)
NAN_BOXED(3191547604,32,FLEN)
NAN_BOXED(1039071530,32,FLEN)
NAN_BOXED(1059287383,32,FLEN)
NAN_BOXED(3191547604,32,FLEN)
NAN_BOXED(1039071530,32,FLEN)
NAN_BOXED(1059287383,32,FLEN)
NAN_BOXED(3191547604,32,FLEN)
NAN_BOXED(1039071530,32,FLEN)
NAN_BOXED(1045163597,32,FLEN)
NAN_BOXED(3218659196,32,FLEN)
NAN_BOXED(1051507898,32,FLEN)
NAN_BOXED(1045163597,32,FLEN)
NAN_BOXED(3218659196,32,FLEN)
NAN_BOXED(1051507898,32,FLEN)
NAN_BOXED(1045163597,32,FLEN)
NAN_BOXED(3218659196,32,FLEN)
NAN_BOXED(1051507898,32,FLEN)
NAN_BOXED(1045163597,32,FLEN)
NAN_BOXED(3218659196,32,FLEN)
NAN_BOXED(1051507898,32,FLEN)
NAN_BOXED(1045163597,32,FLEN)
NAN_BOXED(3218659196,32,FLEN)
NAN_BOXED(1051507898,32,FLEN)
NAN_BOXED(1059332741,32,FLEN)
NAN_BOXED(3216452422,32,FLEN)
NAN_BOXED(1063968985,32,FLEN)
NAN_BOXED(1059332741,32,FLEN)
NAN_BOXED(3216452422,32,FLEN)
NAN_BOXED(1063968985,32,FLEN)
NAN_BOXED(1059332741,32,FLEN)
NAN_BOXED(3216452422,32,FLEN)
NAN_BOXED(1063968985,32,FLEN)
NAN_BOXED(1059332741,32,FLEN)
NAN_BOXED(3216452422,32,FLEN)
NAN_BOXED(1063968985,32,FLEN)
NAN_BOXED(1059332741,32,FLEN)
NAN_BOXED(3216452422,32,FLEN)
NAN_BOXED(1063968985,32,FLEN)
NAN_BOXED(1019477660,32,FLEN)
NAN_BOXED(3232562452,32,FLEN)
NAN_BOXED(1040478419,32,FLEN)
NAN_BOXED(1019477660,32,FLEN)
NAN_BOXED(3232562452,32,FLEN)
NAN_BOXED(1040478419,32,FLEN)
NAN_BOXED(1019477660,32,FLEN)
NAN_BOXED(3232562452,32,FLEN)
NAN_BOXED(1040478419,32,FLEN)
NAN_BOXED(1019477660,32,FLEN)
NAN_BOXED(3232562452,32,FLEN)
NAN_BOXED(1040478419,32,FLEN)
NAN_BOXED(1019477660,32,FLEN)
NAN_BOXED(3232562452,32,FLEN)
NAN_BOXED(1040478419,32,FLEN)
NAN_BOXED(1034504013,32,FLEN)
NAN_BOXED(3233684105,32,FLEN)
NAN_BOXED(1056663792,32,FLEN)
NAN_BOXED(1034504013,32,FLEN)
NAN_BOXED(3233684105,32,FLEN)
NAN_BOXED(1056663792,32,FLEN)
NAN_BOXED(1034504013,32,FLEN)
NAN_BOXED(3233684105,32,FLEN)
NAN_BOXED(1056663792,32,FLEN)
NAN_BOXED(1034504013,32,FLEN)
NAN_BOXED(3233684105,32,FLEN)
NAN_BOXED(1056663792,32,FLEN)
NAN_BOXED(1034504013,32,FLEN)
NAN_BOXED(3233684105,32,FLEN)
NAN_BOXED(1056663792,32,FLEN)
NAN_BOXED(1060641332,32,FLEN)
NAN_BOXED(3204745339,32,FLEN)
NAN_BOXED(1052680020,32,FLEN)
NAN_BOXED(1060641332,32,FLEN)
NAN_BOXED(3204745339,32,FLEN)
NAN_BOXED(1052680020,32,FLEN)
NAN_BOXED(1060641332,32,FLEN)
NAN_BOXED(3204745339,32,FLEN)
NAN_BOXED(1052680020,32,FLEN)
NAN_BOXED(1060641332,32,FLEN)
NAN_BOXED(3204745339,32,FLEN)
NAN_BOXED(1052680020,32,FLEN)
NAN_BOXED(1060641332,32,FLEN)
NAN_BOXED(3204745339,32,FLEN)
NAN_BOXED(1052680020,32,FLEN)
NAN_BOXED(1061549722,32,FLEN)
NAN_BOXED(3175593830,32,FLEN)
NAN_BOXED(1025142917,32,FLEN)
NAN_BOXED(1061549722,32,FLEN)
NAN_BOXED(3175593830,32,FLEN)
NAN_BOXED(1025142917,32,FLEN)
NAN_BOXED(1061549722,32,FLEN)
NAN_BOXED(3175593830,32,FLEN)
NAN_BOXED(1025142917,32,FLEN)
NAN_BOXED(1063233735,32,FLEN)
NAN_BOXED(3199007941,32,FLEN)
NAN_BOXED(1050092092,32,FLEN)
NAN_BOXED(1063233735,32,FLEN)
NAN_BOXED(3199007941,32,FLEN)
NAN_BOXED(1050092092,32,FLEN)
NAN_BOXED(1063233735,32,FLEN)
NAN_BOXED(3199007941,32,FLEN)
NAN_BOXED(1050092092,32,FLEN)
NAN_BOXED(1063233735,32,FLEN)
NAN_BOXED(3199007941,32,FLEN)
NAN_BOXED(1050092092,32,FLEN)
NAN_BOXED(1063924044,32,FLEN)
NAN_BOXED(3209861180,32,FLEN)
NAN_BOXED(1061201845,32,FLEN)
NAN_BOXED(1062128117,32,FLEN)
NAN_BOXED(3193362599,32,FLEN)
NAN_BOXED(1043172308,32,FLEN)
NAN_BOXED(1062128117,32,FLEN)
NAN_BOXED(3193362599,32,FLEN)
NAN_BOXED(1043172308,32,FLEN)
NAN_BOXED(1063850554,32,FLEN)
NAN_BOXED(3210171898,32,FLEN)
NAN_BOXED(1061424277,32,FLEN)
NAN_BOXED(1063850554,32,FLEN)
NAN_BOXED(3210171898,32,FLEN)
NAN_BOXED(1061424277,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_12:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_13:
    .fill 8*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
