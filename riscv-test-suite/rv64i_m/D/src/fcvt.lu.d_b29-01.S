
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:03:29 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV64D/fcvt.lu.d.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fcvt.lu.d instruction of the RISC-V RV64FD_Zicsr extension for the fcvt.lu.d_b29 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*RV64.*I.*D.*);def TEST_CASE_1=True;",fcvt.lu.d_b29)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x4,test_dataset_0)
RVTEST_SIGBASE(x3,signature_x3_1)

inst_0:// rs1==f28, rd==x29,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b8698 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f28; dest:x29; op1val:0x3fc08574923b8698; valaddr_reg:x4;
val_offset:0*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x29, f28, dyn, 0, 0, x4, 0*FLEN/8, x20, x3, x13,FLREG)

inst_1:// rs1==f4, rd==x26,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b8698 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f4; dest:x26; op1val:0x3fc08574923b8698; valaddr_reg:x4;
val_offset:1*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x26, f4, dyn, 32, 0, x4, 1*FLEN/8, x20, x3, x13,FLREG)

inst_2:// rs1==f13, rd==x11,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b8698 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f13; dest:x11; op1val:0x3fc08574923b8698; valaddr_reg:x4;
val_offset:2*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x11, f13, dyn, 64, 0, x4, 2*FLEN/8, x20, x3, x13,FLREG)

inst_3:// rs1==f31, rd==x18,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b8698 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x18; op1val:0x3fc08574923b8698; valaddr_reg:x4;
val_offset:3*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x18, f31, dyn, 96, 0, x4, 3*FLEN/8, x20, x3, x13,FLREG)

inst_4:// rs1==f23, rd==x31,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b8698 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f23; dest:x31; op1val:0x3fc08574923b8698; valaddr_reg:x4;
val_offset:4*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, f23, dyn, 128, 0, x4, 4*FLEN/8, x20, x3, x13,FLREG)

inst_5:// rs1==f22, rd==x19,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b8699 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f22; dest:x19; op1val:0x3fc08574923b8699; valaddr_reg:x4;
val_offset:5*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x19, f22, dyn, 0, 0, x4, 5*FLEN/8, x20, x3, x13,FLREG)

inst_6:// rs1==f8, rd==x6,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b8699 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f8; dest:x6; op1val:0x3fc08574923b8699; valaddr_reg:x4;
val_offset:6*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x6, f8, dyn, 32, 0, x4, 6*FLEN/8, x20, x3, x13,FLREG)

inst_7:// rs1==f16, rd==x12,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b8699 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f16; dest:x12; op1val:0x3fc08574923b8699; valaddr_reg:x4;
val_offset:7*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x12, f16, dyn, 64, 0, x4, 7*FLEN/8, x20, x3, x13,FLREG)

inst_8:// rs1==f11, rd==x14,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b8699 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f11; dest:x14; op1val:0x3fc08574923b8699; valaddr_reg:x4;
val_offset:8*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x14, f11, dyn, 96, 0, x4, 8*FLEN/8, x20, x3, x13,FLREG)

inst_9:// rs1==f9, rd==x16,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b8699 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f9; dest:x16; op1val:0x3fc08574923b8699; valaddr_reg:x4;
val_offset:9*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x16, f9, dyn, 128, 0, x4, 9*FLEN/8, x20, x3, x13,FLREG)

inst_10:// rs1==f30, rd==x8,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f30; dest:x8; op1val:0x3fc08574923b869a; valaddr_reg:x4;
val_offset:10*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x8, f30, dyn, 0, 0, x4, 10*FLEN/8, x20, x3, x13,FLREG)

inst_11:// rs1==f3, rd==x27,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f3; dest:x27; op1val:0x3fc08574923b869a; valaddr_reg:x4;
val_offset:11*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x27, f3, dyn, 32, 0, x4, 11*FLEN/8, x20, x3, x13,FLREG)

inst_12:// rs1==f10, rd==x25,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f10; dest:x25; op1val:0x3fc08574923b869a; valaddr_reg:x4;
val_offset:12*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x25, f10, dyn, 64, 0, x4, 12*FLEN/8, x20, x3, x13,FLREG)

inst_13:// rs1==f1, rd==x0,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f1; dest:x0; op1val:0x3fc08574923b869a; valaddr_reg:x4;
val_offset:13*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x0, f1, dyn, 96, 0, x4, 13*FLEN/8, x20, x3, x13,FLREG)

inst_14:// rs1==f18, rd==x15,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f18; dest:x15; op1val:0x3fc08574923b869a; valaddr_reg:x4;
val_offset:14*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x15, f18, dyn, 128, 0, x4, 14*FLEN/8, x20, x3, x13,FLREG)

inst_15:// rs1==f25, rd==x17,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f25; dest:x17; op1val:0x3fc08574923b869b; valaddr_reg:x4;
val_offset:15*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x17, f25, dyn, 0, 0, x4, 15*FLEN/8, x20, x3, x13,FLREG)

inst_16:// rs1==f2, rd==x22,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f2; dest:x22; op1val:0x3fc08574923b869b; valaddr_reg:x4;
val_offset:16*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x22, f2, dyn, 32, 0, x4, 16*FLEN/8, x20, x3, x13,FLREG)

inst_17:// rs1==f26, rd==x5,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f26; dest:x5; op1val:0x3fc08574923b869b; valaddr_reg:x4;
val_offset:17*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x5, f26, dyn, 64, 0, x4, 17*FLEN/8, x20, x3, x13,FLREG)

inst_18:// rs1==f29, rd==x1,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f29; dest:x1; op1val:0x3fc08574923b869b; valaddr_reg:x4;
val_offset:18*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x1, f29, dyn, 96, 0, x4, 18*FLEN/8, x20, x3, x13,FLREG)

inst_19:// rs1==f6, rd==x10,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f6; dest:x10; op1val:0x3fc08574923b869b; valaddr_reg:x4;
val_offset:19*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x10, f6, dyn, 128, 0, x4, 19*FLEN/8, x20, x3, x13,FLREG)

inst_20:// rs1==f24, rd==x9,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f24; dest:x9; op1val:0x3fc08574923b869c; valaddr_reg:x4;
val_offset:20*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x9, f24, dyn, 0, 0, x4, 20*FLEN/8, x20, x3, x13,FLREG)

inst_21:// rs1==f20, rd==x30,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f20; dest:x30; op1val:0x3fc08574923b869c; valaddr_reg:x4;
val_offset:21*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x30, f20, dyn, 32, 0, x4, 21*FLEN/8, x20, x3, x13,FLREG)

inst_22:// rs1==f15, rd==x21,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f15; dest:x21; op1val:0x3fc08574923b869c; valaddr_reg:x4;
val_offset:22*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x21, f15, dyn, 64, 0, x4, 22*FLEN/8, x20, x3, x13,FLREG)

inst_23:// rs1==f27, rd==x2,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f27; dest:x2; op1val:0x3fc08574923b869c; valaddr_reg:x4;
val_offset:23*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x2, f27, dyn, 96, 0, x4, 23*FLEN/8, x20, x3, x13,FLREG)

inst_24:// rs1==f5, rd==x7,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f5; dest:x7; op1val:0x3fc08574923b869c; valaddr_reg:x4;
val_offset:24*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x7, f5, dyn, 128, 0, x4, 24*FLEN/8, x20, x3, x13,FLREG)
RVTEST_VALBASEUPD(x5,test_dataset_1)

inst_25:// rs1==f0, rd==x20,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f0; dest:x20; op1val:0x3fc08574923b869d; valaddr_reg:x5;
val_offset:0*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x20, f0, dyn, 0, 0, x5, 0*FLEN/8, x6, x3, x13,FLREG)

inst_26:// rs1==f21, rd==x4,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f21; dest:x4; op1val:0x3fc08574923b869d; valaddr_reg:x5;
val_offset:1*FLEN/8; rmval:dyn; correctval:0; testreg:x13;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x4, f21, dyn, 32, 0, x5, 1*FLEN/8, x6, x3, x13,FLREG)

inst_27:// rs1==f12, rd==x28,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f12; dest:x28; op1val:0x3fc08574923b869d; valaddr_reg:x5;
val_offset:2*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x28, f12, dyn, 64, 0, x5, 2*FLEN/8, x6, x3, x2,FLREG)
RVTEST_SIGBASE(x1,signature_x1_0)

inst_28:// rs1==f14, rd==x13,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f14; dest:x13; op1val:0x3fc08574923b869d; valaddr_reg:x5;
val_offset:3*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x13, f14, dyn, 96, 0, x5, 3*FLEN/8, x6, x1, x2,FLREG)

inst_29:// rs1==f19, rd==x24,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f19; dest:x24; op1val:0x3fc08574923b869d; valaddr_reg:x5;
val_offset:4*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x24, f19, dyn, 128, 0, x5, 4*FLEN/8, x6, x1, x2,FLREG)

inst_30:// rs1==f17, rd==x23,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f17; dest:x23; op1val:0x3fc08574923b869e; valaddr_reg:x5;
val_offset:5*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x23, f17, dyn, 0, 0, x5, 5*FLEN/8, x6, x1, x2,FLREG)

inst_31:// rs1==f7, rd==x3,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f7; dest:x3; op1val:0x3fc08574923b869e; valaddr_reg:x5;
val_offset:6*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x3, f7, dyn, 32, 0, x5, 6*FLEN/8, x6, x1, x2,FLREG)

inst_32:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0x3fc08574923b869e; valaddr_reg:x5;
val_offset:7*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 64, 0, x5, 7*FLEN/8, x6, x1, x2,FLREG)

inst_33:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0x3fc08574923b869e; valaddr_reg:x5;
val_offset:8*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 96, 0, x5, 8*FLEN/8, x6, x1, x2,FLREG)

inst_34:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0x3fc08574923b869e; valaddr_reg:x5;
val_offset:9*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 128, 0, x5, 9*FLEN/8, x6, x1, x2,FLREG)

inst_35:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0x3fc08574923b869f; valaddr_reg:x5;
val_offset:10*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 0, 0, x5, 10*FLEN/8, x6, x1, x2,FLREG)

inst_36:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0x3fc08574923b869f; valaddr_reg:x5;
val_offset:11*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 32, 0, x5, 11*FLEN/8, x6, x1, x2,FLREG)

inst_37:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0x3fc08574923b869f; valaddr_reg:x5;
val_offset:12*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 64, 0, x5, 12*FLEN/8, x6, x1, x2,FLREG)

inst_38:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0x3fc08574923b869f; valaddr_reg:x5;
val_offset:13*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 96, 0, x5, 13*FLEN/8, x6, x1, x2,FLREG)

inst_39:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0x3fc08574923b869f; valaddr_reg:x5;
val_offset:14*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 128, 0, x5, 14*FLEN/8, x6, x1, x2,FLREG)

inst_40:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b8698 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b8698; valaddr_reg:x5;
val_offset:15*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 0, 0, x5, 15*FLEN/8, x6, x1, x2,FLREG)

inst_41:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b8698 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b8698; valaddr_reg:x5;
val_offset:16*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 32, 0, x5, 16*FLEN/8, x6, x1, x2,FLREG)

inst_42:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b8698 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b8698; valaddr_reg:x5;
val_offset:17*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 64, 0, x5, 17*FLEN/8, x6, x1, x2,FLREG)

inst_43:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b8698 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b8698; valaddr_reg:x5;
val_offset:18*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 96, 0, x5, 18*FLEN/8, x6, x1, x2,FLREG)

inst_44:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b8698 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b8698; valaddr_reg:x5;
val_offset:19*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 128, 0, x5, 19*FLEN/8, x6, x1, x2,FLREG)

inst_45:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b8699 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b8699; valaddr_reg:x5;
val_offset:20*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 0, 0, x5, 20*FLEN/8, x6, x1, x2,FLREG)

inst_46:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b8699 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b8699; valaddr_reg:x5;
val_offset:21*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 32, 0, x5, 21*FLEN/8, x6, x1, x2,FLREG)

inst_47:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b8699 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b8699; valaddr_reg:x5;
val_offset:22*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 64, 0, x5, 22*FLEN/8, x6, x1, x2,FLREG)

inst_48:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b8699 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b8699; valaddr_reg:x5;
val_offset:23*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 96, 0, x5, 23*FLEN/8, x6, x1, x2,FLREG)

inst_49:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b8699 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b8699; valaddr_reg:x5;
val_offset:24*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 128, 0, x5, 24*FLEN/8, x6, x1, x2,FLREG)

inst_50:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869a; valaddr_reg:x5;
val_offset:25*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 0, 0, x5, 25*FLEN/8, x6, x1, x2,FLREG)

inst_51:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869a; valaddr_reg:x5;
val_offset:26*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 32, 0, x5, 26*FLEN/8, x6, x1, x2,FLREG)

inst_52:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869a; valaddr_reg:x5;
val_offset:27*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 64, 0, x5, 27*FLEN/8, x6, x1, x2,FLREG)

inst_53:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869a; valaddr_reg:x5;
val_offset:28*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 96, 0, x5, 28*FLEN/8, x6, x1, x2,FLREG)

inst_54:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869a; valaddr_reg:x5;
val_offset:29*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 128, 0, x5, 29*FLEN/8, x6, x1, x2,FLREG)

inst_55:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869b; valaddr_reg:x5;
val_offset:30*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 0, 0, x5, 30*FLEN/8, x6, x1, x2,FLREG)

inst_56:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869b; valaddr_reg:x5;
val_offset:31*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 32, 0, x5, 31*FLEN/8, x6, x1, x2,FLREG)

inst_57:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869b; valaddr_reg:x5;
val_offset:32*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 64, 0, x5, 32*FLEN/8, x6, x1, x2,FLREG)

inst_58:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869b; valaddr_reg:x5;
val_offset:33*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 96, 0, x5, 33*FLEN/8, x6, x1, x2,FLREG)

inst_59:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869b; valaddr_reg:x5;
val_offset:34*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 128, 0, x5, 34*FLEN/8, x6, x1, x2,FLREG)

inst_60:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869c; valaddr_reg:x5;
val_offset:35*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 0, 0, x5, 35*FLEN/8, x6, x1, x2,FLREG)

inst_61:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869c; valaddr_reg:x5;
val_offset:36*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 32, 0, x5, 36*FLEN/8, x6, x1, x2,FLREG)

inst_62:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869c; valaddr_reg:x5;
val_offset:37*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 64, 0, x5, 37*FLEN/8, x6, x1, x2,FLREG)

inst_63:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869c; valaddr_reg:x5;
val_offset:38*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 96, 0, x5, 38*FLEN/8, x6, x1, x2,FLREG)

inst_64:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869c; valaddr_reg:x5;
val_offset:39*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 128, 0, x5, 39*FLEN/8, x6, x1, x2,FLREG)

inst_65:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869d; valaddr_reg:x5;
val_offset:40*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 0, 0, x5, 40*FLEN/8, x6, x1, x2,FLREG)

inst_66:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869d; valaddr_reg:x5;
val_offset:41*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 32, 0, x5, 41*FLEN/8, x6, x1, x2,FLREG)

inst_67:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869d; valaddr_reg:x5;
val_offset:42*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 64, 0, x5, 42*FLEN/8, x6, x1, x2,FLREG)

inst_68:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869d; valaddr_reg:x5;
val_offset:43*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 96, 0, x5, 43*FLEN/8, x6, x1, x2,FLREG)

inst_69:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869d; valaddr_reg:x5;
val_offset:44*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 128, 0, x5, 44*FLEN/8, x6, x1, x2,FLREG)

inst_70:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869e; valaddr_reg:x5;
val_offset:45*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 0, 0, x5, 45*FLEN/8, x6, x1, x2,FLREG)

inst_71:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869e; valaddr_reg:x5;
val_offset:46*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 32, 0, x5, 46*FLEN/8, x6, x1, x2,FLREG)

inst_72:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869e; valaddr_reg:x5;
val_offset:47*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 64, 0, x5, 47*FLEN/8, x6, x1, x2,FLREG)

inst_73:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869e; valaddr_reg:x5;
val_offset:48*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 96, 0, x5, 48*FLEN/8, x6, x1, x2,FLREG)

inst_74:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869e; valaddr_reg:x5;
val_offset:49*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 128, 0, x5, 49*FLEN/8, x6, x1, x2,FLREG)

inst_75:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869f; valaddr_reg:x5;
val_offset:50*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 0, 0, x5, 50*FLEN/8, x6, x1, x2,FLREG)

inst_76:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869f; valaddr_reg:x5;
val_offset:51*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 32, 0, x5, 51*FLEN/8, x6, x1, x2,FLREG)

inst_77:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869f; valaddr_reg:x5;
val_offset:52*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 64, 0, x5, 52*FLEN/8, x6, x1, x2,FLREG)

inst_78:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869f; valaddr_reg:x5;
val_offset:53*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 96, 0, x5, 53*FLEN/8, x6, x1, x2,FLREG)

inst_79:// fs1 == 1 and fe1 == 0x3fc and fm1 == 0x08574923b869f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0xbfc08574923b869f; valaddr_reg:x5;
val_offset:54*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 128, 0, x5, 54*FLEN/8, x6, x1, x2,FLREG)

inst_80:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08574923b869a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:f31; dest:x31; op1val:0x3fc08574923b869a; valaddr_reg:x5;
val_offset:55*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, f31, dyn, 96, 0, x5, 55*FLEN/8, x6, x1, x2,FLREG)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(4593818355633981080,64,FLEN)
NAN_BOXED(4593818355633981080,64,FLEN)
NAN_BOXED(4593818355633981080,64,FLEN)
NAN_BOXED(4593818355633981080,64,FLEN)
NAN_BOXED(4593818355633981080,64,FLEN)
NAN_BOXED(4593818355633981081,64,FLEN)
NAN_BOXED(4593818355633981081,64,FLEN)
NAN_BOXED(4593818355633981081,64,FLEN)
NAN_BOXED(4593818355633981081,64,FLEN)
NAN_BOXED(4593818355633981081,64,FLEN)
NAN_BOXED(4593818355633981082,64,FLEN)
NAN_BOXED(4593818355633981082,64,FLEN)
NAN_BOXED(4593818355633981082,64,FLEN)
NAN_BOXED(4593818355633981082,64,FLEN)
NAN_BOXED(4593818355633981082,64,FLEN)
NAN_BOXED(4593818355633981083,64,FLEN)
NAN_BOXED(4593818355633981083,64,FLEN)
NAN_BOXED(4593818355633981083,64,FLEN)
NAN_BOXED(4593818355633981083,64,FLEN)
NAN_BOXED(4593818355633981083,64,FLEN)
NAN_BOXED(4593818355633981084,64,FLEN)
NAN_BOXED(4593818355633981084,64,FLEN)
NAN_BOXED(4593818355633981084,64,FLEN)
NAN_BOXED(4593818355633981084,64,FLEN)
NAN_BOXED(4593818355633981084,64,FLEN)
test_dataset_1:
NAN_BOXED(4593818355633981085,64,FLEN)
NAN_BOXED(4593818355633981085,64,FLEN)
NAN_BOXED(4593818355633981085,64,FLEN)
NAN_BOXED(4593818355633981085,64,FLEN)
NAN_BOXED(4593818355633981085,64,FLEN)
NAN_BOXED(4593818355633981086,64,FLEN)
NAN_BOXED(4593818355633981086,64,FLEN)
NAN_BOXED(4593818355633981086,64,FLEN)
NAN_BOXED(4593818355633981086,64,FLEN)
NAN_BOXED(4593818355633981086,64,FLEN)
NAN_BOXED(4593818355633981087,64,FLEN)
NAN_BOXED(4593818355633981087,64,FLEN)
NAN_BOXED(4593818355633981087,64,FLEN)
NAN_BOXED(4593818355633981087,64,FLEN)
NAN_BOXED(4593818355633981087,64,FLEN)
NAN_BOXED(13817190392488756888,64,FLEN)
NAN_BOXED(13817190392488756888,64,FLEN)
NAN_BOXED(13817190392488756888,64,FLEN)
NAN_BOXED(13817190392488756888,64,FLEN)
NAN_BOXED(13817190392488756888,64,FLEN)
NAN_BOXED(13817190392488756889,64,FLEN)
NAN_BOXED(13817190392488756889,64,FLEN)
NAN_BOXED(13817190392488756889,64,FLEN)
NAN_BOXED(13817190392488756889,64,FLEN)
NAN_BOXED(13817190392488756889,64,FLEN)
NAN_BOXED(13817190392488756890,64,FLEN)
NAN_BOXED(13817190392488756890,64,FLEN)
NAN_BOXED(13817190392488756890,64,FLEN)
NAN_BOXED(13817190392488756890,64,FLEN)
NAN_BOXED(13817190392488756890,64,FLEN)
NAN_BOXED(13817190392488756891,64,FLEN)
NAN_BOXED(13817190392488756891,64,FLEN)
NAN_BOXED(13817190392488756891,64,FLEN)
NAN_BOXED(13817190392488756891,64,FLEN)
NAN_BOXED(13817190392488756891,64,FLEN)
NAN_BOXED(13817190392488756892,64,FLEN)
NAN_BOXED(13817190392488756892,64,FLEN)
NAN_BOXED(13817190392488756892,64,FLEN)
NAN_BOXED(13817190392488756892,64,FLEN)
NAN_BOXED(13817190392488756892,64,FLEN)
NAN_BOXED(13817190392488756893,64,FLEN)
NAN_BOXED(13817190392488756893,64,FLEN)
NAN_BOXED(13817190392488756893,64,FLEN)
NAN_BOXED(13817190392488756893,64,FLEN)
NAN_BOXED(13817190392488756893,64,FLEN)
NAN_BOXED(13817190392488756894,64,FLEN)
NAN_BOXED(13817190392488756894,64,FLEN)
NAN_BOXED(13817190392488756894,64,FLEN)
NAN_BOXED(13817190392488756894,64,FLEN)
NAN_BOXED(13817190392488756894,64,FLEN)
NAN_BOXED(13817190392488756895,64,FLEN)
NAN_BOXED(13817190392488756895,64,FLEN)
NAN_BOXED(13817190392488756895,64,FLEN)
NAN_BOXED(13817190392488756895,64,FLEN)
NAN_BOXED(13817190392488756895,64,FLEN)
NAN_BOXED(4593818355633981082,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x3_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x3_1:
    .fill 56*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_0:
    .fill 106*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
