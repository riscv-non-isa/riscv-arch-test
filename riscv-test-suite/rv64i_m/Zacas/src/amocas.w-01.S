
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Fri Jul 28 01:07:22 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/ved/rvi-code-forks/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/ved/rvi-code-forks/riscv-ctg/sample_cgfs/rv64zacas.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the amocas.w instruction of the RISC-V RV64Zacas extension for the amocas.w covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IZacas")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*Zacas.*);def TEST_CASE_1=True;",amocas.w)

RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x31, rs2==x29, rd==x30, rs1_val == (-2**(xlen-1)), rs1_val == -9223372036854775808
// opcode: amocas.w ; dest:x30; addr:x31; src:x29; swap_val:-0x1; swreg:x1; 0*XLEN/8
TEST_CAS_OP(amocas.w, x30, x31, x29, -0x1, x1, 0*XLEN/8);

inst_1:
// rs1==x30, rs2==x31, rd==x29, rs1_val == (2**(xlen-1)-1), rs1_val == 9223372036854775807
// opcode: amocas.w ; dest:x29; addr:x30; src:x31; swap_val:-0x1; swreg:x1; 1*XLEN/8
TEST_CAS_OP(amocas.w, x29, x30, x31, -0x1, x1, 1*XLEN/8);

inst_2:
// rs1==x29, rs2==x30, rd==x31, rs1_val == 0, 
// opcode: amocas.w ; dest:x31; addr:x29; src:x30; swap_val:-0x1; swreg:x1; 2*XLEN/8
TEST_CAS_OP(amocas.w, x31, x29, x30, -0x1, x1, 2*XLEN/8);

inst_3:
// rs1==x28, rs2==x26, rd==x27, rs1_val == 1, 
// opcode: amocas.w ; dest:x27; addr:x28; src:x26; swap_val:-0x1; swreg:x1; 3*XLEN/8
TEST_CAS_OP(amocas.w, x27, x28, x26, -0x1, x1, 3*XLEN/8);

inst_4:
// rs1==x27, rs2==x28, rd==x26, rs2_val == (-2**(xlen-1)), rs2_val == -9223372036854775808
// opcode: amocas.w ; dest:x26; addr:x27; src:x28; swap_val:-0x8000000000000000; swreg:x1; 4*XLEN/8
TEST_CAS_OP(amocas.w, x26, x27, x28, -0x8000000000000000, x1, 4*XLEN/8);

inst_5:
// rs1==x26, rs2==x27, rd==x28, rs2_val == (2**(xlen-1)-1), rs2_val == 9223372036854775807
// opcode: amocas.w ; dest:x28; addr:x26; src:x27; swap_val:0x7fffffffffffffff; swreg:x1; 5*XLEN/8
TEST_CAS_OP(amocas.w, x28, x26, x27, 0x7fffffffffffffff, x1, 5*XLEN/8);

inst_6:
// rs1==x25, rs2==x23, rd==x24, rs2_val == 0, 
// opcode: amocas.w ; dest:x24; addr:x25; src:x23; swap_val:0x0; swreg:x1; 6*XLEN/8
TEST_CAS_OP(amocas.w, x24, x25, x23, 0x0, x1, 6*XLEN/8);

inst_7:
// rs1==x24, rs2==x25, rd==x23, rs2_val == -2, 
// opcode: amocas.w ; dest:x23; addr:x24; src:x25; swap_val:-0x2; swreg:x1; 7*XLEN/8
TEST_CAS_OP(amocas.w, x23, x24, x25, -0x2, x1, 7*XLEN/8);

inst_8:
// rs1==x23, rs2==x24, rd==x25, rs2_val == -3, 
// opcode: amocas.w ; dest:x25; addr:x23; src:x24; swap_val:-0x3; swreg:x1; 8*XLEN/8
TEST_CAS_OP(amocas.w, x25, x23, x24, -0x3, x1, 8*XLEN/8);

inst_9:
// rs1==x22, rs2==x20, rd==x21, rs2_val == -5, 
// opcode: amocas.w ; dest:x21; addr:x22; src:x20; swap_val:-0x5; swreg:x1; 9*XLEN/8
TEST_CAS_OP(amocas.w, x21, x22, x20, -0x5, x1, 9*XLEN/8);

inst_10:
// rs1==x21, rs2==x22, rd==x20, rs2_val == -9, 
// opcode: amocas.w ; dest:x20; addr:x21; src:x22; swap_val:-0x9; swreg:x1; 10*XLEN/8
TEST_CAS_OP(amocas.w, x20, x21, x22, -0x9, x1, 10*XLEN/8);

inst_11:
// rs1==x20, rs2==x21, rd==x22, rs2_val == -17, 
// opcode: amocas.w ; dest:x22; addr:x20; src:x21; swap_val:-0x11; swreg:x1; 11*XLEN/8
TEST_CAS_OP(amocas.w, x22, x20, x21, -0x11, x1, 11*XLEN/8);

inst_12:
// rs1==x19, rs2==x17, rd==x18, rs2_val == -33, 
// opcode: amocas.w ; dest:x18; addr:x19; src:x17; swap_val:-0x21; swreg:x1; 12*XLEN/8
TEST_CAS_OP(amocas.w, x18, x19, x17, -0x21, x1, 12*XLEN/8);

inst_13:
// rs1==x18, rs2==x19, rd==x17, rs2_val == -65, 
// opcode: amocas.w ; dest:x17; addr:x18; src:x19; swap_val:-0x41; swreg:x1; 13*XLEN/8
TEST_CAS_OP(amocas.w, x17, x18, x19, -0x41, x1, 13*XLEN/8);

inst_14:
// rs1==x17, rs2==x18, rd==x19, rs2_val == -129, 
// opcode: amocas.w ; dest:x19; addr:x17; src:x18; swap_val:-0x81; swreg:x1; 14*XLEN/8
TEST_CAS_OP(amocas.w, x19, x17, x18, -0x81, x1, 14*XLEN/8);

inst_15:
// rs1==x16, rs2==x14, rd==x15, rs2_val == -257, 
// opcode: amocas.w ; dest:x15; addr:x16; src:x14; swap_val:-0x101; swreg:x1; 15*XLEN/8
TEST_CAS_OP(amocas.w, x15, x16, x14, -0x101, x1, 15*XLEN/8);

inst_16:
// rs1==x15, rs2==x16, rd==x14, rs2_val == -513, 
// opcode: amocas.w ; dest:x14; addr:x15; src:x16; swap_val:-0x201; swreg:x1; 16*XLEN/8
TEST_CAS_OP(amocas.w, x14, x15, x16, -0x201, x1, 16*XLEN/8);

inst_17:
// rs1==x14, rs2==x15, rd==x16, rs2_val == -1025, 
// opcode: amocas.w ; dest:x16; addr:x14; src:x15; swap_val:-0x401; swreg:x1; 17*XLEN/8
TEST_CAS_OP(amocas.w, x16, x14, x15, -0x401, x1, 17*XLEN/8);

inst_18:
// rs1==x13, rs2==x11, rd==x12, rs2_val == -2049, 
// opcode: amocas.w ; dest:x12; addr:x13; src:x11; swap_val:-0x801; swreg:x1; 18*XLEN/8
TEST_CAS_OP(amocas.w, x12, x13, x11, -0x801, x1, 18*XLEN/8);

inst_19:
// rs1==x12, rs2==x13, rd==x11, rs2_val == -4097, 
// opcode: amocas.w ; dest:x11; addr:x12; src:x13; swap_val:-0x1001; swreg:x1; 19*XLEN/8
TEST_CAS_OP(amocas.w, x11, x12, x13, -0x1001, x1, 19*XLEN/8);

inst_20:
// rs1==x11, rs2==x12, rd==x13, rs2_val == -8193, 
// opcode: amocas.w ; dest:x13; addr:x11; src:x12; swap_val:-0x2001; swreg:x1; 20*XLEN/8
TEST_CAS_OP(amocas.w, x13, x11, x12, -0x2001, x1, 20*XLEN/8);

inst_21:
// rs1==x10, rs2==x8, rd==x9, rs2_val == -16385, 
// opcode: amocas.w ; dest:x9; addr:x10; src:x8; swap_val:-0x4001; swreg:x1; 21*XLEN/8
TEST_CAS_OP(amocas.w, x9, x10, x8, -0x4001, x1, 21*XLEN/8);

inst_22:
// rs1==x9, rs2==x10, rd==x8, rs2_val == -32769, 
// opcode: amocas.w ; dest:x8; addr:x9; src:x10; swap_val:-0x8001; swreg:x1; 22*XLEN/8
TEST_CAS_OP(amocas.w, x8, x9, x10, -0x8001, x1, 22*XLEN/8);

inst_23:
// rs1==x8, rs2==x9, rd==x10, rs2_val == -65537, 
// opcode: amocas.w ; dest:x10; addr:x8; src:x9; swap_val:-0x10001; swreg:x1; 23*XLEN/8
TEST_CAS_OP(amocas.w, x10, x8, x9, -0x10001, x1, 23*XLEN/8);

inst_24:
// rs1==x7, rs2==x5, rd==x6, rs2_val == -131073, 
// opcode: amocas.w ; dest:x6; addr:x7; src:x5; swap_val:-0x20001; swreg:x1; 24*XLEN/8
TEST_CAS_OP(amocas.w, x6, x7, x5, -0x20001, x1, 24*XLEN/8);
RVTEST_SIGBASE(x8,signature_x8_0)

inst_25:
// rs1==x6, rs2==x7, rd==x5, rs2_val == -262145, 
// opcode: amocas.w ; dest:x5; addr:x6; src:x7; swap_val:-0x40001; swreg:x8; 0*XLEN/8
TEST_CAS_OP(amocas.w, x5, x6, x7, -0x40001, x8, 0*XLEN/8);

inst_26:
// rs1==x5, rs2==x6, rd==x7, rs2_val == -524289, 
// opcode: amocas.w ; dest:x7; addr:x5; src:x6; swap_val:-0x80001; swreg:x8; 1*XLEN/8
TEST_CAS_OP(amocas.w, x7, x5, x6, -0x80001, x8, 1*XLEN/8);

inst_27:
// rs1==x4, rs2==x2, rd==x3, rs2_val == -1048577, 
// opcode: amocas.w ; dest:x3; addr:x4; src:x2; swap_val:-0x100001; swreg:x8; 2*XLEN/8
TEST_CAS_OP(amocas.w, x3, x4, x2, -0x100001, x8, 2*XLEN/8);

inst_28:
// rs1==x3, rs2==x4, rd==x2, rs2_val == -2097153, 
// opcode: amocas.w ; dest:x2; addr:x3; src:x4; swap_val:-0x200001; swreg:x8; 3*XLEN/8
TEST_CAS_OP(amocas.w, x2, x3, x4, -0x200001, x8, 3*XLEN/8);

inst_29:
// rs1==x2, rs2==x3, rd==x4, rs2_val == -4194305, 
// opcode: amocas.w ; dest:x4; addr:x2; src:x3; swap_val:-0x400001; swreg:x8; 4*XLEN/8
TEST_CAS_OP(amocas.w, x4, x2, x3, -0x400001, x8, 4*XLEN/8);

inst_30:
// rs1==x1, rs2_val == -8388609, 
// opcode: amocas.w ; dest:x31; addr:x1; src:x30; swap_val:-0x800001; swreg:x8; 5*XLEN/8
TEST_CAS_OP(amocas.w, x31, x1, x30, -0x800001, x8, 5*XLEN/8);

inst_31:
// rs2==x1, rs2_val == -16777217, 
// opcode: amocas.w ; dest:x30; addr:x31; src:x1; swap_val:-0x1000001; swreg:x8; 6*XLEN/8
TEST_CAS_OP(amocas.w, x30, x31, x1, -0x1000001, x8, 6*XLEN/8);

inst_32:
// rs2==x0, rs2_val == -33554433, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x0; swap_val:0x0; swreg:x8; 7*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x0, 0x0, x8, 7*XLEN/8);

inst_33:
// rd==x1, rs2_val == -67108865, 
// opcode: amocas.w ; dest:x1; addr:x31; src:x30; swap_val:-0x4000001; swreg:x8; 8*XLEN/8
TEST_CAS_OP(amocas.w, x1, x31, x30, -0x4000001, x8, 8*XLEN/8);

inst_34:
// rd==x0, rs2_val == -134217729, 
// opcode: amocas.w ; dest:x0; addr:x31; src:x30; swap_val:-0x8000001; swreg:x8; 9*XLEN/8
TEST_CAS_OP(amocas.w, x0, x31, x30, -0x8000001, x8, 9*XLEN/8);

inst_35:
// rs2_val == -268435457, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x10000001; swreg:x8; 10*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x10000001, x8, 10*XLEN/8);

inst_36:
// rs2_val == -536870913, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x20000001; swreg:x8; 11*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x20000001, x8, 11*XLEN/8);

inst_37:
// rs2_val == -1073741825, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x40000001; swreg:x8; 12*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x40000001, x8, 12*XLEN/8);

inst_38:
// rs2_val == -2147483649, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x80000001; swreg:x8; 13*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x80000001, x8, 13*XLEN/8);

inst_39:
// rs2_val == -4294967297, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x100000001; swreg:x8; 14*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x100000001, x8, 14*XLEN/8);

inst_40:
// rs2_val == -8589934593, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x200000001; swreg:x8; 15*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x200000001, x8, 15*XLEN/8);

inst_41:
// rs2_val == -17179869185, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x400000001; swreg:x8; 16*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x400000001, x8, 16*XLEN/8);

inst_42:
// rs2_val == -34359738369, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x800000001; swreg:x8; 17*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x800000001, x8, 17*XLEN/8);

inst_43:
// rs2_val == -68719476737, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1000000001; swreg:x8; 18*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1000000001, x8, 18*XLEN/8);

inst_44:
// rs2_val == -137438953473, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x2000000001; swreg:x8; 19*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x2000000001, x8, 19*XLEN/8);

inst_45:
// rs2_val == -274877906945, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x4000000001; swreg:x8; 20*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x4000000001, x8, 20*XLEN/8);

inst_46:
// rs2_val == -549755813889, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x8000000001; swreg:x8; 21*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x8000000001, x8, 21*XLEN/8);

inst_47:
// rs2_val == -1099511627777, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x10000000001; swreg:x8; 22*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x10000000001, x8, 22*XLEN/8);

inst_48:
// rs2_val == -2199023255553, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x20000000001; swreg:x8; 23*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x20000000001, x8, 23*XLEN/8);

inst_49:
// rs2_val == -4398046511105, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x40000000001; swreg:x8; 24*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x40000000001, x8, 24*XLEN/8);

inst_50:
// rs2_val == -8796093022209, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x80000000001; swreg:x8; 25*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x80000000001, x8, 25*XLEN/8);

inst_51:
// rs2_val == -17592186044417, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x100000000001; swreg:x8; 26*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x100000000001, x8, 26*XLEN/8);

inst_52:
// rs2_val == -35184372088833, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x200000000001; swreg:x8; 27*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x200000000001, x8, 27*XLEN/8);

inst_53:
// rs2_val == -70368744177665, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x400000000001; swreg:x8; 28*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x400000000001, x8, 28*XLEN/8);

inst_54:
// rs2_val == -140737488355329, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x800000000001; swreg:x8; 29*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x800000000001, x8, 29*XLEN/8);

inst_55:
// rs2_val == -281474976710657, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1000000000001; swreg:x8; 30*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1000000000001, x8, 30*XLEN/8);

inst_56:
// rs2_val == -562949953421313, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x2000000000001; swreg:x8; 31*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x2000000000001, x8, 31*XLEN/8);

inst_57:
// rs2_val == -1125899906842625, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x4000000000001; swreg:x8; 32*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x4000000000001, x8, 32*XLEN/8);

inst_58:
// rs2_val == -2251799813685249, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x8000000000001; swreg:x8; 33*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x8000000000001, x8, 33*XLEN/8);

inst_59:
// rs2_val == -4503599627370497, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x10000000000001; swreg:x8; 34*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x10000000000001, x8, 34*XLEN/8);

inst_60:
// rs2_val == -9007199254740993, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x20000000000001; swreg:x8; 35*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x20000000000001, x8, 35*XLEN/8);

inst_61:
// rs2_val == -18014398509481985, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x40000000000001; swreg:x8; 36*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x40000000000001, x8, 36*XLEN/8);

inst_62:
// rs2_val == -36028797018963969, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x80000000000001; swreg:x8; 37*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x80000000000001, x8, 37*XLEN/8);

inst_63:
// rs2_val == -72057594037927937, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x100000000000001; swreg:x8; 38*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x100000000000001, x8, 38*XLEN/8);

inst_64:
// rs2_val == -144115188075855873, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x200000000000001; swreg:x8; 39*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x200000000000001, x8, 39*XLEN/8);

inst_65:
// rs2_val == -288230376151711745, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x400000000000001; swreg:x8; 40*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x400000000000001, x8, 40*XLEN/8);

inst_66:
// rs2_val == -576460752303423489, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x800000000000001; swreg:x8; 41*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x800000000000001, x8, 41*XLEN/8);

inst_67:
// rs2_val == -1152921504606846977, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1000000000000001; swreg:x8; 42*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1000000000000001, x8, 42*XLEN/8);

inst_68:
// rs2_val == -2305843009213693953, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x2000000000000001; swreg:x8; 43*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x2000000000000001, x8, 43*XLEN/8);

inst_69:
// rs2_val == -4611686018427387905, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x4000000000000001; swreg:x8; 44*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x4000000000000001, x8, 44*XLEN/8);

inst_70:
// rs1_val == -2, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 45*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 45*XLEN/8);

inst_71:
// rs1_val == -3, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 46*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 46*XLEN/8);

inst_72:
// rs1_val == -5, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 47*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 47*XLEN/8);

inst_73:
// rs1_val == -9, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 48*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 48*XLEN/8);

inst_74:
// rs1_val == -17, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 49*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 49*XLEN/8);

inst_75:
// rs1_val == -33, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 50*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 50*XLEN/8);

inst_76:
// rs1_val == -65, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 51*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 51*XLEN/8);

inst_77:
// rs1_val == -129, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 52*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 52*XLEN/8);

inst_78:
// rs1_val == -257, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 53*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 53*XLEN/8);

inst_79:
// rs1_val == -513, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 54*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 54*XLEN/8);

inst_80:
// rs1_val == -1025, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 55*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 55*XLEN/8);

inst_81:
// rs1_val == -2049, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 56*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 56*XLEN/8);

inst_82:
// rs1_val == -4097, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 57*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 57*XLEN/8);

inst_83:
// rs1_val == -8193, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 58*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 58*XLEN/8);

inst_84:
// rs1_val == -16385, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 59*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 59*XLEN/8);

inst_85:
// rs1_val == -32769, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 60*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 60*XLEN/8);

inst_86:
// rs1_val == -65537, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 61*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 61*XLEN/8);

inst_87:
// rs1_val == -131073, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 62*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 62*XLEN/8);

inst_88:
// rs1_val == -262145, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 63*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 63*XLEN/8);

inst_89:
// rs1_val == -524289, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 64*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 64*XLEN/8);

inst_90:
// rs1_val == -1048577, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 65*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 65*XLEN/8);

inst_91:
// rs1_val == -2097153, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 66*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 66*XLEN/8);

inst_92:
// rs1_val == -4194305, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 67*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 67*XLEN/8);

inst_93:
// rs1_val == -8388609, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 68*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 68*XLEN/8);

inst_94:
// rs1_val == -16777217, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 69*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 69*XLEN/8);

inst_95:
// rs1_val == -33554433, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 70*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 70*XLEN/8);

inst_96:
// rs1_val == -67108865, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 71*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 71*XLEN/8);

inst_97:
// rs1_val == -134217729, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 72*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 72*XLEN/8);

inst_98:
// rs1_val == -268435457, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 73*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 73*XLEN/8);

inst_99:
// rs1_val == -536870913, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 74*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 74*XLEN/8);

inst_100:
// rs1_val == -1073741825, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 75*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 75*XLEN/8);

inst_101:
// rs1_val == -2147483649, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 76*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 76*XLEN/8);

inst_102:
// rs1_val == -4294967297, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 77*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 77*XLEN/8);

inst_103:
// rs1_val == -8589934593, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 78*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 78*XLEN/8);

inst_104:
// rs1_val == -17179869185, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 79*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 79*XLEN/8);

inst_105:
// rs1_val == -34359738369, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 80*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 80*XLEN/8);

inst_106:
// rs1_val == -68719476737, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 81*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 81*XLEN/8);

inst_107:
// rs1_val == -137438953473, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 82*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 82*XLEN/8);

inst_108:
// rs1_val == -274877906945, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 83*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 83*XLEN/8);

inst_109:
// rs1_val == -549755813889, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 84*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 84*XLEN/8);

inst_110:
// rs1_val == -1099511627777, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 85*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 85*XLEN/8);

inst_111:
// rs1_val == -2199023255553, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 86*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 86*XLEN/8);

inst_112:
// rs1_val == -4398046511105, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 87*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 87*XLEN/8);

inst_113:
// rs1_val == -8796093022209, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 88*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 88*XLEN/8);

inst_114:
// rs1_val == -17592186044417, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 89*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 89*XLEN/8);

inst_115:
// rs1_val == -35184372088833, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 90*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 90*XLEN/8);

inst_116:
// rs1_val == -70368744177665, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 91*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 91*XLEN/8);

inst_117:
// rs1_val == -140737488355329, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 92*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 92*XLEN/8);

inst_118:
// rs1_val == -281474976710657, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 93*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 93*XLEN/8);

inst_119:
// rs1_val == -562949953421313, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 94*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 94*XLEN/8);

inst_120:
// rs1_val == -1125899906842625, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 95*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 95*XLEN/8);

inst_121:
// rs1_val == -2251799813685249, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 96*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 96*XLEN/8);

inst_122:
// rs1_val == -4503599627370497, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 97*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 97*XLEN/8);

inst_123:
// rs1_val == -9007199254740993, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 98*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 98*XLEN/8);

inst_124:
// rs1_val == -18014398509481985, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 99*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 99*XLEN/8);

inst_125:
// rs1_val == -36028797018963969, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 100*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 100*XLEN/8);

inst_126:
// rs1_val == -72057594037927937, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 101*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 101*XLEN/8);

inst_127:
// rs1_val == -144115188075855873, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 102*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 102*XLEN/8);

inst_128:
// rs1_val == -288230376151711745, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 103*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 103*XLEN/8);

inst_129:
// rs1_val == -576460752303423489, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 104*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 104*XLEN/8);

inst_130:
// rs1_val == -1152921504606846977, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 105*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 105*XLEN/8);

inst_131:
// rs1_val == -2305843009213693953, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 106*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 106*XLEN/8);

inst_132:
// rs1_val == -4611686018427387905, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 107*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 107*XLEN/8);

inst_133:
// rs2_val == 1, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x1; swreg:x8; 108*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x1, x8, 108*XLEN/8);

inst_134:
// rs2_val == 2, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x2; swreg:x8; 109*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x2, x8, 109*XLEN/8);

inst_135:
// rs1_val == 144115188075855872, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 110*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 110*XLEN/8);

inst_136:
// rs1_val == 288230376151711744, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 111*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 111*XLEN/8);

inst_137:
// rs1_val == 576460752303423488, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 112*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 112*XLEN/8);

inst_138:
// rs1_val == 1152921504606846976, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 113*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 113*XLEN/8);

inst_139:
// rs1_val == 2305843009213693952, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 114*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 114*XLEN/8);

inst_140:
// rs1_val == 4611686018427387904, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 115*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 115*XLEN/8);

inst_141:
// rs2_val == -6148914691236517206, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x5555555555555556; swreg:x8; 116*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x5555555555555556, x8, 116*XLEN/8);

inst_142:
// rs1_val == 6148914691236517205, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 117*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 117*XLEN/8);

inst_143:
// rs1_val == -6148914691236517206, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 118*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 118*XLEN/8);

inst_144:
// rs2_val == 4, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x4; swreg:x8; 119*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x4, x8, 119*XLEN/8);

inst_145:
// rs2_val == 8, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x8; swreg:x8; 120*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x8, x8, 120*XLEN/8);

inst_146:
// rs2_val == 16, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x10; swreg:x8; 121*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x10, x8, 121*XLEN/8);

inst_147:
// rs2_val == 32, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x20; swreg:x8; 122*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x20, x8, 122*XLEN/8);

inst_148:
// rs2_val == 64, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x40; swreg:x8; 123*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x40, x8, 123*XLEN/8);

inst_149:
// rs2_val == 128, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x80; swreg:x8; 124*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x80, x8, 124*XLEN/8);

inst_150:
// rs2_val == 256, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x100; swreg:x8; 125*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x100, x8, 125*XLEN/8);

inst_151:
// rs2_val == 512, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x200; swreg:x8; 126*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x200, x8, 126*XLEN/8);

inst_152:
// rs2_val == 1024, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x400; swreg:x8; 127*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x400, x8, 127*XLEN/8);

inst_153:
// rs2_val == 2048, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x800; swreg:x8; 128*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x800, x8, 128*XLEN/8);

inst_154:
// rs2_val == 4096, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x1000; swreg:x8; 129*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x1000, x8, 129*XLEN/8);

inst_155:
// rs2_val == 8192, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x2000; swreg:x8; 130*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x2000, x8, 130*XLEN/8);

inst_156:
// rs2_val == 16384, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x4000; swreg:x8; 131*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x4000, x8, 131*XLEN/8);

inst_157:
// rs2_val == 32768, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x8000; swreg:x8; 132*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x8000, x8, 132*XLEN/8);

inst_158:
// rs2_val == 65536, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x10000; swreg:x8; 133*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x10000, x8, 133*XLEN/8);

inst_159:
// rs2_val == 131072, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x20000; swreg:x8; 134*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x20000, x8, 134*XLEN/8);

inst_160:
// rs2_val == 262144, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x40000; swreg:x8; 135*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x40000, x8, 135*XLEN/8);

inst_161:
// rs2_val == 524288, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x80000; swreg:x8; 136*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x80000, x8, 136*XLEN/8);

inst_162:
// rs2_val == 1048576, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x100000; swreg:x8; 137*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x100000, x8, 137*XLEN/8);

inst_163:
// rs2_val == 2097152, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x200000; swreg:x8; 138*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x200000, x8, 138*XLEN/8);

inst_164:
// rs2_val == 4194304, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x400000; swreg:x8; 139*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x400000, x8, 139*XLEN/8);

inst_165:
// rs2_val == 8388608, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x800000; swreg:x8; 140*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x800000, x8, 140*XLEN/8);

inst_166:
// rs2_val == 16777216, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x1000000; swreg:x8; 141*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x1000000, x8, 141*XLEN/8);

inst_167:
// rs2_val == 33554432, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x2000000; swreg:x8; 142*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x2000000, x8, 142*XLEN/8);

inst_168:
// rs2_val == 67108864, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x4000000; swreg:x8; 143*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x4000000, x8, 143*XLEN/8);

inst_169:
// rs2_val == 134217728, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x8000000; swreg:x8; 144*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x8000000, x8, 144*XLEN/8);

inst_170:
// rs2_val == 268435456, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x10000000; swreg:x8; 145*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x10000000, x8, 145*XLEN/8);

inst_171:
// rs2_val == 536870912, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x20000000; swreg:x8; 146*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x20000000, x8, 146*XLEN/8);

inst_172:
// rs2_val == 1073741824, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x40000000; swreg:x8; 147*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x40000000, x8, 147*XLEN/8);

inst_173:
// rs2_val == 2147483648, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x80000000; swreg:x8; 148*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x80000000, x8, 148*XLEN/8);

inst_174:
// rs2_val == 4294967296, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x100000000; swreg:x8; 149*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x100000000, x8, 149*XLEN/8);

inst_175:
// rs2_val == 8589934592, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x200000000; swreg:x8; 150*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x200000000, x8, 150*XLEN/8);

inst_176:
// rs2_val == 17179869184, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x400000000; swreg:x8; 151*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x400000000, x8, 151*XLEN/8);

inst_177:
// rs2_val == 34359738368, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x800000000; swreg:x8; 152*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x800000000, x8, 152*XLEN/8);

inst_178:
// rs2_val == 68719476736, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x1000000000; swreg:x8; 153*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x1000000000, x8, 153*XLEN/8);

inst_179:
// rs2_val == 137438953472, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x2000000000; swreg:x8; 154*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x2000000000, x8, 154*XLEN/8);

inst_180:
// rs2_val == 274877906944, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x4000000000; swreg:x8; 155*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x4000000000, x8, 155*XLEN/8);

inst_181:
// rs2_val == 549755813888, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x8000000000; swreg:x8; 156*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x8000000000, x8, 156*XLEN/8);

inst_182:
// rs2_val == 1099511627776, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x10000000000; swreg:x8; 157*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x10000000000, x8, 157*XLEN/8);

inst_183:
// rs2_val == 2199023255552, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x20000000000; swreg:x8; 158*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x20000000000, x8, 158*XLEN/8);

inst_184:
// rs2_val == 4398046511104, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x40000000000; swreg:x8; 159*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x40000000000, x8, 159*XLEN/8);

inst_185:
// rs2_val == 8796093022208, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x80000000000; swreg:x8; 160*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x80000000000, x8, 160*XLEN/8);

inst_186:
// rs2_val == 17592186044416, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x100000000000; swreg:x8; 161*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x100000000000, x8, 161*XLEN/8);

inst_187:
// rs2_val == 35184372088832, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x200000000000; swreg:x8; 162*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x200000000000, x8, 162*XLEN/8);

inst_188:
// rs2_val == 70368744177664, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x400000000000; swreg:x8; 163*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x400000000000, x8, 163*XLEN/8);

inst_189:
// rs2_val == 140737488355328, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x800000000000; swreg:x8; 164*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x800000000000, x8, 164*XLEN/8);

inst_190:
// rs2_val == 281474976710656, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x1000000000000; swreg:x8; 165*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x1000000000000, x8, 165*XLEN/8);

inst_191:
// rs2_val == 562949953421312, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x2000000000000; swreg:x8; 166*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x2000000000000, x8, 166*XLEN/8);

inst_192:
// rs2_val == 1125899906842624, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x4000000000000; swreg:x8; 167*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x4000000000000, x8, 167*XLEN/8);

inst_193:
// rs2_val == 2251799813685248, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x8000000000000; swreg:x8; 168*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x8000000000000, x8, 168*XLEN/8);

inst_194:
// rs2_val == 4503599627370496, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x10000000000000; swreg:x8; 169*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x10000000000000, x8, 169*XLEN/8);

inst_195:
// rs2_val == 9007199254740992, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x20000000000000; swreg:x8; 170*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x20000000000000, x8, 170*XLEN/8);

inst_196:
// rs2_val == 18014398509481984, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x40000000000000; swreg:x8; 171*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x40000000000000, x8, 171*XLEN/8);

inst_197:
// rs2_val == 36028797018963968, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x80000000000000; swreg:x8; 172*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x80000000000000, x8, 172*XLEN/8);

inst_198:
// rs2_val == 72057594037927936, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x100000000000000; swreg:x8; 173*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x100000000000000, x8, 173*XLEN/8);

inst_199:
// rs2_val == 144115188075855872, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x200000000000000; swreg:x8; 174*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x200000000000000, x8, 174*XLEN/8);

inst_200:
// rs2_val == 288230376151711744, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x400000000000000; swreg:x8; 175*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x400000000000000, x8, 175*XLEN/8);

inst_201:
// rs2_val == 576460752303423488, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x800000000000000; swreg:x8; 176*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x800000000000000, x8, 176*XLEN/8);

inst_202:
// rs2_val == 1152921504606846976, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x1000000000000000; swreg:x8; 177*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x1000000000000000, x8, 177*XLEN/8);

inst_203:
// rs2_val == 2305843009213693952, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x2000000000000000; swreg:x8; 178*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x2000000000000000, x8, 178*XLEN/8);

inst_204:
// rs2_val == 4611686018427387904, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x4000000000000000; swreg:x8; 179*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x4000000000000000, x8, 179*XLEN/8);

inst_205:
// rs2_val == 6148914691236517205, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:0x5555555555555555; swreg:x8; 180*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, 0x5555555555555555, x8, 180*XLEN/8);

inst_206:
// rs1_val == 2, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 181*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 181*XLEN/8);

inst_207:
// rs1_val == 4, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 182*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 182*XLEN/8);

inst_208:
// rs1_val == 8, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 183*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 183*XLEN/8);

inst_209:
// rs1_val == 16, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 184*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 184*XLEN/8);

inst_210:
// rs1_val == 32, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 185*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 185*XLEN/8);

inst_211:
// rs1_val == 64, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 186*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 186*XLEN/8);

inst_212:
// rs1_val == 128, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 187*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 187*XLEN/8);

inst_213:
// rs1_val == 256, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 188*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 188*XLEN/8);

inst_214:
// rs1_val == 512, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 189*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 189*XLEN/8);

inst_215:
// rs1_val == 1024, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 190*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 190*XLEN/8);

inst_216:
// rs1_val == 2048, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 191*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 191*XLEN/8);

inst_217:
// rs1_val == 4096, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 192*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 192*XLEN/8);

inst_218:
// rs1_val == 8192, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 193*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 193*XLEN/8);

inst_219:
// rs1_val == 16384, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 194*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 194*XLEN/8);

inst_220:
// rs1_val == 32768, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 195*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 195*XLEN/8);

inst_221:
// rs1_val == 65536, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 196*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 196*XLEN/8);

inst_222:
// rs1_val == 131072, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 197*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 197*XLEN/8);

inst_223:
// rs1_val == 262144, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 198*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 198*XLEN/8);

inst_224:
// rs1_val == 524288, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 199*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 199*XLEN/8);

inst_225:
// rs1_val == 1048576, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 200*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 200*XLEN/8);

inst_226:
// rs1_val == 2097152, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 201*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 201*XLEN/8);

inst_227:
// rs1_val == 4194304, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 202*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 202*XLEN/8);

inst_228:
// rs1_val == 8388608, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 203*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 203*XLEN/8);

inst_229:
// rs1_val == 16777216, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 204*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 204*XLEN/8);

inst_230:
// rs1_val == 33554432, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 205*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 205*XLEN/8);

inst_231:
// rs1_val == 67108864, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 206*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 206*XLEN/8);

inst_232:
// rs1_val == 134217728, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 207*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 207*XLEN/8);

inst_233:
// rs1_val == 268435456, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 208*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 208*XLEN/8);

inst_234:
// rs1_val == 536870912, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 209*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 209*XLEN/8);

inst_235:
// rs1_val == 1073741824, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 210*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 210*XLEN/8);

inst_236:
// rs1_val == 2147483648, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 211*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 211*XLEN/8);

inst_237:
// rs1_val == 4294967296, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 212*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 212*XLEN/8);

inst_238:
// rs1_val == 8589934592, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 213*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 213*XLEN/8);

inst_239:
// rs1_val == 17179869184, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 214*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 214*XLEN/8);

inst_240:
// rs1_val == 34359738368, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 215*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 215*XLEN/8);

inst_241:
// rs1_val == 68719476736, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 216*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 216*XLEN/8);

inst_242:
// rs1_val == 137438953472, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 217*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 217*XLEN/8);

inst_243:
// rs1_val == 274877906944, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 218*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 218*XLEN/8);

inst_244:
// rs1_val == 549755813888, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 219*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 219*XLEN/8);

inst_245:
// rs1_val == 1099511627776, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 220*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 220*XLEN/8);

inst_246:
// rs1_val == 2199023255552, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 221*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 221*XLEN/8);

inst_247:
// rs1_val == 4398046511104, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 222*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 222*XLEN/8);

inst_248:
// rs1_val == 8796093022208, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 223*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 223*XLEN/8);

inst_249:
// rs1_val == 17592186044416, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 224*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 224*XLEN/8);

inst_250:
// rs1_val == 35184372088832, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 225*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 225*XLEN/8);

inst_251:
// rs1_val == 70368744177664, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 226*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 226*XLEN/8);

inst_252:
// rs1_val == 140737488355328, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 227*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 227*XLEN/8);

inst_253:
// rs1_val == 281474976710656, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 228*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 228*XLEN/8);

inst_254:
// rs1_val == 562949953421312, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 229*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 229*XLEN/8);

inst_255:
// rs1_val == 1125899906842624, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 230*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 230*XLEN/8);

inst_256:
// rs1_val == 2251799813685248, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 231*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 231*XLEN/8);

inst_257:
// rs1_val == 4503599627370496, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 232*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 232*XLEN/8);

inst_258:
// rs1_val == 9007199254740992, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 233*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 233*XLEN/8);

inst_259:
// rs1_val == 18014398509481984, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 234*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 234*XLEN/8);

inst_260:
// rs1_val == 36028797018963968, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 235*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 235*XLEN/8);

inst_261:
// rs1_val == 72057594037927936, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x1; swreg:x8; 236*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x1, x8, 236*XLEN/8);

inst_262:
// rs2_val == -33554433, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x2000001; swreg:x8; 237*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x2000001, x8, 237*XLEN/8);

inst_263:
// rs2_val == -134217729, 
// opcode: amocas.w ; dest:x31; addr:x30; src:x29; swap_val:-0x8000001; swreg:x8; 238*XLEN/8
TEST_CAS_OP(amocas.w, x31, x30, x29, -0x8000001, x8, 238*XLEN/8);
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((XLEN/8)/4),4,0xdeadbeef


signature_x1_1:
    .fill 25*((XLEN/8)/4),4,0xdeadbeef


signature_x8_0:
    .fill 239*((XLEN/8)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
