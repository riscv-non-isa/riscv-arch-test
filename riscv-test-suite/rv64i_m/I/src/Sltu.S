
#include "compliance_model.h"
#include "compliance_test.h"

RVTEST_ISA("RV64I")

RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1
RVTEST_CASE(1,"//check ISA:=regex(.*I.*);def TEST_CASE_1=True;",sltu)
la x1,signature_x1_1
TEST_RR_OP(sltu, x31, x30, x29, 1, 0, 18446744073709550591, x1, 0, x2)
TEST_RR_OP(sltu, x30, x31, x28, 0, 18446744073709551615, 18446744073709550591, x1, 8, x2)
TEST_RR_OP(sltu, x29, x28, x31, 1, 1, 18446744073709550591, x1, 16, x2)
TEST_RR_OP(sltu, x28, x29, x30, 0, 18446744073709550591, 0, x1, 24, x2)
TEST_RR_OP(sltu, x27, x26, x25, 1, 18446744073709550591, 18446744073709551615, x1, 32, x2)
TEST_RR_OP(sltu, x26, x27, x24, 0, 18446744073709550591, 1, x1, 40, x2)
TEST_RR_OP(sltu, x25, x24, x27, 0, 18446744073709550591, 18446744073709550591, x1, 48, x2)
TEST_RR_OP(sltu, x24, x25, x26, 1, 2, 18446744073709550591, x1, 56, x2)
TEST_RR_OP(sltu, x23, x22, x21, 1, 4, 18446744073709550591, x1, 64, x2)
TEST_RR_OP(sltu, x22, x23, x20, 1, 8, 18446744073709550591, x1, 72, x2)
TEST_RR_OP(sltu, x21, x20, x23, 1, 16, 18446744073709550591, x1, 80, x2)
TEST_RR_OP(sltu, x20, x21, x22, 1, 32, 18446744073709550591, x1, 88, x2)
TEST_RR_OP(sltu, x19, x18, x17, 1, 64, 18446744073709550591, x1, 96, x2)
TEST_RR_OP(sltu, x18, x19, x16, 1, 128, 18446744073709550591, x1, 104, x2)
TEST_RR_OP(sltu, x17, x16, x19, 1, 256, 18446744073709550591, x1, 112, x2)
TEST_RR_OP(sltu, x16, x17, x18, 1, 512, 18446744073709550591, x1, 120, x2)
TEST_RR_OP(sltu, x15, x14, x13, 1, 1024, 18446744073709550591, x1, 128, x2)
TEST_RR_OP(sltu, x14, x15, x12, 1, 2048, 18446744073709550591, x1, 136, x2)
TEST_RR_OP(sltu, x13, x12, x15, 1, 4096, 18446744073709550591, x1, 144, x2)
TEST_RR_OP(sltu, x12, x13, x14, 1, 8192, 18446744073709550591, x1, 152, x2)
TEST_RR_OP(sltu, x11, x10, x9, 1, 16384, 18446744073709550591, x1, 160, x2)
TEST_RR_OP(sltu, x10, x11, x8, 1, 32768, 18446744073709550591, x1, 168, x2)
TEST_RR_OP(sltu, x9, x8, x11, 1, 65536, 18446744073709550591, x1, 176, x2)
TEST_RR_OP(sltu, x8, x9, x10, 1, 131072, 18446744073709550591, x1, 184, x2)
TEST_RR_OP(sltu, x7, x6, x5, 1, 262144, 18446744073709550591, x1, 192, x2)
TEST_RR_OP(sltu, x6, x7, x4, 1, 524288, 18446744073709550591, x1, 200, x9)
la x8,signature_x8_0
TEST_RR_OP(sltu, x5, x4, x7, 1, 1048576, 18446744073709550591, x8, 0, x9)
TEST_RR_OP(sltu, x4, x5, x6, 1, 2097152, 18446744073709550591, x8, 8, x9)
TEST_RR_OP(sltu, x3, x2, x1, 1, 4194304, 18446744073709550591, x8, 16, x9)
TEST_RR_OP(sltu, x2, x3, x0, 1, 8388608, 18446744073709550591, x8, 24, x9)
TEST_RR_OP(sltu, x1, x0, x3, 1, 16777216, 18446744073709550591, x8, 32, x9)
TEST_RR_OP(sltu, x0, x1, x2, 1, 33554432, 18446744073709550591, x8, 40, x9)
TEST_RR_OP(sltu, x31, x30, x30, 1, 67108864, 18446744073709550591, x8, 48, x9)
TEST_RR_OP(sltu, x31, x31, x30, 1, 134217728, 18446744073709550591, x8, 56, x9)
TEST_RR_OP(sltu, x31, x30, x31, 1, 268435456, 18446744073709550591, x8, 64, x9)
TEST_RR_OP(sltu, x31, x31, x31, 1, 536870912, 18446744073709550591, x8, 72, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 1073741824, 18446744073709550591, x8, 80, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 2147483648, 18446744073709550591, x8, 88, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 4294967296, 18446744073709550591, x8, 96, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 8589934592, 18446744073709550591, x8, 104, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 17179869184, 18446744073709550591, x8, 112, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 34359738368, 18446744073709550591, x8, 120, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 68719476736, 18446744073709550591, x8, 128, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 137438953472, 18446744073709550591, x8, 136, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 274877906944, 18446744073709550591, x8, 144, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 549755813888, 18446744073709550591, x8, 152, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 1099511627776, 18446744073709550591, x8, 160, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 2199023255552, 18446744073709550591, x8, 168, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 4398046511104, 18446744073709550591, x8, 176, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 8796093022208, 18446744073709550591, x8, 184, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 17592186044416, 18446744073709550591, x8, 192, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 35184372088832, 18446744073709550591, x8, 200, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 70368744177664, 18446744073709550591, x8, 208, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 140737488355328, 18446744073709550591, x8, 216, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 281474976710656, 18446744073709550591, x8, 224, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 562949953421312, 18446744073709550591, x8, 232, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 1125899906842624, 18446744073709550591, x8, 240, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 2251799813685248, 18446744073709550591, x8, 248, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 4503599627370496, 18446744073709550591, x8, 256, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 9007199254740992, 18446744073709550591, x8, 264, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18014398509481984, 18446744073709550591, x8, 272, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 36028797018963968, 18446744073709550591, x8, 280, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 72057594037927936, 18446744073709550591, x8, 288, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 144115188075855872, 18446744073709550591, x8, 296, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 288230376151711744, 18446744073709550591, x8, 304, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 576460752303423488, 18446744073709550591, x8, 312, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 1152921504606846976, 18446744073709550591, x8, 320, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 2305843009213693952, 18446744073709550591, x8, 328, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 4611686018427387904, 18446744073709550591, x8, 336, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 9223372036854775808, 18446744073709550591, x8, 344, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709551614, 18446744073709550591, x8, 352, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709551613, 18446744073709550591, x8, 360, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709551611, 18446744073709550591, x8, 368, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709551607, 18446744073709550591, x8, 376, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709551599, 18446744073709550591, x8, 384, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709551583, 18446744073709550591, x8, 392, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709551551, 18446744073709550591, x8, 400, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709551487, 18446744073709550591, x8, 408, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709551359, 18446744073709550591, x8, 416, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709551103, 18446744073709550591, x8, 424, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709549567, 18446744073709550591, x8, 432, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709547519, 18446744073709550591, x8, 440, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709543423, 18446744073709550591, x8, 448, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709535231, 18446744073709550591, x8, 456, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709518847, 18446744073709550591, x8, 464, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709486079, 18446744073709550591, x8, 472, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709420543, 18446744073709550591, x8, 480, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709289471, 18446744073709550591, x8, 488, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709027327, 18446744073709550591, x8, 496, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073708503039, 18446744073709550591, x8, 504, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073707454463, 18446744073709550591, x8, 512, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073705357311, 18446744073709550591, x8, 520, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073701163007, 18446744073709550591, x8, 528, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073692774399, 18446744073709550591, x8, 536, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073675997183, 18446744073709550591, x8, 544, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073642442751, 18446744073709550591, x8, 552, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073575333887, 18446744073709550591, x8, 560, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073441116159, 18446744073709550591, x8, 568, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073172680703, 18446744073709550591, x8, 576, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744072635809791, 18446744073709550591, x8, 584, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744071562067967, 18446744073709550591, x8, 592, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744069414584319, 18446744073709550591, x8, 600, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744065119617023, 18446744073709550591, x8, 608, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744056529682431, 18446744073709550591, x8, 616, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744039349813247, 18446744073709550591, x8, 624, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744004990074879, 18446744073709550591, x8, 632, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446743936270598143, 18446744073709550591, x8, 640, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446743798831644671, 18446744073709550591, x8, 648, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446743523953737727, 18446744073709550591, x8, 656, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446742974197923839, 18446744073709550591, x8, 664, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446741874686296063, 18446744073709550591, x8, 672, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446739675663040511, 18446744073709550591, x8, 680, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446735277616529407, 18446744073709550591, x8, 688, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446726481523507199, 18446744073709550591, x8, 696, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446708889337462783, 18446744073709550591, x8, 704, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446673704965373951, 18446744073709550591, x8, 712, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446603336221196287, 18446744073709550591, x8, 720, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446462598732840959, 18446744073709550591, x8, 728, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446181123756130303, 18446744073709550591, x8, 736, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18445618173802708991, 18446744073709550591, x8, 744, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18444492273895866367, 18446744073709550591, x8, 752, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18442240474082181119, 18446744073709550591, x8, 760, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18437736874454810623, 18446744073709550591, x8, 768, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18428729675200069631, 18446744073709550591, x8, 776, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18410715276690587647, 18446744073709550591, x8, 784, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18374686479671623679, 18446744073709550591, x8, 792, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18302628885633695743, 18446744073709550591, x8, 800, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18158513697557839871, 18446744073709550591, x8, 808, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 17870283321406128127, 18446744073709550591, x8, 816, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 17293822569102704639, 18446744073709550591, x8, 824, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 16140901064495857663, 18446744073709550591, x8, 832, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 13835058055282163711, 18446744073709550591, x8, 840, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 9223372036854775807, 18446744073709550591, x8, 848, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 6148914691236517205, 18446744073709550591, x8, 856, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 12297829382473034410, 18446744073709550591, x8, 864, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 2, x8, 872, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18410715276690587647, x8, 880, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18374686479671623679, x8, 888, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18302628885633695743, x8, 896, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18158513697557839871, x8, 904, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 17870283321406128127, x8, 912, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 17293822569102704639, x8, 920, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 16140901064495857663, x8, 928, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 13835058055282163711, x8, 936, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 9223372036854775807, x8, 944, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 6148914691236517205, x8, 952, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 12297829382473034410, x8, 960, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 4, x8, 968, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 8, x8, 976, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 16, x8, 984, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 32, x8, 992, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 64, x8, 1000, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 128, x8, 1008, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 256, x8, 1016, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 512, x8, 1024, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 1024, x8, 1032, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 2048, x8, 1040, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 4096, x8, 1048, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 8192, x8, 1056, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 16384, x8, 1064, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 32768, x8, 1072, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 65536, x8, 1080, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 131072, x8, 1088, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 262144, x8, 1096, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 524288, x8, 1104, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 1048576, x8, 1112, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 2097152, x8, 1120, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 4194304, x8, 1128, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 8388608, x8, 1136, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 16777216, x8, 1144, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 33554432, x8, 1152, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 67108864, x8, 1160, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 134217728, x8, 1168, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 268435456, x8, 1176, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 536870912, x8, 1184, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 1073741824, x8, 1192, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 2147483648, x8, 1200, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 4294967296, x8, 1208, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 8589934592, x8, 1216, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 17179869184, x8, 1224, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 34359738368, x8, 1232, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 68719476736, x8, 1240, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 137438953472, x8, 1248, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 274877906944, x8, 1256, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 549755813888, x8, 1264, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 1099511627776, x8, 1272, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 2199023255552, x8, 1280, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 4398046511104, x8, 1288, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 8796093022208, x8, 1296, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 17592186044416, x8, 1304, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 35184372088832, x8, 1312, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 70368744177664, x8, 1320, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 140737488355328, x8, 1328, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 281474976710656, x8, 1336, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 562949953421312, x8, 1344, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 1125899906842624, x8, 1352, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 2251799813685248, x8, 1360, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 4503599627370496, x8, 1368, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 9007199254740992, x8, 1376, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18014398509481984, x8, 1384, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 36028797018963968, x8, 1392, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 72057594037927936, x8, 1400, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 144115188075855872, x8, 1408, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 288230376151711744, x8, 1416, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 576460752303423488, x8, 1424, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 1152921504606846976, x8, 1432, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 2305843009213693952, x8, 1440, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 4611686018427387904, x8, 1448, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 9223372036854775808, x8, 1456, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709550591, 18446744073709551614, x8, 1464, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709550591, 18446744073709551613, x8, 1472, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709550591, 18446744073709551611, x8, 1480, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709550591, 18446744073709551607, x8, 1488, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709550591, 18446744073709551599, x8, 1496, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709550591, 18446744073709551583, x8, 1504, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709550591, 18446744073709551551, x8, 1512, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709550591, 18446744073709551487, x8, 1520, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709550591, 18446744073709551359, x8, 1528, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 18446744073709550591, 18446744073709551103, x8, 1536, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073709549567, x8, 1544, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073709547519, x8, 1552, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073709543423, x8, 1560, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073709535231, x8, 1568, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073709518847, x8, 1576, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073709486079, x8, 1584, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073709420543, x8, 1592, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073709289471, x8, 1600, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073709027327, x8, 1608, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073708503039, x8, 1616, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073707454463, x8, 1624, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073705357311, x8, 1632, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073701163007, x8, 1640, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073692774399, x8, 1648, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073675997183, x8, 1656, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073642442751, x8, 1664, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073575333887, x8, 1672, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073441116159, x8, 1680, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744073172680703, x8, 1688, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744072635809791, x8, 1696, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744071562067967, x8, 1704, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744069414584319, x8, 1712, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744065119617023, x8, 1720, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744056529682431, x8, 1728, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744039349813247, x8, 1736, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446744004990074879, x8, 1744, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446743936270598143, x8, 1752, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446743798831644671, x8, 1760, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446743523953737727, x8, 1768, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446742974197923839, x8, 1776, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446741874686296063, x8, 1784, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446739675663040511, x8, 1792, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446735277616529407, x8, 1800, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446726481523507199, x8, 1808, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446708889337462783, x8, 1816, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446673704965373951, x8, 1824, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446603336221196287, x8, 1832, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446462598732840959, x8, 1840, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18446181123756130303, x8, 1848, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18445618173802708991, x8, 1856, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18444492273895866367, x8, 1864, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18442240474082181119, x8, 1872, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18437736874454810623, x8, 1880, x9)
TEST_RR_OP(sltu, x12, x10, x11, 0, 18446744073709550591, 18428729675200069631, x8, 1888, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 8388608, 18446744073709550591, x8, 1896, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 16777216, 18446744073709550591, x8, 1904, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 33554432, 18446744073709550591, x8, 1912, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 67108864, 18446744073709550591, x8, 1920, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 134217728, 18446744073709550591, x8, 1928, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 268435456, 18446744073709550591, x8, 1936, x9)
TEST_RR_OP(sltu, x12, x10, x11, 1, 536870912, 18446744073709550591, x8, 1944, x9)
#endif


RVMODEL_HALT
RVTEST_CODE_END

RVTEST_DATA_BEGIN
.align 4
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
.align 4

signature_x1_0:
    .fill 0*(XLEN/32),4,0xafacadee


signature_x1_1:
    .fill 26*(XLEN/32),4,0xafacadee


signature_x8_0:
    .fill 244*(XLEN/32),4,0xafacadee

RVMODEL_DATA_END
