
#include "compliance_model.h"
#include "compliance_test.h"

RVTEST_ISA("RV64I")

RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1
RVTEST_CASE(1,"//check ISA:=regex(.*RV64.*I.*);def TEST_CASE_1=True;",sd-align)
la x1,signature_x1_1
TEST_STORE(x1,x2,0,x31,x30,-1,-8,0,sd,0)
TEST_STORE(x1,x2,0,x30,x31,-1,-7,8,sd,0)
TEST_STORE(x1,x2,0,x29,x28,-1,-6,16,sd,0)
TEST_STORE(x1,x2,0,x28,x29,-1,-5,24,sd,0)
TEST_STORE(x1,x2,0,x27,x26,-1,-4,32,sd,0)
TEST_STORE(x1,x2,0,x26,x27,-1,-3,40,sd,0)
TEST_STORE(x1,x2,0,x25,x24,-1,-10,48,sd,0)
TEST_STORE(x1,x2,0,x24,x25,-1,2047,56,sd,0)
TEST_STORE(x1,x2,0,x23,x22,-1,0,64,sd,0)
TEST_STORE(x1,x2,0,x22,x23,-9223372036854775808,2047,72,sd,0)
TEST_STORE(x1,x2,0,x21,x20,0,2047,80,sd,0)
TEST_STORE(x1,x2,0,x20,x21,9223372036854775807,2047,88,sd,0)
TEST_STORE(x1,x2,0,x19,x18,1,2047,96,sd,0)
TEST_STORE(x1,x2,0,x18,x19,2,2047,104,sd,0)
TEST_STORE(x1,x2,0,x17,x16,4,2047,112,sd,0)
TEST_STORE(x1,x2,0,x16,x17,8,2047,120,sd,0)
TEST_STORE(x1,x2,0,x15,x14,16,2047,128,sd,0)
TEST_STORE(x1,x2,0,x14,x15,32,2047,136,sd,0)
TEST_STORE(x1,x2,0,x13,x12,64,2047,144,sd,0)
TEST_STORE(x1,x2,0,x12,x13,128,2047,152,sd,0)
TEST_STORE(x1,x2,0,x11,x10,256,2047,160,sd,0)
TEST_STORE(x1,x2,0,x10,x11,512,2047,168,sd,0)
TEST_STORE(x1,x2,0,x9,x8,1024,2047,176,sd,0)
TEST_STORE(x1,x2,0,x8,x9,2048,2047,184,sd,0)
TEST_STORE(x1,x2,0,x7,x6,4096,2047,192,sd,0)
TEST_STORE(x1,x2,0,x6,x7,8192,2047,200,sd,0)
TEST_STORE(x1,x2,0,x5,x4,16384,2047,208,sd,0)
la x6,signature_x6_0
TEST_STORE(x6,x7,0,x4,x5,32768,2047,0,sd,0)
TEST_STORE(x6,x7,0,x3,x2,65536,2047,8,sd,0)
TEST_STORE(x6,x7,0,x2,x3,131072,2047,16,sd,0)
TEST_STORE(x6,x7,0,x1,x0,262144,2047,24,sd,0)
TEST_STORE(x6,x7,0,x31,x1,524288,2047,32,sd,0)
TEST_STORE(x6,x7,0,x10,x11,1048576,2047,40,sd,0)
TEST_STORE(x6,x7,0,x10,x11,2097152,2047,48,sd,0)
TEST_STORE(x6,x7,0,x10,x11,4194304,2047,56,sd,0)
TEST_STORE(x6,x7,0,x10,x11,8388608,2047,64,sd,0)
TEST_STORE(x6,x7,0,x10,x11,16777216,2047,72,sd,0)
TEST_STORE(x6,x7,0,x10,x11,33554432,2047,80,sd,0)
TEST_STORE(x6,x7,0,x10,x11,67108864,2047,88,sd,0)
TEST_STORE(x6,x7,0,x10,x11,134217728,2047,96,sd,0)
TEST_STORE(x6,x7,0,x10,x11,268435456,2047,104,sd,0)
TEST_STORE(x6,x7,0,x10,x11,536870912,2047,112,sd,0)
TEST_STORE(x6,x7,0,x10,x11,1073741824,2047,120,sd,0)
TEST_STORE(x6,x7,0,x10,x11,2147483648,2047,128,sd,0)
TEST_STORE(x6,x7,0,x10,x11,4294967296,2047,136,sd,0)
TEST_STORE(x6,x7,0,x10,x11,8589934592,2047,144,sd,0)
TEST_STORE(x6,x7,0,x10,x11,17179869184,2047,152,sd,0)
TEST_STORE(x6,x7,0,x10,x11,34359738368,2047,160,sd,0)
TEST_STORE(x6,x7,0,x10,x11,68719476736,2047,168,sd,0)
TEST_STORE(x6,x7,0,x10,x11,137438953472,2047,176,sd,0)
TEST_STORE(x6,x7,0,x10,x11,274877906944,2047,184,sd,0)
TEST_STORE(x6,x7,0,x10,x11,549755813888,2047,192,sd,0)
TEST_STORE(x6,x7,0,x10,x11,1099511627776,2047,200,sd,0)
TEST_STORE(x6,x7,0,x10,x11,2199023255552,2047,208,sd,0)
TEST_STORE(x6,x7,0,x10,x11,4398046511104,2047,216,sd,0)
TEST_STORE(x6,x7,0,x10,x11,8796093022208,2047,224,sd,0)
TEST_STORE(x6,x7,0,x10,x11,17592186044416,2047,232,sd,0)
TEST_STORE(x6,x7,0,x10,x11,35184372088832,2047,240,sd,0)
TEST_STORE(x6,x7,0,x10,x11,70368744177664,2047,248,sd,0)
TEST_STORE(x6,x7,0,x10,x11,140737488355328,2047,256,sd,0)
TEST_STORE(x6,x7,0,x10,x11,281474976710656,2047,264,sd,0)
TEST_STORE(x6,x7,0,x10,x11,562949953421312,2047,272,sd,0)
TEST_STORE(x6,x7,0,x10,x11,1125899906842624,2047,280,sd,0)
TEST_STORE(x6,x7,0,x10,x11,2251799813685248,2047,288,sd,0)
TEST_STORE(x6,x7,0,x10,x11,4503599627370496,2047,296,sd,0)
TEST_STORE(x6,x7,0,x10,x11,9007199254740992,2047,304,sd,0)
TEST_STORE(x6,x7,0,x10,x11,18014398509481984,2047,312,sd,0)
TEST_STORE(x6,x7,0,x10,x11,36028797018963968,2047,320,sd,0)
TEST_STORE(x6,x7,0,x10,x11,72057594037927936,2047,328,sd,0)
TEST_STORE(x6,x7,0,x10,x11,144115188075855872,2047,336,sd,0)
TEST_STORE(x6,x7,0,x10,x11,288230376151711744,2047,344,sd,0)
TEST_STORE(x6,x7,0,x10,x11,576460752303423488,2047,352,sd,0)
TEST_STORE(x6,x7,0,x10,x11,1152921504606846976,2047,360,sd,0)
TEST_STORE(x6,x7,0,x10,x11,2305843009213693952,2047,368,sd,0)
TEST_STORE(x6,x7,0,x10,x11,4611686018427387904,2047,376,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-2,2047,384,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-3,2047,392,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-1125899906842625,2047,400,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-2251799813685249,2047,408,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-4503599627370497,2047,416,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-9007199254740993,2047,424,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-18014398509481985,2047,432,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-36028797018963969,2047,440,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-72057594037927937,2047,448,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-144115188075855873,2047,456,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-288230376151711745,2047,464,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-576460752303423489,2047,472,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-1152921504606846977,2047,480,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-2305843009213693953,2047,488,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-4611686018427387905,2047,496,sd,0)
TEST_STORE(x6,x7,0,x10,x11,6148914691236517205,2047,504,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-6148914691236517206,2047,512,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-5,2047,520,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-9,2047,528,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-17,2047,536,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-33,2047,544,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-65,2047,552,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-129,2047,560,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-257,2047,568,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-513,2047,576,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-1025,2047,584,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-2049,2047,592,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-4097,2047,600,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-8193,2047,608,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-16385,2047,616,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-32769,2047,624,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-65537,2047,632,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-131073,2047,640,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-262145,2047,648,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-524289,2047,656,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-1048577,2047,664,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-2097153,2047,672,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-4194305,2047,680,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-8388609,2047,688,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-16777217,2047,696,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-33554433,2047,704,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-67108865,2047,712,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-134217729,2047,720,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-268435457,2047,728,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-536870913,2047,736,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-1073741825,2047,744,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-2147483649,2047,752,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-4294967297,2047,760,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-8589934593,2047,768,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-17179869185,2047,776,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-34359738369,2047,784,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-68719476737,2047,792,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-137438953473,2047,800,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-274877906945,2047,808,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-549755813889,2047,816,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-1099511627777,2047,824,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-2199023255553,2047,832,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-4398046511105,2047,840,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-8796093022209,2047,848,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-17592186044417,2047,856,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-35184372088833,2047,864,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-70368744177665,2047,872,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-140737488355329,2047,880,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-281474976710657,2047,888,sd,0)
TEST_STORE(x6,x7,0,x10,x11,-562949953421313,2047,896,sd,0)
TEST_STORE(x6,x7,0,x10,x11,262144,2047,904,sd,0)
#endif


RVMODEL_HALT
RVTEST_CODE_END

RVTEST_DATA_BEGIN
.align 4
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
.align 4

signature_x1_0:
    .fill 0*(XLEN/32),4,0xafacadee


signature_x1_1:
    .fill 27*(XLEN/32),4,0xafacadee


signature_x6_0:
    .fill 114*(XLEN/32),4,0xafacadee

RVMODEL_DATA_END
