
#include "compliance_model.h"
#include "compliance_test.h"

RVTEST_ISA("RV64I")

RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1
RVTEST_CASE(1,"//check ISA:=regex(.*I.*);def TEST_CASE_1=True;",sh-align)
la x1,signature_x1_1
TEST_STORE(x1,x2,0,x31,x30,-1,-4,0,sh,0)
TEST_STORE(x1,x2,0,x30,x31,-1,-3,8,sh,0)
TEST_STORE(x1,x2,0,x29,x28,-1,-6,16,sh,0)
TEST_STORE(x1,x2,0,x28,x29,-1,2047,24,sh,0)
TEST_STORE(x1,x2,0,x27,x26,-1,-4,32,sh,2)
TEST_STORE(x1,x2,0,x26,x27,-1,-3,40,sh,2)
TEST_STORE(x1,x2,0,x25,x24,-1,-6,48,sh,2)
TEST_STORE(x1,x2,0,x24,x25,-1,2047,56,sh,2)
TEST_STORE(x1,x2,0,x23,x22,-1,0,64,sh,0)
TEST_STORE(x1,x2,0,x22,x23,-9223372036854775808,2047,72,sh,0)
TEST_STORE(x1,x2,0,x21,x20,0,2047,80,sh,0)
TEST_STORE(x1,x2,0,x20,x21,9223372036854775807,2047,88,sh,0)
TEST_STORE(x1,x2,0,x19,x18,1,2047,96,sh,0)
TEST_STORE(x1,x2,0,x18,x19,2,2047,104,sh,0)
TEST_STORE(x1,x2,0,x17,x16,4,2047,112,sh,0)
TEST_STORE(x1,x2,0,x16,x17,8,2047,120,sh,0)
TEST_STORE(x1,x2,0,x15,x14,16,2047,128,sh,0)
TEST_STORE(x1,x2,0,x14,x15,32,2047,136,sh,0)
TEST_STORE(x1,x2,0,x13,x12,64,2047,144,sh,0)
TEST_STORE(x1,x2,0,x12,x13,128,2047,152,sh,0)
TEST_STORE(x1,x2,0,x11,x10,256,2047,160,sh,0)
TEST_STORE(x1,x2,0,x10,x11,512,2047,168,sh,0)
TEST_STORE(x1,x2,0,x9,x8,1024,2047,176,sh,0)
TEST_STORE(x1,x2,0,x8,x9,2048,2047,184,sh,0)
TEST_STORE(x1,x2,0,x7,x6,4096,2047,192,sh,0)
TEST_STORE(x1,x2,0,x6,x7,8192,2047,200,sh,0)
TEST_STORE(x1,x2,0,x5,x4,16384,2047,208,sh,0)
la x6,signature_x6_0
TEST_STORE(x6,x7,0,x4,x5,32768,2047,0,sh,0)
TEST_STORE(x6,x7,0,x3,x2,65536,2047,8,sh,0)
TEST_STORE(x6,x7,0,x2,x3,131072,2047,16,sh,0)
TEST_STORE(x6,x7,0,x1,x0,262144,2047,24,sh,0)
TEST_STORE(x6,x7,0,x31,x1,524288,2047,32,sh,0)
TEST_STORE(x6,x7,0,x10,x11,1048576,2047,40,sh,0)
TEST_STORE(x6,x7,0,x10,x11,2097152,2047,48,sh,0)
TEST_STORE(x6,x7,0,x10,x11,4194304,2047,56,sh,0)
TEST_STORE(x6,x7,0,x10,x11,8388608,2047,64,sh,0)
TEST_STORE(x6,x7,0,x10,x11,16777216,2047,72,sh,0)
TEST_STORE(x6,x7,0,x10,x11,33554432,2047,80,sh,0)
TEST_STORE(x6,x7,0,x10,x11,67108864,2047,88,sh,0)
TEST_STORE(x6,x7,0,x10,x11,134217728,2047,96,sh,0)
TEST_STORE(x6,x7,0,x10,x11,268435456,2047,104,sh,0)
TEST_STORE(x6,x7,0,x10,x11,536870912,2047,112,sh,0)
TEST_STORE(x6,x7,0,x10,x11,1073741824,2047,120,sh,0)
TEST_STORE(x6,x7,0,x10,x11,2147483648,2047,128,sh,0)
TEST_STORE(x6,x7,0,x10,x11,4294967296,2047,136,sh,0)
TEST_STORE(x6,x7,0,x10,x11,8589934592,2047,144,sh,0)
TEST_STORE(x6,x7,0,x10,x11,17179869184,2047,152,sh,0)
TEST_STORE(x6,x7,0,x10,x11,34359738368,2047,160,sh,0)
TEST_STORE(x6,x7,0,x10,x11,68719476736,2047,168,sh,0)
TEST_STORE(x6,x7,0,x10,x11,137438953472,2047,176,sh,0)
TEST_STORE(x6,x7,0,x10,x11,274877906944,2047,184,sh,0)
TEST_STORE(x6,x7,0,x10,x11,549755813888,2047,192,sh,0)
TEST_STORE(x6,x7,0,x10,x11,1099511627776,2047,200,sh,0)
TEST_STORE(x6,x7,0,x10,x11,2199023255552,2047,208,sh,0)
TEST_STORE(x6,x7,0,x10,x11,4398046511104,2047,216,sh,0)
TEST_STORE(x6,x7,0,x10,x11,8796093022208,2047,224,sh,0)
TEST_STORE(x6,x7,0,x10,x11,17592186044416,2047,232,sh,0)
TEST_STORE(x6,x7,0,x10,x11,35184372088832,2047,240,sh,0)
TEST_STORE(x6,x7,0,x10,x11,70368744177664,2047,248,sh,0)
TEST_STORE(x6,x7,0,x10,x11,140737488355328,2047,256,sh,0)
TEST_STORE(x6,x7,0,x10,x11,281474976710656,2047,264,sh,0)
TEST_STORE(x6,x7,0,x10,x11,562949953421312,2047,272,sh,0)
TEST_STORE(x6,x7,0,x10,x11,1125899906842624,2047,280,sh,0)
TEST_STORE(x6,x7,0,x10,x11,2251799813685248,2047,288,sh,0)
TEST_STORE(x6,x7,0,x10,x11,4503599627370496,2047,296,sh,0)
TEST_STORE(x6,x7,0,x10,x11,9007199254740992,2047,304,sh,0)
TEST_STORE(x6,x7,0,x10,x11,18014398509481984,2047,312,sh,0)
TEST_STORE(x6,x7,0,x10,x11,36028797018963968,2047,320,sh,0)
TEST_STORE(x6,x7,0,x10,x11,72057594037927936,2047,328,sh,0)
TEST_STORE(x6,x7,0,x10,x11,144115188075855872,2047,336,sh,0)
TEST_STORE(x6,x7,0,x10,x11,288230376151711744,2047,344,sh,0)
TEST_STORE(x6,x7,0,x10,x11,576460752303423488,2047,352,sh,0)
TEST_STORE(x6,x7,0,x10,x11,1152921504606846976,2047,360,sh,0)
TEST_STORE(x6,x7,0,x10,x11,2305843009213693952,2047,368,sh,0)
TEST_STORE(x6,x7,0,x10,x11,4611686018427387904,2047,376,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-2,2047,384,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-3,2047,392,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-1125899906842625,2047,400,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-2251799813685249,2047,408,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-4503599627370497,2047,416,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-9007199254740993,2047,424,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-18014398509481985,2047,432,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-36028797018963969,2047,440,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-72057594037927937,2047,448,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-144115188075855873,2047,456,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-288230376151711745,2047,464,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-576460752303423489,2047,472,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-1152921504606846977,2047,480,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-2305843009213693953,2047,488,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-4611686018427387905,2047,496,sh,0)
TEST_STORE(x6,x7,0,x10,x11,6148914691236517205,2047,504,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-6148914691236517206,2047,512,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-5,2047,520,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-9,2047,528,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-17,2047,536,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-33,2047,544,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-65,2047,552,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-129,2047,560,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-257,2047,568,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-513,2047,576,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-1025,2047,584,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-2049,2047,592,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-4097,2047,600,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-8193,2047,608,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-16385,2047,616,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-32769,2047,624,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-65537,2047,632,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-131073,2047,640,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-262145,2047,648,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-524289,2047,656,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-1048577,2047,664,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-2097153,2047,672,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-4194305,2047,680,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-8388609,2047,688,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-16777217,2047,696,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-33554433,2047,704,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-67108865,2047,712,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-134217729,2047,720,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-268435457,2047,728,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-536870913,2047,736,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-1073741825,2047,744,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-2147483649,2047,752,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-4294967297,2047,760,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-8589934593,2047,768,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-17179869185,2047,776,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-34359738369,2047,784,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-68719476737,2047,792,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-137438953473,2047,800,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-274877906945,2047,808,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-549755813889,2047,816,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-1099511627777,2047,824,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-2199023255553,2047,832,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-4398046511105,2047,840,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-8796093022209,2047,848,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-17592186044417,2047,856,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-35184372088833,2047,864,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-70368744177665,2047,872,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-140737488355329,2047,880,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-281474976710657,2047,888,sh,0)
TEST_STORE(x6,x7,0,x10,x11,-562949953421313,2047,896,sh,0)
TEST_STORE(x6,x7,0,x10,x11,262144,2047,904,sh,0)
#endif


RVMODEL_HALT
RVTEST_CODE_END

RVTEST_DATA_BEGIN
.align 4
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
.align 4

signature_x1_0:
    .fill 0*(XLEN/32),4,0xafacadee


signature_x1_1:
    .fill 27*(XLEN/32),4,0xafacadee


signature_x6_0:
    .fill 114*(XLEN/32),4,0xafacadee

RVMODEL_DATA_END
