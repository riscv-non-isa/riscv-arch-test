
#include "compliance_model.h"
#include "compliance_test.h"

RVTEST_ISA("RV64I")

RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1
RVTEST_CASE(1,"//check ISA:=regex(.*I.*);def TEST_CASE_1=True;",sltiu)
la x1,signature_x1_1
TEST_IMM_OP( sltiu, x31, x30, 0, 2048, 2048, x1, 0, x2)
TEST_IMM_OP( sltiu, x30, x31, 0, 18446744073709550591, 4095, x1, 8, x2)
TEST_IMM_OP( sltiu, x29, x28, 1, 0, 4095, x1, 16, x2)
TEST_IMM_OP( sltiu, x28, x29, 0, 18446744073709551615, 4095, x1, 24, x2)
TEST_IMM_OP( sltiu, x27, x26, 1, 1, 4095, x1, 32, x2)
TEST_IMM_OP( sltiu, x26, x27, 0, 18446744073709550591, 0, x1, 40, x2)
TEST_IMM_OP( sltiu, x25, x24, 0, 18446744073709550591, 1, x1, 48, x2)
TEST_IMM_OP( sltiu, x24, x25, 1, 2, 4095, x1, 56, x2)
TEST_IMM_OP( sltiu, x23, x22, 1, 4, 4095, x1, 64, x2)
TEST_IMM_OP( sltiu, x22, x23, 1, 8, 4095, x1, 72, x2)
TEST_IMM_OP( sltiu, x21, x20, 1, 16, 4095, x1, 80, x2)
TEST_IMM_OP( sltiu, x20, x21, 1, 32, 4095, x1, 88, x2)
TEST_IMM_OP( sltiu, x19, x18, 1, 64, 4095, x1, 96, x2)
TEST_IMM_OP( sltiu, x18, x19, 1, 128, 4095, x1, 104, x2)
TEST_IMM_OP( sltiu, x17, x16, 1, 256, 4095, x1, 112, x2)
TEST_IMM_OP( sltiu, x16, x17, 1, 512, 4095, x1, 120, x2)
TEST_IMM_OP( sltiu, x15, x14, 1, 1024, 4095, x1, 128, x2)
TEST_IMM_OP( sltiu, x14, x15, 0, 4096, 4095, x1, 136, x2)
TEST_IMM_OP( sltiu, x13, x12, 0, 8192, 4095, x1, 144, x2)
TEST_IMM_OP( sltiu, x12, x13, 0, 16384, 4095, x1, 152, x2)
TEST_IMM_OP( sltiu, x11, x10, 0, 32768, 4095, x1, 160, x2)
TEST_IMM_OP( sltiu, x10, x11, 0, 65536, 4095, x1, 168, x2)
TEST_IMM_OP( sltiu, x9, x8, 0, 131072, 4095, x1, 176, x2)
TEST_IMM_OP( sltiu, x8, x9, 0, 262144, 4095, x1, 184, x2)
TEST_IMM_OP( sltiu, x7, x6, 0, 524288, 4095, x1, 192, x2)
TEST_IMM_OP( sltiu, x6, x7, 0, 1048576, 4095, x1, 200, x2)
TEST_IMM_OP( sltiu, x5, x4, 0, 2097152, 4095, x1, 208, x2)
la x6,signature_x6_0
TEST_IMM_OP( sltiu, x4, x5, 0, 4194304, 4095, x6, 0, x7)
TEST_IMM_OP( sltiu, x3, x2, 0, 8388608, 4095, x6, 8, x7)
TEST_IMM_OP( sltiu, x2, x3, 0, 16777216, 4095, x6, 16, x7)
TEST_IMM_OP( sltiu, x1, x0, 0, 33554432, 4095, x6, 24, x7)
TEST_IMM_OP( sltiu, x0, x1, 0, 67108864, 4095, x6, 32, x7)
TEST_IMM_OP( sltiu, x31, x31, 0, 134217728, 4095, x6, 40, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 268435456, 4095, x6, 48, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 536870912, 4095, x6, 56, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 1073741824, 4095, x6, 64, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 2147483648, 4095, x6, 72, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 4294967296, 4095, x6, 80, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 8589934592, 4095, x6, 88, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 17179869184, 4095, x6, 96, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 34359738368, 4095, x6, 104, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 68719476736, 4095, x6, 112, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 137438953472, 4095, x6, 120, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 274877906944, 4095, x6, 128, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 549755813888, 4095, x6, 136, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 1099511627776, 4095, x6, 144, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 2199023255552, 4095, x6, 152, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 4398046511104, 4095, x6, 160, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 8796093022208, 4095, x6, 168, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 17592186044416, 4095, x6, 176, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 35184372088832, 4095, x6, 184, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 70368744177664, 4095, x6, 192, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 140737488355328, 4095, x6, 200, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 281474976710656, 4095, x6, 208, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 562949953421312, 4095, x6, 216, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 1125899906842624, 4095, x6, 224, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 2251799813685248, 4095, x6, 232, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 4503599627370496, 4095, x6, 240, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 9007199254740992, 4095, x6, 248, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18014398509481984, 4095, x6, 256, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 36028797018963968, 4095, x6, 264, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 72057594037927936, 4095, x6, 272, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 144115188075855872, 4095, x6, 280, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 288230376151711744, 4095, x6, 288, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 576460752303423488, 4095, x6, 296, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 1152921504606846976, 4095, x6, 304, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 2305843009213693952, 4095, x6, 312, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 4611686018427387904, 4095, x6, 320, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 9223372036854775808, 4095, x6, 328, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709551614, 4095, x6, 336, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709551613, 4095, x6, 344, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709551611, 4095, x6, 352, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709551607, 4095, x6, 360, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709551599, 4095, x6, 368, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709551583, 4095, x6, 376, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709551551, 4095, x6, 384, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709551487, 4095, x6, 392, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709551359, 4095, x6, 400, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709551103, 4095, x6, 408, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709549567, 4095, x6, 416, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709547519, 4095, x6, 424, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709543423, 4095, x6, 432, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709535231, 4095, x6, 440, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709518847, 4095, x6, 448, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709486079, 4095, x6, 456, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709420543, 4095, x6, 464, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709289471, 4095, x6, 472, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709027327, 4095, x6, 480, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073708503039, 4095, x6, 488, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073707454463, 4095, x6, 496, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073705357311, 4095, x6, 504, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073701163007, 4095, x6, 512, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073692774399, 4095, x6, 520, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073675997183, 4095, x6, 528, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073642442751, 4095, x6, 536, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18302628885633695743, 4095, x6, 544, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18158513697557839871, 4095, x6, 552, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 17870283321406128127, 4095, x6, 560, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 17293822569102704639, 4095, x6, 568, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 16140901064495857663, 4095, x6, 576, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 13835058055282163711, 4095, x6, 584, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 9223372036854775807, 4095, x6, 592, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 6148914691236517205, 4095, x6, 600, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 12297829382473034410, 4095, x6, 608, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 2, x6, 616, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 4, x6, 624, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 8, x6, 632, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 16, x6, 640, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 32, x6, 648, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 64, x6, 656, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 128, x6, 664, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 256, x6, 672, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 512, x6, 680, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 1024, x6, 688, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 4094, x6, 696, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 4093, x6, 704, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 4091, x6, 712, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 4087, x6, 720, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 4079, x6, 728, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 4063, x6, 736, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 4031, x6, 744, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 3967, x6, 752, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 3839, x6, 760, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 3583, x6, 768, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 3071, x6, 776, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 2047, x6, 784, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 1365, x6, 792, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073709550591, 2730, x6, 800, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073575333887, 4095, x6, 808, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073441116159, 4095, x6, 816, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744073172680703, 4095, x6, 824, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744072635809791, 4095, x6, 832, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744071562067967, 4095, x6, 840, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744069414584319, 4095, x6, 848, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744065119617023, 4095, x6, 856, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744056529682431, 4095, x6, 864, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744039349813247, 4095, x6, 872, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446744004990074879, 4095, x6, 880, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446743936270598143, 4095, x6, 888, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446743798831644671, 4095, x6, 896, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446743523953737727, 4095, x6, 904, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446742974197923839, 4095, x6, 912, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446741874686296063, 4095, x6, 920, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446739675663040511, 4095, x6, 928, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446735277616529407, 4095, x6, 936, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446726481523507199, 4095, x6, 944, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446708889337462783, 4095, x6, 952, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446673704965373951, 4095, x6, 960, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446603336221196287, 4095, x6, 968, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446462598732840959, 4095, x6, 976, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18446181123756130303, 4095, x6, 984, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18445618173802708991, 4095, x6, 992, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18444492273895866367, 4095, x6, 1000, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18442240474082181119, 4095, x6, 1008, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18437736874454810623, 4095, x6, 1016, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18428729675200069631, 4095, x6, 1024, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18410715276690587647, 4095, x6, 1032, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 18374686479671623679, 4095, x6, 1040, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 33554432, 4095, x6, 1048, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 67108864, 4095, x6, 1056, x7)
TEST_IMM_OP( sltiu, x11, x10, 0, 134217728, 4095, x6, 1064, x7)
#endif


RVMODEL_HALT
RVTEST_CODE_END

RVTEST_DATA_BEGIN
.align 4
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
.align 4

signature_x1_0:
    .fill 0*(XLEN/32),4,0xafacadee


signature_x1_1:
    .fill 27*(XLEN/32),4,0xafacadee


signature_x6_0:
    .fill 134*(XLEN/32),4,0xafacadee

RVMODEL_DATA_END
