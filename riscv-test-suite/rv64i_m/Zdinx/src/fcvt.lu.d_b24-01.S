
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Thu Jul  6 07:22:23 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zdinx/fcvt.lu.d.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fcvt.lu.d instruction of the RISC-V RV64_Zfinx_Zdinx extension for the fcvt.lu.d_b24 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fcvt.lu.d_b24)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x5,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1==x28, rd==x30,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x28; dest:x30; op1val:0x0; valaddr_reg:x5;
val_offset:0*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x30, x28, dyn, 0, 0, x5, 0*FLEN/8, x7, x1, x3,LREG)

inst_1:// rs1==x30, rd==x28,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x28; op1val:0x0; valaddr_reg:x5;
val_offset:1*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x28, x30, dyn, 32, 0, x5, 1*FLEN/8, x7, x1, x3,LREG)

inst_2:// rs1==x24, rd==x26,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x24; dest:x26; op1val:0x0; valaddr_reg:x5;
val_offset:2*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x26, x24, dyn, 64, 0, x5, 2*FLEN/8, x7, x1, x3,LREG)

inst_3:// rs1==x26, rd==x24,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x26; dest:x24; op1val:0x0; valaddr_reg:x5;
val_offset:3*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x24, x26, dyn, 96, 0, x5, 3*FLEN/8, x7, x1, x3,LREG)

inst_4:// rs1==x20, rd==x22,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x20; dest:x22; op1val:0x0; valaddr_reg:x5;
val_offset:4*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x22, x20, dyn, 128, 0, x5, 4*FLEN/8, x7, x1, x3,LREG)

inst_5:// rs1==x22, rd==x20,fs1 == 0 and fe1 == 0x3ff and fm1 == 0x1c28f5c28f5c3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x22; dest:x20; op1val:0x3ff1c28f5c28f5c3; valaddr_reg:x5;
val_offset:5*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x20, x22, dyn, 0, 0, x5, 5*FLEN/8, x7, x1, x3,LREG)

inst_6:// rs1==x16, rd==x18,fs1 == 0 and fe1 == 0x3ff and fm1 == 0x1c28f5c28f5c3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x16; dest:x18; op1val:0x3ff1c28f5c28f5c3; valaddr_reg:x5;
val_offset:6*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x18, x16, dyn, 32, 0, x5, 6*FLEN/8, x7, x1, x3,LREG)

inst_7:// rs1==x18, rd==x16,fs1 == 0 and fe1 == 0x3ff and fm1 == 0x1c28f5c28f5c3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x18; dest:x16; op1val:0x3ff1c28f5c28f5c3; valaddr_reg:x5;
val_offset:7*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x16, x18, dyn, 64, 0, x5, 7*FLEN/8, x7, x1, x3,LREG)

inst_8:// rs1==x12, rd==x14,fs1 == 0 and fe1 == 0x3ff and fm1 == 0x1c28f5c28f5c3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x12; dest:x14; op1val:0x3ff1c28f5c28f5c3; valaddr_reg:x5;
val_offset:8*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x14, x12, dyn, 96, 0, x5, 8*FLEN/8, x7, x1, x3,LREG)

inst_9:// rs1==x14, rd==x12,fs1 == 0 and fe1 == 0x3ff and fm1 == 0x1c28f5c28f5c3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x14; dest:x12; op1val:0x3ff1c28f5c28f5c3; valaddr_reg:x5;
val_offset:9*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x12, x14, dyn, 128, 0, x5, 9*FLEN/8, x7, x1, x3,LREG)

inst_10:// rs1==x8, rd==x10,fs1 == 1 and fe1 == 0x3fe and fm1 == 0xc7ae147ae147b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x8; dest:x10; op1val:0xbfec7ae147ae147b; valaddr_reg:x5;
val_offset:10*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x10, x8, dyn, 0, 0, x5, 10*FLEN/8, x7, x1, x3,LREG)

inst_11:// rs1==x10, rd==x8,fs1 == 1 and fe1 == 0x3fe and fm1 == 0xc7ae147ae147b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x10; dest:x8; op1val:0xbfec7ae147ae147b; valaddr_reg:x5;
val_offset:11*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x8, x10, dyn, 32, 0, x5, 11*FLEN/8, x7, x1, x3,LREG)

inst_12:// rs1==x4, rd==x6,fs1 == 1 and fe1 == 0x3fe and fm1 == 0xc7ae147ae147b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x4; dest:x6; op1val:0xbfec7ae147ae147b; valaddr_reg:x5;
val_offset:12*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x6, x4, dyn, 64, 0, x5, 12*FLEN/8, x7, x1, x3,LREG)

inst_13:// rs1==x6, rd==x4,fs1 == 1 and fe1 == 0x3fe and fm1 == 0xc7ae147ae147b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x6; dest:x4; op1val:0xbfec7ae147ae147b; valaddr_reg:x5;
val_offset:13*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x4, x6, dyn, 96, 0, x5, 13*FLEN/8, x7, x1, x3,LREG)

inst_14:// rs1==x2,fs1 == 1 and fe1 == 0x3fe and fm1 == 0xc7ae147ae147b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x2; dest:x31; op1val:0xbfec7ae147ae147b; valaddr_reg:x5;
val_offset:14*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x2, dyn, 128, 0, x5, 14*FLEN/8, x7, x1, x3,LREG)

inst_15:// rd==x2,fs1 == 1 and fe1 == 0x3fb and fm1 == 0x999999999999a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x31; dest:x2; op1val:0xbfb999999999999a; valaddr_reg:x5;
val_offset:15*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x2, x31, dyn, 0, 0, x5, 15*FLEN/8, x7, x1, x3,LREG)

inst_16:// fs1 == 1 and fe1 == 0x3fb and fm1 == 0x999999999999a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfb999999999999a; valaddr_reg:x5;
val_offset:16*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 16*FLEN/8, x7, x1, x3,LREG)

inst_17:// fs1 == 1 and fe1 == 0x3fb and fm1 == 0x999999999999a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfb999999999999a; valaddr_reg:x5;
val_offset:17*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 17*FLEN/8, x7, x1, x3,LREG)

inst_18:// fs1 == 1 and fe1 == 0x3fb and fm1 == 0x999999999999a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfb999999999999a; valaddr_reg:x5;
val_offset:18*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 18*FLEN/8, x7, x1, x3,LREG)

inst_19:// fs1 == 1 and fe1 == 0x3fb and fm1 == 0x999999999999a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfb999999999999a; valaddr_reg:x5;
val_offset:19*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 19*FLEN/8, x7, x1, x3,LREG)

inst_20:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x199999999999a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff199999999999a; valaddr_reg:x5;
val_offset:20*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 20*FLEN/8, x7, x1, x3,LREG)

inst_21:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x199999999999a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff199999999999a; valaddr_reg:x5;
val_offset:21*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 21*FLEN/8, x7, x1, x3,LREG)

inst_22:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x199999999999a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff199999999999a; valaddr_reg:x5;
val_offset:22*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 22*FLEN/8, x7, x1, x3,LREG)

inst_23:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x199999999999a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff199999999999a; valaddr_reg:x5;
val_offset:23*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 23*FLEN/8, x7, x1, x3,LREG)

inst_24:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x199999999999a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff199999999999a; valaddr_reg:x5;
val_offset:24*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 24*FLEN/8, x7, x1, x3,LREG)

inst_25:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x47ae147ae147b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbf847ae147ae147b; valaddr_reg:x5;
val_offset:25*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 25*FLEN/8, x7, x1, x3,LREG)

inst_26:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x47ae147ae147b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbf847ae147ae147b; valaddr_reg:x5;
val_offset:26*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 26*FLEN/8, x7, x1, x3,LREG)

inst_27:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x47ae147ae147b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbf847ae147ae147b; valaddr_reg:x5;
val_offset:27*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 27*FLEN/8, x7, x1, x3,LREG)

inst_28:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x47ae147ae147b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbf847ae147ae147b; valaddr_reg:x5;
val_offset:28*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 28*FLEN/8, x7, x1, x3,LREG)

inst_29:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x47ae147ae147b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbf847ae147ae147b; valaddr_reg:x5;
val_offset:29*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 29*FLEN/8, x7, x1, x3,LREG)

inst_30:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x47ae147ae147b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3f847ae147ae147b; valaddr_reg:x5;
val_offset:30*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 30*FLEN/8, x7, x1, x3,LREG)

inst_31:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x47ae147ae147b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3f847ae147ae147b; valaddr_reg:x5;
val_offset:31*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 31*FLEN/8, x7, x1, x3,LREG)

inst_32:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x47ae147ae147b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3f847ae147ae147b; valaddr_reg:x5;
val_offset:32*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 32*FLEN/8, x7, x1, x3,LREG)

inst_33:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x47ae147ae147b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3f847ae147ae147b; valaddr_reg:x5;
val_offset:33*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 33*FLEN/8, x7, x1, x3,LREG)

inst_34:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x47ae147ae147b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3f847ae147ae147b; valaddr_reg:x5;
val_offset:34*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 34*FLEN/8, x7, x1, x3,LREG)

inst_35:// fs1 == 1 and fe1 == 0x3fb and fm1 == 0xc28f5c28f5c29 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfbc28f5c28f5c29; valaddr_reg:x5;
val_offset:35*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 35*FLEN/8, x7, x1, x3,LREG)

inst_36:// fs1 == 1 and fe1 == 0x3fb and fm1 == 0xc28f5c28f5c29 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfbc28f5c28f5c29; valaddr_reg:x5;
val_offset:36*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 36*FLEN/8, x7, x1, x3,LREG)

inst_37:// fs1 == 1 and fe1 == 0x3fb and fm1 == 0xc28f5c28f5c29 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfbc28f5c28f5c29; valaddr_reg:x5;
val_offset:37*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 37*FLEN/8, x7, x1, x3,LREG)

inst_38:// fs1 == 1 and fe1 == 0x3fb and fm1 == 0xc28f5c28f5c29 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfbc28f5c28f5c29; valaddr_reg:x5;
val_offset:38*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 38*FLEN/8, x7, x1, x3,LREG)

inst_39:// fs1 == 1 and fe1 == 0x3fb and fm1 == 0xc28f5c28f5c29 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfbc28f5c28f5c29; valaddr_reg:x5;
val_offset:39*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 39*FLEN/8, x7, x1, x3,LREG)

inst_40:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff0000000000000; valaddr_reg:x5;
val_offset:40*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 40*FLEN/8, x7, x1, x3,LREG)

inst_41:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff0000000000000; valaddr_reg:x5;
val_offset:41*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 41*FLEN/8, x7, x1, x3,LREG)

inst_42:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff0000000000000; valaddr_reg:x5;
val_offset:42*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 42*FLEN/8, x7, x1, x3,LREG)

inst_43:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff0000000000000; valaddr_reg:x5;
val_offset:43*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 43*FLEN/8, x7, x1, x3,LREG)

inst_44:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff0000000000000; valaddr_reg:x5;
val_offset:44*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 44*FLEN/8, x7, x1, x3,LREG)

inst_45:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc28f5c28f5c29 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fbc28f5c28f5c29; valaddr_reg:x5;
val_offset:45*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 45*FLEN/8, x7, x1, x3,LREG)

inst_46:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc28f5c28f5c29 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fbc28f5c28f5c29; valaddr_reg:x5;
val_offset:46*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 46*FLEN/8, x7, x1, x3,LREG)

inst_47:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc28f5c28f5c29 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fbc28f5c28f5c29; valaddr_reg:x5;
val_offset:47*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 47*FLEN/8, x7, x1, x3,LREG)

inst_48:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc28f5c28f5c29 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fbc28f5c28f5c29; valaddr_reg:x5;
val_offset:48*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 48*FLEN/8, x7, x1, x3,LREG)

inst_49:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc28f5c28f5c29 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fbc28f5c28f5c29; valaddr_reg:x5;
val_offset:49*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 49*FLEN/8, x7, x1, x3,LREG)

inst_50:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccccccccccccd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3feccccccccccccd; valaddr_reg:x5;
val_offset:50*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 50*FLEN/8, x7, x1, x3,LREG)

inst_51:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccccccccccccd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3feccccccccccccd; valaddr_reg:x5;
val_offset:51*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 51*FLEN/8, x7, x1, x3,LREG)

inst_52:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccccccccccccd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3feccccccccccccd; valaddr_reg:x5;
val_offset:52*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 52*FLEN/8, x7, x1, x3,LREG)

inst_53:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccccccccccccd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3feccccccccccccd; valaddr_reg:x5;
val_offset:53*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 53*FLEN/8, x7, x1, x3,LREG)

inst_54:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccccccccccccd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3feccccccccccccd; valaddr_reg:x5;
val_offset:54*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 54*FLEN/8, x7, x1, x3,LREG)

inst_55:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x999999999999a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fb999999999999a; valaddr_reg:x5;
val_offset:55*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 55*FLEN/8, x7, x1, x3,LREG)

inst_56:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x999999999999a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fb999999999999a; valaddr_reg:x5;
val_offset:56*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 56*FLEN/8, x7, x1, x3,LREG)

inst_57:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x999999999999a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fb999999999999a; valaddr_reg:x5;
val_offset:57*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 57*FLEN/8, x7, x1, x3,LREG)

inst_58:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x999999999999a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fb999999999999a; valaddr_reg:x5;
val_offset:58*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 58*FLEN/8, x7, x1, x3,LREG)

inst_59:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x999999999999a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fb999999999999a; valaddr_reg:x5;
val_offset:59*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 59*FLEN/8, x7, x1, x3,LREG)

inst_60:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff0000000000000; valaddr_reg:x5;
val_offset:60*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 60*FLEN/8, x7, x1, x3,LREG)

inst_61:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff0000000000000; valaddr_reg:x5;
val_offset:61*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 61*FLEN/8, x7, x1, x3,LREG)

inst_62:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff0000000000000; valaddr_reg:x5;
val_offset:62*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 62*FLEN/8, x7, x1, x3,LREG)

inst_63:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff0000000000000; valaddr_reg:x5;
val_offset:63*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 63*FLEN/8, x7, x1, x3,LREG)

inst_64:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff0000000000000; valaddr_reg:x5;
val_offset:64*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 64*FLEN/8, x7, x1, x3,LREG)

inst_65:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x028f5c28f5c29 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff028f5c28f5c29; valaddr_reg:x5;
val_offset:65*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 65*FLEN/8, x7, x1, x3,LREG)

inst_66:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x028f5c28f5c29 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff028f5c28f5c29; valaddr_reg:x5;
val_offset:66*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 66*FLEN/8, x7, x1, x3,LREG)

inst_67:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x028f5c28f5c29 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff028f5c28f5c29; valaddr_reg:x5;
val_offset:67*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 67*FLEN/8, x7, x1, x3,LREG)

inst_68:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x028f5c28f5c29 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff028f5c28f5c29; valaddr_reg:x5;
val_offset:68*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 68*FLEN/8, x7, x1, x3,LREG)

inst_69:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x028f5c28f5c29 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff028f5c28f5c29; valaddr_reg:x5;
val_offset:69*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 69*FLEN/8, x7, x1, x3,LREG)

inst_70:// fs1 == 1 and fe1 == 0x3fe and fm1 == 0xfae147ae147ae and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfefae147ae147ae; valaddr_reg:x5;
val_offset:70*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 70*FLEN/8, x7, x1, x3,LREG)

inst_71:// fs1 == 1 and fe1 == 0x3fe and fm1 == 0xfae147ae147ae and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfefae147ae147ae; valaddr_reg:x5;
val_offset:71*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 71*FLEN/8, x7, x1, x3,LREG)

inst_72:// fs1 == 1 and fe1 == 0x3fe and fm1 == 0xfae147ae147ae and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfefae147ae147ae; valaddr_reg:x5;
val_offset:72*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 72*FLEN/8, x7, x1, x3,LREG)

inst_73:// fs1 == 1 and fe1 == 0x3fe and fm1 == 0xfae147ae147ae and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfefae147ae147ae; valaddr_reg:x5;
val_offset:73*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 73*FLEN/8, x7, x1, x3,LREG)

inst_74:// fs1 == 1 and fe1 == 0x3fe and fm1 == 0xfae147ae147ae and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfefae147ae147ae; valaddr_reg:x5;
val_offset:74*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 74*FLEN/8, x7, x1, x3,LREG)

inst_75:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x028f5c28f5c29 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff028f5c28f5c29; valaddr_reg:x5;
val_offset:75*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 75*FLEN/8, x7, x1, x3,LREG)

inst_76:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x028f5c28f5c29 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff028f5c28f5c29; valaddr_reg:x5;
val_offset:76*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 76*FLEN/8, x7, x1, x3,LREG)

inst_77:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x028f5c28f5c29 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff028f5c28f5c29; valaddr_reg:x5;
val_offset:77*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 77*FLEN/8, x7, x1, x3,LREG)

inst_78:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x028f5c28f5c29 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff028f5c28f5c29; valaddr_reg:x5;
val_offset:78*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 78*FLEN/8, x7, x1, x3,LREG)

inst_79:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x028f5c28f5c29 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff028f5c28f5c29; valaddr_reg:x5;
val_offset:79*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 79*FLEN/8, x7, x1, x3,LREG)

inst_80:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1c28f5c28f5c3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff1c28f5c28f5c3; valaddr_reg:x5;
val_offset:80*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 80*FLEN/8, x7, x1, x3,LREG)

inst_81:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1c28f5c28f5c3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff1c28f5c28f5c3; valaddr_reg:x5;
val_offset:81*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 81*FLEN/8, x7, x1, x3,LREG)

inst_82:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1c28f5c28f5c3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff1c28f5c28f5c3; valaddr_reg:x5;
val_offset:82*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 82*FLEN/8, x7, x1, x3,LREG)

inst_83:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1c28f5c28f5c3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff1c28f5c28f5c3; valaddr_reg:x5;
val_offset:83*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 83*FLEN/8, x7, x1, x3,LREG)

inst_84:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x1c28f5c28f5c3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbff1c28f5c28f5c3; valaddr_reg:x5;
val_offset:84*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 84*FLEN/8, x7, x1, x3,LREG)

inst_85:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfae147ae147ae and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fefae147ae147ae; valaddr_reg:x5;
val_offset:85*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 85*FLEN/8, x7, x1, x3,LREG)

inst_86:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfae147ae147ae and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fefae147ae147ae; valaddr_reg:x5;
val_offset:86*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 86*FLEN/8, x7, x1, x3,LREG)

inst_87:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfae147ae147ae and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fefae147ae147ae; valaddr_reg:x5;
val_offset:87*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 87*FLEN/8, x7, x1, x3,LREG)

inst_88:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfae147ae147ae and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fefae147ae147ae; valaddr_reg:x5;
val_offset:88*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 88*FLEN/8, x7, x1, x3,LREG)

inst_89:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfae147ae147ae and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fefae147ae147ae; valaddr_reg:x5;
val_offset:89*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 89*FLEN/8, x7, x1, x3,LREG)

inst_90:// fs1 == 1 and fe1 == 0x3fe and fm1 == 0xccccccccccccd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfeccccccccccccd; valaddr_reg:x5;
val_offset:90*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 90*FLEN/8, x7, x1, x3,LREG)

inst_91:// fs1 == 1 and fe1 == 0x3fe and fm1 == 0xccccccccccccd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfeccccccccccccd; valaddr_reg:x5;
val_offset:91*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 91*FLEN/8, x7, x1, x3,LREG)

inst_92:// fs1 == 1 and fe1 == 0x3fe and fm1 == 0xccccccccccccd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfeccccccccccccd; valaddr_reg:x5;
val_offset:92*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 92*FLEN/8, x7, x1, x3,LREG)

inst_93:// fs1 == 1 and fe1 == 0x3fe and fm1 == 0xccccccccccccd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfeccccccccccccd; valaddr_reg:x5;
val_offset:93*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 93*FLEN/8, x7, x1, x3,LREG)

inst_94:// fs1 == 1 and fe1 == 0x3fe and fm1 == 0xccccccccccccd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0xbfeccccccccccccd; valaddr_reg:x5;
val_offset:94*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 94*FLEN/8, x7, x1, x3,LREG)

inst_95:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7ae147ae147b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fec7ae147ae147b; valaddr_reg:x5;
val_offset:95*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 95*FLEN/8, x7, x1, x3,LREG)

inst_96:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7ae147ae147b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fec7ae147ae147b; valaddr_reg:x5;
val_offset:96*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 96*FLEN/8, x7, x1, x3,LREG)

inst_97:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7ae147ae147b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fec7ae147ae147b; valaddr_reg:x5;
val_offset:97*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 97*FLEN/8, x7, x1, x3,LREG)

inst_98:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7ae147ae147b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fec7ae147ae147b; valaddr_reg:x5;
val_offset:98*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 98*FLEN/8, x7, x1, x3,LREG)

inst_99:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc7ae147ae147b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3fec7ae147ae147b; valaddr_reg:x5;
val_offset:99*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 99*FLEN/8, x7, x1, x3,LREG)

inst_100:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x199999999999a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff199999999999a; valaddr_reg:x5;
val_offset:100*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 0, 0, x5, 100*FLEN/8, x7, x1, x3,LREG)

inst_101:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x199999999999a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff199999999999a; valaddr_reg:x5;
val_offset:101*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:32*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 32, 0, x5, 101*FLEN/8, x7, x1, x3,LREG)

inst_102:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x199999999999a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff199999999999a; valaddr_reg:x5;
val_offset:102*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:64*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 64, 0, x5, 102*FLEN/8, x7, x1, x3,LREG)

inst_103:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x199999999999a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff199999999999a; valaddr_reg:x5;
val_offset:103*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:96*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 96, 0, x5, 103*FLEN/8, x7, x1, x3,LREG)

inst_104:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x199999999999a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fcvt.lu.d ; op1:x30; dest:x31; op1val:0x3ff199999999999a; valaddr_reg:x5;
val_offset:104*FLEN/8; rmval:dyn; correctval:0; testreg:x3;
fcsr_val:128*/
TEST_FPID_OP(fcvt.lu.d, x31, x30, dyn, 128, 0, x5, 104*FLEN/8, x7, x1, x3,LREG)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4607677814759028163,64,FLEN)
NAN_BOXED(4607677814759028163,64,FLEN)
NAN_BOXED(4607677814759028163,64,FLEN)
NAN_BOXED(4607677814759028163,64,FLEN)
NAN_BOXED(4607677814759028163,64,FLEN)
NAN_BOXED(13829563663736771707,64,FLEN)
NAN_BOXED(13829563663736771707,64,FLEN)
NAN_BOXED(13829563663736771707,64,FLEN)
NAN_BOXED(13829563663736771707,64,FLEN)
NAN_BOXED(13829563663736771707,64,FLEN)
NAN_BOXED(13815242216921733530,64,FLEN)
NAN_BOXED(13815242216921733530,64,FLEN)
NAN_BOXED(13815242216921733530,64,FLEN)
NAN_BOXED(13815242216921733530,64,FLEN)
NAN_BOXED(13815242216921733530,64,FLEN)
NAN_BOXED(13831004815617530266,64,FLEN)
NAN_BOXED(13831004815617530266,64,FLEN)
NAN_BOXED(13831004815617530266,64,FLEN)
NAN_BOXED(13831004815617530266,64,FLEN)
NAN_BOXED(13831004815617530266,64,FLEN)
NAN_BOXED(13800290266158863483,64,FLEN)
NAN_BOXED(13800290266158863483,64,FLEN)
NAN_BOXED(13800290266158863483,64,FLEN)
NAN_BOXED(13800290266158863483,64,FLEN)
NAN_BOXED(13800290266158863483,64,FLEN)
NAN_BOXED(4576918229304087675,64,FLEN)
NAN_BOXED(4576918229304087675,64,FLEN)
NAN_BOXED(4576918229304087675,64,FLEN)
NAN_BOXED(4576918229304087675,64,FLEN)
NAN_BOXED(4576918229304087675,64,FLEN)
NAN_BOXED(13815962792862112809,64,FLEN)
NAN_BOXED(13815962792862112809,64,FLEN)
NAN_BOXED(13815962792862112809,64,FLEN)
NAN_BOXED(13815962792862112809,64,FLEN)
NAN_BOXED(13815962792862112809,64,FLEN)
NAN_BOXED(4607182418800017408,64,FLEN)
NAN_BOXED(4607182418800017408,64,FLEN)
NAN_BOXED(4607182418800017408,64,FLEN)
NAN_BOXED(4607182418800017408,64,FLEN)
NAN_BOXED(4607182418800017408,64,FLEN)
NAN_BOXED(4592590756007337001,64,FLEN)
NAN_BOXED(4592590756007337001,64,FLEN)
NAN_BOXED(4592590756007337001,64,FLEN)
NAN_BOXED(4592590756007337001,64,FLEN)
NAN_BOXED(4592590756007337001,64,FLEN)
NAN_BOXED(4606281698874543309,64,FLEN)
NAN_BOXED(4606281698874543309,64,FLEN)
NAN_BOXED(4606281698874543309,64,FLEN)
NAN_BOXED(4606281698874543309,64,FLEN)
NAN_BOXED(4606281698874543309,64,FLEN)
NAN_BOXED(4591870180066957722,64,FLEN)
NAN_BOXED(4591870180066957722,64,FLEN)
NAN_BOXED(4591870180066957722,64,FLEN)
NAN_BOXED(4591870180066957722,64,FLEN)
NAN_BOXED(4591870180066957722,64,FLEN)
NAN_BOXED(13830554455654793216,64,FLEN)
NAN_BOXED(13830554455654793216,64,FLEN)
NAN_BOXED(13830554455654793216,64,FLEN)
NAN_BOXED(13830554455654793216,64,FLEN)
NAN_BOXED(13830554455654793216,64,FLEN)
NAN_BOXED(4607227454796291113,64,FLEN)
NAN_BOXED(4607227454796291113,64,FLEN)
NAN_BOXED(4607227454796291113,64,FLEN)
NAN_BOXED(4607227454796291113,64,FLEN)
NAN_BOXED(4607227454796291113,64,FLEN)
NAN_BOXED(13830464383662245806,64,FLEN)
NAN_BOXED(13830464383662245806,64,FLEN)
NAN_BOXED(13830464383662245806,64,FLEN)
NAN_BOXED(13830464383662245806,64,FLEN)
NAN_BOXED(13830464383662245806,64,FLEN)
NAN_BOXED(13830599491651066921,64,FLEN)
NAN_BOXED(13830599491651066921,64,FLEN)
NAN_BOXED(13830599491651066921,64,FLEN)
NAN_BOXED(13830599491651066921,64,FLEN)
NAN_BOXED(13830599491651066921,64,FLEN)
NAN_BOXED(13831049851613803971,64,FLEN)
NAN_BOXED(13831049851613803971,64,FLEN)
NAN_BOXED(13831049851613803971,64,FLEN)
NAN_BOXED(13831049851613803971,64,FLEN)
NAN_BOXED(13831049851613803971,64,FLEN)
NAN_BOXED(4607092346807469998,64,FLEN)
NAN_BOXED(4607092346807469998,64,FLEN)
NAN_BOXED(4607092346807469998,64,FLEN)
NAN_BOXED(4607092346807469998,64,FLEN)
NAN_BOXED(4607092346807469998,64,FLEN)
NAN_BOXED(13829653735729319117,64,FLEN)
NAN_BOXED(13829653735729319117,64,FLEN)
NAN_BOXED(13829653735729319117,64,FLEN)
NAN_BOXED(13829653735729319117,64,FLEN)
NAN_BOXED(13829653735729319117,64,FLEN)
NAN_BOXED(4606191626881995899,64,FLEN)
NAN_BOXED(4606191626881995899,64,FLEN)
NAN_BOXED(4606191626881995899,64,FLEN)
NAN_BOXED(4606191626881995899,64,FLEN)
NAN_BOXED(4606191626881995899,64,FLEN)
NAN_BOXED(4607632778762754458,64,FLEN)
NAN_BOXED(4607632778762754458,64,FLEN)
NAN_BOXED(4607632778762754458,64,FLEN)
NAN_BOXED(4607632778762754458,64,FLEN)
NAN_BOXED(4607632778762754458,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 210*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
