# For Licence details look at https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg/-/blob/master/LICENSE.incore

fsub_b1:
    config: 
      - check ISA:=regex(.*I.*F.*Zfh.*)
    opcode: 
      fsub.h: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b1(flen,16, "fsub.h", 2)': 0
        
fsub_b2:
    config: 
      - check ISA:=regex(.*I.*F.*Zfh.*)
    opcode: 
      fsub.h: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b2(flen,16, "fsub.h", 2)': 0
        
fsub_b3:
    config: 
      - check ISA:=regex(.*I.*F.*Zfh.*)
    opcode: 
      fsub.h: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b3(flen,16, "fsub.h", 2)': 0
        
fsub_b4:
    config: 
      - check ISA:=regex(.*I.*F.*Zfh.*)
    opcode: 
      fsub.h: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b4(flen,16, "fsub.h", 2)': 0
        
fsub_b5:
    config: 
      - check ISA:=regex(.*I.*F.*Zfh.*)
    opcode: 
      fsub.h: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b5(flen,16, "fsub.h", 2)': 0
        
fsub_b7:
    config: 
      - check ISA:=regex(.*I.*F.*Zfh.*)
    opcode: 
      fsub.h: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b7(flen,16, "fsub.h", 2)': 0
        
fsub_b8:
    config: 
      - check ISA:=regex(.*I.*F.*Zfh.*)
    opcode: 
      fsub.h: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b8(flen,16, "fsub.h", 2)': 0
        
fsub_b10:
    config: 
      - check ISA:=regex(.*I.*F.*Zfh.*)
    opcode: 
      fsub.h: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b10(flen,16, "fsub.h", 2)': 0
        
fsub_b11:
    config: 
      - check ISA:=regex(.*I.*F.*Zfh.*)
    opcode: 
      fsub.h: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b11(flen,16, "fsub.h", 2)': 0
        
fsub_b12:
    config: 
      - check ISA:=regex(.*I.*F.*Zfh.*)
    opcode: 
      fsub.h: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b12(flen,16, "fsub.h", 2)': 0
        
fsub_b13:
    config: 
      - check ISA:=regex(.*I.*F.*Zfh.*)
    opcode: 
      fsub.h: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b13(flen,16, "fsub.h", 2)': 0
