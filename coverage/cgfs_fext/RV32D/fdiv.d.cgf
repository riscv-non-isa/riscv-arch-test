# For Licence details look at https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg/-/blob/master/LICENSE.incore

fdiv.d_b1:
    config: 
      - check ISA:=regex(.*I.*D.*)
    mnemonics: 
      fdiv.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b1(flen,64, "fdiv.d", 2)': 0
        
fdiv.d_b2:
    config: 
      - check ISA:=regex(.*I.*D.*)
    mnemonics: 
      fdiv.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b2(flen,64, "fdiv.d", 2)': 0
        
fdiv.d_b3:
    config: 
      - check ISA:=regex(.*I.*D.*)
    mnemonics: 
      fdiv.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b3(flen,64, "fdiv.d", 2)': 0
        
fdiv.d_b4:
    config: 
      - check ISA:=regex(.*I.*D.*)
    mnemonics: 
      fdiv.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b4(flen,64, "fdiv.d", 2)': 0
        
fdiv.d_b5:
    config: 
      - check ISA:=regex(.*I.*D.*)
    mnemonics: 
      fdiv.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b5(flen,64, "fdiv.d", 2)': 0

fdiv.d_b6:
    config: 
      - check ISA:=regex(.*I.*D.*)
    mnemonics: 
      fdiv.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b6(flen,64, "fdiv.d", 2)': 0
        
fdiv.d_b7:
    config: 
      - check ISA:=regex(.*I.*D.*)
    mnemonics: 
      fdiv.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b7(flen,64, "fdiv.d", 2)': 0
        
fdiv.d_b8:
    config: 
      - check ISA:=regex(.*I.*D.*)
    mnemonics: 
      fdiv.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b8(flen,64, "fdiv.d", 2)': 0
        
fdiv.d_b9:
    config: 
      - check ISA:=regex(.*I.*D.*)
    mnemonics: 
      fdiv.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b9(flen,64, "fdiv.d", 2)': 0

fdiv.d_b20:
    config: 
      - check ISA:=regex(.*I.*D.*)
    mnemonics: 
      fdiv.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b20(flen,64, "fdiv.d", 2)': 0
        
fdiv.d_b21:
    config: 
      - check ISA:=regex(.*I.*D.*)
    mnemonics: 
      fdiv.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b21(flen,64, "fdiv.d", 2)': 0
